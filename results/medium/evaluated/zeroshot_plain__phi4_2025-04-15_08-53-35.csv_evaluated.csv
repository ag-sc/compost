id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
465,68,test,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v7 . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Anne of Brittany's child who is royalty
  ?anneChild dbo:spouse ?royalty1 .
  ?anneChild dbo:parent dbr:Anne_of_Brittany .

  # Ercole II d'Este's parent and their child
  ?ercoleParent dbo:child ?ercoleChild .
  ?ercoleParent dbp:name ""Alfonso I d'Este"" .

  # Elizabeth of Austria's parent and their royal child
  ?elizabethParent dbo:child ?royalty2 .
  ?elizabethParent dbp:spouse ?parentOfElizabeth .
  ?parentOfElizabeth dbp:name ""Ferdinand I, Holy Roman Emperor"" .

  # Successor of the royalty child from Anne of Brittany
  ?successor dbo:predecessor ?royalty1 .

  # Ensure the successor is also a successor to Ercole II d'Este's parent's child and Elizabeth's parent's royal child
  ?successor dbo:predecessor ?ercoleChild .
  ?successor dbo:predecessor ?royalty2 .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
417,64,test,"Give me the child of Christian X of Denmark and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChristianX ?spouseOfChild ?grandchildOfKnud ?royaltyGrandchild ?parentOfAlexandrine ?royaltyParentChild
WHERE {
  # Christian X of Denmark's child and spouse of the child
  ?christianX dbo:spouse ?queenAlexandra .
  ?christianX dbp:children ?childOfChristianX .
  
  ?childOfChristianX dbo:spouse ?spouseOfChild .

  # Knud, Hereditary Prince of Denmark's grandchild who is royalty
  ?knud dbp:children ?childOfKnud .
  ?childOfKnud dbp:children ?grandchildOfKnud .
  
  FILTER (STRSTARTS(STR(?grandchildOfKnud), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?grandchildOfKnud dbo:royalTitle ?title })

  # Alexandrine of Mecklenburg-Schwerin's parent and their royal child
  ?alexandrine dbp:fatherOrMother ?parentOfAlexandrine .
  
  ?parentOfAlexandrine dbp:children ?royaltyParentChild .
  
  FILTER (STRSTARTS(STR(?parentOfAlexandrine), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?parentOfAlexandrine dbo:royalTitle ?title } &&
          EXISTS { ?royaltyParentChild dbo:royalTitle ?childTitle })
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
917,67,test,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and parent of Albert Kamehameha and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Kamehameha III's child who is royalty and parent of Albert Kamehameha
  ?kamehamehaIIIChild dbo:parent dbr:Kamehameha_III ;
                     a dbo:RoyalPerson ;
                     dbo:child ?albertParent .

  # Albert Kamehameha's parent
  ?albertParent dbo:child dbr:Albert_Kamehameha .

  # Leleiohoku I's spouse and the father of that spouse
  ?leleiohokuSpouse dbo:spouse dbr:Leleiohoku_I ;
                   dbo:parent ?fatherOfSpouse .

  # The child we are looking for is both a parent of Albert Kamehameha and related to Leleiohoku I's spouse's father
  ?kamehamehaIIIChild = ?albertParent .
  ?fatherOfSpouse = dbr:Kamehameha_III .

}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
5,18,test,"Give me the entity in the award of Coro de la Pontificia Universidad Católica de Puerto Rico and birthplace of the person born, that is a politician, as the award of Renata Adler.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?birthPlace WHERE {
  ?entity a dbo:Person .
  ?entity dbo:awardReceived dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico ;
           dbo:occupation dbr:Politician .

  ?entity dbo:awardReceived ?renataAdlerAward .
  
  OPTIONAL { ?entity dbo:birthPlace ?birthPlace . }

  FILTER EXISTS {
    ?renataAdlerAward dbo:wikiPageRedirects ?adlerRelatedAward .
    ?adlerRelatedAward rdfs:label ""Renata Adler""@en
  }
}
```

This query does the following:
- Selects entities that are persons and have received both specified awards.
- Ensures the entity is a politician.
- Retrieves their birthplace if available.",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
459,26,test,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore and governor of Dana Murphy and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?governorRoquemore ?governorMurphy WHERE {
  # Find the death place of Cliff Roquemore
  ?cliffRoquemore dbo:deathPlace ?deathPlaceRoquemore .
  dbr:Cliff_Roquemore ?cliffRoquemore .

  # Ensure it's a settlement
  ?deathPlaceRoquemore rdf:type dbo:Settlement .

  # Find the governor of that settlement
  ?deathPlaceRoquemore dbp:governor ?governorRoquemore .

  # Find the death place of Dana Murphy
  ?danaMurphy dbo:deathPlace ?deathPlaceMurphy .
  dbr:Dana_Murphy ?danaMurphy .

  # Ensure it's a settlement
  ?deathPlaceMurphy rdf:type dbo:Settlement .

  # Find the governor of that settlement
  ?deathPlaceMurphy dbp:governor ?governorMurphy .
}

# Find Kevin Stitt's birth name
SELECT DISTINCT ?birthName WHERE {
  dbr:Kevin_Stitt dbo:birthName ?birthName .
}

# Find a person born with that name
SELECT DISTINCT ?person WHERE {
  ?person dbo:birthName ?birthName .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
329,27,test,"Give me the entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist) and entity in the region, that is a country, of Western European Time and birthplace of Eric Cross (writer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity1 ?entity2 ?entity3 WHERE {
  # Robert Bates (loyalist)
  OPTIONAL {
    ?bates a dbo:Loyalist .
    ?bates dbo:birthPlace ?place1 .
    ?place1 rdf:type/(dbo:Country|dbo:Organisation) ?type1 .
    FILTER(?type1 = dbo:Country && ?type1 = dbo:Organisation)
    BIND(?place1 AS ?entity1)
  }

  # Western European Time
  OPTIONAL {
    dbr:Western_European_Time dbo:region ?place2 .
    ?place2 rdf:type dbo:Country .
    BIND(?place2 AS ?entity2)
  }

  # Eric Cross (writer)
  OPTIONAL {
    ?cross a dbo:Writer .
    ?cross dbo:birthPlace ?place3 .
    BIND(?place3 AS ?entity3)
  }
}
```",5,8,6,2,3,2,3,28,0,14849,1,0.0,0.0,0
47,56,test,"Give me the office of the administration of Jagdeep Dhankhar and office of Bidesh Ranjan Bose and office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office WHERE {
  VALUES ?person { 
    dbr:Jagdeep_Dhankhar 
    dbr:Bidesh_Ranjan_Bose
    ?awardee
  }
  
  OPTIONAL { ?person dbo:office ?office . }

  FILTER (?person = ?awardee)
  {
    SELECT DISTINCT ?awardee WHERE {
      ?award dbo:recipient ?awardee .
      ?award dbo:country dbr:India .
    }
  }
}
```

This query does the following:
- Selects individuals (Jagdeep Dhankhar, Bidesh Ranjan Bose, and any awardee of an award in India).
- Retrieves their offices using `dbo:office`.
- Uses a subquery to find awardees of awards given in India.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
865,68,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  # Syeda Shahar Banu's spouse
  ?spouse a dbo:Spouse;
          dbo:spouse dbr:Syeda_Shahar_Banu.

  # Child of Syeda Shahar Banu's spouse who is a politician
  ?politician dbo:parent ?spouse;
              a dbo:Politician.

  # Father of Abu Ahmad Abdul Hafiz's child and the politician
  ?father dbo:child ?politician,
          dbo:child dbr:Abu_Ahmad_Abdul_Hafiz.

  # Person decedent at Patna
  ?father dbo:deathPlace dbr:Patna.

  # Residence of this person (country)
  ?residence dbo:resident ?father;
              a dbo:Country.
  
  # Native country of the residence
  ?nativeCountry dbo:nativeOf ?residence.
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
865,67,test,"Give me the father of the child of the father of Abul Maal Abdul Muhith and native of British Raj and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  # Step 1: Find Abul Maal Abdul Muhith's father
  ?abulMaal a dbo:Person ;
            foaf:name ""Abul Maal Abdul Muhith"" .
  
  ?abulMaalFather dbo:child ?abulMaal .

  # Step 2: Find the grandfather (father of Abul Maal's father)
  ?grandfather dbo:child ?abulMaalFather .

  # Step 3: Find a child of this grandfather who is native to British Raj and a politician
  ?politicianChild dbo:parent ?grandfather ;
                  dbo:nationality dbr:British_Raj ;
                  dbo:occupation dbr:Politician .

  # Step 4: Identify the spouse of Syeda Shahar Banu
  ?syedaShaharBanu a dbo:Person ;
                   foaf:name ""Syeda Shahar Banu"" .
  
  ?spouse dbo:mother ?syedaShaharBanu ;
          dbo:child ?spouseChild .

  # Step 5: Find the child of this spouse's child
  ?politicianChild2 dbo:parent ?spouseChild .

  # Final condition: The politician child from step 3 is the same as the child from step 5
  FILTER (?politicianChild = ?politicianChild2)
  
  # Return the father of the politician child
  ?politicianChild dbo:father ?father .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
965,69,test,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse
WHERE {
    # Step 1: Identify Louise Mountbatten's parent
    ?louise a dbo:Person ;
           foaf:name ""Louise Mountbatten""@en .
    
    ?parent dbo:child ?louise .

    # Step 2: Find the spouse of that parent
    ?spouseOfParent dbo:spouse ?parent .

    # Step 3: Identify George Mountbatten, 2nd Marquess of Milford Haven and his parent
    ?george a dbo:Person ;
            foaf:name ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
    
    ?parentOfGeorge dbo:child ?george .

    # Step 4: Find the child who is royalty of Prince Louis of Battenberg
    ?princeLouis a dbo:Person ;
                foaf:name ""Prince Louis of Battenberg""@en .
    
    ?royaltyChild dbo:child ?princeLouis ;
                  dbo:nationality dbr:RoyalFamily .

    # Find the spouse of the spouse identified in step 3
    ?spouseOfSpouse dbo:spouse ?parentOfGeorge .
}",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
839,69,test,"Give me the band of the member of Böhse Onkelz and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v7 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band1 ?band2 ?band3 WHERE {
  # Band of a member of Böhse Onkelz
  ?member dbo:memberOf dbr:Böhse_Onkelz .
  ?member dbo:band ?band1 .

  # Band associated with Kevin Russell as a musical artist
  ?kevin dbo:birthName ""Kevin Russell"" .
  ?kevin dbo:associatedBand ?band2 .

  # Band of a band that is a musical artist (interpreted as subgroups)
  ?subgroup dbo:band ?parentBand .
  ?parentBand dbo:genre dbr:Musical_artist .
  ?subgroup dbo:name ?band3 .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
573,57,test,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName WHERE {
  # Step 1: Identify the author of Exchequer Standards
  ?author dbo:work dbr:Exchequer_Standards .
  
  # Step 2: Find the parent who is a politician and office holder
  ?author dbo:parent ?parent .
  ?parent rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Step 3: Determine where this politician lived (residence as a settlement)
  ?parent dbo:residence ?settlement .
  
  # Step 4: Identify an American professional in politics
  ?professional dbo:nationality dbr:United_States ;
                rdf:type dbo:Politician .

  # Step 5: Ensure the person died in Massachusetts
  ?parent dbo:deathPlace dbr:Massachusetts .

  # Return the name of the parent
  ?parent rdfs:label ?parentName .
  
  FILTER (lang(?parentName) = 'en')
}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
839,56,test,"Give me the band of the band, that is a musical artist, of the professional in Musician and band of the person born, that is a musical artist, as Kevin Richard Russell and band of Peter Schorowsky.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonBand WHERE {
  # Kevin Richard Russell's band
  dbr:Kevin_Russell a dbo:MusicalArtist ;
                     dbo:band dbr:KevinRussellBand .

  # Peter Schorowsky's band
  dbr:Peter_Schorowsky a dbo:MusicalArtist ;
                       dbo:band ?schorowskyBand .

  # Find the common band
  ?commonBand owl:sameAs dbr:KevinRussellBand .
  ?commonBand owl:sameAs ?schorowskyBand .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
965,59,test,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseOfSpouse
WHERE {
  # Step 1: Louise Mountbatten
  ?louise a dbo:Person ;
          foaf:name ""Louise Mountbatten""@en .

  # Step 2: Parent of Louise Mountbatten
  ?parent dbo:child ?louise .

  # Step 3: Spouse of that parent
  ?spouseOfParent dbo:spouse ?parent .

  # Step 4: Child of that spouse who is royalty
  ?royalChild dbo:parent ?spouseOfParent ;
              a dbo:Monarch .

  # Step 5: Parent of that royal child
  ?parentOfRoyalChild dbo:child ?royalChild .

  # Step 6: Person born on 1854-05-24 who is a politician
  ?politician a dbo:Politician ;
             dbp:birthday ""1854-05-24""^^xsd:date .

  # Step 7: Child of that person
  ?childOfPolitician dbo:parent ?politician .

  # Step 8: Spouse of that child
  ?spouseOfSpouse dbo:spouse ?childOfPolitician .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
987,65,test,"Give me the entity in the region, that is a country, of Central European Time and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/property/starring> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  # Find countries in the Central European Time region
  ?country a dbo:Country ;
           dbo:timeZone dbr:Central_European_Time .

  # Find an actor from a film with Emir Hadžihafizbegović and their birthplace
  ?film dbo:starring dbr:Emir_Hadžihafizbegović ;
        dbo:actor ?actor .
  ?actor dbp:birthPlace ?actorBirthPlace .

  # Find the band associated with Šako Polumenta and its birthplace
  ?band a dbo:Band, dbo:MusicalArtist ;
        dbo:member dbr:Šako_Polumenta .
  ?band dbp:birthPlace ?bandBirthPlace .

  # Ensure both birthplaces are in the same country
  FILTER (?actorBirthPlace = ?bandBirthPlace)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
791,70,test,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v7 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v7 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Emperor Go-Shirakawa's grandchild who is an office holder and royalty
  ?grandchild dbo:parent ?child .
  ?child dbo:parent dbr:Emperor_Go-Shirakawa .
  ?grandchild a dbo:Royalty ;
             a dbo:OfficeHolder .

  # Step 2: Father of the grandchild, who is royalty
  ?father dbo:spouse ?mother .
  ?mother dbo:parent ?grandchild .
  ?father a dbo:Royalty .

  # Step 3: Father's father (Emperor Antoku's father) who is royalty and an office holder
  ?greatFather dbo:spouse ?greatMother .
  ?greatFather dbo:parent ?father .
  ?greatFather a dbo:Royalty ;
              a dbo:OfficeHolder .

  # Step 4: Spouse of Emperor Antoku's father (Emperor Takakura)
  ?spouse dbo:spouse ?greatFather .
  ?spouse a dbo:Royalty .

  # Step 5: Predecessor of the grandchild
  ?predecessor dbo:successor ?grandchild .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
18,27,test,"Give me the professional in  and alumnus of the figure known, that is an educational institution, as Saints and parent of the professional in Actress.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus ?parent WHERE {
  # Step 1: Identify the educational institution known as ""Saints""
  ?institution a dbo:EducationalInstitution ;
               rdfs:label ""Saints""@en .

  # Step 2: Find alumni of this institution who are professionals in some field
  ?alumnus dbo:almaMater ?institution ;
           dbo:profession ?profession .

  # Step 3: Determine the parent of these professionals who is an actress
  ?parent dbo:child ?alumnus ;
          dbo:profession dbr:Actress .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
773,63,test,"Give me the parent of the successor of Charles the Bald and spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v6 . ?v4 <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Charles the Bald and his successor
  dbr:Charles_the_Bald dbo:succeededBy dbr:Louis_II_of_Lombardy .
  
  # Parent of Louis II (successor)
  dbr:Louis_II_of_Lombardy dbo:parent dbr:Charles_the_Bald .

  # Spouse of Charles the Bald
  dbr:Charles_the_Bald dbo:spouse ?spouse1 .

  # Bernard's father
  dbr:Bernard_I_of_Saxony dbo:father dbr:Charles_the_Fat .

  # Child of Louis the German who is royalty
  dbr:Cadalhoh_of_Frankenland dbo:parent dbr:Louis_the_German .
  
  # Parent of Carloman of Bavaria (child of Louis the German)
  dbr:Carloman_of_Bavaria dbo:parent ?parentJudith .

  # Spouse of parent of Judith
  ?parentJudith dbo:spouse ?spouse2 .

  FILTER (?spouse1 = ?spouse2)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
236,18,test,"Give me the party member of the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts and party member of the administration of James Madison.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/party> ?v3 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?partyMemberOfAdministration
WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolder true ;
          dbo:deathPlace dbr:Quincy,_Massachusetts .

  ?person dbo:politicalParty ?party .
  
  ?administration dbo:member ?person ;
                  dbo:head dbr:James_Madison .

  ?otherAdministration dbo:member ?person ;
                       dbp:party ?party .

  FILTER(?administration != ?otherAdministration)
}
```",5,8,6,3,2,3,2,20,0,0,19,0,0.0,0
645,60,test,"Give me the commander in the force of the commander in Siege of Madrid and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?siege dbo:eventLocation dbr:Madrid .
  ?siege dbo:participatedIn dbr:Spanish_Civil_War .
  ?force dbo:commandedBy ?commander .
  ?commander dbo:nationality dbr:Spain .
  ?commander dbo:birthPlace dbr:Restoration_(Spain) .
  ?office dbo:head ?commander ;
          a dbo:GovernmentAgency, dbo:Organization .
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
442,8,test,Give me the resting place of Allyn K. Capron and resting place of the actor of This Side of Heaven.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allyn_K._Capron> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/This_Side_of_Heaven> <http://dbpedia.org/ontology/starring> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?restingPlace WHERE {
  # Allyn K. Capron's resting place
  OPTIONAL {
    VALUES (?person) { dbr:Allyn_K._Capron }
    ?person dbo:name ?name .
    ?person dbo:placeOfBurial ?restingPlace .
  }

  # Actor of ""This Side of Heaven""
  OPTIONAL {
    ?film dbo:starring ?actor .
    ?film dbo:title ""This Side of Heaven"" .
    ?actor dbo:name ?actorName .
    ?actor dbo:placeOfBurial ?actorRestingPlace .
    
    BIND(CONCAT(?actorName, "" (actor of This Side of Heaven)"") AS ?name)
    BIND(?actorRestingPlace AS ?restingPlace)
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
216,61,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v5 . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Step 1: Get Pavel Vezhinov's date of death
  dbr:Pavel_Vezhinov dbo:dateOfDeath ?deathDate .

  # Step 2: Find individuals born on that date who are sports managers, soccer managers, and players
  ?person dbo:birthDate ?birthDate .
  FILTER (?birthDate = ?deathDate)
  
  ?person dbo:occupation dbr:Soccer_manager ;
          dbo:occupation dbr:Sports_manager ;
          dbo:occupation dbr:Soccer_player .

  # Step 3: Find Džemal Berberović's team when he was a player and coach
  dbr:Džemal_Berberović dbo:team ?team .
  
  ?džemalOccupation1 dbo:agent dbr:Džemal_Berberović ;
                     rdf:type dbo:Soccer_player .
  ?džemalOccupation2 dbo:agent dbr:Džemal_Berberović ;
                     rdf:type dbo:Sports_manager .
  ?džemalOccupation3 dbo:agent dbr:Džemal_Berberović ;
                     rdf:type dbo:Soccer_manager .

  # Step 4: Ensure the team is an organization, sports club, or soccer club
  ?team a (dbo:SportsClub | dbo:SoccerClub | dbo:Organization) .
}
```",6,15,7,3,2,3,3,71,0,0,1,0,0.0,0
365,18,test,"Give me the person born as the birth name of the commander, that is an office holder, in Ukrainian–Soviet War and spouse of the native, that is a politician, of Poltava Governorate.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?commander dbo:birthName ?birthName .
  ?commander dbo:officeHolder true .
  ?commander dbo:spouse ?spouse .

  ?politician dbo:nativePlace dbr:Poltava_Governorate ;
              dbo:occupation dbp:Politician .

  ?spouse dbo:spouse ?politician ;
          dbo:birthName ?birthName .

  ?person dbo:birthName ?birthName .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
965,62,test,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of the parent of Louise Mountbatten and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Step 1: George Mountbatten, 2nd Marquess of Milford Haven's parent
  dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven dbo:parent ?georgeParent .

  # Step 2: Spouse of the spouse of the parent of Louise Mountbatten
  dbr:Louise_Mountbatten dbo:parent ?louiseParent .
  ?louiseParent dbo:spouse ?louiseSpouse .
  ?louiseSpouse dbo:spouse ?secondSpouse .

  # Step 3: Parent of the child, that is a royalty, of the politician born on 1854-05-24
  {
    SELECT ?politician WHERE {
      ?politician dbo:birthday ""1854-05-24""^^xsd:date .
      ?politician rdf:type dbo:Politician .
    }
  } AS %politician

  ?politician dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Royal .
  ?royalChild dbo:parent ?royalParent .

  # Find the common entity
  FILTER (?georgeParent = ?secondSpouse && ?royalParent = ?secondSpouse)

  # Get the parent of this common entity
  ?commonEntity dbo:spouse ?commonEntitySpouse .
  ?commonEntitySpouse dbo:parent ?parent .
}",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
573,59,test,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://dbpedia.org/property/governor> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?settlement
WHERE {
  # Step 1: Find Charlie Baker (Australian footballer) and his real name
  ?charlieBaker a dbo:AustralianFootballer ;
                foaf:name ""Charlie Baker"" ;
                dbo:birthName ?realName .

  # Step 2: Find the region where he is a decedent at the administration
  ?region dbo:administrativeRegionOf ?realName .

  # Step 3: Identify an American politician who is a professional in politics
  ?politician a dbo:Politician ;
              foaf:nationality dbr:United_States ;
              dbo:profession dbr:Politics .

  # Step 4: Find the settlement where this politician is a decedent at the residence
  ?settlement dbo:settlementOf ?politician .
}",6,9,7,3,2,3,3,71,0,0,400,0,0.0,0
839,61,test,"Give me the band of the member of the band, that is a band and a group, of Peter Schorowsky and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band1 ?band2 WHERE {
  # Find Peter Schorowsky's band that is both a band and a group
  ?person rdfs:label ""Peter Schorowsky""@en .
  ?person dbo:member ?band1 .
  ?band1 rdf:type dbo:Band ;
         dbo:genre dbr:Musical_group .

  # Find the band of a musical artist (professional in Musician)
  ?artist rdfs:label ?labelArtist .
  FILTER(CONTAINS(LCASE(?labelArtist), ""musician"") || CONTAINS(LCASE(?labelArtist), ""singer"") || CONTAINS(LCASE(?labelArtist), ""songwriter""))
  ?artist dbo:member ?band2 .
  ?band2 rdf:type dbo:Band .

}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
987,71,test,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v8 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v7 . ?v8 <http://dbpedia.org/property/timeZone> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorBirthPlace WHERE {
  # Step 1: Find films with Emir Hadžihafizbegović
  ?film dbo:starring dbr:Emir_Hadžihafizbegović .
  
  # Step 2: Identify the country associated with Canicosa de la Sierra
  ?location dbp:country dbr:Cantabria ;
            rdfs:label ""Canicosa de la Sierra""@en .

  # Step 3: Find a sports event in this time zone (CET for Spain)
  ?event dbo:timeZone dbr:Central_European_Time ;
         dbo:location ?location .

  # Step 4: Identify the band associated with Dado Pršo
  ?band dbo:leadArtist dbr:Dado_Pršo .

  # Step 5: Find the birthplace of this band's lead artist
  ?artist dbp:birthPlace ?actorBirthPlace .
  
  FILTER(?film = ?event) # Assuming film and event are linked by some property
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
326,20,test,"Give me the resident of the birthplace, that is a state and British, of the professional in Writer and person decedent at the award, that is a country, of the awardee of French Legion of Honor.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> ""Writer""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v4 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?resident WHERE {
  ?awardee dbo:award dbr:French_Legion_of_Honor .
  
  ?awardCountry dbo:recipient ?deceasedPerson .
  FILTER (isLiteral(?awardCountry) && contains(str(?awardCountry), ""country"")) .

  ?deceasedPerson dbp:occupation ""Writer"" ;
                  dbo:deathPlace ?awardCountry .

  ?deceasedPerson dbo:birthPlace ?birthState .
  FILTER (isURI(?birthState) && strstarts(str(?birthState), ""http://dbpedia.org/resource/"") &&
          contains(str(?birthState), ""/United_Kingdom"") && 
          contains(str(?birthState), ""/States"")) .

  ?resident dbo:residence ?birthState .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
839,68,test,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/bandMember> ?v7 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?charlieBand ?peterBand ?kevinBirthName
WHERE {
  # Find Charlie Huhn's band
  OPTIONAL { 
    ?charlieHuhn dbo:associatedBand ?band1 .
    ?band1 a dbo:MusicalArtist .
    ?band1 rdfs:label ?charlieBand .
    FILTER (lang(?charlieBand) = 'en')
    BIND(dbr:Charlie_Huhn AS ?charlieHuhn)
  }

  # Find Peter Schorowsky's band
  OPTIONAL { 
    ?peterSchorowsky dbo:member ?band2 .
    ?band2 a dbo:Band ; dbo:groupMember ?person .
    ?person rdfs:label ?peterBand .
    FILTER (lang(?peterBand) = 'en')
    BIND(dbr:Peter_Schorowsky AS ?peterSchorowsky)
  }

  # Find Kevin Russell's birth name
  OPTIONAL { 
    ?kevinRussell dbo:birthName ?person .
    ?person rdfs:label ?kevinBirthName .
    FILTER (lang(?kevinBirthName) = 'en')
    BIND(dbr:Kevin_Russell_(musician) AS ?kevinRussell)
  }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
433,65,test,"Give me the professional in the profession of Bob Marley and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalArtist
WHERE {
  # Step 1: Find Bob Marley's profession and associated musical artist
  dbr:Bob_Marley a dbo:MusicalArtist .
  
  # Step 2: Find someone with the same profession as Bob Marley and born as an associated person
  ?person1 a dbo:MusicalArtist ;
           dbo:profession dbr:Bob_Marley ;
           dbo:birthPlace ?place .

  # Step 3: Ensure this person is also an artist like Paul Laurence Dunbar Chambers Jr.
  ?person1 a dbo:Artist ;
           dbo:associatedBandMember dbr:Paul_Laurence_Dunbar_Chambers_Jr. .

  # Step 4: Find the associated musical artist of this person
  ?person2 dbo:associatedBandMember ?person1 ;
           a dbo:MusicalArtist, dbo:Artist .

  # Step 5: Find the associated musical artist of this last person related to Ornette Coleman
  ?finalArtist dbo:associatedBandMember ?person2 ;
               a dbo:MusicalArtist, dbo:Artist ;
               dbo:associatedBandMember dbr:Ornette_Coleman .
}
```",7,13,8,3,3,3,3,71,0,0,4,0,0.0,0
773,62,test,"Give me the spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the successor of the child, that is a royalty, of Louis the Pious and parent of Charles the Fat.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Bernard (son of Charles the Fat)
  ?bernard dbo:father dbr:Charles_the_Fat .

  # Parent of Bernard is Charles the Fat
  ?charlesTheFat dbo:child ?bernard .
  
  # Louis the Pious's children and their successors
  ?louisThePious dbo:child ?child .
  ?successor dbo:predecessor ?child .
  
  # Filter for royalty among successors
  ?successor a dbo:Monarch .

  # Parent of Charles the Fat
  ?parent dbo:child dbr:Charles_the_Fat .

  # Spouse of the parent of Bernard (Charles the Fat)
  ?spouse dbo:spouse ?parent .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
166,19,test,"Give me the entity in the territory administered, that is a country, from the reference to Madrid and resting place of the military force of Spanish Civil War.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?v4 <http://dbpedia.org/ontology/capital> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Madrid is in Spain
  dbr:Madrid dbo:locatedIn dbr:Spain .

  # Find entities that are countries and have a territory relation with Spain
  ?entity dbo:country dbr:Spain .
  
  # Ensure the entity is a country
  ?entity rdf:type dbo:Country .

  # Look for places associated with military forces from the Spanish Civil War
  ?place dbo:militaryForce dbr:Spanish_Civil_War_Military_Force ;
         dbo:location ?entity .

  # Bind the result to the variable ?country
  BIND(?entity AS ?country)
}
```",5,6,6,3,2,3,2,20,0,0,4,0,0.0,0
582,71,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/property/nickname> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/property/nickname> ?v8 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?teamNickname WHERE {
  # Hajime Moriyasu's team nickname
  dbr:Hajime_Moriyasu dbo:managerOf ?team .
  ?team dbo:nickname ?teamNickname .

  # Kazuaki Nagasawa's father
  dbr:Kazuaki_Nagasawa dbo:father ?father .
  ?father a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .

  # Hirotaka Sugawara's reference scientist
  ?scientist dbo:referenceTo dbr:Hirotaka_Sugawara .
  
  # Linking the residence of the scientist to the team nickname
  ?scientist dbo:residence ?location .
  FILTER(?teamNickname = ?location)
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
433,63,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and professional in the profession of Bob Marley.",SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonArtist WHERE {
  # Paul Chambers' associated musical artist
  ?paulChambers a dbo:MusicalArtist ;
                dbo:associatedBandOrMusicalGroup ?band1 .
  
  # Scott LaFaro's associated musical artist
  ?scottLaFaro a dbo:MusicalArtist ;
               dbo:associatedBandOrMusicalGroup ?band2 .

  # Bob Marley's profession
  ?bobMarley a dbo:Person ;
             dbo:profession dbr:Reggae_musician .

  # Find the common associated musical artist
  ?commonArtist a dbo:MusicalArtist, dbo:Artist ;
                dbo:associatedBandOrMusicalGroup ?band1 ;
                dbo:associatedBandOrMusicalGroup ?band2 .
  
  # Ensure Paul Chambers and Scott LaFaro are linked to Bob Marley's profession
  ?paulChambers dbo:profession dbr:Reggae_musician ;
               rdfs:label ""Paul Chambers""@en .
  ?scottLaFaro dbo:profession dbr:Reggae_musician ;
               rdfs:label ""Scott LaFaro""@en .

}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
715,62,test,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in the force, that is a military conflict, of the native of Morocco and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find the person who was commander in the force of the mayor, politician, and president during the 1933 Spanish general election
  ?person dbo:officeHolderOf dbr:Mayor_of_Spain .
  ?person dbo:politicalPartyMemberOf ?party .
  ?person dbo:presidentDuring dbr:Spanish_general_election,_1933 .
  
  # Find the person who was commander in a military conflict and native of Morocco
  ?conflict dbo:militaryConflict .
  ?person dbo:commanderInForce ?conflict .
  
  # Find the leader of Ministry of the Air (Spain) who is also a native of Morocco
  ?ministry dbr:Ministry_of_the_Air_(Spain) .
  ?person dbo:ministerOf ?ministry .
  ?person dbo:nationality dbr:Morocco .

  FILTER (?person = ?commander)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
47,57,test,"Give me the office of the awardee of Padma Vibhushan and office of Suvendu Adhikari and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeLabel ?officeLabel ?suvenduOfficeLabel ?mantuOfficeLabel WHERE {
  # Awardees of Padma Vibhushan
  ?awardee dbo:awardReceived dbr:Padma_Vibhushan .
  
  OPTIONAL { 
    ?awardee dbo:positionHeld ?office .
    ?office rdfs:label ?officeLabel .
  }
  
  # Office of Suvendu Adhikari
  dbr:Suvendu_Adhikari dbo:positionHeld ?suvenduOffice .
  ?suvenduOffice rdfs:label ?suvenduOfficeLabel .

  # Office of Mantu Ghosh
  dbr:Mantu_Ghosh dbo:positionHeld ?mantuOffice .
  ?mantuOffice rdfs:label ?mantuOfficeLabel .

  SERVICE <http://dbpedia.org/sparql> {
    VALUES ?awardee { ?awardee }
    ?awardee rdfs:label ?awardeeLabel .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
433,58,test,"Give me the associated musical artist of Paul Chambers and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Find Paul Chambers' associated musical artist
  ?paulChambers a dbo:Musician ;
                foaf:name ""Paul Chambers"" .
  
  ?paulChambers dbo:associatedMusicalArtist ?artist1 .

  # Step 2: Identify the writer of Slowhand at 70 – Live at the Royal Albert Hall and their profession
  dbr:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall dbo:writer ?writer .
  
  ?writer a dbo:Writer ;
          foaf:name ?writerName .

  # Step 3: Find Scott LaFaro's associated musical artist who is both an artist and a musician
  ?scottLaFaro a dbo:Musician ;
               foaf:name ""Scott LaFaro"" .
  
  ?scottLaFaro dbo:associatedMusicalArtist ?artist2 .

  ?artist2 a dbo:Artist, dbo:Musician .

  # Final step: Find the intersection of these artists
  FILTER (?artist1 = ?writerName && ?artist1 = ?artist2)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
987,56,test,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and birth place of Moamer Kasumović and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v4 . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/timeZone> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandBirthPlace ?kasumovicBirthPlace ?country
WHERE {
  # Find the band associated with Šako Polumenta and its birthplace
  ?band dbo:member dbr:Šako_Polumenta .
  ?band dbo:birthPlace ?bandBirthPlace .

  # Find the birthplace of Moamer Kasumović (Goran Bregović)
  dbr:Moamer_Kasumović dbo:birthPlace ?kasumovicBirthPlace .

  # Determine the country where Canicosa de la Sierra is located
  dbr:Canicosa_de_la_Sierra dbo:country ?country .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
445,70,test,"Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the residence, that is a country, of Anna Sharkey and entity in the award of the commander in Battle of Saint-Mihiel.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/awards> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
    # Step 1: Find the award established on 1820-03-10
    ?award dbo:dateEstablished ""1820-03-10""^^xsd:date .
    
    # Step 2: Find the awardee of this award
    ?recipient dbo:receivedAward ?award .

    # Step 3: Find Anna Sharkey's residence country
    dbr:Anna_Sharkey dbo:residenceCountry ?countryResidence .

    # Ensure the awardee is associated with this country
    ?recipient dbo:nationality ?countryResidence .

    # Step 4: Find the commander of the Battle of Saint-Mihiel and their award
    ?commander dbo:commandedBattle dbr:Battle_of_Saint-Mihiel .
    ?award2 dbo:receivedAward ?commander .

    # Ensure the awardee received the same award as the commander
    ?recipient dbo:receivedAward ?award2 .

    # Step 5: Get the death place of the awardee
    ?recipient dbo:deathPlace ?deathPlace .
}",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
465,66,test,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Alfonso I d'Este's child
  ?alfonsoChild dbo:parent dbr:Alfonso_I_d%27Este ;
               dbo:succesor ?successor1 .

  # Ferdinand I's child who is royalty and their spouse
  ?ferdinandChild dbo:parent dbr:Ferdinand_I,_Holy_Roman_Emperor ;
                  a dbo:Royalty ;
                  dbp:spouse ?spouse .

  # Charles Orlando's parent
  ?charlesParent dbo:child dbr:Charles_Orlando_Dauphin_of_France .

  # Successor of Ferdinand I's child (royalty)
  ?ferdinandChild dbo:succesor ?successor2 .

  # Ensure the successor is the same entity
  FILTER(?successor1 = ?spouse && ?successor1 = ?successor2)

  # Return the common successor
  BIND(?successor1 AS ?successor)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
98,28,test,"Give me the birth place of the person born as Paolo Elito M. Ballesteros IV and region of the time zone of Lopez Jaena and entity in the region, that is a country, of Philippine Standard Time.","SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v5 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?v5 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?region ?country
WHERE {
  # Find the birthplace of Paolo Elito M. Ballesteros IV
  OPTIONAL { 
    dbr:Paolo_Elito_M._Ballesteros_IV dbo:birthPlace ?birthPlace .
  }

  # Identify the region for Lopez, Jaena's time zone
  OPTIONAL {
    dbr:Lopez,_Jaena dbp:timeZone ""Philippine Standard Time"" ;
                     dbo:locatedInRegion ?region .
  }
  
  # Find a country in that region under PST
  OPTIONAL {
    ?country dbo:location ?region ;
             a dbo:Country ;
             dbp:timeZone ""Philippine Standard Time"" .
  }
}
```",6,7,7,2,3,2,3,28,0,0,2,0,0.0,0
47,68,test,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of the award, that is an award, of Mantu Ghosh and office of the awardee of Padma Vibhushan.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office1 ?office2 ?office3 WHERE {
  # Office of the politician in Operation Green Hunt
  ?operation dbr:Operation_Green_Hunt .
  ?operation dbo:participant ?politician .
  ?politician dbo:occupation ?office1 .

  # Office of the awardee of Mantu Ghosh's award
  ?mantuAward dbo:recipient dbr:Mantu_Ghosh .
  ?mantuAward dbo:award dbr:Award_Name_For_Mantu_Ghosh .
  ?mantuAward dbo:recipientOffice ?office2 .

  # Office of the awardee of Padma Vibhushan
  ?padmaVibhushanAward dbo:recipient ?awardee .
  ?awardee dbo:occupation ?office3 .
  ?padmaVibhushanAward dbo:award dbr:Padma_Vibhushan .
}
```

**Notes:**
- Replace `dbr:Award_Name_For_Mantu_Ghosh` with the actual DBpedia resource for Mantu Ghosh's award.
- Ensure that the properties like `dbo:participant`, `dbo:recipient`, and `dbo:occupation` are correctly used based on DBpedia's schema. Adjust them if necessary.",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
582,70,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to the residence of Hirotaka Sugawara.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Kazuaki Nagasawa's child
  ?child dbo:parent dbr:Kazuaki_Nagasawa .
  
  # Hajime Moriyasu's team and its nickname
  ?team dbo:manager dbr:Hajime_Moriyasu ;
        a dbo:SportsTeam ;
        rdfs:label ?nickname .

  # Hirotaka Sugawara's residence
  ?sugawara dbo:residence ?location .
  
  # The player who is an athlete, soccer manager, sports manager, and father of the child
  ?player dbo:child ?child ;
          a dbo:Athlete , dbo:SoccerManager , dbo:SportsManager ;
          dbo:spouse ?parentOfChild .

  FILTER (CONTAINS(LCASE(?nickname), LCASE(""team nickname""))) # Replace ""team nickname"" with actual nickname if known
  FILTER (?sugawara = dbr:Hirotaka_Sugawara)
}
```

This query assumes:
- The child of Kazuaki Nagasawa is directly linked via `dbo:parent`.
- Hajime Moriyasu's team and its nickname are accessible.
- Hirotaka Sugawara's residence can be queried.
- The player has roles as an athlete, soccer manager, sports manager, and is the father of the child.

Adjustments may be needed based on actual data availability in DBpedia.",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
274,24,test,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound and professional in the designer of Tetris Classic.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v2 . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?actor a dbo:Actor ;
         dbo:musicalArtist ?artist .

  ?project dbo:title ""Imagine the Sound"" ;
           dbo:performer ?actor .

  ?tetrisDesigner foaf:name ""Alexey Pajitnov"" ;
                  dbo:profession dbr:Tetris_Classic_developer ;
                  dbo:worksFor|dbo:employee ?company .

  ?artist dbo:employer ?company .
}
```",4,5,5,2,2,2,3,28,0,0,6,0,0.0,0
582,63,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as the nickname of Japan national football team.","SELECT ?result WHERE { <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father ?residence ?nickname
WHERE {
  # Find Masami Nagasawa's father who is an athlete, soccer manager, and sports manager
  dbr:Masami_Nagasawa dbo:parent ?father .
  ?father a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .

  OPTIONAL {
    # Check if the father has a residence as a scientist
    ?father foaf:based_near ?residence .
    ?scientist dbr:Masami_Nagasawa dbo:parent ?father .
    ?scientist a dbo:Scientist .
  }

  # Connect to Hirotaka Sugawara
  ?hirotaka dbr:Hirotaka_Sugawara dbo:parent ?father .

  # Find the nickname of the Japan national football team
  dbr:Japan_national_football_team dbo:nickname ?nickname .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
98,24,test,"Give me the birth place of the person born as Paolo Elito M. Ballesteros IV and entity in the region, that is a country, of Philippine Standard Time.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?country WHERE {
  # Find the DBpedia resource for Paolo Elito M. Ballesteros IV
  ?person a dbo:Person ;
          rdfs:label ""Paolo Elito M. Ballesteros IV""@en .
  
  # Get the birthplace of this person
  ?person dbo:birthPlace ?birthPlace .

  # Find the country where the birthplace is located
  ?birthPlace dbp:country ?country .

  # Filter countries in the Philippine Standard Time zone
  VALUES ?pstCountries { 
    dbr:Philippines
  }
  
  FILTER (?country IN ?pstCountries)
}
```

This query does the following:
- It identifies the DBpedia resource for Paolo Elito M. Ballesteros IV.
- Retrieves his birthplace and the country associated with that place.
- Filters results to include only those countries within the Philippine Standard Time zone, specifically listing the Philippines as an example.",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
839,71,test,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician and band of the member of the band, that is a band and a group, of Peter Schorowsky.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v8 . ?v7 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?kevinBand ?peterBandGroup WHERE {
  # Kevin Russell as a musician and his band
  ?kevinRussell a dbo:MusicalArtist ;
                foaf:name ""Kevin Russell"" .
  
  OPTIONAL { 
    ?kevinRussell dbo:band ?kevinBand .
    ?kevinBand a dbo:MusicalArtist .
    
    # Band of Kevin's band (if applicable)
    OPTIONAL {
      ?kevinBand dbo:band ?kevinBandOfBand .
      ?kevinBandOfBand a dbo:MusicalArtist .
    }
  }

  # Peter Schorowsky as a member of a band
  ?peterSchorowsky a dbo:MusicalArtist ;
                   foaf:name ""Peter Schorowsky"" .

  OPTIONAL {
    ?peterSchorowsky dbo:memberOfBand ?peterBand .
    ?peterBand a dbo:Band, dbo:Group .
  }
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
456,58,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of The Shadow and spouse of Danielle Spencer (Australian actress).",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?bandArtist WHERE {
  ?person foaf:name ""Alan Doyle"" .
  ?person dbo:memberOfBand ?band .
  
  OPTIONAL { ?band dbp:alterEgoName ""The Shadow"" . }
  
  ?spouse foaf:name ""Danielle Spencer"" .
  ?spouse dbo:nationality <http://dbpedia.org/resource/Australian> .
  ?spouse dbo:spouse ?person .

  ?band dbo:musicalArtist ?bandArtist .
}
```

This query attempts to find the band associated with Alan Doyle, checks for an alter ego named ""The Shadow,"" and involves Danielle Spencer as a spouse. It then retrieves the musical artist of that band.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
445,67,test,Give me the entity in England and entity in the award of the commander in Battle of Saint-Mihiel and death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInEngland ?awardee ?deathPlace
WHERE {
  # Entity in England
  ?entityInEngland a dbo:Place ;
                  dbo:country dbr:United_Kingdom .

  # Awardee of commander in Battle of Saint-Mihiel
  ?battle dbr:Battle_of_Saint-Mihiel ;
         dbo:commander ?awardee .
  
  # Death place of the awardee
  ?awardee dbo:deathPlace ?deathPlace .

  # Establishment date condition (assuming it's related to an organization or similar)
  OPTIONAL {
    ?organization dbo:foundingDate ""1820-03-10""^^xsd:date ;
                  dbo:location ?entityInEngland .
  }
}
```

This query assumes that the establishment date is linked to an organization located in England, which might be indirectly connected to the awardee. Adjustments may be needed based on specific DBpedia schema details.",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
41,25,test,"Give me the party of Enda Kenny and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election and party of the person born as David Declan Costello.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?endakennyParty ?electionLeaderParty ?davidCostelloParty WHERE {
  # Enda Kenny's party
  dbr:Enda_Kenny dbo:party ?endakennyParty .

  # Leader of the 2005 Castlereagh Borough Council election
  OPTIONAL {
    ?electionLeader dbo:electedDuring [
      a dbo:Election ;
      dbo:date ""2005""^^xsd:gYear ;
      dbo:place dbr:Castlereagh_Borough_Council
    ] .
    ?electionLeader dbo:party ?electionLeaderParty .
  }

  # David Declan Costello's party
  OPTIONAL {
    dbr:David_Declan_Costello dbo:party ?davidCostelloParty .
  }
}
```",5,7,6,2,3,2,3,28,1,0,0,1.0,1.0,1.0
826,57,test,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  VALUES ?parent { dbr:Landgrave_Charles_of_Hesse-Kassel }
  
  VALUES ?successor { dbr:Otto,_Prince_Regent_of_Bavaria } # Hypothetical successor in royalty context
  
  VALUES ?child { dbr:Otto,_Prince_Regent_of_Bavaria }
  
  ?parent dbo:predecessor ?predecessor .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
965,64,test,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of Louise Mountbatten and spouse of the spouse of the parent of Louise Mountbatten.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nobleParent WHERE {
  # George Mountbatten, 2nd Marquess of Milford Haven
  ?george a dbo:Person ;
          dbp:birthName ""George Mountbatten"" ;
          dbo:nobleTitle ?title .

  # Parent of George who is a noble
  ?parent dbo:child ?george ;
          dbo:nobleTitle ?nobleTitle .

  # Louise Mountbatten
  ?louise a dbo:Person ;
          dbp:birthName ""Louise Mountbatten"" ;
          dbo:parent ?parent .

  # Spouse of Louise's parent
  ?spouse dbo:spouse ?parent .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
192,20,test,"Give me the child of the child of the parent of Anna of Hungary (Byzantine empress) and spouse of the spouse, that is a royalty, of the child of Charles II of Naples.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?result WHERE {
  # Step 1: Anna of Hungary (Byzantine empress)
  ?anna a dbo:Person ;
        foaf:name ""Anna of Hungary"" ;
        dbo:spouse ?spouseOfAnna .

  # Step 2: Parent of Anna
  ?parent dbo:child ?anna .

  # Step 3: Child of the parent (which is Anna herself)
  ?anna dbo:child ?annaChild .

  # Step 4: Spouse of Anna
  ?spouseOfAnna a dbo:Person ;
                foaf:name ?spouseName .

  # Step 5: Child of Charles II of Naples
  ?charlesII dbp:child ?childOfCharlesII .

  FILTER (str(?charlesII) = ""Charles II of Naples"") .

  # Step 6: Spouse of the child of Charles II
  ?spouseChildOfCharlesII dbo:spouse ?childOfCharlesII ;
                          foaf:name ?spouseName2 .

  # Step 7: Child of that spouse
  ?spouseChildOfCharlesII dbo:child ?finalChild .

  # Ensure final result is royalty
  ?finalChild a dbo:Royalty .
  
  # Resulting person
  ?result = ?finalChild .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
865,62,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of Shahla Khatun and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry
WHERE {
  ?person dbo:deathPlace dbr:Patna .
  
  ?child1 dbo:parent ?person ;
          a dbo:Politician .

  ?spouseOfSyedaShaharBanu dbo:spouse dbr:Syeda_Shahar_Banu .
  
  ?politicianChild dbo:spouse ?spouseOfSyedaShaharBanu ;
                   dbo:child ?person .

  ?shahlaKhatun dbo:parent ?person .

  ?nativeCountry dbo:nativePlace ?person .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
417,56,test,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of Christian X of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Alexandrine's children who are royalty
  ?alexandrineChild dbo:spouse ?parentOfIngolf .
  ?alexandrineChild a dbo:Monarch .

  # Parent of Count Ingolf of Rosenborg
  ?parentOfIngolf dbo:child dbr:Count_Ingolf_of_Rosenborg .

  # Spouse of Alexandrine's royal child and their children
  ?spouseOfParent dbp:spouse ?alexandrineChild .
  ?grandchild dbo:parent ?spouseOfParent .

  # Grandchild who is also a child of Christian X of Denmark
  ?christianXChild dbo:parent dbr:Christian_X_of_Denmark .
  FILTER (?grandchild = ?christianXChild)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
47,70,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of the award, that is an award, of Mantu Ghosh and office of the administration of Jagdeep Dhankhar.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v7 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?awardeeOffice ?mantuAward ?mantuAwardeeOffice ?jagdeepOffice WHERE {
  # Office of the awardee of an award in India
  {
    ?award dbo:country dbr:India .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:office ?awardeeOffice .
  }
  
  UNION
  
  # Office of the awardee of Mantu Ghosh's award
  {
    ?mantuAward dbo:recipient dbr:Mantu_Ghosh .
    ?mantuAward dbo:recipient ?mantuAwardee .
    ?mantuAwardee dbo:office ?mantuAwardeeOffice .
  }
  
  UNION
  
  # Office of the administration of Jagdeep Dhankhar
  {
    dbr:Jagdeep_Dhankhar dbo:office ?jagdeepOffice .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
508,18,test,"Give me the birthplace of the commander, that is Saudi, in Central Plains War and birthplace of the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  # Find a Saudi commander in the Central Plains War
  ?commander dbo:nationality dbr:Saudi_Arabia ;
            dbo:occupation dbr:Military_commander ;
            dbo:participatedIn dbr:Central_Plains_War .
  
  # Get the birthplace of this commander
  ?commander dbo:birthPlace ?birthPlace .

  # Find Hayao Tada's involvement in a military conflict and societal event
  ?hayaoTadaEvent dbo:wikiPageRedirects ?militaryConflict ;
                  dbo:wikiPageRedirects ?societalEvent .
  
  FILTER(?militaryConflict = dbr:Military_conflict AND ?societalEvent = dbr:Societal_event)
}
```

This query attempts to find a commander from Saudi Arabia involved in the Central Plains War and retrieve their birthplace. It also considers Hayao Tada's involvement in both a military conflict and societal event, though this part is more conceptual due to potential limitations in DBpedia data.",5,10,6,3,2,3,2,20,0,0,3,0,0.0,0
892,60,test,"Give me the entity in the profession of the true self of Enrico Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . ?v4 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?region
WHERE {
  # Enrico Crolla's profession
  dbr:Enrico_Crolla dbo:occupation ?profession .

  # Andrea Cozzolino's political party
  dbr:Andrea_Cozzolino dbo:memberOfParty ?party .

  # Find an Italian region that is a settlement and administrative region associated with the party
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:settlementType dbr:Settlement ;
          dbo:administrativeRegion true ;
          dbo:associatedWithOrganization ?party .
}
```",6,12,7,3,2,3,3,71,0,0,587,0,0.0,0
917,71,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of the child, that is a royalty, of Kamehameha III and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v7 . ?result <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
    # Step 1: Mayor of Hawaiian Kingdom and their child who is royalty
    ?mayor a dbo:Mayor ;
           dbo:child ?royalChild1 .
    
    # Step 2: Kamehameha III's child who is royalty and that child's father
    dbr:Kamehameha_III dbo:child ?royalChild2 .
    ?royalChild2 a dbo:Royalty ;
                 dbo:father ?fatherOfRoyalChild2 .

    # Step 3: Leleiohoku I's spouse who is royalty and that spouse's father
    dbr:Leleiohoku_I dbo:spouse ?royalSpouse .
    ?royalSpouse a dbo:Royalty ;
                 dbo:father ?fatherOfRoyalSpouse .

    # Find the parent of the child from step 1, matching criteria from steps 2 and 3
    ?royalChild1 dbo:parent ?parent .
    
    FILTER (?royalChild1 = ?royalChild2)
    FILTER (?fatherOfRoyalChild2 = ?fatherOfRoyalSpouse)
}
```",9,12,10,3,3,3,3,71,0,0,2,0,0.0,0
976,57,test,"Give me the office of the person born as Mehmet Naci Bostancı and office of Mustafa Şentop and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v1 <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mehmetOffice ?mustafaOffice ?turkishPoliticianOffice ?millettifaki

WHERE {
  # Office of Mehmet Naci Bostancı
  dbr:Mehmet_Naci_Bostancı dbo:office ?mehmetOffice .

  # Office of Mustafa Şentop
  dbr:Mustafa_Şentop dbo:office ?mustafaOffice .

  # Turkish politician who is also an office holder
  ?turkishPolitician a dbo:Politician ;
                   dbo:nationality dbr:Turkey ;
                   dbo:officeHolder ?turkishPoliticianOffice .
  
  # Millet İttifakı as a political party and organization
  dbr:Millet_İttifakı a dbo:PoliticalParty, dbo:Organization ;
                     rdfs:label ""Millet İttifakı""@en .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
773,68,test,"Give me the spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the successor of the child, that is a royalty, of Louis the Pious and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Bernard (son of Charles the Fat)
  ?bernard dbo:father dbr:Charles_the_Fat .
  
  # Parent of Bernard is Charles the Fat
  ?charles_the_fat dbo:child ?bernard .

  # Successor of a child of Louis the Pious
  ?louis_pious_child dbo:parent dbr:Louis_the_Pious .
  ?successor dbo:predecessor ?louis_pious_child .

  # Child of Louis the German
  ?louis_german_child dbo:parent dbr:Louis_the_German .

  # Find the spouse of Charles the Fat (father of Bernard)
  ?charles_the_fat dbo:spouse ?spouse .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
839,63,test,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the member of Böhse Onkelz.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?charlieHuhnBand ?kevinRussellBand ?boehseOnkelzMemberBand WHERE {
  # Charlie Huhn's band
  OPTIONAL {
    ?charlieHuhn a dbo:MusicalArtist ;
                 dbo:band ?charlieHuhnBand .
    FILTER (STR(?charlieHuhn) = ""Charlie_Huhn"")
  }

  # Kevin Russell's band
  OPTIONAL {
    ?kevinRussell a dbo:MusicalArtist ;
                  dbo:band ?kevinRussellBand .
    FILTER (STR(?kevinRussell) = ""Kevin_Russell_(musician)"")
  }

  # A member of Böhse Onkelz and their band
  OPTIONAL {
    ?boehseOnkelzMember a dbo:MusicalArtist ;
                        dbo:band ?boehseOnkelzMemberBand .
    ?boehseOnkelzMember dbo:memberOf dbr:Böhse_Onkelz .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
83,19,test,"Give me the party of the governor of the commander, that is a politician, in Central African Republic Civil War and ruling party in the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983).","SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?party WHERE {
  # Step 1: Identify Sandro (footballer, born October 1983)
  ?sandro dbo:birthDate ?date .
  FILTER(YEAR(?date) = 1983 && MONTH(?date) = 10)

  # Find his birthplace
  ?sandro dbo:birthPlace ?town .

  # Step 2: Determine the town and Brazilian soccer club associated with his birthplace
  ?club dbo:location ?town .
  FILTER(CONTAINS(LCASE(STR(?club)), ""futebol""))

  # Ensure the town is in Brazil
  ?town dbo:country dbr:Brazil .

  # Step 3: Find the ruling party in this town during the Central African Republic Civil War (2012-2020)
  ?party dbo:politicalAffiliation ?politician .
  ?politician dbo:office ?governorship .
  FILTER(STRSTARTS(STR(?governorship), ""Governor of""))

  # Step 4: Identify the governor of the commander involved in the Central African Republic Civil War
  ?commander dbo:role ?warRole .
  FILTER(CONTAINS(LCASE(STR(?warRole)), ""central african republic civil war""))
  
  ?politician dbo:positionHeld ?commander .

  # Ensure the politician is a governor and a commander
  ?governorship dbo:holder ?politician .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
917,60,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/property/father> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Step 1: Identify Kamehameha III
  dbr:Kamehameha_III a dbo:Monarch ;
                     dbo:child ?royalChild1 .

  # Step 2: Find his child who is royalty
  ?royalChild1 a dbo:Royalty .

  # Step 3: Determine the father of this royal child (Kamehameha III)
  ?royalChild1 dbo:father dbr:Kamehameha_III .

  # Step 4: Identify the mayor of the Hawaiian Kingdom
  ?mayor a dbo:Mayor ;
         dbo:country dbr:Hawaiian_Kingdom .

  # Step 5: Find the child of this mayor who is royalty
  ?mayor dbo:child ?royalChild2 .
  ?royalChild2 a dbo:Royalty .

  # Step 6: Finally, find the parent of this royal child
  ?royalChild2 dbo:parent ?parent .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
443,27,test,"Give me the birthplace of the work of yes and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and landmark at elevation of 28.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v2 <http://dbpedia.org/property/author> ""yes""@en . ?v3 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthplace ?artistBirthplace ?landmark WHERE {
  # Step 1: Identify the musical artist born on November 20, 1949
  ?person dbo:birthDate ""1949-11-20""^^xsd:date ;
          a dbo:MusicArtist .

  # Step 2: Find the birthplace of this person
  ?person dbp:birthPlace ?birthplace .

  # Step 3: Identify an artist associated with them or their work
  OPTIONAL {
    ?relatedPerson dbo:associatedWith ?person ;
                   a dbo:Artist .
    ?relatedPerson dbp:birthPlace ?artistBirthplace .
  }

  # Step 4: Determine the landmark at an elevation of 28 meters
  ?landmark dbo:elevation ""28""^^xsd:decimal ;
            a dbo:Lighthouse .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
459,25,test,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore and person born as John Kevin Stitt and governor of the administration, that is a politician, of Brad Henry.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . ?v4 <http://dbpedia.org/property/governor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?governorCliffRoquemore ?governorJohnKevinStitt ?governorBradHenry

{
  # Cliff Roquemore's death place and its governor
  {
    SELECT ?deathPlace (MAX(?governor) AS ?governorCliffRoquemore)
    WHERE {
      dbr:Cliff_Roquemore dbo:placeOfDeath ?deathPlace .
      ?deathPlace a dbo:Settlement ;
                  dbo:governmentHead ?governor .
    }
    GROUP BY ?deathPlace
  }

  # John Kevin Stitt's birth place and its governor
  {
    SELECT ?birthPlace (MAX(?governor) AS ?governorJohnKevinStitt)
    WHERE {
      dbr:John_Kevin_Stitt dbo:birthPlace ?birthPlace .
      ?birthPlace a dbo:Settlement ;
                  dbo:governmentHead ?governor .
    }
    GROUP BY ?birthPlace
  }

  # Brad Henry's administration and its governor
  {
    SELECT (MAX(?administration) AS ?administrationBradHenry) (MAX(?governor) AS ?governorBradHenry)
    WHERE {
      dbr:Brad_Henry dbo:officeHolder ?administration .
      ?administration a dbo:PoliticalAdministration ;
                      dbo:governmentHead ?governor .
    }
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
892,66,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of Henri Crolla and landmark at elevation of the award of Anna Ishii.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v0 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v6 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/elevation> ?v6 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInAdministration WHERE {
  # Entity in Administration
  ?entityInAdministration a dbo:Region ;
                         dbo:country dbr:Italy ;
                         a dbo:Settlement ;
                         a dbo:AdministrativeRegion .

  # Party of Andrea Cozzolino
  ?party a dbo:PoliticalParty, dbo:Organization ;
         dbp:member dbr:Andrea_Cozzolino .
  
  # Profession of Henri Crolla
  ?profession dbr:Henri_Crolla ;
              a dbo:Occupation .

  # Landmark at Elevation of Award of Anna Ishii
  ?award dbr:Anna_Ishii ;
         dbp:elevation ?elevation .
  ?landmark dbo:elevation ?elevation ;
            a dbo:LandscapeFeature .

  # Linking all conditions
  ?entityInAdministration dbo:governingParty ?party .
  ?profession dbo:location ?entityInAdministration .
  ?landmark dbo:locatedIn ?entityInAdministration .
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
892,64,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of the true self of Enrico Crolla and landmark at elevation of 58.","SELECT ?result WHERE { <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region ?party ?profession ?landmark
WHERE {
  # Entity in the administration
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          a dbo:Settlement, dbo:AdministrativeRegion .

  # Party of Andrea Cozzolino
  ?cozzolino dbp:politicalParty ?party .
  FILTER (str(?cozzolino) = ""Andrea_Cozzolino"")
  ?party a dbo:PoliticalParty, dbo:Organization .

  # Profession of Enrico Crolla's true self
  ?crolla dbp:profession ?profession .
  FILTER (str(?crolla) = ""Enrico_Crolla"")

  # Landmark at elevation 58
  ?landmark a dbo:Lighthouse ;
            dbo:elevation 58 .

}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
573,63,test,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/governor> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentAtRegionAndSettlement
WHERE {
  # Step 1: Find Charlie Baker's real name
  ?charlieBaker a dbo:AustralianFootballer ;
                foaf:name ""Charlie Baker"" .
  
  ?realName dbo:alias ?charlieBaker .

  # Step 2: Find the region where he is a decedent at the administration
  ?region dbo:administrativeRegionOf ?realName ;
          dbo:decedentAtAdministration ?personDecedentAtRegion .

  # Step 3: Find an author who is both a politician and an office holder of Exchequer Standards
  ?author a dbo:Author, dbo:Politician ;
          dbo:officeHolderOf dbr:Exchequer_Standards .

  # Step 4: Identify William J. Phelan's residence settlement
  ?williamJPhelan foaf:name ""William J. Phelan"" .
  
  ?settlement dbo:residence ?williamJPhelan ;
              a dbo:Settlement ;
              dbo:decedentAtResidence ?personDecedentAtSettlement .

  # Step 5: Find the person who is a decedent at both the region and the settlement
  FILTER (?personDecedentAtRegion = ?personDecedentAtSettlement)
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
433,69,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Find Paul Chambers' associated musical artist
  OPTIONAL { 
    dbr:Paul_Chambers dbo:musicalArtist ?paulChambersArtist .
  }
  
  # Find Eric Clapton's profession and his association with the album
  OPTIONAL {
    dbr:Eric_Claptom dbo:profession dbr:Musical_artist ;
                     dbo:album dbr:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall .
  }
  
  # Find Scott LaFaro's associated musical artist
  OPTIONAL {
    dbr:Scott_LaFaro dbo:musicalArtist ?scottLaFaroArtist .
  }

  # Link the artists together based on associations
  ?paulChambersArtist rdfs:label ?artistLabel1 ;
                     dbo:associatedMusicalArtist ?claptonArtist .

  ?claptonArtist rdfs:label ?artistLabel2 ;
                 dbo:associatedMusicalArtist ?scottLaFaroArtist .
  
  FILTER (lang(?artistLabel1) = 'en' && lang(?artistLabel2) = 'en')
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
933,66,test,"Give me the band of the band of Alan Warner (musician) and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of Alan Warner (musician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alanWarnerBand ?personBorn1947Band ?birthNameAlanWarner WHERE {
  # Alan Warner (musician)
  dbr:Alan_Warner_(musician) dbo:band ?alanWarnerBand .
  
  # Person born on 1947-04-21 who is a musical artist
  ?person dbp:birthday ""1947-04-21""^^xsd:date ;
          rdf:type dbo:MusicalArtist ;
          dbo:band ?personBand .

  # Ensure the band of this person's band is also a group/band/organization
  ?personBand rdf:type/(dbo:Band|dbo:Group|dbo:Organization) .
  
  # Find the band of the person's band
  ?personBand dbo:band ?personBorn1947Band .

  # Reference to Alan Warner's birth name
  dbr:Alan_Warner_(musician) dbp:birthName ?birthNameAlanWarner .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
507,64,test,Give me the spouse of the person born as the birth name of Anne V. Coates and director of Entertaining Mr Sloane (film) and professional in the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
    # Anne V. Coates' spouse
    OPTIONAL { 
        dbr:Anne_V._Coates dbo:spouse ?spouse .
    }
    
    # Director of ""Entertaining Mr Sloane""
    OPTIONAL {
        dbr:Karel_Reisz dbo:directed dbr:Entertaining_Mr_Sloane .
    }

    # Person born on 1966-02-18 and their profession
    OPTIONAL {
        ?person dbo:birthday ""1966-02-18""^^xsd:date ;
                dbo:profession ?profession .
    }
    
    # Check if Anne V. Coates' spouse is related to the above conditions
    FILTER (
        EXISTS { dbr:Anne_V._Coates dbo:birthName ""Anne Veronica Coates"" . } &&
        EXISTS { ?spouse = dbr:Karel_Reisz || ?spouse dbo:profession ?profession }
    )
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
93,18,test,"Give me the death place of the governor of Bob Bartlett and capital of the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?regionCapital ?settlementHeadquarter
WHERE {
  # Bob Bartlett's death place
  dbr:Bob_Bartlett dbo:placeOfDeath ?deathPlace .

  # Clam Cove Pictograph Site headquarters
  dbr:Clam_Cove_Pictograph_Site dbo:headquarters ?headquarters .

  # Region and its capital where the headquarters is located
  ?headquarters dbo:locatedInRegion ?region .
  ?region dbo:capital ?regionCapital .

  # Settlement that serves as a headquarter
  ?settlementHeadquarter rdf:type dbo:Settlement ;
                        dbo:headquarters dbr:Clam_Cove_Pictograph_Site .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
443,28,test,"Give me the landmark at elevation of the award of William Shepherd and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and birthplace of the work of yes.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/author> ""yes""@en . ?result <http://dbpedia.org/ontology/elevation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark WHERE {
  # Find William Shepherd's award
  dbr:William_Shepherd dbo:award ?shepherdAward .

  # Find the person born on 1949-11-20 who is both a musical artist and an artist
  ?person dbp:birthday ""1949-11-20""^^xsd:date ;
          dbo:musicalArtist true ;
          dbo:artist true .
  
  # Get their birthplace
  ?person dbp:birthPlace ?birthPlacePerson .

  # Find the work of Yes and its birthplace
  dbr:Yes dbo:work ?yesWork .
  ?yesWork dbp:birthPlace ?birthPlaceYesWork .

  # Assuming there's a way to relate these places to an elevation landmark
  ?elevationLandmark dbo:elevation ?elevation ;
                     dbo:location ?shepherdAward ;
                     dbo:location ?birthPlacePerson ;
                     dbo:location ?birthPlaceYesWork .
  
  # Return the landmark at this elevation
  BIND(?elevationLandmark AS ?landmark)
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
826,61,test,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v1 <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
    # Louis I and his child who is royalty
    ?child1 dbo:parent dbr:Louis_I_of_Hesse_and_by_Rhine .
    ?child1 a dbo:Monarch .

    # Reference royalty related to Louis I's child
    ?reference dbo:relatedTo ?child1 .
    ?reference a dbo:Monarch .

    # Parent of the child of Louis IV, Grand Duke of Hesse
    ?child2 dbo:parent dbr:Louis_IV,_Grand_Duke_of_Hesse .
    ?parent dbo:child ?child2 .

    # Predecessor of that parent
    ?predecessor dbo:succeededBy ?parent .

    # Successor of the reference royalty
    ?successor dbo:predecessor ?reference .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
373,9,test,"Give me the writer of the work, that is a single and a musical work and a work and a soundtrack, of  and professional in the profession of Beto Guedes.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> """"@en . <http://dbpedia.org/resource/Beto_Guedes> <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?work ?writer WHERE {
  # Find Beto Guedes
  VALUES ?betoGuedes { dbr:Beto_Guedes }
  
  # Find works associated with Beto Guedes
  ?work dbo:artist ?betoGuedes .
  
  # Ensure the work is a single, musical work, and soundtrack
  ?work rdf:type/rdfs:subClassOf*+ (dbo:SinglesAlbum | dbo:MusicalWork | dbo:Soundtrack) .

  # Find the writer of the work
  OPTIONAL { ?work dbo:lyricist ?writer . }
  
  FILTER(?writer != ?betoGuedes)
}
ORDER BY ?work",4,8,5,2,2,2,2,9,0,0,78,0,0.0,0
826,67,test,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v6 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Louis IV, Grand Duke of Hesse and his child
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:child ?child .
  
  # Parent of the child is Louis IV himself
  ?parent dbo:child ?child .
  FILTER(?parent = dbr:Louis_IV,_Grand_Duke_of_Hesse)
  
  # Predecessor of Louis IV in terms of royalty
  ?predecessor dbo:successor ?parent .

  # Reference to Louis I and spouse Anna Magdalena Appel
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:spouse dbr:Princess_Louise_of_Prussia .
  
  # Child of Louis I
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:child ?childOfLouisI .

  # Successor of the child that is royalty
  ?successor dbo:predecessor ?childOfLouisI .
  FILTER(STRSTARTS(STR(?successor), ""http://dbpedia.org/resource/""))

  # Ensure the predecessor found is a royalty
  ?predecessor rdf:type dbo:Monarch .
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
933,67,test,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of Mike Elliott (saxophonist).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1947-04-21""^^xsd:date ;
          foaf:name ?bandName .
  
  ?person dbo:memberOfBand ?band .
  ?band a dbo:Band, dbo:Organization .

  OPTIONAL { ?band dbp:members dbr:Mike_Elliott_(saxophonist) . }

  ?person foaf:name ?birthName .
}
```

This query does the following:
- Selects individuals who are musical artists born on April 21, 1947.
- Ensures they are members of a band that is also an organization.
- Checks if Mike Elliott (the saxophonist) is associated with the band.
- Retrieves their birth name.",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
124,64,test,"Give me the military force of Battle of Tamai and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleForces ?personCommandWar ?unitReference
WHERE {
  # Battle of Tamai military forces
  dbr:Battle_of_Tamai dbo:militaryForce ?battleForces .

  # Person born on 1850-06-24 and their command in a war
  ?person dbo:birthDate ""1850-06-24""^^xsd:date ;
          dbo:commanderInWar ?war .
  ?war rdf:type dbo:MilitaryConflict, dbo:SocietalEvent .
  ?person dbo:commanderInWar ?personCommandWar .

  # Reference to 'A' Battery, Royal Australian Artillery
  dbr:A_Battery,_Royal_Australian_Artillery dbo:reference ?unitReference ;
                                            a dbo:MilitaryUnit, dbo:Organisation ;
                                            dbo:nationality dbr:Australia .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
773,64,test,"Give me the spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of Carloman of Bavaria and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?charlesFat a dbo:Monarch ;
              dbo:child dbr:Bernard_of_Swabia ;
              dbo:child dbr:Carloman_of_Bavaria .
  
  ?charlesFat dbo:spouse ?spouse .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
47,60,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/governor> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardAwardeeOffice ?politicianAdministration
WHERE {
  # Find an award with an awardee who holds an office in India
  ?award a dbo:Award ;
         dbo:recipient ?awardee .
  ?awardee dbo:office ?awardAwardeeOffice .
  FILTER EXISTS { ?awardAwardeeOffice dbo:country dbr:India }

  # Find a politician involved in Operation Green Hunt and their administration
  ?politician a dbo:Politician ;
              dbo:occupation ?operationGreenHunt .
  ?operationGreenHunt rdfs:label ""Operation Green Hunt""@en .
  ?politician dbo:office ?politicianOffice .
  ?politicianOffice dbo:administration ?politicianAdministration .

}
```",6,8,7,3,2,3,3,71,0,0,33,0,0.0,0
839,60,test,"Give me the band of the band, that is a musical artist, of the professional in Musician and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName
WHERE {
  # Kevin Russell as a musician
  dbr:Kevin_Russell (dbo:profession) dbr:Musician .

  # Bands associated with Kevin Russell
  ?band dbo:member dbr:Kevin_Russell .
  
  # Band of the band
  ?band dbo:associatedBand ?subBand .
  
  # Get the name of the sub-band
  ?subBand rdfs:label ?bandName .
  
  FILTER (lang(?bandName) = 'en')
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
216,65,test,"Give me the player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/coach> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?playerInCoach ?team
WHERE {
  # Find the person born on December 20, 1983, who is a sports manager, soccer manager, and player
  ?person dbo:birthDate ""1983-12-20""^^xsd:date ;
          rdf:type dbo:SportsManager ;
          rdf:type dbo:SoccerPlayer ;
          rdf:type dbo:SoccerManager .

  # Find the team this person coaches as part of the Croatia national under-21 football team
  ?team dbp:coach ?person ;
        rdf:type dbo:Organization ;
        rdf:type dbo:SportsClub ;
        rdf:type dbo:SoccerClub .

  # Find Džemal Berberović's player association in coaching
  dbr:Džemal_Berberović dbo:playerInCoach ?playerInCoach .
  
  # Ensure the team is associated with Džemal Berberović as a coach
  ?team dbp:coach dbr:Džemal_Berberović .

}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
417,59,test,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
    # Step 1: Identify Knud, Hereditary Prince of Denmark
    ?knud a dbo:Person ;
          dbp:name ""Knud, Hereditary Prince of Denmark""@en .

    # Step 2: Find his child
    ?child dbo:parent ?knud .

    # Step 3: Identify the leader of Colony of Greenland who is royalty
    ?leader a dbo:Monarch ; 
            dbo:country dbr:Greenland ;
            dbp:title ""Governor""@en .
    
    # Step 4: Find the father of this leader, ensuring they are royalty
    ?father dbo:child ?leader .
    FILTER EXISTS { ?father a dbo:RoyalFamilyMember }

    # Step 5: Find the spouse of this royal parent
    ?spouse dbo:spouse ?father .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
933,58,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of Alan Warner (musician) and band of Mike Elliott (saxophonist).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName ?bandAlanWarner ?bandMikeElliott WHERE {
  # Find the person born on 1947-04-21 who is a musical artist
  ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
          rdf:type dbo:MusicalArtist .

  # Reference to Alan Warner's birth name and band
  ?alanWarner foaf:name ?birthName ;
              dbo:musicalArtist ?bandAlanWarner .
  
  FILTER (STRSTARTS(STR(?alanWarner), ""http://dbpedia.org/resource/Alan_Warner_(musician)""))

  # Reference to Mike Elliott's band
  ?mikeElliott dbo:band ?bandMikeElliott .
  
  FILTER (STRSTARTS(STR(?mikeElliott), ""http://dbpedia.org/resource/Mike_Elliott_(saxophonist)""))
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
955,20,test,"Give me the band of the writer of the work, that is a work and an album and a musical work, of Matt Freeman and band of the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  # Find works by Matt Freeman that are both albums and musical works
  ?work dbo:composer dbr:Matt_Freeman ;
        a dbo:Album, dbo:MusicalWork .

  # Find the band associated with this work
  ?work dbo:byArtist ?artist .
  ?artist dbo:band ?band .

  # Ensure the artist is also a musical artist and an artist
  ?artist a dbo:MusicalArtist, dbo:Artist .

  # Reference to Street Dogs as a band, group, or organization
  ?band rdfs:seeAlso dbr:Street_Dogs ;
        a (dbo:Band|dbo:Group|dbo:Organization) .
}
```",6,14,7,3,2,3,2,20,0,0,1,0,0.0,0
892,69,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of the true self of Enrico Crolla and landmark at elevation of the award of Anna Ishii.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/elevation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInAdministration ?party ?profession ?landmark
WHERE {
  # Entity in the administration
  ?entityInAdministration a dbo:Region ;
                         dbo:country dbr:Italy ;
                         a dbo:Settlement ;
                         a dbo:AdministrativeRegion .

  # Party associated with Andrea Cozzolino
  ?party a dbo:PoliticalParty, dbo:Organization ;
         dbp:member dbr:Andrea_Cozzolino .

  # Profession of Enrico Crolla's true self
  ?enricoCrolla a dbo:Person ;
                dbp:name ""Enrico Crolla"" .
  ?profession a dbo:Occupation ;
              dbo:employee ?enricoCrolla .

  # Landmark at elevation related to Anna Ishii's award
  ?award a dbo:Award ;
         dbp:recipient dbr:Anna_Ishii .
  ?landmark a dbo:LandscapeFeature ;
            dbo:elevation ?elevation ;
            dbo:relatedTo ?award .
}",8,14,9,3,3,3,3,71,0,0,2,0,0.0,0
582,66,test,"Give me the reference to the residence of Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence ?father ?teamNickname
WHERE {
  # Hirotaka Sugawara's residence
  dbr:Hirotaka_Sugawara dbo:residence ?residence .

  # Father of Masami Nagasawa who is an athlete, soccer manager, and sports manager
  dbr:Masami_Nagasawa dbo:father ?father .
  ?father a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .

  # Nickname of Hajime Moriyasu's team
  dbr:Hajime_Moriyasu dbo:team ?team .
  ?team dbo:nickname ?teamNickname .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
433,56,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of Bill Evans.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Paul Laurence Dunbar Chambers Jr.'s associated musical artist
  ?chambers a dbo:MusicalArtist ;
            dbo:associatedBandOrchestra dbr:Miles_Davis .

  # Step 2: Writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  ?clapton a dbo:Writer ;
           dbo:work dbr:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall .

  # Step 3: Bill Evans' associated musical artist
  ?evans a dbo:MusicalArtist ;
         dbo:associatedBandOrchestra ?milesDavis .
  
  FILTER(?milesDavis = dbr:Miles_Davis)

  # Step 4: The person in question
  ?person a dbo:MusicalArtist, dbo:Artist ;
          dbo:birthPlace ?place ;
          dbo:profession ?claptonProfession .

  # Ensure the profession matches Eric Clapton's
  ?clapton dbo:profession ?claptonProfession .
  
  # The person should be associated with Miles Davis (from Bill Evans' association)
  ?person dbo:associatedBandOrchestra ?milesDavis .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
582,62,test,"Give me the figure known as --10-19 and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v6 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?figure ?residence WHERE {
  # Find Kazuaki Nagasawa and his father
  ?kazuaki a dbo:Person ;
           foaf:surname ""Nagasawa"" ;
           dbo:father ?father .

  # Identify the father as an athlete, soccer manager, and sports manager
  ?father a dbo:Athlete, dbo:SoccerManager, dbo:SportsManager .

  # Find Hirotaka Sugawara
  ?sugawara a dbo:Person ;
            foaf:name ""Hirotaka Sugawara"" .

  # Link the father to Hirotaka Sugawara's residence
  ?father dbo:residenceLocation ?residence .

  # Identify the figure known as ""--10-19""
  ?figure dbo:wikiPageID ""-10-19"" ;
          dbo:location ?residence .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
917,65,test,"Give me the child of the father of Kamehameha IV and parent of the child, that is a royalty, of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v1 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child WHERE {
  # Step 1: Father of Kamehameha IV
  ?kamehamehaIV dbo:father ?father .

  # Step 2 & 3: Child of this father who is royalty and parent of the child (same as father)
  ?child dbo:parent ?father .
  ?child a dbo:Monarch .

  # Step 4: Spouse of Leleiohoku I
  ?leleiohokuI dbo:spouse ?spouse .

  # Step 5: Father of the spouse and child who is royalty
  ?spouse dbo:father ?spouseFather .
  ?royalChild dbo:parent ?spouseFather .
  ?royalChild a dbo:Monarch .

  FILTER (?child = ?royalChild)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
47,69,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of Banga Bhushan and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/office> ?result . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v7 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://dbpedia.org/property/governor> ?v4 . ?v3 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardName ?awardeeOffice ?bangaBhushanAwardeeOffice ?politicianOffice
WHERE {
  # Office of the awardee of an award in India
  ?award dbo:country dbr:India .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:office ?awardeeOffice .

  # Office of the awardee of Banga Bhushan
  dbr:Banga_Bhushan_Award dbo:recipient ?bangaBhushanAwardee .
  ?bangaBhushanAwardee dbo:office ?bangaBhushanAwardeeOffice .

  # Office of the administration of the commander, that is a politician, in Operation Green Hunt
  ?politician dbo:occupation dbr:Politician ;
              dbo:memberOf ?operation .
  ?operation rdfs:label ""Operation Green Hunt""@en .
  ?politician dbo:office ?politicianOffice .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
527,20,test,"Give me the actor of the movie, that is a work and English and a television show, with the professional in Actor and author of the work, that is a work and a book, of the host of Hyperland.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://dbpedia.org/property/author> ?v4 . ?v1 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:language ""English"" ;
         dbo:genre/dbo:subClassOf* dbo:TelevisionProgramme .
  
  ?actor dbo:profession dbr:Actor ;
         dbo:work ?movie .

  ?authorWork dbo:author ?actor ;
              a dbo:Book .

  ?hyperlandHost dbp:host ""Hyperland"" ;
                 dbo:work ?authorWork .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
5,19,test,"Give me the birthplace of the person born, that is a politician, as  and entity in the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> """"@en . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthplace WHERE {
  # Step 1: Identify Rubén Colón Tarrats
  dbr:Rub%C3%A9n_Col%C3%B3n_Tarrats dbo:associatedBand ?band .

  # Step 2: Find awards associated with the band
  ?band dbo:award ?award .

  # Step 3: Find entities (persons) associated with the award
  ?award dbp:recipient ?person .

  # Step 4: Identify politicians among these persons
  ?person a dbo:Politician ;
          dbo:birthPlace ?birthplace .
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
865,66,test,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native
WHERE {
  # Ram Jaipal Singh Yadav's residence and its native
  dbr:Ram_Jaipal_Singh_Yadav dbo:residenceCountry ?country .
  ?person dbo:nationality ?country .
  ?person dbo:name ?native .

  # Abu Ahmad Abdul Hafiz's child who is a politician
  ?child dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz ;
         dbo:occupation ""Politician""^^xsd:string .

  # Abul Maal Abdul Muhith's father and his father
  dbr:Abul_Maal_Abdul_Muhith dbo:father ?grandfather .
  ?grandfather dbo:father ?greatGrandfather .

  # Linking the politician child to Abul Maal Abdul Muhith's great-grandfather
  ?child dbo:parent ?greatGrandfather .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
917,56,test,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of Kekūanāoʻa and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Find children of Kamehameha IV who are royalty
  ?childKIV a dbo:Monarch ;
            dbo:spouseOrPartner ?kamehamehaIV .
  
  # Step 2: Identify their parent (Kekūanāoʻa)
  ?childKIV dbo:parent ?kekuanaoa .

  # Step 3: Find children of Kekūanāoʻa who are royalty and also children of Kamehameha IV's royal child
  ?childKK a dbo:Monarch ;
           dbo:parent ?kekuanaoa .
  
  # Step 4: Identify the father of a royal child of Kamehameha III
  ?childKIII a dbo:Monarch ;
             dbo:spouseOrPartner ?kamehamehaIII .
  ?childKIII dbo:parent ?fatherOfChildKIII .

  FILTER(?kekuanaoa = dbr:Keōpūolani_of_Hawaii)
  FILTER(?kamehamehaIV = dbr:King_Kamehameha_IV)
  FILTER(?kamehamehaIII = dbr:King_Kamehameha_III)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
645,69,test,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and commander in the force of the commander in Siege of Madrid.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/office> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Francisco Largo Caballero
  dbr:Franco_Largo_Caballero a dbo:Person ;
    dbo:nationality dbr:Spain ;
    dbo:birthPlace dbr:Restoration_(Spain) .

  # His role in military and societal events
  ?event1 a dbo:MilitaryConflict, dbo:SocietalEvent ;
    dbo:participant dbr:Franco_Largo_Caballero .
  
  # His leadership roles
  ?office a dbo:GovernmentAgency, dbo:Organization ;
    dbo:leader dbr:Franco_Largo_Caballero .

  # Siege of Madrid involvement
  ?siegeEvent a dbo:MilitaryConflict ;
    dbo:commander dbr:Franco_Largo_Caballero ;
    dbo:name ""Siege of Madrid"" .
  
  # Military force associated with him
  ?militaryForce dbo:commander dbr:Franco_Largo_Caballero ;
    dbo:participatedIn ?event1, ?siegeEvent .
}
```",8,13,9,3,3,3,3,71,0,0,2,0,0.0,0
933,65,test,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of the band of Alan Warner (musician).",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  # Find Alan Warner as a musician
  dbr:Alan_Warner_Musician dbo:occupation dbr:Musician .
  
  # Identify the band associated with Alan Warner
  dbr:Alan_Warner_Musician dbo:musicalBand ?band .

  # Ensure the band is both a group and an organization
  ?band rdf:type dbo:MusicalGroup ;
        rdf:type dbo:Organization .

  # Retrieve Alan Warner's birth name
  dbr:Alan_Warner_Musician dbp:birthdayBirthName ?birthName .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
933,56,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to Alan Warner and band of the band of Alan Warner (musician).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v4 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?person WHERE {
  # Step 1: Find the person born on 1947-04-21 who is a musical artist
  ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
          rdf:type dbo:MusicalArtist .

  # Step 2: Find the band associated with this person
  ?band dbo:member ?person ;
        rdf:type dbo:Band, dbo:Organization, dbo:Group .

  # Step 3: Connect to Alan Warner (musician) and his band
  dbr:Alan_Warner_Musician dbo:bandMember ?alanWarnerBand .
  ?alanWarnerBand rdf:type dbo:Band .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
18,26,test,"Give me the alumnus of the figure known, that is an educational institution, as Saints and professional in the award of Ana María Sánchez de Ríos and parent of Liza Huber.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  # Find Ana María Sánchez de Ríos and her child Liza Huber
  ?ana a dbo:Person ;
      foaf:name ""Ana María Sánchez de Ríos""@en ;
      dbo:child dbr:Liza_Huber .

  # Identify the educational institution known as ""Saints""
  ?institution a dbo:EducationalInstitution ;
              rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""saints""))

  # Find an alumnus of this institution who is also Ana's child
  ?alumnus a dbo:Person ;
           dbo:almaMater ?institution ;
           dbo:parent ?ana .

}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
933,61,test,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1947-04-21""^^xsd:date ;
          dbo:bandMember ?band .
  
  ?band a dbo:Band, dbo:Organization .

  OPTIONAL { ?person dbp:birthday ""1947-04-21""^^xsd:date . }
  
  ?person foaf:name ?birthName .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
839,70,test,"Give me the band of the band, that is a musical artist, of the professional in Musician and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of the person born, that is a musical artist, as Kevin Richard Russell.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfPeter ?bandMember ?kevinBand
WHERE {
  # Peter Schorowsky's band
  ?peter a dbo:MusicalArtist ;
         foaf:name ""Peter Schorowsky"" .
  
  ?peter dbo:member ?bandOfPeter .
  ?bandOfPeter a dbo:Band .

  # Band member who is also a musician and band
  ?bandMember dbo:member ?bandOfPeter ;
              a dbo:MusicalArtist, dbo:Band, dbo:Group .

  # Kevin Richard Russell's details
  ?kevin a dbo:MusicalArtist ;
         foaf:name ""Kevin Richard Russell"" .
  
  ?kevin dbo:birthday ?birthDate .
  
  # Kevin is also a member of the band
  ?bandMember dbo:member ?kevinBand .
  ?kevinBand a dbo:Band .

}
```

This query attempts to find:
- The band associated with Peter Schorowsky.
- A member of that band who is both a musician and a band/group.
- Kevin Richard Russell, identifying his birth details and confirming he's part of the same band.",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
826,69,test,"Give me the spouse of the child of the father of Anna Magdalena Appel and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Anna Magdalena Appel's father
  dbr:Anna_Magdalena_Bach dbo:father dbr:Johann_Gottfried_Bach .

  # Child of Johann Gottfried Bach (Anna Magdalena Appel's father)
  dbr:Johann_Gottfried_Bach dbo:child ?child1 .
  
  # Spouse of the child
  ?child1 dbo:spouse ?spouse .

  # Louis I, Grand Duke of Hesse's royal child and their successor
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .
  
  # Successor of the royal child
  ?royalChild dbo:successor ?successor .

  # Louis IV, Grand Duke of Hesse's parent of a child
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:child ?child2 .
  ?parent dbo:child ?child2 .
  
  # Predecessor of the parent
  ?parent dbo:predecessor ?predecessor .

  # Ensure the successor and predecessor are the same entity
  FILTER (?successor = ?predecessor)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
216,71,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.","SELECT ?result WHERE { ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/coach> ?v2 . ?v8 <http://dbpedia.org/ontology/birthDate> ?v7 . ?result <http://dbpedia.org/ontology/coach> ?v8 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://dbpedia.org/ontology/coach> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Find Pavel Vezhinov's date of death
  dbr:Pavel_Vezhinov dbo:dateOfDeath ?deathDate .

  # Find individuals born on the same day as Pavel Vezhinov's death who are sports managers, soccer managers, and players
  ?person dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = YEAR(?deathDate) && MONTH(?birthDate) = MONTH(?deathDate) && DAY(?birthDate) = DAY(?deathDate))
  
  # Ensure the person is a sports manager, soccer manager, and player
  ?person dbo:occupation dbr:Sports_Manager .
  ?person dbo:occupation dbr:Soccer_Manager .
  ?person dbo:occupation dbr:Soccer_Player .

  # Find the organization/soccer club associated with Croatia U21 and its coach
  ?club a dbo:SoccerClub ;
        dbp:coach ?coach .
  ?coach dbo:birthDate ?birthDate . # Reuse birth date from above

  # Ensure the coach is also a soccer player, sports manager, and soccer manager
  ?coach dbo:occupation dbr:Soccer_Player .
  ?coach dbo:occupation dbr:Sports_Manager .
  ?coach dbo:occupation dbr:Soccer_Manager .

  # Find Džemal Berberović's team
  dbr:Džemal_Berberović dbo:team ?team .
}",9,20,10,3,3,3,3,71,0,0,1,0,0.0,0
216,25,test,Give me the office of the mayor of Ros Bates and administration of  and party of the awardee of Australian Defence Medal.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . ?result <http://dbpedia.org/property/leader> """"@en . ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?administration ?party ?awardee WHERE {
  # Ros Bates information
  OPTIONAL {
    dbr:Ros_Bates dbo:positionHeld ?mayorPosition .
    ?mayorPosition dbo:officeName ?office ;
                  dbo:administrativeArea ?administration .
    dbr:Ros_Bates dbo:memberOfParty ?party .
  }

  # Australian Defence Medal awardee
  OPTIONAL {
    ?awardee dbo:award ?admAward .
    ?admAward rdfs:label ""Australian Defence Medal""@en .
  }
}
```

This query uses optional patterns to ensure that if any of the information is missing, it won't prevent other data from being retrieved. It assumes that Ros Bates' position as mayor and her party affiliation are linked in DBpedia using `dbo:positionHeld`, `dbo:officeName`, `dbo:administrativeArea`, and `dbo:memberOfParty`. Similarly, it looks for the Australian Defence Medal awardee by matching the award label.",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
926,57,test,"Give me the father of Mahmud II and child of the father, that is a royalty, of Mustafa III and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Mahmud II's father
  dbr:Mahmud_II dbo:father dbr:Süleyman_III .

  # Mustafa III's father and his child who is royalty
  dbr:Mustafa_III dbo:father dbr:Abdul_Hamid_I .
  ?royaltyChild dbo:childOf dbr:Abdul_Hamid_I ;
                a dbo:Monarch .

  # Şermi Kadın's spouse and their child
  dbr:Süleyman_III dbo:spouse dbr:Sermi_Kadın .
  ?spouseChild dbo:childOf dbr:Sermi_Kadın .

  # Successor of the spouse's child
  ?successor dbo:predecessor ?spouseChild .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
507,68,test,"Give me the spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of Guy Ferland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v7 <http://dbpedia.org/ontology/director> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v7 <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Anne V. Coates by her birth name
  ?anne a dbo:FilmEditor ;
        foaf:name ""Anne V. Coates""@en ;
        dbp:birthName ?birthName .

  # Step 2: Find the movie she directed that is both a movie and a work
  ?movie dbo:director ?anne ;
         rdf:type dbo:Film ;
         dbo:work ?work .

  # Step 3: Identify the person born on 1919-06-17 who is in the same profession as Guy Ferland
  ?person dbo:birthDate ""1919-06-17""^^xsd:date ;
          dbo:profession dbr:Film_editor ; # Assuming film editing based on context
          foaf:name ?name .

  # Step 4: Determine the spouse of this person
  ?person dbp:spouse ?spouse .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
495,18,test,Give me the child of the father of the parent of Princess Catherine of Württemberg and father of the child of Princess Charlotte of Saxe-Hildburghausen.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
    # Step 1: Princess Catherine of Württemberg
    ?catherine a dbo:Person ;
              dbp:name ""Princess Catherine of Württemberg""@en .
    
    ?parentCatherine dbo:child ?catherine .
    ?grandParentCatherine dbo:child ?parentCatherine .
    ?fatherOfGrandParentCatherine dbo:spouse ?grandParentCatherine ;
                                  a dbo:Man .

    # Step 2: Princess Charlotte of Saxe-Hildburghausen
    ?charlotte a dbo:Person ;
               dbp:name ""Princess Charlotte of Saxe-Hildburghausen""@en .
    
    ?childOfCharlotte dbo:parent ?charlotte .
    ?fatherOfChild dbp:spouse ?motherOfChild ;
                   dbo:child ?childOfCharlotte .

    # Step 3: Find the common individual
    FILTER (?fatherOfGrandParentCatherine = ?fatherOfChild)
    ?commonIndividual dbo:child ?child .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
433,57,test,"Give me the professional in the profession of Bob Marley and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and associated musical artist of Paul Chambers.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?professional ?associatedArtist1 ?associatedArtist2 WHERE {
  # Bob Marley's profession
  ?bobMarley a dbo:MusicalArtist ;
             foaf:name ""Bob Marley"" .
  
  # Associated musical artist of Bob Marley
  ?bobMarley dbo:associatedMusicalArtist ?associatedArtist1 .

  # Filter associated artists who are both an artist and a musical artist
  ?associatedArtist1 a dbo:MusicalArtist, dbo:Artist .

  # Ornette Coleman's associated musical artist
  ?ornetteColeman a dbo:MusicalArtist ;
                 foaf:name ""Ornette Coleman"" .
  
  ?ornetteColeman dbo:associatedMusicalArtist ?associatedArtist2 .

  # Paul Chambers' associated musical artist
  ?paulChambers a dbo:MusicalArtist ;
                foaf:name ""Paul Chambers"" .
  
  ?paulChambers dbo:associatedMusicalArtist ?associatedArtist3 .

  # Ensure the same person is linked through both Ornette Coleman and Paul Chambers
  FILTER(?associatedArtist2 = ?associatedArtist3)
}
```",6,10,7,3,3,3,3,71,0,0,4,0,0.0,0
445,60,test,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country ?awardEntity
WHERE {
  # Find athletes from Great Britain and their countries of residence
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:residence ?residence .
  
  OPTIONAL { 
    ?residence a dbo:Country ; 
               rdfs:label ?country . 
  }
  
  # Find commanders in the Battle of Saint-Mihiel and their awards
  ?commander dbo:participatedInBattle dbr:Battle_of_Saint-Mihiel ;
             dbo:award ?award .
  
  OPTIONAL {
    ?award rdfs:label ?awardEntity .
  }
}",6,8,7,3,2,3,3,71,0,0,102,0,0.0,0
124,62,test,"Give me the military force of Battle of Atbara and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battle ?militaryForce ?commander ?war ?medalAwardee
WHERE {
  # Battle of Atbara details
  dbr:Battle_of_Atbara a dbo:MilitaryConflict ;
    dbo:militaryCommander ?commander ;
    dbo:participatingMilitaryUnit ?militaryForce .

  # Reference to 'A' Battery, Royal Australian Artillery
  OPTIONAL { 
    ?militaryForce rdfs:label ""A Battery, Royal Australian Artillery""@en .
  }

  # War involving the awardee of British South Africa Company Medal
  ?medalAwardee dbo:awardedBy dbr:British_South_Africa_Company_Medal ;
    dbo:participatedIn ?war .

  OPTIONAL {
    ?war rdfs:label ?warLabel .
  }

  # Ensure the war is a societal event and military conflict
  FILTER (CONTAINS(LCASE(?warLabel), ""conflict"") && CONTAINS(LCASE(?warLabel), ""societal""))

}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
773,59,test,"Give me the parent of the successor of the child, that is a royalty, of Louis the Pious and spouse of the father of the parent of Bernard (son of Charles the Fat).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/ontology/successor> ?v5 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfSuccessorSpouse
WHERE {
  # Step 1: Louis the Pious and his children
  ?louis a dbo:Monarch ;
         foaf:name ""Louis the Pious""@en .
  
  ?child dbo:spouse* ?louis ;
         a dbo:Person .

  # Step 2: Child that is royalty
  ?royalChild dbo:monarch ?country .

  FILTER (?child = ?royalChild)

  # Step 3: Successor of this royal child
  ?successor dbo:predecessor ?royalChild .

  # Step 4: Parent of the successor
  ?parentOfSuccessor dbo:child ?successor .

  # Step 5: Spouse of the father of the parent
  ?fatherOfParent dbo:spouse* ?parentOfSuccessor .
  ?parentOfSuccessorSpouse dbo:spouse ?fatherOfParent .

  # Step 6: Bernard (son of Charles the Fat)
  ?charlesTheFat a dbo:Monarch ;
                 foaf:name ""Charles the Fat""@en .
  
  ?bernard dbo:child ?charlesTheFat ;
           foaf:name ""Bernard""@en .

  ?parentOfBernard dbo:child ?bernard .

  FILTER (?parentOfSuccessor = ?parentOfBernard)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
47,64,test,"Give me the office of Bidesh Ranjan Bose and office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> ?v3 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office WHERE {
  # Bidesh Ranjan Bose's office
  OPTIONAL {
    VALUES ?person { dbr:Bidesh_Ranjan_Bose }
    ?person dbo:positionHeld ?office .
  }

  # Politician in Operation Green Hunt and their office
  OPTIONAL {
    ?operation dbo:participant ?politician .
    FILTER(CONTAINS(LCASE(?operation), ""operation green hunt""))
    ?politician rdf:type dbo:Politician .
    ?politician dbo:positionHeld ?office .
  }

  # Awardee of an award in India and their office
  OPTIONAL {
    ?award dbo:country dbr:India ;
           dbo:recipient ?awardee .
    ?awardee dbo:positionHeld ?office .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
865,63,test,"Give me the father of the child of Abu Ahmad Abdul Hafiz and native of the residence, that is a country, of the person decedent at Patna and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Identify Abu Ahmad Abdul Hafiz
  ?abuAH a dbo:Person ;
         foaf:name ""Abu Ahmad Abdul Hafiz"" .

  # Step 2: Find his child who is a politician
  ?child dbo:parent ?abuAH ;
         a dbo:Politician .

  # Step 3: Determine the father of this child (should be Abu Ahmad Abdul Hafiz)
  ?child dbo:father ?abuAH .

  # Step 4: Identify the decedent at Patna
  ?decedent dbo:deathPlace dbr:Patna ;
            a dbo:Person .

  # Step 5: Find the native country of this decedent
  ?decedent dbo:nationality ?country .

  # Step 6: Find the father of the child who is a politician and matches criteria
  ?child2 dbo:parent ?abuAH ;
          a dbo:Person .
  
  ?child2 dbo:father ?father .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
715,67,test,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in Rif War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/property/office> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:officeHolderOf ?mayor .
  ?person dbo:politicalPartyMember ?party .
  ?person dbo:electedAsPresidentDuring ?election .
  FILTER(?election = dbr:1933_Spanish_general_election) .

  ?person dbo:leaderOf ?organization .
  ?organization a dbo:GovernmentAgency ; dbo:referenceTo dbr:Claudio_Franco_Iribarnegaray .

  ?person dbo:militaryCommanderIn ?war .
  FILTER(?war = dbr:Rif_War) .

  ?person rdf:type dbo:Politician .
}",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
98,9,test,Give me the parent of the successor of Emperor Nijō and child of the child of Emperor Toba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Nijō> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Emperor_Toba> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?successor dbo:successor dbr:Emperor_Nijō .
  ?parent dbo:child ?successor .
  
  ?tobaChild dbo:child dbr:Emperor_Toba .
  ?grandchild dbo:child ?tobaChild .

  FILTER (?parent = ?grandchild)
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
18,28,test,"Give me the parent of the professional in Actress and alumnus of the figure known, that is an educational institution, as Saints and professional in the award of Ana María Sánchez de Ríos.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v5 . ?v5 <http://dbpedia.org/property/nickname> ""Saints""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentInstitution WHERE {
  # Find Ana María Sánchez de Ríos
  ?anaMaría a dbo:Person ;
            foaf:name ""Ana María Sánchez de Ríos""@en ;
            dbo:occupation dbo:Actress .

  # Find the educational institution associated with Saints
  ?institution dbo:alumni ?anaMaría ;
               rdfs:label ?label .
  FILTER CONTAINS(LCASE(?label), ""saints"")

  # Find the parent organization of this institution
  OPTIONAL { ?institution dbo:foundingOrganization ?parentInstitution }
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
554,18,test,Give me the leader of the birth place of The Legendary Tigerman and leader of the administration of the party member of Independent politician.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?result . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthplaceLeader ?partyLeader
WHERE {
  # Part 1: The Legendary Tigerman's birthplace and its leader
  dbr:The_Legendary_Tigerman dbo:birthPlace ?birthplace .
  
  OPTIONAL { 
    ?birthplace dbo:mayor ?leader .
    ?leader dbp:title ""Mayor""@en ; dbp:name ?birthplaceLeader .
  }
  
  # Part 2: Independent politician and their party's leader
  ?independentPolitician dbo:memberOfParty ?party ;
                        rdf:type dbr:Independent_politician .
  
  OPTIONAL {
    ?party dbo:leader ?partyLeader .
  }
}
```",5,5,6,3,2,3,2,20,0,0,3,0,0.0,0
341,8,test,"Give me the writer of the work, that is a work and an album, of Serrano and band member of Beyoncé.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Beyoncé> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> ""Serrano""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  # Find Serrano who is a musician or artist
  ?serrano a dbo:Musician ;
           foaf:name ""Serrano""@en .
  
  # Find Beyoncé's band members
  ?bandMember dbo:memberOf dbr:Beyoncé ;
              a dbo:MusicalArtist .

  # Identify albums that are works and involve both Serrano and a band member of Beyoncé
  ?album dbo:artist ?serrano ;
         dbo:artist ?bandMember ;
         a dbo:Album, dbo:CreativeWork .
  
  # Get the writer of such an album/work
  ?album dbo:writer ?writer .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
965,66,test,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  # George Mountbatten, 2nd Marquess of Milford Haven's birth name
  dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven dbo:birthName ?birthName .
  
  # Parent of George Mountbatten who is a noble
  ?parent dbo:child dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven ;
          a dbo:Noble .

  # Child of this parent who is royalty and related to Prince Louis of Battenberg
  ?royalChild dbo:parent ?parent ;
              dbo:spouse ?spouse .
  
  # Spouse of the spouse of Princess Victoria of Hesse and by Rhine
  ?princessVictoria dbr:Princess_Victoria_of_Hesse_and_by_Rhine ;
                    dbo:spouse ?spouseOfPrincess .
  
  ?spouse = ?spouseOfPrincess .

  # Return the parent's name
  ?parent rdfs:label ?parentName .
}
ORDER BY ?parentName",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
130,20,test,"Give me the figure known as the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama and entity in the administration, that is American, of the award of Živko Ključe.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v2 <http://dbpedia.org/ontology/director> ?v1 . <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/governor> ?v4 . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?film a dbo:Film .
  ?film a dbo:SoccerClub .

  ?person dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Madison,_Alabama ;
          dbo:occupation dbo:Coach ;
          dbo:occupation dbo:CollegeCoach .

  ?administration dbo:member ?person .
  
  ?award dbo:recipient ?person ;
         rdfs:label ""Živko Ključe""@en .

  ?film dbo:director ?person .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
216,70,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v7 . ?result <http://dbpedia.org/ontology/coach> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coach WHERE {
  # Step 1: Find Džemal Berberović's association with Croatia national under-21 football team
  dbr:Džemal_Berberović dbo:playerInTeam dbr:Croatia_national_under-21_football_team .
  
  # Step 2: Identify the organization that is a sports club and soccer club associated with Džemal Berberović
  ?organization dbo:sport dbr:Soccer ;
                rdf:type dbo:SportsClub, dbo:SoccerClub ;
                dbo:player dbr:Džemal_Berberović .
  
  # Step 3: Find the person who was born and is a sports manager, soccer manager, and player at Pavel Vezhinov's death
  ?person dbo:dateOfBirth ?birthDate ;
          rdf:type dbo:SportsManager, dbo:SoccerManager, dbo:SoccerPlayer ;
          dbo:death dbr:Pavel_Vezhinov .
  
  # Step 4: Identify the coach who is also a soccer player and sports manager and soccer manager for this organization
  ?coach dbo:playerInTeam ?organization ;
         rdf:type dbo:SoccerPlayer, dbo:SportsManager, dbo:SoccerManager .
}
```",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
926,67,test,"Give me the father of Mahmud II and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royaltyChild
WHERE {
  # Mahmud II's father
  dbr:Mahmud_II dbo:father dbr:Süleyman_III .

  # Süleyman III's children who are royalty
  dbr:Süleyman_III dbo:child ?royaltyChild .
  ?royaltyChild a dbo:Monarch .

  # Beyhan Sultan is the daughter of Mustafa III
  dbr:Beyhan_Sultan dbo:father dbr:Mustafa_III .

  # Şermi Kadın's spouse and their child
  ?spouse dbo:spouse dbr:Süleyman_III .
  ?spouse dbo:child ?childOfSpouse .

  # Successor of the child of Şermi Kadın's spouse
  ?successor dbo:predecessor ?childOfSpouse .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
124,57,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 WHERE {
  # Step 1: Find the awardee of the British South Africa Company Medal who was a commander in the Mahdist War
  ?person dbo:award dbr:British_South_Africa_Company_Medal ;
          dbo:commanderInMilitaryConflict dbr:Mahdist_War .

  # Step 2: Identify the military force associated with this person during an event that is both a war and a societal event
  ?event1 dbo:type dbr:War ;
         dbo:societalEvent true ;
         dbo:militaryForce ?militaryForce1 .
  ?person dbo:commanderInMilitaryConflict ?event1 .

  # Step 3: Find the military force associated with Herbert Kitchener during a similar type of event
  ?kitchener dbr:Herbert_Kitchener_1st_Earl_Kitchener ;
             dbo:commanderInMilitaryConflict ?event2 .
  
  ?event2 dbo:type dbr:War ;
          dbo:societalEvent true ;
          dbo:militaryForce ?militaryForce2 .

}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
865,56,test,"Give me the father of AK Abdul Momen and native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherAKAbdulMomen ?nativeCountryOfResidence ?grandfatherAbulMaalAbdulMuhith
WHERE {
  # Father of AK Abdul Momen
  OPTIONAL { 
    dbr:AK_Abdul_Momen dbo:father ?fatherAKAbdulMomen .
  }

  # Native country of Ram Jaipal Singh Yadav's residence
  OPTIONAL {
    dbr:Ram_Jaipal_Singh_Yadav dbo:nativePlace ?nativePlace .
    ?nativePlace dbo:country ?nativeCountryOfResidence .
  }

  # Grandfather of Abul Maal Abdul Muhith
  OPTIONAL {
    dbr:Abul_Maal_Abdul_Muhith dbo:father ?fatherAbulMaalAbdulMuhith .
    ?fatherAbulMaalAbdulMuhith dbo:father ?grandfatherAbulMaalAbdulMuhith .
  }
}
```",6,7,7,3,3,3,3,71,1,0,0,1.0,1.0,1.0
495,20,test,Give me the child of the father of the parent of Princess Catherine of Württemberg and father of the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?v4 . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonFather WHERE {
  # For Princess Catherine of Württemberg
  ?catherineParent dbo:child dbr:Princess_Catherine_of_W%C3%BCrttemberg .
  ?catherineGrandfather dbo:spouse ?catherineParent ;
                       a dbo:Man .
  ?catherineChild dbo:parent ?catherineGrandfather .

  # For Princess Pauline of Württemberg
  ?paulineParent dbo:child dbr:Princess_Pauline_of_W%C3%BCrttemberg .
  ?paulineGrandfather dbo:spouse ?paulineParent ;
                      a dbo:Man .
  ?paulineChild dbo:parent ?paulineGrandfather .

  # Find the common father
  FILTER (?catherineChild = ?paulineChild)
  BIND(?catherineGrandfather AS ?commonFather)
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
445,56,test,"Give me the entity in the award of the commander in Battle of Saint-Mihiel and death place of Patrick Moore and entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardEntity ?deathPlace ?residenceCountry
WHERE {
  # Entity in the award of the commander in Battle of Saint-Mihiel
  OPTIONAL { 
    ?battle dbo:commander ?commander .
    ?commander dbo:awardsReceived ?award .
    ?award dbo:name ?awardEntity .
    FILTER (str(?battle) = ""Battle_of_Saint-Mihiel"")
  }

  # Death place of Patrick Moore
  OPTIONAL {
    dbr:Patrick_Moore dbo:deathPlace ?deathPlace .
  }
  
  # Residence country of Anna Sharkey
  OPTIONAL {
    dbr:Anna_Sharkey dbo:residence ?residence .
    ?residence dbo:country ?residenceCountry .
  }
}
```",6,7,7,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
273,20,test,Give me the spouse of the child of the child of Edoardo Agnelli (1831-1871) and parent of the alumnus of the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v5 <http://dbpedia.org/ontology/almaMater> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Edoardo Agnelli (1831-1871)
  ?edoardo dbo:birthYear ""1831""^^xsd:gYear ;
           dbo:deathYear ""1871""^^xsd:gYear ;
           dbo:child ?child .

  # Step 2: Find the child of Edoardo
  ?child dbo:child ?grandchild .

  # Step 3: Determine the spouse of this grandchild
  ?grandchild dbo:spouse ?spouse .

  # Step 4: Check if this spouse is a parent of an alumnus from Università degli Studi di Torino
  ?alumnus dbp:almaMater <http://dbpedia.org/resource/Universit%C3%A0_degli_Studi_di_Torino> ;
           dbo:parent ?spouse .
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
865,61,test,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?father
WHERE {
  # Step 1: Syeda Shahar Banu's spouse
  ?spouse a dbo:Spouse ;
          dbo:spouse ?syedaShaharBanu .
  
  FILTER(?syedaShaharBanu = dbpedia:Syeda_Shaheen_Banu) # Assuming her full name is used in DBpedia

  # Step 2: Their child who is a politician
  ?child dbo:parent ?spouse ;
         dbo:parent ?otherParent ;
         a dbo:Politician .

  # Step 3: Father of this Politician Child
  ?father1 dbo:child ?child .
  
  # Step 4: Abul Maal Abdul Muhith's father
  ?abulMaal dbpedia:father ?fatherAbulMaal .

  FILTER(?abulMaal = dbpedia:Abul_Maal_Abdul_Muhith)

  # Step 5: Child of Abul Maal Abdul Muhith's Father
  ?child2 dbo:parent ?fatherAbulMaal ;
          a dbo:Person .

  # Step 6: The father of this child
  ?father2 dbo:child ?child2 .

  # Ensure both fathers are the same person
  FILTER(?father1 = ?father2)
}",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
965,70,test,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Step 1: Identify the politician born on 1854-05-24
  ?politician dbo:birthday ""1854-05-24""^^xsd:date ;
              a dbo:Politician .

  # Step 2: Find their child who is royalty
  ?child dbo:parent ?politician ;
         a dbo:RoyalFamilyMember .

  # Step 3: Determine the parent of this royal child
  ?grandparent dbo:child ?child .

  # Step 4: This grandparent should also be the parent of George Mountbatten, 2nd Marquess of Milford Haven
  ?george dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven ;
          dbo:birthName ""George Mountbatten, 2nd Marquess of Milford Haven"" ;
          dbo:parent ?grandparent .

  # Step 5: This grandparent must be the spouse of the spouse of Princess Victoria of Hesse and by Rhine
  ?princess dbr:Princess_Victoria_of_Hesse_and_by_Rhine ;
            dbo:spouse ?spouse .
  ?spouse2 dbo:spouse ?grandparent .
  FILTER (?spouse = ?spouse2)

  # Return the grandparent
  BIND(?grandparent AS ?parent)
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
978,19,test,"Give me the band member of the person born as the name of Chicane (musician) and band member of the professional, that is a musical artist and an artist, in .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember
WHERE {
  # Find Chicane's name
  dbr:Chicane a dbo:MusicalArtist ;
              foaf:name ?chicaneName .

  # Find a person born with the same name as Chicane
  ?person foaf:name ?chicaneName ;
          dbo:birthName ?chicaneName ;
          dbo:profession ?profession .

  # Ensure this person is a musical artist and an artist
  FILTER (?profession = dbr:MusicalArtist || ?profession = dbr:Artist) .

  # Find band members of this person
  ?person dbo:bandMember ?bandMember .
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
124,67,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce1 ?militaryForce2 WHERE {
  # Find the person born on 1850-06-24 who received the British South Africa Company Medal and was a commander in the Mahdist War
  ?person dbo:birthday ""1850-06-24""^^xsd:date ;
          dbo:award dbr:British_South_Africa_Company_Medal ;
          dbo:militaryCommanderOf dbr:Mahdist_War .

  # Find the military force of a war that is an event, military conflict, and societal event
  ?war dbo:type dbr:Event , dbr:Military_conflict , dbr:Societal_event .
  ?militaryForce1 dbo:participatesIn ?war .

  # Find the force that is a societal event and a military conflict associated with the person
  ?force dbo:type dbr:Societal_event , dbr:Military_conflict ;
         dbo:militaryCommander ?person .
  
  # Ensure the same military force is linked to both conditions
  FILTER(?militaryForce1 = ?force)
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
645,64,test,"Give me the commander in the force of the commander in Siege of Madrid and military force of Spanish Civil War and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/office> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?role ?organization WHERE {
  ?person a dbo:MilitaryPerson ;
          dbo:nationality dbr:Spain ;
          dbo:birthPlace ?place .
  
  FILTER (regex(str(?place), ""Restoration"", ""i""))

  OPTIONAL { ?person dbo:commanderOf dbr:Siege_of_Madrid . }
  OPTIONAL { ?person dbo:militaryForce dbr:Spanish_Civil_War . }

  OPTIONAL {
    ?organization a dbo:GovernmentAgency ;
                  dbo:leader ?person .
  }

  OPTIONAL {
    ?role dbo:positionHeldBy ?person ;
          dbp:name ?name .
  }

  FILTER (BOUND(?person))
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
976,58,test,"Give me the office of Mustafa Şentop and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mustafaOffice ?mayorOffice ?naciOffice WHERE {
  # Mustafa Şentop's office
  dbr:Mustafa_Şentop dbo:office ?mustafaOffice .

  # Mayor who is a politician, Turkish, and part of Nation Alliance (Turkey)
  ?person dbo:nationality dbr:Turkey ;
          dbo:partyAffiliation dbr:Nation_Alliance_(Turkey) ;
          rdf:type dbo:Politician .
  ?person dbo:office dbp:Mayor ;
          rdfs:label ?mayorLabel .
  FILTER(CONTAINS(LCASE(?mayorLabel), ""politician"") && CONTAINS(LCASE(?mayorLabel), ""turkish""))
  BIND(dbpedia:en:Mayor as ?mayorOffice)

  # Naci Bostancı's office
  ?naci dbr:Naci_Bostancı ;
        dbp:birthday ?birthDate .
  FILTER(CONTAINS(LCASE(STR(?naci)), ""naci bostancı""))
  ?naci dbo:office ?naciOffice .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
892,71,test,"Give me the landmark at elevation of the award of the member of E-girls and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of the true self of Enrico Crolla.","SELECT ?result WHERE { ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v8 <http://dbpedia.org/property/leaderParty> ?v7 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v7 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v8 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Step 1: Identify a member of E-girls
  ?member dbo:memberOf dbr:E-girls .
  
  # Step 2: Find an award associated with this member
  ?award dbo:recipient ?member .
  
  # Step 3: Determine the elevation related to this award
  ?award dbo:elevation ?elevation .
  
  # Step 4: Italian entity that is a region and administrative region in administration
  ?region rdf:type dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:administrativeRegion true ;
          dbo:administration ?adminEntity .
  
  # Step 5: Political party of Andrea Cozzolino
  ?party rdf:type dbo:PoliticalParty ;
         dbo:member dbr:Andrea_Cozzolino .
  
  # Step 6: Profession associated with Enrico Crolla
  ?profession rdf:type dbo:Profession ;
              dbo:person dbr:Enrico_Crolla .
  
  # Final step: Find the landmark at the elevation of the award
  ?landmark dbo:elevation ?elevation ;
            dbo:region ?region ;
            dbo:party ?party ;
            dbo:profession ?profession .
}
```",9,15,10,3,3,3,3,71,0,0,2,0,0.0,0
445,57,test,Give me the entity in England and entity in the award of George H. Cameron and death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInEngland ?award ?deathPlace WHERE {
  # Find an entity in England
  ?entityInEngland dbo:country dbr:England .
  
  # Find the award associated with George H. Cameron
  ?award dbo:recipient dbr:George_H._Cameron ;
         dbo:established ""1820-03-10""^^xsd:date .

  # Find the death place of the awardee
  ?awardee dbo:award ?award .
  ?awardee dbo:deathPlace ?deathPlace .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
382,18,test,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler and landmark at elevation of the award of Harry Combes.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthplace WHERE {
  # Step 1: Identify Lukas Kübler's manager who is also an athlete and sports manager
  ?manager a dbo:SoccerManager ;
          dbo:athleteOf ?athlete ;
          dbo:sportsManagerOf ?sportsManager .
  
  ?player dbo:managedBy ?manager ;
          rdfs:label ""Lukas Kübler""@en .

  # Step 2: Identify Harry Combes' award and its associated landmark
  ?award dbo:recipient dbr:Harry_Combes ;
         dbo:location ?landmark .

  ?landmark dbo:elevation ?elevation .
  
  FILTER(?elevation > 0) # Assuming elevation is a positive number

  # Step 3: Get the birthplace of the manager
  ?manager dbo:birthPlace ?birthplace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
865,70,test,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child of the father of Abul Maal Abdul Muhith and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfResidence WHERE {
  # Ram Jaipal Singh Yadav's residence and its native
  ?ram a dbo:Politician ;
      foaf:residesIn ?country .
  
  ?country dbo:nativeOf ?nativeOfResidence .

  # Abul Maal Abdul Muhith's father's other child who is a politician
  dbr:Abul_Maal_Abdul_Muhith dbo:father ?abulFather ;
                              rdf:type dbo:Politician .
  
  ?abulFather dbo:child ?otherChild .
  FILTER(?otherChild != dbr:Abul_Maal_Abdul_Muhith)
  ?otherChild rdf:type dbo:Politician .

  # Syeda Shahar Banu's spouse's child who is a politician
  dbr:Syeda_Sharbanoo_Hussain dbo:spouse ?spouse .
  
  ?spouse dbo:child ?politicianChild .
  FILTER(?politicianChild != dbr:Syeda_Sharbanoo_Hussain)
  ?politicianChild rdf:type dbo:Politician .
}",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
433,70,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?person dbo:birthName ""Paul Laurence Dunbar Chambers Jr."" .
  ?person a dbo:MusicArtist ;
          a dbo:Artist .

  ?clapton dbo:profession dbp:musician ;
           dbo:writerOf <http://dbpedia.org/resource/Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall> .
  
  ?harrison dbo:associatedMusicalArtist ?clapton .

  ?shankar dbo:associatedMusicalArtist ?harrison ;
           a dbo:MusicArtist ;
           a dbo:Artist .

  ?coleman dbo:associatedMusicalArtist <http://dbpedia.org/resource/Don_Cherry> .
  
  ?artist dbo:associatedMusicalArtist ?coleman ;
          a dbo:MusicArtist ;
          a dbo:Artist .
}
```",8,14,9,3,3,3,3,71,0,0,4,0,0.0,0
645,58,test,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in Battle of Jarama.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?office a dbo:GovernmentAgency ;
          a dbo:Organization .
  
  ?office dbo:head ?leader .

  ?event dbo:type dbr:MilitaryConflict ;
         dbo:location dbr:Spain ;
         dbo:relatedEvent dbr:Restoration_(Spain) .

  ?militaryForce dbo:type dbr:MilitaryForce ;
                 dbo:partOf ?event .

  ?person dbo:nativePlace dbr:Spain ;
          dbo:militaryCommanderIn ?battle .
  
  ?battle a dbo:Battle ;
          dbo:name ""Battle of Jarama""^^xsd:string .

  FILTER(?person = dbr:Franco_Largo_Caballero)

  ?militaryForce dbo:leader ?leader .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
158,20,test,"Give me the entity in the award, that is a country, of the reference to Adelbert Cronkhite and party of the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v5 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/successor> ?v5 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  # Step 1: Identify Adelbert Cronkhite
  ?adelbertCronkhite a dbo:Person ;
                    foaf:name ""Adelbert Cronkhite""@en .

  # Step 2: Find his successor who is a prime minister, office holder, and politician
  ?adelbertCronkhite dbo:succeededBy ?successor .
  ?successor a dbo:PrimeMinister ;
             a dbo:OfficeHolder ;
             a dbo:Politician .

  # Step 3: Determine the party of this successor
  ?successor dbo:party ?party .

  # Step 4: Locate an award associated with this party that involves a country
  ?award dbo:recipient ?party .
  ?award dbo:country ?country .
}
```",6,12,7,3,2,3,2,20,0,0,1,0,0.0,0
36,26,test,"Give me the person born in 1971 and person born as the birth name of Ayo Makun and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person1971 ?ayoMakun ?lepaiousBoseFilm WHERE {
  # Person born in 1971
  ?person1971 dbo:birthYear ""1971""^^xsd:gYear .
  
  # Ayo Makun's birth name
  dbr:Ayo_Makun dbp:birthName ""Ayo Makun"" .

  # Lepacious Bose's claim to fame (film)
  dbr:Lepacious_Bose dbo:claimToFame ?lepaiousBoseFilm .
  
  # Ensure the person is an actor
  ?person1971 a dbo:Actor ;
              dbp:birthName ""Ayo Makun"" .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
933,60,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfBand
WHERE {
  # Step 1: Find the person born on 1947-04-21 who is a musical artist
  ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
          rdf:type dbo:MusicalArtist .

  # Step 2: Find the band associated with this person that is both a group and an organization
  ?band dbo:member ?person ;
        rdf:type dbo:Band, dbo:Organization .

  # Step 3: Find the band of ""The Ramones""
  dbr:The_Ramones dbo:bandMember ?ramonesBand ;
                  rdf:type dbo:Artist, dbo:MusicalArtist .

  # Step 4: Find the band associated with this band
  ?ramonesBand dbo:bandMember ?bandOfBand .
}
```",6,12,7,3,2,3,3,71,0,0,4,0,0.0,0
926,69,test,"Give me the father of the father of the spouse of Neşerek Kadın and successor of the child of Ahmed III and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfFather WHERE {
  # Neşerek Kadın's spouse
  ?spouse dbo:spouse dbr:Neşerek_Kadın .
  
  # Father of the spouse
  ?fatherOfSpouse dbo:child ?spouse .
  
  # Successor of the father (must be a royalty)
  ?successor dbo:predecessor ?fatherOfSpouse ;
             a dbo:Monarch .

  # Ahmed III's child
  ?ahmedChild dbo:parent dbr:Aḥmed_III .

  # Child's father who is a royalty
  ?childFather dbo:child ?ahmedChild .
  
  # Mustafa III as Beyhan Sultan's parent (royalty)
  ?mustafaIII dbo:spouse dbr:Beyhan_Sultan ;
              a dbo:Monarch .

  # Ensure the successor is related through Ahmed III's lineage
  FILTER(?successor = ?childFather)

  # Get the father of the father of the spouse
  ?fatherOfFather dbo:child ?fatherOfSpouse .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
987,57,test,"Give me the entity in the region, that is a country, of Central European Time and birth place of Dado Polumenta and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  # Find countries in the Central European Time zone
  ?country a dbo:Country ;
           dbo:timeZone dbr:Central_European_Time .

  # Dado Polumenta's birthplace
  ?dadoPolumenta dbo:birthPlace ?birthPlaceDado .
  FILTER (str(?dadoPolumenta) = ""Dado_Polumenta"") .

  # Emir Hadžihafizbegović's film and an actor from that film
  ?film dbo:starring dbr:Emir_Hadžihafizbegović ;
        dbo:starring ?actor .
  
  ?actor dbo:birthPlace ?birthPlaceActor .

  # Check if the birthplaces match a country in CET
  FILTER (?birthPlaceDado = ?birthPlaceActor && ?birthPlaceDado IN (SELECT ?place WHERE { ?place dbo:country ?country }))
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
41,28,test,"Give me the party of the person born as David Declan Costello and party of the work, that is an office holder, of yes and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> ""yes""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?costelloParty ?officeHolderWork ?officeHolderParty ?leaderParty
WHERE {
  # David Declan Costello's party
  dbr:David_Declan_Costello dbo:party ?costelloParty .

  # Office holder with ""Yes"" in name and their work and party
  ?person rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""yes""))
  ?person dbo:office ?officeHolderWork .
  ?person dbo:party ?officeHolderParty .

  # Leader of the 2005 Castlereagh Borough Council election and their party
  dbr:2005_Castlereagh_Borough_Council_election dbo:leader ?leader .
  ?leader dbo:party ?leaderParty .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
892,70,test,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and landmark at elevation of the award of the member of E-girls.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?result <http://dbpedia.org/ontology/elevation> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v6 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/province> ?v0 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?profession ?region ?settlement ?party ?landmark WHERE {
  # Henri Crolla's profession
  dbr:Henri_Crolla dbo:occupation ?profession .

  # Andrea Cozzolino's party
  dbr:Andrea_Cozzolino dbo:memberOfParty ?party .
  
  # Italian region that is also a settlement and administrative region related to the party
  ?region a dbo:Region ;
          dbp:country ""Italy""^^xsd:string ;
          dbo:settlement ?settlement ;
          dbo:administrativeRegion ?adminRegion .
  FILTER (?party = ?adminRegion)

  # E-girls member award and landmark at elevation
  ?member dbr:E-girls dbo:award ?award .
  ?landmark a dbo:Landmark ;
            dbp:elevation ?elevation .
  FILTER (?elevation = ?award)
}
```",8,14,9,3,3,3,3,71,0,0,2,0,0.0,0
445,66,test,"Give me the death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of Anna Sharkey and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace WHERE {
  # Step 1: Find awardees of the Royal Astronomical Society
  ?awardee dbo:awardReceived dbr:Royal_Astronomical_Society .
  
  # Step 2: Get their death place
  OPTIONAL { ?awardee dbo:placeOfDeath ?deathPlace . }
  
  # Step 3: Find Anna Sharkey's residence country
  dbr:Anna_Sharkey dbo:residenceCountry ?country .

  # Step 4: Identify the commander in the Battle of Saint-Mihiel and their award
  ?commander dbo:commandedBattle dbr:Battle_of_Saint-Mihiel .
  OPTIONAL { ?commander dbo:awardReceived ?award . }
  
  # Step 5: Find common entity between the award and residence country
  FILTER EXISTS {
    ?awardee dbo:awardReceived ?commonAward .
    ?commander dbo:awardReceived ?commonAward .
    ?country rdfs:label ?commonEntity .
    ?commonAward rdfs:label ?commonEntity .
  }
  
  # Return the death place of the awardee
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
445,62,test,"Give me the entity in United Kingdom and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and death place of the awardee of the establishment of 1820-03-10.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?ukEntity ?residenceCountry ?deathPlace
WHERE {
  # Entity in United Kingdom
  ?ukEntity dbo:country dbr:United_Kingdom .
  
  # Athlete from Great Britain and their residence country
  ?athlete dbo:nationality dbr:Great_Britain ;
           dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
  BIND(?residence AS ?residenceCountry)
  
  # Establishment on 1820-03-10
  ?establishment dbp:dateEstablished ""1820-03-10""^^xsd:date ;
                 dbo:awardRecipient ?awardee .
  
  # Death place of the awardee
  ?awardee dbo:deathPlace ?deathPlace .
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
507,59,test,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of the person born as the birth name of Anne V. Coates.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/director> ?result . ?v5 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?director WHERE {
  # Step 1: Find the person born on 1919-06-17
  ?person dbo:birthday ""1919-06-17""^^xsd:date .
  
  # Step 2: Find this person's spouse
  ?person dbo:spouse ?spouse .

  # Step 3: Determine Anne V. Coates' birth name
  dbr:Anne_V._Coates foaf:name ?anneBirthName .

  # Ensure the spouse is related to Anne V. Coates by birth name
  ?spouse foaf:name ?anneBirthName .

  # Step 4: Find a movie that is both a ""movie"" and a ""work""
  ?movie dbo:type dbr:Film ;
         dbo:director ?director .
  
  # Ensure the director of this movie is the spouse found in step 2
  ?director foaf:name ?anneBirthName .

}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
326,9,test,"Give me the person decedent at the region coded, that is a settlement, as 442/760 and professional in the profession of Susanne Lewis.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Susanne_Lewis> <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/areaCode> ""442/760"" . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?profession WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace ?place .
  ?place dbo:postalCode ""442760""^^xsd:string .
  
  OPTIONAL { 
    ?person dbo:occupation ?occupation .
    ?occupation rdfs:label ?profession .
  }
  
  ?relatedPerson a dbo:Person ;
                 dbo:occupation ?occupation .
  ?relatedPerson rdfs:label ""Susanne Lewis""@en .
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT**: We are selecting the person and their profession.
- **?person a dbo:Person**: Ensures we're dealing with persons.
- **?place dbo:postalCode ""442760""^^xsd:string**: Filters places by postal code, assuming 442/760 is combined as 442760.
- **OPTIONAL { ?person dbo:occupation ?occupation }**: Optionally retrieves the occupation of the person.
- **?relatedPerson rdfs:label ""Susanne Lewis""@en**: Finds a person with the label Susanne Lewis.

This query assumes that DBpedia has structured data for postal codes and occupations in this manner. Adjustments may be needed based on actual schema details.",4,5,5,2,2,2,2,9,0,0,6,0,0.0,0
200,8,test,Give me the band member of the band of Revenge (Canadian band) and reference to Angelcorpse.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Revenge_(Canadian_band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Angelcorpse""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?role WHERE {
  # Find Revenge band members
  VALUES (?band) { dbr:Revenge_(Canadian_band) }
  
  ?member dbo:memberOf ?band .
  OPTIONAL { ?member dbo:role ?role . }

  # Check if the member is also associated with Angelcorpse
  VALUES (?angelcorpseBand) { dbr:Angelcorpse }
  OPTIONAL {
    ?member dbo:memberOf ?angelcorpseBand .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
124,66,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
  # Frank Rhodes as a British Army officer
  dbr:Frank_Rhodes dbo:nationality dbr:United_Kingdom ;
                   dbo:occupation dbr:Military_officer .

  # Military conflict involving Frank Rhodes
  ?conflict dbo:participant dbr:Frank_Rhodes ;
            a dbo:MilitaryConflict ;
            dbo:societalEvent ?societalEvent1 .

  # A Field Battery, Royal Australian Artillery and its military force
  dbr:A_Field_Battery,_Royal_Australian_Artillery dbo:militaryForce ?militaryForce ;
                                                   a dbo:ArtilleryUnit .
  
  # Military conflict involving the battery's military force
  ?conflict2 dbo:militaryForce ?militaryForce ;
             a dbo:MilitaryConflict ;
             dbo:societalEvent ?societalEvent2 .

  # Ensure both conflicts are societal events and military conflicts
  FILTER(?societalEvent1 != ?societalEvent2)
}
```",7,14,8,3,3,3,3,71,0,0,9,0,0.0,0
791,64,test,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of Emperor Antoku.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfChild WHERE {
  # Emperor Antoku
  dbr:Emperor_Antoku dbo:father ?fatherOfAntoku .
  
  # Father of Emperor Antoku is a royalty and an office holder
  ?fatherOfAntoku a dbo:Monarch ;
                 dbo:officeHolder ?office .

  # Spouse of this father is a royalty
  ?spouse a dbo:Spouse ;
          dbo:spouse ?fatherOfAntoku ;
          a dbo:Monarch .

  # Reference to Emperor Takakura and his predecessor
  dbr:Takakura_Tennō dbo:predecessor ?predecessor .
  
  # Predecessor should be the father of Antoku
  FILTER(?predecessor = ?fatherOfAntoku)

  # Child of this father and spouse who is a royalty
  ?child dbo:parent ?fatherOfAntoku ;
         dbo:parent ?spouse ;
         a dbo:Monarch .

  # The father of this child
  ?child dbo:father ?fatherOfChild .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
170,28,test,Give me the entity in the work of International Energy Agency and birth place of the awardee of People's Artist of Russia and domain of the profession of John Scholey.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInIEA ?birthPlaceOfAwardedPerson ?professionDomain

{
  # Entity in the work of International Energy Agency
  {
    SELECT DISTINCT ?entityInIEA WHERE {
      dbr:International_Energy_Agency dbo:work ?entityInIEA .
    }
  }

  UNION

  # Birth place of the awardee of People's Artist of Russia
  {
    SELECT DISTINCT ?birthPlaceOfAwardedPerson WHERE {
      ?person dbp:honorificTitle ""People's Artist of Russia""@en ;
             dbo:birthPlace ?birthPlaceOfAwardedPerson .
    }
  }

  UNION

  # Domain of the profession of John Scholey
  {
    SELECT DISTINCT ?professionDomain WHERE {
      dbr:John_Scholey dbo:occupation ?profession .
      ?profession dbo:field ?professionDomain .
    }
  }
}",6,6,7,2,3,2,3,28,0,0,3,0,0.0,0
715,64,test,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force, that is a military conflict, of the native of Morocco and commander in Spanish Civil War.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Find Carlos Franco Iribarnegaray's office
  ?office dbo:type/dbo:subClassOf* dbo:GovernmentAgency ;
          dbo:head ?leader .
  
  # Ensure the office is related to a military conflict where he was a commander
  ?conflict dbo:commander ?carlos ;
            dbo:participatedIn ?force .
  
  # Find someone native of Morocco who commanded in the Spanish Civil War
  ?moroccan dbr:Morocco dbo:nativeOf ;
             dbo:commanderInMilitaryConflict dbr:Spanish_Civil_War .

  # Link Carlos Franco Iribarnegaray to the office and conflict
  ?carlos foaf:name ""Carlos Franco Iribarnegaray""@en ;
          dbo:office ?office ;
          dbo:commanderInMilitaryConflict ?conflict .
  
  # Ensure the leader is related to both the office and the force
  ?leader dbo:commanderInMilitaryConflict ?force .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
935,19,test,"Give me the headquarter of the office of the native of Balochistan, Pakistan and death place of the awardee of Sitara-i-Imtiaz.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/location> ?result . ?v0 <http://dbpedia.org/property/office> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?headquarters ?deathPlace
WHERE {
  # Find individuals native to Balochistan, Pakistan
  ?person dbo:nativePlace dbr:Balochistan_(province) .
  
  # Get the headquarters of their office
  OPTIONAL { ?office dbo:headquarters ?headquarters . }
  OPTIONAL { ?person dbo:positionHeld ?office . }

  # Find individuals who received Sitara-i-Imtiaz
  ?awardee dbo:award dbr:Sitara_i_Imtiaz .
  
  # Get the death place of these awardees
  OPTIONAL { ?awardee dbo:deathPlace ?deathPlace . }
}
```

This query attempts to find individuals native to Balochistan and those who have received the Sitara-i-Imtiaz award, then retrieves the headquarters of their offices and the death places of the awardees.",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
102,18,test,"Give me the native of the residence, that is English and a settlement, of Peter Finbow and manager of the player in the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/team> ?v2 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  # Find Peter Finbow's residence
  dbr:Peter_Finbow dbo:residence ?residence .
  
  # Ensure the residence is a settlement and in England
  ?residence rdf:type dbo:Settlement ;
             dbo:country dbr:England .

  # Find the manager of a player from the England women's national football team
  ?player dbo:nationality dbr:England ;
          dbo:memberOfTeam dbr:England_women%27s_national_football_team .
  ?manager dbo:manages ?player .
  
  # Ensure the manager resides in the same settlement as Peter Finbow
  ?manager dbo:residence ?residence .

  # Get the native of the residence
  ?residence dbo:native ?native .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
554,20,test,"Give me the leader of the birth place of the band, that is an artist, of Rita Redshoes and leader of the administration of the party member of Independent politician.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . ?v2 <http://dbpedia.org/property/leader> ?result . ?v5 <http://dbpedia.org/property/leader> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leaderOfBirthPlace WHERE {
  # Rita Redshoes' band
  dbr:Rita_Redshoes dbo:bandMember dbr:Rita_Redshoes_Band .
  
  # Band's leader who is also an artist
  dbr:Rita_Redshoes_Band dbo:leadArtist ?bandLeader .
  ?bandLeader a dbo:Artist .

  # Birth place of the band's leader
  ?bandLeader dbp:birthPlace ?birthPlace .

  # Leader of the birth place
  ?birthPlace dbo:governmentHead ?leaderOfBirthPlace .

  # Ensure the leader is part of a party with an independent politician
  ?partyMember dbo:memberParty ?party .
  ?party dbo:hasIndependentPolitician true .
  ?leaderOfBirthPlace dbo:memberParty ?party .
}
```",6,7,7,3,2,3,2,20,0,0,3,0,0.0,0
433,62,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in Musician.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalArtist WHERE {
  # Step 1: Find Paul Chambers' associated musical artist who is both a musical artist and an artist.
  dbr:Paul_Chambers dbo:associatedMusicalArtist ?artist1 .
  ?artist1 rdf:type dbo:Musician ;
           dbo:genre ?genre1 .

  # Step 2: Find Ornette Coleman's associated musical artist who is both an artist and a musical artist.
  dbr:Ornette_Coleman dbo:associatedMusicalArtist ?artist2 .
  ?artist2 rdf:type dbo:Musician ;
           dbo:genre ?genre2 .

  # Step 3: Find the professional musician associated with the artist from step 2.
  ?artist2 dbo:associatedMusicalArtist ?finalArtist .
  ?finalArtist rdf:type dbo:Musician .
}
```",7,13,8,3,3,3,3,71,0,0,3,0,0.0,0
365,20,test,"Give me the spouse of the native, that is a politician, of the reference to Полтавская губерния and person born as the birth name of the commander, that is an office holder, in Ukrainian–Soviet War.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find a politician native to Poltava Governorate
  ?politician dbo:nationality dbr:Ukraine ;
              dbo:birthPlace dbr:Poltava_Governorate ;
              dbo:occupation dbr:Politician .

  # Identify the commander in the Ukrainian–Soviet War by birth name
  ?commander dbp:birthName ?birthName ;
             dbo:occupation dbr:Commander ;
             dbo:officeHolderOf ?war .
  
  FILTER regex(?war, ""Ukrainian-Soviet War"", ""i"")

  # Find the spouse of the politician
  ?politician dbo:spouse ?spouse .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
645,62,test,"Give me the commander in the force of the commander in Siege of Madrid and leader of Ministry of the Army (Spain) and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?siege dbo:type dbr:Siege_of_Madrid .
  ?siege dbo:commander ?commander .

  ?ministry dbo:name ""Ministry of the Army (Spain)""@en ;
            dbo:leader ?commander .

  ?president dbo:nationality dbr:Spain ;
             dbo:officeLabel ""President""@en ;
             dbo:termStart ?start ;
             dbo:termEnd ?end .
  
  ?commander dbo:birthPlace ?place .
  ?place dbo:country dbr:Spain .

  FILTER (?start >= 1874 && ?end <= 1931) # Restoration period in Spain

}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
527,18,test,"Give me the author of the work, that is a work and a book, of Tom Baker and actor of the movie, that is a work and English and a television show, with the professional in Actor.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?v1 <http://dbpedia.org/property/occupation> ""Actor""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  # Find books authored by Tom Baker
  ?book a dbo:Book ;
        dbo:author ?author .
  FILTER (str(?author) = ""Tom Baker""^^xsd:string)

  # Find English television shows with an actor
  ?tvShow a dbo:TelevisionSeries ;
          dbo:country dbr:United_Kingdom ;
          dbo:actor ?actor .

  # Ensure the author of the book is also an actor in the TV show
  FILTER (str(?author) = str(?actor))
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
124,61,test,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?personMilitaryForce ?warMilitaryForce
WHERE {
  # Step 1: Find the person born on 1850-06-24
  ?person dbo:birthday ""1850-06-24""^^xsd:date .
  
  # Step 2: Identify military force associated with this person that is a societal event and military conflict
  ?personMilitaryForce dbo:participatedIn ?societalEvent ;
                      rdf:type dbo:MilitaryConflict .

  # Step 3: Find the awardee of the British South Africa Company Medal
  ?awardee dbp:award ""British South Africa Company Medal"" .
  
  # Step 4: Identify the war related to this awardee that is an event, military conflict, and societal event
  ?warMilitaryForce dbo:participatedIn ?event ;
                    rdf:type dbo:MilitaryConflict ;
                    dbo:societalEvent ?societalEvent .

  # Linking person and awardee through their respective wars
  ?personMilitaryForce dbo:conflictWith ?war .
  ?warMilitaryForce dbo:conflictWith ?war .
}
```",6,11,7,3,2,3,3,71,0,0,1085,0,0.0,0
124,70,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce WHERE {
  # Step 1: Identify the person born on June 24, 1850
  ?person dbo:birthday ""1850-06-24""^^xsd:date .
  
  # Step 2: Find the military force associated with this person as a commander in a war
  ?war dbo:type dbr:Military_conflict ;
       dbo:commander ?person .
  
  # Step 3: Ensure the war is also a societal event
  ?war dbo:type dbr:Societal_event .

  # Step 4: Find the award related to this person and war
  ?award dbo:recipient ?person ;
         dbo:event ?war ;
         rdfs:label ""British South Africa Company Medal"" .
  
  # Step 5: Identify the military force involved in this war
  ?militaryForce dbo:type dbr:Military_force ;
                 dbo:participatedIn ?war .
}
```",8,15,9,3,3,3,3,71,0,0,9,0,0.0,0
976,69,test,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v6 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v4 <http://dbpedia.org/ontology/leader> ?v2 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/property/office> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeKılıçdaroğlu ?officeMayor ?officeBostancı
WHERE {
  # Office of Kemal Kılıçdaroğlu in an organization
  dbr:Kemal_Kılıçdaroğlu dbo:positionHeld ?position .
  ?position dbo:role ?officeKılıçdaroğlu .

  # Mayor of Nation Alliance (Turkey) who is Turkish
  {
    SELECT DISTINCT ?mayorOffice WHERE {
      dbr:Nation_Alliance_(Turkey) dbo:leader ?mayor .
      ?mayor dbo:nationality dbr:Turkey .
      ?mayor dbo:positionHeld ?mayorPosition .
      ?mayorPosition dbo:role ?mayorOffice .
    }
  } BIND(?mayorOffice AS ?officeMayor)

  # Office of the person born as Naci Bostancı
  {
    SELECT DISTINCT ?person WHERE {
      ?person rdfs:label ""Naci Bostancı""@en .
      FILTER(LANG(?person) = 'en')
    }
  } BIND(?person AS ?bostancıPerson)
  
  ?bostancıPerson dbo:positionHeld ?bostancıPosition .
  ?bostancıPosition dbo:role ?officeBostancı .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
645,65,test,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?militaryForce ?nativePresident
WHERE {
  # Camilo Menéndez Tolosa's role
  ?office dbo:type/dbo:subClassOf* dbo:GovernmentAgency ;
          dbo:type/dbo:subClassOf* dbo:Organization .
  ?camilo dbr:Camilo_Menéndez_Tolosa ;
          dbo:leaderOf ?office .

  # Carlos Asensio Cabanillas' role
  ?force dbo:type/dbo:subClassOf* dbo:MilitaryConflict ;
         dbo:type/dbo:subClassOf* dbo:SocietalEvent .
  ?carlos dbr:Carlos_Asensio_Cabanillas ;
          dbo:commanderIn ?force .

  # Restoration (Spain) native president
  ?restoration dbr:Restoration_(Spain) ;
               dbo:nativeOf ?nativePresident .
  ?nativePresident a dbo:Politician, dbo:President .
}",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
987,64,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of Moamer Kasumović and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  # Canicosa de la Sierra time zone
  dbr:Canicosa_de_la_Sierra dbo:timeZone ?timezone .

  # Time zone as a sports event
  ?sportsEvent dbo:locationTimezone ?timezone .
  
  # Moamer Kasumović's birthplace
  dbr:Moamer_Kasumović dbo:birthPlace ?kasumovicBirthplace .

  # Zabranjeno Pušenje band and its origin
  dbr:Dado_Pršo dbo:band dbr:Zabranjeno_Pušenje .
  dbr:Zabranjeno_Pušenje dbo:originPlace ?zabranjenoBirthplace .

  # Country in the region of the sports event
  ?sportsEvent dbo:locationRegion ?region .
  ?country dbo:locatedInRegion ?region ;
           a dbo:Country .

  # Match birthplaces with country
  {
    ?kasumovicBirthplace dbo:country ?country .
  } UNION {
    ?zabranjenoBirthplace dbo:country ?country .
  }
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
573,61,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?decedent WHERE {
  # John Quincy Adams and his work
  dbr:John_Quincy_Adams dbo:authorOf ?work .
  
  # The author of the work is a politician and office holder
  ?author dbo:authorOf ?work ;
          rdf:type dbo:Politician ;
          dbo:officeHolder ?office .

  # This author's parent is an American professional in Politician
  ?parent dbo:child ?author ;
          dbp:nationality ""American""^^xsd:string ;
          rdf:type dbo:Politician .
  
  # The residence of this parent is a settlement
  ?residence dbo:resident ?parent ;
             rdf:type dbo:Settlement .

  # Find the decedent at this residence
  ?decedent dbo:placeOfDeath ?residence .
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
573,67,test,"Give me the person decedent at Massachusetts and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:deathPlace dbr:Massachusetts .
  ?person dbo:child dbr:John_Quincy_Adams .
  ?person a dbo:Politician ;
          dbo:officeHolder true .
  ?person dbo:residence ?settlement .
  FILTER (isLiteral(?settlement))
  ?person dbp:nationality dbr:United_States .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
216,63,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v6 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?playerInCoach WHERE {
  ?person a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          dbo:birthDate ""1983-12-20""^^xsd:date ;
          dbo:managerOf dbr:Bosnia_and_Herzegovina_national_under-18_football_team .

  ?organization a dbo:Organization ;
                a dbo:SoccerClub ;
                dbp:team dbr:Croatia_U21 .

  FILTER EXISTS {
    ?person dbo:memberOfTeam ?organization .
  }

  ?playerInCoach a dbo:SoccerPlayer ;
                 a dbo:SportsManager ;
                 dbo:managerOf dbr:Bosnia_and_Herzegovina_national_under-18_football_team ;
                 dbo:memberOfTeam ?organization .

}",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
582,67,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to Japan.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?result <http://dbpedia.org/property/nickname> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/father> ?v6 . ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?teamNickname WHERE {
  # Find Hajime Moriyasu and his associated team
  ?hajime a dbo:SoccerManager ;
          foaf:nationality dbr:Japan ;
          dbo:managerTeam ?team .

  # Get the nickname of the team
  ?team dbo:officialName ?teamOfficialName ;
        dbo:commonName ?teamNickname .

  # Find Kazuaki Nagasawa and his father
  ?kazuaki a dbo:Athlete ;
           foaf:nationality dbr:Japan ;
           dbo:father ?father .

  # Ensure the father is also an athlete, soccer manager, and sports manager
  ?father a dbo:Athlete , dbo:SoccerManager , dbo:SportsManager .

  # Connect the team to Kazuaki Nagasawa's father through Hajime Moriyasu
  ?hajime dbo:managerTeam ?team .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
459,28,test,"Give me the governor of the administration, that is a politician, of Brad Henry and governor of the death place, that is a settlement, of Cliff Roquemore and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/governor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?governor1 ?governor2 ?person
WHERE {
  # Governor of the administration of Brad Henry
  dbr:Brad_Henry dbo:governmentRole [
    a dbo:Government;
    dbo:head ?governor1 .
  ] .

  # Governor of the death place of Cliff Roquemore
  dbr:Cliff_Roquemore dbo:deathPlace ?settlement .
  ?settlement dbo:currentGovernor ?governor2 .

  # Person born as the birth name of Kevin Stitt
  dbr:Kevin_Stitt dbp:birthdayBirthName ?birthName .
  ?person dbp:birthdayBirthName ?birthName .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
445,63,test,"Give me the entity in the award of George H. Cameron and death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?result <http://dbpedia.org/ontology/location> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardEntity ?deathPlace ?residenceCountry
WHERE {
  # George H. Cameron's award
  dbr:George_H._Cameron dbo:award ?award .
  ?award dbo:recipient ?recipient .

  # Awardee of Royal Astronomical Society and their death place
  ?recipient dbo:award ?rasAward .
  FILTER(STRSTARTS(LCASE(?rasAward), ""royal astronomical society""))
  OPTIONAL { ?recipient dbo:deathPlace ?deathPlace . }

  # Athlete from Great Britain and their residence country
  ?athlete dbo:nationality dbr:United_Kingdom ;
           a dbo:Athlete .
  OPTIONAL { ?athlete dbo:residenceLocation ?residence .
             ?residence dbo:countryName ?residenceCountry }
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
892,63,test,"Give me the entity in the profession of the true self of Enrico Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of the award of Anna Ishii.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/province> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?profession ?region ?landmark WHERE {
  # Enrico Crolla's profession
  dbr:Enrico_Crolla dbo:occupation ?profession .

  # Italian region and settlement in administration of Democratic Party (Italy)
  ?party dbp:country dbr:Italy .
  ?party rdfs:label ""Democratic Party (Italy)""@en .
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:settlement true ;
          dbo:administrativeRegion true ;
          dbo:politicalParty ?party .

  # Landmark at elevation of Anna Ishii's award
  ?award dbp:recipient dbr:Anna_Ishii .
  ?award dbp:elevation ?elevation .
  ?landmark dbo:elevation ?elevation .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
445,58,test,Give me the entity in England and entity in the award of the commander in Battle of Saint-Mihiel and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?englandEntity ?deathPlace
WHERE {
  # Step 1: Identify the commander in the Battle of Saint-Mihiel
  ?commander dbo:participatedInBattle dbr:Battle_of_Saint-Mihiel .
  
  # Step 2: Determine the award received by this commander
  ?award dbo:recipient ?commander ;
         a dbo:Award .

  # Step 3: Find entities in England related to this award
  ?englandEntity dbo:location dbr:England ;
                 dbo:relatedToAward ?award .

  # Step 4: Locate the death place of an awardee from the Royal Astronomical Society
  ?awardee dbo:memberOf dbr:Royal_Astronomical_Society ;
           dbo:recipient ?award .
  
  ?awardee dbp:deathPlace ?deathPlace .
}
```

This query assumes that DBpedia has structured data for these entities and relationships. It may need adjustments based on the actual schema and available data in DBpedia.",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
773,60,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfChild WHERE {
  # Carloman of Bavaria and his father
  ?carloman dbp:father ?father .
  FILTER (str(?carloman) = ""Carloman_of_Bavaria"")

  # Father's father (grandfather)
  ?father dbp:father ?grandfather .

  # Grandfather is an office holder and a royalty
  ?grandfather dbo:officeHolderOf ?office .
  ?grandfather rdf:type dbo:Monarch .

  # Spouse of grandfather
  ?spouse dbp:spouse ?grandfather ;
          dbp:child ?child .

  # Child of spouse who is a royalty
  ?child rdf:type dbo:Monarch .

  # Parent of the child
  ?parentOfChild dbp:child ?child .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
216,62,test,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of Ognjen Vukojević.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/coach> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?coach WHERE {
  # Find the organization related to Džemal Berberović and Croatia U21
  ?org1 a dbo:SoccerClub ;
        dbo:playerInTeam ?džemal .
  ?džemal dbr:Džemal_Berberović .

  ?org1 dbo:coach ?coach .
  
  # Find the organization related to Ognjen Vukojević
  ?org2 a dbo:SoccerClub, dbo:SportsTeam ;
        dbo:playerInTeam ?ognjen .
  ?ognjen dbr:Ognjen_Vukojević .

  ?org2 dbo:coach ?coach .

  # Ensure the coach is also a soccer player and manager
  ?coach a dbo:SoccerPlayer, dbo:SportsManager, dbo:SoccerManager .
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
136,8,test,Give me the region coded as 03834 and landmark at elevation of the award of Bret Anthony Johnston.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ""03834"" . ?result <http://dbpedia.org/ontology/elevation> ?v2 . <http://dbpedia.org/resource/Bret_Anthony_Johnston> <http://dbpedia.org/property/awards> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?region ?landmark ?elevation ?award
WHERE {
  # Find the region with code 03834
  ?region dbo:postalCode ""03834"" .
  
  # Find landmarks in this region and their elevations
  ?landmark dbo:location dbr:?region ;
            dbo:elevationAboveSeaLevel ?elevation .

  # Find awards related to Bret Anthony Johnston
  ?award dbo:recipient dbr:Bret_Anthony_Johnston .
  
  # Check if the award is associated with the landmark (hypothetical connection)
  OPTIONAL { ?award dbp:relatedLandmark ?landmark }
}
```

This query assumes:
- There's a direct or indirect relationship between awards and landmarks.
- The region can be identified by its postal code.
- Landmarks have an elevation property.",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
826,70,test,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Louis IV, Grand Duke of Hesse and his child
  VALUES (?louisIV) { dbr:Ludwig_IV,_Grand_Duke_of_Hesse }
  ?child dbo:spouseOf ?louisIV .
  
  # Parent of the child (likely spouse)
  ?parent dbo:spouseOf ?child .

  # Predecessor of this parent
  ?predecessor dbo:successor ?parent .

  # Successor of the child that is royalty
  ?successor dbo:predecessor ?child .
  
  # Reference to Louis I and spouse of Johann Heinrich Appel's child
  VALUES (?louisI) { dbr:Louis_I_of_Hesse_and_by_Rhine }
  ?appelChild dbo:spouseOf ?johannHeinrichAppel .
  ?reference dbo:spouseOf ?appelChild .
  
  # Ensure all are royalty
  FILTER (EXISTS { ?predecessor a dbo:Monarch } &&
          EXISTS { ?successor a dbo:Monarch } &&
          EXISTS { ?reference a dbo:Monarch })
}
```

This query attempts to follow the lineage and relationships described, focusing on royal connections. Adjustments may be needed based on specific DBpedia data availability and structure.",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
41,27,test,"Give me the party of Mark Durkan and party of the work, that is an office holder, of yes and party of the person born as David Declan Costello.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?markDurkanParty ?officeHolderParty ?davidCostelloParty WHERE {
  # Mark Durkan's party
  OPTIONAL { 
    dbr:Mark_Durkan dbo:party ?markDurkanParty .
  }

  # Office holder named ""Yes""
  OPTIONAL {
    ?officeHolder a dbo:OfficeHolder ;
                 foaf:name ""Yes"" ;
                 dbo:party ?officeHolderParty .
  }
  
  # David Declan Costello's party
  OPTIONAL {
    dbr:David_Declan_Costello dbo:party ?davidCostelloParty .
  }
}
```",5,6,6,2,3,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
839,59,test,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?kevinRussellBand ?peterSchorowskyBand WHERE {
  # Part 1: Kevin Russell's band
  ?kevinRussell a dbo:MusicalArtist ;
                foaf:name ""Kevin Russell"" .
  ?kevinRussell dbo:band ?kevinRussellBand .

  # Part 2: Peter Schorowsky's band
  ?peterSchorowsky a dbo:MusicGroupMember ;
                   foaf:name ""Peter Schorowsky"" .
  ?peterSchorowsky dbo:memberOf ?group .
  ?group a dbo:MusicalBand, dbo:Band ;
         rdfs:label ?bandLabel .

  FILTER (CONTAINS(LCASE(?bandLabel), ""band"") && CONTAINS(LCASE(?bandLabel), ""group""))
  
  ?group dbo:band ?peterSchorowskyBand .
}",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
715,65,test,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?office ?mayor ?conflict WHERE {
  # Carlos Franco Iribarnegaray's leadership role
  ?person1 rdfs:label ""Carlos Franco Iribarnegaray""@en .
  ?office dbo:head ?person1 ;
          a dbo:GovernmentAgency, dbo:Organization .

  # Mayor in the 1933 Spanish General Election who was also a president
  ?mayor rdfs:label ?mayorLabel .
  ?election dbr:1933_Spanish_general_election ;
           dbo:electedOffice ?office2 .
  ?office2 dbo:head ?mayor ;
           a dbo:Mayorship, dbo:PoliticalOffice .
  ?person2 dbo:presidentOf ?country ;
           rdfs:label ?mayorLabel .

  # Abd el-Krim's military conflict
  ?person3 rdfs:label ""Abd el-Krim""@en .
  ?conflict dbo:commander ?person3 ;
            a dbo:MilitaryConflict .

  # Linking the mayor to the election and presidency
  FILTER(CONTAINS(LCASE(?mayorLabel), ""1933 spanish general election""))
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
456,70,test,"Give me the spouse of the actor of Pacific Drive and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and band of the band, that is a musical artist, of the band of Alan Doyle.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Actor of ""Pacific Drive""
  ?actor dbo:title ""Pacific Drive""@en.
  
  # Professional in the alter ego of Lamont Cranston (The Shadow)
  ?character rdfs:label ""The Shadow""@en .
  ?actor dbo:profession ?character .

  # Band of Alan Doyle
  ?band dbr:Alan_Doe1l a dbo:Band .
  ?member dbo:band ?band ;
          foaf:name ?name .
  
  FILTER(?name = ""Alan Doyle"") .

  # Spouse of the actor who is also in The Shadow and Great Big Sea
  ?actor dbo:spouse ?spouse .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
417,71,test,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v7 . ?result <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Knud, Hereditary Prince of Denmark and his children
  ?knud a dbo:Person ;
        foaf:name ""Knud, Hereditary Prince of Denmark""@en .
  
  ?child dbp:parent ?knud ;
         a dbo:RoyalFamilyMember .

  # Step 2: Find a child of Knud who is royalty
  ?royalChild dbp:parent ?child ;
              a dbo:RoyalFamilyMember .

  # Step 3: Identify this child's parent (who must be royalty)
  ?alexandrine a dbo:Person ;
               foaf:name ""Alexandrine of Mecklenburg-Schwerin""@en .
  
  ?royalParent dbp:parent ?royalChild ;
               dbp:spouse ?alexandrine .

  # Step 4: Find the father of the leader of Colony of Greenland
  ?greenlandLeader a dbo:Monarch ;
                   dbp:country ""Greenland""@en .
  
  ?kingFather dbp:child ?greenlandLeader ;
              a dbo:RoyalFamilyMember .

  # Step 5: Identify the child of this father who is royalty
  ?royalGrandChild dbp:parent ?kingFather ;
                   a dbo:RoyalFamilyMember .

  # Step 6: Find the spouse of the parent (who is royalty) of this child
  ?spouse dbp:spouse ?royalParent .
}",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
443,25,test,"Give me the birthplace of Carl Larsson and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and landmark at elevation of the award of William Shepherd.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v2 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?carlLarssonBirthplace 
             ?person1949Birthplace 
             ?landmarkAtElevation

WHERE {
  # Carl Larsson's birthplace
  dbr:C._L.__Carl_Larsson dbo:birthPlace ?carlLarssonBirthplace .

  # Person born on 1949-11-20 who is both a musical artist and an artist
  ?person dbp:birthday ""1949-11-20""^^xsd:date ;
          dbo:occupation dbr:Musical_artist ;
          dbo:occupation dbr:Artist .
  ?person dbp:birthPlace ?person1949Birthplace .

  # William Shepherd's award elevation and landmark at that elevation
  dbr:William_Shepherd dbo:awardReceived ?shepherdAward .
  ?shepherdAward dbo:elevation ?elevation .
  ?landmark dbo:elevation ?elevation ;
            a dbo:Lighthouse .
}
```

This query assumes:
- Carl Larsson's birthplace can be directly queried.
- The person born on November 20, 1949, is both a musical artist and an artist.
- William Shepherd received an award with a specific elevation, and there exists a landmark at that elevation.

Please note that the actual availability of these data points in DBpedia might vary, and some assumptions are made for the structure of the query. Adjustments may be necessary based on the exact schema and available data in DBpedia.",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
645,56,test,"Give me the military force of Spanish Civil War and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?leader WHERE {
  # Find military forces involved in the Spanish Civil War
  ?militaryForce dbo:partOfMilitaryConflict dbr:Spanish_Civil_War .
  
  # Find Carlos Asensio Cabanillas and his command
  ?commander dbr:Carlos_Asensio_Cabanillas ;
             dbo:commanded ?militaryForce .

  # Find leaders of offices during the Restoration period in Spain
  ?leader dbo:nationality dbr:Spain ;
          dbo:era dbr:Restoration_(Spain) ;
          dbo:headOf ?office .
  
  # Ensure the leader is connected to the military force through Carlos Asensio Cabanillas
  ?militaryForce dbo:commandedBy ?commander .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
433,66,test,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Eric Clapton wrote ""Slowhand at 70 – Live at the Royal Albert Hall""
  dbr:Eric_Claptontemporal_coverage ?event .
  ?event dbo:performer dbr:Eric_Clapton .

  # Find associated musical artists with Paul Chambers
  dbr:Paul_Chambers dbo:associatedMusicalArtist ?artist1 .
  
  # Find associated musical artists with Scott LaFaro
  ?artist1 dbo:associatedMusicalArtist ?artist2 .
  dbr:Scott_LaFaro dbo:associatedMusicalArtist ?artist2 .

  # Ensure the professional is a musician and artist
  ?artist2 a dbo:Musician ;
           a dbo:Artist .

  # Find the profession of these associated artists
  ?artist2 dbo:profession ?professional .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
456,63,test,"Give me the professional in the alter ego of The Shadow and band of the band, that is a musical artist, of Dean Brody and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalName ?bandArtist ?spouseActor
WHERE {
  # The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo ?shadowAlterEgo .
  ?shadowAlterEgo rdfs:label ?professionalName .

  # Dean Brody's band and its musical artist
  dbr:Dean_Brody dbo:bandMemberOf ?brodyBand .
  ?brodyBand dbo:musicalArtist ?bandArtist .

  # Ross Newton's spouse who is an actor in a movie that is also a TV show
  dbr:Ross_Newton dbo:spouse ?spouse .
  ?spouse dbo:profession dbr:Actor .
  ?movieWork dbo:title ?title .
  ?movieWork rdf:type/(dbo:Film|dbo:TelevisionShow) .
  ?movieWork dbo:starring ?spouseActor .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
200,9,test,Give me the band member of the band of Revenge (Canadian band) and reference to the name of Angelcorpse.,SELECT ?result WHERE { <http://dbpedia.org/resource/Revenge_(Canadian_band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Angelcorpse> <http://xmlns.com/foaf/0.1/name> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName ?angelcorpseReference
WHERE {
  # Find band members of Revenge (Canadian band)
  ?band a dbo:Band ;
        rdfs:label ""Revenge (Canadian band)""@en .
  
  ?member dbo:memberOf ?band ;
          foaf:name ?memberName .

  # Find references to Angelcorpse
  ?angelcorpseReference dbo:wikiPageRedirects dbr:Angelcorpse .
}
```

This query does the following:
- It identifies ""Revenge"" as a band using its label.
- It retrieves members of this band and their names.
- It finds any DBpedia resources that redirect to ""Angelcorpse.""",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
417,70,test,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and child of the father of the leader, that is a royalty, of Colony of Greenland and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?result WHERE {
  # Alexandrine of Mecklenburg-Schwerin and her royal child
  ?alexandrine a dbo:Person ;
               foaf:name ""Alexandrine of Mecklenburg-Schwerin""@en .
  
  ?child1 dbo:parent ?alexandrine ;
          dbo:royalty true .

  # Child of the father of the leader of Colony of Greenland
  ?leader a dbo:Leader ;
          dbp:country ""Colony of Greenland"" .
  
  ?fatherOfLeader dbo:child ?leader .
  ?child2 dbo:parent ?fatherOfLeader ;
          dbo:royalty true .

  # Spouse of the parent of Count Ingolf of Rosenborg
  ?countIngolf a dbo:Person ;
               foaf:name ""Count Ingolf of Rosenborg""@en .
  
  ?parentOfCount dbo:child ?countIngolf .
  ?spouseOfParent dbo:spouse ?parentOfCount .

  # The child of the child that is royalty
  ?royalChild1 dbo:parent ?child1 ;
               dbo:royalty true .
  
  ?result dbo:parent ?royalChild1 .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
507,67,test,"Give me the spouse of Anne V. Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of the person born on 1966-02-18.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://dbpedia.org/ontology/director> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?director WHERE {
  # Find Anne V. Coates' spouse
  dbr:Anne_V._Coates dbo:spouse ?spouse .

  # Find the director of a movie that is both a movie and a work
  ?movie dbo:type dbr:Film .
  ?movie dbo:directedBy ?director .
  
  # Person born on 1919-06-17
  ?person1 dbp:birthday ""1919-06-17""^^xsd:date .
  
  # Profession of the person born on 1966-02-18
  ?person2 dbp:birthday ""1966-02-18""^^xsd:date .
  ?person2 dbo:profession ?profession .

  # Match the profession with the director's profession
  ?director dbo:profession ?profession .

  # Ensure the director is the spouse of Anne V. Coates
  FILTER (?spouse = ?director)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
465,60,test,"Give me the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Ercole II d'Este lineage
  ?ercole2 dbo:parent ?parentErcole2 .
  ?childErcole2 dbo:parent ?parentErcole2 .
  FILTER (?childErcole2 = dbr:Ercole_II_d%27Este)
  
  ?successorErcole2 dbo:succ ?successor .

  # Charles Orlando lineage
  ?charlesOrlandoParent dbo:parent ?grandparentCharles .
  ?childCharlesOrlando dbo:parent ?grandparentCharles .
  FILTER (?childCharlesOrlando = dbr:Charles_Orland)

  ?royaltySuccessor dbo:succ ?childCharlesOrlando .
  FILTER (dbo:Person ?royaltySuccessor) .

  # Combine conditions
  FILTER (?successor = ?royaltySuccessor)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
495,19,test,Give me the child of the father of William I of Württemberg and father of the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?result WHERE {
  # Step 1: Find the father of William I of Württemberg
  ?williamI dbo:father ?fatherOfWilliamI .
  
  FILTER(STR(?williamI) = ""William_I_of_W%C3%BCrttemberg"")

  # Step 2: Find the child of this father
  ?childOfFather dbp:parent ?fatherOfWilliamI .

  # Step 3: Find the parent of Princess Pauline of Württemberg
  ?princessPauline dbo:mother|dbo:father ?parentOfPrincessPauline .
  
  FILTER(STR(?princessPauline) = ""Pauline_of_W%C3%BCrttemberg"")

  # Step 4: Find the child of this parent
  ?childOfParent dbp:parent ?parentOfPrincessPauline .

  # Final step: Match the results from steps 2 and 4
  FILTER(?childOfFather = ?childOfParent)
  
  BIND(?childOfFather AS ?result)
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
865,71,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v8 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v7 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v8 <http://dbpedia.org/property/father> ?v7 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nativeCountry WHERE {
  # Step 1: Identify Abul Maal Abdul Muhith's father
  ?abulMaal a dbo:Person ;
            foaf:surname ""Abdul Muhith"" ;
            dbo:father ?fatherOfAbulMuhith .

  # Step 2: Identify the person who died in Patna and is the father of a politician
  ?fatherOfAbulMuhith dbo:deathPlace ?patnaDeath .
  FILTER (str(?patnaDeath) = ""Patna"")
  
  ?politicianChild dbo:child ?fatherOfAbulMuhith ;
                  a dbo:Politician .

  # Step 3: Identify the spouse of Syeda Shahar Banu
  ?syedaShaharBanu foaf:surname ""Shahar Banu"" .
  ?spouseOfSyeda foaf:mbox <mailto:some-email@example.com> ; # Placeholder for actual email or identifier
                 dbo:spouse ?syedaShaharBanu .

  # Step 4: Identify the politician child of Syeda Shahar Banu's spouse
  ?politicianChild2 dbo:child ?spouseOfSyeda ;
                    a dbo:Politician .

  # Ensure both politicians are the same person
  FILTER (?politicianChild = ?politicianChild2)

  # Step 5: Get the native country of the residence (country) of this politician's father
  ?fatherOfAbulMuhith dbo:residence ?residence .
  ?residence a dbo:Country ;
             dbo:nativeCountry ?nativeCountry .
}
```

This query assumes that DBpedia has structured data for these individuals and their relationships. Adjustments may be needed based on the actual availability of data in DBpedia.",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
892,57,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and entity in Italy and landmark at elevation of the award of the member of E-girls.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity a dbo:Region .
  ?entity dbo:country dbr:Italy .
  ?entity dbo:settlementType dbo:Settlement .
  ?entity dbo:administrativeRegion dbr:Italy .
  
  # Assuming there's some property linking to the Democratic Party
  OPTIONAL { ?entity dbp:party dbr:Democratic_Party_(Italy) . }
  
  # Landmark at a specific elevation (assuming we have an elevation property)
  OPTIONAL {
    ?landmark dbo:elevation ?elevation .
    ?award dbo:elevation ?elevation .
    ?member dbo:memberOf dbr:E-girls .
    ?member dbo:receivedAward ?award .
    ?entity dbo:containsLandmark ?landmark .
  }
  
  FILTER EXISTS { ?entity dbo:country dbr:Italy . }
}
```

This query attempts to find an entity that matches all the specified criteria. Note that some assumptions are made about the properties and relationships, as DBpedia's schema might not directly map to every specific requirement without additional context or custom data.",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
433,61,test,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Step 1: Identify the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  ?album dbo:writer ?writer .
  
  # The album in question
  VALUES ?album { dbr:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall }
  
  # Step 2: Find the associated musical artist of this writer
  ?writer dbo:associatedMusicalArtist ?associatedArtist1 .
  
  # Step 3: Check if this associated musical artist is both an artist and a musical artist
  ?associatedArtist1 rdf:type dbo:Artist ;
                    rdf:type dbo:MusicalArtist .
  
  # Step 4: Identify the associated musical artist of Ornette Coleman who is also a musical artist and an artist
  dbr:Ornette_Coleman dbo:associatedMusicalArtist ?associatedArtist2 .
  ?associatedArtist2 rdf:type dbo:Artist ;
                     rdf:type dbo:MusicalArtist .
  
  # The professional we are looking for is the associated artist of Ornette Coleman
  ?professional rdfs:label ?name .
  FILTER (CONTAINS(LCASE(?name), ""artist"") && CONTAINS(LCASE(?name), ""musical artist""))
}
```",6,10,7,3,2,3,3,71,0,0,46,0,0.0,0
281,24,test,"Give me the awardee of the award of Alfred Warden and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeAlfredWarden ?awardeeLawrenceMooreCosgrave
WHERE {
  # Awardee of the Victoria Cross (associated with Alfred Warden)
  ?award dbo:recipient ?awardeeAlfredWarden .
  ?award a dbr:Victoria_Cross .

  # Awardee of the Military Cross (associated with Lawrence Moore Cosgrave)
  ?award2 dbo:recipient ?awardeeLawrenceMooreCosgrave .
  ?award2 a dbr:Military_Cross
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
579,19,test,"Give me the native of the residence, that is English and a settlement, of Alan Clyne and person born as the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native ?birthName WHERE {
  # Alan Clyne's residence
  ?alanClyne dbo:nationality dbr:United_Kingdom ;
             dbo:residence ?residence .
  
  # Residence is an English settlement
  ?residence dbo:country dbr:England ;
             a dbo:Settlement .

  # Native of the residence with specific birth name and office holder from Edinburgh
  ?native dbo:nativePlace ?residence ;
          dbp:birthName ?birthName ;
          dbo:officeHolderOf dbr:Edinburgh .
}
```",5,8,6,3,2,3,2,20,0,0,18,0,0.0,0
442,9,test,"Give me the resting place of the actor of This Side of Heaven and resting place of the work of Roosevelt, Theodore.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/This_Side_of_Heaven> <http://dbpedia.org/ontology/starring> ?v3 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/author> ""Roosevelt, Theodore""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorRestingPlace ?workRestingPlace WHERE {
  # Resting place of Stephen Baldwin (actor in ""This Side of Heaven"")
  dbr:Stephen_Baldwin dbo:final restingPlace ?actorRestingPlace .

  # Resting place related to Theodore Roosevelt's work
  OPTIONAL {
    dbr:The_Rough_Riders dbo:author dbr:Theodore_Roosevelt .
    dbr:Theodore_Roosevelt dbo:final restingPlace ?workRestingPlace .
  }
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
41,24,test,"Give me the party of the person born as David Declan Costello and party of the work, that is an office holder, of yes.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?officeName WHERE {
  # Find David Declan Costello's resource in DBpedia
  ?person a dbo:Person ;
          foaf:name ""David Declan Costello""@en .
  
  OPTIONAL {
    # Get the political party of David Declan Costello
    ?person dbo:party ?party .
  }
  
  OPTIONAL {
    # Find any office he holds
    ?officeHolder a dbo:OfficeHolder ;
                 dbo:office ?office ;
                 dbo:agent ?person .
    
    ?office rdfs:label ?officeName .
    FILTER (lang(?officeName) = ""en"")
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
465,61,test,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Step 1: Identify Charles Orlando, Dauphin of France's parent
  ?charlesOrlando a dbo:Dauphin ;
                  dbo:parent ?parentOfCharlesOrlando .

  # Step 2: Find the child who is royalty
  ?royalChild dbo:childOf ?parentOfCharlesOrlando ;
              a dbo:Monarch .

  # Step 3: Identify the spouse of this royal child
  ?spouse dbo:spouse ?royalChild .

  # Step 4: The parent of Elizabeth of Austria (1526–1545)
  ?elizabethParent dbo:child dbr:Elizabeth_of_Austria_(1526-1545) ;
                   a dbo:Monarch .

  # Step 5: Find the child who is royalty
  ?royalChild2 dbo:childOf ?elizabethParent ;
               a dbo:Monarch .

  # Ensure the spouse's parent matches the royal child's parent from step 4
  FILTER (?spouse = ?royalChild2)

  # Step 6: Find the successor of the first identified royal child
  ?successor dbo:predecessor ?royalChild .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
166,18,test,"Give me the entity in the territory administered, that is a country, from Madrid and resting place of the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?event a dbo:MilitaryConflict ;
         dbo:location dbr:Madrid ;
         dbo:restingPlace ?place .
  
  ?place dbo:locatedInCountry ?country .

  FILTER (isLiteral(?country) && lang(?country) = ""en"" && strStarts(str(?country), ""Spain""))

  ?event dbo:relatedTo dbr:Manuel_Hedilla .
}
```

This query attempts to find a country that is associated with an event characterized as a military conflict, located in Madrid, and related to Manuel Hedilla. The filter ensures the country is Spain.",5,9,6,3,2,3,2,20,0,0,4,0,0.0,0
582,61,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/father> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?teamNickname WHERE {
  # Find Kazuaki Nagasawa's father
  ?father a dbo:Athlete ;
          dbo:sportTeam ?soccerTeam ;
          foaf:child dbr:Kazuaki_Nagasawa .

  # Ensure the father is also a soccer manager and sports manager
  ?father dbo:occupation [a dbo:SoccerManager, dbo:SportsManager] .

  # Find Hajime Moriyasu's team
  dbr:Hajime_Moriyasu dbo:managerOf ?soccerTeam .

  # Get the nickname of the team
  ?soccerTeam dbo:nickname ?teamNickname .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
216,56,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach of Croatia national under-21 football team and player in Mario Ivanković.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team WHERE {
  # Find Pavel Vezhinov's death date
  ?vezhinov a dbo:Person ;
           dbp:deathDate ?deathDate .

  # Identify the person with multiple roles and connections
  ?person a dbo:SoccerPlayer, dbo:SoccerManager, dbo:SportsManager ;
          dbo:birthDate ?birthDate ;
          dbo:coachTeam dbr:Croatia_national_under-21_football_team ;
          dbo:playedWith dbr:Mario_Ivanković .

  # Ensure the person was born before Pavel Vezhinov's death
  FILTER (?birthDate < ?deathDate)

  # Find the team associated with this person
  ?person dbo:team ?team .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
433,60,test,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Eric Clapton is the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  dbr:Eric_Claptont dbo:album dbr:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall .

  # Find associated artists with Paul Chambers
  ?associatedArtist dbo:associatedBandMember dbr:Paul_Chambers .
  
  # The professional should be a musician like Eric Clapton and an artist like Paul Chambers
  ?professional dbo:profession dbr:Musical_artist ;
                dbo:occupation dbr:Musician .

  # Ensure the professional is associated with both Eric Clapton and Paul Chambers
  ?professional dbo:associatedBandMember dbr:Eric_Claptont .
  ?professional dbo:associatedBandMember ?associatedArtist .
}
```",6,8,7,3,2,3,3,71,0,0,16,0,0.0,0
715,71,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v7 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v8 <http://dbpedia.org/ontology/leader> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/property/office> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Commander in the force of a military conflict involving Morocco
  ?conflict dbo:location dbr:Morocco .
  ?commander dbo:militaryConflict ?conflict ;
             rdf:type dbo:Person .

  # Mayor and President involved in the 1933 Spanish general election
  ?officeHolder dbo:election dbr:Spanish_general_election,_1933 ;
                rdf:type dbo:Mayor ;
                dbo:presidentOf ?country .
  
  # Leader of an office associated with Carlos Franco Iribarnegaray
  ?leader dbo:headOf ?organization ;
          dbo:associatedWith dbr:Carlos_Franco_Iribarnegaray .

  # Linking all these roles to a single person
  FILTER (?commander = ?officeHolder && ?officeHolder = ?leader)
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
433,71,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://dbpedia.org/property/occupation> ?v8 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v8 . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  # Find Paul Chambers' associated musical artist who is also an artist
  ?chambers dbo:associatedMusicalArtist ?intermediate1 .
  ?intermediate1 a dbo:Musician ;
                 a dbo:Artist .

  # Find the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  ?clapton dbp:name ""Eric Clapton"" .
  ?clapton dbo:profession dbo:Writer .

  # Find Eric Clapton's associated musical artist who is also an artist
  ?intermediate1 dbo:associatedMusicalArtist ?artist .
  ?artist a dbo:Musician ;
          a dbo:Artist .
}
```",9,15,10,3,3,3,3,71,0,0,4,0,0.0,0
987,58,test,"Give me the birth place of Dado Polumenta and birth place of the actor of All for Free and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v0 <http://dbpedia.org/property/timeZone> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceDadoPrso ?birthPlaceActor ?countryInRegion
WHERE {
  # Birthplace of Dado Pršo
  dbr:Dado_Pršo dbo:birthPlace ?birthPlaceDadoPrso .

  # Actor from ""All for Free"" and their birthplace
  OPTIONAL {
    ?movie dbo:title ""All for Free""@en .
    ?movie dbo:actor ?actor .
    ?actor dbo:birthPlace ?birthPlaceActor .
  }

  # Sports event in Canicosa de la Sierra, its time zone, and the country in that region
  OPTIONAL {
    ?event dbo:location dbr:Canicosa_de_la_Sierra .
    ?event dbo:timeZone ?timeZone .
    ?region dbo:country ?countryInRegion .
    ?timeZone dbo:inRegion ?region .
  }
}
```",6,8,7,3,3,3,3,71,0,3,1,0.0,0.0,0
606,19,test,"Give me the figure known as the nickname of DeKalb, Illinois and birthplace of the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?v2 . ?v0 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname ?birthPlace WHERE {
  # Find DeKalb, Illinois and its nickname
  dbr:DeKalb,_Illinois dbo:nickname ?nickname .

  # Find an alumnus from DeKalb who is connected to Penn Quakers
  ?alumnus dbo:placeOfBirth dbr:DeKalb,_Illinois ;
           dbo:almaMater dbr:University_of_Pennsylvania ;
           dbo:sportTeam dbr:Penn_Quakers .

  # Get the birthplace of this alumnus
  ?alumnus dbo:birthPlace ?birthPlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
507,58,test,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and spouse of Anne V. Coates and professional in the profession of the person born on 1966-02-18.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/director> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?director WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Beryl_Reid .

  ?director dbo:directed ?movie ;
            dbo:spouse dbr:Anne_V._Coates .

  ?person dbo:birthday ""1966-02-18""^^xsd:date ;
          dbo:profession ?profession .
  
  ?director dbo:profession ?profession .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
417,58,test,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and child of the father of Frederick IX of Denmark and spouse of Princess Caroline-Mathilde of Denmark.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Alexandrine of Mecklenburg-Schwerin's parent who is royalty
  ?parent a dbo:Monarch ;
          dbo:spouse|dbo:child ?alexandrine .
  
  # Child of this royal parent (Alexandrine or her sibling)
  ?sibling dbo:childOf ?parent .

  # Frederick IX of Denmark's father
  ?frederickIX dbp:father ?christianX .

  # Spouse of Princess Caroline-Mathilde of Denmark
  ?carolineMathilde dbp:spouse ?husband .

  # Child of this spouse (Caroline-Mathilde and her husband)
  ?child dbo:childOf ?husband .

  # Find the grandchild who is royalty
  ?sibling dbo:child ?parent2 .
  ?parent2 dbo:child ?grandchild .
  
  FILTER (?grandchild a dbo:Monarch)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
865,57,test,"Give me the native of British Raj and father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v4 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nativeOfBritishRaj WHERE {
  ?spouse foaf:spouse ?syedaShaharBanu .
  ?child dbo:parent ?spouse ;
         a dbo:Politician .
  ?abuAhmadChild dbo:parent ?child .
  ?father dbo:parent ?child .
  ?father dbo:nativePlace ?nativeOfBritishRaj .

  FILTER(?nativeOfBritishRaj = <http://dbpedia.org/resource/British_Raj>)
}
```

This query assumes that the relationships are directly available in DBpedia and uses placeholders for specific individuals like Syeda Shahar Banu and Abu Ahmad Abdul Hafiz. You may need to replace these with actual resource URIs if they exist in DBpedia.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
933,71,test,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1947-04-21""^^xsd:date ;
          foaf:name ?name .
  
  ?band a dbo:Band, dbo:MusicalGroup, dbo:Organization ;
        dbo:member ?person .

  ?association dbo:artist ?band ;
                dbo:associatedBand dbr:The_Ramones .

  ?person foaf:mbox ?email . # To ensure we have a valid person entry
  OPTIONAL { ?person foaf:name ?birthName }
}
```

This query does the following:
- Selects individuals who are musical artists born on April 21, 1947.
- Ensures these individuals are members of bands that are also considered groups and organizations.
- Checks for an association with ""The Ramones"".
- Retrieves the birth name if available.",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
826,58,test,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?result <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Louis IV, Grand Duke of Hesse and his child
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:child ?child1 .
  
  # Parent of the child is Louis IV himself
  ?parent . FILTER(?parent = dbr:Louis_IV,_Grand_Duke_of_Hesse)
  
  # Predecessor of Louis IV (his father or predecessor as Grand Duke)
  ?predecessor dbo:successor ?parent .

  # Louis I, Grand Duke of Hesse and his child
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:child ?child2 .
  
  # Successor of this child (next generation)
  ?successor dbo:predecessor ?child2 .

  # Ensure the predecessor is a royalty
  ?predecessor rdf:type dbo:Monarch .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
976,67,test,"Give me the office of the person born as the birth name of Naci Bostancı and office of Mustafa Şentop and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?naciOffice ?mustafaOffice ?mayorOffice WHERE {
  # Naci Bostancı's office
  OPTIONAL {
    dbr:Naci_Bostancı dbo:birthName ?birthName .
    ?person dbo:birthName ?birthName ;
            dbo:officeHeld ?naciOffice .
  }

  # Mustafa Şentop's office
  OPTIONAL {
    dbr:Mustafa_Şentop dbo:officeHeld ?mustafaOffice .
  }

  # Mayor associated with Millet İttifakı
  OPTIONAL {
    ?mayor a dbo:Mayor ;
           dbo:nationality dbr:Turkey ;
           dbo:politicalParty ?party ;
           dbo:officeHeld ?mayorOffice .

    ?party dbo:name ""Millet İttifakı""@tr .
  }
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
445,59,test,"Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  ?entity dbo:foundingDate ""1820-03-10""^^xsd:date .
  ?award dbo:recipient ?awardee .
  ?award dbo:subject ?entity .
  
  ?awardee dbo:nationality dbr:United_Kingdom ;
           a dbo:Athlete .

  OPTIONAL { ?awardee dbo:deathPlace ?deathPlace . }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
888,18,test,"Give me the awardee of the award of Oleksandr Syrskyi and commander in the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?role WHERE {
  # Find Oleksandr Syrskyi in DBpedia
  VALUES ?oleksandrSyrskyi { dbr:Oleksandr_Syrskyi }

  # Retrieve awards associated with Oleksandr Syrskyi
  ?oleksandrSyrskyi dbo:award ?award .

  # Retrieve his role as a commander during the War in Donbas
  OPTIONAL {
    ?oleksandrSyrskyi dbo:positionHeld ?role .
    FILTER CONTAINS(LCASE(?role), ""commander"")
    FILTER CONTAINS(LCASE(?role), ""war in donbas"")
  }
}
```

This query does the following:
- It identifies Oleksandr Syrskyi using his DBpedia resource.
- It retrieves any awards associated with him.
- It optionally checks for roles that mention ""commander"" and are related to the ""War in Donbas.""",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
443,24,test,"Give me the birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and birthplace of the work of yes.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/author> ""yes""@en . }","# Query for Peter Gabriel's birthplace
SELECT ?birthPlace WHERE {
  ?person dbo:birthDate ""1949-11-20""^^xsd:date ;
          foaf:name ""Peter Gabriel""@en .
  ?person dbp:birthPlace ?birthPlace .
}

UNION

# Query for the birthplace of a work by Yes, specifically ""Close to the Edge""
SELECT ?workBirthPlace WHERE {
  ?album dbo:title ""Close to the Edge""@en ;
         dbo:artist <http://dbpedia.org/resource/Yes> .
  ?album dbp:recordedAt ?studio .
  ?studio dbo:location ?workBirthPlace .
}",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
341,9,test,"Give me the band member of the awardee of List of awards and nominations received by Beyoncé and writer of the work, that is a work and an album, of Serrano.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Beyoncé> . ?v3 <http://dbpedia.org/property/writer> ""Serrano""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Beyoncé's awards
  ?award dbo:recipient dbr:Beyoncé .
  
  # Serrano's works that are also albums
  ?work dbo:author dbr:Serrano ;
        a dbo:Album .

  # Find the writer of Serrano's work who is also an award recipient (Beyoncé)
  ?writer dbo:award ?award ;
          dbo:album ?work .
  
  # Band member connection
  ?bandMember dbo:memberOf ?band ;
              dbo:worksFor ?writer .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
465,64,test,"Give me the spouse of Archduchess Barbara of Austria and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?successor1 ?successor2 WHERE {
  # Archduchess Barbara of Austria's spouse
  dbr:Barbara_of_Austria (dbo:spouse) ?spouse .

  # Ercole II d'Este, Duke of Ferrara
  dbr:Ercole_II_d'_Este_duke_of_Ferrara dbo:parent ?ercoleParent .
  ?ercoleParent dbo:child ?ercoleChild .
  FILTER(?ercoleChild = dbr:Ercole_II_d'_Este_duke_of_Ferrara) .
  ?ercoleChild dbo:successor ?successor1 .

  # Charles Orlando, Dauphin of France
  dbr:Charles_Orlando_dauphin_de_France dbo:parent ?charlesParent .
  ?charlesParent dbo:child ?charlesChild .
  ?charlesChild dbo:successor ?successor2 .
  FILTER(STRSTARTS(LCASE(?successor2), ""royalty"")) .

  # Find a commonality or connection
  FILTER(?spouse = ?successor1 || ?spouse = ?successor2)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
926,62,test,Give me the father of the father of the spouse of Neşerek Kadın and child of Ahmed III and successor of the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfFather WHERE {
    # Neşerek Kadın's spouse
    ?neşerekSpouse a dbo:Spouse ;
                   dbo:spouse ?neşerekKadin .
    
    FILTER(?neşerekKadin = dbr:Neşere_Kadın)

    # Spouse of Neşerek Kadın and child of Ahmed III
    ?childOfAhmedIII a dbo:Child ;
                    dbo:parent ?neşerekSpouse ;
                    dbo:parent ?ahmedIII .
    
    FILTER(?ahmedIII = dbr:Aḥmed_III)

    # Spouse of Şermi Kadın and their child
    ?shermiSpouse a dbo:Spouse ;
                  dbo:spouse ?shermiKadin .

    FILTER(?shermiKadin = dbr:Şermi_Kadın)
    
    ?childOfShermiSpouse a dbo:Child ;
                         dbo:parent ?shermiSpouse .
    
    # Successor of the child of Şermi Kadın's spouse
    ?successor a dbo:Successor ;
               dbo:succeededBy ?childOfShermiSpouse .

    # Father of the father of Neşerek Kadın's spouse (who is also the child of Ahmed III)
    ?father1 dbo:parent ?neşerekSpouse .
    ?father2 dbo:parent ?father1 .

    FILTER(?successor = ?childOfAhmedIII)

    BIND(?father2 AS ?fatherOfFather)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
83,8,test,"Give me the player in Greg Boehme and player in the person born, that is an athlete, on 1991-11-19.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Greg_Boehme> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1991-11-19""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player1 ?player2 WHERE {
  # Find Greg Boehme and his team/player association
  ?gregBoehme a dbo:Athlete ;
              foaf:name ""Greg Boehme"" ;
              dbo:team ?player1 .

  # Find an athlete born on 1991-11-19 and their team/player association
  ?athlete a dbo:Athlete ;
           dbo:birthDate ""1991-11-19""^^xsd:date ;
           dbo:team ?player2 .
}
```

This query assumes:
- Greg Boehme is categorized as an athlete (`dbo:Athlete`).
- The `foaf:name` property is used to identify individuals by name.
- Athletes have a team or player association via the `dbo:team` property.
- Birth dates are stored in `dbo:birthDate`.",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
102,19,test,"Give me the native of the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury and manager of the player in Ellie Roebuck.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeLanguage WHERE {
  ?athlete dbo:nationality dbr:England ;
           dbo:residence ?residence .
  
  FILTER (CONTAINS(LCASE(STR(?residence)), ""dewsbury""))
  
  ?manager dbo:employee ?player .
  ?player foaf:name ""Ellie Roebuck""@en .
  ?athlete foaf:name ?managerName .
  FILTER (?managerName = ?athlete)
  
  ?residence a dbo:Settlement ;
             dbp:country dbr:England .
  
  ?residence dbo:nativeLanguage ?nativeLanguage .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
273,19,test,Give me the parent of the alumnus of the reference to Università degli Studi di Torino and spouse of the child of Giovanni Agnelli.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
    # Step 1: Find alumni of Università degli Studi di Torino
    ?alumnus dbo:almaMater dbr:Universit%C3%A0_degli_Studi_di_Torino .
    
    # Step 2: Find children of Giovanni Agnelli and their spouses
    ?child dbo:parent dbr:Giovanni_Agnelli ;
           dbo:spouse ?spouse .

    # Ensure the spouse is also an alumnus of Università degli Studi di Torino
    FILTER(?alumnus = ?spouse) .
    
    # Step 3: Find the parent of this spouse
    ?parent dbo:child ?spouse .
}",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
874,18,test,"Give me the band of the band member of The Jones Gang and band of the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band1 ?band2 WHERE {
  # Step 1: Find band members of ""The Jones Gang""
  ?member dbo:memberOfBand dbr:The_Jones_Gang .
  
  # Step 2: Find the band associated with this member
  ?member dbo:memberOfBand ?band1 .

  # Step 3: Identify works by Horace Andy
  ?work dbo:artist dbr:Horace_Andy ;
        a dbo:Work .

  # Step 4: Find writers of these works
  ?work dbo:writer ?writer .

  # Step 5: Check if the writer is both an artist and a musical artist
  ?writer dbo:occupation dbr:Artist ;
          dbo:occupation dbr:Musical_artist .

  # Step 6: Find the band associated with this writer
  ?writer dbo:memberOfBand ?band2 .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
456,59,test,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Ross Newton's works that are both movies and TV shows
  ?work dbo:starring dbr:Ross_Newton .
  ?work a dbo:Film .
  ?work a dbo:TelevisionShow .

  # Find an actor from this work
  ?actor dbo:actedIn ?work .

  # Find the spouse of this actor
  ?actor dbo:spouse ?spouse .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
329,28,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist) and birthplace of the author of The Tailor and Ansty.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v5 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?countryInWET ?birthplaceOrgCountry ?authorBirthplace WHERE {
  # Country in the region of Western European Time
  ?region dbo:wikiPageRedirects dbr:Western_European_Time .
  ?country dbo:timeZone ?region ;
           a dbo:Country .
  BIND(?country AS ?countryInWET)

  # Birthplace of Robert Bates that is an organization and a country
  OPTIONAL {
    dbr:Robert_Bates_Loyalist dbo:birthPlace ?birthplaceOrgCountry .
    ?birthplaceOrgCountry a dbo:Country, dbo:Organisation .
  }

  # Author of ""The Tailor and Ansty"" and their birthplace
  OPTIONAL {
    ?author dbo:title ""The Tailor and Ansty""@en ;
            dbo:birthPlace ?authorBirthplace .
  }
}",6,9,7,2,3,2,3,28,0,1,1,0.0,0.0,0
892,67,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and landmark at elevation of the award of the member of E-girls and entity in Italy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v1 <http://dbpedia.org/property/awards> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity
WHERE {
  ?entity a dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:settlementType dbr:Settlement ;
          dbo:administrativeRegion true .
  
  ?party a dbo:PoliticalParty, dbo:Organization ;
         dbo:member dbr:Andrea_Cozzolino .

  ?administration dbo:entityInAdministration ?entity ;
                  dbo:politicalParty ?party .

  ?landmark dbo:elevation ?elevation ;
            dbo:awardRecipient ?member .
  
  ?member a dbo:E-girlsMember ;
          dbo:country dbr:Italy .

  FILTER EXISTS { ?entity dbo:location dbr:Italy }
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
582,68,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as the nickname of Japan national football team.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/property/residence> ?v4 . ?v5 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?residence ?nickname
WHERE {
  # Step 1: Identify Kazuaki Nagasawa's child
  ?child dbo:parent dbr:Kazuaki_Nagasawa .
  
  # Step 2: Find the father of this child who is an athlete, soccer manager, and sports manager
  ?father dbo:spouse ?mother . 
  ?child dbo:parent ?father .
  ?father a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .

  # Step 3: Determine the residence of this father if he is referenced as a scientist
  OPTIONAL { ?father dbo:residence ?residence . }
  
  # Step 4: Connect to Hirotaka Sugawara
  ?residence dbo:resident dbr:Hirotaka_Sugawara .

  # Step 5: Find the nickname associated with the Japan national football team
  ?nickname dbo:nickname dbr:Japan_national_football_team .
  
  # Linking player to the nickname (assuming a connection exists)
  ?player dbo:nickname ?nickname .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
445,68,test,"Give me the entity in the award of George H. Cameron and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and death place of the awardee of the establishment of 1820-03-10.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/location> ?v4 . ?v5 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardEntity ?country ?deathPlace
WHERE {
    # George H. Cameron's award entity
    ?person rdfs:label ""George H. Cameron""@en .
    ?person dbo:awardedBy ?award .
    ?award dbo:entity ?awardEntity .

    # Athlete from Great Britain and their country of residence
    ?athlete dbo:nationality dbr:United_Kingdom ;
             a dbo:Athlete .
    ?athlete dbo:residenceLocation ?location .
    ?location rdf:type dbo:Country ;
              rdfs:label ?countryLabel .
    FILTER (lang(?countryLabel) = ""en"")

    # Awardee of the establishment on 1820-03-10
    ?establishment dbo:dateEstablished ""1820-03-10""^^xsd:date .
    ?award2 dbo:entity ?establishment .
    ?recipient dbo:awardedBy ?award2 ;
               dbo:deathPlace ?deathPlace .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
573,66,test,"Give me the person decedent at the administration, that is a region, of Charlie Baker and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedent
WHERE {
  # Charlie Baker's administration region
  ?charlieBaker dbo:officeHolderOf dbr:Massachusetts .
  ?region dbo:administrativeRegionFor ?charlieBaker .

  # John Quincy Adams' work and its author
  ?work dbo:author ?adamsAuthor .
  ?adamsAuthor rdf:type dbo:Politician ;
               dbo:officeHolderOf ?someOffice .
  
  # William J. Phelan's residence settlement
  ?phelanResidence dbo:residenceLocation dbr:William_J._Phelan .
  ?settlement dbo:settlement dbr:William_J._Phelan .

  # Person decedent at the administration (region) of Charlie Baker and parent of Adams' author
  ?personDecedent dbo:decedentAt ?region ;
                  dbo:parentOf ?adamsAuthor .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
773,57,test,"Give me the spouse of Louis the German and parent of the child, that is a royalty, of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?child ?successor WHERE {
  # Louis the German and his spouse
  dbr:Louis_the_German dbo:spouse ?spouse .

  # Child of Louis the German who is royalty
  ?child dbo:parent dbr:Louis_the_German ;
         a dbo:Monarch .

  # Successor of the child who is royalty
  ?successor dbo:predecessor ?child ;
             a dbo:Monarch .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
373,8,test,Give me the professional in the profession of Beto Guedes and writer of 2300 Jackson Street (song).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/2300_Jackson_Street_(song)> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Beto_Guedes> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find Beto Guedes' profession
  dbr:Beto_Guedes dbo:profession ?profession .

  # Find the writer of ""2300 Jackson Street""
  dbr:""2300 Jackson Street"" dbo:lyricist ?writer .

  # Match the professional with the writer
  ?professional a ?profession .
  FILTER (?professional = ?writer)
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
554,19,test,"Give me the leader of the administration of Francisco da Costa Gomes and leader of the birth place of the band, that is an artist, of Rita Redshoes.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administrationLeader ?artist
WHERE {
  # Find Francisco da Costa Gomes' administration leader
  dbr:Francisco_da_Costa_Gomes dbo:presidentOf dbr:Portugal .
  OPTIONAL { 
    ?administrationLeader dbo:officeHolder dbr:Francisco_da_Costa_Gomes ;
                          dbo:positionTitle ""Prime Minister""^^xsd:string .
  }

  # Find Rita Redshoes' band and its birthplace
  dbr:Rita_Redshoes dbo:associatedBand ?band .
  ?band dbo:birthPlace ?birthPlace .

  # Find an artist from the band's birthplace
  ?artist dbo:birthPlace ?birthPlace ;
          a dbo:Artist .
}
```",5,6,6,3,2,3,2,20,0,0,3,0,0.0,0
216,68,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://dbpedia.org/ontology/coach> ?v4 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/coach> ?v7 . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerInCoach WHERE {
  # Džemal Berberović as a player in a coach
  dbr:Džemal_Berberović dbo:playerInTeam dbr:?Club .
  
  # The club is an organization and a soccer club
  ?Club rdf:type dbo:SoccerClub ;
        rdf:type dbo:Organization .

  # The coach of the club
  ?Club dbo:coach ?Coach .

  # The coach is a player, sports manager, and soccer manager
  ?Coach rdf:type dbo:SoccerPlayer ;
         rdf:type dbo:SportsManager ;
         rdf:type dbo:SoccerManager .

  # Person born on 1983-12-20 who is a sports manager, soccer manager, and soccer player
  ?Person dbo:birthday ""1983-12-20""^^xsd:date ;
          rdf:type dbo:SportsManager ;
          rdf:type dbo:SoccerManager ;
          rdf:type dbo:SoccerPlayer .

  # The coach of the club is associated with Croatia U21
  ?Coach dbo:reference dbr:Croatia_U21 .
  
  # Linking the player in the coach to the person born on 1983-12-20
  ?Coach dbo:playerInTeam ?Person .
  
  # Return the player in the coach
  ?PlayerInCoach dbo:playerInTeam ?Coach .
}",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
36,24,test,Give me the person born in the birth year of Deanne Bray and person born as the birth name of Ayo Makun.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person1 ?person2 WHERE {
  # Find Deanne Bray's birth year
  VALUES (?deanneBray) { dbr:Deanne_Bray }
  ?deanneBray dbo:birthdayYear ?birthYear .

  # Find a person born in the same year as Deanne Bray
  ?person1 dbo:birthdayYear ?birthYear .
  
  # Ensure it's not Deanne Bray herself
  FILTER (?person1 != dbr:Deanne_Bray)

  # Find Ayo Makun's birth name
  VALUES (?ayoMakun) { dbr:Ayo_Makun }
  ?ayoMakun dbo:birthName ?birthName .

  # Find a person with the same birth name as Ayo Makun
  ?person2 dbo:birthName ?birthName .
  
  # Ensure it's not Ayo Makun himself
  FILTER (?person2 != dbr:Ayo_Makun)
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
826,62,test,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of the child of the father of Anna Magdalena Appel and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Louis I of Hesse and by Rhine
  ?louisI dbr:Ludwig_I,_Grand_Duke_of_Hesse .

  # His spouse (Wilhelmina of Baden)
  ?spouse dbo:spouseOf ?louisI .
  
  # Children of Louis I who are royalty
  ?child dbo:child ?spouse ;
         a dbo:RoyalFamilyMember .

  # Predecessor of Louis IV, Grand Duke of Hesse (Louis III)
  ?predecessor dbr:Ludwig_III,_Grand_Duke_of_Hesse .

  # Successor of the child
  ?successor dbo:successorOf ?child .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
129,24,test,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and associated musical artist of the person born as Tahj Malik Chandler.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?artist2 WHERE {
  # Find the actor associated with ""Dreamville Presents: Revenge""
  ?movie dbr:Dreamville_Presents:_Revenge .
  ?movie dbo:starring ?actor .

  # Find the musical artist (organization) associated with this actor
  ?actor dbo:musicalArtist ?artist1 .
  FILTER(isURI(?artist1))

  # Find Tahj Malik Chandler, known as Lil Uzi Vert
  ?person dbr:Lil_Uzi_Vert ;
          rdfs:label ""Tahj Malik Chandler""@en .

  # Find the musical artist (organization) associated with Lil Uzi Vert
  ?person dbo:musicalArtist ?artist2 .
  FILTER(isURI(?artist2))
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
865,59,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  # Step 1: Identify Syeda Shahar Banu's spouse
  ?spouse a dbo:Spouse;
          dbo:spouse dbr:Syeda_Shahar_Banu.

  # Step 2: Find the child of this spouse who is a politician
  ?child dbo:parent ?spouse;
         a dbo:Politician.

  # Step 3: Determine the father of this politician
  ?father dbo:child ?child;
          dbo:deathPlace dbr:Patna.

  # Step 4: Find the residence country of this person (the father)
  ?residenceCountry dbo:nativeOf ?father.
  
  # Ensure that the residence is a country
  ?residenceCountry a dbo:Country.
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
445,71,test,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and death place of the awardee of the establishment of 1820-03-10 and entity in the award of the commander in Battle of Saint-Mihiel.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v7 <http://dbpedia.org/property/awards> ?v8 . ?v5 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/location> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInResidence
WHERE {
  # Find athletes from Great Britain with a country residence
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:residence ?residence .
  
  # Ensure the residence is a country
  ?residence rdf:type dbo:Country .

  # Find an award established on 1820-03-10 and its awardees' death places
  ?award dbo:dateEstablished ""1820-03-10""^^xsd:date ;
         dbo:recipient ?awardee .
  
  ?awardee dbo:deathPlace ?deathPlace .

  # Find the commander in Battle of Saint-Mihiel and their award
  ?battle dbr:Battle_of_Saint-Mihiel ;
          dbo:commander ?commander .
  
  ?commander dbo:award ?awardInBattle .

  # Match the death place with the residence country
  FILTER(?deathPlace = ?residence)

  # Get the entity in the award of the commander
  ?awardInBattle dbo:entity ?entityInResidence .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
965,63,test,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and parent of the person born, that is a noble, as Prince George of Battenberg and spouse of the spouse of the parent of Louise Mountbatten.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
SELECT ?parent WHERE {
  # Parent of Princess Victoria Eugenie (royalty child of Prince Louis)
  wd:Q123456 wdt:P22 wd:Q789012 . # Prince Louis of Battenberg is a parent of Princess Victoria Eugenie

  # Parent of Prince George of Battenberg (noble born as Prince George's parent)
  wd:Q345678 wdt:P22 wd:Q901234 . # Prince Alexander of Hesse and by Rhine is a parent of Prince George of Battenberg

  # Spouse of the parent of Louise Mountbatten
  wd:Q567890 wdt:P26 wd:Q123456 . # Princess Victoria of Hesse is a spouse of Prince Louis of Battenberg

  # Find common parent
  wd:Q789012 wdt:P22 ?parent . # Princess Victoria of Hesse's parent
  wd:Q901234 wdt:P22 ?parent . # Prince Alexander of Hesse and by Rhine's parent

  FILTER(?parent = wd:Q111213) # Louis IV, Grand Duke of Hesse
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
606,18,test,"Give me the figure known as the nickname of the figure known, that is a settlement, as Barb City and birthplace of the alumnus of University of Pennsylvania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . ?v1 <http://dbpedia.org/property/nickname> ""Barb City""@en . ?v1 <http://dbpedia.org/property/nickname> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?settlement WHERE {
  ?settlement a dbo:Settlement ;
              rdfs:label ?name ;
              dbo:nickName ""Barb City""@en .
  
  OPTIONAL { 
    ?person dbo:almaMater dbr:University_of_Pennsylvania ;
            dbo:birthPlace ?settlement .
  }
}
```

This query does the following:
- Searches for a settlement (`dbo:Settlement`) with the nickname ""Barb City"".
- Optionally checks if there is a person whose alma mater is the University of Pennsylvania and who was born in this settlement.",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
791,61,test,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v5 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
    # Step 1: Emperor Go-Shirakawa's child
    ?goChild dbo:childOf dbr:Emperor_Go-Shirakawa .
    
    # Step 2: Grandchild of Emperor Go-Shirakawa
    ?grandChild dbo:childOf ?goChild .

    # Step 3: Predecessor who is an office holder and royalty
    ?predecessor dbo:successor ?grandChild .
    ?predecessor a dbo:Monarch ;
                dbo:officeHolder true .

    # Step 4: Emperor Antoku's father
    ?antokuFather dbo:child dbr:Emperor_Antoku .

    # Step 5: Child of Antoku's father who is royalty
    ?royaltyChild dbo:childOf ?antokuFather .
    ?royaltyChild a dbo:Monarch .

    # Step 6: Father of the child from step 5, who is both royalty and office holder
    ?father dbr:Emperor_Antoku ;
            dbo:child ?royaltyChild .
    ?father a dbo:Monarch ;
            dbo:officeHolder true .

    # Ensure the predecessor matches the criteria
    FILTER(?predecessor = ?father)
}",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
987,61,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v0 <http://dbpedia.org/property/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  # Find Canicosa de la Sierra's time zone
  dbr:Canicosa_de_la_Sierra dbo:timeZone ?timezone .

  # Assume the timezone is associated with a sports event (this part might not be directly available)
  ?sportsEvent dbo:locationTimezone ?timezone .
  
  # Find the country of Canicosa de la Sierra
  dbr:Canicosa_de_la_Sierra dbo:country ?country .

  # Find films Emir Hadžihafizbegović acted in
  dbr:Emir_Hadžihafizbegović dbo:film ?film .
  
  # Assume the film is also a show (this might be implicit)
  ?film rdf:type dbo:Film .
  
  # Find his birthplace
  dbr:Emir_Hadžihafizbegović dbp:birthPlace ?birthPlace .

  # Ensure the country of Canicosa de la Sierra matches the birthplace's country
  ?birthPlace dbo:country ?country .
}
```",6,9,7,3,2,3,3,71,0,0,18,0,0.0,0
5,20,test,"Give me the birthplace of the person born, that is a politician, as the award of Renata Adler and entity in the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v5 . <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Step 1: Identify the politician born
  ?politician a dbo:Politician ;
              dbo:birthPlace ?birthPlace .

  # Step 2: Find the award associated with Renata Adler
  ?award dbo:recipient dbr:Renata_Adler .

  # Step 3: Determine the entity in that award related to Rubén Colón Tarrats
  ?entity dbo:associatedWith dbr:Rubén_Colón_Tarrats ;
          dbo:partOfAward ?award .

  # Step 4: Identify the musical artist (band) associated with Rubén Colón Tarrats
  ?artist a dbo:Band ;
          dbo:member ?entity .

  # Linking all together
  ?politician dbr:Rubén_Colón_Tarrats .
}
```",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
445,65,test,"Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the residence, that is a country, of Anna Sharkey and entity in the award of George H. Cameron.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v4 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
    # Find entity associated with establishment date 1820-03-10
    ?entity dbo:foundingDate ""1820-03-10""^^xsd:date .
    
    # Find Anna Sharkey's country of residence
    dbr:Anna_Sharkey dbo:residence ?countryResidence .
    FILTER (dbo:COUNTRY ?countryResidence) .

    # Find George H. Cameron's award
    dbr:George_H._Cameron dbo:award ?awardEntity .

    # Join to find the death place of the awardee from point 1
    ?entity dbo:awardee ?deathPlace .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
826,60,test,"Give me the spouse of the child of the father of Anna Magdalena Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?predecessor WHERE {
  # Anna Magdalena Appel and her father
  ?anna a dbo:Person ;
        foaf:name ""Anna Magdalena Bach""@en .
  
  ?father dbo:child ?anna ;
          dbp:spouse ?bach .

  # Johann Sebastian Bach (spouse of Anna)
  ?bach a dbo:Person ;
        foaf:name ""Johann Sebastian Bach""@en ;
        dbp:spouse ?spouse .

  # Louis IV, Grand Duke of Hesse and his child
  ?louisIV a dbo:Person ;
           foaf:name ""Louis IV, Grand Duke of Hesse""@en .
  
  ?child dbo:parent ?louisIV .

  # Predecessor of the parent (Louis IV or his spouse)
  OPTIONAL {
    ?spouseOfLouisIV dbp:spouse ?louisIV .
    ?predecessor dbo:successor ?spouseOfLouisIV .
  }

  OPTIONAL {
    ?predecessorL louisIV dbo:successor ?louisIV .
  }
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
926,68,test,"Give me the child of the father, that is a royalty, of Mustafa III and successor of the child of the spouse of Şermi Kadın and father of the father of the spouse of Neşerek Kadın.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v6 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  ?mustafa3 dbo:father dbr:Ahmet_III.
  ?ahmet3 dbo:child ?mustafa3.
  ?abdulhamid1 dbo:predecessor ?mustafa3.
  ?abdulhamid1 a dbo:Sovereign.
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
773,71,test,"Give me the parent of the successor of the child, that is a royalty, of Louis the Pious and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat).",SELECT ?result WHERE { <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v7 . ?v8 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/successor> ?v5 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v4 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalParent WHERE {
  # Step 1: Louis the Pious' royal child
  ?child dbp:father dbr:Louis_the_Pious ;
         a dbo:Monarch .

  # Step 2: Successor of this child
  ?successor dbp:predecessor ?child .

  # Step 3: Parent of the successor
  ?parentOfSuccessor dbp:child ?successor .

  # Step 4: Carloman of Bavaria's father who is an office holder and royalty
  ?father dbp:son dbr:Carloman_of_Bavaria ;
          a dbo:Monarch, dbo:OfficeHolder .

  # Step 5: Royal child of this father
  ?royalChild dbp:father ?father ;
              a dbo:Monarch .

  # Step 6: Parent of this royal child
  ?parentOfRoyalChild dbp:child ?royalChild .

  # Step 7: Bernard's lineage
  ?bernardParent dbp:son dbr:Bernard_(son_of_Charles_the_Fat) .
  ?grandparent dbp:child ?bernardParent .
  ?spouse dbp:spouse ?grandparent .

  # Final condition to find the parent of the successor
  FILTER (?parentOfSuccessor = ?parentOfRoyalChild)
  
  # Return the final parent
  BIND(?parentOfSuccessor AS ?finalParent)
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
236,20,test,"Give me the party member of the administration of the reference, that is an office holder and a politician, to James Madison and party member of the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v4 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/party> ?v2 . ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeHolder ?partyOrganization
WHERE {
  # James Madison's party member who is an office holder and politician
  ?madisonPartyMember dbo:memberOf ?administration .
  ?administration dbo:president dbr:James_Madison .
  ?madisonPartyMember a dbo:OfficeHolder ;
                     a dbo:Politician .

  # Person decedent at Quincy, Massachusetts who is an office holder and politician
  ?decedent dbo:placeOfBirth dbr:Quincy,_Massachusetts ;
           a dbo:OfficeHolder ;
           a dbo:Politician .
  
  # Party organization of the decedent
  ?decedent dbo:memberOfParty ?partyOrganization .

}
```",6,11,7,3,2,3,2,20,0,0,19,0,0.0,0
417,61,test,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?result WHERE {
  # Leader of Colony of Greenland
  ?leader dbp:country ""Greenland"" .
  
  # Father of the leader
  ?father dbo:child ?leader .

  # Child of the father that is royalty
  ?royalChild dbo:parent ?father ;
              a dbo:Monarch .

  # Alexandrine of Mecklenburg-Schwerin's parent (royalty)
  ?alexandrine dbp:name ""Alexandrine of Mecklenburg-Schwerin"" .
  ?parent dbo:child ?alexandrine ;
          a dbo:Monarch .

  # Child of the child that is royalty
  ?finalChild dbo:parent ?parent ;
              a dbo:Monarch .

  # Result is the intersection of these two paths
  FILTER (?royalChild = ?finalChild)
  BIND(?royalChild AS ?result)
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
976,62,test,"Give me the office of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v4 <http://dbpedia.org/ontology/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/office> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?naciOffice ?mayorOffice ?milatParty ?kemalLeaderOffice
WHERE {
  # Naci Bostancı's office
  dbr:Naci_Bostancı dbo:office ?naciOffice .

  # Mayor who is a politician and Turkish
  ?mayor a dbo:Mayor ;
         dbo:nationality dbr:Turkey ;
         dbo:occupation dbr:Politician .
  ?mayor dbo:office ?mayorOffice .

  # Millet İttifakı as an organization and political party that is Turkish
  dbr:Millet_İttifakı a dbo:PoliticalParty, dbo:Organization ;
                     dbo:nationality dbr:Turkey .
  BIND(dbr:Millet_İttifakı AS ?milatParty)

  # Kemal Kılıçdaroğlu's administration and leader's office
  dbr:Kemal_Kılıçdaroğlu dbo:positionHeld ?administration ;
                         dbo:office ?kemalLeaderOffice .
  ?administration a dbo:Organization .

}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
645,57,test,"Give me the commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?officeLeader ?nativePresident WHERE {
  # Find Camilo Menéndez Tolosa's roles
  ?camilo a dbo:Person ;
          foaf:name ""Camilo Menéndez Tolosa"" .

  # Link him to the Battle of Jarama as commander
  ?battle dbr:Battle_of_Jarama ;
         dbo:commander ?commander .
  
  FILTER(?commander = ?camilo)

  # Find his role in a government agency and organization
  ?office dbo:head ?officeLeader ;
          a (dbo:GovernmentAgency | dbo:Organization) .

  FILTER(?officeLeader = ?camilo)

  # Identify the Battle of Jarama as an event, military conflict, societal event
  ?battle a (dbo:Event | dbo:MilitaryConflict | dbo:SocietalEvent) .

  # Find the native president during Restoration in Spain
  ?president a dbo:President ;
             dbo:nationality dbr:Spain ;
             dbo:politicalParty ?party .
  
  ?restorationPeriod dbo:country dbr:Spain ;
                     dbo:leader ?president ;
                     foaf:name ""Restoration (Spain)"" .

  FILTER(?nativePresident = ?president)
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
892,65,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of the award of the member of E-girls and entity in the profession of Henri Crolla.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?entity dbo:country dbr:Italy .
  ?entity rdf:type/(dbo:Region|dbr:Settlement|dbo:AdministrativeRegion) .

  # Entity in the administration of Democratic Party (Italy)
  ?adminParty dbo:member dbr:Democratic_Party_(Italy) .
  ?entity dbo:administrativeBody ?adminParty .

  # Landmark at a certain elevation
  ?landmark dbo:elevation ?elevation .
  ?entity dbo:location ?landmark .

  # Award of the member of E-girls
  ?awardMember dbo:member dbr:E-girls .
  ?award dbo:recipient ?awardMember .
  ?entity dbo:awards ?award .

  # Profession of Henri Crolla
  ?profession dbr:Henri_Crolla .
  ?entity dbo:profession ?profession .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
83,20,test,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA and party of the governor of the commander, that is a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leaderParty> ?result . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?rulingParty WHERE {
  # Step 1: Find the sports manager who is a member of Kedah FA
  ?sportsManager dbo:memberOf dbr:Kedah_FA ;
                 dbo:nationality dbr:Brazil ;
                 dbo:birthPlace ?town .

  # Step 2: Ensure the birthplace is a town in Brazil with a soccer club
  ?town a dbo:Settlement ;
        dbp:country dbr:Brazil ;
        dbo:sportTeam ?soccerClub .
  
  # Step 3: Find the ruling party in this Brazilian town
  ?rulingParty dbo:governingBody ?town .

  # Step 4: Identify the governor of the commander in the Central African Republic Civil War
  ?commander dbo:nationality dbr:Central_African_Republic ;
             dbo:occupation dbo:Politician .
  
  ?governor dbo:positionHeld ?commander ;
            dbo:party ?rulingParty .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
715,68,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Carlos Franco Iribarnegaray's military command
  ?carlos a dbo:MilitaryPerson ;
          dbo:militaryConflict ?conflict1 .

  # Native of Morocco who is a commander in a military conflict
  ?moroccanNative dbo:nationality dbr:Morocco ;
                  dbo:militaryCommanderOf ?conflict2 .

  # Leader of an office (government agency/organisation)
  ?officeLeader dbo:leader ?moroccanNative ;
                a (dbo:GovernmentAgency | dbo:Organisation) .

  # Commander in the force of the mayor/president of 1933 Spanish general election
  ?politicalFigure dbo:electedAs dbr:President_of_Spain ;
                   dbo:electionYear ""1933""^^xsd:gYear ;
                   dbo:militaryCommanderOf ?conflict3 .
  
  ?commander dbo:militaryCommanderOf ?conflict3 .

  # Ensure the commander is the same across all roles
  FILTER (?carlos = ?moroccanNative && ?moroccanNative = ?officeLeader && ?politicalFigure = ?commander)
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
839,64,test,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of Peter Schorowsky and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?kevinRussellBand ?peterSchorowskyBand ?bandOfTheBand

WHERE {
  # Kevin Russell's band
  dbr:Kevin_Russell (dbo:birthPlace|dbo:profession) ?kevinRussell;
    dbo:musicalArtist ?kevinRussellBand.

  # Peter Schorowsky's band
  dbr:Peter_Schorowsky (dbo:birthPlace|dbo:profession) ?peterSchorowsky;
    dbo:musicalArtist ?peterSchorowskyBand.

  # Band of the band that is a musical artist
  ?bandOfTheBand dbo:musicalArtist ?professionalInMusician.
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
582,57,test,"Give me the reference to Japan and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and figure known as the nickname of Japan national football team.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  # Kazuaki Nagasawa's child
  ?child dbo:parent dbr:Kazuaki_Nagasawa .
  
  # Father who is an athlete, soccer manager, and sports manager
  ?father dbo:spouse ?mother . 
  ?father a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .

  # Linking the child to the father
  ?child dbo:parent ?father .
  
  # Nickname of Japan National Football Team
  OPTIONAL { ?team dbo:nickname ""Samurai Blue""@en . }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
791,67,test,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of Taira no Tokuko and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v6 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Emperor Antoku and his father
  dbr:Emperor_Antoku dbo:father dbr:Taira_no_Kiyomori .
  
  # Taira no Kiyomori's details
  dbr:Taira_no_Kiyomori dbo:spouse dbr:Taira_no_Tokuko ;
                       a dbo:Royalty, dbo:OfficeHolder .

  # Taira no Kiyomori's father
  dbr:Taira_no_Kiyomori dbo:father ?father .
  
  # Ensure the father is royalty and an office holder
  ?father a dbo:Royalty, dbo:OfficeHolder .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
933,62,test,"Give me the reference to the birth name of the professional in Musician and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and band of The Ramong Sound.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  ?band a dbo:Band .
  ?band foaf:name ""The Ramones""@en .
  ?band dbo:musicalArtist ?musician .
  ?musician dbo:birthName ?birthName .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
573,69,test,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v7 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v7 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?personDecedentAtRegion ?authorPolitician ?personDecedentAtSettlement
WHERE {
  # Charlie Baker's real name and associated region
  dbr:Charlie_Baker_(Australian_footballer) dbo:realName ?charlieRealName .
  ?region dbo:administrativeArea ?charlieRealName .
  ?personDecedentAtRegion dbo:deceasedAt ?region .

  # John Quincy Adams' work and author who is a politician
  dbr:John_Quincy_Adams dbo:work ?adamsWork .
  ?authorPolitician dbo:authorOf ?adamsWork ;
                   rdf:type dbo:Politician ;
                   dbo:officeHolder ?office .
  
  # William J. Phelan's residence and associated person decedent
  dbr:William_J._Phelan dbo:residence ?phelanResidence .
  ?personDecedentAtSettlement dbo:deceasedAt ?phelanResidence .
}
```",8,12,9,3,3,3,3,71,0,0,2,0,0.0,0
978,18,test,"Give me the band member of the professional, that is a musical artist and an artist, in the award of Michel Claparède and band member of the person born as Nicholas Bracegirdle.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?professional dbo:awardReceived dbr:Mic_Helal_Award_for_Research_in_Psychology ; 
                a dbo:MusicalArtist, dbo:Artist .
  
  ?person dbr:Nicholas_Bracegirdle ;
          dbo:memberOfBand ?band .

  ?bandMember dbo:memberOfBand ?band ;
              dbo:memberOfBand ?professionalBand .

  FILTER(?professional = ?professionalBand)
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
433,67,test,"Give me the associated musical artist of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.",SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalArtist WHERE {
  ?paulChambers a dbr:Paul_Chambers ;
                dbo:musicalArtist ?associatedArtist1 .

  ?associatedArtist1 dbo:musicalArtist ?associatedArtist2 .
  
  ?associatedArtist2 a dbr:Miles_Davis ;
                    dbo:occupation dbr:Musician .

  ?ornetteColeman a dbr:Ornette_Coleman ;
                 dbo:musicalArtist ?associatedArtist3 .

  ?associatedArtist3 a dbr:Don_Cherry ;
                    dbo:occupation dbr:Musician .

  ?slowhandBook dbo:author ?writer .
  ?writer a dbr:Eric_Clapton ;
          dbo:profession dbr:Musician .

  FILTER(?associatedArtist2 = ?associatedArtist3)
  
  BIND(?associatedArtist2 AS ?finalArtist)
}
```",7,11,8,3,3,3,3,71,0,0,4,0,0.0,0
456,68,test,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and band of the band, that is a musical artist, of Dean Brody and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v5 <http://dbpedia.org/property/starring> ?v4 . ?v5 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Ross Newton and his work that is both a movie and TV show
  dbr:Ross_Newton dbo:actorIn ?work .
  ?work rdf:type dbo:Film ;
        dbo:basedOnSourceMaterial ?tvShow .
  
  # Dean Brody as a musical artist
  dbr:Dean_Brody dbo:musicArtistOf ?band .
  
  # Band member who is also an actor in the work
  ?actor dbo:memberOfBand ?band ;
         dbo:actorIn ?work .

  # Spouse of the actor
  ?actor dbo:spouse ?spouse .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
826,71,test,"Give me the spouse of the child of the father of Anna Magdalena Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v7 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v7 <http://dbpedia.org/ontology/parent> ?v8 . ?result <http://dbpedia.org/ontology/successor> ?v8 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Anna Magdalena Bach and her father
  dbr:Anna_Magdalena_Bach dbo:father dbr:Johann_Gottfried_Ahle .

  # Child of Johann Gottfried Ahle (assuming a known child)
  dbr:Known_Child_of_JGA dbo:parent dbr:Johann_Gottfried_Ahle .
  
  # Spouse of the child
  dbr:Known_Child_of_JGA dbo:spouse ?spouse .

  # Successor of the spouse that is royalty
  ?successor dbo:predecessor ?spouse ;
             a dbo:Monarch .

  # Reference to Louis I and predecessor relationship
  ?reference dbo:predecessor ?successor ;
             a dbo:Monarch ;
             dbo:reigns dbr:Louis_I_of_Hesse_Darmstadt .

  # Parent of the child of Louis IV, Grand Duke of Hesse
  dbr:Child_of_Louis_IV dbo:parent ?parent .
  
  # Predecessor of this parent
  ?predecessor dbo:succeeder ?parent ;
               a dbo:Monarch .

  FILTER(?reference = ?predecessor)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
935,18,test,"Give me the death place of the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi and headquarter of the office of Sanaullah Khan Zehri.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://dbpedia.org/ontology/location> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?headquartersLocation
WHERE {
  # Step 1: Find the award received by Syed Sohail Hussain Naqvi
  ?award dbo:recipient dbr:Syed_Sohail_Hussain_Naqvi .
  
  # Step 2: Identify another recipient of this award
  ?award dbo:recipient ?awardee .

  # Step 3: Get the death place of that awardee
  OPTIONAL { ?awardee dbo:deathPlace ?deathPlace . }

  # Step 4: Find the office associated with Sanaullah Khan Zehri
  ?office dbo:head dbr:Sanaullah_Khan_Zehri .

  # Step 5: Get the headquarters location of that office
  OPTIONAL { ?office dbo:location ?headquartersLocation . }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
773,67,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of the successor of the child, that is a royalty, of Louis the Pious and spouse of Louis the German.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://dbpedia.org/ontology/successor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Carloman of Bavaria's father who is an office holder and royalty
  dbr:C._of_Bavaria dbo:father ?father .
  ?father a dbo:Monarch ;
          a dbo:OfficeHolder .

  # Child of this father who is royalty
  ?child dbo:parent ?father ;
         a dbo:Monarch .

  # Louis the Pious' child who is royalty
  dbr:Louis_the_Pious dbo:child ?louisChild .
  ?louisChild a dbo:Monarch .

  # Successor of Louis the Pious' child
  ?successor dbo:predecessor ?louisChild ;
             a dbo:Monarch .

  # Parent of the successor is also spouse of Louis the German
  ?parent dbo:spouse dbr:Louis_the_German .
  ?parent dbo:child ?successor .

  # The parent we are looking for is the same in both cases
  ?parent dbo:parent ?child .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
926,58,test,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of Mahmud II and successor of the child of Ahmed III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?person WHERE {
  # Beyhan Sultan and her parent Mustafa III
  wd:Q123456 wdt:P22* wd:Q789012 . # Beyhan Sultan (Q123456) has a father Mustafa III (Q789012)

  # Mahmud II as the child of Beyhan Sultan
  wd:Q345678 wdt:P22 wd:Q123456 . # Mahmud II (Q345678) is the son of Beyhan Sultan

  # Successor relationship from Ahmed III to Selim III and then Mustafa IV
  wd:Q987654 wdt:P1367* wd:Q543210 . # Abdul Hamid I (Q987654) is a child of Ahmed III (Q543210)
  wd:Q678901 wdt:P1367 wd:Q987654 .   # Selim III (Q678901) is the successor of Abdul Hamid I
  wd:Q234567 wdt:P1367 wd:Q678901 .   # Mustafa IV (Q234567) is the successor of Selim III

  # Mustafa IV as father of Mahmud II and successor of Selim III
  wd:Q234567 wdt:P22 wd:Q345678 .     # Mustafa IV (Q234567) is the father of Mahmud II (Q345678)

  # The child of Mustafa IV that is a royalty
  ?person wdt:P22 wd:Q234567 .
  ?person wdt:P31/wdt:P279* wd:Q5 .   # ?person is an instance of royalty (Q5)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
826,66,test,"Give me the spouse of the child of Johann Heinrich Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v6 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Johann Heinrich Appel's child
  ?childAppel dbo:parent dbr:Johann_Heinrich_Appel .
  
  # Step 2: Spouse of Johann Heinrich Appel's child
  ?spouse dbo:spouse ?childAppel .

  # Step 3: Louis IV, Grand Duke of Hesse's child
  ?childLouisIV dbo:parent dbr:Louis_IV,_Grand_Duke_of_Hesse .
  
  # Step 4: Parent of Louis IV's child (should be Louis IV)
  ?parentChildLouisIV dbo:spouse ?childLouisIV ;
                     rdfs:label ""Louis IV, Grand Duke of Hesse""@en .

  # Step 5: Predecessor of Louis IV
  ?predecessor dbo:successor ?parentChildLouisIV .
  
  # Step 6: Louis I, Grand Duke of Hesse's child
  ?childLouisI dbo:parent dbr:Louis_I,_Grand_Duke_of_Hesse .

  # Step 7: Successor of Louis I's child in terms of royalty
  ?successorChild dbo:predecessor ?childLouisI .
  
  # Ensure the result is a royalty
  ?spouse rdf:type dbo:Monarch .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
353,8,test,"Give me the entity in the country of Moskovsky City District, Nizhny Novgorod and alma mater of Daniil Yegorov.","SELECT ?result WHERE { <http://dbpedia.org/resource/Moskovsky_City_District,_Nizhny_Novgorod> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Daniil_Yegorov> <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?institution WHERE {
  # Find Daniil Yegorov's alma mater
  ?yegorov a dbo:Person ;
          foaf:name ""Daniil Yegorov"" ;
          dbo:almaMater ?institution .

  # Ensure the institution is in Russia (Moskovsky City District)
  ?institution dbo:country dbr:Russia .
}
```

This query does the following:
- It selects entities (`?institution`) that are alma maters of a person named Daniil Yegorov.
- It ensures that these institutions are located in Russia, which includes Moskovsky City District.",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
826,65,test,"Give me the spouse of the child of Johann Heinrich Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of the parent of Prince Friedrich of Hesse and by Rhine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v6 <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Find Johann Heinrich Appel's child
  ?child dbo:parent dbr:Johann_Heinrich_Appel .
  
  # Step 2: Find the spouse of this child
  ?spouse dbo:spouse ?child .

  # Step 3: Successor in royalty from the child's lineage
  ?successor dbo:royalTitle ?title .
  FILTER EXISTS { ?successor dbo:parent ?child . }

  # Step 4: Reference to Louis I and predecessor in royalty
  ?reference dbo:predecessor ?successor ;
             dbo:royalTitle ?title .
  FILTER EXISTS { ?reference dbo:relatedTo dbr:Louis_I_of_Bavaria } .

  # Step 5: Parent of Prince Friedrich of Hesse and by Rhine
  ?parent dbo:child dbr:Friedrich_Prince_of_Hesse_and_by_Rhine .
  
  # Ensure the spouse is a royalty
  FILTER EXISTS { ?spouse dbo:royalTitle ?title }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
158,19,test,"Give me the entity in the award, that is a country, of Adelbert Cronkhite and party of the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country
WHERE {
  # Find Adelbert Cronkhite's award related to a country
  ?award dbo:recipient dbr:Adelbert_Cronkhite .
  ?award dbo:country ?country .

  # Identify the person who died on 1945-09-15 and was an office holder and politician
  ?deceased dbp:dateOfDeath ""1945-09-15""^^xsd:date ;
            a dbo:OfficeHolder, dbo:Politician .

  # Find the successor of this deceased person who is a prime minister, office holder, and politician
  ?successor dbo:succeededBy ?deceased .
  ?successor a dbo:PrimeMinister, dbo:OfficeHolder, dbo:Politician .
}
```",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
36,25,test,"Give me the person born in the birth year of Deanne Bray and person born as Ayo Makun and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person1 ?person2 ?actor WHERE {
  # Find Deanne Bray's birth year
  ?deanneBray a dbo:Person;
             dbp:birthdayYear ?birthYearDeanneBray.

  # Find another person born in the same year as Deanne Bray
  ?person1 a dbo:Person;
           dbp:birthdayYear ?birthYearDeanneBray;
           rdfs:label ?labelPerson1.
  
  FILTER(LANG(?labelPerson1) = 'en')

  # Find Ayo Makun's birth date
  ?ayoMakun a dbo:Person;
            dbp:birthday ?birthDateAyoMakun.

  # Find another person born on the same date as Ayo Makun
  ?person2 a dbo:Person;
           dbp:birthday ?birthDateAyoMakun;
           rdfs:label ?labelPerson2.
  
  FILTER(LANG(?labelPerson2) = 'en')

  # Find Lepacious Bose's claim to fame (film)
  ?lepaiousBose a dbo:Person;
                 dbo:claimToFame ?film.

  # Find an actor of that film
  ?actor a dbo:Actor;
         dbo:actedIn ?film;
         rdfs:label ?labelActor.
  
  FILTER(LANG(?labelActor) = 'en')
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
987,62,test,"Give me the entity in Montenegro and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlaceInMontenegro ?actorBirthPlace WHERE {
  # Step 1: Find Dado Polumenta's band
  ?band dbo:member dbr:Dado_Polumentari .
  
  # Step 2: Find an artist in that band who is also a musical artist
  ?artist dbo:memberOf ?band ;
          rdf:type dbo:MusicalArtist .

  # Step 3: Get the birthplace of this artist, located in Montenegro
  ?artist dbp:birthPlace ?birthPlaceInMontenegro .
  ?birthPlaceInMontenegro dbo:country dbr:Montenegro .

  # Step 4: Find a film/show with Emir Hadžihafizbegović
  ?film dbo:starring dbr:Emir_Hadžihafizić-Hadžihafizbegović .
  
  # Step 5: Get the birthplace of another actor from that film
  ?actor dbo:starringInFilm ?film ;
         dbp:birthPlace ?actorBirthPlace .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
445,69,test,"Give me the death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?result <http://dbpedia.org/ontology/location> ?v3 . ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?deathPlace WHERE {
  # Awardee of Royal Astronomical Society
  ?awardee dbo:awardReceived dbr:Royal_Astronomical_Society_Medal .
  
  # Death place of the awardee
  ?awardee dbo:deathPlace ?deathPlace .

  # Entity in residence (country) of a resident athlete of Great Britain
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:residence ?residence .
  ?residence dbp:countryName ?country .

  # Commander in Battle of Saint-Mihiel and related award entity
  ?commander dbo:commandedBattle dbr:Battle_of_Saint-Mihiel ;
             dbo:awardReceived ?award .
  
  # Linking the components together
  FILTER(?deathPlace = ?residence)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
926,70,test,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v6 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonAncestor WHERE {
  # Abdulaziz's lineage
  ?abdulaziz dbo:father ?fatherAbdulaziz .
  ?fatherAbdulaziz dbo:father ?grandfatherAbdulaziz .

  # Mustafa III and Beyhan Sultan
  ?mustafaIII dbp:child ?beyhanSultan .
  ?şermiKadin dbo:spouse ?spouseŞermiKadin .
  ?spouseŞermiKadin dbo:child ?childSpouseŞermiKadin .
  
  # Successor of the child
  ?successor dbp:succeededBy ?childSpouseŞermiKadin .

  # Find common ancestor who is royalty
  ?grandfatherAbdulaziz dbo:child ?commonAncestor .
  ?mustafaIII dbo:child ?royaltyChild .
  FILTER (?commonAncestor = ?royaltyChild)

  # Ensure the common ancestor is a royalty
  ?commonAncestor rdf:type dbp:RoyalPerson .

}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
978,20,test,"Give me the band member of the professional, that is a musical artist and an artist, in the award of Michel Claparède and band member of the person born as the name of Chicane (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find the Michel Claparède award
  ?award a dbo:Award ;
         rdfs:label ""Michel Claparède Award""@en .

  # Find professionals associated with this award who are also musical artists and artists
  ?professional dbo:recipientOf ?award ;
                a dbo:MusicalArtist, dbo:Artist .

  # Find Chicane (musician)
  dbr:Chicane a dbo:MusicalArtist .

  # Find band members of both the professional and Chicane
  ?bandMember dbo:memberOf ?professionalBand .
  ?bandMember dbo:memberOf dbr:Chicane .

}
```",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
791,60,test,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Find Emperor Antoku and his father
  dbr:Emperor_Antoku dbo:father ?antokuFather .

  # Step 2: Find the father of Emperor Antoku's father who is royalty and an office holder
  ?antokuFather dbo:father ?grandfather .
  ?grandfather a dbo:Monarch ;
              dbo:officeHolder ?office .

  # Step 3: Find the spouse of this grandfather who is royalty
  ?grandfather dbo:spouse ?spouse .
  ?spouse a dbo:Monarch .

  # Step 4: Reference to Emperor Takakura and his spouse
  dbr:Emperor_Takakura dbo:spouse ?takakuraSpouse .

  # Step 5: Find the child of the spouse from step 3 who is royalty
  ?spouse dbo:child ?child .
  ?child a dbo:Monarch .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
456,66,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of the actor of Pacific Drive and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  dbr:Alan_Doyle dbo:memberOf ?doyleBand .
  
  dbr:Pacific_Drive dbo:actor ?actor .
  
  ?actor dbo:spouse ?spouse .

  ?spouse dbo:profession ?shadowAlterEgo .
  FILTER(CONTAINS(LCASE(?shadowAlterEgo), ""the shadow""))

  ?spouse dbo:memberOf ?band .
  
  ?band rdf:type dbr:MusicalArtist .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
917,62,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of Kekūanāoʻa and child of the father of the spouse, that is a royalty, of Leleiohoku I.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Step 1: Identify the mayor of Hawaiian Kingdom
  ?mayor dbo:positionTitle ""Mayor""@en .
  ?mayor dbo:country dbr:Hawaiian_Kingdom .

  # Step 2: Find the child who is royalty
  ?child dbo:parent ?mayor ;
         a dbo:Monarch .

  # Step 3: This child must also be a child of Kekūanāoʻa
  ?child dbo:parent dbr:Kekūanāoʻa .

  # Step 4: Identify Leleiohoku I's spouse and their father
  ?leleiohoku1 dbo:spouse ?spouse .
  ?spouse dbo:father ?father .

  # Ensure the child is also a child of this father (royalty)
  ?child dbo:parent ?father .

  # Step 5: Find the parent of this royalty
  ?child dbo:parent ?parent .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
507,70,test,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of the person born on 1966-02-18 and spouse of the person born as Anne Voase Coates.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v7 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v7 <http://dbpedia.org/property/starring> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?director WHERE {
  # Find the person born on 1919-06-17
  ?person1 dbo:birthday ""1919-06-17""^^xsd:date .
  
  # Find the profession of the person born on 1966-02-18
  ?person2 dbo:birthday ""1966-02-18""^^xsd:date .
  ?person2 dbo:profession ?profession .

  # Find the spouse of Anne Voase Coates
  dbr:Anne_Voase_Coates foaf:mbox ?email .
  ?spouse foaf:mbox ?email ;
          dbo:spouse dbr:Anne_Voase_Coates .

  # The director must be professional in the same profession as person2 and spouse of Anne Voase Coates
  ?director dbo:profession ?profession ;
            dbo:spouse dbr:Anne_Voase_Coates .
  
  # Find a movie that is both a movie and a work directed by this director
  ?movie dbo:director ?director ;
         rdf:type dbo:Film ;
         dbo:workType ?workType .
  FILTER (?workType = ""Movie"" || ?workType = ""Work"")
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
212,8,test,Give me the birthplace of the professional in  and birthplace of Corp Sayvee.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Corp_Sayvee> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Albert_Einstein 
    dbr:C_Sayvee
  }
  
  ?person dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,2,9,0,4,1,0.0,0.0,0
329,25,test,"Give me the entity in the region, that is a country, of Western European Time and birthplace of the author of The Tailor and Ansty and entity in Northern Ireland.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v4 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  # Find countries in Western European Time zone
  ?country dbo:timeZone dbr:Western_European_Time .

  # Check if the country is associated with Northern Ireland
  OPTIONAL { ?country dbo:part dbr:Northern_Ireland . }

  # Find George Moore's birthplace
  dbr:George_Moore dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is in the same country
  FILTER (?birthPlace = ?country)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
826,56,test,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of Louis II, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Louis IV, Grand Duke of Hesse and his child
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:child ?childOfLouisIV .
  
  # Parent of the child is Louis IV himself
  ?parentOfChild rdfs:label ""Louis IV, Grand Duke of Hesse""@en .

  # Predecessor of Louis IV (Parent of the parent)
  ?predecessor dbo:successor dbr:Louis_IV,_Grand_Duke_of_Hesse .
  
  # Successor of Louis II
  ?successorOfLouisII dbo:predecessor dbr:Louis_II,_Grand_Duke_of_Hesse .
  FILTER(?successorOfLouisII = dbr:Louis_IV,_Grand_Duke_of_Hesse)

  # Child of Johann Heinrich Appel
  dbr:Johann_Heinrich_Appel dbo:child ?childOfAppel .

  # Spouse of the child of Johann Heinrich Appel
  ?spouse dbo:spouse ?childOfAppel .
  
  FILTER(?predecessor = ?successorOfLouisII)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
93,19,test,"Give me the death place of the governor of the native, that is a politician, of Seattle and capital of the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?politician dbo:birthPlace dbr:Seattle .
  ?politician dbo:residence dbr:Anchorage .
  ?politician dbo:deathPlace ?deathPlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
865,58,test,"Give me the father of the child of the father of Abul Maal Abdul Muhith and native of British Raj and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  # Step 1: Find Abul Maal Abdul Muhith's father
  ?abulMaal a dbo:Person ;
            foaf:name ""Abul Maal Abdul Muhith"" .
  
  ?abulMaalFather dbo:child ?abulMaal .

  # Step 2: Find the grandfather (father of Abul Maal's father)
  ?grandfather dbo:child ?abulMaalFather .

  # Step 3: Find a child of this grandfather who was native to the British Raj
  ?britishRajChild dbo:child ?grandfather ;
                   dbo:nationality dbc:British_Raj .

  # Step 4: Find Abu Ahmad Abdul Hafiz's politician child
  ?abuAhmad a dbo:Person ;
            foaf:name ""Abu Ahmad Abdul Hafiz"" .
  
  ?politicianChild dbo:child ?abuAhmad ;
                   rdf:type dbo:Politician .

  # Step 5: Match the British Raj native with the politician child
  FILTER (?britishRajChild = ?politicianChild)

  # Return the father of this matched person
  ?father dbo:child ?britishRajChild .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
976,70,test,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the person born as the birth name of Naci Bostancı and office of the leader, that is a politician, of Grand National Assembly of Turkey.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?v6 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v6 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v3 . ?v6 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayorOffice ?partyReference ?naciBostanciOffice ?assemblyLeaderOffice
WHERE {
  # Mayor who is Turkish
  ?mayor a dbo:Mayor ;
         dbo:nationality dbr:Turkey .
  
  # Millet İttifakı as the political party reference
  ?partyReference a dbo:PoliticalParty ;
                  rdfs:label ""Millet İttifakı""@en .

  # Office of Naci Bostancı
  ?naciBostanci a dbo:Person ;
                foaf:name ""Naci Bostancı"" ;
                dbo:nationality dbr:Turkey .
  ?naciBostanciOffice dbo:officeHolder ?naciBostanci .

  # Leader of Grand National Assembly of Turkey
  ?assemblyLeader a dbo:Politician ;
                  dbo:leaderOf dbr:Grand_National_Assembly_of_Turkey .
  ?assemblyLeaderOffice dbo:officeHolder ?assemblyLeader .
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
976,60,test,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v4 <http://dbpedia.org/ontology/leader> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?kemalOffice ?naciOffice
WHERE {
  # Find Kemal Kılıçdaroğlu's office in an administration (organization)
  dbr:Kemal_Kılıçdaroğlu dbo:office ?kemalOffice .
  ?kemalOffice a dbo:AdministrativePost ;
               dbo:partOf ?administration .
  ?administration a dbo:Organization .

  # Find Naci Bostancı's office based on his birth name
  dbr:Naci_Bostancı dbo:birthName ""Naci Bostancı""@en ;
                    dbo:office ?naciOffice .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
507,65,test,"Give me the spouse of the person born as Anne Voase Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of Guy Ferland.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
    # Anne Voase Coates
    dbr:Anne_Voase_Coates a dbo:FilmDirector ;
        foaf:surname ""Coates"" ;
        dbo:birthday ""1918-06-28""^^xsd:date .

    # Movie directed by Anne Voase Coates that is both a movie and a work
    ?movie dbo:director dbr:Anne_Voase_Coates ;
           rdf:type dbo:Film, dbo:CreativeWork .

    # Person born on 1919-06-17
    ?person1 dbo:birthday ""1919-06-17""^^xsd:date .

    # Guy Ferland's profession
    dbr:Guy_Ferland dbo:profession ?profession .

    # Match the person with the same profession as Guy Ferland
    ?person1 dbo:profession ?profession .

    # Find spouse of Anne Voase Coates
    dbr:Anne_Voase_Coates foaf:mbox ?email ;
        foaf:surname ""Coates"" .
    
    OPTIONAL {
        ?spouse dbo:spouse dbr:Anne_Voase_Coates .
    }
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
453,9,test,"Give me the religion of the birth place, that is a country, of William Denning and religion of the author, that is a cardinal and a cleric, of Apologia Pro Vita Sua.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cardinal>. <http://dbpedia.org/resource/William_Denning> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Apologia_Pro_Vita_Sua> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://dbpedia.org/ontology/religion> ?result . ?v3 <http://dbpedia.org/ontology/religion> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?denningReligion ?authorReligion WHERE {
  # Part 1: William Denning's birthplace religion
  ?denning dbo:birthPlace ?birthPlace .
  FILTER (isLiteral(?birthPlace) && regex(str(?birthPlace), ""Country"", ""i""))
  OPTIONAL { ?birthPlace dbp:religion ?denningReligion . }

  # Part 2: Author of ""Apologia Pro Vita Sua"" who is a cardinal and cleric
  dbr:Apologia_Pro_Vita_Sua dbo:author ?author .
  ?author dbo:title ""Cardinal""@en .
  ?author dbo:title ""Cleric""@en .
  OPTIONAL { ?author dbp:religion ?authorReligion . }
}
```

This query does the following:
- Uses `dbo:birthPlace` to find William Denning's birthplace and checks if it is a country.
- Retrieves the religion of that country using `dbp:religion`.
- Identifies the author of ""Apologia Pro Vita Sua"" and ensures they are both a cardinal and a cleric.
- Retrieves the religion of this author.",4,7,5,2,2,2,2,9,0,0,1,0,0.0,0
507,71,test,"Give me the professional in the profession of the person born on 1966-02-18 and spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ?v8 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v7 <http://dbpedia.org/property/occupation> ?v8 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/property/starring> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Step 1: Find the person born on 1966-02-18
  ?person1 dbp:birthday ""1966-02-18""^^xsd:date .
  
  # Step 2: Find their spouse
  ?spouse1 dbo:spouse ?person1 .

  # Step 3: Identify Anne V. Coates by her birth name and find her spouse
  ?anne dbr:Anne_V._Coates .
  ?anne dbp:birthday ""1919-06-17""^^xsd:date .
  ?spouse2 dbo:spouse ?anne .

  # Step 4: Find the director of a movie directed by the person born on 1919-06-17
  ?director1 dbr:Person_with_birth_date_1919-06-17 .
  ?movie dbo:director ?director1 ;
         a dbo:Film .

  # Step 5: Ensure the spouse from step 2 is involved in the profession related to the movie
  ?spouse1 dbo:profession ?professional .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
41,26,test,"Give me the party of the work, that is an office holder, of yes and party of Declan Costello and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/author> ""yes""@en . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyYes ?partyDeclanCostello ?partyLeader2005 WHERE {
  # Find the party of ""Yes""
  OPTIONAL { 
    ?yes a dbo:OfficeHolder ;
         foaf:name ""Yes"" ;
         dbo:affiliation ?partyYes .
  }

  # Find the party of Declan Costello
  OPTIONAL { 
    ?declanCostello a dbo:OfficeHolder ;
                    foaf:name ""Declan Costello"" ;
                    dbo:affiliation ?partyDeclanCostello .
  }
  
  # Find the leader of the 2005 Castlereagh Borough Council election and their party
  {
    ?leader a dbo:OfficeHolder ;
            dbo:electedAs dbr:2005_Castlereagh_Borough_Council_election ;
            foaf:name ?leaderName .
    OPTIONAL { 
      ?leader dbo:affiliation ?partyLeader2005 .
    }
  }

}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
47,61,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award1Office ?award2Office WHERE {
  # Find awards in India and their awardees' offices
  ?award1 dbo:country dbr:India .
  ?award1 dbo:recipient ?person1 .
  ?person1 dbo:office ?award1Office .

  # Find awards associated with Mantu Ghosh and their awardees' offices
  ?award2 dbo:recipient dbr:Mantu_Ghosh .
  ?award2 dbo:recipient ?person2 .
  ?person2 dbo:office ?award2Office .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
987,63,test,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and entity in the region, that is a country, of Central European Time and birth place of the actor of All for Free.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  # Dado Pršo and his band
  dbr:Dado_Pršo dbo:memberOf ?band .
  
  # Band is an artist and a musical artist
  ?band rdf:type dbo:Band ;
        rdf:type dbo:MusicalArtist .

  # Region of the band in Central European Time
  ?region dbp:timeZone ""Central European Time"" .
  ?band dbo:originPlace ?region .

  # Actor of ""All for Free""
  ?actor dbo:film dbr:All_for_Free ;
         dbo:birthPlace ?birthPlace .

  # Ensure the actor is related to Dado Pršo's band
  ?actor dbo:memberOf ?band .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
216,24,test,Give me the administration of the designer of Woolfe: The Red Hood Diaries and party of the awardee of Australian Defence Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?designerAdministration ?awardeeParty
WHERE {
  # Find the designer of ""Woolfe: The Red Hood Diaries""
  ?game dbo:creator ?designer .
  FILTER(STRSTARTS(STR(?game), STR(dbr:Woolfe:_The_Red_Hood_Diaries)))

  # Get the administration related to the designer
  OPTIONAL {
    ?designer dbo:officeHolder ?position .
    ?position dbo:headOfStateOrGovernment ?administration .
    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", STR(?administration))) AS ?designerAdministration)
  }

  # Find awardees of the Australian Defence Medal
  OPTIONAL {
    ?person dbo:awardReceived dbr:Australian_Defence_Medal .
    
    # Get the political party affiliation of the awardee
    ?person dbo:memberOfPoliticalParty ?party .
    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", STR(?party))) AS ?awardeeParty)
  }
}
```

This query does the following:
- Identifies the designer of ""Woolfe: The Red Hood Diaries"" using DBpedia's resource for the game.
- Attempts to find any political office held by the designer and the administration they were part of.
- Searches for individuals who have received the Australian Defence Medal.
- Retrieves the political party affiliation of these awardees.

Note that this query assumes certain relationships exist in DBpedia, which may not always be complete or accurate. Adjustments might be necessary based on actual data availability.",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
124,71,test,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/ontology/battle> ?v8 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Step 1: Identify the person born on 1850-06-24
  ?person dbo:birthDate ""1850-06-24""^^xsd:date ;
          dbo:award dbr:British_South_Africa_Company_Medal .

  # Step 2: Find the war related to this person
  ?war dbo:participant ?person ;
       a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Step 3: Determine the military force of that war
  ?force dbo:participatesIn ?war ;
         a dbo:MilitaryForce .

  # Step 4: Identify 'A' Battery, Royal Australian Artillery
  dbr:A_Battery,_Royal_Australian_Artillery 
      dbo:militaryUnitOf ?australianReference ;
      a dbo:MilitaryUnit, dbo:Organisation .

  # Step 5: Find the reference associated with this battery
  ?australianReference 
      a dbo:SocietalEvent, dbo:MilitaryConflict ;
      dbo:country dbr:Australia .

  # Step 6: Determine the commander of this reference
  ?australianReference dbo:commander ?commander .
}
```",9,19,10,3,3,3,3,71,0,0,9,0,0.0,0
935,20,test,"Give me the headquarter of the office of the native of Balochistan, Pakistan and death place of the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/location> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/property/office> ?v5 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarter ?deathPlace WHERE {
  # Find an office related to a native of Balochistan, Pakistan
  ?office dbo:nativeCountry dbr:Pakistan ;
          dbo:nativeRegion dbr:Balochistan ;
          dbo:headquarters ?headquarter .

  # Find an award associated with Syed Sohail Hussain Naqvi
  ?syedNaqvi dbo:award ?award .
  
  # Find another awardee of the same award and their death place
  ?otherAwardee dbo:award ?award ;
                dbo:deathPlace ?deathPlace .
}
```

This query assumes that there are properties like `nativeCountry`, `nativeRegion`, `headquarters`, `award`, and `deathPlace` available in DBpedia for the relevant entities. Adjustments might be necessary based on actual data availability.",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
122,9,test,"Give me the band of the reference, that is a musical artist and an artist, to Gift of Gab and band member of the band of Gift of Gab (rapper).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Gift of Gab""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?bandLabel WHERE {
  # Find Gift of Gab and his associated band
  VALUES ?giftOfGab { dbr:Gift_of_Gab }
  
  ?giftOfGab dbo:memberOfBand ?band .
  
  # Ensure the band is both a musical artist and an artist
  ?band rdf:type dbo:MusicalArtist ;
        rdf:type dbo:Artist .

  # Get labels for better readability
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",4,6,5,2,2,2,2,9,0,0,3,0,0.0,0
987,66,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of Šako Polumenta and birth place of the actor of All for Free.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/timeZone> ?v5 . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInRegion WHERE {
  # Step 1: Find the time zone of Canicosa de la Sierra
  ?canicosa dbo:timeZone ?timezone .

  FILTER (str(?canicosa) = ""Canicosa_de_la_Sierra"")

  # Step 2: Identify sports events in that time zone
  ?sportsEvent dbo:timeZone ?timezone .
  
  # Step 3: Determine the region/country of these sports events
  ?sportsEvent dbo:location ?location .
  ?location dbo:country ?entityInRegion .

  FILTER (dbo:SportsEvent(?sportsEvent))

  # Step 4: Identify Šako Polumenta's band and its birthplace
  ?band dbo:member ?sakoPolumenta ;
        dbo:birthPlace ?bandBirthPlace .
  
  ?sakoPolumenta foaf:name ""Šako Polumenta"" .

  # Step 5: Find the actor of ""All for Free"" and their birthplace
  ?actor dbo:film dbr:All_for_Free ;
         dbo:birthPlace ?actorBirthPlace .

  FILTER (?bandBirthPlace = ?actorBirthPlace)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
976,68,test,"Give me the office of the person born as Mehmet Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v6 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v6 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/ontology/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeBostanci ?officeKilicdarogluLeader ?mayorMilletIttifakiOffice
WHERE {
  # Office of Mehmet Naci Bostancı
  dbr:Mehmet_Naci_Bostancı dbo:office ?officeBostanci .

  # Administration led by Kemal Kılıçdaroğlu and its leader's office
  dbr:Kemal_Kılıçdaroğlu dbo:leaderOf ?administration .
  ?administration dbo:leader ?leader .
  ?leader dbo:office ?officeKilicdarogluLeader .

  # Mayor associated with Millet İttifakı
  dbr:Millet_İttifakı dbo:mayor ?mayor .
  ?mayor dbo:office ?mayorMilletIttifakiOffice .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
508,19,test,"Give me the birthplace of the commander, that is a politician, in 1939–1940 Winter Offensive and birthplace of the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace1 ?birthPlace2 WHERE {
  # Part 1: Commander in the 1939–1940 Winter Offensive
  ?person1 a dbo:Person ;
           dbo:occupation dbr:Military_person ;
           dbo:birthPlace ?birthPlace1 .
  
  ?person1 dbo:wikiPageDisambiguates ?disambiguation1 .
  ?disambiguation1 rdfs:label ""1939–1940 Winter Offensive""@en .

  # Part 2: Saudi Commander in the war involving Hu Yukun
  ?person2 a dbo:Person ;
           dbo:nationality dbr:Saudi_Arabia ;
           dbo:occupation dbr:Military_person ;
           dbo:birthPlace ?birthPlace2 .
  
  ?person2 dbo:wikiPageDisambiguates ?disambiguation2 .
  ?disambiguation2 rdfs:label ""Hu Yukun""@en .

}
```",5,9,6,3,2,3,2,20,0,0,3,0,0.0,0
507,63,test,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and professional in the profession of Guy Ferland and spouse of the person born as the birth name of Anne V. Coates.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://dbpedia.org/ontology/director> ?result . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?director WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Beryl_Reid ;
         dbo:director ?director .

  ?director dbo:profession dbr:Actor ; # Assuming the director is also an actor
            foaf:mbox ?email . # To ensure we have a unique identifier

  ?spouse foaf:name ""Anne V. Coates""@en ;
          dbo:birthName ""Anne V. Coates"" .
  
  ?director dbo:spouse ?spouse .

  ?actor a dbo:Actor ;
         foaf:name ""Guy Ferland""@en .
  
  ?director dbo:profession ?actorProfession .
  FILTER (?actorProfession = dbr:Actor)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
645,67,test,"Give me the commander in Battle of Jarama and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Step 1: Identify the native of Restoration (Spain) who is a president and politician.
  ?person dbo:nationality dbr:Restoration_(Spain);
          rdf:type dbo:Politician;
          dbo:officeHeld dbr:President_of_Spain.

  # Step 2: Find the commander in the Battle of Jarama associated with this person.
  ?battle dbo:event dbr:Battle_of_Jarama;
          dbo:commander ?commander.
  
  # Ensure the commander is linked to the identified person through leadership or agency.
  ?office dbo:leader ?person;
          rdf:type dbo:GovernmentAgency.
  
  # Step 3: Determine the military force involved in the Battle of Jarama.
  ?militaryForce dbo:participatedIn ?battle.

}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
507,60,test,Give me the spouse of the person born as the birth name of Anne V. Coates and professional in the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Step 1: Get Anne V. Coates' birth name
  dbr:Anne_V._Coates dbo:birthName ?birthName .

  # Step 2: Find the profession of the person born on 1966-02-18
  ?person dbo:birthDate ""1966-02-18""^^xsd:date ;
          dbo:profession ?profession .

  # Step 3: Find a person with Anne V. Coates' birth name and the identified profession
  ?targetPerson foaf:name ?birthName ;
                dbo:profession ?profession .

  # Step 4: Get the spouse of that person
  ?targetPerson dbo:spouse ?spouse .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
645,66,test,"Give me the commander in the force of Carlos Asensio Cabanillas and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/ontology/battle> ?v6 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Carlos Asensio Cabanillas and his commander in a military force
  ?person1 rdfs:label ""Carlos Asensio Cabanillas""@en .
  ?person1 dbo:militaryCommander ?commander .

  # Francisco Largo Caballero's involvement in a military conflict
  ?person2 rdfs:label ""Francisco Largo Caballero""@en .
  ?conflict dbo:participant ?person2 ;
            rdf:type dbo:MilitaryConflict .

  # Restoration (Spain) and associated organization or government agency
  ?organization dbo:country dbr:Spain ;
                dbo:era dbr:Restoration_(Spain) ;
                rdf:type/(dbo:GovernmentAgency|dbo:Organization) .
  
  # Linking the commander to the organization
  ?commander dbo:officeHolder ?organization .
}
```",7,12,8,3,3,3,3,71,0,0,2,0,0.0,0
465,59,test,"Give me the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
    # Step 1: Find the parent of Ercole II d'Este
    ?ercole2 dbo:parent ?parentErcole2 .
    
    FILTER(STR(?ercole2) = ""Ercole II d'Este"")

    # Step 2: Find a child of this parent
    ?childParentErcole2 dbo:parent ?parentErcole2 .

    # Step 3: Find the spouse of this child who is royalty
    ?spouse dbp:spouse ?childParentErcole2 .
    ?spouse rdf:type dbo:Monarch .

    # Step 4: Identify the parent of Elizabeth of Austria (1526–1545)
    ?elizabeth dbo:parent ?parentElizabeth .
    
    FILTER(STR(?elizabeth) = ""Elizabeth of Austria (1526–1545)"")

    # Step 5: Find the successor of this spouse
    ?successor dbp:predecessor ?spouse .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
917,63,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of Kamehameha IV and child of the father of Keʻelikōlani.",SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Mayor of Hawaiian Kingdom
  ?mayor a dbo:Mayor ;
         foaf:name ""John Young""@en .

  # Royalty child of the mayor
  ?child1 dbo:parent ?mayor ;
          dbo:royalTitle ?title .

  # Father of Kamehameha IV
  ?fatherKamehamehaIV dbo:spouse dbr:Queen_Kamāmalu ;
                      dbo:child dbr:King_Kamehameha_IV .

  # Child of the father of Kamehameha IV
  ?child2 dbo:parent ?fatherKamehamehaIV .

  # Father of Keʻelikōlani
  ?fatherKeelikolani dbo:spouse dbr:Liliuokalani ;
                    dbo:child dbr:Princess_Keʻelikōlani .

  # Child of the father of Keʻelikōlani
  ?child3 dbo:parent ?fatherKeelikolani .

  # The child must be both ?child2 and ?child3
  FILTER (?child1 = ?child2 && ?child1 = ?child3)

  # Find the parent of this child
  ?parent dbo:child ?child1 .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
917,69,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of the child, that is a royalty, of Kamehameha III and child of the father of Keʻelikōlani.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfRoyalChildMayor ?parentOfRoyalChildKamehamehaIII WHERE {
  # Mayor of Hawaiian Kingdom and their royal child
  ?mayor a dbo:Mayor ;
         dbo:country dbr:Hawaiian_Kingdom .
  
  ?royalChildMayor dbo:childOf ?mayor ;
                   a dbo:Monarch .

  ?parentOfRoyalChildMayor dbo:parentOf ?royalChildMayor .

  # Kamehameha III and their royal child
  ?kamehamehaIII dbr:Kamehameha_III .
  
  ?fatherOfRoyalChildKamehamehaIII dbo:childOf ?kamehamehaIII ;
                                   a dbo:Monarch .

  ?royalChildKamehamehaIII dbo:childOf ?fatherOfRoyalChildKamehamehaIII ;
                           a dbo:Monarch .

  ?parentOfRoyalChildKamehamehaIII dbo:parentOf ?royalChildKamehamehaIII .

  # Father of Keʻelikōlani
  ?keelikolanisFather dbr:Keʻelikōlani ;
                     dbo:childOf ?fatherOfKeelikolanisFather .
  
  ?childOfKeelikolanisFather dbo:childOf ?keelikolanisFather .

  # Assuming the question implies finding a common parent or relationship
  FILTER(?parentOfRoyalChildMayor = ?parentOfRoyalChildKamehamehaIII)
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
573,64,test,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/governor> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # John Quincy Adams' work
  dbr:John_Quincy_Adams dbo:author dbr:Work_of_John_Quincy_Adams .
  
  # Author's parent who is a politician and office holder
  dbr:Author_of_Work_of_John_Quincy_Adams dbo:parent ?parent .
  ?parent rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Charlie Baker (Australian footballer) real name
  dbr:Charlie_Baker_(Australian_footballer) foaf:name ?realName .

  # Region associated with his administration where he was a person decedent
  ?administration dbo:region ?region .
  ?administration dbo:personDecedent dbr:Charlie_Baker_(Australian_footballer) .
  
  # Person decedent at Quincy, Massachusetts
  ?personDecedent dbo:placeOfBirth dbr:Quincy,_Massachusetts ;
                  dbo:deceasedAt ?quincyDeath .
  ?personDecedent dbo:administration ?administration .

  # Ensure the region matches
  FILTER(?region = ?quincyDeath)
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
645,59,test,"Give me the commander in the force of the commander in Siege of Madrid and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  ?siege dbo:type dbr:Military_conflict ;
        dbo:eventLocation dbr:Madrid ;
        dbo:commander ?commander .
  
  ?commander dbo:militaryService ?militaryForce .

  ?restoration dbo:type dbr:Political_period ;
               dbo:country dbr:Spain ;
               dbo:president ?native .

  ?native dbo:nationality dbr:Spain ;
          dbo:birthPlace ?place .

  FILTER EXISTS { ?siege dbo:date ?date . }
  FILTER EXISTS { ?restoration dbo:startYear ?startYear ; dbo:endYear ?endYear . }

  # Assuming the commander is native to the Restoration period
  OPTIONAL {
    ?commander dbo:birthPlace ?place .
    FILTER (?startYear <= ?commanderBirthYear && ?commanderBirthYear <= ?endYear)
  }
}
```",6,11,7,3,2,3,3,71,0,0,53,0,0.0,0
839,58,test,"Give me the band of the band, that is a musical artist, of the professional in Musician and band of the member of Böhse Onkelz and band of Kevin Russell (musician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v5 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfKevinRussell ?memberBand
WHERE {
  # Kevin Russell and his band
  dbr:Kevin_Russell a dbo:Musician ;
                    dbo:associatedBand ?bandOfKevinRussell .

  # Members of Böhse Onkelz and their bands
  ?böhseOnkelzMember dbo:memberOf dbr:Böhse_Onkelz ;
                     dbo:associatedBand ?memberBand .
}
```

This query does the following:
- It identifies Kevin Russell as a musician and retrieves his associated band.
- It finds members of Böhse Onkelz and their associated bands.

Note: This query assumes that DBpedia has structured data for these entities. The actual results depend on the availability and accuracy of this data in DBpedia.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
965,57,test,"Give me the spouse of Prince Louis of Battenberg and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v4 <http://dbpedia.org/property/father> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Find the politician born on 1854-05-24
  ?politician dbo:birthDate ""1854-05-24""^^xsd:date ;
              a dbo:Politician .

  # Step 2: Identify their child who is Prince George of Battenberg (a noble)
  ?child dbo:parent ?politician ;
         dbp:name ""Prince George of Battenberg""@en ;
         a dbo:Noble .

  # Step 3: Find the spouse of Prince Louis of Battenberg
  ?princeLouis dbr:Prince_Louis_of_Battenberg ;
               dbo:spouse ?spouse .

  # Step 4: Ensure this spouse is also the parent of a royalty
  ?royalty dbo:parent ?spouse ;
           a dbo:Royalty .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
445,64,test,"Give me the death place of Patrick Moore and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . },"# Query 1: Death place of Patrick Moore
SELECT ?deathPlace WHERE {
    ?person dbo:name ""Patrick Moore""@en .
    ?person dbo:dateOfBirth ?dob .
    ?person dbo:dateOfDeath ?dod .
    ?person dbo:placeOfBirth ?birthPlace .
    ?person dbo:deathPlace ?deathPlace .
}

UNION

# Query 2: Country of residence for an athlete from Great Britain
SELECT ?country WHERE {
    ?athlete dbo:nationality dbr:United_Kingdom .
    ?athlete dbo:sport ?sport .
    ?athlete dbo:residence ?residence .
    ?residence geo:hasCountry ?country .
}

UNION

# Query 3: Entity in the award of a commander in the Battle of Saint-Mihiel
SELECT ?award WHERE {
    ?battle dbr:Battle_of_Saint-Mihiel .
    ?commander dbo:commanded ?unit .
    ?commander dbo:participatedIn ?battle .
    ?commander dbo:receivedAward ?award .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
573,60,test,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/property/governor> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?decedent WHERE {
  # Step 1: Get Charlie Baker's real name
  dbr:Charlie_Baker_(Australian_footballer) dbo:realName ?charlieRealName .

  # Step 2: Find the region associated with Charlie Baker's real name
  ?region dbp:name ?charlieRealName .
  
  # Step 3: Get a work by John Quincy Adams and find an author who is a politician and office holder
  dbr:John_Quincy_Adams dbo:work ?work .
  ?author dbo:authorOf ?work ;
          rdf:type dbo:Politician ;
          dbo:officeHolder ?office .

  # Step 4: Find the person decedent at the administration of that region
  ?decedent dbo:administeredBy ?region ;
            rdf:type dbo:Person .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
926,61,test,"Give me the successor of the child of the spouse of Şermi Kadın and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successor WHERE {
  # Step 1: Şermi Kadın's spouse
  ?şermikadin a dbo:Spouse ;
              dbo:spouse ?spouseOfŞermiKadın .

  # Step 2: Child of Şermi Kadın's spouse
  ?childOfSpouse dbr:Parent ?spouseOfŞermiKadın ;
                 a dbo:Child .

  # Step 3: Successor of the child of Şermi Kadın's spouse
  ?successor dbr:PredecessorOrSuccessor ?childOfSpouse .

  # Step 4: Beyhan Sultan's parent who is royalty
  dbr:Beyhan_Sultan dbo:parent ?royalParent ;
                    a dbo:Child .
  
  FILTER EXISTS { ?royalParent a dbo:RoyalFamilyMember }

  # Step 5: Father of Beyhan Sultan's royal parent
  ?fatherOfRoyalParent dbr:Parent ?royalParent .

  # Step 6: Child of the father who is royalty
  ?childOfFather dbr:Parent ?fatherOfRoyalParent ;
                 a dbo:Child .
  
  FILTER EXISTS { ?childOfFather a dbo:RoyalFamilyMember }

  # Ensure the successor and child of father are the same entity
  FILTER (?successor = ?childOfFather)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
582,60,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?result <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?teamNickname ?scientistResidence
WHERE {
  # Find Hajime Moriyasu's team and its nickname
  ?person a dbo:Person ;
          foaf:name ""Hajime Moriyasu""@en .
  ?person dbo:memberOf ?organization .
  ?organization dbo:nickname ?teamNickname .

  # Find Hirotaka Sugawara's residence as a scientist
  ?scientist a dbo:Scientist ;
             foaf:name ""Hirotaka Sugawara""@en .
  ?scientist dbo:residenceLocation ?location .
  ?location rdfs:label ?scientistResidence .
  
  FILTER (lang(?scientistResidence) = 'en')
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
459,27,test,"Give me the governor of the administration, that is a politician, of Brad Henry and governor of Oklahoma and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?governor
WHERE {
  # Find Brad Henry's governorship details
  dbr:Brad_Henry dbo:governmentRole [
    a dbo:Governor ;
    dbo:stateOrTerritory dbr:Oklahoma ;
    dbo:startDate ?startHenry ;
    dbo:endDate ?endHenry
  ] .

  # Find Kevin Stitt's birth name and current governorship details
  dbr:Kevin_Stitt dbo:birthName ?birthName .
  FILTER (str(?birthName) = ""Kevin Stitt"") .

  dbr:Kevin_Stitt dbo:governmentRole [
    a dbo:Governor ;
    dbo:stateOrTerritory dbr:Oklahoma ;
    dbo:startDate ?startStitt
  ] .

  # Ensure both are politicians
  FILTER EXISTS { dbr:Brad_Henry dbo:occupation dbp:Politician } .
  FILTER EXISTS { dbr:Kevin_Stitt dbo:occupation dbp:Politician } .

  # Kevin Stitt is the current governor of Oklahoma
  FILTER (YEAR(NOW()) >= YEAR(?startStitt) && (!BOUND(?endHenry) || YEAR(NOW()) <= YEAR(?endHenry)))
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
965,56,test,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of Louise Mountbatten and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Princess Victoria of Hesse and by Rhine
  dbr:Princess_Victoria_of_Hesse_and_by_Rhine dbo:spouse ?princeErnstLudwig .
  
  # Grand Duke Ernst Ludwig of Hesse
  ?princeErnstLudwig a dbo:Person ;
                   rdfs:label ""Grand Duke Ernst Ludwig of Hesse""@en ;
                   dbo:spouse ?spouse .

  FILTER (lang(?spouse) = 'en')
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
773,66,test,"Give me the parent of the successor of Charles the Bald and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of Charles the Fat.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v6 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfSuccessor ?finalParent
WHERE {
  # Step 1: Charles the Bald and his successor
  dbr:Charles_the_Bald dbo:successor ?successor .
  
  # Step 2: Parent of the successor
  ?successor dbo:parent ?parentOfSuccessor .

  # Step 3: Carloman of Bavaria's father who is an office holder and royalty
  dbr:Carloman_of_Bavaria dbo:father ?fatherOfCarloman .
  ?fatherOfCarloman a dbo:Monarch ;
                   dbo:officeHolder ?office .

  # Step 4: Spouse of the father of Carloman of Bavaria
  ?fatherOfCarloman dbo:spouse ?spouse .

  # Step 5: Child of the spouse that is royalty
  ?spouse dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .

  # Step 6: Parent of this royal child
  ?royalChild dbo:parent ?finalParent .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
216,69,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v7 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://dbpedia.org/ontology/coach> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v3 <http://dbpedia.org/ontology/team> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team WHERE {
  # Find Pavel Vezhinov's death date
  VALUES ?vezhinovDeathDate { 
    SELECT ?deathDate WHERE { 
      dbr:Pavel_Vezhinov dbo:dateOfDeath ?deathDate .
    }
  }

  # Identify individuals who are sports managers, soccer managers, and soccer players
  ?person a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerCoach .

  # Check if the person was born on Pavel Vezhinov's death date
  ?person dbo:dateOfBirth ?birthDate .
  FILTER (?birthDate = ?vezhinovDeathDate)

  # Determine if this person was a player in the coach of Bosnia and Herzegovina national under-18 football team
  ?bosniaCoach a dbo:SoccerCoach ;
               dbp:team dbr:Bosnia_and_Herzegovina_national_under-18_football_team .
  ?person dbo:playerInTeam ?bosniaCoach .

  # Check if they were also a player in the coach of Croatia U21
  ?croatiaU21Coach a dbo:SoccerCoach ;
                   dbp:team dbr:Croatia_U21_national_football_team .
  ?person dbo:playerInTeam ?croatiaU21Coach .

  # Get the team associated with this person
  ?person dbo:memberOfTeam ?team .
}",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
465,62,test,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Renée of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
    # Step 1: Parent of Elizabeth of Austria
    ?elizabeth a dbr:Elizabeth_of_Austria_(1526–1545) .
    ?parent dbo:child ?elizabeth .

    # Step 2: Child of the parent who is royalty
    ?royalty dbo:parent ?parent ;
             a dbo:Monarch .

    # Step 3: Successor of Renée of France
    ?renée a dbr:Renée_of_France .
    ?successorOfRenée dbo:succeededBy ?renée .

    # Step 4: Parent of Ercole II d'Este and their child
    ?ercoleII a dbr:Ercole_II_d%27Este,_Duke_of_Ferrara .
    ?parentErcole dbo:child ?ercoleII .
    ?childOfParentErcole dbo:parent ?parentErcole .

    # Step 5: Successor of the child from step 4
    ?successorChild dbo:succeededBy ?childOfParentErcole .

    # Ensure the royalty is the successor identified in steps 3 and 5
    FILTER (?royalty = ?successorOfRenée && ?royalty = ?successorChild)

    # Find the spouse of the royalty
    ?royalty dbo:spouse ?spouse .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
216,64,test,"Give me the player in Mario Ivanković and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?playerInMarioIvankovic ?teamOfPersonBorn ?coachOfCroatiaU21
WHERE {
  # Mario Ivanković's team
  dbr:Mario_Ivanković dbo:memberTeam ?playerInMarioIvankovic .
  
  # Person born who is a sports manager, soccer manager, and player related to Pavel Vezhinov's death
  ?person dbp:sportManager ""true""^^xsd:boolean ;
          dbp:soccerManager ""true""^^xsd:boolean ;
          dbp:soccerPlayer ""true""^^xsd:boolean .
  
  # Pavel Vezhinov's death event
  dbr:Pavel_Vezhinov dbo:death ?deathEvent .
  ?person dbo:relatedTo ?deathEvent .

  # Team of the person born
  ?person dbo:memberTeam ?teamOfPersonBorn .

  # Coach of Croatia U21
  dbr:Croatia_national_under-21_football_team dbo:coach ?coachOfCroatiaU21 .
  
  # Ensure the coach is an organization and a soccer club
  ?coachOfCroatiaU21 rdf:type dbo:SoccerClub ;
                     rdf:type dbo:Organization .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
933,70,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of the professional in Musician and band of the band of Alan Warner (musician).","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/property/birthName> ?v6 . ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName ?birthName WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1947-04-21""^^xsd:date ;
          dbo:birthName ?birthName .
  
  ?band dbo:bandMember ?person ;
        a dbo:Band, dbo:Organization .

  ?band rdfs:label ?bandName .
  
  FILTER (lang(?bandName) = 'en')
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
573,68,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of the author, that is a politician and an office holder, of Exchequer Standards.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v7 . ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?decedentAtResidence ?decedentAtAministration
WHERE {
  # Charlie Baker (Australian footballer)
  ?charlieBaker a dbo:AustralianFootballer ;
                foaf:name ""Charlie Baker"" .

  # Real name of Charlie Baker
  ?realName dbp:givenName ?firstName ;
            dbp:familyName ?lastName .

  FILTER (?charlieBaker = ?realName)

  # Author of Exchequer Standards who is a politician and office holder
  ?author dbo:wikiPageWikiLink dbr:Exchequer_Standards ;
          rdf:type dbo:Politician, dbo:OfficeHolder ;
          dbp:nationality ""American"" .

  # American professional in Politician
  ?americanProfessional rdf:type dbo:Politician ;
                       dbp:nationality ""American"" .
  
  # Residence of the American professional that is a settlement
  ?residence dbo:resident ?americanProfessional ;
             a dbo:Settlement .

  # Decedent at the residence
  ?decedentAtResidence dbo:placeOfDeath ?residence .

  # Administration related to Charlie Baker's real name, which is a region
  ?administration dbo:head ?realName ;
                  a dbo:Region .

  # Decedent at the administration
  ?decedentAtAministration dbo:placeOfDeath ?administration .

  # Parent of the author (who is also a politician and office holder)
  ?parent dbp:child ?author .
}
```",8,13,9,3,3,3,3,71,0,0,2,0,0.0,0
645,68,test,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and commander in the force of the commander in Siege of Madrid.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify the military force involved in the Siege of Madrid
  ?siegeEvent a dbo:MilitaryConflict ;
              dbo:participatingMilitaryUnit ?militaryForce .

  # Link to the Restoration period and Camilo Menéndez Tolosa
  ?restorationPeriod dbr:Restoration_(Spain) .
  ?camiloMenendezTolosa dbr:Camilo_Menéndez_Tolosa ;
                        dbo:leaderOf ?office ;
                        dbo:nationality dbr:Spain .

  # Identify the president during the Restoration period
  ?president a dbo:President ;
             dbo:nationality dbr:Spain ;
             dbo:timePeriod ?restorationPeriod .

  # Link Camilo Menéndez Tolosa to his role in the Siege of Madrid
  ?camiloMenendezTolosa dbo:commanderIn ?siegeEvent .

  # Ensure the military force is linked to both the siege and Camilo Menéndez Tolosa
  ?militaryForce dbo:commandedBy ?camiloMenendezTolosa .
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
465,70,test,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v7 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?successor WHERE {
  # Alfonso I d'Este's child
  ?alfonsoChild dbo:parent dbr:Alfonso_I_d%27Este ;
                a dbo:Person .

  # Spouse of Alfonso's child
  ?spouse dbo:spouse ?alfonsoChild ;
          a dbo:Person .

  # Successor of the spouse who is royalty
  ?successor1 dbo:successor ?spouse ;
              a dbo:Monarch .

  # Elizabeth of Austria's parent
  ?elizabethParent dbo:child dbr:Elizabeth_of_Austria_(1526–1545) ;
                   a dbo:Person .

  # Child of Elizabeth's parent
  ?elizabethChild dbo:parent ?elizabethParent ;
                  a dbo:Person .

  # Successor of the child who is royalty
  ?successor2 dbo:successor ?elizabethChild ;
              a dbo:Monarch .

  # Charles Orlando, Dauphin of France's parent
  ?charlesParent dbo:child dbr:Charles_Orlando,_Dauphin_of_France ;
                 a dbo:Person .

  # Child of Charles' parent
  ?charlesChild dbo:parent ?charlesParent ;
                a dbo:Person .

  # Successor of the child who is royalty
  ?successor3 dbo:successor ?charlesChild ;
              a dbo:Monarch .

  # Find common successor
  FILTER (?successor1 = ?successor2 && ?successor2 = ?successor3)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
965,58,test,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Prince Louis of Battenberg and his spouse
  dbr:Prince_Louis_of_Battenberg dbo:spouse ?spouse .
  
  # Child who is royalty
  ?child dbo:parent dbr:Prince_Louis_of_Battenberg ;
         a dbo:Royal .

  # George Mountbatten, 2nd Marquess of Milford Haven
  dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven dbo:birthName ""George Mountbatten"" ;
                                                        dbo:parent dbr:Prince_Louis_of_Battenberg .

  # The parent we are looking for is Prince Louis himself
  ?parent = dbr:Prince_Louis_of_Battenberg .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
47,59,test,"Give me the office of the awardee of the award, that is an award, of Mantu Ghosh and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> ?v3 . ?v2 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeOfAwardee ?officeOfPolitician
WHERE {
  # Mantu Ghosh and his award
  ?mantuGhosh a dbo:Person ;
              foaf:name ""Mantu Ghosh"" .
  
  ?award dbo:recipient ?mantuGhosh ;
         a dbo:Award .

  ?awardeeOffice dbo:officeHolder ?mantuGhosh ;
                 dbo:officeName ?officeOfAwardee .

  # Operation Green Hunt and the politician
  ?operationGreenHunt a dbo:MilitaryOperation ;
                      foaf:name ""Operation Green Hunt"" .
  
  ?politician a dbo:Politician ;
              dbo:commanderInMilitaryOperation ?operationGreenHunt ;
              foaf:name ?name .

  ?adminOffice dbo:officeHolder ?politician ;
               dbo:officeName ?officeOfPolitician .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
791,58,test,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of Taira no Tokuko and predecessor of the child of Emperor Takakura.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Emperor Antoku and his father
  dbr:Emperor_Antoku dbo:father ?father .
  
  # Taira no Kiyomori's roles
  ?father a dbo:Monarch ;
          dbo:officeHolder true .

  # Spouse of Taira no Tokuko
  dbr:Taira_no_Tokuko dbo:spouse ?father .
  
  # Predecessor of Emperor Antoku (child of Emperor Takakura)
  dbr:Emperor_Antoku dbo:predecessor ?predecessor .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,8,test,Give me the artistic movement of Ella Cheever Thayer and claim to fame of the person born as Emily Katherine Jacques.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ella_Cheever_Thayer> <http://dbpedia.org/ontology/movement> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Emily Katherine Jacques""@en . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
# Query for Ella Cheever Thayer's Artistic Movement
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artisticMovement WHERE {
  dbr:Ella_Cheever_Thayer dbo:artisticPeriod ?artisticMovement .
}

# Query for Emily Katherine Jacques' Claim to Fame
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame WHERE {
  dbr:Emily_Katherine_Jacques dbo:claimNotability ?claimToFame .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
507,61,test,"Give me the professional in the profession of the person born on 1966-02-18 and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Find the person born on 1966-02-18
  ?person1 dbo:birthday ""1966-02-18""^^xsd:date ;
           dbo:profession ?profession .

  # Ensure this person is a director of a movie that is both a work and a movie
  ?movie dbo:director ?person1 ;
         rdf:type dbo:Film ;
         dbo:workExample ?work .
  
  # Find the person born on 1919-06-17
  ?person2 dbo:birthday ""1919-06-17""^^xsd:date .

  # Ensure this second person is involved in the same movie
  ?movie dbp:starring ?person2 .

  # Find a professional with the same profession as the first person
  ?professional dbo:profession ?profession .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
365,19,test,"Give me the spouse of the native, that is a politician, of the reference to Полтавская губерния and person born as the birth name of Symon Petliura.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find Symon Petliura's birth name and native place
  dbr:Symon_Petliura dbo:birthName ?birthName .
  dbr:Symon_Petliura dbo:nativePlace dbr:Poltava_Governorate .

  # Find a politician who is married to someone from Poltava Governorate
  ?person dbp:spouse ?spouse .
  ?person dbo:nationality dbr:Ukraine .
  ?spouse dbo:nativePlace dbr:Poltava_Governorate .
  ?spouse rdf:type dbo:Politician .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
47,66,test,"Give me the office of the awardee of Banga Bhushan and office of the awardee of the entity, that is an award, in India and office of the administration of Jagdeep Dhankhar.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bangaBhushanOffice ?indianAwardOffice ?jagdeepDhankharOffice
WHERE {
  # Banga Bhushan Awardee's office
  ?awardee dbo:award dbr:Banga_Bhushan_Award .
  ?awardee dbo:office ?bangaBhushanOffice .

  # Another award in India and its awardee's office
  ?indianAward dbo:country dbr:India .
  ?indianAwardee dbo:award ?indianAward .
  ?indianAwardee dbo:office ?indianAwardOffice .

  # Jagdeep Dhankhar's office
  dbr:Jagdeep_Dhankhar dbo:office ?jagdeepDhankharOffice .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
987,59,test,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandBirthPlace ?actorBirthPlace WHERE {
  # Find the band associated with Dado Prljaca
  ?person a dbo:Band ;
          dbo:member [dbo:member dbr:Dado_Prljaca] .
  
  # Get the birthplace of the band
  ?person dbo:birthPlace ?bandBirthPlace .

  # Find films featuring Emir Hadžihafizbegović
  ?film a dbo:Film ;
        dbo:starring dbr:Emir_Hadžihafizbegović .
  
  # Get actors from these films
  ?film dbo:starring ?actor .

  # Get the birthplace of the actor
  ?actor dbo:birthPlace ?actorBirthPlace .
}
```",6,10,7,3,2,3,3,71,0,0,4,0,0.0,0
582,64,test,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and player in Kazuaki Nagasawa.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence ?nickname WHERE {
  # Hirotaka Sugawara's residence
  OPTIONAL { 
    dbr:Hirotaka_Sugawara dbo:residence ?residence .
  }

  # Hajime Moriyasu's team nickname
  OPTIONAL {
    dbr:Hajime_Moriyasu dbo:nationalTeam dbr:Japan_national_football_team ;
                        dbo:teamName ?nickname .
  }
  
  # Kazuaki Nagasawa as a player in the same team
  OPTIONAL {
    dbr:Kazuaki_Nagasawa dbo:playsFor dbr:Japan_national_football_team .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
459,24,test,"Give me the governor of the administration, that is a politician, of Brad Henry and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/governor> ?result . ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor ?personBornAsKevinStitt
WHERE {
  # Find Brad Henry's administration and its governor
  dbr:Brad_Henry dbo:governmentHead ?administration .
  ?administration dbo:head ?governor .
  
  FILTER (isLiteral(?governor) && contains(str(?governor), ""politician""))

  # Find Kevin Stitt by his birth name
  dbr:Kevin_Stitt dbo:birthName ?birthName .
  ?person dbo:birthName ?birthName .
  BIND(dbr:Kevin_Stitt AS ?personBornAsKevinStitt)
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
645,70,test,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v1 <http://dbpedia.org/property/office> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?native dbo:nationality dbr:Spain ;
          dbo:occupation dbr:Politician ;
          dbo:officeTitle dbr:President .
  
  ?event dbo:type dbr:Military_Conflict ;
         dbo:eventRelatedTo ?militaryForce ;
         dbo:place dbr:Restoration_(Spain) .

  ?militaryForce dbo:commander dbr:Carlos_Asensio_Cabanillas ;
                 dbo:leader ?native .

  ?office dbo:head ?native ;
          a dbo:Government_Agency .
}
```",8,15,9,3,3,3,3,71,0,0,2,0,0.0,0
987,70,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/timeZone> ?v5 . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  # Step 1: Find the time zone of Canicosa de la Sierra
  ?place a dbo:Settlement ;
         rdfs:label ""Canicosa de la Sierra""@en .
  
  ?place dbo:timeZone ?timezone .

  # Step 2: Identify sports events associated with this time zone
  ?event dbo:location ?timezone ;
         a dbo:SportsEvent .

  # Step 3: Find the country of this sports event/time zone
  ?country dbo:location ?timezone ;
           a dbo:Country .

  # Step 4: Find films featuring Emir Hadžihafizbegović and his birthplace
  ?film dbo:starring dbr:Emir_Hadžihafizbegović .
  
  ?emir dbo:birthPlace ?emirBirthPlace .

  # Step 5: Find bands associated with Šako Polumenta and their birthplaces
  ?band dbo:member dbr:Šako_Polumenta ;
        a dbo:Band .

  ?sako dbo:birthPlace ?sakoBirthPlace .

  FILTER(?emirBirthPlace = ?sakoBirthPlace)
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
917,58,test,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and child of the father of Keʻelikōlani and parent of Albert Kamehameha.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?individual WHERE {
  # Kamehameha III's child who is royalty
  ?childKamehamehaIII dbo:parent dbr:Kamehameha_III ;
                     a dbo:Monarch .

  # Keʻelikōlani's father's child
  ?fatherKeelikolani dbo:child dbr:Keʻelikōlani .
  ?childFatherKeelikolani dbo:parent ?fatherKeelikolani .

  # Parent of Albert Kamehameha
  ?parentAlbert dbo:child dbr:Albert_Kamehameha .

  # Find the individual who satisfies all conditions
  FILTER (?childKamehamehaIII = ?childFatherKeelikolani && ?childFatherKeelikolani = ?parentAlbert)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
36,28,test,"Give me the actor of the claim to fame, that is a film, of Lepacious Bose and person born in the birth year of Deanne Bray and person born as the birth name of Ayo Makun.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthYear> ?v3 . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v1 . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v3 . ?v1 <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Step 1: Find Lepa Bose's claim to fame (film)
  ?lepabose dbo:profession dbr:Actor .
  ?lepabose dbo:film ?film .

  # Step 2: Get Deanne Bray's birth year
  ?deann Bray dbo:birthYear ?birthYearBray .

  # Step 3: Get Ayo Makun's birth name
  ?ayoMakun dbp:birthName ?birthNameAyo .

  # Step 4: Find people born in the same year as Deanne Bray and with the same birth name as Ayo Makun
  ?person dbo:birthYear ?birthYearBray .
  ?person dbp:birthName ?birthNameAyo .

  # Step 5: Get actors from Lepa Bose's film
  ?film dbo:actor ?actor .
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
606,20,test,"Give me the birthplace of the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers and figure known as the nickname of the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> ?v4 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/property/nickname> ""Barb City""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:almaMater dbr:University_of_Pennsylvania .
  ?person foaf:nick ""Barb City"" .
  ?person dbo:birthPlace ?birthPlace .
}
```

This query does the following:
- Filters individuals who are alumni of the University of Pennsylvania.
- Checks if they have a nickname ""Barb City.""
- Retrieves their birthplace.",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
47,67,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of the award, that is an award, of Mantu Ghosh and office of Suvendu Adhikari.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?awardee ?office
WHERE {
  # Find awards in India
  ?award dbo:country dbr:India .
  
  # Find awardees of these awards
  ?award dbo:recipient ?awardee .

  OPTIONAL {
    # Get the office held by the awardee
    ?awardee dbo:office ?office .
  }

  UNION

  # Specific case for Mantu Ghosh
  ?ghoshAward dbo:recipient dbr:Mantu_Ghosh .
  ?ghoshAward dbo:country dbr:India .
  
  OPTIONAL {
    ?ghoshAward dbo:recipient dbr:Mantu_Ghosh ;
                dbo:office ?ghoshOffice .
  }

  UNION

  # Specific case for Suvendu Adhikari
  ?adhikariAward dbo:recipient dbr:Suvendu_Adhikari .
  
  OPTIONAL {
    ?adhikariAward dbo:recipient dbr:Suvendu_Adhikari ;
                   dbo:office ?adhikariOffice .
  }
}
ORDER BY ?award",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
573,65,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at the administration, that is a region, of Charlie Baker and parent of the author, that is a politician and an office holder, of Exchequer Standards.","SELECT ?result WHERE { <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v4 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentAtResidence ?personDecedentAtAministration ?parentOfAuthor
WHERE {
  # Step 1: Charlie Baker's administration and person decedent at this administration
  dbr:Charlie_Baker dbo:officeHolder dbr:Governor_of_Massachusetts .
  dbr:Massachusetts dbo:administrativeRegion dbr:United_States .

  ?administration dbo:administrativeRegion dbr:Massachusetts ;
                  dbo:personDecedentAtAdministration ?personDecedentAtAministration .

  # Step 2: Professional American in Politician and person decedent at their residence
  ?professional dbo:nationality dbr:United_States ;
                dbo:profession dbr:Politician .
  ?residence dbo:settlement ?professional ;
             dbo:personDecedentAtResidence ?personDecedentAtResidence .

  # Step 3: Author of Exchequer Standards and their parent
  ?author dbo:occupation dbr:Politician ;
          dbo:officeHolder ?office ;
          dbo:writtenWork dbr:Exchequer_Standards .
  ?parent dbo:child ?author .
  
  # Linking the person decedent at administration to the professional's residence
  FILTER(?personDecedentAtAministration = ?personDecedentAtResidence)

  # Linking the parent of the author to the person decedent at administration
  FILTER(?parent = ?personDecedentAtAministration)
}",7,12,8,3,3,3,3,71,0,0,2,0,0.0,0
965,61,test,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfRoyalChild WHERE {
  # Step 1: Find the politician born on 1854-05-24
  ?politician dbo:birthDate ""1854-05-24""^^xsd:date ;
              a dbo:Politician .

  # Step 2: Find the child of this politician who is royalty
  ?royalChild dbo:parent dbr:?politician ;
              a dbo:RoyalFamilyMember .

  # Step 3: Determine the parent of this royal child
  ?parentOfRoyalChild dbo:child ?royalChild .

  # Step 4: Identify George Mountbatten, 2nd Marquess of Milford Haven and find their noble parent
  ?noblePerson dbp:birthName ""George Mountbatten, 2nd Marquess of Milford Haven"" ;
               a dbo:Noble .
  
  ?parentOfNoble dbr:?noblePerson ;
                  a dbo:Parent .

  # Ensure the same person is found in both contexts
  FILTER(?parentOfRoyalChild = ?parentOfNoble)
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
465,63,test,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Anne of Brittany's royal children
  ?anneChild dbo:parent dbr:Anne_of_Brittany ;
             a dbo:Monarch .

  # Ercole II d'Este's parent's other child and their successor
  ?ercoleParent dbo:child ?otherChild .
  FILTER(?ercoleParent = dbr:Alfonso_I_d'_Este || ?ercoleParent = dbr:Lucrezia_Borgia)
  FILTER(?otherChild != dbr:Ercole_II_d'_Este) 
  ?otherChildSuccessor dbo:predecessorOrMonarch ?otherChild .

  # Ferdinand I's spouse's royal child
  ?ferdinandSpouse dbo:spouse dbr:Ferdinand_I,_Holy_Roman_Emperor ;
                   dbo:child ?royalChild .
  FILTER(?ferdinandSpouse = dbr:Anna_Jagiellon || ?ferdinandSpouse = dbr:Maria_of_Austria)
  FILTER(?royalChild a dbo:Monarch)

  # Find the successor of the specified child
  ?specifiedChild dbo:predecessorOrMonarch ?anneChild ;
                  dbo:predecessorOrMonarch ?otherChildSuccessor ;
                  dbo:predecessorOrMonarch ?royalChild .
  ?successor dbo:predecessorOrMonarch ?specifiedChild .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
791,71,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v2 <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
    # Step 1: Emperor Takakura and his spouse
    dbr:Takakura_of_Japan dbo:spouse ?takakuraSpouse .

    # Step 2: Spouse's spouse (Royalty) is Emperor Takakura himself

    # Step 3: Predecessor of the child's child
    ?takakuraChild dbo:child dbr:Takakura_of_Japan .
    ?grandchild dbo:child ?takakuraChild .
    ?predecessor dbo:succession ?grandchild .

    # Step 4: Emperor Go-Shirakawa and his child who is an office holder and royalty
    dbr:Go-Shirakawa_of_Japan dbo:child ?goShirakawaChild .
    ?goShirakawaChild a dbo:Monarch ;
                     dbo:officeHolder true .

    # Step 5: Father of the child (Royalty) is Emperor Go-Shirakawa himself

    # Step 6: Father, that is royalty and office holder, of Emperor Antoku
    dbr:Antoku_of_Japan dbo:father ?antokuFather .
    ?antokuGrandfather dbo:child ?antokuFather ;
                       a dbo:Monarch ;
                       dbo:officeHolder true .

    # Find the spouse of the predecessor identified in step 3
    ?predecessor dbo:spouse ?spouse .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
98,25,test,Give me the birth place of the person born as Paolo Elito M. Ballesteros IV and entity in Philippines and region of the time zone of Lopez Jaena.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlace ?entityInPhilippines ?region
WHERE {
  # Birthplace of Paolo Elito M. Ballesteros IV
  OPTIONAL {
    dbr:Paolo_Elito_M._Ballesteros_IV dbo:birthPlace ?birthPlace .
  }

  # Entity in the Philippines (example: Manila)
  OPTIONAL {
    dbr:Manila a dbo:City ;
              dbp:country dbr:Philippines .
    BIND(dbr:Manila AS ?entityInPhilippines) .
  }

  # Region associated with the time zone of Lopez, Jaena
  OPTIONAL {
    dbr:Lopez_Jaena dbo:timeZone ?timeZone .
    ?region dbo:timezone ?timeZone ;
            a dbo:AdministrativeRegion .
    BIND(?region AS ?region)
  }
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
839,67,test,"Give me the band of the member of the band, that is a band and a group, of Peter Schorowsky and band of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/ontology/bandMember> ?v6 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  # Peter Schorowsky's band
  ?person1 rdfs:label ""Peter Schorowsky""@en .
  ?person1 dbo:memberOf ?band1 .

  # Kevin Russell's band
  ?person2 rdfs:label ""Kevin Russell (musician)""@en .
  ?person2 dbo:memberOf ?band2 .

  # Professional in Musician's band
  ?person3 rdfs:label ""Professional in Musician""@en .
  ?person3 dbo:memberOf ?band3 .

  # Ensure the bands are both groups and musical artists
  ?band1 a dbo:Band ;
         a dbo:MusicalArtist .
  ?band2 a dbo:Band ;
         a dbo:MusicalArtist .
  ?band3 a dbo:Band ;
         a dbo:Musical Artist .

  # Find common band among the three
  FILTER (?band1 = ?band2 && ?band2 = ?band3)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
826,64,test,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?spouse ?predecessor WHERE {
  # Successor of Louis II, Grand Duke of Hesse
  dbr:Louis_II,_Grand_Duke_of_Hesse dbo:successor ?successor .

  # Spouse of the child of the father of Anna Magdalena Appel
  dbr:Anna_Magdalena_Appel dbo:father ?father .
  ?child dbo:parent ?father .
  ?spouse dbo:spouse ?child .

  # Predecessor of the parent of the child of Louis IV, Grand Duke of Hesse
  ?child2 dbo:parent dbr:Louis_IV,_Grand_Duke_of_Hesse .
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:predecessor ?predecessor .

  FILTER(?successor = ?spouse && ?successor = ?predecessor)
}",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
216,58,test,"Give me the player in Igor Bišćan and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerInIgorBiscanTeam ?teamOfPersonBorn ?coachPlayer

WHERE {
  # Igor Bišćan's team
  dbr:Igor_Bišćan dbo:playsFor ?playerInIgorBiscanTeam .

  # Person born who is a sports manager, soccer manager, and player related to Pavel Vezhinov's death
  ?personBorn a dbo:SoccerPlayer ;
              a dbo:SportsManager ;
              a dbo:SoccerManager .
  
  ?pavelVezhinov dbo:deathDate ?deathDate ;
                 dbo:coachTeam dbr:Bosnia_and_Herzegovina_national_under-18_football_team .

  # Coach who is also a soccer player, sports manager, and soccer manager
  ?coachPlayer a dbo:SoccerPlayer ;
               a dbo:SportsManager ;
               a dbo:SoccerManager .
  
  ?pavelVezhinov dbo:deathDate ?deathDate .
  ?personBorn dbo:dateOfBirth ?birthDate .

  # Assuming the person born is related to Pavel Vezhinov's death
  ?personBorn dbo:relatedTo ?pavelVezhinov .

  # Team of the person born
  ?personBorn dbo:playsFor ?teamOfPersonBorn .
}",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
773,56,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of Charles the Fat and parent of Carloman of Bavaria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  dbr:C._of_Bavaria dbo:father dbr:Grifo_of_Franconia .
  
  dbr:Grifo_of_Franconia a dbo:Monarch ;
                        dbo:officeHolderOf ?office .

  dbr:Grifo_of_Franconia dbo:spouse ?spouse .
  
  ?spouse dbo:child dbr:Charles_the_Fat ;
          dbo:parentOf ?charlesParent .

  ?spouse dbo:parentOf dbr:C._of_Bavaria .
  
  ?spouse dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .

  ?royalChild dbo:parent ?parent .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
124,69,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v7 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
    # Find Frank Rhodes and his associated war
    ?frankRhodes a dbo:MilitaryPerson ;
                 foaf:name ""Frank Rhodes"" ;
                 dbo:commanderOf ?war .
    
    # Ensure the war is both a societal event and a military conflict
    ?war a dbo:SocietalEvent, dbo:MilitaryConflict .

    # Find A Battery, Royal Australian Artillery and its reference
    ?battery a dbo:MilitaryUnit ;
             foaf:name ""A Battery, Royal Australian Artillery"" ;
             dbo:partOf ?reference .
    
    # Ensure the reference is an Australian organization and military unit
    ?reference a dbo:AustralianOrganization, dbo:MilitaryUnit .

    # Find the person born on 1850-06-24 and their associated military force
    ?person dbo:dateOfBirth ""1850-06-24""^^xsd:date ;
            dbo:militaryForce ?militaryForce .
    
    # Ensure the military force is both a societal event and a military conflict
    ?militaryForce a dbo:SocietalEvent, dbo:MilitaryConflict .

    # Link the wars and forces through their common attributes
    FILTER(?war = ?militaryForce)
}
```",8,18,9,3,3,3,3,71,0,0,9,0,0.0,0
715,60,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find Carlos Franco Iribarnegaray and his office
  ?carlos a dbo:Person ;
          foaf:name ""Carlos Franco Iribarnegaray""@en .
  
  ?office dbo:head ?carlos ;
          a (dbo:GovernmentAgency|dbo:Organization) .

  # Find the native of Morocco involved in a military conflict
  ?militaryConflict dbo:commander ?nativeOfMorocco ;
                    a dbo:MilitaryConflict .

  ?nativeOfMorocco dbo:nationality dbr:Morocco ;
                   dbo:commanderInForce ?force .

  # Identify the commander in the force
  ?force dbo:commander ?commander .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
433,59,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?finalArtist WHERE {
  # Step 1: Find Paul Chambers' associated musical artist who is both a musical artist and an artist.
  ?chambers dbo:birthName ""Paul Chambers"" .
  ?chambers dbo:associatedMusicalArtist ?artist1 .
  ?artist1 rdf:type dbo:Musician ;
           rdf:type dbo:Artist .

  # Step 2: Find Ornette Coleman's associated musical artist who is both an artist and a musical artist.
  ?coleman dbo:birthName ""Ornette Coleman"" .
  ?coleman dbo:associatedMusicalArtist ?artist2 .
  ?artist2 rdf:type dbo:Artist ;
           rdf:type dbo:Musician .

  # Step 3: Find the associated musical artist of the result from step 2.
  ?artist2 dbo:associatedMusicalArtist ?finalArtist .
  ?finalArtist rdf:type dbo:Musician ;
               rdf:type dbo:Artist .
}
```",6,12,7,3,2,3,3,71,0,0,10,0,0.0,0
791,62,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and father of Emperor Go-Toba and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse WHERE {
  # Step 1: Find Emperor Takakura and his spouse
  ?emperorTakakura a dbo:Monarch ;
                   foaf:name ""Emperor Takakura""@en .
  
  ?emperorTakakura dbo:spouse ?spouseTakakura .

  # Step 2: Find the spouse of Emperor Takakura's spouse who is royalty
  ?spouseTakakura dbo:spouse ?spouseOfSpouse ;
                  a dbo:Monarch .
  
  # Step 3: Ensure this person is also the father of Emperor Go-Toba
  ?emperorGoToba a dbo:Monarch ;
                 foaf:name ""Emperor Go-Toba""@en ;
                 dbo:father ?spouseOfSpouse .

  # Step 4: Find the predecessor in the royal lineage
  ?child dbr:Emperor_Go-Shirakawa dbo:successor ?emperorGoShirakawa .
  
  ?emperorGoShirakawa dbo:child ?grandChild ;
                      a dbo:Monarch .

  ?grandChild dbo:child ?greatGrandChild ;
              a dbo:Monarch ;
              dbo:officeHolder ?office .

  # Step 5: Find the predecessor of this great-grandchild
  ?predecessor dbr:Emperor_Go-Shirakawa dbo:successor ?emperorGoShirakawa .
  
  ?greatGrandChild dbo:predecessor ?predecessor .
  
  FILTER(?spouseOfSpouse = ?predecessor)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
166,20,test,"Give me the entity in the territory administered, that is a country, from the reference to Madrid and resting place of the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/ontology/capital> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?event dbo:location dbr:Madrid .
  ?event a dbo:MilitaryConflict ;
         a dbo:SocietalEvent .
  ?militaryForce dbo:commander dbr:Manuel_Hedilla .
  ?militaryForce dbo:participatedIn ?event .
  ?territory dbo:administeredBy ?country .
  ?territory dbo:location ?event .
}
```",6,10,7,3,2,3,2,20,0,0,4,0,0.0,0
917,66,test,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of the father of the child, that is a royalty, of Kamehameha III and child of the father of Keʻelikōlani.",SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
    # Kamehameha IV's child who is royalty
    ?child1 dbo:spouse ?kamehamehaIV .
    ?child1 a dbo:Monarch .

    # Kamehameha III's child who is royalty and their father
    ?child2 dbo:spouse ?kamehamehaIII .
    ?child2 a dbo:Monarch .
    ?father3 dbo:child ?child2 .

    # Keʻelikōlani's father
    ?keelikoLANi dbo:parent ?fatherKeelikoLANi .

    # The parent we are looking for
    ?parent dbo:spouse ?kamehamehaIV .
    ?parent dbo:child ?child1 .
    ?parent dbo:child ?child2 .
    ?parent dbo:parent ?fatherKeelikoLANi .
}
```

This query assumes that the relationships and roles (like spouse, child, parent) are correctly modeled in DBpedia. Adjustments might be necessary based on actual data availability and structure.",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
508,20,test,"Give me the birthplace of the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun and birthplace of the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace1 ?birthPlace2 WHERE {
  # Hypothetical Commander A (Saudi) in Gulf War
  ?personA a dbo:Person ;
           dbo:nationality dbr:Saudi_Arabia ;
           dbo:occupation dbr:Military_Commander ;
           dbo:almaMater ?gulfWar ; # Assuming involvement in Gulf War
           dbo:birthPlace ?birthPlace1 .

  # Hypothetical Commander B (Politician) in World War II
  ?personB a dbo:Person ;
           dbo:occupation dbr:Politician ;
           dbo:almaMater ?worldWarII ; # Assuming involvement in WWII
           dbo:birthPlace ?birthPlace2 .
}
```",6,13,7,3,2,3,2,20,0,0,3,0,0.0,0
158,18,test,"Give me the entity in the award, that is a country, of the reference to Adelbert Cronkhite and party of the successor, that is a prime minister and an office holder and a politician, of André Tardieu.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Find Adelbert Cronkhite's award
  ?award dbo:recipient dbr:Adelbert_Cronkhite .
  
  # Get the country associated with that award
  ?award dbo:country ?country .

  # Find André Tardieu's successor who is a prime minister and also an office holder and politician
  ?tardieuSuccessor dbo:successorOf dbr:André_Tardieu ;
                   rdf:type dbo:PrimeMinister ;
                   rdf:type dbo:OfficeHolder ;
                   rdf:type dbo:Politician .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
926,71,test,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of the father of the spouse of Neşerek Kadın and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v8 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v7 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfFather
WHERE {
  # Beyhan Sultan and her father
  dbr:Beyhan_Sultan dbo:parent dbr:Mustafa_III .
  
  # Mustafa III's child who is a royalty
  dbr:Mustafa_III dbo:child ?royaltyChild .
  ?royaltyChild rdf:type dbo:Monarch .

  # Neşerek Kadın's spouse and their father
  ?nefernekadinspouse dbo:spouse dbr:Beyhan_Sultan .
  ?nefernekadinspouse dbo:parent ?fatherOfSpouse .

  # Şermi Kadın's child and successor
  ?shermikadin dbo:spouse ?somePerson .
  ?somePerson dbo:child ?childOfShermi .
  ?successor dbo:succeededBy ?childOfShermi .
  
  # Find the child of the father (royalty) of Beyhan Sultan's parent
  ?fatherOfRoyaltyChild dbo:parent ?royaltyChild .
  ?fatherOfRoyaltyChild dbo:child ?childOfFather .

  # Ensure the successor is the same as the child of the father
  FILTER (?successor = ?childOfFather)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
715,57,test,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in Rif War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolderOf dbr:1933_Spanish_general_election ;
          dbo:commanderInForce dbr:Rif_War ;
          dbo:leaderOf dbr:Government_of_Spain .
  
  ?person dbo:spouse dbr:Carlos_Franco_Iribarnegaray .
}
```

This query looks for a person who is:
- A politician.
- An office holder in the 1933 Spanish general election.
- A commander in the Rif War.
- The leader of an organization that can be identified as the Government of Spain (a government agency and organization).
- Married to Carlos Franco Iribarnegaray.",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
579,18,test,"Give me the native of the residence, that is English and a settlement, of the resident of Scotland and person born as the birth name of Jane Percy, Duchess of Northumberland.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeLanguage WHERE {
  # Step 1: Identify Jane Percy, Duchess of Northumberland
  dbr:Jane_Percy,_Duchess_of_Northumberland dbo:birthName ?birthName .

  # Step 2: Find a person born with the same birth name who resides in Scotland
  ?person dbp:birthName ?birthName ;
          dbo:residence ?residence .
  FILTER EXISTS { ?residence dbo:country dbr:Scotland }

  # Step 3: Determine if the residence is an English settlement
  ?residence dbo:country dbr:England .

  # Step 4: Retrieve the native language of this residence
  ?residence dbo:nativeLanguage ?nativeLanguage .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
527,19,test,"Give me the actor of the movie, that is a work and English and a television show, with Bernard Bresslaw and author of the work, that is a work and a book, of the host of Hyperland.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v0 . ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:language ""English"" ;
         dbo:starring dbr:Bernard_Bresslaw .
  
  ?author dbo:work ?movie ;
          dbo:book ?book .

  ?host rdfs:label ""Hyperland""@en ;
        dbo:hostedBy ?author .

  ?actor dbo:starring ?movie .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
892,58,test,"Give me the entity in Italy and landmark at elevation of the award of Anna Ishii and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?award ?landmark ?region ?settlement ?party
WHERE {
  # Anna Ishii's award
  ?anna a dbo:Person ;
        foaf:name ""Anna Ishii"" .
  ?anna dbo:honoraryTitle ?award .

  # Landmark at elevation in Italy
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ?elevation ;
            dbo:country dbr:Italy .
  
  # Andrea Cozzolino's party
  ?cozzolino a dbo:Person ;
             foaf:name ""Andrea Cozzolino"" .
  ?cozzolino dbo:party ?party .
  ?party a dbo:PoliticalParty .

  # Italian region and settlement related to the party
  ?region a dbo:Region, dbo:Settlement, dbo:AdministrativeRegion ;
          dbo:country dbr:Italy ;
          dbo:administrativeBody ?party .
}
```",6,12,7,3,3,3,3,71,0,0,2,0,0.0,0
917,64,test,"Give me the child of Kekūanāoʻa and child of the father of the child, that is a royalty, of Kamehameha III and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v4 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfKekuanaoa ?royalDescendant ?mayorParent
WHERE {
  # Kekūanāoʻa's child
  dbr:Kekuanaoa dbo:child ?childOfKekuanaoa .
  
  # Child of the father of Kekūanāoʻa's child (which is Kekūanāoʻa himself)
  ?childOfKekuanaoa dbo:parent dbr:Kekuanaoa .

  # Ensure this child is royalty
  ?royalDescendant dbo:parent ?childOfKekuanaoa .
  ?royalDescendant a dbo:Monarch .

  # Kamehameha III's royal child
  dbr:Kamehameha_III dbo:child ?kamehamehaChild .
  ?kamehamehaChild a dbo:Monarch .

  # Mayor of Hawaiian Kingdom and their parent who is royalty
  dbr:Mayor_of_the_Hawaiian_Kingdom dbo:parent ?mayorParent .
  ?mayorParent a dbo:Monarch .

  # Find the intersection of these relationships
  FILTER(?royalDescendant = ?kamehamehaChild)
  FILTER(?childOfKekuanaoa = ?mayorParent)
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
129,25,test,"Give me the associated musical artist of Saba (rapper) and associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and professional in the mayor of 1999 West Dunbartonshire Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?sabaArtist ?dreamvilleActorArtist ?mayorArtist WHERE {
  # Saba (rapper)
  dbr:Saba_(rapper) dbo:associatedMusicalArtist ?sabaArtist .

  # Dreamville Presents: Revenge
  dbr:Dreamville_Presents:_Revenge dbo:actor ?dreamvilleActor .
  FILTER (isBlank(?dreamvilleActor) || ?dreamvilleActor = dbr:Some_Organization)
  ?dreamvilleActor dbo:associatedMusicalArtist ?dreamvilleActorArtist .

  # 1999 West Dunbartonshire Council election
  dbr:1999_West_Dunbartonshire_Council_election dbo:majorityPartyLeader ?mayor .
  ?mayor dbo:associatedMusicalArtist ?mayorArtist .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
892,59,test,Give me the entity in the profession of the true self of Enrico Crolla and landmark at elevation of the award of the member of E-girls.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/elevation> ?v4 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?landmark WHERE {
  # Part 1: Enrico Crolla's profession
  dbr:Enrico_Crolla dbo:occupation ?person .
  ?person dbo:occupationName ?profession .

  # Part 2: E-girls member award and landmark elevation
  ?member dbo:memberOf dbr:E-girls .
  ?member dbo:awardReceived ?award .
  ?award dbo:elevation ?elevation .

  # Find a landmark with the same elevation as the award
  ?landmark dbo:elevation ?sameElevation .
  FILTER(?elevation = ?sameElevation)
}
```

This query assumes that:
- Enrico Crolla's profession can be found through his occupation.
- E-girls members have awards, and those awards have an associated elevation.
- Landmarks also have elevations that can be compared.

Please note that the actual availability of these properties (like `dbo:elevation` for awards or landmarks) in DBpedia might vary, and adjustments may be necessary based on the data model at the time of querying.",6,6,7,3,2,3,3,71,0,0,11,0,0.0,0
417,69,test,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the father of Frederick IX of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/property/father> ?v7 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Frederick IX of Denmark
  ?frederickIX a dbo:Monarch ;
               dbp:father ?fatherFrederickIX .

  # Father of Frederick IX
  ?fatherFrederickIX a dbo:Person .

  # Knud, Hereditary Prince of Denmark and his child
  ?knud a dbo:HereditaryPrince ;
        dbp:child ?childKnud .

  # Child of Knud's parent that is royalty
  ?parentKnud a dbo:Monarch ;
              dbp:child ?childKnud .

  # Parent of Alexandrine of Mecklenburg-Schwerin that is royalty
  ?alexandrine a dbo:Person ;
               dbp:father ?parentAlexandrine .
  ?parentAlexandrine a dbo:Monarch .

  # Spouse of the royal parent identified
  ?spouse a dbo:Spouse ;
          dbp:spouseOf ?parentKnud .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
892,62,test,Give me the entity in the profession of the true self of Enrico Crolla and entity in Province of Reggio Emilia and landmark at elevation of the award of the member of E-girls.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v5 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?profession ?reggioEntity ?landmark WHERE {
  # Enrico Crolla's profession
  OPTIONAL { 
    dbr:Enrico_Crolla dbo:occupation ?profession .
  }

  # Entity in Province of Reggio Emilia
  OPTIONAL {
    ?reggioEntity dbp:locatedInProvince ""Reggio Emilia"" .
  }

  # Landmark at elevation of award of member of E-girls
  OPTIONAL {
    ?eGirlMember dbo:memberOf dbr:E-girls .
    ?award dbo:recipient ?eGirlMember ;
           dbo:elevation ?elevation .
    ?landmark dbo:elevation ?elevation .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
791,56,test,"Give me the predecessor of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Emperor Antoku's predecessor is Emperor Takakura
  dbr:Emperor_Antoku dbo:predecessor dbr:Emperor_Takakura .

  # Shikishi Naishinnō was the spouse of Emperor Takakura
  dbr:Shikishi_Naishinnō dbo:spouse dbr:Emperor_Takakura .
  
  # Taira no Kiyomori is the father of Emperor Antoku and an office holder
  dbr:Taira_no_Kiyomori dbo:child dbr:Emperor_Antoku ;
                       a dbo:OfficeHolder .

  # We need to find the person who fits all these criteria
  ?person dbo:spouse dbr:Shikishi_Naishinnō .
  ?person dbo:parent dbr:Taira_no_Kiyomori .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
839,57,test,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of Kevin Russell (musician) and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Charlie Huhn's band(s)
  ?charlieHuhnBand dbo:member dbr:Charlie_Huhn .
  
  # Kevin Russell's band(s)
  ?kevinRussellBand dbo:member dbr:Kevin_Russell_(musician) .

  # Peter Schorowsky's band(s)
  ?peterSchorowskyBand dbo:member dbr:Peter_Schorowsky .

  # Find common bands
  FILTER (?charlieHuhnBand = ?kevinRussellBand && ?kevinRussellBand = ?peterSchorowskyBand)

  # Bind the band to a variable
  BIND(?charlieHuhnBand AS ?band)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
865,65,test,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native
WHERE {
  # Ram Jaipal Singh Yadav's residence and its native
  dbr:Ram_Jaipal_Singh_Yadav dbo:residence ?residence .
  ?residence a dbo:Country ;
             dbo:native ?native .

  # Spouse of Syeda Shahar Banu and her child who is a politician
  dbr:Syeda_Shahar_Banu dbo:spouse ?spouse .
  ?spouse dbo:child ?politicianChild .
  ?politicianChild a dbo:Politician .

  # Father of the child of Abu Ahmad Abdul Hafiz
  dbr:Abu_Ahmad_Abdul_Hafiz dbo:child ?child .
  ?child dbo:father ?fatherOfHafizChild .

  # Ensure all entities are connected through their relationships
  FILTER(?native = ?politicianChild || ?native = ?fatherOfHafizChild)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
917,57,test,"Give me the parent of Albert Kamehameha and child of the father of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/ontology/parent> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Find the parent of Albert Kamehameha
  ?albertKamehameha a dbr:Albert_Kamehameha_III ;
                    dbo:parent ?parentOfAlbert .

  # Step 2: Find the father of Kamehameha IV and his child
  ?kamehamehaIV a dbr:King_Kamehameha_IV ;
               dbo:father ?fatherOfKamehamehaIV .
  ?childOfFather a dbo:childOf ?fatherOfKamehamehaIV .

  # Step 3: Find the spouse of Leleiohoku I, their father, and a royalty child
  ?leleiohokuI a dbr:Leleiohoku_I ;
               dbo:spouse ?spouse .
  ?spouseFather a dbo:fatherOf ?spouse .
  ?royaltyChild a dbo:childOf ?spouseFather ;
                a dbo:Royal .

  # Combine the conditions to find the person who satisfies all
  FILTER (?parentOfAlbert = ?childOfFather && ?childOfFather = ?royaltyChild)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
353,9,test,"Give me the entity in the country of Moskovsky City District, Nizhny Novgorod and alma mater of the awardee of Medal of the Order ""For Merit to the Fatherland"".","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Moskovsky_City_District,_Nizhny_Novgorod> <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_the_Order_%22For_Merit_to_the_Fatherland%22> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater WHERE {
  # Find entities in Moskovsky City District, Nizhny Novgorod
  ?entity dbo:country dbr:Russia ;
          dbo:location dbr:Moskovsky_City_District,_Nizhny_Novgorod .

  # Ensure the entity is an educational institution (alma mater)
  ?entity a dbo:EducationalInstitution .

  # Find individuals who have received the Medal of the Order ""For Merit to the Fatherland""
  ?individual dbo:award dbr:Medal_of_the_Order_""For_Merit_to_the_Fatherland"" ;
              dbo:almaMater ?almaMater .

  # Link the alma mater to the entity found in Moskovsky City District
  FILTER(?almaMater = ?entity)
}
```",4,4,5,2,2,2,2,9,0,0,5,0,0.0,0
507,62,test,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of the person born as the birth name of Anne V. Coates and professional in Film director, television director.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/property/starring> ?v0 . ?v6 <http://dbpedia.org/ontology/director> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?director WHERE {
  # Step 1: Find the person born on 1919-06-17
  ?person dbo:birthday ""1919-06-17""^^xsd:date .
  
  # Step 2: Find Anne V. Coates' birth name and her spouse
  dbr:Anne_V._Coates dbp:birthName ?anneBirthName .
  ?spouse dbo:spouse dbr:Anne_V._Coates ;
          dbo:profession ?profession .

  FILTER (?anneBirthName IN (str(?person) || "" "") && 
          (?profession = dbr:Film_director || ?profession = dbr:Television_director))
  
  # Step 3: Find the movie that is both a ""movie"" and a ""work""
  ?movie dbo:type dbr:Movie ;
         dbo:director ?director .
  
  # Ensure the director of the movie matches the spouse
  FILTER (?spouse = ?person)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
976,61,test,"Give me the office of the person born as the birth name of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office1 ?office2 WHERE {
  # Find Naci Bostancı's birth name
  dbr:Naci_Bostancı dbo:birthName ?birthName .
  
  # Find the office held by the person with that birth name
  ?person dbp:birthName ?birthName ;
          dbo:occupation ?office1 .

  # Identify Millet İttifakı as an organization and political party in Turkey
  dbr:Millet_İttifakı a dbo:PoliticalParty, dbo:Organization ;
                     dbo:country dbr:Türkiye .

  # Determine the office of the mayor who is a politician, office holder, and Turkish
  ?mayor dbo:nationality dbr:Türkiye ;
         dbo:occupation ?office2 .
  
  FILTER (?office2 = dbp:MunicipalMayor)
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
926,56,test,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of Mustafa III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Abdulaziz's father and his lineage
  dbr:Abdulaziz_Ibn_Saud dbo:father dbr:Abdul_Rahman_bin_Faisal_Al_Saud .
  dbr:Abdul_Rahman_bin_Faisal_Al_Saud dbo:father dbr:Faisal_bin_Turki_bin_Abdullah_Al_Saud .

  # Child of Faisal bin Turki who is royalty
  ?child dbo:parent dbr:Faisal_bin_Turki_bin_Abdullah_Al_Saud .
  ?child a dbo:Monarch .

  # Beyhan Sultan's lineage and successor of Mustafa III
  dbr:Beyhan_Sultan dbo:father dbr:Mustafa_III .
  dbr:Abdul_Hamid_I dbo:predecessor dbr:Mustafa_III .

  # Connecting the royalty lineage
  ?person dbo:parent ?child .
  ?person dbo:parent dbr:Abdul_Hamid_I .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
987,68,test,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?v6 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandBirthPlace ?actorBirthPlace ?country
WHERE {
  # Step 1: Find the band associated with Dado Prljaca
  ?band dbo:member dbr:Dado_Prljaca ;
        a dbo:Band .

  # Step 2: Get the birthplace of the band (assuming it's an organization)
  OPTIONAL { ?band dbp:birthPlace ?bandBirthPlace . }

  # Step 3: Find the film featuring Emir Hadžihafizbegović
  ?film dbo:starring dbr:Emir_Hadžihafizbegović ;
        a dbo:Film .

  # Step 4: Identify an actor from this film
  ?actor dbo:actedIn ?film ;
         a dbo:Actor .

  # Step 5: Get the birthplace of the actor
  OPTIONAL { ?actor dbp:birthPlace ?actorBirthPlace . }

  # Step 6: Find countries in the Central European Time region
  ?country dbo:timeZone dbr:Central_European_Time ;
           a dbo:Country .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
326,18,test,"Give me the resident of the birthplace, that is a state and British, of the professional in Writer and person decedent at the award, that is a country, of Adelbert Cronkhite.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> ""Writer""@en . ?result <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?resident WHERE {
  # Step 1: Identify Adelbert Cronkhite
  dbr:Adelbert_Cronkhite a dbo:Writer ;
                        dbo:deathPlace ?deceasedAwardCountry ;
                        dbo:birthPlace ?britishState .

  # Step 2: Ensure the award is in a country
  ?deceasedAwardCountry a dbo:Award ;
                       dbp:country ?awardCountry .
  
  # Step 3: Confirm his profession and deceased status
  dbr:Adelbert_Cronkhite dbo:occupation dbo:Writer ;
                        dbo:deathDate ?deathDate .

  # Step 4: Ensure the birthplace is a British state
  ?britishState a dbo:AdministrativeRegion ;
                dbp:country dbr:United_Kingdom .

  # Step 5: Find residents of this British state
  ?resident dbo:birthPlace ?britishState .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
417,67,test,"Give me the spouse of Princess Caroline-Mathilde of Denmark and child of the father of the leader, that is a royalty, of Colony of Greenland and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Princess Caroline-Mathilde of Denmark's spouse
  dbr:Princess_Caroline_Matilda_of_Denmark dbo:spouse ?spouse .

  # Leader of Colony of Greenland (historically, it was a Danish colony)
  dbr:King_Christian_X_of_Denmark dbo:positionHeld [
    a dbo:Position ;
    dbo:officeHolder ?leader .
  ] .
  
  # Father of the leader
  ?leader dbo:father ?fatherLeader .

  # Royal child of the father of the leader
  ?royalChild1 dbo:childOf ?fatherLeader .
  FILTER EXISTS { ?royalChild1 a dbo:RoyalFamilyMember }

  # Alexandrine of Mecklenburg-Schwerin's parent (a royalty)
  dbr:Alexandrine_of_Mecklenburg-Schwerin dbo:parent ?parentAlexandrine .
  FILTER EXISTS { ?parentAlexandrine a dbo:RoyalFamilyMember }

  # Royal child of that parent
  ?royalChild2 dbo:childOf ?parentAlexandrine .
  FILTER EXISTS { ?royalChild2 a dbo:RoyalFamilyMember }

  # Find the intersection of these royals
  VALUES (?intersect) {
    ( ?spouse )
    ( ?royalChild1 )
    ( ?royalChild2 )
  }
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
170,27,test,Give me the entity in Russia and birth place of the awardee of People's Artist of Russia and domain of the profession of John Scholey.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInRussia ?birthPlace ?professionDomain WHERE {
  # Find the resource for John Scholey
  ?scholey a dbo:Person ;
          foaf:name ""John Scholey""@en ;
          dbo:honorificTitle dbr:People's_Artist_of_Russia .

  # Get entity in Russia related to John Scholey
  ?scholey dbo:nationality dbr:Russia .
  
  # Get birth place of John Scholey
  ?scholey dbo:birthPlace ?birthPlace .

  # Get domain of profession (assuming it's linked via a category or similar property)
  OPTIONAL { 
    ?scholey dbo:fieldOfActivity ?professionDomain .
  }

  BIND(?scholey AS ?entityInRussia) .
}
```",5,5,6,2,3,2,3,28,0,0,3,0,0.0,0
456,69,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of The Shadow and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfBand WHERE {
  dbr:Alan_Doyle dbo:memberOf dbr:Great_Big_Sea .
  
  dbr:Great_Big_Sea dbo:associatedBand ?bandOfBand .

  ?bandOfBand dbo:member ?musicalArtist .

  ?musicalArtist dbo:alterEgo dbr:The_Shadow .

  ?musicalArtist dbo:spouse ?actor .
  ?actor dbo:actedIn ?work .
  ?work dbo:starring dbr:Ross_Newton .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
47,62,test,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of the award, that is an award, of Mantu Ghosh and office of Ajoy Mukherjee.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://dbpedia.org/property/governor> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?operationCommanderOffice ?mantuAwardAwardeeOffice ?ajoyMukherjeeOffice
WHERE {
  # Operation Green Hunt Commander's Office
  ?operation dbr:Operation_Green_Hunt .
  ?operation dbo:commander ?commander .
  ?commander dbo:office ?operationCommanderOffice .

  FILTER (?commander rdf:type dbo:Politician) 

  # Mantu Ghosh Award and Awardee Office
  ?mantuAward dbr:Mantu_Ghosh_Award .
  ?mantuAward dbo:awardee ?awardee .
  ?awardee dbo:office ?mantuAwardAwardeeOffice .

  # Ajoy Mukherjee's Office
  dbr:Ajoy_Mukherjee dbo:office ?ajoyMukherjeeOffice .
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
47,71,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of the award, that is an award, of Mantu Ghosh and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v8 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v4 . ?v8 <http://dbpedia.org/property/awards> ?v7 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?award ?awardeeOffice ?mantuAward ?mantuAwardeeOffice ?politician ?operationGreenHuntRole
WHERE {
  # Office of the awardee of an award in India
  ?award dbo:country dbr:India .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:office ?awardeeOffice .

  UNION

  # Office of the awardee of Mantu Ghosh's award
  ?mantuAward dbo:recipient dbr:Mantu_Ghosh .
  ?mantuAward dbo:recipient ?mantuAwardee .
  ?mantuAwardee dbo:office ?mantuAwardeeOffice .

  UNION

  # Office of the administration of a politician in Operation Green Hunt
  ?politician dbo:occupation dbr:Politician ;
              dbo:participatedInOperation dbr:Operation_Green_Hunt .
  ?politician dbo:office ?operationGreenHuntRole .
}
```

This query uses SPARQL to retrieve the required information by leveraging DBpedia's ontology and properties. It combines results using `UNION` to handle different parts of your question in a single query.",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
124,68,test,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v5 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?kitchenerForce ?medalAwardeeWar ?batteryReference
WHERE {
  # Herbert Kitchener's military force related to a societal event and a military conflict
  dbr:Herbert_Kitchener_1st_Earl_Kitchener dbo:militaryConflict ?conflict .
  ?conflict rdf:type dbo:SocietalEvent .
  ?kitchenerForce dbo:commander dbr:Herbert_Kitchener_1st_Earl_Kitchener ;
                  dbo:participatedIn ?conflict .

  # Awardee of British South Africa Company Medal and commander in a war
  ?medalAwardee dbo:receivedAward dbr:British_South_Africa_Company_Medal .
  ?medalAwardeeWar dbo:commander ?medalAwardee ;
                   rdf:type dbo:MilitaryConflict, dbo:SocietalEvent .

  # Reference to 'A' Battery, Royal Australian Artillery
  dbr:A_Battery,_Royal_Australian_Artillery dbo:reference ?batteryReference .
  ?batteryReference rdf:type dbo:Organisation, dbo:MilitaryUnit ;
                    dbo:nationality dbr:Australia .
}
```",8,18,9,3,3,3,3,71,0,0,9,0,0.0,0
826,63,test,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result WHERE {
    # Step 1: Prince Friedrich of Hesse and by Rhine's parent
    ?friedrich a dbr:Friedrich_of_Hesse_and_by_Rhine ;
              dbo:parent ?parent .

    # Step 2: Parent's predecessor
    ?predecessor dbo:succeededBy ?parent .

    # Step 3: Louis I, Grand Duke of Hesse's royal child
    ?louis a dbr:Louis_I,_Grand_Duke_of_Hesse ;
           dbo:child ?royalChild .
    
    FILTER EXISTS { ?royalChild dbo:occupation dbr:Royalty }

    # Step 4: Royal child's successor
    ?successor dbo:succeededBy ?royalChild .

    # Step 5: Anna Magdalena Appel's father and his child
    ?anna a dbr:Anna_Magdalena_Appel ;
          dbo:father ?father .
    
    ?child dbo:parent ?father .

    # Step 6: Spouse of the child from step 5
    ?spouse dbo:spouse ?child .

    # Final result: Predecessor of parent, successor of royal child, and spouse of child
    ?result ?relation ?successor .
    FILTER (?result = ?predecessor || ?result = ?spouse)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
715,61,test,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Find Carlos Franco Iribarnegaray and his role as a commander
  ?carlos dbr:Carlos_Franco_Iribarnegaray ;
          dbo:commanderOf ?force .
  
  # Identify the force's leader who is also an office holder, politician, and president from the 1933 Spanish general election
  ?leader dbo:officeHolderOf ?mayorOffice ;
          dbo:positionHeld ?presidentRole ;
          dbo:electionDate ?electionDate ;
          dbo:politicalParty ?party .
  
  FILTER (?electionDate = ""1933-11-19""^^xsd:date) # Date of the 1933 Spanish general election
  
  # Ensure the leader is a politician and president
  ?leader rdf:type dbo:Politician ;
          dbo:presidentOf dbr:Spain .

  # Link the mayor's office as both a government agency and an organization
  ?mayorOffice rdf:type dbo:GovernmentAgency, dbo:Organization .
  
  # Connect Carlos Franco Iribarnegaray to the leader through the force
  ?force dbo:commander ?carlos ;
         dbo:leader ?leader .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
136,9,test,Give me the region coded as the area code of Levenhagen and landmark at elevation of the award of Bret Anthony Johnston.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ?v1 . <http://dbpedia.org/resource/Bret_Anthony_Johnston> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Levenhagen> <http://dbpedia.org/ontology/areaCode> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?region ?landmark WHERE {
  # Find Levenhagen's area code and its region
  ?levenhagen dbo:areaServed ?region .
  ?levenhagen dbp:areaCode ?areaCode .

  # Find Bret Anthony Johnston's award elevation
  ?johnston dbo:award ?award .
  ?award dbo:elevation ?elevation .

  # Find a landmark at the same elevation as the award
  ?landmark dbo:elevation ?sameElevation .
  
  FILTER (?elevation = ?sameElevation)
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
329,26,test,"Give me the entity in United Kingdom and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist) and birthplace of the author of The Tailor and Ansty.",SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?batesBirthplaceEntity ?authorBirthplaceEntity ?ukEntityBates ?ukEntityAuthor
WHERE {
  # Robert Bates (loyalist)
  dbr:Robert_Bates_(loyalist) dbo:birthPlace ?batesBirthplace .
  
  OPTIONAL { 
    ?batesBirthplace a ?batesBirthplaceType .
    FILTER (?batesBirthplaceType IN (dbo:Organisation, dbo:Country))
    BIND(?batesBirthplace AS ?batesBirthplaceEntity)
  }
  
  # Find an entity in the UK related to Robert Bates
  OPTIONAL {
    ?ukEntityBates dbp:country dbr:United_Kingdom .
    ?ukEntityBates dbo:wikiPageDisambiguates ?batesResource .
    FILTER (?batesResource = dbr:Robert_Bates_(loyalist))
    BIND(?ukEntityBates AS ?ukEntityBates)
  }
  
  # Author of ""The Tailor and Ansty""
  dbr:The_Tailor_and_Ansty dbo:author ?author .
  
  OPTIONAL {
    ?author dbp:birthPlace ?authorBirthplace .
    
    OPTIONAL { 
      ?authorBirthplace a ?authorBirthplaceType .
      FILTER (?authorBirthplaceType IN (dbo:Organisation, dbo:Country))
      BIND(?authorBirthplace AS ?authorBirthplaceEntity)
    }
  }

  # Find an entity in the UK related to the author
  OPTIONAL {
    ?ukEntityAuthor dbp:country dbr:United_Kingdom .
    ?ukEntityAuthor dbo:wikiPageDisambiguates ?authorResource .
    FILTER (?authorResource = ?author)
    BIND(?ukEntityAuthor AS ?ukEntityAuthor)
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
216,57,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in Igor Bišćan.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v5 . <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  # Find Džemal Berberović's team when he was a sports manager and soccer manager
  ?person dbr:Džemal_Berberović .
  ?person dbo:birthDate ""1983-12-20""^^xsd:date .
  ?person dbo:occupation dbr:Soccer_manager .
  ?person dbo:occupation dbr:Sports_manager .
  ?person dbo:team ?team .

  # Find Igor Bišćan's team
  ?player dbr:Igor_Bišćan .
  ?player dbo:team ?bišćanTeam .

  # The player in question is a coach of Igor Bišćan's team and also an organization, sports club, and soccer club
  ?coach dbo:occupation dbr:Soccer_player .
  ?coach dbo:occupation dbr:Sports_manager .
  ?coach dbo:occupation dbr:Soccer_manager .
  ?coach dbo:team ?bišćanTeam .
  ?coach a dbo:Sports_club ;
         a dbo:Soccer_club ;
         a dbo:Organisation .

  # Ensure the team of Džemal Berberović is the same as the coach's organization
  FILTER(?team = ?coach)
}",6,15,7,3,3,3,3,71,0,0,1,0,0.0,0
987,60,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/timeZone> ?v5 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  # Dado Prat Polumenta is a member of R.E.M.
  dbr:Dado_Prat_Polumenta dbo:memberOfBand dbr:R.E.M. .

  # R.E.M. was formed in Athens, Greece
  dbr:R.E.M. dbo:birthPlace dbr:Athens .
  
  # Find the country of Athens
  dbr:Athens dbo:country dbr:Greece .

  # Find a sports event in Canicosa de la Sierra
  ?event dbo:location dbr:Canicosa_de_la_Sierra .
  ?event rdf:type dbo:SportsEvent .

  # Find the time zone of this sports event
  ?event dbo:timeZone ?timezone .

  # Find a country associated with this time zone
  ?timezone dbo:country ?country .
}
```",6,11,7,3,2,3,3,71,0,0,2,0,0.0,0
976,63,test,"Give me the office of the person born as Mehmet Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/leader> ?v1 . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v5 . ?v0 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v5 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mehmetOffice ?kemalOffice ?nationAllianceMayorOffice
WHERE {
  # Mehmet Naci Bostancı's office
  dbr:Mehmet_Naci_Bostancı dbo:office ?mehmetOffice .

  # Kemal Kılıçdaroğlu's administration and his office
  dbr:Kemal_Kılıçdaroğlu dbo:leaderOf ?administration .
  dbr:Kemal_Kılıçdaroğlu dbo:office ?kemalOffice .

  # Nation Alliance (Turkey) mayor who is a politician, an office holder, and Turkish
  ?mayor dbo:nationality dbr:Turkey ;
         dbo:officeHolderOf dbr:Nation_Alliance_(Turkey) ;
         rdf:type dbo:Politician .
  ?mayor dbo:office ?nationAllianceMayorOffice .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
976,64,test,"Give me the office of Meral Akşener and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/leader> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?meralOffice ?kemalLeaderOffice ?naciOffice
WHERE {
  # Meral Akşener's office
  dbr:Meral_Aksener dbo:office ?meralOffice .

  # Kemal Kılıçdaroğlu's administration leader and their office
  dbr:Kemal_Kilicdaroglu dbo:leaderOf ?administration .
  ?administration a dbo:Organization .
  ?administration dbo:leader ?kemalLeader .
  ?kemalLeader dbo:office ?kemalLeaderOffice .

  # Naci Bostancı's birth name and the office of that person
  dbr:Naci_Bostanci dbo:birthName ?birthName .
  ?person dbo:birthName ?birthName .
  ?person dbo:office ?naciOffice .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
18,24,test,"Give me the alumnus of the figure known, that is an educational institution, as Saints and parent of the professional in Actress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alumnus WHERE {
  ?school a dbo:EducationalInstitution ;
          foaf:name ""Saints""@en .
  
  ?alumnus dbo:almaMater ?school .

  ?child dbo:parent ?alumnus ;
         rdf:type dbo:Actor ;
         dbo:profession dbr/Actress .

}
```

This query does the following:
- Identifies an educational institution named ""Saints.""
- Finds individuals who are alumni of this school.
- Checks if these alumni have a child who is recognized as an actress.",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
281,28,test,"Give me the awardee of the award of Alfred Warden and commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v5 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee WHERE {
  # Alfred Warden's award
  ?award dbo:recipient dbr:Alfred_Warden .
  
  # Roy Boehm's event and military conflict
  ?event dbo:participant dbr:Roy_Boehm ;
         a dbo:MilitaryConflict .
  ?boehmAward dbo:recipient dbr:Roy_Boehm ;
              dbo:relatedEvent ?event .

  # Lawrence Moore Cosgrave's military conflict
  ?cosgraveConflict dbo:participant dbr:Larry_Moore_Cosgrave ;
                   a dbo:MilitaryConflict .
  
  # Find the common awardee
  ?award dbo:recipient ?awardee .
  FILTER(?awardee != dbr:Alfred_Warden && ?awardee != dbr:Roy_Boehm && ?awardee != dbr:Larry_Moore_Cosgrave)
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
382,20,test,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler and landmark at elevation of the award of the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?v4 <http://dbpedia.org/property/awards> ?v5 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthplace WHERE {
  # Step 1: Find Lukas Kübler's manager who is also an athlete and sports manager
  ?manager a dbo:SoccerManager ;
          dbo:athleteOf ?team ;
          dbo:sportsManagerOf ?team .
  
  ?player dbo:managedBy ?manager ;
          rdfs:label ""Lukas Kübler""@en .

  # Step 2: Find the award received by Harry Combes
  ?award dbo:recipient dbr:Harry_Combes ;
         dbo:awardedToCoach true ;
         dbo:elevation ?elevation .
  
  # Step 3: Find the landmark at this elevation
  ?landmark dbo:elevation ?elevation .

  # Get the birthplace of the manager
  ?manager dbo:birthPlace ?birthplace .
}",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
267,20,test,"Give me the coach of the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season and person born on the birth date of the reference to Dan Cathy.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthDate> ?v5 . ?result <http://dbpedia.org/ontology/birthDate> ?v5 . ?v1 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://dbpedia.org/ontology/coach> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?coach WHERE {
  # Step 1: Find the manager of Tractor S.C. during the 2020–21 season
  dbr:Tractor_S.C._(football)_season_2020%E2%80%9321/dbp:manager ?manager .
  
  # Step 2: Identify players who are also soccer clubs and have this manager as their coach
  ?player a dbo:SoccerClub ;
          dbo:coach ?manager .

  # Step 3: Get the birth date of Dan Cathy
  dbr:Dan_Cathy dbo:birthday ?danCathyBirthDate .

  # Step 4: Find a person born on that same date
  ?person dbo:birthday ?sameBirthDate .
  
  FILTER (?sameBirthDate = ?danCathyBirthDate)
  
  # Return the coach of such player
  BIND(?manager AS ?coach)
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
865,69,test,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of the child of the father of Abul Maal Abdul Muhith and native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v7 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfPolitician WHERE {
  # Abu Ahmad Abdul Hafiz and his child who is a politician
  ?abuAHmad dbr:Abu_Ahmad_Abdul_Hafiz .
  ?child dbo:parent ?abuAHmad ;
         a dbo:Politician .

  # Father of the child (politician)
  ?fatherOfChild dbo:parent ?child .
  
  # Abul Maal Abdul Muhith and his father
  ?abulMaal dbr:Abul_Maal_Abdul_Muhith .
  ?fatherOfAbulMaal dbo:parent ?abulMaal .

  # Person decedent at Patna
  ?person dbo:deathPlace dbr:Patna ;
          dbo:country dbr:?Country .

  # Native of the country where person decedent at Patna was from
  ?native dbo:nationality dbr:?Country .
  
  # The father we are looking for is the native of this country
  ?fatherOfPolitician dbo:parent ?native .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
573,58,test,"Give me the person decedent at Massachusetts and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find John Quincy Adams' parent who is an author and a politician
  ?adamsParent dbo:child dbr:John_Quincy_Adams .
  ?adamsParent dbo:occupation dbr:Author ;
               (dbo:officeHolder|dbo:politicalPartyMember) ?politicianRole .

  # Find the person decedent at William J. Phelan's residence
  ?phelanResidence dbp:settlementLocation ?settlement .
  ?decedent dbo:residence ?phelanResidence ;
            dbo:deathPlace ?settlement .

  # Ensure the person is both John Quincy Adams' parent and the decedent at William J. Phelan's residence
  ?person owl:sameAs ?adamsParent ;
          owl:sameAs ?decedent .
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
507,56,test,Give me the spouse of the person born as Anne Voase Coates and professional in the profession of the person born on 1966-02-18 and director of Entertaining Mr Sloane (film).,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Anne Voase Coates
  ?anne a dbo:Person ;
        foaf:name ""Anne Voase Coates""@en ;
        dbo:birthName ""Anne Voase Coates""@en .

  # Find her spouse
  ?anne dbo:spouse ?spouse .

  # Find the director of Entertaining Mr Sloane
  ?film a dbo:Film ;
        foaf:name ""Entertaining Mr Sloane""@en .
  
  ?director dbo:directed ?film ;
            dbo:birthDate ?birthDate .

  FILTER (?birthDate = ""1966-02-18""^^xsd:date)

  # Get the profession of this director
  ?director a dbo:Person ;
            dbo:profession ?profession .

  # Ensure Anne Voase Coates is related to this context (optional, for verification)
  OPTIONAL { ?anne dbo:profession ?sameProfession . }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
216,59,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coach WHERE {
  # Džemal Berberović as a player
  dbr:Džemal_Berberović dbo:playerForTeam dbr:?club .

  # The club is an organization, sports club, and soccer club
  ?club rdf:type dbo:SportsClub ;
        rdf:type dbo:FootballClub .

  # Coach of the club who is a player, sports manager, and soccer manager
  ?coach dbo:managerOfTeam ?club .
  ?coach rdf:type dbo:FootballPlayer ;
         rdf:type dbo:SportsManager ;
         rdf:type dbo:FootballManager .

  # Reference to Croatia U21 as an organization and soccer club
  dbr:Croatia_U21 rdf:type dbo:SoccerClub ;
                  rdf:type dbo:Organization .
}
```",6,14,7,3,2,3,3,71,0,0,3,0,0.0,0
582,69,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v7 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/ontology/team> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?teamNickname WHERE {
  # Hajime Moriyasu's team nickname
  dbr:Hajime_Moriyasu dbo:managerOf ?team .
  ?team dbo:nickname ?teamNickname .

  # Scientist associated with Hirotaka Sugawara
  ?scientist dbo:residence ?place .
  ?hirotaka dbr:Hirotaka_Sugawara .
  ?hirotaka dbo:associatedWith ?scientist .

  # Masami Nagasawa's father
  dbr:Masami_Nagasawa dbo:father ?father .
  ?father a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
443,26,test,Give me the landmark at elevation of the award of William Shepherd and birthplace of the work of yes and birthplace of Ulf Lundell.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> ""yes""@en . ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark WHERE {
  # William Shepherd's award
  ?shepherd a dbo:Astronaut ;
            dbo:honoraryDoctorateOfScienceAwardedBy dbr:University_of_Texas_at_Austin .
  
  # Yes band and work birthplace
  ?yesBand a dbo:MusicalArtist ;
           dbo:genre dbr:Progressive_rock ;
           dbo:member ?bandMember .
  ?work dbo:artist ?yesBand ;
        dbo:birthPlace ?workBirthPlace .

  # Ulf Lundell's birthplace
  ?ulfLundell a dbo:Person ;
              foaf:name ""Ulf Lundell"" ;
              dbo:birthPlace ?ulfLundellBirthPlace .
  
  # Find the landmark at the elevation of the award location (University of Texas at Austin)
  dbr:University_of_Texas_at_Austin dbo:elevation ?elevation .
  ?landmark dbo:elevation ?elevation .

  # Match birthplaces
  FILTER (?workBirthPlace = ?ulfLundellBirthPlace)

}
```

This query attempts to:

- Identify the award associated with William Shepherd.
- Find a work by Yes and its birthplace, which should match Ulf Lundell's birthplace.
- Retrieve landmarks that share the same elevation as the University of Texas at Austin (where Shepherd received his honorary doctorate).",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
892,61,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and landmark at elevation of the award of the member of E-girls.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity a dbo:Region ;
          dbo:country dbr:Italy ;
          a dbo:Settlement ;
          a dbo:AdministrativeRegion .

  ?party a dbo:PoliticalParty, dbo:Organization ;
         dbo:member dbr:Andrea_Cozzolino .
  
  ?administration dbo:hasMember ?entity ;
                  dbo:politicalParty ?party .

  ?award dbo:elevation ?elevation .
  ?landmark dbo:elevation ?elevation ;
            dbo:location ?entity .

  ?egirlsMember dbo:award ?award .
}
```",6,12,7,3,2,3,3,71,0,0,2,0,0.0,0
933,64,test,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to Alan Warner and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfTheBand
WHERE {
  # Find bands associated with The Ramones
  ?ramonesBand dbo:associatedBand dbr:The_Ramones .
  
  # Find artists of those bands
  ?artist dbo:memberOf ?ramonesBand ;
          a dbo:MusicalArtist .

  # Find Alan Warner's associations
  ?alanWarnerBand dbo:associatedBand dbr:Alan_Warner .
  
  # Connect the artist to Alan Warner's band
  ?artist dbo:memberOf ?alanWarnerBand .

  # Identify the person born on 1947-04-21
  ?person dbo:dateOfBirth ""1947-04-21""^^xsd:date ;
          a dbo:MusicalArtist .
  
  # Connect this person to a band
  ?person dbo:memberOf ?band .

  # Ensure the band is an organization and group
  ?band a dbo:Band, dbo:Organization, dbo:Group .

  # Find the band of the band (recursive association)
  ?bandOfTheBand dbo:associatedBand ?band .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
888,19,test,"Give me the commander in the force, that is a societal event and an event, of Serhiy Kotenko and awardee of the award of the commander in 2022 Ukrainian eastern counteroffensive.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . ?v0 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderRole ?event ?award WHERE {
  # Identify Serhiy Kotenko
  ?person a dbo:Person ;
          foaf:name ""Serhiy Kotenko""@en .

  # Link to the event (Ukrainian eastern counteroffensive)
  ?event a dbo:Event ;
         rdfs:label ?eventName ;
         dbo:participant ?person .
  
  FILTER(CONTAINS(LCASE(?eventName), ""ukrainian eastern counteroffensive""))

  # Identify the role as commander
  ?role a dbo:Role ;
        dbo:agent ?person ;
        dbo:positionLabel ?commanderRole .

  FILTER(STRSTARTS(LCASE(?commanderRole), ""commander""))

  # Link to an award received in 2022
  ?award a dbo:Award ;
         dbo:recipient ?person ;
         dbo:dateAwarded ?date .
  
  FILTER(YEAR(?date) = 2022)

  # Ensure the event is societal and related to the counteroffensive
  ?event dbo:socialEvent true .

}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
791,65,test,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Find Emperor Go-Shirakawa's children
  ?childGoShirakawa dbo:parent dbr:Emperor_Go-Shirakawa ;
                   a dbo:Person .

  # Step 2: Find the grandchildren of Emperor Go-Shirakawa
  ?grandchildGoShirakawa dbo:parent ?childGoShirakawa ;
                         a dbo:Person .

  # Step 3: Check if this grandchild is an office holder and royalty
  ?officeHolder dbr:Emperor_Go-Shirakawa_office_holder ?grandchildGoShirakawa .
  ?royalty dbr:Royalty ?grandchildGoShirakawa .

  # Step 4: Find Emperor Takakura's children who are royalty
  ?childTakakura dbo:parent dbr:Emperor_Takakura ;
                 a dbo:Person .
  ?royaltyChild dbr:Royalty ?childTakakura .

  # Step 5: Identify the father of this child
  ?father dbr:Father_of_child ?childTakakura .

  # Step 6: Find Emperor Takakura's spouse who is royalty
  ?spouse dbr:Spouse_of_Emperor_Takakura ;
          a dbo:Person .
  ?royaltySpouse dbr:Royalty ?spouse .

  # Step 7: Find the spouse of that spouse
  ?predecessor dbo:spouse ?spouse .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
965,68,test,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . ?v6 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfRoyalChild WHERE {
  # Step 1: Find the politician born on 1854-05-24
  ?politician dbo:birthday ""1854-05-24""^^xsd:date ;
              a dbo:Politician .

  # Step 2: Find their spouse
  ?spouse dbo:spouse ?politician .

  # Step 3: Find the parent of Louise Mountbatten
  dbr:Louise_Mountbatten dbo:parent ?parentOfLouise .

  # Step 4: The spouse of this parent should be the same as step 2
  ?parentOfLouise dbo:spouse ?spouse .

  # Step 5: Find Prince George of Battenberg, who is a child of the couple and royalty/noble
  dbr:Prince_George_of_Battenberg dbo:childOf ?parentOfLouise ;
                                  dbo:childOf ?spouse ;
                                  a dbo:RoyalFamilyMember , dbo:Noble .

  # Step 6: Find the parent of this royal child
  ?parentOfRoyalChild dbo:parent dbr:Prince_George_of_Battenberg .
}",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
865,64,test,"Give me the father of the child of the father of Abul Maal Abdul Muhith and native of the residence, that is a country, of the person decedent at Patna and father of AK Abdul Momen.",SELECT ?result WHERE { <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v6 . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfMuhith ?nativeCountry ?personDecedentAtPatna WHERE {
  # Find the father of Abul Maal Abdul Muhith
  dbr:Abul_Maal_Abdul_Muhith dbo:father ?fatherOfMuhith .

  # Find AK Abdul Momen's father and his birthplace (a country)
  dbr:AK_Abdul_Momen dbo:father ?fatherOfAK .
  ?fatherOfAK dbo:birthPlace ?nativeCountry .
  
  # Ensure the native place is a country
  ?nativeCountry rdf:type dbo:Country .

  # Find the person decedent at Patna
  ?personDecedentAtPatna dbo:deathPlace dbr:Patna .
  ?personDecedentAtPatna dbo:father ?fatherOfAK .
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
715,59,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find a military conflict involving Morocco
  ?conflict dbo:location dbr:Morocco .
  
  # Identify the commander of that force who is native to Morocco
  ?conflict dbo:commander ?commander .
  ?commander dbo:nationality dbr:Moroccan_Nation .

  # Check if this commander was also a mayor and later president in 1933
  OPTIONAL {
    ?commander dbo:officeHolderOf dbr:Mayor_of_Spain_1933 .
    ?commander dbo:presidentOf ?country .
    FILTER(YEAR(?date) = 1933)
  }
}
```",6,10,7,3,2,3,3,71,0,0,4,0,0.0,0
122,8,test,"Give me the band of the reference, that is a musical artist and an artist, to Gift of Gab and band member of Lyrics Born.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Gift of Gab""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Lyrics_Born> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  VALUES ?artist { 
    dbr:Gift_of_Gab 
    dbr:Lyrics_Born 
  }
  
  ?artist dbo:memberOf ?band .
}
```",3,5,4,2,2,2,2,9,0,0,2,0,0.0,0
976,56,test,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as the birth name of Naci Bostancı and office of Meral Akşener.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeLabel WHERE {
  # Office of the leader of Grand National Assembly of Turkey
  OPTIONAL {
    dbr:Grand_National_Assembly_of_Turkey dbo:leader ?person .
    ?person dbo:positionHeld ?office .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  # Office of Naci Bostancı
  OPTIONAL {
    dbr:Naci_Bostancı dbo:birthName ?birthName .
    ?person foaf:name ?birthName .
    ?person dbo:positionHeld ?office .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  # Office of Meral Akşener
  OPTIONAL {
    dbr:Meral_Akşener dbo:positionHeld ?office .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
507,66,test,"Give me the professional in the profession of the person born on 1966-02-18 and spouse of the person born as Anne Voase Coates and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/director> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v1 <http://dbpedia.org/property/occupation> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession WHERE {
  # Step 1: Find the person born on 1966-02-18
  ?person dbo:birthday ""1966-02-18""^^xsd:date .
  
  # Step 2: Identify their spouse who is also a director and was born as Anne Voase Coates
  ?spouse dbp:birthName ""Anne Voase Coates""@en ;
          dbo:spouse ?person ;
          dbo:profession dbr:Film_director .

  # Step 3: Find the movie directed by this spouse featuring Beryl Reid
  ?movie dbo:director ?spouse ;
         dbo:starring dbr:Beryl_Reid .
  
  # Step 4: Get the profession of the spouse
  ?spouse dbo:profession ?profession .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
98,26,test,"Give me the entity in the region, that is a country, of Philippine Standard Time and birth place of Paolo Ballesteros and region of the time zone of Lopez Jaena.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Philippine Standard Time is associated with the Philippines
  VALUES ?pstCountry { dbr:Philippines }
  
  # Paolo Ballesteros's birthplace
  SELECT ?birthPlace WHERE {
    dbr:Paolo_Ballesteros dbo:birthPlace ?birthPlace .
  } LIMIT 1
  
  # Lopez Jaena's region
  SELECT ?region WHERE {
    dbr:Lopez_Jaena dbo:locatedIn ?region .
  } LIMIT 1

  # The country must match all the above criteria
  ?country a dbo:Country ;
           rdfs:label ?label .

  FILTER (CONTAINS(LCASE(?label), ""philippines""))
  
  OPTIONAL { ?birthPlace dbo:country ?country }
  OPTIONAL { ?region dbo:country ?country }

  FILTER (?pstCountry = ?country)
}
```",5,6,6,2,3,2,3,28,0,0,2,0,0.0,0
465,56,test,"Give me the successor of the child of Alfonso I d'Este and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor1 ?successor2 WHERE {
  # Alfonso I d'Este and his child
  dbr:Alfonso_I_d%27Este dbo:child ?alfonsoChild .
  
  # Successor of Alfonso's child
  ?alfonsoChild dbo:succeededBy ?successor1 .

  # Charles Orlando, Dauphin of France
  dbr:Charles_Orlando_dauphin_of_France dbo:parent ?charlesParent .

  # Parent of Charles Orlando and spouse (Archduchess Barbara)
  ?charlesParent dbo:spouse dbr:Barbara_of_Austria .
  
  # Child of Archduchess Barbara that is royalty
  dbr:Barbara_of_Austria dbo:child ?barbaraChild .
  ?barbaraChild a dbo:Monarch .

  # Successor of this royal child
  ?barbaraChild dbo:succeededBy ?successor2 .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
273,18,test,Give me the spouse of the child of the child of Edoardo Agnelli (1831-1871) and parent of the alumnus of University of Turin.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Edoardo Agnelli (1831-1871)
  ?edoardo dbo:birthYear ""1831""^^xsd:gYear ;
           dbo:deathYear ""1871""^^xsd:gYear ;
           dbo:child ?child .

  # Step 2: Find his child
  ?child dbo:child ?grandchild .

  # Step 3: Find that child's child (grandchild of Edoardo)
  
  # Step 4: Determine the spouse of this grandchild
  ?grandchild dbo:spouse ?spouse .

  # Step 5: Ensure this grandchild is a parent of an alumnus from University of Turin
  ?alumnus dbp:almaMater <http://dbpedia.org/resource/University_of_Turin> ;
           dbo:parent ?grandchild .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
124,59,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  ?person dbo:awardReceived dbr:British_South_Africa_Company_Medal .
  ?war dbo:commander ?person ;
       a dbo:MilitaryConflict, dbo:SocietalEvent .
  ?reference dbo:militaryUnit dbr:A_Battery,_Royal_Australian_Artillery ;
             a dbo:Organisation, dbo:MilitaryUnit ;
             dbo:nationality dbr:Australia .
  ?war dbo:militaryForce ?militaryForce .
}
```",6,14,7,3,2,3,3,71,0,0,10,0,0.0,0
791,68,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v7 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse WHERE {
  # Step 1: Find Emperor Takakura and his spouse
  dbr:Takakura_Emperor dbo:spouse ?empressTakakura .

  # Step 2: Find the spouse of Empress Takakura who is royalty
  ?empressTakakura dbo:spouse ?spouseOfSpouse .
  ?spouseOfSpouse a dbo:Monarch .

  # Step 3: Identify Emperor Takakura's child who is royalty
  dbr:Takakura_Emperor dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .

  # Step 4: Find the predecessor of the royal child's child, who is an office holder and royalty
  ?royalChild dbo:child ?grandchild .
  ?grandchild dbo:predecessor ?officeHolderRoyalty .
  ?officeHolderRoyalty a dbo:OfficeHolder ;
                      a dbo:Monarch .

  # Additional condition for Emperor Go-Shirakawa relation
  ?officeHolderRoyalty dbo:successor dbr:Go_Shirakawa_Emperor .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
976,71,test,"Give me the office of the person born as the birth name of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v8 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/property/leader> ?v5 . ?v2 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?naciOffice ?mayorOffice ?partyReference ?leaderOffice
WHERE {
  # Naci Bostancı's birth name and office
  dbr:Naci_Bostancı dbo:birthName ?birthName .
  dbr:Naci_Bostancı dbo:office ?naciOffice .

  # Mayor of the reference organization (Millet İttifakı)
  dbr:Millet_İttifakı a dbo:PoliticalParty ;
                     dbo:country dbr:Türkiye .
  OPTIONAL { ?mayor dbo:nationality dbr:Türkiye ;
                  dbo:office ""Mayor""@en ;
                  dbo:party dbr:Millet_İttifakı . 
    BIND(?mayor AS ?mayorOffice)
  }

  # Kemal Kılıçdaroğlu's office in the administration
  dbr:Kemal_Kılıçdaroğlu dbo:office ?leaderOffice .
  OPTIONAL { ?admin a dbo:Organization ;
                  dbo:leader dbr:Kemal_Kılıçdaroğlu . 
    BIND(?admin AS ?partyReference)
  }
}",9,17,10,3,3,3,3,71,0,0,1,0,0.0,0
582,65,test,"Give me the figure known as the nickname of Japan national football team and reference to the residence of Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname ?residence ?fatherName WHERE {
  # Nickname of Japan National Football Team
  dbr:Japan_national_football_team dbo:nickname ?nickname .

  # Hirotaka Sugawara's residence
  dbr:Hirotaka_Sugawara dbo:residenceLocation ?residence .

  # Kazuaki Nagasawa's father
  dbr:Kazuaki_Nagasawa dbo:father ?father .
  ?father rdfs:label ?fatherName .
  FILTER(CONTAINS(LCASE(?fatherName), ""athlete"") && CONTAINS(LCASE(?fatherName), ""soccer manager"") && CONTAINS(LCASE(?fatherName), ""sports manager""))
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
216,66,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Criteria for being a player and coach of Bosnia and Herzegovina national under-18 football team
  ?person dbo:playerInTeam dbr:Bosnia_and_Herzegovina_national_under-18_football_team .
  ?person dbo:coachOfTeam dbr:Bosnia_and_Herzegovina_national_under-18_football_team .

  # Criteria for being involved with Croatia national under-21 football team
  ?person dbo:playerInTeam dbr:Croatia_national_under-21_football_team .
  ?person dbo:coachOfTeam dbr:Croatia_national_under-21_football_team .

  # Criteria for being a sports manager, soccer manager, and soccer player
  ?person rdf:type dbo:SportsManager .
  ?person rdf:type dbo:SoccerManager .
  ?person rdf:type dbo:SoccerPlayer .

  # Linking birth to the death of Pavel Vezhinov
  ?person dbp:birth dbr:Pavel_Vezhinov_death .
}
```

This query attempts to find individuals who meet all specified criteria by querying DBpedia's structured data. Note that some assumptions are made about the availability and structure of data in DBpedia, such as specific properties like `dbo:playerInTeam`, `dbo:coachOfTeam`, and relationships between birth and death events.",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
281,27,test,"Give me the awardee of the award of Alfred Warden and commander in New Guinea campaign and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee1 ?awardee2 WHERE {
  # Awardee of the Alfred Warden Medal (New Guinea campaign)
  ?medal dbo:recipient ?awardee1 .
  ?medal rdfs:label ""Alfred Warden Medal""@en .
  
  # Lawrence Moore Cosgrave's award related to a military conflict
  ?cosgraveAward dbo:recipient dbr:Larry_Moore_Cosgrave .
  ?cosgraveAward dbo:type ?conflictType .
  FILTER(CONTAINS(LCASE(?conflictType), ""military""))

  # Find the awardee of that military conflict award
  ?conflictAward dbo:recipient ?awardee2 .
  ?conflictAward dbo:type ?conflictType .

  # Ensure it's the same type of conflict
  FILTER(?conflictType = ?cosgraveAwardType)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
236,19,test,"Give me the party member of the administration of the reference, that is an office holder and a politician, to James Madison and party member of the administration, that is an organisation, of John Adams.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/party> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?madisonParty ?adamsParty
WHERE {
  # James Madison's political party
  dbr:James_Madison dbo:partyMemberOf ?madisonParty .
  
  # John Adams' political party
  dbr:John_Adams dbo:partyMemberOf ?adamsParty .
}
```",5,8,6,3,2,3,2,20,0,0,19,0,0.0,0
826,59,test,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Anna Magdalena Bach and her father
  ?anna a dbo:Person ;
        foaf:name ""Anna Magdalena Bach""@en .
  ?father dbo:child ?anna ;
          foaf:name ""Johann Ambrosius Bach""@en .

  # Sibling of Anna Magdalena Bach
  ?sibling dbo:parent ?father ;
           foaf:name ?siblingName .

  # Spouse of the sibling
  ?spouse dbo:spouse ?sibling .

  # Louis I, Grand Duke of Hesse and a related royalty
  ?louisI a dbo:Person ;
          foaf:name ""Louis I, Grand Duke of Hesse""@en .
  ?relatedRoyalty dbo:child ?louisI ;
                  dbo:royalTitle ?title .

  # Child of the related royalty who is also a royalty
  ?royalChild dbo:parent ?relatedRoyalty ;
              dbo:royalTitle ?childTitle .

  # Successor of the royal child
  ?successor dbo:predecessor ?royalChild .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
170,26,test,Give me the entity in the work of International Energy Agency and birth place of Era Ziganshina and domain of the profession of John Scholey.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v1 . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInWork ?birthPlace ?professionDomain
WHERE {
  # Entity in the work of International Energy Agency
  ?person dbo:workFor dbr:International_Energy_Agency .
  ?person rdfs:label ?entityInWork .

  # Birth place of Era Ziganshina
  OPTIONAL { 
    dbr:Era_Ziganshina dbo:birthPlace ?birthPlace .
  }

  # Domain of the profession of John Scholey
  OPTIONAL {
    dbr:John_Scholey dbo:occupation ?profession .
    ?profession rdfs:label ?professionDomain .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
456,65,test,"Give me the spouse of the actor of Pacific Drive and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and band of the band, that is a musical artist, of Dean Brody.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Actor of ""Pacific Drive""
  ?actor dbo:title ""Pacific Drive""@en.
  
  # Professional alter ego of Lamont Cranston (The Shadow)
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:alterEgo dbr:Lamont_Cranston .

  # Band associated with Dean Brody
  ?band dbo:member dbr:Dean_Brody .

  # Find the spouse of the actor who is also a professional in The Shadow and band member
  ?actor dbo:spouse ?spouse .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
791,63,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of Emperor Takakura.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v3 <http://dbpedia.org/ontology/spouse> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse WHERE {
  # Emperor Takakura and his spouse
  dbr:Takakura_of_Japan dbo:spouse ?emperorTakakurasSpouse .

  # Spouse of Emperor Takakura's spouse (who is royalty)
  ?emperorTakakurasSpouse dbo:spouse ?spouseOfSpouse .
  
  FILTER EXISTS { ?spouseOfSpouse a dbo:Monarch } # Ensure they are royalty

  # Child of Emperor Takakura who is royalty
  dbr:Takakura_of_Japan dbo:child ?royalChild .

  FILTER EXISTS { ?royalChild a dbo:Monarch }

  # Predecessor of the child (another royal figure)
  ?royalChild dbo:predecessor ?predecessor .
  
  FILTER EXISTS { ?predecessor a dbo:Monarch }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
417,63,test,"Give me the child of the father of Frederick IX of Denmark and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
    # Frederick IX of Denmark
    ?frederickIX dbo:father ?fatherFrederickIX .
    
    # Child of the father of Frederick IX who is a royalty
    ?childFatherFrederickIX dbo:parent ?fatherFrederickIX ;
                           rdf:type dbo:Monarch .

    # Knud, Hereditary Prince of Denmark
    ?knud dbo:child ?childKnud .

    # Child of the child of Knud who is a royalty
    ?grandChildKnud dbo:parent ?childKnud ;
                    rdf:type dbo:Monarch .

    # Frederick Francis III, Grand Duke of Mecklenburg-Schwerin
    ?frederickFrancisIII dbo:child ?childFrederickFrancisIII .

    # Child of the child of Frederick Francis III who is a royalty
    ?grandChildFrederickFrancisIII dbo:parent ?childFrederickFrancisIII ;
                                   rdf:type dbo:Monarch .

    # Find the spouse of the parent (from step 1) who is also a royalty
    ?spouse dbp:spouse ?childFatherFrederickIX ;
            rdf:type dbo:Monarch .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
124,63,test,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?commander WHERE {
  # Step 1: Identify the war that is a societal event and military conflict
  ?war a dbo:MilitaryConflict ;
      a dbo:SocietalEvent .

  # Step 2: Find 'A' Battery, Royal Australian Artillery as an organization and military unit
  dbr:A_Battery,_Royal_Australian_Artillery 
    dbo:militaryUnitOf ?australianReference ;
    a dbo:MilitaryUnit, dbo:Organization .

  # Ensure the reference is related to the war
  ?australianReference dbo:participatesIn ?war .

  # Step 3: Identify commanders associated with Frank Rhodes and Herbert Kitchener
  ?commander dbo:commanded ?war ;
            dbo:commandedBy dbr:Frank_Rhodes_(British_Army_officer) ;
            dbo:commandedBy dbr:Herbert_Kitchener,_1st_Earl_Kitchener .

}
```",7,17,8,3,3,3,3,71,0,0,9,0,0.0,0
456,62,test,"Give me the band of Alan Doyle and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://dbpedia.org/property/starring> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?fictionalCharacter ?spouse WHERE {
  # Alan Doyle's band
  dbr:Alan_Doyle dbo:musicalBandMemberOf ?band .

  # Lamont Cranston as The Shadow
  dbr:The_Shadow dbo:fictionalAlterEgoOf dbr:Lamont_Cranston .

  # Ross Newton and the spouse of an actor in a movie/TV show
  {
    SELECT ?actor WHERE {
      ?work dbo:starring ?actor .
      ?work dbo:starring dbr:Ross_Newton .
    }
  } UNION {
    SELECT ?actor WHERE {
      ?tvShow dbo:starring ?actor .
      ?tvShow dbo:starring dbr:Ross_Newton .
    }
  }

  # Spouse of the actor
  ?actor dbo:spouse ?spouse .
}
```

This query attempts to:
- Identify Alan Doyle's band.
- Link Lamont Cranston to his fictional alter ego, The Shadow.
- Find a work (movie or TV show) featuring Ross Newton and another actor, then identify that actor's spouse.",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
417,68,test,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v4 <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
    # Step 1: Leader of Colony of Greenland
    ?leader a dbo:Monarch ;
            dbp:countryOrTerritory ""Colony of Greenland"" .
    
    # Step 2: Father of this leader
    ?father dbo:child ?leader .

    # Step 3: Child of Frederick Francis III who is royalty
    ?frederickChild dbo:parent ?grandDuke ;
                    a dbo:Monarch .
    FILTER(?grandDuke = dbpedia:Frederick_Franz_III,_Grand_Duke_of_Mecklenburg-Schwerin)

    # Step 4: Grandchild of Frederick Francis III who is royalty
    ?grandchild dbo:parent ?frederickChild ;
               a dbo:Monarch .

    # Step 5: Child of Knud, Hereditary Prince of Denmark
    ?knudChild dbo:parent ?hereditaryPrince ;
               a dbo:Monarch .
    FILTER(?hereditaryPrince = dbpedia:Knud,_Hereditary_Prince_of_Denmark)

    # Step 6: Grandchild of the person identified in step 4
    ?grandchild2 dbo:parent ?grandchild .

    # Step 7: Parent of this child
    ?parent dbo:child ?knudChild ;
            dbo:spouse ?spouse .
    
    # Ensure all conditions are met
    FILTER(?father = ?grandchild)
    FILTER(?grandchild2 = ?frederickChild)
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
839,65,test,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of the band, that is a musical artist, of Charlie Huhn.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/bandMember> ?v6 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandKevin ?bandPeter ?bandCharlie WHERE {
  # Kevin Richard Russell
  OPTIONAL {
    ?kevin a dbo:MusicalArtist ;
           foaf:name ""Kevin Richard Russell"" .
    ?kevin dbo:memberOfBand ?bandKevin .
  }

  # Peter Schorowsky
  OPTIONAL {
    ?peter a dbo:MusicalArtist ;
           foaf:name ""Peter Schorowsky"" .
    ?peter dbo:memberOf ?bandPeter .
    ?bandPeter a dbo:Band ; 
               dbo:groupType dbr:Musical_group .
  }

  # Charlie Huhn
  OPTIONAL {
    ?charlie a dbo:MusicalArtist ;
             foaf:name ""Charlie Huhn"" .
    ?charlie dbo:memberOfBand ?bandCharlie .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
124,65,test,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryConflict1 ?militaryForce2 ?militaryConflict2 ?militaryForce3 ?militaryConflict3
WHERE {
  # Herbert Kitchener's military forces and conflicts
  dbr:Herbert_Kitchener_1st_Earl_Kitchener dbo:militaryCommanderOf ?force1 .
  ?force1 dbo:participatedIn ?conflict1 .

  FILTER (dbo:SocietalEvent(?conflict1) && dbo:MilitaryConflict(?conflict1))

  # A Field Battery, Royal Australian Artillery's war involvement
  dbr:A_Field_Battery,_Royal_Australian_Artillery dbo:militaryForceOf ?force2 .
  ?force2 dbo:participatedIn ?conflict2 .

  FILTER (dbo:SocietalEvent(?conflict2) && dbo:MilitaryConflict(?conflict2))

  # Awardee of British South Africa Company Medal's war
  ?awardee dbo:receivedAward dbr:British_South_Africa_Company_Medal .
  ?awardee dbo:militaryForceOf ?force3 .
  ?force3 dbo:participatedIn ?conflict3 .

  FILTER (dbo:Event(?conflict3) && dbo:MilitaryConflict(?conflict3) && dbo:SocietalEvent(?conflict3))
}
```

This query attempts to find the military forces and conflicts associated with Herbert Kitchener, A Field Battery, Royal Australian Artillery, and an awardee of the British South Africa Company Medal. It uses DBpedia's ontology classes for societal events and military conflicts to filter relevant results.",7,14,8,3,3,3,3,71,0,0,9,0,0.0,0
715,58,test,"Give me the commander in the force of Francisco Largo Caballero and commander in Rif War and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find Francisco Largo Caballero
  VALUES ?francisco { dbr:Francisco_Largo_Caballero }

  # Identify his role as a leader of an office (government agency or organization)
  ?office dbo:leader ?francisco .
  
  # Check for involvement in the Rif War
  OPTIONAL {
    ?rifWar dbo:participant ?francisco .
    FILTER EXISTS { ?rifWar rdfs:label ""Rif War""@en }
  }

  # Find the commander in force during his leadership
  ?office dbo:commanderInForce ?commander .

  # Ensure Carlos Franco Iribarnegaray is referenced
  OPTIONAL {
    ?reference dbo:referencedBy dbr:Carlos_Franco_Iribarnegaray .
    FILTER EXISTS { ?reference dbo:relatedTo ?francisco }
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
212,9,test,"Give me the birthplace of the professional, that is a musical artist and an artist, in Singer, rapper, CEO, Facilities and Project Manager and birthplace of the professional in .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/occupation> ""Singer, rapper, CEO, Facilities and Project Manager""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Jay_Z 
  }
  ?person dbo:birthPlace ?birthPlace .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
791,66,test,"Give me the spouse of the spouse, that is a royalty, of Emperor Takakura and predecessor of the child of Emperor Takakura and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v6 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse WHERE {
  # Step 1: Find Emperor Takakura and his spouse
  dbr:Takakura_Emperor dbo:spouse ?empressTakakura .

  # Step 2: The spouse of the spouse is Emperor Takakura himself
  ?empressTakakura dbo:spouse dbr:Takakura_Emperor .

  # Step 3: Find Emperor Takakura's child who is royalty
  dbr:Takakura_Emperor dbo:child ?childOfTakakura .
  
  # Step 4: Find the predecessor of this child in the royal line
  ?predecessor dbo:succeededBy ?childOfTakakura .

  # Step 5: Identify Emperor Antoku's father who is royalty and an office holder
  dbr:Antoku_Emperor dbo:father ?fatherOfAntoku .
  ?fatherOfAntoku a dbo:Monarch ;
                 dbo:officeHolder ?office .

  # Step 6: The spouse of the predecessor (who is royalty) is what we need
  ?predecessor dbo:spouse ?spouseOfSpouse .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
507,69,test,"Give me the professional in the profession of the person born on 1966-02-18 and spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v7 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Step 1: Find the person born on 1966-02-18
  ?person dbo:birthday ""1966-02-18""^^xsd:date .
  
  # Step 2: Find their spouse
  ?spouse dbo:spouse ?person .

  # Step 3: Determine the birth name of Anne V. Coates
  dbr:Anne_V._Coates dbp:birthName ?anneBirthName .

  # Step 4: Identify the director of a movie with Beryl Reid
  ?movie dbo:director ?anneDirector .
  ?movie dbo:starring dbr:Beryl_Reid .
  
  FILTER (?anneDirector = ?anneBirthName) .

  # Step 5: Find the professional in the profession of the spouse
  ?spouse dbo:profession ?profession .
  ?professional dbo:profession ?profession .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
417,62,test,"Give me the child of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfAlexandrine ?spouseOfParent ?childOfKnud ?leaderOfGreenland ?fatherOfLeader ?commonChild

WHERE {
  # Alexandrine of Mecklenburg-Schwerin's child
  ?alexandrine dbo:child ?childOfAlexandrine .
  VALUES ?alexandrine { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> }

  # Spouse of Alexandrine who is royalty
  ?spouseOfParent dbp:spouse ?alexandrine ;
                  a dbo:Monarch .

  # Knud, Hereditary Prince of Denmark's child
  ?knud dbo:child ?childOfKnud .
  VALUES ?knud { <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> }

  # Leader of Colony of Greenland and their father
  ?leader dbp:position ""Leader of the Colony of Greenland""@en ;
          dbo:father ?fatherOfLeader .

  # Child of Knud and child of the father of the leader
  ?commonChild dbo:child ?knud, ?fatherOfLeader .
  
  # Ensure commonChild is royalty
  ?commonChild a dbo:Monarch .
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
926,59,test,Give me the father of the father of the spouse of Neşerek Kadın and successor of the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfFatherAndSuccessor WHERE {
  # Neşerek Kadın's spouse
  ?neşerekSpouse dbo:spouse dbr:Neşerek_Kadın .
  
  # Child of Neşerek Kadın's spouse
  ?child dbo:parent ?neşerekSpouse .

  # Successor of the child
  ?successor dbo:predecessor ?child .

  # Şermi Kadın's spouse
  ?şermiSpouse dbo:spouse dbr:Şermi_Kadın .
  
  # Child of Şermi Kadın's spouse
  ?şermiChild dbo:parent ?şermiSpouse .

  # Father of the father of Neşerek Kadın's spouse
  ?fatherOfNeşerekFather dbo:child ?neşerekSpouse .
  ?grandfatherOfNeşerekSpouse dbo:child ?fatherOfNeşerekFather .

  # Find the common entity that is both the father of the grandfather and successor
  FILTER (?grandfatherOfNeşerekSpouse = ?successor)
  
  # Return this entity
  BIND(?grandfatherOfNeşerekSpouse AS ?fatherOfFatherAndSuccessor)
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
36,27,test,Give me the actor of Being Mrs Elliot and person born in the birth year of Deanne Bray and person born as the birth name of Ayo Makun.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor ?personWithSameBirthYear ?personWithAyoMakunName
WHERE {
  # Actor of ""Being Mrs Elliot""
  ?movie dbo:title ""Being Mrs Elliot""@en .
  ?movie dbo:starring ?actor .

  # Person born in the same year as Deanne Bray
  dbr:Deanne_Bray dbo:birthdayYear ?deanneBirthYear .
  ?personWithSameBirthYear dbo:birthdayYear ?deanneBirthYear .

  # Person with birth name Ayo Makun
  ?personWithAyoMakunName dbp:birthName ""Ayo Makun""@en .
}",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
926,60,test,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of the father of the spouse of Neşerek Kadın.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
    # Beyhan Sultan and her parent Mustafa III
    ?beyhanSultan a dbo:Person ;
                  foaf:surname ""Beyhan"" ;
                  dbp:father ?mustafaIII .
    
    ?mustafaIII a dbo:Monarch ;
                dbp:title ""Ottoman Emperor"" .

    # Neşerek Kadın's spouse
    ?neserekKadin a dbo:Person ;
                  foaf:surname ""Neşerek"" ;
                  dbp:spouse ?spouse .
    
    # Father of the spouse
    ?spouse dbp:father ?fatherOfSpouse .

    # Father of the father of the spouse
    ?fatherOfSpouse dbp:father ?grandFatherOfSpouse .

    # The father must be a royalty
    ?grandFatherOfSpouse a dbo:Monarch ;
                         dbp:title ""Ottoman Emperor"" .

    # Child of this royal grandfather
    ?grandFatherOfSpouse dbp:child ?child .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
124,56,test,"Give me the military force of Battle of Tamai and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleForce ?personEvent ?warName

WHERE {
  # Battle of Tamai military force
  dbr:Battle_of_Tamai dbo:militaryForce ?battleForce .

  # Person born on 1850-06-24
  ?person dbo:birthDate ""1850-06-24""^^xsd:date ;
          dbo:commanderIn ?personEvent .
  
  # A Field Battery, Royal Australian Artillery war involvement
  dbr:A_Field_Battery,_Royal_Australian_Artillery dbo:participatedIn ?war .

  # Find the societal event and military conflict for the person
  ?personEvent a dbo:SocietalEvent ;
               dbo:militaryConflict ?militaryConflict .
  
  # Link the war to the military conflict
  ?war rdfs:label ?warName ;
      dbo:militaryConflict ?militaryConflict .

}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
874,20,test,"Give me the band of the band member of the band, that is an organisation, of Mark Read (singer) and band of the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMarkRead ?bandWriter
WHERE {
  # Find Mark Read's band that is an organization
  ?markRead a dbo:Singer ;
            dbo:memberOfBand ?bandMarkRead .
  FILTER EXISTS { ?bandMarkRead a dbo:Organization }

  # Find Horace Andy's work that is both a work and a musical artist
  ?horaceAndy a dbo:MusicalArtist, dbo:Writer ;
              dbo:work ?workHoraceAndy .
  ?workHoraceAndy a dbo:Work .

  # Find the band of the writer (musical artist) of Horace Andy's work
  ?writer a dbo:Writer, dbo:MusicalArtist ;
          dbo:band ?bandWriter .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
124,60,test,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Step 1: Identify the person born on June 24, 1850
  ?person dbo:birthDate ""1850-06-24""^^xsd:date ;
          dbo:militaryForce ?force .

  # Step 2: Find the societal event and military conflict related to this force
  ?force dbo:participatedIn ?conflict .
  
  # Step 3: Locate 'A' Battery, Royal Australian Artillery as an organization and military unit
  dbr:A_Battery,_Royal_Australian_Artillery dbo:militaryUnitOf ?battery ;
                                            dbo:participatedIn ?conflict .

  # Step 4: Identify the commander of this conflict
  ?conflict dbo:commander ?commander .
}
```",6,13,7,3,2,3,3,71,0,0,9,0,0.0,0
456,60,test,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and band of the band, that is a musical artist, of the band of Alan Doyle.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find the movie that is both a work and a television show with Ross Newton
  ?movie dbo:starring dbr:Ross_Newton ;
         rdf:type dbo:Film ;
         dbo:genre dbr:Television_series .

  # Find the band associated with Alan Doyle
  ?band dbo:member dbr:Alan_Doyle .
  
  # Find the musical artist from this band
  ?artist dbo:associatedBand ?band .

  # Get the spouse of the actor (Ross Newton)
  ?actor dbo:spouse ?spouse .
  FILTER (?actor = dbr:Ross_Newton)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
917,61,test,"Give me the child of the father of the spouse, that is a royalty, of Leleiohoku I and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?result WHERE {
  # Leleiohoku I's spouse and their father's child who is royalty
  ?spouseLeleiohoku dbo:spouse ?leleiohoku .
  FILTER(?leleiohoku = dbpedia:Leleiohoku_I)
  
  ?fatherSpouse dbo:child ?spouseLeleiohoku .
  
  ?royaltyChildFatherLeleiohoku dbo:child ?result .
  ?royaltyChildFatherLeleiohoku rdfs:subClassOf* dbo:Royal .

  FILTER(?royaltyChildFatherLeleiohoku = ?fatherSpouse)

  # Kamehameha III's child who is royalty and their father's child who is royalty
  ?childKamehamehaIII dbo:child ?kamehamehaIII .
  FILTER(?kamehamehaIII = dbpedia:Kamehameha_III)
  
  ?royaltyChildKamehamehaIII rdfs:subClassOf* dbo:Royal .
  FILTER(?royaltyChildKamehamehaIII = ?childKamehamehaIII)

  ?fatherRoyaltyChildKamehamehaIII dbo:child ?childKamehamehaIII .

  ?result2 dbo:child ?fatherRoyaltyChildKamehamehaIII .
  ?result2 rdfs:subClassOf* dbo:Royal .

  FILTER(?result = ?result2)
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
417,65,test,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?result <http://dbpedia.org/property/father> ?v6 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfLeaderFather ?childOfFrederickChild ?spouseOfParentIngolf
WHERE {
  # Leader of Colony of Greenland and their father
  ?leader dbo:country dbr:Greenland .
  ?father dbo:child ?leader .
  
  # Child of the leader's father who is royalty
  ?childOfLeaderFather dbo:parent ?father ;
                      a dbo:Monarch .

  # Frederick Francis III and his royal children
  dbr:Fredrick_Francis_III_of_Mecklenburg-Schwerin dbo:child ?frederickChild .
  
  # Child of Frederick's child who is royalty
  ?childOfFrederickChild dbo:parent ?frederickChild ;
                        a dbo:Monarch .

  # Parent of Count Ingolf of Rosenborg and their spouse
  dbr:Count_Ingolf_of_Rosenborg dbo:parent ?parentIngolf .
  
  ?spouseOfParentIngolf dbo:spouse ?parentIngolf ;
                       a dbo:Monarch .
}
```

This query assumes the existence of specific relationships in DBpedia. Adjustments may be necessary based on actual data availability and structure.",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
47,58,test,"Give me the office of the awardee of the entity, that is an award, in India and office of Suvendu Adhikari and office of the awardee of Banga Bhushan.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardEntityOffice ?suvenduAdhikariOffice ?bangaBhushanAwardeeOffice
WHERE {
  # Find the award entity in India and its awardee's office
  ?award a dbo:Award ;
         dbo:country dbr:India .
  ?awardee dbo:recipientOf ?award ;
          dbo:office ?awardEntityOffice .

  # Find Suvendu Adhikari's office
  dbr:Suvendu_Adhikari dbo:office ?suvenduAdhikariOffice .

  # Find the Banga Bhushan award and its awardee's office
  dbr:Banga_Bhushan a dbo:Award .
  ?bangaBhushanAwardee dbo:recipientOf dbr:Banga_Bhushan ;
                      dbo:office ?bangaBhushanAwardeeOffice .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
170,24,test,Give me the birth place of the awardee of People's Artist of Russia and domain of the profession of John Scholey.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?result <http://dbpedia.org/ontology/leaderTitle> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeBirthPlace ?scholeyProfessionDomain WHERE {
  # Find an awardee of ""People's Artist of Russia""
  ?person dbo:honoraryTitle dbr:People%27s_Artist_of_Russia .
  
  # Get the birthplace of this person
  ?person dbo:birthPlace ?awardeeBirthPlace .

  # Find John Scholey and his profession
  ?johnScholey foaf:name ""John Scholey""@en .
  ?johnScholey dbo:occupation ?profession .

  # Get the domain of the profession
  ?profession dbo:field ?scholeyProfessionDomain .
}
```",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
465,69,test,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
    # Ferdinand I's children who are royalty
    ?child1 dbo:parent dbr:Ferdinand_I,_Holy_Roman_Emperor .
    ?child1 a dbo:Monarch .

    # Successor of one of these royal children
    ?successor dbo:predecessor ?child1 .

    # Charles Orlando's parent
    ?charles_orlando_parent dbo:child dbr:Charles_Orlando,_Dauphin_of_France .
    
    # Child of Charles Orlando's parent
    ?child2 dbo:parent ?charles_orlando_parent .

    # Ercole II d'Este's parent
    ?ercole_parent dbo:child dbr:Ercole_II_d%27Este .

    # Successor of the child identified in step 4
    ?successor2 dbo:predecessor ?child2 .

    # Match the successor from Ferdinand I's lineage with the successor from Charles Orlando's lineage
    FILTER (?successor = ?successor2)

    # Find the spouse of the royal child from Ferdinand I
    ?spouse dbo:spouse ?child1 .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
791,69,test,"Give me the predecessor of the child of Emperor Takakura and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v7 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Emperor Takakura's child
  ?child1 dbo:parent dbr:Emperor_Takakura .
  
  # Predecessor of Emperor Takakura's child
  ?predecessor dbo:successor ?child1 .

  # Emperor Antoku's father (royalty and office holder)
  ?father dbo:spouse ?antokuMother .
  ?father a dbo:Monarch ;
          dbo:officeHolder true .

  # Spouse of Emperor Takakura
  ?takakuraSpouse dbo:spouse dbr:Emperor_Takakura .

  # Linking the relationships
  ?child2 dbo:parent ?predecessor .
  ?child2 a dbo:Monarch .
  
  ?antokuMother dbo:spouse ?father .
  ?takakuraReference dbo:referenceTo dbr:Emperor_Takakura .
  ?takakuraSpouse dbo:relatedTo ?takakuraReference .

}
```

This query attempts to capture the complex relationships described in the question. It identifies the necessary entities and their connections through DBpedia's ontology, focusing on royalty and office holder roles.",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
453,8,test,"Give me the religion of the author, that is a cardinal and a cleric, of Apologia Pro Vita Sua and religion of Newfoundland Colony.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/religion> ?result . <http://dbpedia.org/resource/Apologia_Pro_Vita_Sua> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Newfoundland_Colony> <http://dbpedia.org/ontology/religion> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cardinal>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorReligion ?colonyReligion WHERE {
  # Find the religion of John Henry Newman
  dbr:John_Henry_Newman dbo:religion ?authorReligion .
  
  # Find the predominant religion in Newfoundland Colony
  dbr:Newfoundland_and_Labrador dbo:religion ?colonyReligion .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
965,71,test,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of the parent of Louise Mountbatten and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v7 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v8 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  # George Mountbatten's birth name
  VALUES (?georgeBirthName) { ""George Charles Maurice"" }
  
  # Louise Mountbatten's parent (Queen Victoria)
  VALUES (?louiseParent) { dbr:Queen_Victoria }

  # Parent of Queen Victoria
  ?parent dbo:spouse ?louiseParent .
  
  # Check if the parent is a noble
  OPTIONAL {
    ?parent dbo:nobleTitle ?nobleTitle .
  }
  
  # Ensure the parent has a birth name
  ?parent rdfs:label ?parentName .
  
  FILTER EXISTS { ?parent dbo:nobleTitle ?nobleTitle } .
}
```",9,12,10,3,3,3,3,71,0,0,2,0,0.0,0
281,26,test,"Give me the awardee of the award of Alfred Warden and commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of Medal bar.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:award dbr:Alfred_Warden_Medal .
  ?conflict dbo:commander ?person .
  ?conflict a dbo:MilitaryConflict .
  ?conflict dbo:participant dbr:Roy_Boehm .
  ?person dbo:award dbr:Medal_of_Honor_bar .
}
```

This query assumes:
- There is an award named ""Alfred Warden Medal"" and a ""Medal of Honor bar"".
- Roy Boehm participated in a military conflict.
- The person we are looking for was both awarded the Alfred Warden Medal and the Medal of Honor bar, and commanded in a military conflict involving Roy Boehm.",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
933,57,test,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and reference to the birth name of the professional in Musician and band of Mike Elliott (saxophonist).",SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band ?alanWarnerBand ?mikeElliottBirthName
WHERE {
  # Find the band associated with Alan Warner
  ?alanWarner a dbo:MusicArtist ;
              foaf:name ""Alan Warner"" .
  
  ?alanWarnerBand a dbo:MusicalGroup ;
                  dbo:member ?alanWarner ;
                  dbo:organization ?organization .

  # Find Mike Elliott's birth name
  ?mikeElliott a dbo:MusicArtist ;
               foaf:name ""Mike Elliott"" .
  
  ?mikeElliottBirthName foaf:name ?birthName ;
                        foaf:nick ?nickName ;
                        dbr:Mike_Elliott (saxophonist) .

}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
417,57,test,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and spouse of Princess Caroline-Mathilde of Denmark and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Frederick Francis III and his spouse
  dbr:Friedrich_Franz_III_of_Mecklenburg-Schwerin dbo:spouse dbr:Caroline-Mathilde_of_Denmark .
  
  # Children of Frederick Francis III
  ?child dbo:parent dbr:Friedrich_Franz_III_of_Mecklenburg-Schwerin ;
         a dbo:Person .

  # Grandchildren of Frederick Francis III who are royalty
  ?grandchild dbo:parent ?child ;
              a dbo:Monarch .

  # Leader of Colony of Greenland and their father
  ?leader dbo:position dbr:Governor_of_Greenland .
  ?father dbo:child ?leader .

  # Child of the leader's father
  ?relatedChild dbo:parent ?father .

  # Find the intersection where grandchild is also relatedChild
  FILTER (?grandchild = ?relatedChild)
}
```

This query assumes:
- The role ""leader"" is represented by a position like ""Governor of Greenland.""
- DBpedia has structured data for these historical figures and their relationships.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
933,68,test,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to the birth name of the professional in Musician.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v6 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandOfAlanWarner ?bandOfTheRamonesSound ?birthName
WHERE {
  # Find Alan Warner's band
  ?alanWarner a dbo:Musician ;
              foaf:name ""Alan Warner"" .
  
  ?alanWarner dbo:member ?bandOfAlanWarner .
  ?bandOfAlanWarner a (dbo:Band | dbo:Organization) .

  # Find the band of The Ramones Sound
  ?theRamonesSound a dbo:MusicalArtist ;
                   foaf:name ""The Ramones Sound"" .
  
  ?theRamonesSound dbo:member ?bandOfTheRamonesSound .
  ?bandOfTheRamonesSound a (dbo:Band | dbo:Artists) .

  # Get Alan Warner's birth name
  ?alanWarner foaf:name ?birthName .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
456,64,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of the actor of the movie, that is a work and a television show, with Ross Newton and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandOfBand WHERE {
  # Step 1: Find the work featuring Ross Newton
  ?work dbo:starring dbr:Ross_Newton .
  
  # Step 2: Identify an actor from this work and their spouse
  ?actor dbo:actedIn ?work ;
         foaf:mbox ?email .
  OPTIONAL { ?actor dbo:spouse ?spouse . }
  
  # Step 3: Find Alan Doyle's band
  dbr:Alan_Doyle dbo:bandMember ?alanBand .
  
  # Step 4: Identify the musical artist of that band
  ?alanBand dbo:musicalArtist ?musicalArtist .
  
  # Step 5: Find the band of this musical artist
  ?musicalArtist dbo:band ?bandOfBand .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
329,24,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?countryInWET ?birthplaceOrgCountry
WHERE {
  # Part 1: Find country in Western European Time region
  ?region rdfs:label ""Western European Time""@en .
  ?country dbo:timeZone ?region ;
           a dbo:Country .

  BIND(?country AS ?countryInWET)

  # Part 2: Find birthplace organization and country of Robert Bates (loyalist)
  dbr:Robert_Bates_(loyalist) dbo:birthPlace ?birthplace .
  ?birthplace a dbo:Organisation ;
              a dbo:Country .

  BIND(?birthplace AS ?birthplaceOrgCountry)
}
```",4,7,5,2,2,2,3,28,0,0,531,0,0.0,0
456,71,test,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Lamont Cranston is The Shadow
  dbr:The_Shadow dbo:alterEgoOf ?professionalAlterEgo .
  
  # Professional alter ego related to a band member of Alan Doyle's band (Great Big Sea)
  ?professionalAlterEgo dbo:memberOfBand ?band .
  ?band dbo:bandMember ?greatBigSeaMember .
  ?greatBigSeaMember dbo:associatedBand dbr:Alan_Doyle .

  # Ross Newton and another band member from The Pogues
  dbr:The_Pogues dbo:bandMember ?rossNewton .
  ?rossNewton rdfs:label ""Ross Newton""@en .
  
  ?professionalAlterEgo dbo:memberOfBand ?pogues .
  ?pogues dbo:bandMember ?anotherPogue .
  ?anotherPogue rdfs:label ?pogueLabel .

  # Work and television show
  ?work a dbo:TelevisionShow ;
       dbo:actor ?actor .
  
  ?actor dbo:spouse ?spouse .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
326,8,test,"Give me the person decedent at Rancho Mirage, California and professional in the profession of Susanne Lewis.","SELECT ?result WHERE { <http://dbpedia.org/resource/Susanne_Lewis> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Rancho_Mirage,_California> . ?result <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?deathPlace ?profession
WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Rancho_Mirage ;
          foaf:name ""Susanne Lewis""@en .
  OPTIONAL { ?person dbo:occupation ?profession . }
}
```

### Explanation:

- **PREFIX**: We define prefixes for common DBpedia properties and classes.
- **SELECT**: We select the person, their death place, and optionally their profession.
- **WHERE**:
  - `?person a dbo:Person` ensures that we are dealing with a person entity.
  - `?person dbo:deathPlace dbr:Rancho_Mirage` filters for those who died in Rancho Mirage. Note that you might need to adjust the resource identifier if ""Rancho Mirage"" is not directly available as `dbr:Rancho_Mirage`.
  - `foaf:name ""Susanne Lewis""@en` specifies the professional name.
  - The optional clause for occupation allows us to retrieve their profession if available.

This query assumes that DBpedia has structured data for these properties. Adjustments might be necessary based on actual data availability and structure in DBpedia.",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
645,71,test,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in the force of the commander in Siege of Madrid and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/leader> ?result . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v7 <http://dbpedia.org/property/office> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify the native of Restoration (Spain) who is a president and politician
  ?person dbo:nationality dbr:Spain ;
          dbo:officeHeld ?presidency ;
          rdf:type dbo:Politician .

  # Ensure the person was active during the Restoration period
  ?presidency dbo:timePeriod dbr:Restoration_(Spain) .

  # Identify the military force associated with this person
  ?person dbo:militaryService ?militaryForce .

  # Find an event that is a military conflict and societal event
  ?event rdf:type dbo:MilitaryConflict, dbo:SocietalEvent .

  # Ensure the person was involved in this event as a commander in the Siege of Madrid
  ?person dbo:commanderIn ?siege ;
          dbo:participatedIn ?event .
  
  # Identify the siege and ensure it is related to the Siege of Madrid
  ?siege rdfs:label ""Siege of Madrid""@en .

  # Ensure the person led an organization or government agency
  ?person dbo:leaderOf ?organization ;
          rdf:type dbo:GovernmentAgency, dbo:Organization .
}
```",9,16,10,3,3,3,3,71,0,0,2,0,0.0,0
465,65,test,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successor1 ?successor2 WHERE {
  # Anne of Brittany's child who is a royalty
  ?anneChild dbo:parent dbr:Anne_of_Brittany ;
            rdf:type dbo:Monarch .
  
  # Successor of Anne's royal child
  ?anneSuccessor dbo:predecessor ?anneChild .

  # Alfonso I d'Este's child
  ?alfonsoChild dbo:parent dbr:Alfonso_I_d%27Este ;
               rdf:type dbo:Person .
  
  # Spouse of Anne's royal child
  ?spouse dbo:spouse ?anneChild ;
          rdf:type dbo:Monarch .

  # Parent of Elizabeth of Austria (1526–1545)
  ?elizabethParent dbo:child dbr:Elizabeth_of_Austria_(1526%E2%80%931545) .
  
  # Royalty among parent's children
  ?royalChild dbo:parent ?elizabethParent ;
              rdf:type dbo:Monarch .

  # Successor of this royalty
  ?successor2 dbo:predecessor ?royalChild .

  # Final successor we are interested in
  ?finalSuccessor dbo:predecessor ?anneSuccessor .
  
  FILTER(?spouse = ?alfonsoChild)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
130,18,test,"Give me the figure known as the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama and entity in the administration, that is American, of .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v2 <http://dbpedia.org/ontology/director> ?v1 . ?v3 <http://dbpedia.org/property/governor> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?film ?soccerClub ?organization WHERE {
  ?person dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Madison,_Alabama ;
          dbo:occupation dbr:Coolie ;
          dbo:occupation dbr:College_coach .

  ?administration dbo:member ?person .
  
  ?film dbo:director ?person .
  ?soccerClub dbo:coach ?person .
  ?organization dbo:founder ?person .
}
```

This query attempts to find a person who is:
- Native of Madison, Alabama.
- Has occupations related to being a coach and specifically a college coach.
- Is involved in some administrative role.
- Is associated with a film as a director, a soccer club as a coach, and an organization as a founder.",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
839,62,test,"Give me the band of Matthias Röhr and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v0 <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMatthiasRöhr ?bandKevinRussellPersona ?bandPeterSchorowskyMember
WHERE {
  # Matthias Röhr's band
  OPTIONAL { 
    dbr:Matthias_Röhr dbo:memberOf ?bandMatthiasRöhr .
  }

  # Person born as a musical artist and persona of Kevin Russell (musician)
  OPTIONAL {
    ?person dbo:birthPlace ?place .
    ?person dbo:occupation dbr:Musical_artist .
    ?persona rdfs:label ""Kevin Russell""@en .
    ?persona dbo:aliasOf ?person .
    ?person dbo:memberOf ?bandKevinRussellPersona .
  }

  # Band of Peter Schorowsky's member
  OPTIONAL {
    ?member dbo:memberOf ?bandPeterSchorowskyMember .
    ?bandPeterSchorowskyMember a dbo:Band ;
                               a dbo:MusicalGroup .
    ?bandPeterSchorowskyMember dbo:member ?dbr:Peter_Schorowsky .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
216,26,test,Give me the party of Campbell Newman and office of the mayor of Ros Bates and administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?office ?administration
WHERE {
  # Campbell Newman's political party
  dbr:Campbell_Newman dbo:politicalParty ?party .

  # Ros Bates' office as mayor
  dbr:Ros_Bates dbo:positionHeld ?office .
  FILTER(CONTAINS(LCASE(STR(?office)), ""mayor""))

  # Designer of Woolfe: The Red Hood Diaries and their administration
  {
    SELECT ?designer WHERE {
      dbr:Woolfe:_The_Red_Hood_Diaries dbo:creator ?designer .
    }
  } UNION {
    SELECT ?designer WHERE {
      dbr:Woolfe:_The_Red_Hood_Diaries dbo:director ?designer .
    }
  }

  # Assuming the designer's administration is linked through a known property
  OPTIONAL { ?designer dbo:worksFor ?administration . }
}
```

This query does the following:
- Retrieves Campbell Newman's political party.
- Finds Ros Bates' office, specifically filtering for ""mayor"".
- Identifies the creator or director of ""Woolfe: The Red Hood Diaries"" and attempts to find any administration they worked under.

Note: This query assumes that the relevant properties (`politicalParty`, `positionHeld`, `creator`, `director`, `worksFor`) are correctly linked in DBpedia. Adjustments may be necessary based on actual data availability and structure.",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
773,61,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfSuccessor WHERE {
  # Step 1: Identify Carloman of Bavaria's father
  dbr:Claudius_of_Bavaria dbo:child dbr:Carloman_of_Bavaria .
  
  # Step 2: Ensure the father is both an office holder and royalty
  ?father dbo:officeHolder ?office .
  ?father a dbo:Monarch .

  # Step 3: Find the child of this father who is royalty
  ?child dbo:parent ?father ;
         a dbo:Monarch .

  # Step 4: Determine the parent of this royal child
  ?parentOfChild dbo:child ?child .

  # Step 5: Identify the successor of this royal child
  ?successor dbo:predecessor ?child .

  # Step 6: Find the parent of this successor
  ?parentOfSuccessor dbo:child ?successor .
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
445,61,test,Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the award of the commander in Battle of Saint-Mihiel.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  # Find the award established on March 10, 1820
  ?award dbo:dateEstablished ""1820-03-10""^^xsd:date ;
         dbo:recipient ?person .

  # Ensure this person is also a recipient of the ""Commander"" award for the Battle of Saint-Mihiel
  ?battleAward dbo:recipient ?person ;
               dbp:name ""Battle of Saint-Mihiel"" ;
               dbo:honorificTitle ""Commander"" .
  
  # Get the death place of this person
  ?person dbo:deathPlace ?deathPlace .
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
129,28,test,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and professional in the mayor of 1999 West Dunbartonshire Council election and associated musical artist of the person born as Tahj Malik Chandler.","SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?musicalArtist WHERE {
  # Step 1: Find the actor associated with Dreamville Presents: Revenge
  ?production dbr:Dreamville_Presents:_Revenge .
  ?actor dbo:starringIn ?production .

  # Step 2: Check if this actor is also an organization
  ?actor a dbo:Organization .

  # Step 3: Check if this organization was professional in the 1999 West Dunbartonshire Council election
  ?organization dbo:profession ?mayor .
  ?mayor dbo:electedDuring dbr:1999_West_Dunbartonshire_Council_election .

  # Ensure the actor and organization are the same entity
  FILTER (?actor = ?organization)

  # Step 4: Find Tahj Malik Chandler's associated musical artist (Lil Wayne)
  dbr:Lil_Weezy_Fevg a dbo:MusicalArtist .
  ?musicalArtist dbo:associatedWith dbr:Lil_Weezy_Fevg .

  # Ensure the organization is also the musical artist
  FILTER (?organization = ?musicalArtist)
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
465,67,test,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
    # Step 1: Charles Orlando, Dauphin of France
    ?charlesOrlando a dbo:Dauphin ;
                   foaf:parent ?parentOfCharles .

    # Step 2: Parent's child who is royalty
    ?childOfParent a dbo:RoyalFamilyMember ;
                  foaf:parent ?parentOfCharles .

    # Step 3: Elizabeth of Austria (1526–1545)
    ?elizabeth dbr:Elizabeth_of_Austria_(1526-1545) ;
               foaf:parent ?parentOfElizabeth .

    # Step 4: Parent's child who is royalty and successor to Ercole II d'Este
    ?childOfParent2 a dbo:RoyalFamilyMember, dbo:Duke ;
                    foaf:parent ?parentOfElizabeth ;
                    dbo:successor dbr:Ercole_II_d%27Este .

    # Step 5: Spouse of the royalty from step 4
    ?spouseOfChild2 dbo:spouse ?childOfParent2 .

    # Step 6: Child of the spouse who is royalty
    ?childOfSpouse a dbo:RoyalFamilyMember ;
                   foaf:parent ?spouseOfChild2 .

    # Step 7: Successor of the child from step 6
    ?successor dbo:predecessor ?childOfSpouse .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
965,65,test,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parentNoble WHERE {
  ?princeGeorge dbp:name ""Prince George of Battenberg""@en .
  
  ?parentNoble dbo:child ?princeGeorge ;
              rdf:type dbo:Noble .

  ?royalChild dbo:parent ?parentNoble ;
              rdf:type dbo:Royalty .

  ?politician dbp:dateOfBirth ""1854-05-24""^^xsd:date ;
              rdf:type dbo:Politician .

  ?princessVictoria dbp:name ""Princess Victoria of Hesse and by Rhine""@en .
  ?spouse1 dbo:spouse ?princessVictoria .

  ?spouse2 dbo:spouse ?spouse1 .

  ?royalChild dbo:spouse ?spouse2 .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
274,26,test,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie and associated musical artist of the actor, that is a musical artist, of Imagine the Sound and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?actor ?professionalAssociation
WHERE {
  # Find Dizzy Gillespie and his band members who are musical artists
  dbr:Dizzy_Gillespie a dbo:MusicalArtist .
  
  ?gillespieBandMember dbo:memberOf dbr:Dizzy_Gillespie ;
                      a dbo:MusicalArtist .

  # Find an actor associated with ""Imagine the Sound""
  ?actor a dbo:Actor ;
         dbo:associatedWith dbr:Imagine_the_Sound ;
         a dbo:MusicalArtist .

  # Find professional associations of this actor
  ?actor dbo:professionalIn ?professionalAssociation .
}
```",5,7,6,2,3,2,3,28,0,0,3,0,0.0,0
465,71,test,"Give me the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v7 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?spouse WHERE {
  # Ercole II d'Este relationships
  ?ercole2 dbo:parent ?parentErcole2 .
  ?childErcole2 dbo:parent ?parentErcole2 .
  FILTER(?ercole2 = ?childErcole2) .
  ?successorErcole2 dbo:succ ?successor .

  # Charles Orlando, Dauphin of France relationships
  ?charlesOrlando dbo:parent ?parentCharlesOrlando .
  ?spouseParentChild dbo:mother ?parentCharlesOrlando ;
                     a dbo:Person .
  FILTER(?spouseParentChild = ?charlesOrlando) .
  ?spouseParentChild dbo:spouse ?spouse .

  # Elizabeth of Austria relationships
  ?elizabethAustria dbo:parent ?parentElizabethAustria .
  ?childRoyalty dbo:parent ?parentElizabethAustria ;
                a dbo:Monarch .

  FILTER(?successor = ?childRoyalty) .
  FILTER(?spouse = ?childRoyalty) .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
976,59,test,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderOffice ?mayorOffice
WHERE {
  # Kemal Kılıçdaroğlu's administration leader office
  dbr:Kemal_Kılıçdaroğlu dbo:positionHeld ?administration.
  ?administration a dbo:Organisation.
  ?administration dbo:leader ?leader.
  ?leader rdfs:label ""Kemal Kılıçdaroğlu""@en.
  ?administration dbo:office ?leaderOffice.

  # Millet İttifakı's mayor office
  dbr:Millet_İttifakı a dbo:PoliticalParty;
                     dbo:country dbr:Türkiye.
  ?mayor a dbo:Politician;
         dbo:holdsOffice ?mayorOffice.
  ?mayorOffice rdfs:label ?officeLabel.
  FILTER(CONTAINS(LCASE(?officeLabel), ""mayor"") && CONTAINS(LCASE(?officeLabel), ""turkish""))
}
```",6,14,7,3,2,3,3,71,0,0,3,0,0.0,0
926,66,test,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of the child of Ahmed III.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Abdulaziz's father and his father
  ?abdulaziz dbo:father ?father1 .
  ?father1 rdfs:label ""Abdul Rahman bin Faisal""@en .
  ?father1 dbo:father ?father2 .
  ?father2 rdfs:label ""Faisal bin Turki""@en .

  # Child of Faisal bin Turki who is royalty
  ?child dbo:father ?father2 .
  ?child rdf:type dbo:Monarch .

  # Beyhan Sultan's parent and successor of Ahmed III
  ?beyhan dbp:parent ?mustafa3 .
  ?mustafa3 rdfs:label ""Mustafa III""@en .
  ?ahmed3 dbp:succeededBy ?mahmud1 .
  ?ahmed3 rdfs:label ""Ahmed III""@en .
  ?mahmud1 rdfs:label ""Mahmud I""@en .

  # Find the person who fits both criteria
  FILTER(?child = ?person)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
773,69,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the successor of Charles the Bald.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild
WHERE {
  # Carloman of Bavaria's father who is an office holder and royalty
  ?carlomanFather a dbo:Monarch ;
                  dbo:spouse ?fatherSpouse ;
                  dbo:child dbr:Claudius_of_Bavaria .

  # Bernard (son of Charles the Fat)
  ?charlesTheFat a dbo:Monarch ;
                 dbo:child ?bernard .
  
  # Parent of Bernard
  ?parentOfBernard dbo:child ?bernard ;
                   dbo:spouse ?fatherSpouse .

  # Parent of the parent of Bernard (grandparent of Bernard)
  ?grandparentOfBernard dbo:child ?parentOfBernard .

  # Successor of Charles the Bald
  ?charlesTheBald a dbo:Monarch ;
                  dbo:succeededBy ?successorOfCharlesTheBald .

  # The spouse of Carloman's father is also the parent of the grandparent of Bernard
  ?fatherSpouse dbo:child ?grandparentOfBernard .

  # Find the child (royalty) of this spouse
  ?childOfFatherSpouse a dbo:Monarch ;
                       dbo:parent ?fatherSpouse .

  # The parent of this child is what we need to find
  ?parentOfChild dbo:child ?childOfFatherSpouse .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
281,25,test,"Give me the awardee of Volunteer Decoration and commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?eventBoehm ?conflictCosgrave
WHERE {
  # Roy Boehm as awardee and commander in a military conflict
  ?personBoehm dbr:Roy_Boehm .
  ?awardBoehm dbo:recipient ?personBoehm ;
             rdf:type dbo:Award ;
             rdfs:label ""Volunteer Decoration""@en .
  ?eventBoehm dbo:commander ?personBoehm ;
              rdf:type dbo:MilitaryConflict .

  # Lawrence Moore Cosgrave as awardee in a military conflict
  ?personCosgrave dbr:Larry_Cosgrave .
  ?awardCosgrave dbo:recipient ?personCosgrave ;
                 rdf:type dbo:Award ;
                 rdfs:label ?conflictLabel .
  ?conflictCosgrave dbo:event ?awardCosgrave ;
                    rdf:type dbo:MilitaryConflict .

}
```

This query attempts to find:

- A military conflict (`?eventBoehm`) where Roy Boehm was both an awardee of the ""Volunteer Decoration"" and a commander.
- A military conflict (`?conflictCosgrave`) associated with Lawrence Moore Cosgrave as an awardee.

Please note that this query assumes certain relationships and labels in DBpedia, which might need adjustments based on actual data availability and structure. The query uses `rdfs:label` to match the award name ""Volunteer Decoration"" and assumes a direct relationship between awards and military conflicts for Lawrence Moore Cosgrave.",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
130,19,test,"Give me the figure known as the film, that is a soccer club and an organisation, of Candice Storey Lee and entity in the administration, that is American, of the award of Živko Ključe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v4 . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?soccerClub ?organization ?americanAdmin ?award WHERE {
  # Candice Storey Lee's films
  ?film dbo:starring dbr:Candice_Storey_Lee .
  
  # Soccer club related to the film
  ?film dbo:subject dbr:Soccer_club .
  ?soccerClub a dbo:SoccerClub ;
              dbo:relatedTo ?film .

  # Organization related to the film
  ?organization a dbo:Organization ;
                dbo:relatedTo ?film .

  # American in administration of an award
  ?americanAdmin a dbo:Person ;
                 dbo:nationality dbr:United_States ;
                 dbo:administratorOf ?award .
  
  # Entity Živko Ključe related to the award
  ?award dbo:recipient dbr:Živko_Ključe .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
773,70,test,"Give me the spouse of the father of Charles the Fat and parent of the successor of the child, that is a royalty, of Louis the Pious and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?v7 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Charles the Fat's father
  ?charlesFat dbo:father ?fatherOfCharlesFat .
  
  FILTER (dbr:Charles_the_Fat = ?charlesFat) .

  # Step 2: Father's spouse
  ?fatherOfCharlesFat dbo:spouse ?spouse .

  # Step 3: Louis the Pious' child who is royalty and their successor
  ?louisPious dbo:child ?royaltyChild .
  
  FILTER (dbr:Louis_the_Pious = ?louisPious) .
  ?royaltyChild a dbo:Monarch .
  ?successor dbo:predecessorOf ?royaltyChild .

  # Step 4: Successor's parent should be the spouse
  ?successor dbo:parent ?spouse .

  # Step 5: Carloman of Bavaria's father who is an office holder and royalty
  ?carlomanBavaria dbo:father ?fatherOfCarloman .
  
  FILTER (dbr:Carloman_of_Bavaria = ?carlomanBavaria) .
  ?fatherOfCarloman a dbo:Monarch ;
                   a dbo:OfficeHolder .

  # Step 6: Father's child who is royalty
  ?fatherOfCarloman dbo:child ?royaltyChild2 .
  
  FILTER (?royaltyChild2 = ?spouse)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
47,63,test,"Give me the office of the awardee of Padma Vibhushan and office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of Banga Bhushan.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?v4 . ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardee ?officePadmaVibhushan ?officeOperationGreenHunt ?officeBangaBhushan
WHERE {
  # Padma Vibhushan awardees and their offices
  ?awardee dbo:honoraryTitle dbr:Padma_Vibhushan .
  OPTIONAL { ?awardee dbo:positionHeld ?officePadmaVibhushan . }

  # Politicians involved in Operation Green Hunt and their offices
  ?politician dbp:involvement ""Operation Green Hunt"" ;
              a dbo:Politician ;
              dbo:positionHeld ?officeOperationGreenHunt .

  # Banga Bhushan awardees and their offices
  ?awardeeBanga dbo:honoraryTitle dbr:Banga_Bhushan .
  OPTIONAL { ?awardeeBanga dbo:positionHeld ?officeBangaBhushan . }

  FILTER (?awardee = ?awardeeBanga) # Assuming the same person can be both awardees
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
965,67,test,"Give me the spouse of Prince Louis of Battenberg and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v5 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Prince Louis of Battenberg and his spouse
  dbr:Prince_Louis_of_Battenberg dbo:spouse ?spouse .

  # George Mountbatten, 2nd Marquess of Milford Haven
  ?georgeMountbatten a dbo:Marquess ;
                     foaf:name ""George Mountbatten"" ;
                     dbo:birthName ?birthName .

  # Parent relationship to noble person (George Mountbatten)
  ?spouse dbo:child ?georgeMountbatten .

  # Politician born on 1854-05-24
  ?politician a dbo:Politician ;
              dbo:birthDate ""1854-05-24""^^xsd:date ;
              dbo:child ?royaltyChild .

  # Royalty child of the politician
  ?royaltyChild a dbo:Royalty .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
216,60,test,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/coach> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Find the organization and soccer club related to Croatia U21
  ?club a dbo:SoccerClub ;
        dbo:coach ?manager .

  # Ensure the manager is also a sports manager, soccer manager, and player
  ?manager a dbo:SportsManager , dbo:SoccerManager , dbo:SoccerPlayer .

  # Find the team of the person born who fits these roles
  ?team dbo:player ?person .
  ?person dbo:birthPlace ?place ;
          dbo:deathDate ?deathDate .

  # Relate to Pavel Vezhinov's death
  ?vezhinov dbr:Pavel_Vezhinov ;
            dbo:deathDate ?deathDate .

  # Ensure the club is related to Croatia U21
  ?club dbo:team ?croatiaU21 .
  dbr:Croatia_U21 a dbo:SoccerTeam .

  FILTER(?place = ?vezhinov)
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
645,63,test,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and commander in the force of the commander in Siege of Madrid and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Camilo Menéndez Tolosa's office
  ?office dbo:type/dbo:subClassOf* dbo:GovernmentAgency ;
          dbo:type/dbo:subClassOf* dbo:Organization .
  
  ?camilo dbr:Camilo_Menéndez_Tolosa ;
          dbo:positionHeld ?office .

  # Francisco Largo Caballero's role in the Siege of Madrid
  ?event dbr:Siege_of_Madrid ;
         a dbo:MilitaryConflict, dbo:SocietalEvent .
  
  ?francisco dbr:Francisco_Largo_Caballero ;
             dbo:commanderIn ?force .

  ?force dbo:partOf ?event .

  # Find the leader of the office
  ?office dbo:leader ?leader .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
267,19,test,"Give me the coach of the player, that is a soccer club, in Rasoul Khatibi and person born on the birth date of the reference to Dan Cathy.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://dbpedia.org/ontology/coach> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthDate> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . ?v0 <http://dbpedia.org/ontology/birthDate> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?coach WHERE {
  # Step 1: Get Rasoul Khatibi's soccer club
  ?rasoulKhatibi a dbo:SoccerPlayer ;
                 dbo:playsFor ?soccerClub .

  # Step 2: Get Dan Cathy's birth date
  dbr:Dan_Cathy dbo:birthday ?danCathyBirthDate .

  # Step 3: Find any person born on the same date as Dan Cathy who is associated with a soccer club
  ?person dbo:birthday ?sameBirthDate ;
          dbo:playsFor ?soccerClub .
  
  FILTER (?sameBirthDate = ?danCathyBirthDate)

  # Step 4: Get the coach of that soccer club
  ?soccerClub dbo:coach ?coach .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
417,60,test,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?childOfChild
WHERE {
  # Alexandrine of Mecklenburg-Schwerin's spouse
  ?spouse a dbo:Monarch ;
          dbo:spouse dbr:Alexandrine_of_Mecklenburg-Schwerin .

  # Their child who is royalty
  ?child a dbo:Monarch ;
         dbo:parent ?spouse .

  # Knud, Hereditary Prince of Denmark's child
  ?knudsChild a dbo:Monarch ;
              dbo:parent dbr:Knud_Hereditary_Prince_of_Denmark .

  # Parent (spouse) of Knud's child
  ?parentOfKnudsChild a dbo:Monarch ;
                      dbo:spouse ?knudsChild .

  # Child of this parent
  ?childOfParent a dbo:Monarch ;
                 dbo:parent ?parentOfKnudsChild .

  # The final condition to find the ""child of the child""
  ?finalChild a dbo:Monarch ;
              dbo:parent ?child .
  
  FILTER(?child = ?childOfParent)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
892,68,test,"Give me the landmark at elevation of the award of the member of E-girls and entity in the profession of the true self of Enrico Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/awards> ?v6 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/province> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Step 1: Find a member of E-girls
  ?member dbo:memberOf dbr:E-girls .
  
  # Step 2: Find an award associated with this member
  ?award dbo:recipient ?member .
  
  # Step 3: Determine the elevation related to this award
  ?award dbo:elevation ?elevation .
  
  # Step 4: Identify Enrico Crolla's profession
  dbr:Enrico_Crolla dbo:occupation ?profession .
  
  # Step 5: Find entities in administration, that are Italian, a region, a settlement, and an administrative region
  ?entity dbo:country dbr:Italy ;
          rdf:type/(dbo:Region|dbo:Settlement|dbo:AdministrativeRegion) ;
          dbo:partyAffiliation dbr:Democratic_Party_(Italy) .
  
  # Step 6: Find the landmark at this elevation
  ?landmark dbo:elevation ?elevation ;
            dbo:country dbr:Italy ;
            rdf:type/(dbo:Region|dbo:Settlement|dbo:AdministrativeRegion) .
}
```",8,12,9,3,3,3,3,71,0,0,2,0,0.0,0
933,63,test,"Give me the reference to the birth name of Alan Warner (musician) and band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName ?bandName WHERE {
  # Alan Warner's birth name
  dbr:Alan_Warner_(musician) dbo:birthName ?birthName .

  # Band associated with Alan Warner that is both a group and an organization
  ?band dbo:member dbr:Alan_Warner_(musician) .
  ?band rdf:type dbo:Band ;
        rdf:type dbo:Organization .
  
  # Get the name of the band
  ?band foaf:name ?bandName .

  # The Ramones as a musical artist
  OPTIONAL {
    dbr:The_Ramones rdf:type dbo:MusicalArtist .
  }
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
382,19,test,"Give me the landmark at elevation of the award of the reference, that is a college coach and a coach, to Harry Combes and birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?elevation WHERE {
  # Find Harry Combes and his awards
  ?harry a dbo:Person ;
         foaf:name ""Harry Combes"" ;
         dbo:award ?award .
  
  FILTER EXISTS { ?award dbo:recipient ?harry . }
  FILTER EXISTS { ?award dbo:category ?category .
                 VALUES ?category { dbo:CollegeCoach dbo:Coach } }

  # Find Bonner SC manager and their birthplace
  ?manager a dbo:Person ;
           foaf:name ?name ;
           dbo:birthPlace ?birthPlace .

  FILTER EXISTS { ?manager dbo:occupation ?occupation .
                 VALUES ?occupation { dbo:SoccerManager dbo:Athlete dbo:SportsManager } }
  
  # Find the landmark at the elevation of the award and birthplace
  ?landmark a dbo:Landscape ;
            dbo:elevation ?elevation .

  # Assuming some logical connection between the award, birthplace, and landmark
  FILTER (?award = ?birthPlace || ?award = ?landmark)
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
865,60,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v1 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry WHERE {
  # Step 1: Identify Abul Maal Abdul Muhith
  ?abulMaal a dbo:Person ;
            foaf:name ""Abul Maal Abdul Muhith""@en .

  # Step 2: Find his father
  ?father dbo:child ?abulMaal .
  
  # Step 3: Identify a sibling (child of the same father)
  ?sibling dbo:child ?father ;
           dbp:deathPlace dbr:Patna .

  # Step 4: Find the residence of this person who died in Patna
  ?residence dbo:resident ?sibling .
  
  # Step 5: Determine the native country of the residence
  ?residence dbo:nativeCountry ?nativeCountry .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
465,58,test,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
    # Ferdinand I, Holy Roman Emperor
    VALUES (?ferdinand) { dbr:Ferdinand_I,_Holy_Roman_Emperor }
    
    # Ercole II d'Este, Duke of Ferrara
    VALUES (?ercole) { dbr:Ercole_II_d%27Este }

    # Charles Orlando, Dauphin of France
    VALUES (?charlesOrlando) { dbr:Charles_Orland }

    # Find the successor of Ercole II d'Este
    ?successor dbo:predecessor ?ercole .
    
    # Find children of Ferdinand I who are royalty
    ?child dbo:parent ?ferdinand ;
           a dbo:Monarch .

    # Find parent of Charles Orlando and their royal child
    ?parent dbo:child ?charlesOrlando .
    ?royalChild dbo:parent ?parent ;
                a dbo:Monarch .

    # Determine the spouse of the identified royal child
    OPTIONAL { ?child dbo:spouse ?spouse . }
    OPTIONAL { ?royalChild dbo:spouse ?spouse . }

    FILTER(?successor = ?child || ?successor = ?royalChild)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
582,58,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to Japan and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/property/nickname> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father ?teamNickname WHERE {
  # Find Masami Nagasawa's father
  ?masami a dbo:Person ;
          foaf:familyName ""Nagasawa"" ;
          dbo:mother ?mother .
  
  ?mother dbo:spouse ?father .

  # Ensure the father is an athlete, soccer manager, and sports manager
  ?father a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .

  # Connect the father to Japan
  ?father dbp:nationality dbr:Japan .

  # Find Hajime Moriyasu's team nickname
  ?hajime a dbo:Person ;
          foaf:name ""Hajime Moriyasu"" .
  
  ?team dbo:manager ?hajime ;
        dbo:commonName ?teamNickname .

  # Link the organization associated with that nickname
  ?organisation dbo:commonName ?teamNickname ;
                a dbo:Organization .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
715,56,test,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in Spanish Civil War and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rifCommander ?civilWarCommander ?officeLeader
WHERE {
  # Abd el-Krim's commander in the Rif War
  ?rifConflict a dbo:MilitaryConflict ;
               dbo:opposingMilitaryForce [
                 dbo:commander ?rifCommander .
               ] .

  FILTER regex(?rifConflict, ""Rif War"", ""i"") .

  # Commander in the Spanish Civil War
  ?civilWarConflict a dbo:MilitaryConflict ;
                   dbo:opposingMilitaryForce [
                     dbo:commander ?civilWarCommander .
                   ] .

  FILTER regex(?civilWarConflict, ""Spanish Civil War"", ""i"") .

  # Leader of an office related to Carlos Franco Iribarnegaray
  dbr:Carlos_Franco_Iribarnegaray dbo:officeLeader ?officeLeader ;
                                  dbo:affiliation [
                                    a dbo:GovernmentAgency ;
                                    dbo:leader ?officeLeader .
                                  ] ;
                                  dbo:organization [
                                    a dbo:Organization ;
                                    dbo:leader ?officeLeader .
                                  ] .
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
433,64,test,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of Bill Evans and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Eric Clapton is the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  dbr:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall dbo:writer dbr:Eric_Clapperton .

  # Eric Clapton's profession
  dbr:Eric_Clapperton dbo:profession ?professional .

  # Bill Evans is associated with Eric Clapton
  OPTIONAL { 
    ?association dbo:musicalArtist dbr:Bill_Evans .
    ?association dbo:associatedMusicalArtist dbr:Eric_Clapperton .
  }

  # Paul Chambers is a musical artist and an artist
  OPTIONAL {
    ?person dbo:birthPlace ?place .
    ?person rdf:type dbo:Musician ;
            dbo:profession ?professional .
    ?person rdfs:label ""Paul Chambers""@en .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
573,70,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v1 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?result <http://dbpedia.org/ontology/deathPlace> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?decedentAtResidence WHERE {
  # Step 1: Identify John Quincy Adams' work
  ?work dbo:author dbr:John_Quincy_Adams .
  
  # Step 2: Find the author of this work who is a politician and office holder
  ?author dbo:profession dbr:Politician ;
          dbo:officeHolder true ;
          dbo:writtenWork ?work .

  # Step 3: Determine the parent of this author
  ?parent dbo:child ?author .
  
  # Step 4: Ensure the parent is an American professional in Politician
  ?parent dbo:nationality dbr:United_States ;
          dbo:profession dbr:Politician .

  # Step 5: Identify the residence as a settlement of this professional
  ?residence dbo:resident ?parent ;
             rdf:type dbo:Settlement .

  # Step 6: Find the person decedent at this residence
  ?decedentAtResidence dbo:placeOfDeath ?residence .

  # Step 7: Identify Charlie Baker's administration region
  ?administration dbo:administrator dbr:Charlie_Baker ;
                  rdf:type dbo:Region .

  # Step 8: Find the person decedent at this administration region
  ?decedentAtAdminRegion dbo:placeOfDeath ?administration .
  
  FILTER(?decedentAtResidence = ?decedentAtAdminRegion)
}",8,13,9,3,3,3,3,71,0,0,2,0,0.0,0
102,20,test,"Give me the native of the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury and manager of the player in the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v4 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . ?v1 <http://dbpedia.org/ontology/team> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeLanguage WHERE {
  ?player a dbo:SoccerPlayer ;
          dbo:nationalTeam dbr:England_women's_national_football_team .
  
  ?manager dbo:managedBy ?player .

  ?residence dbo:resident ?manager ;
             dbo:settlementType dbp:Settlement ;
             dbo:country dbr:United_Kingdom ;
             dbo:city dbr:Dewsbury .

  ?residence dbo:nativeLanguage ?nativeLanguage .
  
  FILTER (str(?nativeLanguage) = ""English"")
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
192,19,test,"Give me the spouse of the spouse, that is a royalty, of Charles Martel of Anjou and child of the child of the parent of Anna of Hungary (Byzantine empress).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseOfSpouse
WHERE {
  # Charles Martel of Anjou and his spouse
  ?charles a dbo:Person ;
           dbp:surname ""Martel"" ;
           dbp:givenName ""Charles"" ;
           dbp:spouse ?spouse .

  # Spouse's spouse who is royalty
  ?spouse dbp:spouse ?spouseOfSpouse .
  ?spouseOfSpouse a dbo:Monarch .

  # Anna of Hungary (Byzantine empress) and her parent
  ?anna a dbo:Person ;
        dbp:surname ""Hungary"" ;
        dbp:givenName ""Anna"" ;
        dbp:title ""Byzantine Empress"" .
  
  ?anna dbo:parent ?parent .

  # Child of the parent (grandchild of Anna)
  ?parentChild a dbo:Person ;
               dbo:parent ?parent .

  # Child of that child
  ?grandchild a dbo:Person ;
              dbo:parent ?parentChild .

  # The spouse we are looking for is related to this grandchild
  ?spouseOfSpouse dbp:spouse ?relatedToGrandchild .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
456,57,test,"Give me the spouse of Danielle Spencer (Australian actress) and band of the band, that is a musical artist, of Dean Brody and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?band ?professionalRole
WHERE {
  # Spouse of Danielle Spencer
  dbr:Danielle_Spencer_(actress) dbo:spouse ?spouse .

  # Band where a member is a musical artist
  ?member dbo:memberOf ?band .
  ?member rdf:type dbo:MusicalArtist .

  # Professional role of Lamont Cranston (The Shadow)
  dbr:Lamont_Cranston dbo:alterEgo dbr:The_Shadow .
  dbr:The_Shadow dbo:profession ?professionalRole .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
274,28,test,"Give me the professional in the designer of Tetris Classic and band member of the person born, that is a musical artist, as John Birks Gillespie and associated musical artist of the actor, that is a musical artist, of Imagine the Sound.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?designer ?bandMember ?dizzyArtist ?actorMusician
WHERE {
  # Designer of Tetris Classic
  ?tetrisDesigner dbo:profession dbr:Video_game_designer .
  ?tetrisClassic dbo:creator ?tetrisDesigner .
  FILTER(STRSTARTS(STR(?tetrisClassic), ""http://dbpedia.org/resource/Tetris_Classic""))

  # Band members associated with the designer
  ?bandMember dbo:member ?designer .

  # Dizzy Gillespie's associated musical artists
  dbr:Dizzy_Gillespie dbo:associatedMusicalArtist ?dizzyArtist .
  
  # Actors in ""Imagine the Sound"" who are also musical artists
  ?soundFilm dbo:actor ?actorMusician .
  FILTER(STRSTARTS(STR(?soundFilm), ""http://dbpedia.org/resource/Imagine_the_Sound""))
  ?actorMusician a dbo:MusicalArtist .

  # Linking all components
  OPTIONAL { ?bandMember dbo:associatedMusicalArtist ?dizzyArtist . }
  OPTIONAL { ?designer dbo:associatedMusicalArtist ?actorMusician . }
}
```",6,8,7,2,3,2,3,28,0,0,3,0,0.0,0
274,27,test,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound and band member of Dizzy Gillespie and professional in the designer of Tetris Classic.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?actor dbo:performerIn dbr:Imagine_the_Sound .
  ?actor a dbo:MusicalArtist .
  ?actor dbo:bandMemberOf dbr:Dizzy_Gillespie .
  ?actor dbo:profession dbr:Tetris_Classic .

  FILTER (isLiteral(?artist))
  BIND(?actor AS ?artist)
}
```

This query attempts to find an individual who meets all the specified criteria by linking them through their roles and professions.",5,6,6,2,3,2,3,28,0,0,3,0,0.0,0
926,65,test,"Give me the successor of the child of the spouse of Şermi Kadın and father of the father of Abdulaziz and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Şermi Kadın's spouse and their child
  dbr:Şermi_Kadın dbo:spouse dbr:Abdul_Hamid_I .
  dbr:Abdul_Hamid_I dbo:child dbr:Mahmud_II .

  # Successor of Mahmud II
  dbr:Mahmud_II dbo:successor ?successor .

  # Abdulaziz's grandfather
  dbr:Abdulaziz dbo:father dbr:Mehmed_V .
  dbr:Mehmed_V dbo:father dbr:Abdül_Aziz .
  dbr:Abdül_Aziz dbo:father dbr:Mahmud_II .
  dbr:Mahmud_II dbo:father dbr:Selim_III .

  # Mustafa III's royal child
  dbr:Mustafa_III dbo:child ?mustafaChild .
  ?mustafaChild a dbo:Monarch .
  dbr:Ahmet_III dbo:child ?mustafaChild .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
926,64,test,"Give me the successor of Mustafa III and father of the father of the spouse of Neşerek Kadın and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?successor WHERE {
  # Mustafa III's successor
  wd:Q123456 wdt:P36 ?successor .
  
  # Neşerek Kadın's spouse and his father
  wd:Q789012 wdt:P26 ?spouse . # Neşerek Kadın's spouse (Selim III)
  ?spouse wdt:P22 ?fatherOfSpouse . # Father of Selim III (Mustafa III)

  # Beyhan Sultan's parent and her grandparent
  wd:Q345678 wdt:P25 ?mustafaIII . # Beyhan Sultan's father (Mustafa III)
  ?mustafaIII wdt:P22 ?ahmetIII . # Mustafa III's father (Ahmet III)

  # Abdul Hamid I as successor of Mustafa III and child of Ahmet III
  ?successor wdt:P22 ?ahmetIII .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
965,60,test,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseOfSpouse WHERE {
  # Step 1: Find Louise Mountbatten's parent
  ?parent a dbo:Person ;
          dbo:child ?louiseMountbatten .
  
  FILTER(?louiseMountbatten = dbpedia:Louise_Mountbatten)

  # Step 2: Find the spouse of this parent
  ?parent dbo:spouse ?firstSpouse .

  # Step 3: Find the spouse of the first spouse
  ?firstSpouse dbo:spouse ?secondSpouse .

  # Step 4: Identify a child who is a noble and has the birth name George Mountbatten, 2nd Marquess of Milford Haven
  ?child a dbo:Noble ;
        foaf:name ""George Mountbatten, 2nd Marquess of Milford Haven""@en ;
        dbo:birthName ?birthName .
  
  FILTER(?secondSpouse = ?parent) # Ensure the child is related to the second spouse

  # Step 5: Find the spouse of this child
  ?child dbo:spouse ?spouseOfSpouse .
}",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
976,66,test,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as the birth name of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).",SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v3 . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v6 . ?v6 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office1Label ?office2Label ?office3Label
WHERE {
  # Office of the leader of the Grand National Assembly of Turkey
  dbr:Grand_National_Assembly_of_Turkey dbo:leader ?leader .
  ?leader dbo:positionHeld ?office1 .
  ?office1 rdfs:label ?office1Label .

  # Office of Naci Bostancı
  dbr:Naci_Bostancı dbo:birthName ?birthName .
  ?person dbo:name ""Naci Bostancı""@en .
  ?person dbo:birthName ?birthName .
  ?person dbo:positionHeld ?office2 .
  ?office2 rdfs:label ?office2Label .

  # Office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey)
  ?mayor dbo:nationality dbr:Turkey ;
         dbo:politicalParty dbr:Nation_Alliance_(Turkey) ;
         dbo:positionHeld ?office3 .
  ?office3 rdfs:label ?office3Label .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
917,70,test,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and parent of the child, that is a royalty, of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v6 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?individual WHERE {
  # Kamehameha III's royal child
  ?child1 dbo:parent dbr:Kamehameha_III ;
          a dbo:Monarch .

  # Kamehameha IV's royal child and its parent
  ?child2 dbo:parent dbr:Kamehameha_IV ;
          a dbo:Monarch .
  
  # Spouse of Leleiohoku I who is royalty
  ?spouse dbo:spouse dbr:Leleiohoku_I ;
          a dbo:Monarch .

  # Father of the spouse
  ?father dbo:child ?spouse .

  # The individual we are looking for
  ?individual dbo:parent ?father .
  ?individual dbo:parent dbr:Kamehameha_III .
  ?individual dbo:parent dbr:Kamehameha_IV .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
987,67,test,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of Dado Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> ?v4 . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v1 <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorBirthPlace WHERE {
  # Step 1: Find films with Emir Hadžihafizbegović
  ?film dbo:starring dbr:Emir_Hadžihafizbegović .
  
  # Step 2: Identify TV shows that are also films
  ?show dbo:basedOnFilm ?film .

  # Step 3: Determine the time zone of Canicosa de la Sierra, Spain
  ?canicosa dbp:timeZone ?timezone .

  # Find sports events in this time zone
  ?event dbo:location ?place .
  ?place dbp:timeZone ?timezone .

  # Identify countries corresponding to these time zones
  ?country dbp:timeZone ?timezone .

  # Step 4: Birthplace of Dado Polumenta
  dbr:Dado_Polumenta dbo:birthPlace ?dadoBirthPlace .

  # Find actor's birthplace from the show
  ?show dbo:actor ?actor .
  ?actor dbo:birthPlace ?actorBirthPlace .
  
  FILTER(?actorBirthPlace = ?dadoBirthPlace)
}
```

This query attempts to find the birthplace of an actor involved in a TV show that is also a film, featuring Emir Hadžihafizbegović. It connects this with sports events in Canicosa de la Sierra and matches it to Dado Polumenta's birthplace.",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
98,27,test,"Give me the region of Philippine Standard Time and birth place of the person born as Paolo Elito M. Ballesteros IV and entity in the region, that is a country, of Philippine Standard Time.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?birthPlace ?country
WHERE {
  # Find the region associated with Philippine Standard Time
  ?timeZone a dbo:TimeZone ;
            rdfs:label ""Philippine Standard Time""@en .
  
  ?timeZone dbo:inRegion ?region .

  # Find Paolo Elito M. Ballesteros IV's birthplace
  dbr:Paolo_Elito_M._Ballesteros_IV dbo:birthPlace ?birthPlace .

  # Check if the region contains a country
  OPTIONAL {
    ?country a dbo:Country ;
             dbo:locatedIn ?region .
  }
}
```",5,6,6,2,3,2,3,28,0,0,2,0,0.0,0
839,66,test,"Give me the band of the member of Böhse Onkelz and band of the person born, that is a musical artist, as Kevin Richard Russell and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?memberBand ?kevinBand ?bandOfBand
WHERE {
  # Böhse Onkelz member's band
  ?onkelzMember dbo:memberOf dbr:Böhse_Onkelz .
  ?onkelzMember dbo:band ?memberBand .

  # Kevin Richard Russell's band
  ?kevin dbr:Kevin_Richard_Russell .
  ?kevin dbo:associatedBand ?kevinBand .

  # Band that is a musical artist
  ?bandOfBand dbo:type dbr:MusicalArtist ;
              dbo:band ?band .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
124,58,test,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in Mahdist War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 WHERE {
  # Find the person born on 1850-06-24
  ?person dbo:birthDate ""1850-06-24""^^xsd:date ;
          dbo:militaryConflict ?conflict1 .

  # Frank Rhodes and his military involvement
  dbr:Frank_Rhodes dbo:militaryConflict ?conflict2 .
  
  # Mahdist War details
  dbr:Mahdist_War dbo:militaryForce ?militaryForce3 .

  # Ensure the conflicts are societal events and military conflicts
  ?conflict1 a dbo:SocietalEvent ;
             a dbo:MilitaryConflict .
  ?conflict2 a dbo:Event ;
             a dbo:MilitaryConflict ;
             a dbo:SocietalEvent .

  # Get the military forces involved
  ?conflict1 dbo:militaryForce ?militaryForce1 .
  ?conflict2 dbo:militaryForce ?militaryForce2 .

  FILTER(?militaryForce3 = ?militaryForce2) # Ensure Frank Rhodes' conflict is Mahdist War
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
773,65,test,"Give me the parent of the child, that is a royalty, of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious and spouse of the father of Charles the Fat.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> ?v6 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfChild ?spouseOfFather
WHERE {
  # Louis the German's child who is royalty
  ?child dbr:Louis_the_German dbo:child . 
  ?child a dbo:Monarch .

  # Parent of this child (Louis the German)
  ?parentOfChild dbr:Louis_the_German .

  # Louis the Pious' child who is royalty
  ?successorParentChild dbr:Louis_the_Pious dbo:child .
  ?successorParentChild a dbo:Monarch .

  # Successor of this child (could be a sibling or another related figure)
  ?successor dbp:siblingOf ?successorParentChild .

  # Parent of the successor
  ?parentOfSuccessor dbp:spouse ?spouseOfFather .
  ?parentOfSuccessor dbo:child ?successor .

  # Charles the Fat's father and his spouse
  ?father dbr:Charles_the_Fat dbo:father .
  ?father dbp:spouse ?spouseOfFather .
}
```

This query attempts to find:
- The parent of a royal child of Louis the German.
- The successor of a royal child of Louis the Pious and their parent.
- The spouse of Charles the Fat's father.",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
83,18,test,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA and party of the governor of Dilma Rousseff.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?rulingParty WHERE {
  # Step 1: Find a sports manager who is a member of Kedah FA
  ?person dbo:memberOf dbr:Kedah_FA ;
          rdf:type dbo:SportsManager .

  # Step 2: Determine the birthplace, which must be a Brazilian town with a soccer club
  ?person dbo:birthPlace ?town .
  ?town rdf:type dbo:Settlement ;
        dbp:country dbr:Brazil ;
        dbo:sportTeam ?soccerClub .
  
  # Step 3: Find the ruling party in that town during Dilma Rousseff's governorship
  ?governorship dbo:governingParty ?rulingParty ;
                dbo:place ?town ;
                dbo:person dbr:Dilma_Rousseff .

}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
826,68,test,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v7 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  # Step 1: Find Prince Friedrich of Hesse and by Rhine's parent
  ?friedrich dbo:parent ?parent .
  FILTER(STRSTARTS(STR(?friedrich), ""http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine""))

  # Step 2: Find the predecessor of this parent
  ?parent dbo:predecessor ?predecessor .

  # Step 3: Identify Louis I's child who is royalty
  ?louis rdfs:child ?royalChild .
  FILTER(STRSTARTS(STR(?louis), ""http://dbpedia.org/resource/Louis_I_of_Bavaria""))

  # Step 4: Find the spouse of this royal child
  ?royalChild dbo:spouse ?spouse .

  # Step 5: Identify Anna Magdalena Appel's father's child
  ?annaFather rdfs:child ?fatherChild .
  FILTER(STRSTARTS(STR(?annaFather), ""http://dbpedia.org/resource/Anna_Magdalena_Appel""))

  # Ensure the spouse is a royalty and matches the conditions
  FILTER(EXISTS { ?spouse dbo:royalty true })
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
926,63,test,"Give me the child of the father, that is a royalty, of Mustafa III and father of the father of the spouse of Neşerek Kadın and successor of the child of Ahmed III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v5 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?mustafaIII dbo:father ?ahmadI .
  ?ahmadI dbo:child ?mahmudI .
  ?mahmudI a dbo:Monarch .

  ?ahmedIII dbo:child ?mustafaIII .
  
  ?successor dbo:succeededBy ?mustafaIII .
  ?neşerekKadın dbp:spouse ?selimIII .
  ?selimIII dbo:father ?mustafaIII .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
216,27,test,Give me the office of Tim Nicholls and party of the awardee of Australian Defence Medal and administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v0 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . ?result <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office ?party ?administration WHERE {
  # Office of Tim Nicholls
  OPTIONAL {
    dbr:Tim_Nicholls dbo:positionHeld ?position .
    ?position dbo:office ?office .
  }

  # Party of the awardee of Australian Defence Medal
  OPTIONAL {
    ?person dbo:awardReceived dbr:Australian_Defence_Medal .
    ?person dbo:partyAffiliation ?party .
  }

  # Administration of the designer of Woolfe: The Red Hood Diaries
  OPTIONAL {
    ?designer dbo:work dbr:Woolfe:_The_Red_Hood_Diaries .
    ?designer dbo:worksFor ?organization .
    ?organization dbo:administration ?administration .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
456,67,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of Danielle Spencer (Australian actress) and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  # Alan Doyle is in Great Big Sea
  dbr:Alan_Doyle dbo:memberOfBand dbr:Great_Big_Sea .
  
  # Danielle Spencer is married to Alan Doyle
  dbr:Danielle_Spencer dbo:spouse dbr:Alan_Doyle .

  # The Shadow is the alter ego of Lamont Cranston
  dbr:The_Shadow dbo:fictionalAlterEgoOf dbr:Lamont_Cranston .

  # Find the band associated with The Shadow
  ?band dbo:associatedBand dbr:The_Shadow .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
170,25,test,Give me the birth place of the awardee of People's Artist of Russia and domain of Mayor and entity in the work of International Energy Agency.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?mayorDomain ?ieaEntity
WHERE {
  # Find the awardee of People's Artist of Russia
  ?person dbo:honorificTitle dbr:People%27s_Artist_of_Russia .
  
  # Get their birthplace
  ?person dbo:birthPlace ?birthPlace .

  OPTIONAL {
    # Assuming there is a connection to a Mayor, find the domain
    ?mayor dbo:title dbr:Mayor ;
           dbo:worksFor ?city .
    ?city dbo:mayor ?mayor .
    
    # Get the domain of the Mayor (assuming it's related to their work)
    ?mayor dbp:domainOf ?mayorDomain .
  }

  OPTIONAL {
    # Find an entity in the work of the International Energy Agency
    ?ieaEntity dbo:work dbr:International_Energy_Agency ;
               a ?type .
  }
}
```",5,5,6,2,3,2,3,28,0,0,3,0,0.0,0
955,19,test,"Give me the band of the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs and band of the writer of Don't Forget Your Roots (album).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberBand WHERE {
  # Street Dogs as a band
  dbr:Street_Dogs a dbo:MusicalGroup .

  # Band members of Street Dogs who are also musical artists and artists
  ?member dbo:memberOf dbr:Street_Dogs .
  ?member a dbo:Musician ;
          a dbo:Artist .

  # Writer of the album ""Don't Forget Your Roots""
  ?album dbo:title ""Don't Forget Your Roots"" ;
         dbo:composer ?writer .
  
  # Band of the writer
  ?writer dbo:memberOf ?band .
  
  # Find the band of the member who is also a writer
  ?member = ?writer .

  # Return the band of the member/writer
  ?bandMemberBand dbo:memberOf ?member .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
216,28,test,Give me the party of the awardee of Australian Defence Medal and office of the mayor of Ros Bates and administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?office ?administration
WHERE {
  # Australian Defence Medal awardee party
  ?awardee dbo:award dbr:Australian_Defence_Medal .
  OPTIONAL { ?awardee dbo:politicalParty ?party . }

  # Ros Bates office as mayor
  dbr:Ros_Bates dbo:office ?office .

  # Designer of Woolfe: The Red Hood Diaries administration
  ?designer dbo:work dbr:Woolfe:_The_Red_Hood_Diaries .
  OPTIONAL { ?designer dbo:worksFor ?administration . }
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
18,25,test,"Give me the parent of the professional in Actress and alumnus of Marymount College, Tarrytown and professional in the award of Ana María Sánchez de Ríos.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName WHERE {
  ?person a dbo:Actor ;
          dbo:almaMater dbr:Marymount_College_(Tarrytown) ;
          dbo:award dbr:Award_named_after_Ana_María_Sánchez_de_Ríos .
  
  OPTIONAL { ?person dbp:parents ?parent . }
  OPTIONAL { ?parent foaf:name ?parentName . }

  FILTER (regex(str(?person), ""Actress"", ""i""))
}
```

### Explanation:

- **PREFIX**: We define prefixes for common DBpedia properties and classes.
- **SELECT Clause**: We are interested in the parent's name (`?parentName`).
- **Pattern Matching**:
  - `?person a dbo:Actor`: Ensures the person is an actor (we filter for actresses later).
  - `dbo:almaMater dbr:Marymount_College_(Tarrytown)`: Checks if they attended Marymount College, Tarrytown.
  - `dbo:award dbr:Award_named_after_Ana_María_Sánchez_de_Ríos`: Ensures the person has won an award named after Ana María Sánchez de Ríos.
- **OPTIONAL Clauses**: Used to optionally match parent information and their names.
- **FILTER**: Filters results to ensure the person is specifically an actress.

This query assumes that DBpedia has structured data for these specific entities and relationships. Adjustments might be necessary based on actual data availability in DBpedia.",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
773,58,test,"Give me the spouse of Louis the German and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of the successor of Charles the Bald.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Louis the German's spouse
  dbr:Louis_the_German dbo:spouse ?spouse .

  # Child of Louis's Spouse who is royalty and parent of Charles the Bald's successor
  ?child dbo:parent ?spouse ;
         a dbo:Monarch ;
         dbo:successorOf ?charlesSuccessor .

  # Father of this child, who is an office holder and royalty, and father of Carloman of Bavaria
  ?father dbo:parent ?child ;
          a dbo:OfficeHolder , dbo:Monarch ;
          dbo:child dbr:Carloman_of_Bavaria .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
129,27,test,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and professional in  and associated musical artist of the person born as Tahj Malik Chandler.","SELECT ?result WHERE { <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorOrganisation ?artist1 ?artist2 WHERE {
  # Find the actor associated with ""Dreamville Presents: Revenge"" who is an organization
  ?event dbo:performer ?actorOrganisation .
  ?event rdfs:label ""Dreamville Presents: Revenge""@en .
  FILTER (isBlank(?actorOrganisation)) .

  # Find the musical artist associated with this actor/organization
  ?actorOrganisation dbp:associatedMusicalArtist ?artist1 .

  # Identify T.I. by his birth name Tahj Malik Chandler
  ?tI dbo:birthName ""Tahj Malik Chandler""@en .
  
  # Find the musical artist associated with T.I.
  ?tI dbp:associatedMusicalArtist ?artist2 .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
573,71,test,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).","SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/governor> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v8 . ?v8 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?v7 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  # Step 1: John Quincy Adams' works
  ?work dbo:author dbr:John_Quincy_Adams .
  
  # Step 2: Author of the work who is a politician and office holder
  ?author dbo:works ?work ;
          a dbo:Politician, dbo:OfficeHolder .

  # Step 3: Parent of this author who is also a politician and office holder
  ?parent dbo:child ?author ;
          a dbo:Politician, dbo:OfficeHolder .
  
  # Step 4: Charlie Baker's real name
  dbr:Charlie_Baker_(Australian_footballer) dbp:realName ?charlieRealName .

  # Step 5: Administration related to Charlie Baker's real name
  ?administration dbo:name ?charlieRealName ;
                  a dbo:Region .

  # Step 6: Person decedent at this administration
  ?personDecedent dbo:deceasedAt ?administration .

  # Step 7: Residence of this person that is a settlement
  ?residence dbo:resident ?personDecedent ;
             a dbo:Settlement .

  # Step 8: Professional at this residence who is American
  ?professional dbo:worksFor ?residence ;
                dbp:nationality dbr:United_States .
}
```",9,14,10,3,3,3,3,71,0,0,2,0,0.0,0
791,59,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouseOfSpouse WHERE {
  # Step 1: Find Emperor Takakura's spouse
  ?emperorTakakura dbo:spouse ?takakuraSpouse .
  
  FILTER(?emperorTakakura = dbpedia:Emperor_Takakura)

  # Step 2: Find the spouse of Takakura's spouse who is royalty
  ?takakuraSpouse dbo:spouse ?spouseOfSpouse .
  ?spouseOfSpouse rdf:type dbo:Monarch .

  # Step 3: Reference to Emperor Go-Shirakawa and find his grandchild
  ?emperorGoShirakawa dbo:child ?goShirakawaChild .
  
  FILTER(?emperorGoShirakawa = dbpedia:Emperor_Go-Shirakawa)

  ?goShirakawaChild dbo:child ?goShirakawaGrandchild .

  # Step 4: Ensure the grandchild is an office holder and royalty
  ?goShirakawaGrandchild rdf:type dbo:Monarch .
  ?goShirakawaGrandchild rdf:type dbo:OfficeHolder .

  # Find the predecessor of this grandchild
  ?predecessor dbo:succeededBy ?goShirakawaGrandchild .

  # Ensure the spouse of Takakura's spouse is the same as the predecessor
  ?spouseOfSpouse = ?predecessor .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
715,70,test,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v1 <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Abd el-Krim and his military conflict
  ?abdElKrim a dbo:MilitaryPerson ;
             foaf:name ""Abd el-Krim""@en .
  
  ?conflict dbo:commander ?abdElKrim .

  # Carlos Franco Iribarnegaray's reference as an office holder or leader of an organization
  ?carlosFranco a dbo:OfficeHolder ;
                foaf:name ""Carlos Franco Iribarnegaray""@en .
  
  ?organization dbo:leader ?carlosFranco .

  # The mayor involved in the 1933 Spanish general election
  ?mayor a dbo:Mayor ;
         dbo:electedDuring dbr:Spanish_general_election,_1933 ;
         foaf:name ?name .

  # Linking all these entities through the commander role
  ?conflict dbo:commander ?commander .
  ?organization dbo:leader ?commander .
  ?mayor dbo:commander ?commander .
}
```

This query attempts to find a common individual who fits all the specified roles and relationships. Note that this is a complex query, and the actual results depend on the availability and accuracy of data in DBpedia.",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
579,20,test,"Give me the native of the residence, that is English and a settlement, of the resident of Scotland and person born as the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeOfResidence WHERE {
  # Step 1: Find a person born in Scotland
  ?person dbp:birthPlace dbr:Scotland .
  
  # Step 2: Get their birth name
  ?person dbo:birthName ?birthName .

  # Step 3: Find an office holder from Edinburgh with the same birth name
  ?officeHolder dbo:birthName ?birthName ;
               dbo:nationality dbr:United_Kingdom ;
               dbo:residence ?residence .
  
  # Ensure the residence is English and a settlement
  ?residence dbp:country dbr:England ;
             rdf:type dbo:Settlement .

  # Step 4: Find the native of this residence
  ?nativeOfResidence dbo:nativePlace ?residence .
}
```",6,9,7,3,2,3,2,20,0,0,18,0,0.0,0
47,65,test,"Give me the office of the administration of Jagdeep Dhankhar and office of the awardee of Padma Vibhushan and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v6 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeJagdeep ?officePadmaVibhushanAwardee ?awardMantuGhosh ?officeAwardAwardees
WHERE {
  # Jagdeep Dhankhar's office in the administration
  dbr:Jagdeep_Dhankhar dbo:positionHeld ?officeJagdeep .
  
  # Padma Vibhushan awardees' offices
  ?padmaVibhushanAwardee dbo:awardReceived dbr:Padma_Vibhushan ;
                        dbo:occupation ?officePadmaVibhushanAwardee .

  # Mantu Ghosh's award and the offices of its awardees
  dbr:Mantu_Ghosh dbo:awardReceived ?awardMantuGhosh .
  ?awardAwardees dbo:awardReceived ?awardMantuGhosh ;
                 dbo:occupation ?officeAwardAwardees .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
976,65,test,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as Mehmet Naci Bostancı.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v0 <http://dbpedia.org/property/office> ?result . ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayorOffice ?partyReference ?assemblyLeaderOffice ?personOffice
WHERE {
  # Mayor who is a politician and office holder, and Turkish
  ?mayor dbo:nationality dbr:Turkey ;
         rdf:type dbo:Politician ;
         dbo:officeHolderOf ?mayorOffice .
  
  # Reference to a political party that is an organization, Turkish, and related to Millet İttifakı
  ?partyReference dbo:nationality dbr:Turkey ;
                  rdf:type dbo:Organization ;
                  dbo:politicalParty true ;
                  dbp:relatedTo dbr:Millet_İttifakı .
  
  # Leader of the Grand National Assembly of Turkey
  ?assemblyLeaderOffice dbo:officeHolderOf ?leader ;
                        dbo:organization dbr:Grand_National_Assembly_of_Turkey .
  
  # Person born as Mehmet Naci Bostancı and their office
  ?person dbp:name ""Mehmet Naci Bostancı""@en ;
          dbo:birthName ""Mehmet Naci Bostancı"" ;
          dbo:officeHolderOf ?personOffice .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
933,59,test,"Give me the reference to the birth name of the professional in Musician and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  ?band dbo:musicalArtist dbr:The_Ramones .
  ?band dbo:member ?musician .
  ?musician dbo:birthName ?birthName .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
917,59,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Leleiohoku I and his spouse who is royalty
  dbr:Leleiohoku_I dbo:spouse ?spouse .
  ?spouse a dbo:Royal .

  # Spouse's father
  ?spouse dbo:father ?spousesFather .

  # Mayor of Hawaiian Kingdom and their child who is royalty
  ?mayor dbo:position dbr:Mayor_of_the_Hawaiian_Kingdom .
  ?mayor dbo:child ?royalChild .
  ?royalChild a dbo:Royal .

  # Parent of that royal child
  ?royalChild dbo:parent ?parent .
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
582,56,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to the residence of Hirotaka Sugawara and player in Kazuaki Nagasawa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?teamNickname WHERE {
  # Find the team associated with Hajime Moriyasu
  ?team dbo:coach dbr:Hajime_Moriyasu .
  
  # Ensure Hirotaka Sugawara is a player in this team and find his residence
  ?player dbo:playsFor ?team ;
          foaf:name ""Hirotaka Sugawara""@en .
  ?player dbo:residence ?residence .

  # Ensure Kazuaki Nagasawa is also a player in this team
  ?nagasawaPlayer dbo:playsFor ?team ;
                  foaf:name ""Kazuaki Nagasawa""@en .

  # Retrieve the nickname of the team
  ?team dbo:nickname ?teamNickname .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
715,69,test,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero and commander in the force, that is a military conflict, of the native of Morocco.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Carlos Franco Iribarnegaray's role in relation to Francisco Largo Caballero
  ?carlos a dbo:Person ;
          dbo:spouse ?francisco .
  
  # Francisco Largo Caballero's leadership role
  ?office dbo:head ?leader ;
          a dbo:GovernmentAgency, dbo:Organization .

  ?francisco dbo:positionHeld ?office .

  # Native of Morocco involved in a military conflict
  ?moroccanNative a dbo:Person ;
                  dbo:nationality dbr:Morocco ;
                  dbo:commanderIn ?conflict .
  
  ?conflict a dbo:MilitaryConflict .

  # Linking the roles and individuals
  ?carlos dbo:commanderIn ?francisco .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
326,19,test,"Give me the person decedent at the award, that is a country, of the awardee of French Legion of Honor and resident of the birthplace, that is a state and British, of David Jessel.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . ?v0 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?decedentCountry WHERE {
  # Step 1: Find David Jessel's birthplace
  dbr:David_Jessel dbo:nationality dbr:United_Kingdom ;
                   dbo:birthPlace ?birthState .

  FILTER (dbo:state ?birthState) .

  # Step 2: Find British residents of that state
  ?person dbo:nationality dbr:United_Kingdom ;
          dbo:residence ?birthState .

  # Step 3: Awardees of the French Legion of Honor
  ?person dbo:awardReceived dbr:French_Legion_of_Honor .

  # Step 4: Award details with decedent as a country
  ?award dbo:recipient ?person ;
         dbo:decedent ?decedent .
  
  FILTER (dbo:country ?decedent) .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
465,57,test,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of Anne of Brittany.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
    # Step 1: Identify Elizabeth of Austria and her parent
    ?elizabeth a dbo:Person ;
               foaf:name ""Elizabeth of Austria"" ;
               dbo:parent ?parent .

    # Step 2: Find the child of this parent who is royalty and succeeded Ercole II d'Este
    ?child dbo:parent ?parent ;
           dbo:succeededBy ?ercoleII ;
           a dbo:Monarch .
    
    ?ercoleII foaf:name ""Ercole II d'Este"" .

    # Step 3: Find the child of Anne of Brittany who is royalty
    ?anneChild dbo:parent dbr:Anne_of_Brittany ;
               a dbo:Monarch .

    # Ensure the child from step 2 is also the successor of the child from step 3
    ?child dbo:succeededBy ?anneChild .

    # Step 4: Find the spouse of this royalty
    ?child dbo:spouse ?spouse .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
987,69,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and birth place of the actor of All for Free.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/timeZone> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInRegion WHERE {
  # Step 1: Find the time zone of Canicosa de la Sierra
  ?place a dbo:Place ;
         rdfs:label ""Canicosa de la Sierra""@en .
  
  ?place dbo:timeZone ?timezone .

  # Step 2: Interpret timezone as a sports event (creative interpretation)
  ?sportsEvent a dbo:SportsEvent ;
               dbp:name ?timezone .

  # Step 3: Find the band of Dado Prat and their birthplace
  ?band a dbo:Band, dbo:MusicalArtist ;
        dbo:member dbr:Dado_Prat .
  
  ?bandMember dbo:birthPlace ?bandBirthPlace .

  # Step 4: Find the actor of ""All for Free"" and their birthplace
  ?movie dbo:title ""All for Free""@en ;
         dbo:actor ?actor .
  
  ?actor dbo:birthPlace ?actorBirthPlace .

  # Final step: Find a country in the region of the sports event
  ?region dbo:country ?entityInRegion .
  FILTER(?bandBirthPlace = ?actorBirthPlace)
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
955,18,test,"Give me the band of the band member, that is a musical artist and an artist, of Street Dogs and band of the writer of the work, that is a work and an album and a musical work, of Matt Freeman.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band1 ?band2 WHERE {
  # Find band member of Street Dogs who is a musical artist and an artist
  ?member dbo:memberOfBand dbr:Street_Dogs ;
          a dbo:MusicalArtist, dbo:Artist .

  # Find the band associated with this band member
  ?member dbo:memberOf ?band1 .

  # Find works by Matt Freeman that are classified as work, album, and musical work
  ?work dbo:writer dbr:Matt_Freeman ;
        a dbo:Work, dbo:Album, dbo:MusicalWork .

  # Find the writer of these works
  ?work dbo:writer ?writer .

  # Find the band associated with this writer
  ?writer dbo:memberOf ?band2 .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
715,63,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and commander in the force of Francisco Largo Caballero and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v2 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?conflict dbo:participant ?person1 .
  ?conflict dbo:participant ?person2 .

  ?person1 dbo:nationality dbr:Morocco .
  
  ?person2 rdfs:label ""Francisco Largo Caballero""@en .

  ?conflict dbo:commander ?commander .

  OPTIONAL {
    ?organization dbo:leader ?carlos .
    ?carlos rdfs:label ""Carlos Franco Iribarnegaray""@en .
  }
}
```

This query attempts to find a military conflict (`?conflict`) involving both a Moroccan participant and Francisco Largo Caballero. It then identifies the commander of that conflict. Additionally, it checks for an organization where Carlos Franco Iribarnegaray was a leader.",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
129,26,test,Give me the associated musical artist of EarthGang and professional in the mayor of 1999 West Dunbartonshire Council election and associated musical artist of the person born as Tahj Malik Chandler.,"SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# EarthGang Members
SELECT ?member WHERE {
  wd:Q1105010 wdt:P31/wdt:P279* wd:Q482994.
  wd:Q1105010 wdt:P127 ?member.
}

UNION

# Candidate in 1999 West Dunbartonshire Council Election and their Artist
SELECT ?candidate ?artist WHERE {
  ?election wdt:P31 wd:Q11174752;
            wdt:P580 ?start;
            wdt:P582 ?end.
  FILTER(?start <= ""1999-05-06""^^xsd:date && ?end >= ""1999-05-06""^^xsd:date).
  ?election wdt:P1368 ?candidate.
  ?candidate wdt:P106 wd:Q82955;
             wdt:P175 ?artist.
}

UNION

# Associated Artist of Tahj Malik Chandler (Lil Uzi Vert)
SELECT ?artist WHERE {
  wd:Q1105010 wdt:P31/wdt:P279* wd:Q482994;
              rdfs:label ""Lil Uzi Vert""@en.
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
917,68,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v6 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Mayor of Hawaiian Kingdom
  ?mayor dbo:position ""Mayor""@en .
  ?mayor dbo:country dbr:Hawaiian_Kingdom .

  # Step 2: Child of Mayor who is royalty
  ?childMayo rdf:type dbo:Monarch ;
             dbo:parent ?mayor .

  # Step 3: Father of Kamehameha IV
  ?kamehamehaIV dbr:Kamehameha_IV .
  ?fatherKamehamehaIV dbo:child ?kamehamehaIV .

  # Step 4: Child of Father of Kamehameha IV
  ?childFatherKamehamehaIV dbo:parent ?fatherKamehamehaIV .

  # Step 5: Spouse of Leleiohoku I who is royalty
  ?spouseLeleiohokuI dbo:spouse dbr:Leleiohoku_I ;
                    rdf:type dbo:Monarch .

  # Step 6: Father of Spouse of Leleiohoku I
  ?fatherSpouseLeleiohokuI dbo:child ?spouseLeleiohokuI .

  # Step 7: Common Child
  VALUES (?commonChild) {
    (bnode()) # Placeholder for common child
  }
  OPTIONAL { ?commonChild dbo:parent ?mayor . } # From step 2
  OPTIONAL { ?commonChild dbo:parent ?fatherKamehamehaIV . } # From step 4
  OPTIONAL { ?commonChild dbo:parent ?fatherSpouseLeleiohokuI . } # From step 6

  # Step 8: Parent of Common Child
  ?parent dbo:child ?commonChild .
}
```

This query attempts to find the common child from the specified relationships and then retrieves their parent. Note that due to the complexity and potential lack of direct data in DBpedia, some assumptions are made, and additional filtering or manual verification might be necessary.",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
274,25,test,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie and associated musical artist of Cecil Taylor and professional in the designer of Tetris Classic.","SELECT ?result WHERE { <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?tetrisDesigner
WHERE {
  # Step 1: Identify John Birks Gillespie (Dizzy Gillespie)
  VALUES (?dizzy) { dbr:Dizzy_Gillespie }
  
  # Step 2: Find band members associated with Dizzy Gillespie
  ?bandMember dbo:memberOf ?group .
  ?group dbo:performer ?dizzy .

  # Step 3: Identify Cecil Taylor and his associated musical artists
  VALUES (?cecil) { dbr:Cecil_Taylor }
  ?associatedArtist dbo:collaborator ?cecil .

  # Step 4: Identify the designer of Tetris Classic
  ?tetrisDesigner dbo:profession dbr:Video_game_designer .
  ?tetrisDesigner dbo:work dbr:Tetris_Classic .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
216,67,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in Igor Bišćan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v6 . ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerInCoach WHERE {
  # Džemal Berberović's team
  dbr:Džemal_Berberović dbo:team dbr:?Team .
  
  # Team is a sports club and soccer club
  ?Team rdf:type dbo:SportsClub ;
        rdf:type dbo:FootballClub .

  # Igor Bišćan's team
  dbr:Igor_Bišćan dbo:team dbr:?IgorTeam .

  # Player in Igor Bišćan's team who is a soccer player, sports manager, and soccer manager
  ?playerInCoach dbo:memberOf dbr:?IgorTeam ;
                 rdf:type dbo:SoccerPlayer ;
                 rdf:type dbo:SportsManager ;
                 rdf:type dbo:FootballManager .

  # Pavel Vezhinov's death date
  OPTIONAL { 
    dbr:Pavel_Vezhinov dbo:dateOfDeath ?deathDate .
  }
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
645,61,test,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v3 <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Step 1: Find a native of Restoration (Spain) who is a president and politician
  ?person dbo:nationality dbr:Restoration_(Spain);
          rdf:type dbo:President;
          rdf:type dbo:Politician.

  # Step 2: Identify an event that is a military conflict and societal event related to this person
  ?event dbo:relatedTo ?person;
         rdf:type dbo:MilitaryConflict;
         rdf:type dbo:SocietalEvent.

  # Step 3: Find the military force involved in this event
  ?force dbo:partOf ?event;
         rdf:type dbo:MilitaryForce.

  # Step 4: Locate the office that is a government agency and organization related to this military force
  ?office dbo:relatedTo ?force;
          rdf:type dbo:GovernmentAgency;
          rdf:type dbo:Organization.

  # Step 5: Find the leader of this office
  ?leader dbo:headOf ?office.
}
```",6,13,7,3,2,3,3,71,0,0,2,0,0.0,0
98,8,test,Give me the child of the child of Emperor Toba and parent of Emperor Rokujō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Toba> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Emperor_Rokujō> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Step 1: Find Toba's child
  ?tobaChild dbo:parent dbr:Emperor_Toba .
  
  # Step 2: Find the grandchild (Toba's grandchild)
  ?grandchild dbo:parent ?tobaChild .

  # Step 3: Identify Rokujō's parent
  ?rokujosParent dbo:parent dbr:Emperor_Rokujō .

  # Step 4: Match Toba's grandchild with Rokujō’s parent
  FILTER (?grandchild = ?rokujosParent)
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
507,57,test,"Give me the spouse of Anne V. Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of Guy Ferland.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?movie WHERE {
  # Anne V. Coates and her spouse
  dbr:Anne_V._Coates dbo:spouse ?spouse .

  # The person's birthdate
  ?spouse dbo:birthday ""1919-06-17""^^xsd:date .

  # The person is a director of a movie that is also a work
  ?spouse dbo:profession dbr:Film_director .
  ?movie dbo:director ?spouse ;
         rdf:type dbo:Film ;
         rdf:type dbo:CreativeWork .

  # Profession matches Guy Ferland's profession
  ?ferland dbp:name ""Guy Ferland"" .
  ?ferland dbo:profession ?profession .
  FILTER (?spouse dbo:profession = ?profession)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
573,62,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of John Quincy Adams.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://dbpedia.org/property/governor> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentAtResidence ?personDecedentAtAministration
WHERE {
  # Step 1: Find Charlie Baker's real name
  dbr:Charlie_Baker_(Australian_footballer) dbo:birthName ?charlieBakersRealName .

  # Step 2: Find John Quincy Adams' parent
  dbr:John_Quincy_Adams dbo:parent ?johnQuincysParent .

  # Step 3: Identify the professional American in Politician related to both individuals
  ?professional a dbo:Politician ;
                dbo:nationality dbr:United_States ;
                dbo:birthName ?charlieBakersRealName ;
                dbo:deathPlace ?personDecedentAtResidence .

  # Ensure person decedent at residence is a settlement
  ?personDecedentAtResidence a dbo:Settlement .

  # Step 4: Identify the region associated with the administration of the same person
  ?professional dbo:administration ?adminRegion .
  ?personDecedentAtAministration dbo:deathPlace ?adminRegion .
  
  # Ensure person decedent at administration is a region
  ?personDecedentAtAministration a dbo:Region .
}",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
573,56,test,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # John Quincy Adams as an author and his works
  dbr:John_Quincy_Adams dbo:author dbr:Work1 .
  
  # Parent of John Quincy Adams who is a politician and office holder
  dbr:John_Quincy_Adams dbo:child ?parent .
  ?parent rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Decedent at Quincy, Massachusetts
  ?parent dbp:placeOfDeath dbr:Quincy,_Massachusetts .

  # Charlie Baker's administration as a region where he is a decedent
  dbr:Charlie_Baker dbo:administration dbr:Region1 .
  ?parent dbp:placeOfDeath dbr:Region1 .

}
```

This query assumes:
- `dbr:Work1` and `dbr:Region1` are placeholders for actual DBpedia resources representing John Quincy Adams' works and Charlie Baker's administration, respectively.
- The relationships such as `dbo:author`, `dbo:child`, `dbo:officeHolder`, and `dbp:placeOfDeath` are used based on typical DBpedia ontology.",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
582,59,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Step 1: Identify Kazuaki Nagasawa's child
  ?child dbo:parent dbr:Kazuaki_Nagasawa .
  
  # Step 2: Find the father of this child who is an athlete, soccer manager, and sports manager
  ?father dbo:spouse ?mother . 
  ?child dbo:parent ?father .
  ?father a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .

  # Step 3: Determine the residence associated with this person
  ?residence dbo:resident ?father .

  # Step 4: Link this residence to Hirotaka Sugawara, who is a scientist
  ?scientist dbo:residence ?residence ;
             rdfs:label ""Hirotaka Sugawara""@en .
  ?scientist a dbo:Scientist .
  
  BIND(?father AS ?player)
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
433,68,test,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in the profession of Bob Marley and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find Ornette Coleman's associated musical artist
  ?ornetteColeman a dbr:Ornette_Coleman ;
                 dbo:musicalArtist ?artist1 .

  # Step 2: Find Bob Marley's profession and find artists in that field
  ?bobMarley a dbr:Bob_Marley ;
             dbo:profession ?profession .
  
  ?artist1 dbo:profession ?profession ;
           dbo:musicalArtist ?artist2 .

  # Step 3: Find Paul Chambers' birthplace persona
  ?paulChambers a dbr:Paul_Chambers ;
                dbo:birthPlace ?personaBirthPlace .
  
  ?personaBirthPlace dbo:associatedMusicalArtist ?artist3 ;
                     a dbo:Person, dbo:MusicalArtist .

  # Final step: Find the associated musical artist of the persona
  ?artist2 dbo:musicalArtist ?finalArtist .
}
```",8,14,9,3,3,3,3,71,0,0,4,0,0.0,0
892,56,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of Henri Crolla and landmark at elevation of 58.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region WHERE {
  # Find the political party associated with Andrea Cozzolino
  ?party a dbo:PoliticalParty ;
         dbo:member dbr:Andrea_Cozzolino .

  # Identify regions in Italy that are also settlements and administrative regions
  ?region a dbo:Region, dbo:Settlement, dbo:AdministrativeRegion ;
          dbo:country dbr:Italy .

  # Match the region with Henri Crolla's profession
  ?profession a dbo:Profession ;
              dbo:person dbr:Henri_Crolla .
  ?region dbo:hasOccupation ?profession .

  # Include landmarks at an elevation of 58
  ?landmark a dbo:Lighthouse, dbo:Landmark ;
            dbo:elevation ""58""^^xsd:int ;
            dbo:locatedIn ?region .

}
```",6,12,7,3,3,3,3,71,0,0,2,0,0.0,0
874,19,test,"Give me the band of the band member of the band, that is an organisation, of Mark Read (singer) and band of the writer, that is an artist and a musical artist, of Mezzanine (album).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfMarkRead ?bandOfWriter
WHERE {
  # Find Mark Read's band that is an organization
  ?person rdfs:label ""Mark Read (singer)""@en .
  ?member dbo:member ?person .
  ?member a dbo:Band ;
          dbo:isClassifiedAs dbr:Musical_group .

  # Find the writer of Mezzanine who is both an artist and a musical artist
  ?album rdfs:label ""Mezzanine (album)""@en .
  ?writer dbo:author ?album .
  ?writer a dbo:Artist, dbo:MusicalArtist .

  # Find the band associated with this writer
  ?bandOfWriter dbo:member ?writer ;
                a dbo:Band ;
                dbo:isClassifiedAs dbr:Musical_group .

  # Bind results
  BIND(?member AS ?bandOfMarkRead)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
267,18,test,"Give me the person born on the birth date of Dan Cathy and coach of the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/coach> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Get Dan Cathy's birth date
  VALUES ?danCathyBirthDate { 
    SELECT ?birthDate WHERE { 
      dbr:Dan_Cathy dbo:birthday ?birthDate .
    }
  }

  # Step 2: Find a person born on the same date
  ?person dbo:birthday ?birthDate .

  FILTER (?birthDate = ?danCathyBirthDate)

  # Step 3: Check if this person is a coach of any soccer club
  OPTIONAL {
    ?person dbo:managerOf ?soccerClub .
  }

  # Step 4: Find the manager of Tractor S.C. in 2020–21
  VALUES ?tractorManager { 
    SELECT ?manager WHERE { 
      dbr:Tractor_S.C._(football)_season_2020%E2%80%9321 dbo:manager ?manager .
    }
  }

  # Ensure the person is also the manager of Tractor S.C. in that season
  FILTER (?person = ?tractorManager)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
83,9,test,"Give me the player in the person born on 1995-07-07 and player in the person born, that is an athlete, on 1991-11-19.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ""1991-11-19""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1995-07-07""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Player born on 1995-07-07 who is an athlete
  { 
    ?player a dbo:Athlete ;
            dbo:birthDate ""1995-07-07""^^xsd:date .
  }
  
  UNION
  
  # Player born on 1991-11-19 who is an athlete
  {
    ?player a dbo:Athlete ;
            dbo:birthDate ""1991-11-19""^^xsd:date .
  }
}
```",4,5,5,2,2,2,2,9,0,60,5,0.0,0.0,0
192,18,test,"Give me the spouse of the spouse, that is a royalty, of the child of Charles II of Naples and child of the child of Stephen V of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalSpouse WHERE {
  # Step 1: Find children of Charles II of Naples
  ?childCharles2 dbp:father dbr:Charles_II_of_Naples .
  
  # Step 2: Find grandchildren of Stephen V of Hungary
  ?grandchildStephen5 dbo:parent ?childStephV ;
                     dbo:parent ?stephen5 .

  # Step 3: Identify common child
  ?commonChild owl:sameAs ?childCharles2 .
  ?commonChild owl:sameAs ?grandchildStephen5 .

  # Step 4: Find spouse of the common child
  ?spouse1 dbp:spouse ?commonChild .

  # Step 5: Find spouse of that spouse who is royalty
  ?royalSpouse dbp:spouse ?spouse1 .
  ?royalSpouse a dbo:Monarch ;
               dbo:country ?country .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
791,57,test,"Give me the spouse of Taira no Tokuko and father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v5 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Taira no Tokuko's spouse
  dbr:Taira_no_Tokuko dbo:spouse ?spouse .
  
  # Child of Emperor Takakura and Taira no Tokuko (Emperor Antoku)
  ?child dbo:parent dbr:Emperor_Takakura ;
         dbo:parent dbr:Taira_no_Tokuko .

  # Predecessor of Emperor Antoku is Emperor Takakura
  ?antoku dbo:predecessor dbr:Emperor_Takakura .
  
  # Child of Emperor Antoku who is an office holder and royalty
  ?descendant dbo:parent ?antoku ;
              a dbo:Monarch ;
              (dbo:officeHolder|dbo:royalty) ?position .

  FILTER(?child = dbr:Emperor_Antoku)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
933,69,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of Alan Warner (musician) and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?birthName ?ramongBand
WHERE {
  # Step 1: Find the person born on 1947-04-21 who is a musical artist
  ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
          rdf:type dbo:MusicalArtist .

  # Step 2: Get the birth name of Alan Warner (musician)
  ?person dbp:birthName ?birthName .
  
  FILTER(?birthName = ""Alan Warner"")

  # Step 3: Find the band associated with this person
  ?band dbo:member ?person ;
        rdf:type [ a dbo:Band ; 
                   owl:sameAs <http://dbpedia.org/ontology/Organisation> ] .

  # Step 4: Identify another band associated with ""The Ramong Sound""
  dbr:The_Ramones dbp:associatedBand ?ramongBand .
  
  FILTER(?ramongBand rdf:type dbo:Artist ;
           ?ramongBand rdf:type dbo:MusicalArtist)
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
417,66,test,"Give me the child of the father of Frederick IX of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  # Frederick IX of Denmark
  ?frederickIX dbo:father ?fatherFrederickIX .
  
  # Child of Frederick IX's father (royalty)
  ?child1 dbo:parent ?fatherFrederickIX ;
          a dbo:Monarch .

  # Alexandrine of Mecklenburg-Schwerin
  ?alexandrine dbp:parent ?parentAlexandrine .
  
  # Parent of Alexandrine (royalty) and spouse
  ?spouseParent dbo:spouse ?parentAlexandrine ;
                a dbo:Monarch .

  # Count Ingolf of Rosenborg
  ?countIngolf dbp:parent ?parentCountIngolf .
  
  # Spouse of Alexandrine's parent is also child of Count Ingolf's parent
  ?child2 dbo:parent ?parentCountIngolf ;
          a dbo:Monarch ;
          = ?spouseParent .

  # The final child we are looking for
  ?finalChild dbo:parent ?child1 .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
93,20,test,"Give me the death place of the governor of the native, that is a politician, of Seattle and capital of the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
SELECT ?deathPlace WHERE {
  ?governor dbo:officeHolderOf dbr:Governor_of_Washington .
  ?governor dbo:deathPlace ?deathPlace .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
456,56,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in  and spouse of the actor of Pacific Drive.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandOfBand
WHERE {
  # Alan Doyle and his band
  ?alanDoyle dbo:member ?doyleBand .
  
  # The band of the band (musical artist)
  ?doyleBand dbo:musicalArtist ?firstBand .
  
  # The second level band that is professional
  ?firstBand dbo:musicalArtist ?secondBand .
  ?secondBand dbp:profession ""musician"" .

  # Spouse who acted in Pacific Drive
  ?spouse dbo:spouse ?secondBand ;
          dbo:film ?pacificDrive .
  ?pacificDrive rdfs:label ""Pacific Drive""@en .
  
  # Return the band of interest
  ?secondBand dbo:musicalArtist ?bandOfBand .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
232,9,test,"Give me the claim to fame of the person born as Emily Katherine Jacques and artistic movement of the person born, that is a writer, on 1849-09-14.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/movement> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Emily Katherine Jacques""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1849-09-14""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame ?artisticMovement WHERE {
  VALUES ?person { dbr:Kate_Chopin }
  
  OPTIONAL {
    ?person dbo:occupation ?claimToFame .
  }

  OPTIONAL {
    ?person dbo:artisticMovement ?artisticMovement .
  }
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
715,66,test,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Abd el-Krim as a commander in a military conflict
  ?conflict dbo:commander dbr:Abd_el-Krim .
  
  # Carlos Franco Iribarnegaray's role
  ?office dbo:leader dbr:Carlos_Franco_Iribarnegaray ;
          dbo:commanderInConflict ?conflict .

  # Francisco Largo Caballero's role
  ?office2 dbo:leader dbr:Francisco_Largo_Caballero ;
           dbo:commanderInConflict ?conflict .
  
  # Find the commander in the conflict
  ?conflict dbo:commander ?commander .
}
```

This query assumes that:
- `dbo:commander` links a military conflict to its commanders.
- `dbo:leader` links an office (government agency or organization) to its leader.
- `dbo:commanderInConflict` is used to associate leaders with their roles in the conflict.",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
888,20,test,"Give me the commander in the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022) and awardee of the award of the commander in 2022 Ukrainian eastern counteroffensive.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/property/awards> ?v5 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?award WHERE {
  # Find the military force related to War in Donbas
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:partOf dbr:War_in_Donbass_(2014–2022) .

  # Identify the commander of this military force
  ?commanderRole a dbo:Commander ;
                 dbo:agent ?commander ;
                 dbo:militaryUnit ?militaryForce .

  # Find awards related to the 2022 Ukrainian eastern counteroffensive
  ?award a dbo:Award ;
         dbo:recipient ?commander ;
         dbo:relatedEvent dbr:2022_Ukrainian_eastern_counteroffensive .
}",6,8,7,3,2,3,2,20,0,0,4,0,0.0,0
456,61,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
SELECT ?bandArtist WHERE {
  # Step 1: Identify Lamont Cranston's alter ego
  dbpedia:Lamont_Cranston dbo:alterEgo dbpedia:The_Shadow .

  # Step 2: Find Alan Doyle's band
  dbpedia:Alan_Doyle dbo:musicalBand dbpedia:Great_Big_Sea .

  # Step 3: Determine the band of Alan Doyle's band (interpreted as finding related bands)
  ?relatedBand dbo:genre dbpedia:Irish_folk_music . # Assuming genre similarity

  # Step 4: Find the musical artist associated with that band
  ?relatedBand dbo:musicalArtist ?bandArtist .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
459,23,val,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?governor WHERE {
  # Find Kevin Stitt's birth name
  ?kevinStitt a dbo:Person ;
              dbp:birthName ""Kevin Stitt""@en .

  # Find Cliff Roquemore's death place
  ?cliffRoquemore a dbo:Person ;
                  dbp:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # Get the governor of the death place
  ?deathPlace dbo:governor ?governor .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
773,49,val,"Give me the spouse of the father of Charles the Fat and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Charles the Fat's father
  ?charlesFat dbo:father ?fatherOfCharlesFat .
  
  FILTER (str(?charlesFat) = ""Charles_the_Fat"")

  # Step 2: Find the spouse of Charles the Fat's father
  ?fatherOfCharlesFat dbo:spouse ?spouse .

  # Step 3: Identify a child of this spouse who is royalty
  ?child dbo:parent ?spouse .
  ?child rdf:type dbo:Monarch .

  # Step 4: This child must be the parent of someone who is both an office holder and a royalty
  ?officeHolderParent dbo:parent ?child .
  ?officeHolderParent rdf:type dbo:Monarch .
  ?officeHolderParent dbo:officeHolder ?office .

  # Step 5: Identify Carloman of Bavaria's father, who must be this office holder and royalty
  ?carlomanFather dbo:father dbr:Carloman_of_Bavaria .
  
  FILTER (str(?officeHolderParent) = str(?carlomanFather))
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
18,20,val,"Give me the professional in  and parent of the professional in Actress and alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalIn ?parent
WHERE {
  ?person a dbo:Actor ;
          dbo:almaMater dbr:Marymount_College_(Tarrytown,_New_York) .

  ?person dbo:profession ?professionalIn .
  OPTIONAL { ?person dbo:parent ?parent . }

  FILTER (str(?person) = ""Jane_Doe"") # Replace with the actual DBpedia resource name for Jane Doe
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
443,23,val,Give me the landmark at elevation of the award of William Shepherd and birthplace of the work of yes.,"SELECT ?result WHERE { <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/author> ""yes""@en . ?result <http://dbpedia.org/ontology/elevation> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Find an award associated with William Shepherd
  ?award dbo:recipient dbr:William_Shepherd .
  
  # Get the elevation of this award's location
  ?awardLocation dbo:elevation ?elevation .

  # Find a work by Yes and its birthplace
  ?work dbo:artist dbr:Yes ;
        dbo:birthPlace ?birthPlace .

  # Get the elevation of the birthplace
  ?birthPlace dbo:elevation ?sameElevation .

  FILTER (?elevation = ?sameElevation)

  # Find a landmark at this elevation
  ?landmark dbo:elevation ?elevation .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
917,49,val,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfFather ?parentOfChild 
WHERE {
  # Kamehameha III and his child who is royalty
  dbr:Kamehameha_III dbo:spouse ?spouse1 .
  ?child1 dbo:parent ?spouse1 ;
         dbo:parent dbr:Kamehameha_III ;
         a dbo:Monarch .

  # The father of that child (Kamehameha III) and his other child who is royalty
  ?childOfFather dbo:parent dbr:Kamehameha_III ;
                 a dbo:Monarch .

  # Kamehameha IV and his parent who is royalty
  dbr:Kamehameha_IV dbo:parent ?spouse2 .
  ?parentOfChild dbo:parent dbr:Kamehameha_IV ;
                 a dbo:Monarch .
}
```

This query does the following:

- Identifies Kamehameha III's children who are royalty.
- Finds another child of Kamehameha III who is also royalty (the ""child of the father"").
- Identifies Kamehameha IV and his parent who is royalty.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
170,23,val,Give me the entity in the work of International Energy Agency and domain of the profession of John Scholey.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?result <http://dbpedia.org/ontology/leaderTitle> ?v1 . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInIEAWork ?professionDomain
WHERE {
  # Find entities related to the work of the International Energy Agency
  ?ieaWork dbo:field dbr:International_Energy_Agency .
  ?ieaWork dbo:subject ?entityInIEAWork .

  # Find John Scholey's profession and its domain
  ?johnScholey a dbo:Person ;
               foaf:name ""John Scholey"" ;
               dbo:occupation ?profession .
  ?profession dbo:field ?professionDomain .
}
```",4,4,5,2,2,2,3,28,0,0,99,0,0.0,0
645,46,val,"Give me the commander in the force of the commander in Siege of Madrid and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Find the Siege of Madrid event
  ?siegeEvent a dbo:MilitaryConflict ;
              rdfs:label ""Siege of Madrid""@en .

  # Link Francisco Largo Caballero to the event
  ?person dbr:Francisco_Largo_Caballero ;
          dbo:participatedIn ?siegeEvent .

  # Find the commander involved in the Siege of Madrid
  ?commander dbo:commanded ?militaryForce ;
            dbo:participatedIn ?siegeEvent .

  FILTER(LANG(?commander) = ""en"")
}
```

This query does the following:
- Identifies the Siege of Madrid as a military conflict.
- Links Francisco Largo Caballero to this event.
- Retrieves the commander involved in the siege and their associated military force.",5,8,6,3,2,3,3,71,0,0,53,0,0.0,0
715,42,val,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in Spanish Civil War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?abdElKrimCommander ?carlosFrancoCommander ?officeLeader WHERE {
  # Abd el-Krim's commander in the Rif War
  OPTIONAL {
    ?rifWar a dbo:MilitaryConflict ;
            dbo:commander ?abdElKrimCommander .
    FILTER EXISTS { ?abdElKrimCommander dbr:Abd_el-Krim }
  }

  # Carlos Franco Iribarnegaray's commander in the Spanish Civil War
  OPTIONAL {
    ?spanishCivilWar a dbo:MilitaryConflict ;
                    dbo:commander ?carlosFrancoCommander .
    FILTER EXISTS { ?carlosFrancoCommander dbr:Carlos_Franco_Iribarnegaray }
  }

  # Carlos Franco Iribarnegaray's leadership in an office
  OPTIONAL {
    ?office a (dbo:GovernmentAgency | dbo:Organization) ;
            dbo:leader ?officeLeader .
    FILTER EXISTS { ?officeLeader dbr:Carlos_Franco_Iribarnegaray }
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
839,44,val,"Give me the band of the member of Böhse Onkelz and band of Kevin Russell (musician) and band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v4 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band1 ?band2 ?band3 WHERE {
  # Böhse Onkelz member's band
  ?member dbo:memberOf dbr:Böhse_Onkelz .
  ?member dbo:associatedBand ?band1 .

  # Kevin Russell's band
  dbr:Kevin_Russell dbo:associatedBand ?band2 .

  # Charlie Huhn's associated band
  dbr:Charlie_Huhn dbo:associatedBand ?band3 .
  
  FILTER (isMusicalArtist(?band1) && isMusicalArtist(?band2) && isMusicalArtist(?band3))
}

# Helper function to check if a resource is a musical artist
FILTER {
  EXISTS { ?band1 rdf:type dbo:MusicalArtist . }
  EXISTS { ?band2 rdf:type dbo:MusicalArtist . }
  EXISTS { ?band3 rdf:type dbo:MusicalArtist . }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
41,23,val,"Give me the party of the work, that is an office holder, of yes and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?officeHolderParty ?leaderParty
WHERE {
  # Find the election event
  ?election a dbo:Election ;
            dbo:electionDate ?date .
  
  FILTER (YEAR(?date) = 2005 && CONTAINS(LCASE(STR(?election)), ""castlereagh borough council""))

  # Find office holders associated with this election
  ?officeHolder dbo:positionHeldBy ?person ;
               dbo:party ?officeHolderParty .

  # Ensure the person is an office holder and politician
  ?person a dbo:Politician ;
          dbo:occupation ?occupation .
  
  FILTER (CONTAINS(LCASE(STR(?occupation)), ""politician"") || CONTAINS(LCASE(STR(?occupation)), ""office holder""))

  # Find leaders associated with this election
  ?leader dbp:leaderOf ?election ;
          dbo:party ?leaderParty .

  # Ensure the leader is a politician and office holder
  ?leader a dbo:Politician ;
          dbo:occupation ?leaderOccupation .
  
  FILTER (CONTAINS(LCASE(STR(?leaderOccupation)), ""politician"") || CONTAINS(LCASE(STR(?leaderOccupation)), ""office holder""))
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
865,41,val,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of Shahla Khatun and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Abu Ahmad Abdul Hafiz's child who is a politician
  ?child dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz ;
         a dbo:Politician .

  # Shahla Khatun's father
  ?shahla dbo:parent ?father ;
          rdfs:label ""Shahla Khatun""@en .

  # Ram Jaipal Singh Yadav's country of residence
  ?ram dbo:nationality ?country .
  
  # Match the politician child with Shahla Khatun's father
  ?child dbo:parent ?father .

  # Ensure the father is from the same country as Ram Jaipal Singh Yadav
  ?father dbo:nationality ?country .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
216,54,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in the coach of Croatia national under-21 football team and team of Ognjen Vukojević.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v5 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Džemal Berberović's coach for Croatia national under-21 football team
  ?coach dbo:player ?džemal .
  ?džemal rdfs:label ""Džemal Berberović""@en .

  # Find Ognjen Vukojević's club
  ?club dbp:manager ?ognjen .
  ?ognjen rdfs:label ""Ognjen Vukojević""@en .
  
  # Ensure the club is an organization and a soccer club
  ?club rdf:type dbo:SoccerClub ;
        rdf:type dbo:SportsOrganization .

  # Find the person who is both a player in the coach of Džemal Berberović's team and Ognjen Vukojević's club
  ?person dbo:playerInCoach ?coach .
  ?person dbo:playerInCoach ?ognjen .

  # Ensure this person is a soccer player, sports manager, and soccer manager
  ?person rdf:type dbo:SoccerPlayer ;
          rdf:type dbo:SportsManager ;
          rdf:type dbo:SoccerManager .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
129,21,val,Give me the associated musical artist of the person born as Tahj Malik Chandler and associated musical artist of EarthGang and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personName ?artist WHERE {
  { 
    ?person a dbo:MusicalArtist ;
            foaf:name ""Childish Gambino"" .
    OPTIONAL { ?person dbo:associatedBandOrMusicalArtist ?artist . }
    BIND(""Tahj Malik Chandler"" AS ?personName)
  } UNION {
    ?band a dbo:MusicalBand ;
          foaf:name ""EarthGang"" .
    OPTIONAL { ?band dbo:associatedBandOrMusicalArtist ?artist . }
    BIND(""EarthGang"" AS ?personName)
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
976,47,val,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leaderOffice ?mayorOffice WHERE {
  # Leader of the Grand National Assembly of Turkey
  ?assembly dbr:Grand_National_Assembly_of_Turkey ;
            dbo:headLeader ?leader .
  ?leader dbo:nationality dbr:Turkey ;
          dbo:office ?leaderOffice .

  # Mayor associated with Millet İttifakı
  ?mayor dbo:nationality dbr:Turkey ;
         dbo:office ?mayorOffice ;
         dbo:memberOf ?party .
  ?party rdfs:label ""Millet İttifakı""@tr .

  FILTER(LANG(?leaderOffice) = 'en' && LANG(?mayorOffice) = 'en')
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
573,52,val,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and parent of John Quincy Adams and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://dbpedia.org/property/governor> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentAtResidence WHERE {
  # Find William J. Phelan's residence
  ?residence a dbo:Settlement ;
             dbo:resident ?williamJPhelan .
  
  # Ensure the person is a decedent at this residence and parent of John Quincy Adams
  ?personDecedentAtResidence dbo:deceasedPlace ?residence ;
                             dbo:child dbr:John_Quincy_Adams .

  # Find Charlie Baker's real name
  ?charlieBaker dbr:Charlie_Baker_(Australian_footballer) ;
                foaf:name ?realName .
  
  # Find the administration region where this person was a decedent
  ?administrationRegion a dbo:AdministrativeRegion ;
                       dbo:deceasedPlace ?personDecedentAtResidence .

}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
645,48,val,"Give me the commander in the force of the commander in Siege of Madrid and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInForce WHERE {
  # Find the commander in the Siege of Madrid
  ?siegeEvent a dbo:MilitaryConflict ;
              dbo:commander ?siegeCommander .

  FILTER(STRSTARTS(LCASE(?siegeEvent), ""siege_of_madrid"")).

  # Find Camilo Menéndez Tolosa's role as leader of an office or agency
  ?office a dbo:GovernmentAgency, dbo:Organization ;
          dbo:leader ?camiloMenendezTolosa .

  FILTER(STRSTARTS(LCASE(?camiloMenendezTolosa), ""camilo_menéndez_tolosa"")).

  # Find the commander in the force led by the siege commander
  ?force a dbo:MilitaryUnit ;
         dbo:commander ?commanderInForce .
  
  ?siegeCommander dbo:commanderOf ?force .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
926,47,val,Give me the father of the father of Abdulaziz and successor of the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity WHERE {
  # Abdulaziz's father
  ?abdulaziz a dbr:Abdulaziz_I_of_Saudi_Arabia ;
             dbo:father ?fatherOfAbdulaziz .

  # Father of Abdulaziz (grandfather)
  ?fatherOfAbdulaziz dbo:father ?grandfatherOfAbdulaziz .

  # Şermi Kadın's spouse
  dbr:Şermi_Kadın dbo:spouse ?spouseOfSermiKadin .

  # Child of Şermi Kadın's spouse
  ?spouseOfSermiKadin dbo:child ?childOfSpouse .

  # Successor of the child
  ?childOfSpouse dbo:successor ?successorOfChild .

  # Find common entity
  FILTER (?grandfatherOfAbdulaziz = ?commonEntity || ?successorOfChild = ?commonEntity)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
976,55,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as Mehmet Naci Bostancı and office of the leader, that is a politician, of Grand National Assembly of Turkey.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?mayorOffice ?bostanciOffice ?assemblyLeaderOffice
WHERE {
  # Mayor of Nation Alliance (Turkey)
  ?person dbo:nationality dbr:Turkey ;
          dbo:partyAffiliation dbr:Nation_Alliance_(Turkey) ;
          dbo:occupation dbr:Politician ;
          dbo:officeHolder ?mayorOffice .
  
  # Office of Mehmet Naci Bostancı
  dbr:Mehmet_Naci_Bostancı dbo:birthName ""Mehmet Naci Bostancı""^^xsd:string ;
                           dbo:officeHolder ?bostanciOffice .

  # Leader of Grand National Assembly of Turkey
  ?leader dbo:occupation dbr:Politician ;
          dbo:officeHolder ?assemblyLeaderOffice .
  FILTER EXISTS { ?leader dbo:memberOf dbr:Grand_National_Assembly_of_Turkey }
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
839,54,val,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of Matthias Röhr.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v0 <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandKevin ?bandPeter ?bandMatthias WHERE {
  # Kevin Richard Russell
  ?kevin a dbo:MusicalArtist ;
         foaf:name ""Kevin Richard Russell"" .
  
  OPTIONAL {
    ?kevin dbo:memberOfBand ?bandKevin .
    ?bandKevin a dbo:Band ; 
               a dbo:MusicalGroup .
  }
  
  # Peter Schorowsky
  ?peter a dbo:MusicalArtist ;
         foaf:name ""Peter Schorowsky"" .
  
  OPTIONAL {
    ?memberOfPeter a dbo:Band ;
                   a dbo:MusicalGroup ;
                   dbo:bandMember ?peter .
    ?memberOfPeter rdfs:label ?bandPeter .
  }
  
  # Matthias Röhr
  ?matthias a dbo:MusicalArtist ;
            foaf:name ""Matthias Röhr"" .
  
  OPTIONAL {
    ?memberOfMatthias a dbo:Band ;
                      a dbo:MusicalGroup ;
                      dbo:bandMember ?matthias .
    ?memberOfMatthias rdfs:label ?bandMatthias .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
445,53,val,"Give me the death place of Patrick Moore and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in the award of George H. Cameron.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?deathPlace ?countryOfResidence ?awardEntity
WHERE {
  # Death place of Patrick Moore
  OPTIONAL {
    dbr:Patrick_Moore dbo:placeOfBirth ?deathPlace .
  }

  # Country of residence of an athlete from Great Britain
  OPTIONAL {
    ?athlete dbo:nationality dbr:United_Kingdom ;
             dbo:residence ?residence .
    ?residence dbp:countryName ?countryOfResidence .
  }

  # Entity in the award of George H. Cameron
  OPTIONAL {
    dbr:George_H._Cameron dbo:award ?award .
    ?award dbo:recipient ?awardEntity .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
773,54,val,"Give me the spouse of the father of Charles the Fat and parent of Charles the Fat and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/ontology/successor> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Charles the Fat's father
  dbr:Charles_the_Fat dbo:father dbr:Louis_the_German .

  # Find Louis the German's spouse
  dbr:Louis_the_German dbo:spouse ?spouse .

  # Ensure the spouse is a royalty (Ermengarde of Hesbaye)
  FILTER(?spouse = dbr:Ermengarde_of_Hesbaye)

  # Connect to Louis the Pious through lineage
  OPTIONAL {
    ?successor dbo:childOf dbr:Louis_the_Pious .
    ?parent dbo:parent ?successor .
    ?parent dbo:spouse ?spouse .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
507,43,val,"Give me the professional in Film director, television director and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of Anne V. Coates.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v4 <http://dbpedia.org/ontology/director> ?result . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthDate ""1919-06-17""^^xsd:date .
  ?person dbo:spouse dbr:Anne_V._Coates .
  ?person dbo:occupation dbr:Film_director ;
          dbo:occupation dbr:Television_director ;
          dbo:directorOf dbr:Movie .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
36,22,val,"Give me the actor of the claim to fame, that is a film, of Lepacious Bose and person born in the birth year of Deanne Bray.",SELECT ?result WHERE { <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v0 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthYear> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find Deanne Bray's birth year
  dbr:Deanne_Bray dbo:birthYear ?deanneBirthYear .

  # Find films associated with Leopoldo Gout
  dbr:Leopoldo_Gout dbo:film ?film .
  
  # Get actors from those films
  ?film dbo:starring ?actor .
  
  # Filter actors born in the same year as Deanne Bray
  ?actor dbo:birthYear ?actorBirthYear .
  FILTER (?actorBirthYear = ?deanneBirthYear)
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
200,7,val,Give me the reference to the name of Angelcorpse and band member of Order from Chaos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Angelcorpse> <http://xmlns.com/foaf/0.1/name> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Order_from_Chaos> . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName WHERE {
  # Find Angelcorpse band entity
  ?angelcorpse a dbo:Band ;
               rdfs:label ""Angelcorpse""@en .

  # Find members of Angelcorpse
  ?angelcorpse dbo:bandMember ?member .

  # Get the name of the member
  ?member rdfs:label ?memberName .

  # Check if the member is associated with Order from Chaos
  OPTIONAL {
    ?orderFromChaos a dbo:Band ;
                    rdfs:label ""Order from Chaos""@en .
    ?member dbo:bandMember ?orderFromChaos .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
582,46,val,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  # Find Hirotaka Sugawara
  ?sugawara a dbo:Scientist ;
            foaf:name ""Hirotaka Sugawara"" .

  # Find Masami Nagasawa and her father
  ?nagasawa a dbo:Athlete, dbo:SoccerManager ;
            foaf:name ""Masami Nagasawa"" .
  
  ?father a dbo:Athlete, dbo:SportsManager ;
          dbo:child ?nagasawa ;
          foaf:name ?fatherName .

  # Find the residence of Hirotaka Sugawara referenced by his father
  ?residence dbo:resident ?sugawara ;
             dbo:reference ?father .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
507,55,val,"Give me the spouse of the person born as Anne Voase Coates and professional in the profession of Guy Ferland and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v3 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v5 <http://dbpedia.org/ontology/director> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Anne Voase Coates
  dbr:Anne_Voace_Coates a dbo:FilmEditor ;
                        foaf:surname ""Coates"" ;
                        foaf:givenName ""Anne Voace"" .

  # Find the movie directed by her that features Beryl Reid
  ?movie dbo:director dbr:Anne_Voace_Coates ;
         dbo:starring dbr:Beryl_Reid .

  # Get the spouse of Anne Voase Coates
  dbr:Anne_Voace_Coates dbo:spouse ?spouse .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
976,54,val,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office1 ?office2 ?office3 WHERE {
  # Office of the leader of Grand National Assembly of Turkey
  dbr:Grand_National_Assembly_of_Turkey dbo:leader ?person1 .
  ?person1 dbo:positionHeld ?office1 .

  # Office of Naci Bostancı
  dbr:Naci_Bostancı dbo:positionHeld ?office2 .

  # Office of the mayor related to Millet İttifakı
  dbr:Millet_İttifakı dbo:member ?person3 .
  ?person3 a dbo:Politician ;
           dbo:holdsOffice ?office3 .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
41,21,val,"Give me the party of Declan Costello and party of the work, that is an office holder, of yes and party of Mark Durkan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/author> ""yes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?declanParty ?markParty WHERE {
  # Declan Costello's political party
  OPTIONAL { 
    dbr:Declan_Costello dbo:party dbr:Fine_Gael .
    BIND(dbr:Fine_Gael AS ?declanParty)
  }
  
  # Mark Durkan's political party
  OPTIONAL { 
    dbr:Mark_Durkan dbo:party dbr:Sinn_Féin .
    BIND(dbr:Sinn_Féin AS ?markParty)
  }
}
```",4,5,5,2,3,2,3,28,1,0,0,1.0,1.0,1.0
645,55,val,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader ?office ?militaryForce ?commander 
WHERE {
  # Find the office led by Camilo Menéndez Tolosa
  ?office a dbo:GovernmentAgency ;
          a dbo:Organization ;
          dbo:head dbr:Camilo_Menéndez_Tolosa .

  # Find the military force associated with Francisco Largo Caballero
  ?militaryForce a dbo:MilitaryConflict ;
                 a dbo:SocietalEvent ;
                 dbo:event dbr:Francoist_Spain ; # Assuming Francoist Spain as an example event
                 dbo:commander dbr:Francisco_Largo_Caballero .

  # Find the commander role of Carlos Asensio Cabanillas in that military force
  ?militaryForce dbo:commander dbr:Carlos_Asensio_Cabanillas .
  
  # Get the leader of the office
  ?office dbo:head ?leader .
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
892,50,val,"Give me the landmark at elevation of the award of the member of E-girls and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation ;
            dbo:location dbr:Italy .
  
  OPTIONAL { ?award dbo:recipient ?member . 
             ?member dbo:memberOf dbr:E-girls .
           }
  
  OPTIONAL { ?entity dbo:administrativeRegion dbr:Italy ;
                   a dbo:AdministrativeRegion .
           }

  FILTER EXISTS {
    ?party dbo:country dbr:Italy ;
           rdfs:label ""Democratic Party (Italy)""@en .
  }
}
```

This query attempts to find landmarks in Italy with an elevation, potentially linked to awards of E-girls members and entities within Italian administrative regions connected to the Democratic Party.",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
645,42,val,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of Spanish Civil War and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?organisation ?militaryForce ?commander WHERE {
  # Find Camilo Menéndez Tolosa's role in a government agency or organization
  OPTIONAL {
    ?camilo dbr:Camilo_Menéndez_Tolosa .
    ?camilo dbo:positionHeld ?role .
    ?role dbo:organization ?organisation .
    FILTER (STRSTARTS(STR(?organisation), ""http://dbpedia.org/resource/Category:"") || STRSTARTS(STR(?organisation), ""http://dbpedia.org/resource/Government_""))
  }

  # Find Carlos Asensio Cabanillas' military force and command position
  OPTIONAL {
    ?carlos dbr:Carlos_Asensio_Cabanillas .
    ?carlos dbo:militaryUnit ?militaryForce .
    ?carlos dbo:commanderOf ?forceCommand .
    ?forceCommand dbo:leader ?commander .
  }

  # Link the leader of the organization to the military force
  OPTIONAL {
    ?organisation dbo:leader ?leader .
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
987,53,val,"Give me the birth place of Moamer Kasumović and entity in the region, that is a country, of Central European Time and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlaceKadhafi ?countryCET ?bandBirthPlace
WHERE {
  # Birthplace of Moamer Kadhafi
  dbr:Moamer_Kadhafi dbo:birthPlace ?birthPlaceKadhafi .

  # Find countries in the region using Central European Time
  ?countryCET a dbo:Country ;
              dbo:timeZone dbp:CET ;
              dbo:location ?region .
  FILTER (?region = ?birthPlaceRegion)

  # Determine the region of Kadhafi's birthplace
  ?birthPlaceKadhafi dbo:location ?birthPlaceRegion .

  # Band associated with Dado Polumenta
  dbr:Dado_Polumenta dbo:memberOfBand ?band .
  
  # Birthplace of the band
  ?band dbo:birthPlace ?bandBirthPlace .
}",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
865,45,val,Give me the father of AK Abdul Momen and father of the child of the father of Abul Maal Abdul Muhith and native of British Raj.,SELECT ?result WHERE { <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?fatherAK ?grandfatherAbulMaal
WHERE {
  # Father of AK Abdul Momen
  ?akMomen a dbo:Person ;
           foaf:name ""AK Abdul Momen""@en .
  ?akMomen dbo:parent ?fatherAK .

  # Grandfather of Abul Maal Abdul Muhith
  ?abulMaal a dbo:Person ;
            foaf:name ""Abul Maal Abdul Muhith""@en .
  ?abulMaal dbo:parent ?fatherAbulMaal .
  ?fatherAbulMaal dbo:parent ?grandfatherAbulMaal .

  # Both are natives of British Raj
  ?fatherAK dbo:nationality <http://dbpedia.org/resource/British_Raj> .
  ?grandfatherAbulMaal dbo:nationality <http://dbpedia.org/resource/British_Raj> .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
926,42,val,"Give me the child of the father, that is a royalty, of Mustafa III and father of the father of Abdulaziz and successor of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Mustafa III's father
  ?mustafaIII_father dbo:spouse ?mother .
  ?mustafaIII_father dbo:child dbr:Mustafa_III .

  # Child of Mustafa III's father who is royalty
  ?royal_child dbo:parent ?mustafaIII_father .
  ?royal_child a dbo:Monarch .

  # Abdulaziz's grandfather
  ?abdulaziz_father dbo:child dbr:Abdülaziz_I .
  ?abdulaziz_grandfather dbo:child ?abdulaziz_father .

  # Successor of Mustafa III
  ?successor dbo:predecessor dbr:Mustafa_III .

  # The person we are looking for must satisfy all conditions
  FILTER (?royal_child = ?abdulaziz_grandfather && ?royal_child = ?successor)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
456,54,val,"Give me the professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and spouse of the actor of Pacific Drive and band of Alan Doyle.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?spouseName WHERE {
  # Lamont Cranston is known as The Shadow
  dbr:The_Shadow dbo:alias dbr:Lamont_Cranston .
  
  # Actor from Northern Exposure (Rob Morrow)
  dbr:Northern_Exposure dbo:actor dbr:Rob_Morrow .
  
  # Rob Morrow's spouse
  OPTIONAL { 
    dbr:Rob_Morrow dbo:spouse ?spouse .
    ?spouse rdfs:label ?spouseName .
  }
  
  # Alan Doyle and his band Great Big Sea
  dbr:Great_Big_Sea dbo:member dbr:Alan_Doyle .
  
  # Linking the spouse to Alan Doyle's band (hypothetical connection)
  OPTIONAL {
    ?spouse dbo:associatedBand dbr:Great_Big_Sea .
  }
}
```

This query attempts to find the alter ego of Lamont Cranston and connect it to the spouse of Rob Morrow, who is associated with Alan Doyle's band. Note that some connections might be hypothetical or require additional data not directly available in DBpedia.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
933,46,val,"Give me the reference to the birth name of Alan Warner (musician) and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthName ?band
WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Alan Warner"" ;
          foaf:givenName ?firstName ;
          foaf:familyName ?lastName .
  
  BIND(CONCAT(?firstName, "" "", ?lastName) AS ?birthName)

  OPTIONAL { 
    ?person dbo:band ?band .
    ?band dbo:genre ?genre .
    FILTER(CONTAINS(LCASE(STR(?genre)), ""ramones""))
  }
}
```

This query does the following:
- Selects Alan Warner as a musician.
- Retrieves his birth name by combining `foaf:givenName` and `foaf:familyName`.
- Optionally finds the band he was associated with, filtering for bands related to The Ramones genre.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
791,42,val,"Give me the predecessor of Emperor Antoku and father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Find Emperor Antoku's predecessor
  ?antoku dbo:succession dbr:Emperor_Antoku .
  ?predecessor dbo:succession ?antoku .

  # Step 2: Identify a child of Emperor Takakura who is royalty
  ?takakuraChild dbo:parent dbr:Emperor_Takakura ;
                 a dbo:Monarch .

  # Step 3: Find the spouse of this child (who must also be royalty)
  ?childSpouse dbo:spouse ?takakuraChild ;
               a dbo:Monarch .

  # Step 4: Identify the spouse of Emperor Takakura
  ?takakuraSpouse dbo:spouse dbr:Emperor_Takakura ;
                  a dbo:Monarch .

  # Step 5: Ensure the child's spouse is also the spouse of Emperor Takakura's spouse
  FILTER (?childSpouse = ?takakuraSpouse)

  # Step 6: The father of the child should be the predecessor of Emperor Antoku
  ?predecessor dbo:parent ?takakuraChild .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
606,16,val,"Give me the birthplace of the alumnus of University of Pennsylvania and figure known as the nickname of DeKalb, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          dbo:almaMater dbr:University_of_Pennsylvania ;
          foaf:nick ""Ike""@en .
  OPTIONAL { ?person dbo:placeOfBirth ?birthPlace . }
  FILTER(CONTAINS(LCASE(str(?person)), ""eisenhower""))
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
216,52,val,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and team of Ognjen Vukojević.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?playerInCoach WHERE {
  # Step 1: Find the organization and soccer club related to Croatia U21
  ?org a dbo:SoccerClub ;
      dbo:coach ?coach .
  
  FILTER (STRSTARTS(STR(?org), ""Croatia national under-21 football team""))

  # Step 2: Identify the player in the coach who is also a sports manager and soccer manager for Bosnia and Herzegovina U18
  ?coach dbo:playerInTeam ?playerInCoach .
  
  ?playerInCoach a dbo:SoccerPlayer ;
      dbo:sportManagerOf dbr:Bosnia_and_Herzegovina_national_under-18_football_team .

  # Step 3: Ensure this person is associated with Ognjen Vukojević as a teammate
  ?teamMemberTeam a dbo:SoccerClub ;
      dbo:player ?playerInCoach, dbr:Ognjen_Vukojević .
}",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
888,15,val,"Give me the commander in the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022) and awardee of Hero of Ukraine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""Hero of Ukraine""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?name WHERE {
  # Find the event related to War in Donbas
  ?event a dbo:SocietalEvent ;
         dbo:eventType dbr:Military_conflict ;
         dbo:location dbr:Donbas ;
         dbo:dateStart ?dateStart ;
         dbo:dateEnd ?dateEnd .

  FILTER(?dateStart >= ""2014-04-01""^^xsd:date && ?dateEnd <= ""2022-12-31""^^xsd:date)

  # Find the commander of this event
  ?commander dbo:role dbr:Military_commander ;
             dbo:award dbr:Hero_of_Ukraine ;
             dbo:associatedWith ?event .

  # Get the name of the commander
  ?commander rdfs:label ?name .
  
  FILTER(LANG(?name) = ""en"")
}
ORDER BY ?name",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
507,51,val,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and professional in the profession of the person born on 1966-02-18.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/director> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?result <http://dbpedia.org/property/occupation> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?director WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Beryl_Reid ;
         dbo:director ?director .

  ?person dbo:birthday ""1966-02-18""^^xsd:date ;
          dbo:profession ?profession .

  ?actor dbo:birthDate ?birthDate .
  FILTER (?birthDate = ""1966-02-18""^^xsd:date)
  
  ?movie dbo:starring ?actor .
  ?actor dbo:occupation ?profession .

  FILTER EXISTS { ?person dbp:name ?name . }
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
47,40,val,"Give me the office of Bidesh Ranjan Bose and office of the administration of the commander, that is a politician, in Operation Green Hunt and office of Ajoy Mukherjee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bideshOffice ?ajoyOffice ?operationGreenHuntRole
WHERE {
  # Bidesh Ranjan Bose's office
  OPTIONAL { 
    dbr:Bidesh_Ranjan_Bose dbo:office ?bideshOffice .
  }
  
  # Ajoy Mukherjee's office
  OPTIONAL { 
    dbr:Ajoy_Mukherjee dbo:office ?ajoyOffice .
  }

  # Operation Green Hunt and roles of politicians
  OPTIONAL {
    ?person dbo:occupation dbr:Politician ;
            dbo:memberOf ?organization .
    ?operationGreenHuntRole dbo:name ""Operation Green Hunt"" ;
                            dbo:member ?person .
    
    FILTER (?person IN (dbr:Bidesh_Ranjan_Bose, dbr:Ajoy_Mukherjee))
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
933,47,val,Give me the band of the band of Alan Warner (musician) and reference to the birth name of the professional in Musician.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandName ?birthName WHERE {
  # Find the band associated with Alan Warner (musician)
  OPTIONAL {
    ?person dbo:musicArtist dbr:Alan_Warner_(musician) .
    ?person dbo:memberOf ?band .
    ?band foaf:name ?bandName .
  }
  
  # Get the birth name of Alan Warner
  ?person foaf:name ""Alan Warner""@en ;
          foaf:givenname|foaf:mbox_sha1sum ?birthName .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
98,20,val,Give me the region of Philippine Standard Time and entity in Philippines and birth place of the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?entityInPhilippines ?birthPlace
WHERE {
  # Philippine Standard Time region
  dbr:Philippine_Standard_Time dbo:timeZoneRegion ?region .

  # Entity in the Philippines (using ""Philippines"" as a general entity)
  dbr:Philippines rdf:type ?entityInPhilippines .

  # Birthplace of Paolo Elito M. Ballesteros IV
  OPTIONAL {
    dbr:Paolo_Elito_M._Ballesteros_IV dbo:birthPlace ?birthPlace .
  }
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
281,19,val,"Give me the awardee of Medal bar and awardee of Volunteer Decoration and commander in the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?medalBarAwardee ?volunteerDecorationAwardee ?commanderInWarEvent ?militaryConflict WHERE {
  # Roy Boehm as the awardee of Medal Bar
  ?medalBarAwardee dbo:awardee dbr:Roy_Boehm .
  
  # Roy Boehm as the awardee of Volunteer Decoration
  ?volunteerDecorationAwardee dbo:awardee dbr:Roy_Boehm .

  # Roy Boehm as a commander in a war event
  ?commanderInWarEvent dbo:commander dbr:Roy_Boehm .
  
  # The war event is part of a military conflict
  ?commanderInWarEvent dbo:partOf ?militaryConflict .
}
```

This query assumes that the relationships `dbo:awardee`, `dbo:commander`, and `dbo:partOf` are used in DBpedia to represent these connections. Adjustments may be necessary based on the actual schema of DBpedia.",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
582,48,val,"Give me the figure known as the nickname of Japan national football team and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname ?scientist ?residence WHERE {
  # Find the nickname of the Japan national football team
  dbr:Japan_national_football_team dbo:nickname ?nickname .

  # Find a scientist with this nickname as an alias or reference
  ?scientist dbp:alias ?nickname .
  
  # Ensure the scientist is indeed a person and has residence information
  ?scientist a dbo:Scientist ;
             dbo:residenceLocation ?residence .

  # Optional: Filter to ensure relevance to Hirotaka Sugawara if needed
  FILTER (str(?scientist) != str(dbr:Hirotaka_Sugawara))
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
715,44,val,"Give me the commander in the force of Francisco Largo Caballero and commander in Rif War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderFrancisco ?commanderRifWar ?leaderCarlosFranco
WHERE {
  # Francisco Largo Caballero's commander in the force
  OPTIONAL {
    ?francisco dbo:commanderInForce ?commanderFrancisco .
    FILTER (str(?francisco) = ""Francisco_Largo_Caballero"")
  }

  # Commander in Rif War
  OPTIONAL {
    ?rifWar dbo:commander ?commanderRifWar .
    FILTER (str(?rifWar) = ""Rif_War"")
  }

  # Carlos Franco Iribarnegaray's leader of an office that is a government agency and organization
  OPTIONAL {
    ?carlosFranco dbo:leaderOfOffice ?office .
    ?office rdf:type dbo:GovernmentAgency ;
            rdf:type dbo:Organization .
    FILTER (str(?carlosFranco) = ""Carlos_Franco_Iribarnegaray"")
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
433,55,val,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and professional in the profession of Bob Marley and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  OPTIONAL { 
    dbr:Scott_LaFaro dbo:associatedMusicalArtist dbr:Bill_Evans .
    dbr:Bill_Evans dbo:associatedMusicalArtist ?artist1 .
  }
  
  OPTIONAL {
    dbr:Ron_Carter dbo:associatedMusicalArtist ?artist2 .
    FILTER (?artist1 = ?artist2)
  }

  BIND(?artist1 AS ?artist)
}
```",6,10,7,2,3,3,3,71,1,12,0,0.07692307692307693,1.0,0.14285714285714288
93,17,val,"Give me the capital of Alaska and death place of the governor of the native, that is a politician, of Seattle.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alaska> <http://dbpedia.org/ontology/capital> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?v0 <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital (SAMPLE(?deathPlace) AS ?deathPlace)
WHERE {
  # Capital of Alaska
  dbr:Alaska dbo:capital ?capital .

  # Governor of Seattle's native tribe, who is a politician
  ?governor a dbo:Politician ;
           dbo:nationality dbr:Native_American ;
           dbo:city dbr:Seattle .
  
  # Death place of the governor
  OPTIONAL { ?governor dbo:deathPlace ?deathPlace }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
645,54,val,"Give me the leader of Ministry of the Army (Spain) and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?result <http://dbpedia.org/ontology/battle> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader ?militaryForce ?event ?conflict ?societalEvent ?president
WHERE {
  # Ministry of the Army (Spain) leader
  ?ministry dbo:head ?leader .
  FILTER(STRSTARTS(STR(?ministry), ""http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)""))

  # Military force involving Carlos Asensio Cabanillas
  ?militaryForce dbo:commander ?cabanillas .
  ?cabanillas rdfs:label ""Carlos Asensio Cabanillas""@en .

  # Event and military conflict involving the military force
  ?event dbo:participatedInMilitaryConflict ?conflict ;
         dbo:militaryForce ?militaryForce .
  
  # Societal event related to the native president
  ?president dbo:nationality dbr:Spain ;
             dbo:officeHolder dbr:President_of_Spain ;
             dbo:politicalParty ?party .
  ?societalEvent dbo:relatedTo ?president .

  # Restoration (Spain) context
  ?restoration dbo:timeStart ?startYear .
  FILTER(?startYear >= 1874 && ?startYear <= 1931)
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
645,49,val,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person rdfs:label ""Carlos Asensio Cabanillas""@en .
  
  ?office dbo:type dbo:GovernmentAgency ;
          dbo:head ?leader .

  ?person dbo:birthPlace ?place .
  ?place rdfs:label ?locationLabel .
  FILTER(CONTAINS(LCASE(?locationLabel), ""restoration""))

  OPTIONAL { 
    ?person dbo:militaryCommanderOf ?force .
  }
}
```

This query attempts to find a person (Carlos Asensio Cabanillas) who is linked to a government agency and has a leadership role, while also being associated with the historical period of Restoration in Spain.",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
645,50,val,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Camilo Menéndez Tolosa's role
  dbr:Camilo_Menéndez_Tolosa dbo:positionHeld ?office .
  
  # Office is a government agency and organization
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .

  # Military force associated with an event that is a military conflict and societal event
  ?force dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict ;
         rdf:type dbo:SocietalEvent .

  # Native president during the Restoration period in Spain
  ?president dbo:nationality dbr:Spain ;
             dbo:positionHeld dbr:President_of_Spain ;
             dbo:termStart ?start ;
             dbo:termEnd ?end .
  
  FILTER (?start >= ""1874-01-01""^^xsd:date && ?end <= ""1931-04-14""^^xsd:date) # Restoration period

  # Linking the military force to the president
  ?force dbo:commandedBy ?president .

  # Leader of the office
  ?office dbo:leader ?leader .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
933,41,val,Give me the reference to the birth name of Alan Warner (musician) and band of the band of Alan Warner (musician) and band of The Ramong Sound.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName ?band
WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Alan Warner"" ;
          dbp:birthName ?birthName .
  
  OPTIONAL { 
    ?person dbo:musicalBand ?band .
    FILTER(CONTAINS(LCASE(STR(?band)), ""theramongsound""))
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
5,16,val,"Give me the entity in the award of Coro de la Pontificia Universidad Católica de Puerto Rico and birthplace of the person born, that is a politician, as .","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/birthName> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  # Find the award entity
  ?award a dbo:Award ;
         rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .

  # Find politicians who have received this award
  ?person dbo:occupation dbr:Politician ;
          dbo:honorAwarded ?award .

  # Ensure the politician's birthplace matches the place associated with the award
  ?person dbp:birthPlace ?birthPlace .
  
  FILTER (lang(?awardLabel) = 'en')
}
```

This query does the following:
- It identifies an entity that is labeled as ""Coro de la Pontificia Universidad Católica de Puerto Rico"" and is of type `dbo:Award`.
- It finds individuals (`?person`) who are politicians (`dbo:occupation dbr:Politician`) and have received this award.
- It checks if the birthplace of these individuals matches the place associated with the award.",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
129,22,val,"Give me the professional in the mayor of 1999 West Dunbartonshire Council election and associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge.",SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mayorProfession ?actor ?musicalArtist ?organisation
WHERE {
  # Find the mayor of West Dunbartonshire in 1999 and their profession
  ?mayor a dbo:Mayor ;
         dbo:electedDuring ?election .
  ?election dbo:date ""1999""^^xsd:gYear ;
            dbo:place dbr:West_Dunbartonshire_Council_Election,_1999 .

  # Get the professional title of the mayor
  ?mayor dbo:profession ?mayorProfession .

  # Find an actor associated with Dreamville Presents: Revenge
  ?event dbo:associatedMusicalArtist ?actor ;
         dbo:organisedBy ?organisation .
  ?event rdfs:label ""Dreamville Presents: Revenge""@en .

  # Get the musical artist associated with this actor
  ?actor dbo:associatedWith ?musicalArtist .

  # Ensure the organisation is related to Dreamville Presents: Revenge
  ?organisation rdfs:label ?orgLabel .
}
```",4,5,5,2,2,2,3,28,0,0,3,0,0.0,0
465,50,val,"Give me the successor of the child, that is a royalty, of Anne of Brittany and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
    # Anne of Brittany and her royal children
    dbr:Anne_of_Brittany dbo:child ?anneChild .
    ?anneChild a dbo:Monarch .

    # Elizabeth of Austria's parent and their royal child
    dbr:Elizabeth_of_Austria_(1526–1545) dbo:parent ?elizabethParent .
    ?elizabethParent dbo:child ?elizabethChild .
    ?elizabethChild a dbo:Monarch .

    # Spouse of the royal child from Elizabeth's parent
    ?elizabethChild dbo:spouse ?spouse .

    # Successor of Anne's royal child
    ?anneChild dbo:successor ?successor .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
353,7,val,"Give me the alma mater of the awardee of Medal of the Order ""For Merit to the Fatherland"" and entity in Russia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_the_Order_%22For_Merit_to_the_Fatherland%22> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?almaMater WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Russia .
  ?award dbo:recipient ?person .
  ?award dbo:name ""Medal of the Order \""For Merit to the Fatherland\""""@en .
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```

This query does the following:
- Selects individuals (`?person`) who are persons and have Russian nationality.
- Checks if they have received an award with the name ""Medal of the Order \""For Merit to the Fatherland\"""".
- Optionally retrieves their alma mater.",3,3,4,2,2,2,2,9,0,0,5,0,0.0,0
874,15,val,"Give me the band of Robert Hart (musician) and band of the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Robert_Hart_(musician)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?v0 <http://dbpedia.org/property/writer> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?robertHartBand ?horaceAndyWorkWriterBand 
WHERE {
  # Robert Hart's band
  dbr:Robert_Hart_(musician) dbo:musicalArtistOf ?robertHartBand .

  # Horace Andy's work
  ?work dbo:artist dbr:Horace_Andy ;
        a dbo:Song ; # Assuming the work is a song; adjust if it's an album

  # Writer of the work who is both an artist and a musical artist
  ?work dbo:writer ?writer .
  ?writer dbo:musicalArtistOf ?horaceAndyWorkWriterBand .
  ?writer a dbo:Artist ; # Ensure the writer is an artist
          a dbo:MusicalArtist . # Ensure the writer is also a musical artist
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
892,53,val,"Give me the entity in the profession of the true self of Enrico Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of 58.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/province> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?profession ?region ?settlement ?landmark WHERE {
  # Enrico Crolla's profession
  dbr:Enrico_Crolla dbo:occupation ?profession .

  # Italian region and settlement associated with the Democratic Party (Italy)
  ?party dbo:country dbr:Italy .
  ?party rdfs:label ""Democratic Party (Italy)""@en .
  ?region dbo:country dbr:Italy ;
          dbo:government ?party .
  ?settlement dbo:locatedIn ?region .

  # Landmark at elevation of 58
  ?landmark dbo:elevation ""58""^^xsd:float .
}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
865,44,val,"Give me the native of British Raj and father of the child of Abu Ahmad Abdul Hafiz and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nativeOfBritishRaj WHERE {
  ?person dbo:nationality dbr:British_Raj .
  
  ?child dbo:parent ?person ;
         a dbo:Politician .

  ?abuAhmad dbo:child ?child .
}
```

This query assumes:
- `dbo:nationality` is used to find the nationality of a person.
- `dbo:parent` and `dbo:child` are used to establish parent-child relationships.
- `a dbo:Politician` identifies that the child is a politician.

Please note that this query might need adjustments based on the actual structure and availability of data in DBpedia. The identifiers like `dbr:British_Raj` should be verified for correctness in DBpedia.",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
573,44,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at Massachusetts.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Step 1: Identify the author of ""Exchequer Standards""
  ?author dbo:work dbr:Exchequer_Standards .
  
  # Step 2: Find the parent who is a politician and an office holder
  ?author dbp:parent ?parent .
  ?parent a dbo:Politician ;
          a dbo:OfficeHolder .

  # Step 3: Ensure this person is a decedent at the residence of William J. Phelan
  ?residence dbr:William_J._Phelan/dbp:placeOfDeath ?decedentPlace .
  ?decedentPlace dbp:decedent ?parent .
  
  # Step 4: Ensure this person is also a decedent at Massachusetts
  ?massachusettsResidence a dbo:Settlement ;
                         dbp:state dbr:Massachusetts .
  ?massachusettsResidence dbp:decedent ?parent .
}
```",5,8,6,2,3,3,3,71,0,0,2,0,0.0,0
582,44,val,"Give me the figure known as the nickname of Japan national football team and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname ?fatherName ?fatherOccupation WHERE {
  # Find the nickname of Japan national football team
  OPTIONAL {
    dbr:Japan_national_football_team dbo:nickname ?nickname .
  }

  # Find Masami Nagasawa's father and his occupations
  OPTIONAL {
    dbr:Masami_Nagasawa dbo:father ?father .
    ?father rdfs:label ?fatherName .
    FILTER (lang(?fatherName) = 'en')
    
    # Check if the father is an athlete, soccer manager, or sports manager
    OPTIONAL { ?father dbo:occupation ?occupation . }
    BIND(
      IF(BOUND(?occupation), 
         IF(CONTAINS(LCASE(str(?occupation)), ""athlete""), ""Athlete"", 
            IF(CONTAINS(LCASE(str(?occupation)), ""soccer manager""), ""Soccer Manager"",
               IF(CONTAINS(LCASE(str(?occupation)), ""sports manager""), ""Sports Manager"", """")))
      , """")
    AS ?fatherOccupation
  }
}
```

This query does the following:
- It attempts to retrieve the nickname of the Japan national football team.
- It looks for Masami Nagasawa's father and checks if his occupation includes being an athlete, soccer manager, or sports manager.",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
645,53,val,"Give me the military force of Spanish Civil War and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and commander in the force of the commander in Siege of Madrid.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?leaderOfOffice ?commanderInSiege
WHERE {
  # Find military forces involved in the Spanish Civil War
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:participatedIn dbr:Spanish_Civil_War .

  OPTIONAL {
    # Find leader of an office or government agency led by Camilo Menéndez Tolosa
    ?office dbo:leader dbr:Camilo_Menéndez_Tolosa ;
            a (dbo:GovernmentAgency | dbo:Organization) .
    ?leaderOfOffice rdfs:label ""Camilo Menéndez Tolosa""@en .
  }

  OPTIONAL {
    # Find commander in the Siege of Madrid
    ?siegeEvent dbo:commander ?commanderInSiege ;
                rdfs:label ""Siege of Madrid""@en .
    ?militaryForce dbo:commandedBy ?commanderInSiege .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
965,53,val,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as Prince George of Battenberg and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseOfSpouse WHERE {
  # Louise Mountbatten
  ?louise a dbo:Person ;
          foaf:name ""Louise Mountbatten""@en .

  # Parent of Louise Mountbatten
  ?parentParent dbo:child ?louise .
  
  # Spouse of the parent (other parent)
  ?spouseOfParent dbo:spouse ?parentParent .

  # Grandparent (Spouse of that spouse)
  ?grandparent dbo:spouse ?spouseOfParent .

  # Child of this grandparent who is a noble and was born as Prince George of Battenberg
  ?child dbo:child ?grandparent ;
         dbp:nobleTitle ?title ;
         foaf:name ""Prince George of Battenberg""@en .

  # Parent of this child (spouse of the grandparent)
  ?spouseOfSpouse dbo:spouse ?child .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
917,44,val,Give me the child of the father of Keʻelikōlani and parent of Albert Kamehameha and child of the father of Kamehameha IV.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Keʻelikōlani's father is Kamehameha I
  dbr:Keʻelikōlani dbo:father dbr:Kamehameha_I .
  
  # Albert Kamehameha's parent is the individual we are looking for
  dbr:Albert_Kamehameha dbo:parent ?individual .

  # Kamehameha IV's father is Kamehameha II
  dbr:Kamehameha_IV dbo:father dbr:Kamehameha_II .
  
  # The individual we are looking for is a child of both Kamehameha I and Kamehameha II
  ?individual dbo:childOf dbr:Kamehameha_I ;
              dbo:childOf dbr:Kamehameha_II .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
507,54,val,"Give me the professional in Film director, television director and spouse of the person born as Anne Voase Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://dbpedia.org/ontology/director> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?director ?movie WHERE {
  ?person a dbo:FilmDirector ;
          a dbo:TelevisionDirector ;
          dbo:spouse ?spouse ;
          dbp:birthday ""1919-06-17""^^xsd:date ;
          rdfs:label ""Anne Voase Coates""@en .
  
  OPTIONAL { ?person dbo:directed ?movie . }
  
  FILTER(LANG(?director) = 'en')
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
933,53,val,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to Alan Warner and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfTheBand WHERE {
  # The Ramones is a band
  dbr:The_Ramones dbo:bandMember ?artist .
  
  # Artist associated with The Ramones who is also a musical artist
  ?artist rdf:type dbo:MusicalArtist .

  # This artist has a connection to Alan Warner (musician)
  ?artist dbo:associatedBand ?alanWarnerBand .
  dbr:Alan_Warner_(musician) dbo:bandMember ?alanWarnerBand .

  # Alan Warner's band is both a group and an organization
  ?alanWarnerBand rdf:type dbo:MusicalGroup ;
                  rdf:type dbo:Organization .

  # Find the band of this artist that fits the criteria
  ?artist dbo:bandMember ?bandOfTheBand .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
47,43,val,"Give me the office of Ajoy Mukherjee and office of the awardee of the award, that is an award, of Mantu Ghosh and office of Suvendu Adhikari.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office WHERE {
  # Ajoy Mukherjee's office
  OPTIONAL {
    VALUES ?person { dbr:Ajoy_Mukherjee }
    ?person dbo:office ?office .
  }

  # Mantu Ghosh's award and its awardee's office
  OPTIONAL {
    VALUES ?mantuGhosh { dbr:Mantu_Ghosh }
    ?mantuGhosh dbo:awardReceived ?award .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:office ?office .
  }

  # Suvendu Adhikari's office
  OPTIONAL {
    VALUES ?person { dbr:Suvendu_Adhikari }
    ?person dbo:office ?office .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
236,17,val,"Give me the party member of Federalist Party and party member of the administration of the reference, that is an office holder and a politician, to James Madison.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Federalist_Party> . ?v0 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?v3 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # James Madison's administration period
  VALUES (?madisonAdministration) { 
    (dbr:James_Madison#Presidency)
  }
  
  # Federalist Party members
  ?federalist dbo:partyMemberOf dbr:Federalist_Party.
  
  # Office holders and politicians in Madison's administration
  ?officeHolder dbo:positionHeld ?madisonAdministration;
               a dbo:OfficeHolder, dbo:Politician.

  # Find individuals who are both Federalists and office holders/politicians during Madison's administration
  FILTER (?federalist = ?officeHolder)
  
  BIND(?federalist AS ?person)
}
```",4,6,5,3,2,3,2,20,0,0,19,0,0.0,0
917,41,val,"Give me the child of Kekūanāoʻa and child of the father of Keʻelikōlani and parent of the child, that is a royalty, of Kamehameha IV.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child
WHERE {
  # Kekūanāoʻa's child
  ?kekuanaoa dbr:Kekūanāoʻa .
  ?kekuanaoa dbo:child ?kekuChild .

  # Keʻelikōlani's father
  ?keleikalani dbr:Keʻelikōlani .
  ?keleikalani dbo:father ?keleifather .

  # Child of the father of Keʻelikōlani
  ?keleifather dbo:child ?commonChild .

  # Kamehameha IV's parent
  ?kamehamehaIV dbr:Kamehameha_IV .
  ?kamehamehaIV dbo:parent ?parentOfKamehamehaIV .

  # Ensure the common child is a royalty and matches all conditions
  FILTER (?kekuChild = ?commonChild && ?commonChild = ?parentOfKamehamehaIV)
  FILTER EXISTS { ?commonChild dbo:royalty true . }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
917,48,val,"Give me the child of the father of Kamehameha IV and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Kamehameha_IV dbo:father dbr:Kamehameha_I .
  
  dbr:Kamehameha_I dbo:child ?royaltyChild .
  ?royaltyChild a dbo:Monarch .

  ?mayorChild dbo:parent ?royaltyChild .
  
  ?child = ?royaltyChild .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
839,53,val,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the band, that is a musical artist, of Charlie Huhn and band of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band
WHERE {
  # Kevin Russell (musician)
  { 
    ?kevin a dbo:MusicalArtist ;
           foaf:name ""Kevin Russell"" .
    ?kevin dbo:memberOfBand ?band .
  }
  
  UNION
  
  # Charlie Huhn
  { 
    ?charlie a dbo:MusicalArtist ;
             foaf:name ""Charlie Huhn"" .
    ?charlie dbo:memberOf ?band .
  }
  
  UNION
  
  # Peter Schorowsky
  { 
    ?peter a dbo:MusicalArtist ;
           foaf:name ""Peter Schorowsky"" .
    ?peter dbo:memberOfBand ?band .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
606,15,val,"Give me the birthplace of Charles I. Barber and figure known as the nickname of the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Charles_I._Barber> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/nickname> ""Barb City""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?nickname
WHERE {
  # Find Charles I. Barber's birthplace
  OPTIONAL { 
    dbr:Charles_I._Barber dbo:birthPlace ?birthPlace .
  }
  
  # Check for any nickname related to ""Barb City""
  OPTIONAL {
    ?person dbp:nickname ?nickname .
    FILTER(CONTAINS(LCASE(?nickname), ""barb city""))
  }

  # Link the person with Charles I. Barber
  ?person rdfs:label ""Charles I. Barber""@en .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
933,51,val,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of Alan Warner (musician).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1947-04-21""^^xsd:date ;
          rdfs:label ""Alan Warner (musician)""@en .
  
  ?band a dbo:Band, dbo:Organization ;
        dbo:member ?person .

  FILTER(LANG(?band) = 'en')
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
192,17,val,Give me the child of the child of the parent of Anna of Hungary (Byzantine empress) and spouse of Clemence of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . <http://dbpedia.org/resource/Clemence_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild
WHERE {
  # Step 1: Find Anna's parent
  ?anna dbo:parent ?parent .
  FILTER (str(?anna) = ""Anna of Hungary (Byzantine empress)"")

  # Step 2: Find the child of Anna's parent
  ?parent dbo:child ?childOfParent .

  # Step 3: Find the spouse of this child
  ?childOfParent dbp:spouse ?spouse .
  
  # Step 4: Ensure the spouse is Clemence of Austria
  FILTER (str(?spouse) = ""Clemence of Austria"")

  # Step 5: Find the child of the spouse
  ?spouse dbo:child ?childOfChild .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
465,46,val,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
    # Step 1: Find Ercole II d'Este's parent
    dbr:Ercole_II_d%27Este_Duke_of_Ferrara dbo:parent ?parent .

    # Step 2: Find the child of this parent
    ?child dbo:parent ?parent .
    
    # Step 3: Determine the successor of this child
    ?successor dbo:succeededBy ?child .

    # Step 4: Identify Ferdinand I's children
    dbr:Ferdinand_I,_Holy_Roman_Emperor dbo:child ?ferdinandChild .

    # Step 5: Find the royal child among them who is also a successor
    FILTER (?ferdinandChild = ?successor) .
    
    # Ensure the child is royalty
    ?ferdinandChild a dbo:Monarch .

    # Step 6: Get the spouse of this royal child
    ?ferdinandChild dbo:spouse ?spouse .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
917,40,val,"Give me the child of Kekūanāoʻa and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of Kekūanāoʻa.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?parent WHERE {
  # Kekūanāoʻa and their child
  dbr:Kekūanāoʻa dbo:child ?child .
  
  # The parent of the child who is royalty
  ?child dbo:parent ?parent .
  ?parent a dbo:Monarch ; # Assuming Monarch as a class for royalty
  
  # Link to the mayor of Hawaiian Kingdom
  OPTIONAL {
    ?mayor dbo:position dbr:Hawaiian_Kingdom_mayor ;
           dbo:child ?child .
  }
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
839,51,val,"Give me the band of the member of Böhse Onkelz and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?bandOfMember ?bandArtist WHERE {
  # Step 1: Find a member of Böhse Onkelz
  ?member dbo:memberOf dbr:Böhse_Onkelz .
  
  # Step 2: Check if the member is part of another band
  OPTIONAL { 
    ?member dbo:currentMemberOf ?bandOfMember .
    
    # Step 3: Determine if this band is a musical artist
    ?bandOfMember rdf:type dbo:MusicalArtist .
    
    # Step 4: Find a professional musician in this band
    ?professionalMusician dbo:memberOf ?bandOfMember ;
                         rdf:type dbo:MusicalArtist .
    
    BIND(?bandOfMember AS ?bandArtist)
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
865,43,val,"Give me the native of British Raj and father of Shahla Khatun and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:nativePlace dbr:British_Raj .
  ?person dbo:child dbr:Indira_Gandhi .
  ?indiraGandhi dbo:child ?rajivGandhi .
  ?rajivGandhi a dbo:Politician .
  ?rajivGandhi dbo:spouse dbr:Sonia_Gandhi .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
976,53,val,"Give me the office of the person born as Mehmet Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of Meral Akşener.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v0 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mehmetOffice ?kemalLeaderOffice ?meralOffice
WHERE {
  # Mehmet Naci Bostancı's office
  dbr:Mehmet_Naci_Bostancı dbo:office ?mehmetOffice .

  # Kemal Kılıçdaroğlu's organization and its leader's office
  dbr:Kemal_Kılıçdaroğlu dbo:leaderOf ?organization .
  ?organization dbo:leader ?kemalLeader .
  ?kemalLeader dbo:office ?kemalLeaderOffice .

  # Meral Akşener's office
  dbr:Meral_Akşener dbo:office ?meralOffice .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
926,54,val,Give me the successor of the child of the spouse of Şermi Kadın and father of the father of Abdulaziz and child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?successor WHERE {
  ?şermiKadin a dbo:Person ;
              dbo:spouse ?spouse .
  
  ?spouse dbo:child ?child .

  ?child dbo:father ?grandFather .

  ?abdulaziz a dbo:Person ;
             dbo:father ?fatherAbdulaziz .
  
  ?fatherAbdulaziz dbo:father ?grandFather .

  ?ahmedIII a dbo:Person ;
            dbo:child ?childAhmedIII .

  FILTER(?grandFather = ?child)

  ?successor dbo:predecessorOrSuccessorOf ?child .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
715,49,val,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/office> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?officeLeader WHERE {
  # Identify Abd el-Krim
  VALUES ?abdElKrim { dbr:Abd_el-Krim }

  # Find the military conflict he was involved in
  ?conflict dbo:participant ?abdElKrim .
  
  # Determine who commanded this force
  ?conflict dbo:commander ?commander .

  # Identify any office or organization related to Carlos Franco Iribarnegaray
  VALUES ?carlosFranco { dbr:Carlos_Franco_Iribarnegaray }
  ?office dbo:leader ?abdElKrim .
  ?office dbo:relatedTo ?carlosFranco .

  # Ensure the office is a government agency or organization
  FILTER (?office rdf:type/(dbo:GovernmentAgency|dbo:Organization))
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
645,52,val,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in the force of the commander in Siege of Madrid and leader of Ministry of the Army (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify Francisco Largo Caballero
  VALUES ?franciscoLargoCaballero { dbr:Francisco_Largo_Caballero }

  # Find his role in the Siege of Madrid
  ?siegeOfMadrid dbo:participant ?franciscoLargoCaballero .
  FILTER (strstarts(str(?siegeOfMadrid), ""http://dbpedia.org/resource/Siege_of_Madrid_(1936-1939)""))

  # Find his role as leader of the Ministry of the Army
  ?ministryOfArmy dbo:leader ?franciscoLargoCaballero .
  FILTER (strstarts(str(?ministryOfArmy), ""http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)""))

  # Identify any military force associated with him during these events
  OPTIONAL {
    ?militaryForce dbo:commander ?franciscoLargoCaballero .
    FILTER (strstarts(str(?militaryForce), ""http://dbpedia.org/resource/""))
  }
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
978,16,val,"Give me the band member of the person born as Nicholas Bracegirdle and band member of the professional, that is a musical artist and an artist, in .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:birthName ""Nicholas Bracegirdle""@en .
  ?person dbo:memberOfBand ?band .
}
```

This query searches for the band associated with a person whose birth name is Nicholas Bracegirdle.",4,6,5,2,2,3,2,20,0,0,2,0,0.0,0
926,52,val,Give me the child of Ahmed III and successor of the child of Ahmed III and father of the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Step 1: Find a child of Ahmed III
  ?child dbo:parent dbr:Ahmed_III.

  # Step 2: Find the successor of that child
  ?successor dbo:predecessor ?child.

  # Step 3: Determine Neşerek Kadın's spouse and their father's father
  ?spouse dbo:spouse dbr:Neşerek_Kadın.
  ?father dbo:parent ?spouse.
  ?grandfather dbo:parent ?father.

  # Ensure the successor is also the child of the grandfather found in step 3
  ?successor dbo:parent ?grandfather.
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
273,17,val,Give me the spouse of Edoardo Agnelli (industrialist) and parent of the alumnus of the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Edoardo_Agnelli_(industrialist)> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Edoardo Agnelli (the industrialist)
  dbr:Edoardo_Agnelli_(industrialist) dbo:spouse ?spouse .

  # Ensure the spouse is a parent of an alumnus from Università degli Studi di Torino
  ?child dbo:parent ?spouse .
  ?child dbo:almaMater dbr:Universit%C3%A0_degli_Studi_di_Torino .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
976,40,val,"Give me the office of Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of Meral Akşener.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?naciOffice ?kemalLeaderOffice ?meralOffice
WHERE {
  # Office of Naci Bostancı
  dbp:Naci_Bostancı dbo:office ?naciOffice .

  # Leader of the administration of Kemal Kılıçdaroğlu and their office
  dbp:Kemal_Kılıçdaroğlu dbo:leader ?kemalLeader .
  ?kemalLeader dbo:office ?kemalLeaderOffice .

  # Office of Meral Akşener
  dbp:Meral_Akşener dbo:office ?meralOffice .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
917,51,val,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and child of the father of Keʻelikōlani.",SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Kamehameha III's child who is royalty
  ?childKamehamehaIII dbo:parent dbr:Kamehameha_III ;
                     a dbo:Monarch .

  # Keʻelikōlani's father and his children
  ?fatherKeelikolani dbo:spouse ?motherKeelikolani .
  ?childKeelikolani dbo:parent ?fatherKeelikolani ;
                   a dbo:Person .

  # Find the common individual
  FILTER (?childKamehamehaIII = ?childKeelikolani)
  
  BIND(?childKamehamehaIII AS ?individual)
}
```

This query assumes that:
- The `dbo:parent` property links parents to their children.
- The `a dbo:Monarch` class is used for royalty.
- The `dbo:spouse` property links spouses.",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
935,15,val,"Give me the headquarter of Provincial Assembly of Balochistan and death place of the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Provincial_Assembly_of_Balochistan> <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters ?deathPlace WHERE {
  # Find headquarters of Provincial Assembly of Balochistan
  dbr:Provincial_Assembly_of_Balochistan dbo:location ?headquarters .

  # Find the award associated with Syed Sohail Hussain Naqvi
  OPTIONAL {
    ?award dbo:recipient ?awardee .
    ?awardee dbo:deathPlace ?deathPlace .
    ?syedSohail dbo:receivedAward ?award .
    dbr:Syed_Sohail_Hussain_Naqvi ?syedSohail .
  }
}
```

This query does the following:
- Retrieves the headquarters of the Provincial Assembly of Balochistan.
- Attempts to find an award associated with Syed Sohail Hussain Naqvi and then retrieves the death place of its awardee.

Please note that this query assumes certain relationships exist in DBpedia, which may need adjustments based on actual data availability.",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
507,49,val,Give me the spouse of the person born as Anne Voase Coates and professional in the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Anne Voase Coates
  ?anne a dbo:Person ;
        foaf:name ""Anne Voase Coates""@en ;
        dbp:birthday ""1918-09-28""^^xsd:date .

  # Step 2: Determine the profession of the person born on February 18, 1966
  ?person a dbo:Person ;
          dbp:birthday ""1966-02-18""^^xsd:date .
  ?person dbo:occupation ?profession .

  # Step 3: Find the spouse of Anne Voase Coates with the same profession
  ?anne dbo:spouse ?spouse .
  ?spouse dbo:occupation ?sameProfession .
  
  FILTER (?sameProfession = ?profession)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
976,51,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person a dbo:Politician ;
          dbo:nationality dbr:Turkey ;
          foaf:name ""Naci Bostancı""@en ;
          dbo:birthName ""Naci Bostancı"" .
  
  ?person dbo:partyAffiliation dbr:Nation_Alliance_(Turkey) .

  OPTIONAL { ?person dbo:office ?office . }
  FILTER EXISTS {
    ?office a dbo:Mayor .
  }
}
```

This query does the following:
- Selects individuals who are politicians (`dbo:Politician`).
- Ensures they have Turkish nationality (`dbo:nationality dbr:Turkey`).
- Matches their name and birth name to ""Naci Bostancı"".
- Checks for affiliation with Nation Alliance (Turkey) (`dbo:partyAffiliation`).
- Looks for an office held by the person that is a mayor (`dbo:office ?office . FILTER EXISTS { ?office a dbo:Mayor }`).",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
917,50,val,"Give me the child of the father of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Kamehameha IV's father
  ?kamehamehaIV dbo:father ?fatherKamehamehaIV .
  
  # Leleiohoku I's spouse and their child
  ?leleiohokuI dbp:spouse ?spouseLeleiohokuI .
  ?spouseLeleiohokuI dbo:child ?child .

  # Conditions for royalty
  ?child a dbo:Monarch .

  # Linking the father of Kamehameha IV and spouse's child
  FILTER (?fatherKamehamehaIV = ?spouseLeleiohokuI)
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
329,21,val,"Give me the entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist) and entity in United Kingdom and birthplace of Eric Cross (writer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organisation ?country ?ukEntity
WHERE {
  # Robert Bates (loyalist)
  ?bates a dbo:Person ;
         foaf:name ""Robert Bates"" ;
         dbo:birthPlace ?birthplaceBates .

  OPTIONAL { 
    ?birthplaceBates dbo:country ?country .
  }
  
  OPTIONAL {
    ?birthplaceBates dbo:organization ?organisation .
  }

  # Eric Cross (writer)
  ?cross a dbo:Person ;
         foaf:name ""Eric Cross"" ;
         dbo:birthPlace ?birthplaceCross .

  FILTER EXISTS { 
    ?ukEntity dbo:country dbr:United_Kingdom ;
              rdfs:label ?birthplaceCross .
  }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
36,23,val,"Give me the actor of the claim to fame, that is a film, of Lepacious Bose and person born as the birth name of Ayo Makun.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Lepa Bacau's film
  ?filmLepa dbo:starring dbr:Lepa_Bacau .
  
  # Ayo Makun's birth name and his film
  ?filmAyo dbo:starring dbr:Ayo_Makun ;
           dbo:actor ?actor .

  # Find common actors in both films
  ?filmLepa dbo:starring ?actor .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
445,45,val,Give me the entity in England and death place of Patrick Moore and entity in the award of the commander in Battle of Saint-Mihiel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?person a dbo:Astronomer ;
          foaf:name ""Patrick Moore""@en .
  ?person dbo:placeOfBirth dbr:England .
  ?person dbo:deathPlace ?deathPlace .
}

SELECT ?commander WHERE {
  ?battle a dbo:MilitaryConflict ;
          dbo:name ""Battle of Saint-Mihiel""@en .
  ?award a dbo:Award ;
         dbo:recipient ?commander ;
         dbo:awardedFor ?battle .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
839,55,val,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of Böhse Onkelz.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band1 ?band2 ?member
WHERE {
  # Charlie Huhn's band
  OPTIONAL { 
    ?charlieHuhn a dbo:MusicalArtist ;
                 foaf:name ""Charlie Huhn"" .
    ?charlieHuhn dbo:band ?band1 .
  }

  # Kevin Richard Russell (Kevin Russell) and his band
  OPTIONAL {
    ?kevinRussell a dbo:MusicalArtist ;
                  foaf:name ""Kevin Russell"" .
    ?kevinRussell dbo:birthName ?realName .
    ?kevinRussell dbo:band ?band2 .
  }

  # Member of Böhse Onkelz
  OPTIONAL {
    ?bohseOnkelz a dbo:Band ;
                 foaf:name ""Böhse Onkelz"" .
    ?member dbo:memberOf ?bohseOnkelz ;
            a dbo:MusicalArtist .
  }
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
573,40,val,"Give me the parent of John Quincy Adams and person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?decedentQuincy ?decedentAdminRegion
WHERE {
  # John Quincy Adams and his parent
  dbr:John_Quincy_Adams dbo:father ?parent .

  # Person decedent at Quincy, Massachusetts
  ?decedentQuincy dbp:placeOfBirth ?quincy .
  ?quincy rdfs:label ""Quincy, Massachusetts""@en .

  # Charlie Baker (Australian footballer) and his administration region
  dbr:Charlie_Baker_(Australian_footballer) dbo:realName ?charlieBakerRealName .
  ?adminRegion dbo:administrativeRegion ?charlieBakerRealName .
  ?decedentAdminRegion dbp:placeOfBirth ?adminRegion .

  # Ensure the administration is a region
  ?adminRegion rdf:type dbo:AdministrativeRegion .
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
456,50,val,"Give me the band of the band, that is a musical artist, of Dean Brody and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Dean Brody's band
  ?deanBrodyBand dbo:musicalArtist dbr:Dean_Brody .
  
  # The Shadow as an alter ego of Lamont Cranston
  ?shadowCharacter rdfs:label ""The Shadow""@en ;
                  dbo:fictionalWork dbr:Lamont_Cranston .

  # Band associated with The Shadow
  ?band dbo:musicalArtist ?shadowCharacter .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
573,46,val,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?phelanResidencePersonDecedent ?bakerAdminRegionPersonDecedent
WHERE {
  # Find William J. Phelan's residence settlement
  ?phelan dbo:residence ?residence .
  ?residence a dbo:Settlement .

  # Find person decedent at that residence
  ?phelanResidencePersonDecedent dbo:placeOfBirth ?residence ;
                                  dbo:dateOfDeath ?deathDatePhelanResidence .

  # Find Charlie Baker's real name and administration region
  dbr:Charlie_Baker_(Australian_footballer) dbo:birthName ?bakerRealName .
  ?bakerRealName dbo:administrativeRegion ?adminRegion .
  ?adminRegion a dbo:AdministrativeRegion .

  # Find person decedent at that administrative region
  ?bakerAdminRegionPersonDecedent dbo:placeOfBirth ?birthPlace ;
                                  dbo:dateOfDeath ?deathDateBakerAdminRegion ;
                                  dbo:administrativeRegion ?adminRegion .
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
579,15,val,"Give me the native of the residence, that is English and a settlement, of the resident of Scotland and person born as Isobel Jane Miller Richard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Isobel Jane Miller Richard""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Find Isobel Jane Miller Richard
  ?person a dbo:Person ;
          foaf:name ""Isobel Jane Miller Richard""@en .
  
  # Determine her residence in Scotland
  ?residence dbo:resident ?person ;
             dbo:country dbr:Scotland .

  # Check if the residence is an English settlement
  ?residence dbo:settlementType dbo:Settlement ;
             dbo:nativeCountry dbr:England .

  # Retrieve the native of that settlement
  ?native dbo:nativeOf ?residence .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
826,45,val,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of Anna Magdalena Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Find Louis II and his successor
  dbr:Louis_II,_Grand_Duke_of_Hesse dbo:spouse dbr:Anna_Magdalena_Appel .
  
  # Identify the successor of Louis II
  dbr:Louis_II,_Grand_Duke_of_Hesse dbo:succeededBy ?successor .

  # Find Louis IV and one of his children
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:child ?child .

  # Ensure the parent of that child is indeed Louis IV
  ?child dbo:parent dbr:Louis_IV,_Grand_Duke_of_Hesse .
  
  # The successor of Louis II should be the predecessor of Louis IV
  ?successor dbo:succeededBy dbr:Louis_IV,_Grand_Duke_of_Hesse .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
892,47,val,Give me the entity in the profession of Henri Crolla and landmark at elevation of the award of the member of E-girls.,SELECT ?result WHERE { <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?landmark WHERE {
  # Find Henri Crolla's profession
  dbr:Henri_Crolla dbo:occupation ?profession .

  # Find an award received by a member of E-girls
  ?member dbo:memberOf dbr:E-girls .
  ?member dbo:awardReceived ?award .
  
  # Assume the award has an elevation property (this is hypothetical)
  ?award dbo:elevation ?elevation .

  # Find a landmark at that elevation
  ?landmark dbo:elevation ?elevation .
}
```

This query assumes:
- Henri Crolla's profession can be found using `dbo:occupation`.
- A member of E-girls has received an award, and this award has an associated elevation.
- Landmarks have an elevation property.

Please note that the actual properties like `dbo:elevation` for awards and landmarks might not exist in DBpedia, so adjustments may be necessary based on available data.",5,5,6,3,2,3,3,71,0,0,11,0,0.0,0
826,47,val,"Give me the spouse of the child of Johann Heinrich Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?successor WHERE {
  # Step 1: Find Johann Heinrich Appel's child
  ?child dbo:parent dbr:Johann_Heinrich_Appel .
  
  # Step 2: Find the spouse of that child
  ?spouse dbo:spouse ?child .

  # Step 3: Determine the successor who is royalty
  ?successor dbo:succeededBy ?child .
  ?successor a dbo:Monarch .

  # Step 4: Ensure this successor has a reference to Louis I as royalty
  ?successor dbo:predecessor dbr:Louis_I_of_Bavaria .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
791,40,val,"Give me the father of Emperor Go-Toba and predecessor of Emperor Antoku and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
SELECT ?emperor WHERE {
  ?emperor a dbo:Monarch .
  ?emperor foaf:name ""Takakura""@ja .
  OPTIONAL { ?emperor dbo:spouse ?spouse . }
  OPTIONAL { ?emperor dbo:child ?child . }
  FILTER EXISTS { 
    ?child foaf:name ""Go-Toba""@ja .
  }
  FILTER EXISTS {
    ?predecessor dbo:successor ?emperor .
    ?predecessor foaf:name ""Ichijō""@ja .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
573,54,val,"Give me the person decedent at the administration, that is a region, of Charlie Baker and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of John Quincy Adams.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationRegion ?residenceSettlement
WHERE {
  # Charlie Baker's administration region
  dbr:Charlie_Baker dbo:officeHolderOf dbr:Governor_of_Massachusetts .
  dbr:Massachusetts a dbo:AdministrativeTerritory .

  # John Quincy Adams' parent who is a politician and American
  dbr:John_Quincy_Adams dbo:parent dbr:John_Adams .
  dbr:John_Adams dbo:nationality dbr:United_States .
  dbr:John_Adams dbo:profession dbr:Politician .

  # John Adams' residence settlement
  dbr:John_Adams dbo:residence dbr:Braintree,_Massachusetts .
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
976,42,val,"Give me the office of the person born as Mehmet Naci Bostancı and office of Meral Akşener and office of the leader, that is a politician, of Grand National Assembly of Turkey.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeLabel WHERE {
  # Mehmet Naci Bostancı
  VALUES ?person { 
    dbr:Mehmet_Naci_Bostancı 
    dbr:Meral_Akşener 
    (SELECT ?leader WHERE {
      ?assembly dbo:leader ?leader .
      FILTER EXISTS { ?assembly a dbo:Parliament . }
      FILTER EXISTS { ?assembly dbo:country dbr:Türkiye . }
    })
  }

  # Get the office information
  OPTIONAL { ?person dbo:office ?office . }
  
  # Provide labels for readability
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
715,47,val,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Commander in the force of the mayor during the 1933 Spanish general election
  ?mayorEvent dbo:officeHolder ?person ;
              dbo:date ""1933""^^xsd:gYear ;
              dbo:location dbr:Spain .

  # Office holder and politician
  ?person dbo:occupation [ a dbo:OfficeHolder, dbo:Politician ] .
  
  # President
  ?presidency dbo:holder ?person ;
              dbo:office dbr:President_of_Spain .

  # Commander in the force of a military conflict involving Abd el-Krim
  ?conflict dbo:commander ?person ;
            dbo:opposingSide dbr:Abd_el-Krim .
}
```",5,9,6,3,2,3,3,71,0,0,4,0,0.0,0
124,50,val,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Find the war associated with the awardee of the British South Africa Company Medal
  ?medalAwarded dbo:awardedFor dbr:British_South_Africa_Company_Medal .
  ?medalAwarded dbo:recipient ?person1 .
  
  # Ensure this person is involved in a military conflict and societal event
  ?war dbo:participant ?person1 ;
       rdf:type dbo:MilitaryConflict, dbo:SocietalEvent .

  # Find the war associated with Herbert Kitchener
  dbr:Herbert_Kitchener_1st_Earl_Kitchener dbo:militaryForce ?force .
  
  # Ensure this force is involved in a military conflict and societal event
  ?war2 dbo:militaryForce ?force ;
        rdf:type dbo:MilitaryConflict, dbo:SocietalEvent .

  # Find the common war between both individuals
  FILTER (?war = ?war2)

  # Get the military force associated with this war
  ?war dbo:militaryForce ?militaryForce .
}
```",5,10,6,3,2,3,3,71,0,0,1085,0,0.0,0
216,45,val,"Give me the player in Mario Ivanković and player in Igor Bišćan and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerInMarioTeam ?playerInIgorTeam ?teamOfPerson ?personName WHERE {
  # Find the team of Mario Ivanković
  dbr:Mario_Ivanković dbo:playsFor ?playerInMarioTeam .
  
  # Find the team of Igor Bišćan
  dbr:Igor_Bišćan dbo:playsFor ?playerInIgorTeam .

  # Find Pavel Vezhinov's death date and associated team
  dbr:Pavel_Vezhinov dbo:dateOfDeath ?deathDate .
  ?teamOfPerson dbo:manager ?pavelManager .
  ?pavelManager dbo:birthPlace ?pavelBirthPlace .
  
  # Ensure the person is a sports manager, soccer manager, and player
  ?person dbr:Soccer_player ?isSoccerPlayer .
  ?person dbr:Soccer_manager ?isSoccerManager .
  ?person dbo:sportsManager ?isSportsManager .

  # Find the team of this person at Pavel Vezhinov's death
  ?teamOfPerson dbo:manager ?person .
  FILTER (?deathDate <= ?teamOfPerson dbo:endTime && (OPTIONAL {?teamOfPerson dbo:endTime} || ""9999-12-31""^^xsd:date) >= ?deathDate)

  # Ensure the person is born and matches all roles
  ?person dbo:birthPlace ?pavelBirthPlace .
  
  # Return the names of these entities
  BIND (STR(?playerInMarioTeam) AS ?playerInMarioTeam)
  BIND (STR(?playerInIgorTeam) AS ?playerInIgorTeam)
  BIND (STR(?teamOfPerson) AS ?teamOfPerson)
  BIND (STR(?person) AS ?personName)
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
892,49,val,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?region WHERE {
    # Henri Crolla's profession
    dbr:Henri_Crolla dbo:occupation ?profession .

    # Andrea Cozzolino's party
    dbr:Andrea_Cozzolino dbo:party ?party .
    
    # Italian region that is a settlement and administrative region related to the party
    ?region a dbo:Region ;
            dbo:country dbr:Italy ;
            dbo:settlementType ?settlementType ;
            dbo:administrativeRegion ?adminRegion .

    FILTER(?settlementType = dbo:Settlement)
    FILTER(?adminRegion = true)

    # Link region to the party (assuming some relationship exists in DBpedia)
    ?party dbo:region ?region .
}
```",5,11,6,3,2,3,3,71,0,0,587,0,0.0,0
47,53,val,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of Padma Vibhushan and office of Bidesh Ranjan Bose.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> ?v3 . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?operationGreenHuntOffice ?padmaVibhushanOffice ?bideshRanjanBoseOffice
WHERE {
  # Operation Green Hunt Politician's Office
  OPTIONAL {
    ?politician dbo:occupation dbr:Operation_Green_Hunt.
    ?politician dbo:office ?operationGreenHuntOffice.
  }

  # Padma Vibhushan Awardee's Office
  OPTIONAL {
    ?awardee dbo:award dbr:Padma_Vibhushan.
    ?awardee dbo:office ?padmaVibhushanOffice.
  }

  # Bidesh Ranjan Bose's Office
  OPTIONAL {
    dbr:Bidesh_Ranjan_Bose dbo:office ?bideshRanjanBoseOffice.
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
232,7,val,"Give me the claim to fame of Katherine ""Kitty"" Marshall and artistic movement of the person born, that is a writer, on 1849-09-14.","SELECT ?result WHERE { <http://dbpedia.org/resource/Katherine_%22Kitty%22_Marshall> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1849-09-14""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/movement> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?kittyClaimToFame ?writerArtisticMovement WHERE {
  # Find Katherine ""Kitty"" Marshall's claim to fame
  OPTIONAL {
    dbr:Katherine_Marshall dbo:notableWork ?kittyClaimToFame .
  }

  # Find the writer born on 1849-09-14 and their artistic movement
  OPTIONAL {
    ?writer a dbo:Writer ;
            dbp:birthday ""1849-09-14""^^xsd:date ;
            dbo:artisticMovement ?writerArtisticMovement .
  }
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
987,52,val,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and entity in Montenegro and birth place of the actor of All for Free.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Dado Prljaca is associated with Montenegro
  dbr:Dado_Prljaca dbo:nationality dbr:Montenegro .

  # All for Free band and its members
  dbr:All_for_Free a dbo:Band ;
                  dbo:bandMember ?member .
  
  # Find the member who is Dado Prljaca
  ?member rdfs:label ""Dado Prljaca""@en .

  # Find another band that is both an artist and a musical artist
  ?anotherBand a dbo:MusicalArtist, dbo:Artist ;
               dbo:bandMember ?artistMember .
  
  # The member of this band must also be an artist
  ?artistMember a dbo:Artist .

  # Get the birthplace of this second band
  ?anotherBand dbo:birthPlace ?birthPlace .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
926,49,val,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child WHERE {
    # Abdulaziz and his father
    ?abdulaziz dbo:father ?fatherAbdulaziz .
    
    # Abdulaziz's grandfather
    ?fatherAbdulaziz dbo:father ?grandfatherAbdulaziz .

    # Children of Abdulaziz's grandfather who are royalty
    ?child dbo:parent ?grandfatherAbdulaziz .
    ?child a dbo:Monarch .

    # Beyhan Sultan and her royal parent
    ?beyhanSultan dbp:mother ?mustafaIII .
    ?royalParent dbo:spouse|dbo:partner ?mustafaIII .
    
    # Match the child with the royal parent of Beyhan Sultan's parent
    FILTER (?child = ?royalParent)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
976,48,val,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the person born as Mehmet Naci Bostancı.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v1 <http://dbpedia.org/property/office> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?kemalOffice ?mehmetOffice
WHERE {
  # Kemal Kılıçdaroğlu's administration and office
  dbr:Kemal_Kılıçdaroğlu dbo:leaderOf ?administration .
  ?administration a dbo:Organization .
  ?administration dbo:head ?politicianLeader .
  ?politicianLeader dbo:office ?kemalOffice .

  # Mehmet Naci Bostancı's office
  dbr:Mehmet_Naci_Bostancı dbo:birthName ""Mehmet Naci Bostancı"" ;
                          dbo:office ?mehmetOffice .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
216,20,val,Give me the administration of  and office of Tim Nicholls and party of the awardee of Australian Defence Medal.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/property/leader> """"@en . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?office ?party WHERE {
  VALUES ?tim_nicholls { dbr:Tim_Nicholls }
  
  OPTIONAL {
    ?tim_nicholls dbo:holdsOffice ?office .
    ?office dbo:positionHeld ?administration .
  }
  
  OPTIONAL {
    ?tim_nicholls dbo:partyAffiliation ?party .
  }

  # Assuming there's a connection between Tim Nicholls and the Australian Defence Medal
  OPTIONAL {
    ?awardee dbo:awardReceived dbr:Australian_Defence_Medal .
    ?awardee dbo:office ?office .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
582,51,val,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?teamNickname WHERE {
  # Find Masami Nagasawa's father who is an athlete, soccer manager, and sports manager
  ?masami a dbo:Person ;
          foaf:name ""Masami Nagasawa""@en .
  ?father dbo:child ?masami ;
          a dbo:Athlete, dbo:SoccerManager, dbo:SportsManager .

  # Find Hajime Moriyasu's team organization
  ?hajime a dbo:Person ;
          foaf:name ""Hajime Moriyasu""@en .
  ?team dbo:manager ?hajime ;
        a dbo:Organization .

  # Get the nickname of the team
  ?team dbo:nickname ?teamNickname .

}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
715,45,val,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in Spanish Civil War and commander in Rif War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v0 <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office ?leader WHERE {
  # Find Carlos Franco Iribarnegaray's DBpedia resource
  VALUES ?carlos { dbr:Carlos_Franco_Iribarnegaray }

  # Identify offices related to him during the Spanish Civil War and Rif War
  ?carlos dbo:memberOf ?office .
  
  FILTER (
    EXISTS {
      ?office dbo:relatedTo dbr:Spanish_Civil_War ;
              dbo:relatedTo dbr:Rif_War .
    }
  )

  # Find leaders of these offices
  OPTIONAL { 
    ?office dbo:leader ?leader .
  }

  # Ensure the office is a government agency or organization
  FILTER (
    EXISTS {
      ?office rdf:type ?type .
      VALUES ?type { dbo:GovernmentAgency dbo:Organization }
    }
  )
}
ORDER BY ?office",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
158,15,val,"Give me the party of Théodore Steeg and entity in the award, that is a country, of the reference to Adelbert Cronkhite.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Théodore_Steeg> <http://dbpedia.org/ontology/party> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?country WHERE {
  # Théodore Steeg's party
  OPTIONAL {
    dbr:Théodore_Steeg dbo:politicalParty ?party .
  }
  
  # Adelbert Cronkhite's award and related country
  OPTIONAL {
    ?award dbo:recipient dbr:Adelbert_Cronkhite .
    ?award dbo:country ?country .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
129,20,val,"Give me the professional in  and associated musical artist of Saba (rapper) and associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge.","SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?sabaProfession ?sabaArtist ?organization ?organizationArtist WHERE {
  # Saba's profession and associated musical artists
  dbr:Saba (dbo:profession) ?sabaProfession .
  OPTIONAL { 
    ?sabaArtist dbo:associatedMusicalArtist dbr:Saba .
    ?sabaArtist rdfs:label ?artistLabel .
    FILTER(LANG(?artistLabel) = 'en')
  }

  # Organization associated with ""Dreamville Presents: Revenge""
  dbr:Dreamville_Presents:_Revenge dbo:actor ?organization .
  OPTIONAL {
    ?organizationArtist dbo:associatedMusicalArtist ?organization .
    ?organizationArtist rdfs:label ?orgArtistLabel .
    FILTER(LANG(?orgArtistLabel) = 'en')
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
791,46,val,"Give me the predecessor of the child of Emperor Takakura and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessorLabel WHERE {
  # Step 1: Find Emperor Takakura's child
  ?child dbo:parent dbr:Emperor_Takakura .
  
  # Step 2: Find the spouse of this child
  ?spouse dbo:spouse ?child .
  
  # Step 3: Ensure the spouse is royalty (has a title or role related to royalty)
  ?spouse dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""emperor"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""queen""))

  # Step 4: Find the predecessor of this spouse
  ?predecessor dbo:successor ?spouse .

  # Get the label for the predecessor
  ?predecessor rdfs:label ?predecessorLabel .
  FILTER(LANG(?predecessorLabel) = 'en')
}
ORDER BY ?predecessorLabel",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
216,22,val,Give me the office of the mayor of Ros Bates and party of the awardee of Australian Defence Medal.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?party WHERE {
  # Find Ros Bates and her office
  OPTIONAL {
    dbr:Ros_Bates dbo:positionHeld ?office .
  }
  
  # Find an awardee of the Australian Defence Medal and their party affiliation
  OPTIONAL {
    ?person dbo:awardReceived dbr:Australian_Defence_Medal ;
            dbo:partyAffiliation ?party .
  }
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
507,41,val,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and spouse of the person born as Anne Voase Coates and professional in Film director, television director.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/director> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?director WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Beryl_Reid .

  ?person foaf:name ""Anne Voase Coates""@en ;
          dbo:birthName ""Anne Voase Coates""@en ;
          dbo:occupation dbr:Film_director ;
                      dbr:Television_director .
  
  ?spouse dbo:spouse ?person ;
          dbo:spouse ?director .

  ?movie dbo:director ?director .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
267,15,val,"Give me the person born on 1953-03-01 and coach of the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/coach> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ""1953-03-01""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find the manager of Tractor S.C. during the 2020-21 season
  ?manager a dbo:SoccerManager ;
           dbo:managedTeam dbr:Tractor_S.C._(football)_team ;
           dbp:season ""2020–21""^^xsd:string .

  # Ensure the person is born on March 1, 1953
  ?person dbo:birthday ""1953-03-01""^^xsd:date ;
          rdfs:label ?name .

  # The manager should be the same person as the coach of a soccer club
  ?manager foaf:name ?name .
  
  # Ensure the person is a coach (or manager) of some soccer club
  ?person dbo:coachOfTeam ?team .
}
```

This query does the following:
- It identifies the manager of Tractor S.C. during the specified season.
- It checks if this manager was born on March 1, 1953.
- It ensures that this person has been a coach of some soccer club.",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
865,55,val,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child of Abu Ahmad Abdul Hafiz and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry
WHERE {
  # Ram Jaipal Singh Yadav's residence
  dbr:Ram_Jaipal_Singh_Yadav dbo:residence ?residence .

  # Native country of the residence
  ?residence dbo:nativeCountry ?nativeCountry .

  # Abu Ahmad Abdul Hafiz's child who is a politician
  dbr:Abu_Ahmad_Abdul_Hafiz dbo:child ?politicianChild .
  ?politicianChild rdf:type dbo:Politician .

  # Father of the politician child
  ?politicianChild dbo:father ?father .

  # Ensure the father is Abu Ahmad Abdul Hafiz's child
  ?father dbr:Abu_Ahmad_Abdul_Hafiz dbo:child .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
645,45,val,"Give me the military force of Spanish Civil War and commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?commander ?leader ?agency WHERE {
  # Military forces in the Spanish Civil War
  ?militaryForce dbo:partOf dbr:Spanish_Civil_War .
  
  # Commander in Battle of Jarama
  ?battle dbo:commander ?commander ;
          rdf:type dbo:MilitaryConflict ;
          rdfs:label ""Battle of Jarama""@en .
  
  # Linking military force to the battle
  ?militaryForce dbo:participatedIn ?battle .

  # Leader of a government agency or organization from Restoration Spain
  ?leader dbo:nationality dbr:Spain ;
          dbo:officeHolder ?agency .
  
  # Agency is native to Restoration (Spain)
  ?agency dbo:country dbr:Spain ;
          dbo:era dbr:Restoration_(Spain) .

}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
987,44,val,"Give me the birth place of Dado Polumenta and birth place of the actor of All for Free and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlaceDado ?birthPlaceActor ?countryCET
WHERE {
  # Birthplace of Dado Polumenta
  OPTIONAL {
    dbr:Dado_Polumenta dbo:birthPlace ?birthPlaceDado .
  }

  # Actor from ""All for Free"" and their birthplace
  OPTIONAL {
    ?actor dbo:title dbr:All_for_Free ;
           dbo:birthPlace ?birthPlaceActor .
  }

  # Country in the region of Central European Time
  OPTIONAL {
    ?country dbp:timeZone ""Central European Time"" ;
             a dbo:Country ;
             rdfs:label ?countryCET .
    FILTER (lang(?countryCET) = 'en')
  }
}
```",5,6,6,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
216,51,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?player a dbo:SoccerPlayer .
  ?player a dbo:SportsManager .
  ?player a dbo:SoccerCoach .

  ?team dbr:Bosnia_and_Herzegovina_national_under-18_football_team ;
        dbo:coach ?player .

  ?person dbp:dateOfBirth ?birthDate .
  ?deathEvent dbo:deathOf dbr:Pavel_Vezhinov ;
              dbo:day ?deathDay ;
              dbo:month ?deathMonth ;
              dbo:year ?deathYear .
  
  BIND(CONCAT(?deathYear, ""-"", IF(STRLEN(?deathMonth) = 1, ""0"", """"), ?deathMonth, ""-"", IF(STRLEN(?deathDay) = 1, ""0"", """"), ?deathDay) AS ?deathDate)

  FILTER (?birthDate = ?deathDate)
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
773,42,val,"Give me the parent of Carloman of Bavaria and spouse of the father of Charles the Fat and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfCarloman ?spouseOfFatherOfCharlesTheFat WHERE {
  # Carloman of Bavaria's parent
  ?carloman a dbo:Person ;
            foaf:name ""Carloman of Bavaria"" ;
            dbo:child ?parentOfCarloman .

  # Charles the Fat's father and spouse
  ?charlesTheFat a dbo:Person ;
                 foaf:name ""Charles the Fat"" ;
                 dbo:father ?fatherOfCharlesTheFat .
  
  ?fatherOfCharlesTheFat dbo:spouse ?spouseOfFatherOfCharlesTheFat .

  # Louis the German's child that is royalty
  ?louisTheGerman a dbo:Person ;
                  foaf:name ""Louis the German"" ;
                  dbo:child ?royalChild .

  ?royalChild a dbo:Monarch .
  
  # Linking the parent of Carloman to the spouse of Charles the Fat's father
  FILTER(?parentOfCarloman = ?spouseOfFatherOfCharlesTheFat)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
573,45,val,"Give me the person decedent at Quincy, Massachusetts and person decedent at Massachusetts and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # John Quincy Adams' death location
  dbr:John_Quincy_Adams dbo:deathPlace [
    a dbo:Place ;
    rdfs:label ""Quincy, Massachusetts""@en .
  ] .

  # His parent is John Adams
  dbr:John_Quincy_Adams dbo:parent dbr:John_Adam .

  # Find the person who is both a politician and an office holder
  ?person dbo:parent dbr:John_Adam ;
          a dbo:Politician, dbo:OfficeHolder .
}
```",5,7,6,3,3,3,3,71,0,0,2,0,0.0,0
865,46,val,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Abu Ahmad Abdul Hafiz
  ?abuAH a dbo:Person ;
         foaf:name ""Abu Ahmad Abdul Hafiz""@en .

  # Child who is a politician
  ?child dbo:parent ?abuAH ;
         a dbo:Politician .

  # Father of that child
  ?father dbo:spouse ?mother ;
          dbo:child ?child .

  # Decedent at Patna and their residence (country)
  ?decedent dbo:deathPlace dbr:Patna ;
            dbo:nationality ?residenceCountry .
  
  # Linking the father to the decedent's country
  ?father dbo:nationality ?residenceCountry .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
926,53,val,"Give me the successor of Mustafa III and father of the father of the spouse of Neşerek Kadın and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
    # Step 1: Find Mustafa III's successor
    ?mustafa3 dbo:succession ?successor .
    
    VALUES ?mustafa3 { <http://dbpedia.org/resource/Mustafa_III> }
    
    # Step 2: Find Neşerek Kadın's spouse
    ?neserek dbp:spouse ?spouse .
    
    VALUES ?neserek { <http://dbpedia.org/resource/Neşere_Kadın> }
    
    # Step 3: Determine the father of Neşerek Kadın's spouse
    ?spouse dbo:father ?fatherOfSpouse .
    
    # Step 4: Identify a child of Mustafa III's father who is royalty
    ?mustafa3Father dbo:child ?royalChild .
    
    ?mustafa3 dbp:father ?mustafa3Father .
    
    FILTER (?royalChild = ?successor)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
433,49,val,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Find the album ""Slowhand at 70 – Live at the Royal Albert Hall""
  dbr:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall dbo:artist dbr:Eric_Claptom .

  # Eric Clapton's profession
  dbr:Eric_Claptom dbo:profession ?claptonProfession .
  
  # Jack Bruce's details
  dbr:Jack_Bruce dbo:birthName ""Paul Laurence Dunbar Chambers Jr."" ;
                 a dbo:MusicArtist, dbo:Artist .

  # Find professionals in the same field as Eric Clapton and associated with Jack Bruce
  ?professional dbo:profession ?claptonProfession .
  ?professional dbo:associatedMusicalArtist dbr:Jack_Bruce .
}
```",5,7,6,3,2,3,3,71,0,0,16,0,0.0,0
216,48,val,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ""1983-12-20""^^xsd:date ;
          dbo:sportsManagerOf ?team ;
          dbo:managerOf ?team ;
          dbo:coach dbr:Croatia_national_under-21_football_team .

  FILTER EXISTS { ?person dbo:formerSoccerPlayer true . }
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
507,52,val,"Give me the professional in Film director, television director and spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/director> ?result . ?v5 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse ?movie WHERE {
  # Find Anne V. Coates
  ?anne a dbo:FilmEditor ;
        foaf:name ""Anne V. Coates""@en .
  
  # Get her birth name
  OPTIONAL { ?anne foaf:name ?birthName . }
  
  # Find her spouse who is a film and television director
  ?anne dbo:spouse ?spouse .
  ?spouse a dbo:FilmDirector ;
          dbo:profession ""film director""@en ;
          dbo:profession ""television director""@en .

  # Find the movie directed by this person that features Beryl Reid
  ?movie dbo:director ?spouse ;
         dbo:starring dbr:Beryl_Reid .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
892,54,val,Give me the landmark at elevation of the award of the member of E-girls and entity in the profession of Henri Crolla and entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v4 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?v1 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark ?elevation ?award ?profession ?entityInReggioEmilia
WHERE {
  # Landmarks at a certain elevation
  ?landmark dbo:elevation ?elevation .
  
  # Awards related to members of E-girls
  ?member dbr:E-girls_member_of_a_group:member .
  ?member dbo:award ?award .

  # Profession of Henri Crolla (boxing)
  dbr:Henri_Crolla dbo:profession ?profession .
  FILTER(?profession = dbr:Boxing)

  # Entity in Province of Reggio Emilia
  ?entityInReggioEmilia dbo:locatedInProvince dbr:Provincia_di_Reggio_Emilia .

}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
433,52,val,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and professional in Musician and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find the associated musical artist of Paul Chambers
  ?paulChambers dbr:Paul_Chambers .
  ?paulChambers dbo:associatedMusicalArtist ?associatedArtist .

  # Ensure this associated artist is also an artist and a musical artist
  ?associatedArtist rdf:type dbo:Musician ;
                   rdf:type dbo:Artist .

  # Find the associated musical artist of Scott LaFaro
  ?scottLaFaro dbr:Scott_LaFaro .
  ?scottLaFaro dbo:associatedMusicalArtist ?laFaroAssociatedArtist .

  # Ensure this associated artist is also an artist and a musical artist
  ?laFaroAssociatedArtist rdf:type dbo:Musician ;
                         rdf:type dbo:Artist .

  # The final artist we are looking for should be the associated musical artist of the above found artist
  ?associatedArtist dbo:associatedMusicalArtist ?artist .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
645,47,val,"Give me the commander in the force of Carlos Asensio Cabanillas and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Carlos Asensio Cabanillas and his military force
  ?force dbo:commandedBy ?commander .
  
  # The force is involved in a military conflict that is also a societal event
  ?force dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict ;
         rdf:type dbo:SocietalEvent .

  # The event is linked to a president from the Restoration period
  ?president dbo:nationality dbr:Spain ;
             dbo:officeHolderOf dbr:Restoration_(Spain) ;
             dbo:birthPlace ?place .
  
  # Linking the commander to the native president
  ?commander dbo:nativeCountry dbr:Spain .

  # Carlos Asensio Cabanillas is part of this force
  ?force dbo:member ?casaenasio .
  ?casaenasio rdfs:label ""Carlos Asensio Cabanillas""@en .
}
```",5,10,6,3,2,3,3,71,0,0,23,0,0.0,0
445,43,val,Give me the death place of the awardee of the establishment of 1820-03-10 and entity in England and entity in United Kingdom.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v4 <http://dbpedia.org/property/awards> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  ?entity dbo:foundingDate ?foundingDate .
  ?entity dbo:country dbr:England ;
          dbo:country dbr:United_Kingdom .
  FILTER (STR(?foundingDate) = ""1820-03-10"") .
  ?entity dbp:deathPlace ?deathPlace .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
456,49,val,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of the actor of Pacific Drive.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandName WHERE {
  # Alan Doyle's band
  ?alanDoyle a dbo:MusicalArtist ;
             foaf:name ""Alan Doyle""@en .
  
  ?alanDoyle dbo:memberOf ?doyleBand .

  # Actor in Pacific Drive and their spouse
  ?pacificDriveFilm dbo:title ""Pacific Drive""@en .
  ?actor a dbo:Actor ;
         dbo:actedIn ?pacificDriveFilm .
  
  ?actor foaf:mbox ?spouseEmail .
  ?spouse foaf:mbox ?spouseEmail .

  # Spouse is a musical artist
  ?spouse a dbo:MusicalArtist ;
          dbo:band ?spouseBand .

  # Band of the spouse
  ?spouseBand foaf:name ?bandName .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
18,19,val,"Give me the professional in the award of Ana María Sánchez de Ríos and parent of Liza Huber and alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:award ?award .
  ?person dbo:child ?lizaHuber .
  ?lizaHuber rdfs:label ""Liza Huber""@en .
  FILTER (LANG(?lizaHuber) = 'en') .

  ?person dbo:almaMater dbr:Marymount_College_(Tarrytown,_New_York) .
}
```

This query assumes:
- `dbo:award` is the property for awards.
- `dbo:child` is used to denote parent-child relationships (though it might be more common to use `dbo:parent`).
- `dbo:almaMater` links a person to their alma mater.",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
465,45,val,"Give me the spouse of Archduchess Barbara of Austria and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Archduchess Barbara of Austria and her spouse
  dbr:Barbara_of_Austria (dbo:spouse) ?spouse .

  # Charles Orlando, Dauphin of France's parent
  dbr:Charles_Orlando_da_Gonzaga dbo:parent ?parent .

  # Ercole II d'Este's successor
  dbr:Ercole_II_d%27Este dbo:succeededBy ?successor .

  # Find the child of Charles Orlando's parent who is a royalty and their successor
  ?child dbo:parent ?parent ;
         rdf:type dbo:Monarch .
  ?child dbo:succeededBy ?royaltySuccessor .

  # Linking to find the final answer
  FILTER(?spouse = ?royaltySuccessor)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
773,41,val,Give me the parent of the successor of Charles the Bald and parent of Charles the Fat and spouse of the father of Charles the Fat.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfSuccessor ?spouseOfCharlesFatFather
WHERE {
  # Charles the Bald and his successor
  dbr:Charles_the_Bald dbo:succeededBy ?successor .
  
  # Parent of the successor
  ?successor dbo:parent ?parentOfSuccessor .

  # Charles the Fat and his parent
  dbr:Charles_the_Fat dbo:parent ?charlesFatParent .

  # Spouse of Charles the Fat's father
  ?charlesFatParent dbo:spouse ?spouseOfCharlesFatFather .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
326,7,val,"Give me the professional in Composer and person decedent at the region coded, that is a settlement, as 442/760.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?v2 <http://dbpedia.org/ontology/areaCode> ""442/760"" . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?composer WHERE {
  ?composer a dbo:Composer .
  
  # Assuming ""442/760"" corresponds to a specific settlement, replace `SettlementName` with the actual DBpedia resource name.
  ?composer dbo:deathPlace dbr:SettlementName .

}
```

### Explanation:

- **PREFIX**: These lines define prefixes for common namespaces used in DBpedia. This helps shorten URIs and makes queries more readable.

- **SELECT ?composer WHERE { ... }**: We are selecting composers who meet the criteria specified within the curly braces.

- **?composer a dbo:Composer .**: This line ensures that the subject is an instance of `dbo:Composer`.

- **?composer dbo:deathPlace dbr:SettlementName .**: This line filters composers based on their death place. You need to replace `SettlementName` with the actual DBpedia resource name corresponding to the region coded ""442/760"". If you know the specific settlement, you can directly use its DBpedia resource identifier.

### Note:

- **Mapping Code to Settlement**: The code ""442/760"" needs to be mapped to a known settlement in DBpedia. This might require some external lookup or manual verification to find the correct DBpedia resource name for that region.

Once you have identified the correct settlement, replace `SettlementName` with its corresponding DBpedia resource identifier (e.g., `dbr:Paris` if Paris is the settlement).",3,4,4,2,2,2,2,9,0,0,6,0,0.0,0
341,7,val,Give me the band member of the awardee of List of awards and nominations received by Beyoncé and writer of In Love & War (Amerie album).,SELECT ?result WHERE { <http://dbpedia.org/resource/In_Love_&_War_(Amerie_album)> <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Beyoncé> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find awards received by Beyoncé
  ?award dbo:recipient dbr:Beyoncé .
  
  # Step 2: Find other awardees of the same award
  ?award dbo:recipient ?otherAwardee .

  # Step 3: Identify writer of Amerie's album ""In Love & War""
  ?album dbo:writer ?writer .
  FILTER (str(?album) = ""In_Love_&_War_(Amerie_album)"")

  # Step 4: Check if the awardee and writer are the same person
  FILTER (?otherAwardee = ?writer)

  # Step 5: Find band members associated with this individual
  ?bandMember dbo:member ?writer .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
582,49,val,"Give me the reference to the residence of Hirotaka Sugawara and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence ?nickname
WHERE {
  # Find Hirotaka Sugawara's residence
  OPTIONAL {
    ?sugawara a dbo:Person ;
              foaf:name ""Hirotaka Sugawara"" ;
              dbo:residence ?residence .
  }
  
  # Find Hajime Moriyasu's team nickname
  OPTIONAL {
    ?moriyasu a dbo:Person ;
             foaf:name ""Hajime Moriyasu"" ;
             dbo:memberOf ?team .
    ?team dbo:nickname ?nickname .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
433,48,val,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and professional in the profession of Bob Marley.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?associatedArtist WHERE {
  ?person dbo:profession dbr:Bob_Marley .
  ?person dbo:associatedWith dbr:Paul_Chambers .
  ?person dbo:birthDate ?birthDate .
  
  ?person dbo:musicalArtist ?true .
  FILTER (?true = true) .

  ?person dbo:artist ?true2 .
  FILTER (?true2 = true) .

  OPTIONAL {
    ?associatedArtist dbo:associatedWith ?person .
    ?associatedArtist a dbo:MusicalArtist .
  }
}
```",5,7,6,3,2,3,3,71,0,0,16,0,0.0,0
892,43,val,Give me the entity in Italy and entity in Province of Reggio Emilia and landmark at elevation of the award of the member of E-girls.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?italyEntity ?reggioEmiliaEntity ?landmark WHERE {
  # Entity in Italy
  ?italyEntity a dbo:Place ;
               dbo:country dbr:Italy .

  # Entity in Province of Reggio Emilia
  ?reggioEmiliaEntity a dbo:AdministrativeRegion ;
                      dbo:partOf dbr:Province_of_Reggio_Emilia .

  # Landmark at specific elevation related to an award for E-girls member
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ?elevation .
  
  FILTER (?elevation = ""SPECIFIC_ELEVATION"") # Replace with actual elevation value

  # Assuming there's a connection between the landmark and an award given to an E-girls member
  ?award a dbo:Award ;
         dbo:recipient dbr:E-girls_Member ; # Replace with specific member if known
         dbo:relatedLandmark ?landmark .
}
```

Note:
- Replace `""SPECIFIC_ELEVATION""` with the actual elevation value you are interested in.
- Replace `dbr:E-girls_Member` with a specific DBpedia resource for an E-girls member if available.",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
47,45,val,"Give me the office of the awardee of the entity, that is an award, in India and office of Suvendu Adhikari and office of Bidesh Ranjan Bose.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?awardee ?office ?person (IF(?person = ""Suvendu Adhikari"", ""Suvendu Adhikari Office"", IF(?person = ""Bidesh Ranjan Bose"", ""Bidesh Ranjan Bose Office"", ""Awardee Office"")) AS ?label)
WHERE {
  # Find awards given in India
  ?award dbo:country dbr:India .
  
  # Find awardees of these awards
  ?award dbo:recipient ?awardee .

  # Get offices held by the awardees
  OPTIONAL { ?awardee dbo:office ?office . }

  # Include specific individuals
  VALUES ?person {
    ""Suvendu Adhikari"" 
    ""Bidesh Ranjan Bose""
  }
  
  # Retrieve offices for these specific individuals
  OPTIONAL { ?person dbo:office ?office . FILTER(?person IN (""Suvendu Adhikari"", ""Bidesh Ranjan Bose"")) }

  # Bind the person variable to either awardee or specific individuals
  BIND(IF(BOUND(?awardee), ?awardee, ?person) AS ?person)
}
ORDER BY ?award ?awardee",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
582,55,val,"Give me the figure known as the nickname of Japan national football team and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to the residence of Hirotaka Sugawara.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname ?fatherName ?residence WHERE {
  # Nickname of Japan National Football Team
  VALUES ?team { dbr:Japan_national_football_team }
  ?team dbo:nickname ?nickname .

  # Masami Nagasawa's father
  ?masami a dbo:Person ;
          foaf:surname ""Nagasawa"" ;
          foaf:givenName ""Masami"" .
  ?father dbo:child ?masami ;
          a dbo:Athlete, dbo:SoccerManager, dbo:SportsManager ;
          rdfs:label ?fatherName .

  # Hirotaka Sugawara's residence
  ?sugawara a dbo:Person ;
            foaf:surname ""Sugawara"" ;
            foaf:givenName ""Hirotaka"" .
  OPTIONAL { ?sugawara dbo:residenceLocation ?residence . }
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
933,52,val,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to the birth name of Alan Warner (musician) and band of The Ramong Sound.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?birthName WHERE {
  # Find members of The Ramones
  VALUES ?ramones { dbr:The_Ramones }
  
  ?member dbo:band dbr:The_Ramones .
  
  OPTIONAL {
    ?member foaf:name ?bandMember .
  }

  OPTIONAL {
    ?member dbo:birthName ?birthName .
  }

  # Find connections to Alan Warner
  VALUES ?alanWarner { dbr:Alan_Warner_(musician) }
  
  OPTIONAL {
    ?alanWarner foaf:name ""Alan Warner"" .
    ?alanWarner dbo:birthName ?birthName .
  }

  FILTER (?bandMember != """" || ?birthName != """")
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
926,41,val,Give me the successor of the child of Ahmed III and child of Ahmed III and father of the father of Abdulaziz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfAhmed3 ?fatherOfFatherOfAbdulaziz ?successor1 ?successor2
WHERE {
  # Ahmed III and his children
  dbr:Ahmed_III dbo:spouse ?spouse .
  ?spouse dbo:child ?childOfAhmed3 .

  # Abdulaziz's father and grandfather
  dbr:Abdulaziz_al-Saud dbo:father ?fatherOfAbdulaziz .
  ?fatherOfAbdulaziz dbo:father ?fatherOfFatherOfAbdulaziz .

  # Successor of the child of Ahmed III
  ?childOfAhmed3 dbo:successor ?successor1 .

  # Successor of the father of the father of Abdulaziz
  ?fatherOfFatherOfAbdulaziz dbo:successor ?successor2 .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
976,43,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of Mustafa Şentop and office of Naci Bostancı.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?office WHERE {
  ?mayor a dbo:Mayor ;
         dbo:nationality dbr:Turkey ;
         dbo:occupation dbr:Politician .

  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Turkey ;
         rdfs:label ""Millet İttifakı""@en .
  
  ?office1 a dbo:Office ;
           dbo:holder ?mayor ;
           dbo:positionTitle ?title1 .

  ?office2 a dbo:Office ;
           dbo:holder dbr:Mustafa_Şentop ;
           dbo:positionTitle ""Speaker of the Grand National Assembly of Turkey""@en .

  ?office3 a dbo:Office ;
           dbo:holder dbr:Naci_Bostancı ;
           dbo:positionTitle ""Speaker of the Grand National Assembly of Turkey""@en .

  FILTER(?title1 = ""Mayor"" || ?title1 = ""Municipal Mayor"")
}
```

This query attempts to find a mayor who is Turkish, associated with Millet İttifakı, and linked through their office to both Mustafa Şentop and Naci Bostancı.",5,11,6,3,3,3,3,71,0,0,1,0,0.0,0
326,15,val,"Give me the person decedent at France and resident of the birthplace, that is a state and British, of the professional in Writer.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/France> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/occupation> ""Writer""@en . ?result <http://dbpedia.org/property/residence> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:Writer .
  ?person dbo:deathPlace dbr:France .
  ?person dbo:residence ?birthPlace .
  ?birthPlace a dbo:StateOrTerritory ;
              dbo:country dbr:United_Kingdom .
}
```

This query selects individuals who are writers, died in France, resided in their birthplace, and whose birthplace is a state within the United Kingdom.",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
606,17,val,"Give me the figure known as Barb City and birthplace of the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?city WHERE {
  # Find the city known as ""Barb City""
  ?city rdfs:label ""Barb City""@en .
  
  OPTIONAL {
    # Check if this city is the birthplace of an alumnus from the University of Pennsylvania
    ?person dbo:almaMater dbr:University_of_Pennsylvania ;
            dbo:birthPlace ?city .
    
    FILTER EXISTS { 
      ?person rdfs:label ""Penn Quakers""@en .
    }
  }
}
```",4,7,5,3,2,3,2,20,0,1,1,0.0,0.0,0
445,44,val,Give me the entity in the award of George H. Cameron and death place of the awardee of Royal Astronomical Society and entity in England.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardEntity ?deathPlace ?entityInEngland
WHERE {
  # Part 1: Entity in the award of George H. Cameron
  ?award dbo:recipient dbr:George_H._Cameron .
  ?award dbo:award dbr:Award_Name . # Replace Award_Name with actual award name if known

  BIND(dbr:George_H._Cameron AS ?awardEntity)

  # Part 2: Death place of the awardee of Royal Astronomical Society
  ?royalAward dbo:recipient ?awardee .
  ?awardee dbo:deathPlace ?deathPlace .
  
  FILTER EXISTS { ?royalAward dbo:award dbr:Royal_Astronomical_Society } # Replace with actual award if known

  # Part 3: Entity in England
  ?entityInEngland dbo:location dbr:England .
}",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
865,47,val,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Syeda Shahar Banu's spouse
  ?spouse a dbo:Spouse ;
          dbo:spouse dbr:Syeda_Shahar_Banu .

  # Child of the spouse who is a politician
  ?child dbo:parent ?spouse ;
         a dbo:Politician .

  # Father of that child
  ?father dbo:child ?child .

  # Ram Jaipal Singh Yadav's residence country
  dbr:Ram_Jaipal_Singh_Yadav dbo:residenceLocation ?location .
  ?location a dbo:Country ;
            rdfs:label ?countryLabel .

  # Native of that country
  ?father dbo:nationality ?location .
}
```

This query assumes the existence of certain properties and relationships in DBpedia. Adjustments might be necessary based on actual data availability.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
166,15,val,"Give me the resting place of the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla and entity in Spain.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace WHERE {
  # Find Manuel Hedilla
  VALUES ?manuelHedilla { dbr:Manuel_Hedilla }
  
  # Get the burial place of Manuel Hedilla
  ?manuelHedilla dbo:deathPlace ?restingPlace .
}
```

This query assumes that DBpedia has a direct link from Manuel Hedilla to his death place, which is often used as a proxy for burial sites in such databases.",4,7,5,3,2,3,2,20,0,0,4,0,0.0,0
433,41,val,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and professional in Musician.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
# Step 1: Find Scott LaFaro's associated musical artist who is also an artist
SELECT ?artist WHERE {
    wd:Q123456 wdt:P106 wd:Q33999 . # Scott LaFaro is a musician
    wd:Q123456 wdt:P527 ?associatedArtist . # Associated artists of Scott LaFaro
    ?associatedArtist wdt:P106 wd:Q33999 . # The associated artist is also a musician
    ?associatedArtist wdt:P170 ?artwork . # The associated artist has artwork (indicating they are an artist)
}

# Step 2: Find Paul Chambers' associated musical artist who is also an artist
SELECT ?artist WHERE {
    wd:Q123457 wdt:P106 wd:Q33999 . # Paul Chambers is a musician
    wd:Q123457 wdt:P527 ?associatedArtist . # Associated artists of Paul Chambers
    ?associatedArtist wdt:P106 wd:Q33999 . # The associated artist is also a musician
    ?associatedArtist wdt:P170 ?artwork . # The associated artist has artwork (indicating they are an artist)
}

# Step 3: Find the associated musical artist of the result from Step 1
SELECT ?finalArtist WHERE {
    ?artist wdt:P106 wd:Q33999 . # The artist from Step 1 is a musician
    ?artist wdt:P527 ?finalArtist . # Associated artists of the artist from Step 1
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
826,53,val,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of the child of the father of Anna Magdalena Appel and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Find Prince Friedrich of Hesse and by Rhine's parent
  ?friedrich dbo:parent ?parent .
  FILTER(STRSTARTS(STR(?friedrich), ""dbr:Prince_Friedrich_of_Hesse_and_by_Rhine""))

  # Step 2: Find the predecessor of this parent
  ?predecessor dbo:successor ?parent .

  # Step 3: Identify Anna Magdalena Appel's father
  ?anna dbo:father ?father .
  FILTER(STRSTARTS(STR(?anna), ""dbr:Anna_Magdalena_Appel""))

  # Step 4: Find a child of this father
  ?child dbo:parent ?father .

  # Step 5: Identify the spouse of this child
  ?spouse dbo:spouse ?child .

  # Step 6: Find Louis II, Grand Duke of Hesse's successor
  ?louis2 dbo:successor ?successor .
  FILTER(STRSTARTS(STR(?louis2), ""dbr:Louis_II,_Grand_Duke_of_Hesse""))

  # Ensure the spouse is also the successor of Louis II
  FILTER(?spouse = ?successor)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
917,47,val,"Give me the child of the father of the spouse, that is a royalty, of Leleiohoku I and parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfFather
WHERE {
    # Leleiohoku I and his spouse
    dbr:Leleiohoku_I dbo:spouse ?spouse .
    
    # Spouse's father
    ?spouse dbo:father ?father .

    # Father's child who is royalty
    ?father dbo:child ?childOfFather .
    ?childOfFather a dbo:Monarch .

    # Kamehameha IV and his child who is royalty
    dbr:Kamehameha_IV dbo:child ?kChild .
    ?kChild a dbo:Monarch .

    # Parent of Kamehameha IV's child
    ?parentOfKChild dbo:child ?kChild .
    
    # Match the two children
    FILTER (?childOfFather = ?parentOfKChild)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
456,51,val,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band2 WHERE {
  # Find Alan Doyle's band
  ?alanDoyleBand dbo:member dbr:Alan_Doyle .
  
  # Check if this band has an alter ego ""The Shadow""
  ?alanDooleBand dbo:alias dbr:The_Shadow .

  # Find another band that the first band is part of
  ?alanDoyleBand dbo:band ?band2 .
}
```

This query assumes:
- Alan Doyle's primary association with a band can be found using `dbo:member`.
- The alter ego ""The Shadow"" is linked via `dbo:alias`.
- We are looking for another band (`?band2`) that the first band is part of.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
573,41,val,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and parent of John Quincy Adams and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedent WHERE {
  # Find William J. Phelan's residence
  ?phelanResidence a dbo:Settlement ;
                   dbo:resident [dbo:name ""William J. Phelan""] .

  # Find John Quincy Adams' parent who lived at the same residence
  ?parent dbr:John_Quincy_Adams dbo:parent .
  ?parent dbo:residence ?phelanResidence .

  # Find Charlie Baker's administration region
  ?bakerAdmin a dbo:Region ;
              dbo:administrator [dbo:name ""Charlie Baker""] .

  # Find person decedent at both locations
  ?personDecedent dbo:deceasedAt ?phelanResidence .
  ?personDecedent dbo:deceasedAt ?bakerAdmin .
}
```",5,7,6,2,3,3,3,71,0,0,2,0,0.0,0
47,51,val,"Give me the office of the awardee of Banga Bhushan and office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award1 ?office1 ?award2 ?office2 WHERE {
  # Find awardees of the Banga Bhushan award and their offices
  ?person dbo:awardedBy dbr:Banga_Bhushan.
  OPTIONAL { ?person dbo:positionHeld ?office1. }

  # Find awardees of another unspecified award in India and their offices
  ?person2 dbo:awardedBy ?award2.
  FILTER EXISTS { ?award2 dbo:country dbr:India }
  OPTIONAL { ?person2 dbo:positionHeld ?office2. }

  # Ensure the same person is considered for both awards (if applicable)
  OPTIONAL { VALUES ?person { ?person ?person2 } }
}
```

This query does the following:
- It selects distinct pairs of awards and offices.
- For the ""Banga Bhushan"" award, it finds persons who have been awarded and their held positions.
- For another unspecified award in India, it similarly finds awardees and their positions.
- The `FILTER EXISTS` clause ensures that the second award is associated with India.

Note: This query assumes that DBpedia has structured data for these awards and their awardees. Adjustments may be necessary based on actual data availability and structure.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
773,51,val,"Give me the parent of the successor of Charles the Bald and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfSuccessor ?parentOfRoyaltyChild
WHERE {
  # Step 1: Find Charles the Bald's successor
  ?charles a dbo:Monarch ;
           dbo:successor ?successor .

  FILTER (?charles = dbr:Charles_the_Bald)

  # Step 2: Find the parent of the successor
  ?successor dbo:parent ?parentOfSuccessor .

  # Step 3: Identify Carloman of Bavaria's father who is an office holder and royalty
  ?carloman a dbo:Monarch ;
            dbo:father ?father .
  
  FILTER (?carloman = dbr:Carloman_of_Bavaria)

  ?father a dbo:OfficeHolder, dbo:Monarch .

  # Step 4: Find the child of this father that is royalty
  ?father dbo:child ?royaltyChild .
  ?royaltyChild a dbo:Monarch .

  # Step 5: Find the parent of this royal child
  ?royaltyChild dbo:parent ?parentOfRoyaltyChild .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
582,53,val,"Give me the figure known as the nickname of Japan national football team and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in Kazuaki Nagasawa.","SELECT ?result WHERE { <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/property/residence> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname ?sugawaraResidence ?nagasawaResidence WHERE {
  # Get the nickname of the Japan national football team
  dbr:Japan_national_football_team dbo:nickname ?nickname .

  # Get the residence of Hirotaka Sugawara (assuming he is a scientist)
  OPTIONAL { 
    dbr:Hirotaka_Sugawara dbo:residence ?sugawaraResidence .
  }

  # Get the residence of Kazuaki Nagasawa (assuming he is a player)
  OPTIONAL {
    dbr:Kazuaki_Nagasawa dbo:residence ?nagasawaResidence .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
715,53,val,"Give me the commander in Spanish Civil War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force, that is a military conflict, of the native of Morocco.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?officeLeader ?conflictCommander WHERE {
  # Find commanders in the Spanish Civil War
  ?commander dbo:occupation dbr:Spanish_Civil_War_Commander .
  
  # Find leaders of offices that are both government agencies and organizations
  ?officeLeader dbo:type dbr:Government_Agency ;
                dbo:type dbr:Organization .
  
  # Carlos Franco Iribarnegaray's role or connection
  ?carlos dbr:Carlos_Franco_Iribarnegaray ;
          dbo:occupation ?commander ;
          dbo:leaderOf ?officeLeader .

  # Find commanders in a military conflict involving a native of Morocco
  ?conflictCommander dbo:occupation ?conflict .
  ?native dbo:nationality dbr:Morocco .
  ?conflict dbo:participant ?native .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
36,21,val,Give me the actor of Being Mrs Elliot and person born as the birth name of Ayo Makun and person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor ?personWithBirthName ?personBorn1971
WHERE {
  # Actor of ""Being Mrs Elliot""
  ?series dbo:title ""Being Mrs Elliot""@en .
  ?series dbo:starring ?actor .

  # Person born as Ayo Makun
  ?person foaf:name ""Ayo Makun"" .
  ?person dbo:birthName ?personWithBirthName .

  # Person born in 1971
  ?personBorn1971 dbo:birthYear ""1971""^^xsd:gYear .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
281,23,val,"Give me the awardee of the award of Alfred Warden and commander in the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  # Find the award associated with Alfred Warden
  ?award dbo:recipient ?person .
  ?person rdfs:label ""Alfred Warden""@en .

  # Find the awardee of this award who is also a commander in a war
  ?award2 dbo:recipient ?awardee .
  ?awardee dbo:commanderOf ?war .

  # Ensure the war is both an event and a military conflict
  ?war rdf:type dbo:Event ;
       rdf:type dbo:MilitaryConflict .

  # Filter for Roy Boehm as the awardee
  FILTER(CONTAINS(LCASE(?awardee), ""roy boehm""))
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
826,49,val,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Louis IV, Grand Duke of Hesse
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:child ?child1 .
  
  # Child of Louis IV
  ?child1 dbo:spouse ?spouse .
  
  # Spouse of the child of Louis IV
  ?spouse dbo:parent ?parent .
  
  # Parent of the spouse
  ?parent dbo:predecessor ?predecessor .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
326,17,val,"Give me the resident of Berkshire and person decedent at the award, that is a country, of the awardee of French Legion of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Berkshire> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?awardee dbo:honoraryDegree dbr:French_Legion_of_Honor .
  ?awardee dbo:country dbr:France .
  ?person dbo:residence dbr:Berkshire .
  ?person dbo:dateOfDeath ?deathDate .
  ?awardEvent dbo:recipient ?person ;
              dbo:place dbr:France ;
              dbo:date ?awardDate .
  FILTER (?deathDate > ?awardDate)
}
```

This query does the following:
- Selects individuals who have received the French Legion of Honor.
- Ensures these awards are associated with France.
- Finds persons who resided in Berkshire and were still alive at the time they received the award.",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
527,17,val,"Give me the actor of The Book Tower and author of the work, that is a work and a book, of the host of Hyperland.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v0 . <http://dbpedia.org/resource/The_Book_Tower> <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?author WHERE {
  # Find the actor of The Book Tower
  ?movie dbr:The_Book_Tower .
  ?movie dbo:starring ?actor .

  # Find the host of Hyperland
  ?tvShow dbr:Hyperland .
  ?tvShow dbo:hostedBy ?host .

  # Find a work that is both a book and authored by the host of Hyperland
  ?work dbo:author ?host ;
        rdf:type dbo:Book .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
5,15,val,"Give me the birthplace of the person born, that is a politician, as the award of Renata Adler and entity in Canada.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person dbo:awardReceived dbr:Renata_Adler .
  ?person a dbo:Politician .
  ?person dbp:birthPlace ?birthPlace .
  FILTER (CONTAINS(LCASE(str(?birthPlace)), ""canada""))
}
```

This query does the following:
- Selects individuals (`?person`) who have received an award from Renata Adler.
- Ensures these individuals are politicians.
- Retrieves their birthplace, filtering for those located in Canada.",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
382,15,val,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler and landmark at elevation of 100.","SELECT ?result WHERE { <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/elevation> ""100""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerBirthplace WHERE {
  # Step 1: Identify Lukas Kübler as a soccer player
  ?player dbr:Lukas_Kübler .
  
  # Step 2: Find his manager who is also an athlete and sports manager
  ?player dbo:managedBy ?manager .
  ?manager rdf:type dbo:Athlete ;
           rdf:type dbo:SportsManager .

  # Step 3: Determine the birthplace of this manager
  ?manager dbp:birthPlace ?birthPlace .

  # Step 4: Ensure there's a landmark at an elevation of 100 meters in that location
  ?landmark dbo:elevation ""100""^^xsd:float ;
           dbo:location ?birthPlace .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
573,42,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the administration, that is a region, of Charlie Baker and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Identify the author of ""Exchequer Standards""
  ?author dbo:work ?exchequerStandards .
  ?exchequerStandards rdfs:label ""Exchequer Standards""@en .

  # Step 2: Find the parent who is a politician and an office holder
  ?parent dbo:child ?author ;
          a dbo:Politician, dbo:OfficeHolder .

  # Step 3: Ensure decedent at the administration of Massachusetts
  ?parent dbo:placeOfBirth dbr:Massachusetts .
  
  # Step 4: Ensure decedent at Quincy, Massachusetts
  ?parent dbo:deathPlace dbr:Quincy,_Massachusetts .
}
```

This query assumes that:
- The author of ""Exchequer Standards"" is linked via `dbo:work`.
- The parent is identified as both a politician and an office holder.
- Decedent locations are specified using `dbo:placeOfBirth` for the administration region and `dbo:deathPlace` for Quincy, Massachusetts.",5,8,6,2,3,3,3,71,0,0,2,0,0.0,0
47,47,val,"Give me the office of the administration of Jagdeep Dhankhar and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?jagdeepOffice ?mantuAward ?awardAwardeeOffice
WHERE {
  # Find Jagdeep Dhankhar's office in administration
  dbr:Jagdeep_Dhankhar dbo:office ?jagdeepOffice .

  # Find Mantu Ghosh's award
  dbr:Mantu_Ghosh dbo:award ?mantuAward .

  # Find the awardee of that award and their office
  ?mantuAward dbo:recipient ?awardAwardee .
  ?awardAwardee dbo:office ?awardAwardeeOffice .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
124,45,val,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and commander in Mahdist War and military force of Battle of Tamai.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?event ?militaryForce
WHERE {
  # Find the person born on June 24, 1850
  ?person dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1850 && MONTH(?birthDate) = 6 && DAY(?birthDate) = 24)

  # Find events where this person was a commander in the Mahdist War and involved in Battle of Tamai
  ?event dbo:commander ?person ;
         rdf:type ?eventType .
  
  FILTER (
    EXISTS { ?event dbp:name ""Mahdist War"" } ||
    EXISTS { ?event dbp:name ""Battle of Tamai"" }
  )

  # Find the military force associated with these events
  OPTIONAL {
    ?event dbo:militaryForce ?militaryForce .
  }

  # Ensure the event is both a societal event and a military conflict
  FILTER (
    ?eventType = dbr:Military_conflict &&
    ?eventType = dbr:Societal_event
  )
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
791,49,val,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherOfChild WHERE {
  # Emperor Antoku
  ?antoku a dbo:Emperor ;
          dbp:father ?fatherAntoku .

  # Father of Emperor Antoku's father (must be royalty and office holder)
  ?fatherAntoku a dbo:Person ;
                dbo:father ?grandFatherAntoku .
  
  FILTER EXISTS { ?grandFatherAntoku dbo:royalty ""true""^^xsd:boolean }
  FILTER EXISTS { ?grandFatherAntoku dbo:officeHolder ""true""^^xsd:boolean }

  # Spouse of Emperor Takakura's spouse (must be royalty)
  ?takakura a dbo:Emperor ;
            dbp:spouse ?spouseTakakura .
  
  ?spouseTakakura dbp:spouse ?spouseOfSpouse .

  FILTER EXISTS { ?spouseOfSpouse dbo:royalty ""true""^^xsd:boolean }

  # Child of the father (who is royalty)
  ?child a dbo:Person ;
         dbo:father ?grandFatherAntoku .
  
  FILTER EXISTS { ?child dbo:royalty ""true""^^xsd:boolean }
  
  # Father of this child
  ?child dbp:father ?fatherOfChild .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
47,46,val,"Give me the office of the awardee of Banga Bhushan and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardeeOffice ?commanderOffice WHERE {
  # Find Banga Bhushan awardees
  ?person dbo:awardReceived dbr:Banga_Bhushan_Award .
  
  # Get the office of the Banga Bhushan awardee
  OPTIONAL { 
    ?person dbo:office ?awardeeOffice .
  }
  
  # Find politicians involved in Operation Green Hunt as commanders
  ?politician dbo:occupation dbr:Politician ;
              dbo:participatedInOperation dbr:Operation_Green_Hunt ;
              dbo:role ""Commander""^^xsd:string .
  
  # Get the office of the politician commander
  OPTIONAL { 
    ?politician dbo:office ?commanderOffice .
  }
}
```

This query assumes that DBpedia has structured data for these specific awards, operations, and roles. Adjustments may be necessary based on actual data availability.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
965,51,val,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  # George Mountbatten, 2nd Marquess of Milford Haven
  ?george a dbo:Person ;
          foaf:name ""George Mountbatten, 2nd Marquess of Milford Haven"" ;
          dbo:birthName ?birthName .

  # Parent of George who is a noble
  ?parent dbo:child ?george ;
          dbo:nobleTitle ?title ;
          foaf:name ?parentName .

  # Prince Louis of Battenberg as child of the parent
  ?prince a dbo:Person ;
          foaf:name ""Prince Louis of Battenberg"" ;
          dbo:parent ?parent .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
507,40,val,"Give me the director of Entertaining Mr Sloane (film) and professional in Film director, television director and spouse of the person born as the birth name of Anne V. Coates.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?director WHERE {
  # Find the film ""Entertaining Mr Sloane""
  dbr:Entertaining_Mr_Sloane (dbo:director) ?director .

  # Ensure the director has professions in both film and television directing
  ?director dbo:occupation ?occupation .
  FILTER (
    EXISTS { ?occupation rdfs:label ""Film director""@en }
    && EXISTS { ?occupation rdfs:label ""Television director""@en }
  )

  # Find Anne V. Coates
  dbr:Anne_V_Coates foaf:name ""Anne V. Coates"" .

  # Ensure the director is married to Anne V. Coates
  ?director dbo:spouse dbr:Anne_V_Coates .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
433,46,val,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonArtist WHERE {
  # Find Paul Chambers' associated musical artist
  ?paulChambers a dbo:MusicalArtist ;
                dbo:birthName ""Paul Laurence Dunbar Chambers Jr.""@en .
  
  ?paulChambers dbo:associatedBandOrMusicalGroup ?artist1 .

  # Ensure the artist is both an artist and a musical artist
  ?artist1 a dbo:Artist, dbo:MusicalArtist .

  # Find Scott LaFaro's associated musical artist
  ?scottLaFaro a dbo:MusicalArtist ;
               dbo:birthName ""Scott LaFaro""@en .
  
  ?scottLaFaro dbo:associatedBandOrMusicalGroup ?artist2 .

  # Ensure the artist is both an artist and a musical artist
  ?artist2 a dbo:Artist, dbo:MusicalArtist .

  # Find the common associated artist between Paul Chambers and Scott LaFaro
  FILTER (?artist1 = ?commonArtist)
  FILTER (?artist2 = ?commonArtist)
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
839,48,val,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?charlieHuhnBand ?kevinRussellPersonaBand
WHERE {
  # Find Charlie Huhn's band
  OPTIONAL {
    ?charlieHuhn a dbo:MusicalArtist ;
                 foaf:name ""Charlie Huhn"" .
    ?charlieHuhn dbo:band ?charlieHuhnBand .
  }

  # Find Kevin Russell's persona and its associated band
  OPTIONAL {
    ?kevinRussell a dbo:MusicalArtist ;
                  foaf:name ""Kevin Russell (musician)"" .
    ?persona a dbo:Persona ;
             dbo:associatedWith ?kevinRussell .
    ?persona dbo:band ?kevinRussellPersonaBand .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
892,52,val,Give me the entity in Province of Reggio Emilia and landmark at elevation of the award of Anna Ishii and entity in the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInReggioEmilia ?landmark ?professionEntity
WHERE {
  # Entity in Province of Reggio Emilia
  ?entityInReggioEmilia dbo:locatedIn dbr:Province_of_Reggio_Emilia .

  # Landmark at elevation of the award of Anna Ishii
  ?award dbo:recipient dbr:Anna_Ishii .
  ?award dbo:elevation ?elevation .
  
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ?sameElevation .
  FILTER (?sameElevation = ?elevation)

  # Entity in the profession of the true self of Enrico Crolla
  ?enrico dbr:Enrico_Crolla .
  ?enrico dbo:trueSelf ?trueSelf .
  ?trueSelf dbo:profession ?profession .

  ?professionEntity a ?profession .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
935,17,val,"Give me the headquarter of the office of the native of Balochistan, Pakistan and death place of Abdul Raziq Bugti.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . ?v3 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Abdul_Raziq_Bugti> <http://dbpedia.org/ontology/deathPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters ?deathPlace WHERE {
  # Assuming the office is related to Balochistan's provincial government
  OPTIONAL {
    dbr:Balochistan_(province) dbo:administrativeOffice ?office .
    ?office dbo:headquarterLocation ?headquarters .
  }
  
  # Death place of Abdul Raziq Bugti
  dbr:Abdul_Razzaq_Bugti dbo:deathPlace ?deathPlace .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
976,49,val,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office1 ?office2 WHERE {
  # Office of the leader of the Grand National Assembly of Turkey (Speaker)
  dbr:Serdar_Dönmez dbo:positionHeld dbr:Speaker_of_the_Grand_National_Assembly_of_Turkey .
  dbr:Speaker_of_the_Grand_National_Assembly_of_Turkey dbo:office ?office1 .

  # Office of Naci Bostancı
  dbr:Naci_Bostancı dbo:birthName ?birthName .
  OPTIONAL { 
    ?person dbo:birthName ?birthName .
    ?person dbo:positionHeld ?position .
    ?position dbo:office ?office2 .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
274,22,val,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie and professional in the designer of Tetris Classic.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Identify Dizzy Gillespie
  dbr:Dizzy_Gillespie a dbo:Musician ;
                      foaf:name ""John Birks Gillespie""@en .

  # Find band members associated with Dizzy Gillespie
  ?bandMember dbo:member dbr:Dizzy_Gillespie .
}
```",4,5,5,2,2,2,3,28,0,0,8,0,0.0,0
216,19,val,Give me the office of the mayor of Ros Bates and administration of  and party of Campbell Newman.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeRosBates ?administrationCampbellNewman ?partyCampbellNewman
WHERE {
  # Ros Bates as Mayor of Gold Coast
  dbr:Ros_Bates dbo:positionHeld dbr:Mayor_of_the_Gold_Coast .
  
  # Campbell Newman's administration and party
  dbr:Campbell_Newman dbo:officeHolder dbr:Premier_of_Queensland .
  OPTIONAL { dbr:Campbell_Newman dbo:partyAffiliation ?partyCampbellNewman . }
  OPTIONAL {
    ?administrationCampbellNewman dbo:premier dbr:Campbell_Newman ;
                                   dbo:startDate ?startDate .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
917,52,val,"Give me the child of Kekūanāoʻa and child of the father of Keʻelikōlani and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfKekuanaoa ?childOfKeelikolanisFather ?mayorChildParent WHERE {
  # Kekūanāoʻa's child
  ?kekuanaoa dbo:spouse ?parent1 .
  ?parent1 dbo:child ?childOfKekuanaoa .

  # Keʻelikōlani's father
  ?keelikolani dbo:spouse ?parent2 .
  ?parent2 dbo:child ?childOfKeelikolanisFather .

  # Mayor of the Hawaiian Kingdom and their child's parent
  ?mayor dbo:positionHeld dbr:Hawaiian_Kingdom_mayors .
  ?mayorChild dbo:parent ?mayorChildParent .
  
  # Ensure the person is royalty
  ?mayorChildParent a dbo:RoyalFamilyMember .

  # Find commonality between these relationships
  FILTER(?childOfKekuanaoa = ?childOfKeelikolanisFather)
}
```

This query assumes that:
- The `dbo:spouse` and `dbo:child` properties are used to find familial relationships.
- There is a property or class like `dbo:RoyalFamilyMember` to identify royalty, which might need adjustment based on actual DBpedia schema.
- The mayor's position is linked via `dbo:positionHeld`.

Please note that the exact structure and availability of these properties in DBpedia may vary, so adjustments might be necessary.",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
216,53,val,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and player in Mario Ivanković.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ""1983-12-20""^^xsd:date ;
          dbo:sportsManagerOf ?team .
  
  OPTIONAL { ?person dbo:coachOf dbr:Croatia_national_under-21_football_team . }
  OPTIONAL { ?person dbo:playerFor ?marioTeam . 
             ?marioTeam dbo:member Mario_Ivanković . }

  FILTER EXISTS {
    ?person dbo:soccerManager .
  }
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
926,45,val,"Give me the successor of Mustafa III and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of Mahmud II.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Mustafa III's successor
  dbr:Mustafa_III dbo:successionSuccessor ?successor .
  
  # Abdul Hamid I is the father of Mahmud II
  ?successor dbo:spouse ?mother ;
            dbo:child ?mahmudII .
  dbr:Mahmud_II dbo:parent ?successor .

  # Mustafa III is the parent of Beyhan Sultan
  dbr:Beyhan_Sultan dbo:parent dbr:Mustafa_III .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
976,41,val,"Give me the office of Naci Bostancı and office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).",SELECT ?result WHERE { <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v2 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?naciBostanciOffice ?leaderOffice ?mayorOffice WHERE {
  # Naci Bostancı's office
  dbr:Naci_Bostancı dbo:office ?naciBostanciOffice .

  # Leader of Grand National Assembly of Turkey
  ?leader a dbo:Politician ;
          dbo:officeHolderOf dbr:Grand_National_Assembly_of_Turkey .
  ?leader dbo:office ?leaderOffice .

  # Mayor of Nation Alliance (Turkey)
  ?mayor a dbo:Politician, dbo:Mayor ;
         dbo:nationality dbr:Turkey ;
         dbo:officeHolderOf dbr:Nation_Alliance_(Turkey) .
  ?mayor dbo:office ?mayorOffice .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
645,44,val,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in Battle of Jarama.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v2 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/ontology/battle> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leaderOfOffice ?militaryForce ?battleCommander
WHERE {
  # Find the office led by Camilo Menéndez Tolosa
  ?office dbo:head dbr:Camilo_Menéndez_Tolosa .
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .

  # Find the military force associated with Francisco Largo Caballero
  ?militaryForce dbo:leader dbr:Franco_Largo_Caballero .
  ?militaryForce rdf:type dbo:Event ;
                 rdf:type dbo:MilitaryConflict ;
                 rdf:type dbo:SocietalEvent .

  # Find the commander in the Battle of Jarama
  ?battleCommander dbo:commanderInBattle dbr:Battle_of_Jarama .
}",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
773,53,val,"Give me the parent of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse WHERE {
  # Carloman of Bavaria's parent
  ?carloman a dbo:Person ;
            foaf:name ""Carloman of Bavaria"" ;
            dbo:childOf ?parent .

  # Charles the Fat's parent (Bernard's grandparent)
  ?charlesFat a dbo:Person ;
              foaf:name ""Charles the Fat"" ;
              dbo:childOf ?grandparent .

  # Louis the German's royal child
  ?louisGerman a dbo:Person ;
               foaf:name ""Louis the German"" ;
               dbo:child ?royalChild .
  
  ?royalChild a dbo:Monarch ;
              dbo:parent ?parent .

  # Ensure the parent from Carloman's lineage matches the spouse of Charles the Fat's grandparent
  ?grandparent dbo:spouse ?spouse .
  
  FILTER (?parent = ?spouse)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
773,44,val,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of Louis the German and parent of the successor of Charles the Bald.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?individual WHERE {
  # Louis the German and his children who are royalty
  ?child dbo:parent dbr:Louis_the_German ;
         a dbo:Monarch .

  # Spouse of Louis the German
  ?spouse dbo:spouse dbr:Louis_the_German .

  # Successor of Charles the Bald
  ?successor dbo:predecessor dbr:Charles_the_Bald .
  
  # Parent of the successor of Charles the Bald
  ?parent dbo:child ?successor .

  # Find the individual who is both a child and spouse, and also a parent of the successor
  VALUES ?individual { ?child ?spouse }
  FILTER (?individual = ?parent)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
98,21,val,"Give me the entity in the region, that is a country, of Philippine Standard Time and region of Philippine Standard Time and birth place of Paolo Ballesteros.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Find the country in the region of Philippine Standard Time
  ?country dbo:timeZone dbr:Philippine_Standard_Time .
  
  # Ensure it is a country
  ?country rdf:type dbo:Country .

  # Find the birthplace of Paolo Ballesteros
  dbr:Paolo_Ballesteros dbo:birthPlace ?entity .

  # Ensure the entity is in the same region (Philippines)
  ?entity dbo:location dbr:Philippines .
}
```",4,5,5,2,3,2,3,28,0,0,2,0,0.0,0
987,55,val,"Give me the birth place of the actor of All for Free and birth place of the band, that is an artist and a musical artist, of Šako Polumenta and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorBirthPlace ?bandBirthPlace ?country
WHERE {
  # Actor of ""All for Free""
  ?work dbo:title ""All for Free""@en .
  ?work dbo:starring ?actor .
  ?actor dbo:birthPlace ?actorBirthPlace .

  # Band related to Šako Polumenta
  ?band dbo:artist Šako_Polumenta ;
        a dbo:Band .
  ?band dbo:birthPlace ?bandBirthPlace .

  # Country in Central European Time
  ?country dbp:timeZone ""Central European Time"" .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
158,16,val,"Give me the party of the successor, that is a prime minister and an office holder and a politician, of André Tardieu and entity in the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorParty ?awardCountry
WHERE {
  # Find André Tardieu's successor who is a prime minister, office holder, and politician
  ?tardieu dbo:officeHolderOf dbr:Prime_Minister_of_France .
  ?tardieu dbo:successor ?successor .
  ?successor rdf:type dbo:Politician ;
             dbo:officeHolderOf dbr:Prime_Minister_of_France .

  # Get the party of the successor
  ?successor dbo:party ?successorParty .

  # Find the country associated with an award given to Adelbert Cronkhite
  ?cronkhite dbo:award ?award .
  ?award dbo:country ?awardCountry .
  
  FILTER (?tardieu = dbr:André_Tardieu)
  FILTER (?cronkhite = dbr:Adelbert_Cronkhite)
}
```",4,8,5,2,2,3,2,20,0,0,1,0,0.0,0
715,51,val,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeLeader WHERE {
  # Find offices associated with Carlos Franco Iribarnegaray
  ?carlos a dbo:Person ;
          foaf:name ""Carlos Franco Iribarnegaray""@en ;
          dbo:positionHeld ?position1 .
  
  # Find offices associated with Francisco Largo Caballero
  ?francisco a dbo:Person ;
             foaf:name ""Francisco Largo Caballero""@en ;
             dbo:positionHeld ?position2 .

  # Ensure the positions are related to the same office
  ?office dbo:head ?leader .
  FILTER (?position1 = ?position2)
  
  # Find the leader of that office
  ?office dbo:head ?officeLeader .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
83,7,val,Give me the player in the person born on 1995-07-07 and player in Albert Edward (soccer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Albert_Edward_(soccer)> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1995-07-07""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/team> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?player WHERE {
  # Find players born on July 7, 1995
  ?player a dbo:SoccerPlayer ;
          dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1995 && MONTH(?birthDate) = 7 && DAY(?birthDate) = 7)

  UNION

  # Find players associated with Albert Edward in soccer
  ?association dbo:player ?player ;
               dbo:team dbr:Albert_Edward_(soccer) .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
987,40,val,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and entity in Montenegro and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Dado Prljaca is an artist from Montenegro
  dbr:Dado_Prljaca dbo:nationality dbr:Montenegro .

  # Moamer Kasumović (Rambo Amadeus) and his birthplace
  dbr:Moamer_Kasumović rdfs:label ""Rambo Amadeus""@en .
  dbr:Moamer_Kasumović dbo:birthPlace ?ramboBirthPlace .

  # Bijelo dugme is the band that includes both Dado Prljaca and Rambo Amadeus
  dbr:Bijelo_dugme dbo:member dbr:Dado_Prljaca .
  dbr:Bijelo_dugme dbo:member dbr:Moamer_Kasumović .

  # Find another artist associated with Bijelo dugme
  ?artist dbo:member dbr:Bijelo_dugme .
  FILTER(?artist != dbr:Dado_Prljaca && ?artist != dbr:Moamer_Kasumović)

  # Get the birthplace of this other artist
  ?artist dbo:birthPlace ?birthPlace .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
433,53,val,"Give me the professional in the profession of Bob Marley and associated musical artist of Bill Evans and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bobMarleyProfession ?billEvansArtist ?paulChambersPersona
WHERE {
  # Bob Marley's profession
  dbr:Bob_Marley dbo:profession ?bobMarleyProfession .

  # Bill Evans' associated musical artist
  dbr:Bill_Evans dbo:associatedMusicalArtist ?billEvansArtist .

  # Person born as Paul Chambers who is both a musical artist and an artist
  ?paulChambersPersona dbo:birthName ""Paul Chambers"" .
  ?paulChambersPersona rdf:type dbo:Musician .
  ?paulChambersPersona rdf:type dbo:Artist .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
507,44,val,"Give me the professional in the profession of Guy Ferland and spouse of Anne V. Coates and director of the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/director> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director WHERE {
  # Find Guy Ferland's profession
  ?guyFerland a dbo:Person ;
              foaf:name ""Guy Ferland""@en .
  
  OPTIONAL { ?guyFerland dbo:profession ?profession . }
  
  # Find Anne V. Coates' spouse
  ?anneVCoates a dbo:Person ;
               foaf:name ""Anne V. Coates""@en .
  
  OPTIONAL { ?anneVCoates dbo:spouse ?spouse . }

  # Find the director of a movie with Beryl Reid
  ?movie a dbo:Film ;
         dbo:director ?director ;
         dbo:starring dbr:Beryl_Reid .

  FILTER (?guyFerland = ?spouse)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
917,55,val,"Give me the child of the father of Keʻelikōlani and child of the father of Kamehameha IV and parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Keʻelikōlani's father
  ?keelikoFather dbo:child dbr:Keʻelikōlani .
  
  # Kamehameha IV's father
  ?kamehamehaIVFather dbo:child dbr:Kamehameha_IV .

  # Find the child of both fathers (common child)
  ?person dbo:parent ?keelikoFather ;
          dbo:parent ?kamehamehaIVFather .
  
  # Ensure the person is royalty
  ?person a dbo:Monarch .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
826,54,val,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of Louis IV, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Louis I, Grand Duke of Hesse
  ?louisI a dbo:Monarch ;
          foaf:name ""Louis I"" ;
          dbo:spouse ?child1 .

  # Child of Louis I who is also royalty and predecessor of Louis IV
  ?child1 a dbo:Monarch ;
          dbo:predecessor ?louisIV ;
          dbo:successor ?child2 .

  # Louis IV, Grand Duke of Hesse
  ?louisIV a dbo:Monarch ;
           foaf:name ""Louis IV"" ;
           dbo:spouse dbr:Louise_of_Hesse-Darmstadt .

  # Successor of the child (from step 3)
  ?child2 dbo:successor ?successor .

  # Johann Heinrich Appel's child
  ?appelChild a dbo:Person ;
              foaf:name ""Johann Heinrich Appel"" ;
              dbo:child ?appelChild1 .

  # Spouse of Johann Heinrich Appel's child
  ?appelChild1 dbo:spouse ?successor .
}
```

This query assumes:
- The relationships are correctly modeled in DBpedia.
- The names and roles (like ""Monarch"") are accurately represented.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
773,52,val,Give me the parent of Charles the Fat and parent of the successor of Charles the Bald and spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v5 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfCharlesTheFat ?parentOfSuccessorOfCharlesTheBald ?spouseOfGrandfatherOfBernard
WHERE {
  # Parent of Charles the Fat
  dbr:Charles_the_Fat dbo:child dbr:Louis_the_German .
  dbr:Louis_the_German dbo:parent ?parentOfCharlesTheFat .

  # Successor of Charles the Bald and their parent
  dbr:Charles_the_Bald dbo:succeededBy dbr:Louis_II_of_France .
  dbr:Louis_II_of_France dbo:parent ?parentOfSuccessorOfCharlesTheBald .

  # Spouse of the father of the parent of Bernard (son of Charles the Fat)
  dbr:Bernard_I_of_Saxony dbo:child dbr:Charles_the_Fat .
  dbr:Bernard_I_of_Saxony dbo:parent ?parentOfBernard .
  ?parentOfBernard dbo:parent ?grandfatherOfBernard .
  ?grandfatherOfBernard dbo:spouse ?spouseOfGrandfatherOfBernard .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
459,22,val,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore and governor of the administration, that is a politician, of Brad Henry.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/governor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorOfDeathPlace ?governorDuringAdministration
WHERE {
  # Find Cliff Roquemore's death place and its governor
  dbr:Cliff_Roquemore dbo:deathPlace ?deathPlace .
  FILTER (isLiteral(?deathPlace) && datatype(?deathPlace) = xsd:string)
  
  OPTIONAL { 
    ?deathPlace dbo:governor ?governorOfDeathPlace .
    ?governorOfDeathPlace a dbo:Politician .
  }
  
  # Find Brad Henry's administration and its governor
  dbr:Brad_Henry dbo:officeHolder ?administration .
  FILTER (isLiteral(?administration) && datatype(?administration) = xsd:string)
  
  OPTIONAL { 
    ?administration dbo:governor ?governorDuringAdministration .
    ?governorDuringAdministration a dbo:Politician .
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
329,20,val,"Give me the entity in Northern Ireland and entity in the region, that is a country, of Western European Time and birthplace of Eric Cross (writer).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/ontology/country> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInNorthernIreland ?regionCountry WHERE {
  # Find the birthplace of Eric Cross
  ?birthPlace a dbo:Place ;
              dbo:birthPlaceOf dbr:Eric_Cross .

  # Ensure the place is in Northern Ireland and its region (country) observes WET
  ?birthPlace dbo:locatedIn dbr:Northern_Ireland .
  
  ?regionCountry dbo:timeZone dbp:Western_European_Time ;
                 dbo:administrativeDivision dbr:Northern_Ireland .

  # The entity in Northern Ireland is the birthplace itself
  BIND(?birthPlace AS ?entityInNorthernIreland)
}
```

This query does the following:
- It identifies the birthplace of Eric Cross.
- Ensures this place is located in Northern Ireland.
- Finds the region (country) that includes Northern Ireland and observes Western European Time.",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
47,42,val,Give me the office of the awardee of Padma Vibhushan and office of Bidesh Ranjan Bose and office of the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?officeName WHERE {
  # For Padma Vibhushan awardee (example for a specific individual)
  VALUES ?padmaVibhushan { dbpedia:Specific_Padma_Vibhushan_Awardee }

  # Bidesh Ranjan Bose
  VALUES ?bideshRanjanBose { dbpedia:Bidesh_Ranjan_Bose }

  # Jagdeep Dhankhar
  VALUES ?jagdeepDhankhar { dbpedia:Jagdeep_Dhankhar }

  {
    ?person foaf:name ?name .
    FILTER (?person IN(?padmaVibhushan, ?bideshRanjanBose, ?jagdeepDhankhar))
    ?person dbo:office ?office .
    ?office rdfs:label ?officeName .
    FILTER (langMatches(lang(?officeName), ""en""))
  }
}
ORDER BY ?person
```

**Notes**:
- Replace `dbpedia:Specific_Padma_Vibhushan_Awardee` with the actual DBpedia URI of a specific Padma Vibhushan awardee if known.
- Ensure that the URIs for Bidesh Ranjan Bose and Jagdeep Dhankhar are correct as per DBpedia.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
791,47,val,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
    # Step 1: Find Emperor Go-Shirakawa's grandchild who is an office holder and royalty
    ?grandchild dbo:parent ?child .
    ?child dbo:parent dbr:Emperor_Go-Shirakawa .
    ?grandchild a dbo:Royalty ;
               a dbo:OfficeHolder .

    # Step 2: Find Emperor Takakura's spouse who is a royalty
    ?spouse dbo:spouse dbr:Emperor_Takakura .
    ?spouse a dbo:Royalty .

    # Step 3: Find the predecessor of the grandchild
    ?predecessor dbo:successor ?grandchild .
}
```",5,8,6,3,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
865,52,val,"Give me the father of Shahla Khatun and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfShahla ?politicianChildFather ?nativeCountry
WHERE {
  # Father of Shahla Khatun
  ?shahlaKhatun a dbo:Person ;
                foaf:parent ?fatherOfShahla .
  FILTER (str(?shahlaKhatun) = ""Shahla_Khatun"") .

  # Child of Abu Ahmad Abdul Hafiz who is a politician
  ?abuAhmad dbr:Abu_Ahmad_Abdul_Hafiz ;
            foaf:child ?politicianChild .
  ?politicianChild dbo:occupation dbr:Politician ;
                   foaf:parent ?politicianChildFather .

  # Native country of the person decedent at Patna
  ?person dbr:Patna ;
          dbo:deathPlace ?patna ;
          dbo:nationality ?nativeCountry .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,21,val,Give me the awardee of Medal bar and awardee of the award of Alfred Warden and commander in New Guinea campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?medalBarAwardee ?wardenAwardAwardee ?newGuineaCommander WHERE {
  # Find the awardee of the Medal Bar
  ?medalBarAwardee dbo:award <http://dbpedia.org/resource/Medal_Bar> .

  # Find the awardee of the Alfred Warden Award
  ?wardenAwardAwardee dbo:award <http://dbpedia.org/resource/Alfred_Warden_Award> .

  # Find someone who was a commander in the New Guinea campaign
  ?newGuineaCommander dbo:commanded <http://dbpedia.org/resource/New_Guinea_campaign> .
}
```

This query assumes that DBpedia has structured data for these specific awards and roles. The `dbo:award` predicate is used to link individuals to their respective awards, while `dbo:commanded` links commanders to campaigns they led.",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
826,51,val,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?individual WHERE {
  # Louis IV, Grand Duke of Hesse
  ?childLouisIV dbo:parent dbr:Louis_IV,_Grand_Duke_of_Hesse .
  
  # Predecessor of Louis IV
  ?predecessor dbo:successor dbr:Louis_IV,_Grand_Duke_of_Hesse .

  # Louis I, Grand Duke of Hesse
  ?childLouisI dbo:parent dbr:Louis_I,_Grand_Duke_of_Hesse .
  
  # Successor of the child of Louis I who is royalty
  ?successorChildLouisI dbo:predecessor ?childLouisI ;
                       a dbo:Monarch .

  # Find common individual
  FILTER (?individual = ?predecessor && ?individual = ?successorChildLouisI)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
465,52,val,"Give me the successor of Renée of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successorRenée ?successorChild ?spouseRoyalChild
WHERE {
  # Successor of Renée of France
  dbr:Renée_of_France dbo:succeededBy ?successorRenée .

  # Parent of Ercole II d'Este
  dbr:Ercole_II_d%27Este dbo:parent ?parentErcole .
  
  # Child of the parent of Ercole II d'Este
  ?childParent dbo:childOf ?parentErcole .
  
  # Successor of this child
  ?childParent dbo:succeededBy ?successorChild .

  # Children of Ferdinand I who are royalty
  ?royalChild dbo:childOf dbr:Ferdinand_I,_Holy_Roman_Emperor ;
              a dbo:RoyalPerson .

  # Spouse of the royal child
  ?royalChild dbo:spouse ?spouseRoyalChild .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
130,15,val,"Give me the figure known as the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama and entity in Tennessee.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v1 <http://dbpedia.org/ontology/director> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Tennessee> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?footballClub WHERE {
  ?person dbo:nationality dbr:United_States_of_America ;
          dbo:birthPlace dbr:Lexington,_Kentucky ;
          dbo:occupation dbr:Football_coach .
  
  ?person dbo:almaMater dbr:University_of_Tennessee_at_Knoxville .

  ?footballClub dbo:coach ?person ;
                a dbo:Soccer_Club .

  FILTER (CONTAINS(LCASE(STR(?person)), ""nick saban""))
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
791,45,val,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and predecessor of Emperor Antoku and spouse of Taira no Tokuko.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v1 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfChild WHERE {
  # Emperor Antoku's father
  dbr:Emperor_Antoku dbo:father dbr:Taira_no_Kiyomori .

  # Taira no Kiyomori is royalty and an office holder, predecessor of Emperor Antoku, and spouse of Taira no Tokuko
  dbr:Taira_no_Kiyomori a dbo:Monarch ;
                        dbo:spouse dbr:Taira_no_Tokuko ;
                        dbo:predecessorOf dbr:Emperor_Antoku .

  # Find the child who is royalty
  ?child dbo:father dbr:Taira_no_Kiyomori .
  ?child a dbo:Monarch .

  # Get the father of this royal child
  ?child dbo:father ?fatherOfChild .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
978,17,val,Give me the band member of Enya and band member of the person born as the name of Chicane (musician).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Enya> . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?enyaBandMember ?chicanePersonBandMember WHERE {
  # Find Enya's band members
  ?enya dbr:Enya .
  ?enya dbo:musicalArtist ?band .
  ?bandMember dbo:member ?band ;
              foaf:name ?enyaBandMember .

  # Find the person Chicane is named after
  ?chicane dbr:Chicane_(musician) .
  ?chicane dbo:birthName ?name .
  
  # Find band members of the person with that name
  ?person foaf:name ?name ;
          dbo:musicalArtist ?band2 .
  ?bandMember2 dbo:member ?band2 ;
               foaf:name ?chicanePersonBandMember .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
839,49,val,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personBand ?bandOfBand
WHERE {
  # Find Kevin Richard Russell who is a musical artist
  ?person a dbo:MusicalArtist ;
          foaf:name ""Kevin Richard Russell""@en .
  
  # Get the band associated with Kevin Richard Russell
  ?person dbo:member ?personBand .

  # Ensure the person's band is also a musical artist
  ?personBand a dbo:MusicalArtist .

  # Find the band of this band (if it exists)
  OPTIONAL {
    ?personBand dbo:bandMember ?bandOfBand .
    ?bandOfBand a dbo:MusicalArtist .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
417,40,val,"Give me the child of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?alexandrine dbo:child ?commonChild .
  ?christianX dbo:child ?commonChild .
  
  ?knud dbo:child ?knudsChild .
  ?commonChild dbo:spouse ?parentOfKnudsChild .

  FILTER (?commonChild = dbp:MargretheII)
  FILTER (?parentOfKnudsChild = dbp:HenrikPrinceConsort)

  ?person rdfs:label ?name .
  FILTER CONTAINS(LCASE(?name), ""henrik prince consort of denmark"")
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
554,16,val,Give me the leader of the birth place of The Legendary Tigerman and leader of the administration of Francisco da Costa Gomes.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . ?v2 <http://dbpedia.org/property/leader> ?result . ?v3 <http://dbpedia.org/property/leader> ?result . <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlaceLeader ?administrationLeader
WHERE {
  # Find the birthplace of The Legendary Tigerman
  dbr:The_Legendary_Tigerman dbo:birthPlace ?birthPlace .

  # Get the leader of that birthplace
  ?birthPlace dbo:headOfGovernment ?birthPlaceLeader .

  # Find Francisco da Costa Gomes and his administration
  dbr:Francisco_da_Costa_Gomes dbo:officeHeld ?administration .
  
  # Get the leader of his administration
  ?administration dbo:headOfGovernment ?administrationLeader .
}
```",4,4,5,2,2,3,2,20,0,0,3,0,0.0,0
715,52,val,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of Ministry of the Air (Spain) and commander in the force of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v5 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?conflict dbo:location dbr:Morocco .
  
  ?person dbo:nationality dbr:Morocco ;
          dbo:positionHeld dbr:Ministry_of_Air_(Spain) ;
          dbo:commanderOf ?conflict .

  ?caballeroCommander dbo:commanderOf ?conflict ;
                      rdfs:label ""Francisco Largo Caballero""@en .
  
  FILTER (?person = ?caballeroCommander)
}
```

This query does the following:

- Identifies a military conflict (`?conflict`) that took place in Morocco.
- Finds a person (`?person`) who is native to Morocco and held the position of leader at the Ministry of the Air in Spain, and was also a commander in the identified conflict.
- Ensures this person is also the commander associated with Francisco Largo Caballero in the same conflict.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
715,50,val,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Office holder, politician, and president roles
  ?officeHolderPosition dbo:positionHeld ?person ;
                       dbo:election dbr:1933_Spanish_general_election .
  ?politicianRole dbo:agent ?person .
  ?presidency dbo:holder ?person .

  # Leader of an organization or government agency
  ?leaderPosition dbo:leader ?person ;
                  a (dbo:GovernmentAgency | dbo:Organization) .

  # Connection to Carlos Franco Iribarnegaray
  ?connection dbo:relatedTo ?person .
  ?connection dbo:relatedTo dbr:Carlos_Franco_Iribarnegaray .

  # Additional filtering for commander in the force of the mayor
  ?commanderRole dbo:commanderOf ?mayor ;
                 dbo:agent ?person .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
917,45,val,"Give me the child of Kekūanāoʻa and child of the father of the child, that is a royalty, of Kamehameha III and parent of Albert Kamehameha.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Find Kekūanāoʻa's child
  ?childKekuanaoa dbo:parent dbr:Kekūanāoʻa .
  
  # Step 2: Find the grandchild of Kekūanāoʻa (child of Kekūanāoʻa's child)
  ?grandchild dbo:parent ?childKekuanaoa .
  
  # Step 3: Ensure this person is royalty
  ?grandchild a dbo:Monarch ;
              dbo:country dbr:Hawaii .

  # Step 4: Ensure this person is the parent of Albert Kamehameha
  ?grandchild dbo:parent dbr:Albert_Kamehameha .
  
  BIND(?grandchild AS ?person)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
459,21,val,Give me the person born as the birth name of Kevin Stitt and governor of Oklahoma and governor of Dana Murphy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Kevin Stitt""@en .
  ?person dbo:birthName ""Kevin Stitt""@en .
  
  OPTIONAL { ?person dbo:governmentRole dbr:Governor_of_Oklahoma . }
  OPTIONAL { ?person dbo:alternateName ""Dana Murphy""@en . }

  FILTER (BOUND(?person))
}
```

This query does the following:
- Selects individuals who are of type `dbo:Person`.
- Filters those whose name is ""Kevin Stitt"" and birth name is also ""Kevin Stitt"".
- Checks if they have a government role as Governor of Oklahoma.
- Optionally checks for an alternate name ""Dana Murphy"".

Note that DBpedia might not directly link all these attributes, especially the alias or alternate names like ""Dana Murphy"", so this query assumes such data exists in the dataset.",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
373,7,val,"Give me the professional in Singer, songwriter and writer of the work, that is a single and a musical work and a work and a soundtrack, of .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/property/occupation> ""Singer, songwriter""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  ?work dbo:type ?type .
  
  FILTER (
    (?type = dbr:Singles_recorded_by_artists OR 
     ?type = dbr:Musical_works OR
     ?type = dbr:Works OR
     ?type = dbr:Soundtracks)
  )
  
  ?professional dbo:profession ?workType .
  
  FILTER (
    (?workType = dbr:Singer OR 
     ?workType = dbr:Songwriter OR
     ?workType = dbr:Writer)
  )

  ?work dbo:creator ?professional .
}
```",3,7,4,2,2,2,2,9,0,0,78,0,0.0,0
826,40,val,"Give me the spouse of the child of the father of Anna Magdalena Appel and predecessor of Louis IV, Grand Duke of Hesse and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Anna Magdalena Appel's father
  ?father dbo:child dbr:Anna_Magdalena_Bach .
  
  # A child of that father
  ?child dbo:parent ?father .

  # Spouse of that child
  ?spouse dbo:spouse ?child .

  # Predecessor and successor conditions for Louis IV and Louis II, Grand Duke of Hesse
  ?spouse dbo:predecessor dbr:Louis_IV,_Grand_Duke_of_Hesse .
  ?spouse dbo:successor dbr:Louis_II,_Grand_Duke_of_Hesse .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
465,40,val,"Give me the spouse of Archduchess Barbara of Austria and successor of Renée of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Spouse of Archduchess Barbara of Austria
  ?barbara a dbo:Archduchess ;
           dbo:spouse ?spouse .
  FILTER (?barbara = dbr:Barbara_of_Austria)

  # Successor of Renée of France
  ?renee a dbo:Person ;
         dbo:succeededBy ?successorRenée .
  FILTER (?renee = dbr:Renée_of_France)

  # Parent of Ercole II d'Este, Duke of Ferrara
  ?ercole2 a dbo:Duke ;
           dbo:parent ?parentErcole .
  FILTER (?ercole2 = dbr:Ercole_II_d%27Este)

  # Child of the parent of Ercole II d'Este
  ?childOfParent a dbo:Person ;
                 dbo:parent ?parentErcole .

  # Successor of that child
  ?childOfParent dbo:succeededBy ?successorChild .

  # Find common individual
  FILTER (?spouse = ?successorRenée && ?spouse = ?successorChild)
  BIND(?spouse AS ?individual)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
839,42,val,"Give me the band of Peter Schorowsky and band of the person born, that is a musical artist, as Kevin Richard Russell and band of the band, that is a musical artist, of Charlie Huhn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?peterBand ?kevinBirthDate ?charlieBand 
WHERE {
  # Peter Schorowsky's band
  OPTIONAL { 
    dbr:Pete_Schorowsky dbo:bandMember ?peterBand .
  }

  # Kevin Richard Russell's birth date and check if he is a musical artist
  OPTIONAL {
    dbr:Kevin_Russell dbo:birthDate ?kevinBirthDate ;
                      rdf:type dbo:MusicalArtist .
  }
  
  # Charlie Huhn's band
  OPTIONAL {
    dbr:Charlie_Huhn dbo:bandMember ?charlieBand .
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
839,47,val,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of the band, that is a band and a group, of Peter Schorowsky.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/bandMember> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandKevin ?bandPeter
WHERE {
  # Kevin Richard Russell as a musical artist
  ?kevin a dbo:MusicalArtist ;
         foaf:name ""Kevin Richard Russell"" .
  
  # Band associated with Kevin Richard Russell
  ?kevin dbo:memberOf ?bandKevin .

  # Peter Schorowsky as a member of a band
  ?peter a dbo:BandMember ;
         foaf:name ""Peter Schorowsky"" .
  
  # Band that is both a band and a group
  ?peter dbo:memberOf ?bandPeter .
  ?bandPeter a dbo:Band, dbo:Group .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
192,15,val,"Give me the spouse of the spouse, that is a royalty, of the child of Charles II of Naples and child of Mary of Hungary, Queen of Naples.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_of_Hungary,_Queen_of_Naples> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . ?v1 <http://dbpedia.org/ontology/spouse> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse WHERE {
  # Charles II of Naples and Mary of Hungary
  ?charles2 a dbo:Monarch ;
            dbo:spouse ?maryOfHungary .
  
  ?maryOfHungary a dbo:Queen ;
                 dbo:spouse ?charles2 .

  # Their child
  ?child dbo:parent ?charles2, ?maryOfHungary .

  # Spouse of the child
  ?spouseOfChild dbo:spouse ?child .
  
  # Check if this spouse is royalty
  ?spouseOfChild a dbo:Monarch ;
                 dbo:spouse ?royalSpouse .

  # Find the spouse of this royal spouse
  ?royalSpouse dbo:spouse ?spouseOfSpouse .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
715,54,val,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in the force, that is a military conflict, of Abd el-Krim and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolderOf dbr:Mayor ;
          dbo:presidentOf ?country ;
          dbo:electedDuring dbr:1933_Spanish_general_election ;
          dbo:militaryCommanderInConflict dbr:Abd_el-Krim ;
          dbo:ministerOf dbr:Ministry_of_the_Air_(Spain) .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
281,22,val,"Give me the commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?event ?commander ?awardee WHERE {
  # Find events where Roy Boehm was a commander
  ?event dbo:type dbr:Military_conflict ;
         dbo:commander dbr:Roy_Boehm .
  
  # Find awards related to military conflicts that Lawrence Moore Cosgrave received
  ?award dbo:type dbr:Military_conflict ;
         dbo:recipient dbr:Larry_Moore_Cosgrave .

  # Ensure the event and award are the same
  FILTER (?event = ?award)

  # Bind variables for clarity
  BIND(dbr:Roy_Boehm AS ?commander)
  BIND(dbr:Larry_Moore_Cosgrave AS ?awardee)
}
```",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
47,54,val,"Give me the office of Ajoy Mukherjee and office of the administration of Jagdeep Dhankhar and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeAjoyMukherjee ?officeJagdeepDhankhar ?awardMantuGhosh ?officeAwardRecipient
WHERE {
  # Ajoy Mukherjee's office or political position
  OPTIONAL { 
    dbr:Ajoy_Mukherjee dbo:positionHeld ?officeAjoyMukherjee .
  }

  # Jagdeep Dhankhar's administrative office
  OPTIONAL { 
    dbr:Jagdeep_Dhankhar dbo:positionHeld ?officeJagdeepDhankhar .
  }
  
  # Mantu Ghosh's award and the awardee's office
  OPTIONAL {
    dbr:Mantu_Ghosh dbo:awardReceived ?awardMantuGhosh .
    ?awardMantuGhosh dbo:recipient ?awardee .
    ?awardee dbo:positionHeld ?officeAwardRecipient .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
456,43,val,"Give me the band of Alan Doyle and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and spouse of Danielle Spencer (Australian actress).","SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?alterEgo ?spouse WHERE {
  # Alan Doyle and his band
  dbr:Alan_Doyle dbo:musicGroupMemberOf ?band .
  
  # Lamont Cranston's alter ego
  dbr:Lamont_Cranston dbo:fictionalAlterEgo ?alterEgo .
  
  # The actor who plays The Shadow and is married to Danielle Spencer
  ?actor dbo:spouse dbr:Danielle_Spencer ;
         dbo:role ?alterEgo .
}
```

This query assumes the existence of certain properties like `dbo:musicGroupMemberOf`, `dbo:fictionalAlterEgo`, and `dbo:spouse` in DBpedia, which may need to be adjusted based on actual data availability.",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
987,45,val,"Give me the birth place of Moamer Kasumović and birth place of Dado Polumenta and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v0 <http://dbpedia.org/property/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?kadhafiBirthplace ?prsoBirthplace ?country ?sportsEvent WHERE {
  # Birthplace of Moamer Kadhafi
  OPTIONAL { 
    dbr:Moamer_Kadhafi dbo:birthPlace ?kadhafiBirthplace .
  }
  
  # Birthplace of Dado Pršo
  OPTIONAL { 
    dbr:Dado_Pršo dbo:birthPlace ?prsoBirthplace .
  }

  # Time zone for Canicosa de la Sierra and countries in that time zone
  {
    SELECT DISTINCT ?country WHERE {
      dbr:Canicosa_de_la_Sierra dbo:timeZone ?tz .
      ?country dbo:timeZone ?tz ;
               a dbo:Country .
    }
  }

  # Sports events associated with the time zone of Canicosa de la Sierra
  OPTIONAL { 
    ?sportsEvent dbo:locationTimezone ?tz .
    dbr:Canicosa_de_la_Sierra dbo:timeZone ?tz .
  }
}
```",5,7,6,3,3,3,3,71,0,97,1,0.0,0.0,0
124,49,val,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  # Find the person born on June 24, 1850
  ?person dbo:birthDate ""1850-06-24""^^xsd:date ;
          dbo:militaryService ?militaryForce .

  # Identify military forces and conflicts involving this person
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:commander ?commander .

  OPTIONAL {
    ?conflict dbo:participatingMilitaryUnit ?militaryForce .
    ?conflict dbo:commander ?commander .
  }

  # Filter for A Field Battery, Royal Australian Artillery
  FILTER EXISTS { 
    ?battery a dbo:MilitaryUnit ;
             dbp:name ""A Field Battery, Royal Australian Artillery"" ;
             dbo:partOf ?militaryForce .
  }
}
```",5,9,6,3,2,3,3,71,0,0,9,0,0.0,0
965,47,val,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse WHERE {
  # Step 1: Identify Princess Victoria of Hesse and by Rhine
  ?princess a dbo:Person ;
           rdfs:label ""Princess Victoria of Hesse and by Rhine""@en .

  # Step 2: Find her spouse
  ?princess dbo:spouse ?spouse .

  # Step 3: Determine the spouse's spouse (which is Princess Victoria herself)
  
  # Step 4: Identify a child of Princess Victoria who is royalty
  ?child dbo:parent ?princess ;
         a dbo:RoyalFamilyMember .

  # Step 5: Find a politician born on 1854-05-24
  ?politician a dbo:Politician ;
              dbo:dateOfBirth ""1854-05-24""^^xsd:date .

  # Step 6: Identify the parent of this royal child that matches the politician
  ?child dbo:parent ?politician .
  
  # Return the spouse of the spouse (Princess Victoria)
  BIND(?spouse AS ?spouseOfSpouse)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
926,40,val,Give me the child of Ahmed III and father of the father of the spouse of Neşerek Kadın and successor of Mustafa III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Step 1: Find Neşerek Kadın's spouse
  ?neserekKadin a dbo:Spouse ;
                dbp:spouse ?spouse .

  # Step 2: Find the father of Neşerek Kadın's spouse
  ?spouse dbo:father ?fatherOfSpouse .

  # Step 3: Ahmed III's child who is also the father of the above person
  ?ahmedIII dbo:child ?child .
  ?child dbo:father ?fatherOfSpouse .

  # Step 4: Mustafa III's successor
  ?mustafaIII dbo:successor ?child .

  # Additional filters for specific individuals
  ?neserekKadin rdfs:label ""Neşerek Kadın""@en .
  ?ahmedIII rdfs:label ""Ahmed III""@en .
  ?mustafaIII rdfs:label ""Mustafa III""@en .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
495,15,val,Give me the father of Princess Charlotte of Württemberg and child of the father of the parent of Princess Catherine of Württemberg.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Princess_Charlotte_of_Württemberg> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfCharlotte
WHERE {
  # Find Princess Charlotte and her father
  dbr:Princess_Charlotte_of_W%C3%BCrttemberg dbo:parent ?charlotteFather .
  
  # Find Princess Catherine and one of her parents (likely mother)
  dbr:Princess_Catherine_of_W%C3%BCrttemberg dbo:parent ?catherineParent .

  # Find the grandparent of Princess Catherine
  ?catherineParent dbo:parent ?grandparent .

  # The father of this grandparent is what we need to find a child of
  ?grandparent dbo:spouse ?otherSpouse .
  
  # Ensure it's the same person as the parent of Charlotte's father
  ?charlotteFather dbo:parent ?fatherOfCharlotte .

  # Ensure that the father of Charlotte is also a child of this grandparent
  FILTER (?fatherOfCharlotte = ?grandparent || ?fatherOfCharlotte = ?otherSpouse)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
773,55,val,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of the father of Charles the Fat and parent of the successor of Charles the Bald.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Louis the German's child who is royalty
  ?child dbo:spouse ?royalChild .
  ?royalChild dbo:father dbr:Louis_the_German .

  # Charles the Fat's father and his spouse
  ?charlesFatFather dbo:son dbr:Charles_the_Fat .
  ?spouse dbo:spouse ?charlesFatFather .

  # Charles the Bald's successor and their parent
  ?successor dbo:predecessor dbr:Charles_the_Bald .
  ?parent dbo:child ?successor .

  # Linking the spouse of Charles the Fat's father to the royal child
  FILTER (?spouse = ?royalChild)
  
  # The parent we are looking for is the same as the spouse
  BIND(?spouse AS ?parent)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
459,20,val,"Give me the governor of Oklahoma and governor of the administration, that is a politician, of Brad Henry and person born as John Kevin Stitt.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . ?v3 <http://dbpedia.org/property/governor> ?result . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor1 ?governor2 WHERE {
  # Find Brad Henry and his term as governor of Oklahoma
  ?henry a dbo:Governor ;
         dbo:governmentRole ""Governor of Oklahoma"" ;
         dbo:termStart ?startHenry ;
         dbo:termEnd ?endHenry .

  # Find the current governor, John Kevin Stitt
  ?stitt a dbo:Person ;
         foaf:name ""John Kevin Stitt""@en ;
         dbo:officeHolderOf dbr:Governor_of_Oklahoma ;
         dbo:birthPlace ?birthPlaceStitt .

  # Get the person who was governor during Brad Henry's term
  ?governor1 a dbo:Governor ;
             dbo:governmentRole ""Governor of Oklahoma"" ;
             dbo:termStart ?startGover1 ;
             dbo:termEnd ?endGover1 .
  
  FILTER (?startHenry <= ?endGover1 && ?endHenry >= ?startGover1)

  # Get the current governor
  ?governor2 a dbo:Governor ;
             dbo:governmentRole ""Governor of Oklahoma"" ;
             dbo:officeHolderOf dbr:Governor_of_Oklahoma .

  FILTER (?stitt = ?governor2)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
791,41,val,"Give me the predecessor of the child of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura and father of Emperor Go-Toba.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Emperor Takakura and his child (Emperor Go-Shirakawa)
  dbr:Takakura_of_Japan dbo:child dbr:Go-Shirakawa .
  
  # Spouse of Emperor Go-Shirakawa
  dbr:Go-Shirakawa dbo:spouse dbr:Shōshi .

  # Predecessor of Emperor Go-Shirakawa
  dbr:Go-Shirakawa dbo:predecessor ?predecessor .
  
  # Father of Emperor Go-Toba (Emperor Toba)
  ?predecessor rdfs:label ""Toba, Emperor""@en .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
976,46,val,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v0 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderOffice ?mayorOffice
WHERE {
  # Find Kemal Kılıçdaroğlu's office in an administration
  dbr:Kemal_Kılıçdaroğlu dbo:positionHeld ?administration .
  ?administration a dbo:Organisation ;
                  dbo:head ?leader .
  FILTER (?leader = dbr:Kemal_Kılıçdaroğlu)
  ?administration dbo:office ?leaderOffice .

  # Find the mayor of Nation Alliance (Turkey)
  dbr:Nation_Alliance_(Turkey) dbo:mayor ?mayor .
  ?mayor a dbo:Politician ;
         dbo:office ?mayorOffice .
  FILTER (LANG(?mayorOffice) = ""tr"")
}
```",5,10,6,3,2,3,3,71,0,0,3,0,0.0,0
573,53,val,"Give me the person decedent at Quincy, Massachusetts and parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> ?v3 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:deathPlace dbr:Quincy,_Massachusetts .
  ?child dbo:parent ?person .
  ?child rdf:type dbo:Writer .
  
  ?person rdf:type dbo:Politician ;
          dbo:officeHolder true .

  ?person dbo:associatedWith dbr:Exchequer_Standards_and_Administration .
  
  OPTIONAL {
    ?region dbp:name ""Region related to Charlie Baker (Australian footballer)""@en .
    ?person dbo:nationality ?region .
  }
}
```

This query attempts to find a person who meets all the specified conditions. Note that some assumptions are made due to the complexity and specificity of the question, such as the exact nature of ""Region related to Charlie Baker (Australian footballer)"" which might need further clarification or adjustment based on available data.",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
987,46,val,"Give me the birth place of the actor of All for Free and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorBirthPlace ?bandBirthPlace WHERE {
  # Step 1: Find Dado Povolny's associated band that is both an artist and a musical artist
  ?band dbo:member dbr:Dado_Povolny .
  ?band rdf:type dbo:Band .
  ?band rdf:type dbo:MusicalArtist .

  # Step 2: From this band, find another entity that is considered an artist
  ?entity dbo:associatedBand ?band .
  ?entity rdf:type dbo:Artist .

  # Step 3: Find the birthplace of the actor from ""All for Free""
  dbr:All_for_Free dbo:actor ?actor .
  ?actor dbo:birthPlace ?actorBirthPlace .

  # Step 4: Find the birthplace of the band/entity identified in step 2
  ?entity dbo:birthPlace ?bandBirthPlace .
}
```",5,8,6,3,2,3,3,71,0,0,4,0,0.0,0
281,20,val,"Give me the awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave and commander in New Guinea campaign and awardee of Volunteer Decoration.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?award1 ?award2 WHERE {
  # Identify Lawrence Moore Cosgrave
  VALUES ?person { dbr:Lawrence_Moore_Cosgrave }
  
  # Find awards related to military conflict and Volunteer Decoration
  ?person dbo:receivedAward ?award1 .
  ?person dbo:receivedAward ?award2 .

  # Filter for specific award types
  FILTER (
    EXISTS {
      ?award1 dbo:type dbr:Military_Conflict_Award .
    }
    && 
    EXISTS {
      ?award2 rdfs:label ""Volunteer Decoration""@en .
    }
  )

  # Ensure the person was a commander in the New Guinea campaign
  OPTIONAL { 
    ?person dbo:commanderOf dbr:New_Guinea_campaign .
  }

}
```

This query does the following:
- It identifies Lawrence Moore Cosgrave using his DBpedia resource.
- It retrieves awards he received, filtering for one that is a military conflict award and another specifically labeled as ""Volunteer Decoration.""
- It optionally checks if he was a commander in the New Guinea campaign.",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
465,43,val,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Renée of France and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouse WHERE {
  ?person dbo:parent dbr:Elizabeth_of_Austria_(1526–1545) .
  ?person dbo:child dbr:Charles_V,_Holy_Roman_Emperor .
  ?charlesV dbo:sibling ?sibling .
  ?sibling dbo:successorOf dbr:Renée_of_France .
  ?sibling dbo:successorOf dbr:Ercole_II_d'Este .
  ?sibling dbo:spouse ?spouse .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
83,16,val,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983) and party of the governor of Dilma Rousseff.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://dbpedia.org/property/leaderParty> ?result . <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?rulingPartySandroBirthplace ?governorParty

{
  # Find Sandro's birthplace
  {
    SELECT ?sandroBirthplace WHERE {
      dbr:Sandro_(footballer,_born_October_1983) dbo:birthPlace ?sandroBirthplace .
      FILTER (isLiteral(?sandroBirthplace))
    }
  }

  # Check if the birthplace is a town in Brazil and has a soccer club
  {
    SELECT ?town WHERE {
      ?sandroBirthplace rdf:type dbr:Town ;
                        dbo:country dbr:Brazil ;
                        dbp:sportsTeam ?soccerClub .
      FILTER (isLiteral(?soccerClub))
    }
  }

  # Find the ruling party in Sandro's birthplace
  {
    SELECT ?rulingPartySandroBirthplace WHERE {
      ?town dbo:government ?government .
      ?government dbo:party ?rulingPartySandroBirthplace .
    }
  }

  # Find Dilma Rousseff's governorship and the political party of that governor
  {
    SELECT ?governorParty WHERE {
      dbr:Dilma_Rousseff dbo:officeHolder ?governor .
      ?governor dbo:government ?government .
      ?government dbo:party ?governorParty .
    }
  }

}",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
445,52,val,"Give me the death place of the awardee of Royal Astronomical Society and entity in United Kingdom and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?deathPlace ?residenceCountry WHERE {
  # Part 1: Awardees of the Royal Astronomical Society in the UK
  {
    ?person dbo:awardReceived dbr:Royal_Astronomical_Society_Medal .
    ?person dbo:nationality dbr:United_Kingdom .
    OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  }

  # Part 2: Athletes from Great Britain and their country of residence
  UNION {
    ?athlete dbo:nationality dbr:Great_Britain .
    OPTIONAL { ?athlete dbo:residenceCountry ?residenceCountry . }
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
791,44,val,"Give me the predecessor of the child of Emperor Takakura and father of the child, that is a royalty, of Emperor Takakura and spouse of Taira no Tokuko.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Minamoto no Sanetomo, child of Emperor Takakura and spouse of Taira no Tokuko
  dbr:Minamoto_no_Sanetomo dbo:spouse dbr:Taira_no_Tokiko .
  
  # Find the predecessor of Minamoto no Sanetomo in terms of Japanese emperors or royalty
  ?predecessor dbo:successor dbr:Minamoto_no_Sanetomo .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
892,40,val,Give me the entity in Province of Reggio Emilia and landmark at elevation of 58 and entity in the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInReggioEmilia ?landmarkAtElevation58 ?professionOfEnricoCrolla
WHERE {
  # Entity in Province of Reggio Emilia
  ?entityInReggioEmilia dbo:locatedIn dbr:Province_of_Reggio_Emilia .
  
  # Landmark at Elevation of 58
  ?landmarkAtElevation58 a dbo:Lighthouse ;
                        dbo:elevation ""58""^^xsd:float .

  # Profession of Enrico Crolla
  dbr:Enrico_Crolla dbo:occupation ?professionOfEnricoCrolla .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
826,46,val,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Louis I, Grand Duke of Hesse and his children
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:child ?child1 .
  
  # Child that is royalty
  ?child1 a dbo:Monarch ;
          dbo:succeededBy ?royalty .

  # Anna Magdalena Appel's father
  dbr:Anna_Magdalena_Bach dbo:father ?father .

  # Father's children
  ?father dbo:child ?child2 .

  # Spouse of the child
  ?child2 dbo:spouse ?spouse .

  # Successor of the royalty
  ?royalty dbo:succeededBy ?successor .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
433,45,val,Give me the associated musical artist of Bill Evans and associated musical artist of Paul Chambers and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?billEvansArtist ?paulChambersArtist ?writerProfession
WHERE {
  # Find associated musical artists of Bill Evans
  ?billEvansArtist dbo:associatedMusicalArtist dbr:Bill_Evans .
  
  # Find associated musical artists of Paul Chambers
  ?paulChambersArtist dbo:associatedMusicalArtist dbr:Paul_Chambers .

  # Identify the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  dbr:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall dbo:writer ?writer .
  
  # Get the profession of the writer
  ?writer a ?profession ;
          rdfs:label ?writerLabel .
  FILTER(CONTAINS(LCASE(?writerLabel), ""author"") || CONTAINS(LCASE(?writerLabel), ""musician""))

  BIND(IF(STRSTARTS(LCASE(?writerLabel), ""author""), ""Author"", IF(STRSTARTS(LCASE(?writerLabel), ""musician""), ""Musician"", ""Other"")) AS ?writerProfession)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
826,50,val,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of the parent of Prince Friedrich of Hesse and by Rhine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Louis I and his reference royalty
  dbr:Louis_I_of_Bavaria dbo:spouse ?referenceRoyalty .
  
  # Reference Royalty's child who is a royalty
  ?referenceRoyalty dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .

  # Successor of this royal child
  ?royalChild dbo:successor ?successor .

  # Parent of Prince Friedrich of Hesse and by Rhine
  dbr:Friedrich_of_Hesse_and_by_Rhine dbo:parent ?parent .
  
  # Predecessor of this parent
  ?parent dbo:predecessor ?predecessor .

  # Ensure the successor is also the predecessor of the parent
  FILTER (?successor = ?predecessor)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
865,51,val,"Give me the father of the child of the father of Abul Maal Abdul Muhith and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?fatherOfAbulMaal ?politicianChildFather
WHERE {
  # Find Abul Maal Abdul Muhith's father
  ?abulMaal dbo:spouse ?spouse .
  ?spouse foaf:name ""Abul Maal Abdul Muhith"" .
  ?abulMaal dbo:child ?child1 .
  ?child1 foaf:name ""Abul Maal Abdul Muhith"" .
  ?abulMaal dbo:parent ?fatherOfAbulMaal .

  # Find Abu Ahmad Abdul Hafiz's child who is a politician
  ?hafiz dbo:spouse ?spouse2 .
  ?spouse2 foaf:name ""Abu Ahmad Abdul Hafiz"" .
  ?hafiz dbo:child ?child2 .
  ?child2 dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician""))
  
  # Find the father of this politician child
  ?child2 dbo:parent ?politicianChildFather .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
417,44,val,"Give me the child of the father of Frederick IX of Denmark and spouse of Princess Caroline-Mathilde of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Frederick IX of Denmark and his father
  ?frederickIX dbo:father ?father .
  VALUES ?frederickIX { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> } .

  # Father's spouse (Princess Caroline-Mathilde)
  ?father dbp:spouse ?princessCarolineMathilde .
  VALUES ?princessCarolineMathilde { <http://dbpedia.org/resource/Princess_Caroline_Matilda_of_Denmark> } .

  # Child of Frederick Francis III
  ?frederickFrancisIII dbo:child ?child .
  VALUES ?frederickFrancisIII { <http://dbpedia.org/resource/Frederick_Franz_III,_Grand Duke_of_Mecklenburg-Schwerin> } .

  # Ensure the child is royalty
  ?child a dbo:Monarch .

  # Grandchild of the child (royalty)
  ?child dbo:child ?grandchild .
  ?grandchild a dbo:Monarch .
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
365,15,val,"Give me the spouse of Olha Petliura and person born as the birth name of the commander, that is an office holder, in Ukrainian–Soviet War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Olha_Petliura> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?birthNamePerson WHERE {
  # Find Olha Petliura's spouse
  OPTIONAL {
    ?olhaPetliura a dbo:Person ;
                  foaf:name ""Olha Petliura""@en .
    ?olhaPetliura dbo:spouse ?spouse .
  }

  # Find a commander from the Ukrainian–Soviet War who was an office holder and get their birth name
  OPTIONAL {
    ?commander a dbo:Person ;
               dbo:officeHolderOf dbr:Ukrainian_Soviet_War ;
               foaf:name ?name .
    ?commander foaf:birthName ?birthName .
    BIND(?birthName AS ?birthNamePerson)
  }
}
```",4,5,5,3,2,3,2,20,1,0,0,1.0,1.0,1.0
933,45,val,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of Mike Elliott (saxophonist) and reference to Alan Warner.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1947-04-21""^^xsd:date ;
          dbo:member ?band .
  
  ?band a dbo:Band, dbo:Organization, dbo:Group .

  ?band dbo:member dbr:Mike_Elliott_(saxophonist) .

  OPTIONAL { ?band dbp:reference dbr:Alan_Warner }
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
465,47,val,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
    # Step 1: Alfonso I d'Este's child
    ?alfonsoChild dbo:parent dbr:Alfonso_I_d%27Este ;
                 dbo:spouse ?royalSpouse .

    # Step 2: Royal spouse of the child
    ?royalSpouse a dbo:Monarch .

    # Step 3: Parent of Elizabeth of Austria (1526–1545)
    ?elizabethParent dbo:child dbr:Elizabeth_of_Austria_(1526%E2%80%931545) .

    # Step 4: Child of the parent who is royalty and married to the spouse
    ?royalChild dbo:parent ?elizabethParent ;
                dbo:spouse ?royalSpouse ;
                a dbo:Monarch .

    # Step 5: Successor of the royal child
    ?successor dbo:predecessor ?royalChild .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
965,40,val,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?grandparentSpouse WHERE {
  # Step 1: Find the parent of Louise Mountbatten
  ?louise dbp:mother ?parent .
  ?louise dbp:father ?parent .

  FILTER(?louise = dbc:Louise_Mountbatten)

  # Step 2: Find the spouse of this parent
  ?parent dbo:spouse ?grandparent .

  # Step 3: Ensure this grandparent is also a parent of George Mountbatten, 2nd Marquess of Milford Haven
  ?george dbp:mother ?grandparent .
  ?george dbp:father ?grandparent .

  FILTER(?george = dbc:George_Mountbatten_2nd_Marquess_of_Milford_Haven)

  # Step 4: Find the spouse of this grandparent
  ?grandparent dbo:spouse ?grandparentSpouse .
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
216,44,val,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in Igor Bišćan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team
WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ""1983-12-20""^^xsd:date ;
          dbo:sportsManagerOf ?team1 ;
          dbo:managerOf ?team2 .
  
  FILTER EXISTS { ?person dbo:coachOf dbr:Bosnia_and_Herzegovina_national_under-18_football_team }
  FILTER EXISTS { ?person dbo:playerInTeam dbr:Igor_Bišćan }

  BIND(?team1 AS ?team)
}
```

This query does the following:
- Selects individuals (`?person`) who are soccer players and have a birth date of December 20, 1983.
- Ensures these individuals are both sports managers (`dbo:sportsManagerOf`) and soccer managers (`dbo:managerOf`).
- Filters for those who have coached the Bosnia and Herzegovina national under-18 football team.
- Checks if they played in a team with Igor Bišćan.",5,11,6,2,3,3,3,71,0,0,1,0,0.0,0
965,46,val,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the child, that is a royalty, of Prince Louis of Battenberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseOfSpouse WHERE {
  # Step 1: Find Louise Mountbatten's parent
  ?parent a dbo:Person ;
          dbo:child ?louiseMountbatten .
  
  VALUES ?louiseMountbatten { <http://dbpedia.org/resource/Louise_Mountbatten> }
  
  # Step 2: Find the spouse of that parent
  ?spouseOfParent dbo:spouse ?parent ;
                  a dbo:Person .

  # Step 3: Identify the child of this grandparent who is royalty
  ?royalChild dbo:child ?spouseOfParent ;
              a dbo:RoyalFamilyMember .
  
  # Step 4: Determine the spouse of this royal child
  ?spouseOfSpouse dbo:spouse ?royalChild .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
465,55,val,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of the child, that is a royalty, of Anne of Brittany.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v3 <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Alfonso I d'Este's child
  ?alfonsoChild dbo:parent dbr:Alfonso_I_d%27Este ;
               dbo:succesor ?alfonsoSuccessor .

  # Ferdinand I's royal child and their spouse
  ?ferdinandChild dbo:parent dbr:Ferdinand_I,_Holy_Roman_Emperor ;
                  a dbo:Royalty ;
                  dbo:spouse ?spouse .
  
  # Anne of Brittany's royal child
  ?anneChild dbo:parent dbr:Anne_of_Brittany ;
             a dbo:Royalty ;
             dbo:succesor ?anneSuccessor .

  # Find the person who is both the successor and spouse
  ?person owl:sameAs ?alfonsoSuccessor .
  ?person owl:sameAs ?spouse .
  ?person owl:sameAs ?anneSuccessor .

  # Get the successor of this person
  ?person dbo:succesor ?successor .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
41,19,val,"Give me the party of Enda Kenny and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election and party of Declan Costello.",SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyLabel WHERE {
  VALUES (?person ?label) {
    (dbr:Enda_Kenny ""Enda Kenny"")
    (dbr:2005_Castlereagh_Borough_Council_election_leader ""Leader of the 2005 Castlereagh Borough Council election"")
    (dbr:Declan_Costello ""Declan Costello"")
  }
  
  ?person dbo:party ?party .
  SERVICE <http://dbpedia.org/sparql> {
    ?party rdfs:label ?partyLabel .
    FILTER(LANG(?partyLabel) = 'en')
  }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
41,20,val,Give me the party of Mark Durkan and party of the person born as David Declan Costello and party of Enda Kenny.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyLabel WHERE {
  VALUES ?person { 
    dbr:Mark_Durkan 
    dbr:Martin_McGuinness 
    dbr:Enda_Kenny
  }
  
  OPTIONAL {
    ?person dbo:politicalParty ?party .
    SERVICE <http://dbpedia.org/sparql> {
      ?party rdfs:label ?partyLabel .
      FILTER (lang(?partyLabel) = 'en')
    }
  }
}
ORDER BY ?person",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
329,19,val,Give me the birthplace of the author of The Tailor and Ansty and entity in United Kingdom and entity in Northern Ireland.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?author dbo:title ""The Tailor and Ansty""@en .
  ?author dbo:birthPlace ?birthPlace .
  ?author dbo:country dbr:United_Kingdom .
  ?author dbo:country dbr:Northern_Ireland .
  FILTER (str(?author) = str(dbr:James_Joyce))
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
216,55,val,"Give me the player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthDate ?croatiaCoachRole ?bosniaHerzegovinaRole
WHERE {
  ?person a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerManager ;
          dbp:birthday ""1983-12-20""^^xsd:date .

  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  
  ?bosniaHerzegovinaTeam dbo:coach ?person .
  ?bosniaHerzegovinaTeam rdfs:label ""Bosnia and Herzegovina national under-18 football team""@en .

  ?croatiaTeam dbo:coach ?person .
  ?croatiaTeam rdfs:label ""Croatia national under-21 football team""@en .

  OPTIONAL { ?bosniaHerzegovinaRole dbo:roleName ?bosniaHerzegovinaRoleLabel . }
  OPTIONAL { ?croatiaCoachRole dbo:roleName ?croatiaCoachRoleLabel . }
}
ORDER BY ?person
LIMIT 1",6,12,7,2,3,3,3,71,0,0,1,0,0.0,0
456,47,val,"Give me the spouse of the actor of Pacific Drive and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?actor dbo:birthName ""Lamont Cranston""@en .
  ?actor dbo:profession dbr:Actor .
  ?actor dbo:role dbr:Pacific_Drive .
  
  OPTIONAL { 
    ?actor dbo:spouse ?spouse .
  }
}
```

This query assumes:
- The actor's birth name is ""Lamont Cranston.""
- They have a profession of Actor.
- They played the role in ""Pacific Drive.""",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
773,47,val,"Give me the spouse of the father of Charles the Fat and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Charles the Fat's father
  dbr:Charles_the_Fat dbo:father dbr:Louis_the_German .

  # Louis the German's spouse
  dbr:Louis_the_German dbo:spouse ?spouse .

  # Louis the Pious' child and successor
  dbr:Louis_the_Pious dbo:child dbr:Lothair_I .
  
  # Check if Lothair I is royalty
  dbr:Lothair_I a dbo:Monarch .

  # Parent of Lothair I
  dbr:Lothair_I dbo:parent ?parent .

  # Ensure the spouse is also a parent of a successor (Lothair I)
  FILTER(?spouse = ?parent)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
865,50,val,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?fatherOfPoliticianChild WHERE {
  # Step 1: Find Syeda Shahar Banu's spouse
  ?spouse a dbo:Spouse ;
          dbo:spouse ?syedaShaharBanu .
  
  # Step 2: Identify the child of this spouse who is a politician
  ?child dbo:parent ?spouse ;
         a dbo:Politician .

  # Step 3: The father of this child is the spouse of Syeda Shahar Banu
  BIND(?spouse AS ?fatherOfPoliticianChild)

  # Step 4: Find Abu Ahmad Abdul Hafiz's child
  ?abuAhmadAbdulHafiz a dbo:Person ;
                      foaf:name ""Abu Ahmad Abdul Hafiz"" .
  
  ?child2 dbo:parent ?abuAhmadAbdulHafiz .

  # Step 5: Find the father of this child (should be Abu Ahmad Abdul Hafiz)
  OPTIONAL { ?fatherOfChild2 dbo:parent ?abuAhmadAbulHafiz }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
124,55,val,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 ?militaryForce3
WHERE {
  # Frank Rhodes and his military force
  dbr:Frank_Rhodes_(British_Army_officer) dbo:militaryConflict ?conflict1 .
  ?conflict1 a dbo:MilitaryConflict ;
             dbo:participatingMilitaryUnit ?militaryForce1 .

  # A Field Battery, Royal Australian Artillery and its military force
  dbr:A_Field_Battery,_Royal_Australian_Artillery dbo:militaryConflict ?conflict2 .
  ?conflict2 a dbo:MilitaryConflict ;
             dbo:participatingMilitaryUnit ?militaryForce2 .

  # Herbert Kitchener and his military force
  dbr:Herbert_Kitchener_1st_Earl_Kitchener dbo:militaryConflict ?conflict3 .
  ?conflict3 a dbo:MilitaryConflict ;
             dbo:participatingMilitaryUnit ?militaryForce3 .
}
```",6,13,7,2,3,3,3,71,0,0,9,0,0.0,0
274,21,val,"Give me the professional in  and associated musical artist of the actor, that is a musical artist, of Imagine the Sound and band member of Dizzy Gillespie.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?professional ?associatedArtist WHERE {
  ?actor a dbo:Actor ;
         dbo:profession ?professional ;
         dbo:musicalArtist ?associatedArtist .
  
  ?actor dbo:memberOfBand ?dizzyGillespieBand .
  ?dizzyGillespieBand dbp:name ""Dizzy Gillespie"" .

  ?actor dbo:associatedWithProject ?imagineTheSound .
  ?imagineTheSound rdfs:label ""Imagine the Sound""@en .
  
  FILTER (lang(?professional) = 'en' && lang(?associatedArtist) = 'en')
}
```",4,5,5,2,3,2,3,28,0,0,3,0,0.0,0
442,7,val,"Give me the resting place of the work of Roosevelt, Theodore and resting place of Fay Bainter.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> ""Roosevelt, Theodore""@en . <http://dbpedia.org/resource/Fay_Bainter> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  VALUES ?person { 
    dbr:Theodore_Roosevelt 
    dbr:Fay_Bainter 
  }
  
  OPTIONAL { ?person dbo:finalRestingPlace ?restingPlace . }
}
```",3,3,4,2,2,2,2,9,0,2,1,0.0,0.0,0
445,42,val,"Give me the death place of Patrick Moore and entity in the award of George H. Cameron and entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?award ?countryOfResidence WHERE {
  # Patrick Moore's death place
  dbr:Patrick_Moore dbo:deathPlace ?deathPlace .

  # George H. Cameron's award
  dbr:George_H._Cameron dbo:award ?award .

  # Anna Sharkey's country of residence
  dbr:Anna_Sharkey dbo:residence ?residence .
  ?residence a dbo:Country ; rdfs:label ?countryOfResidence .
}
```",5,6,6,2,3,3,3,71,1,5,0,0.16666666666666666,1.0,0.2857142857142857
965,48,val,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseOfSpouse WHERE {
    # Step 1: Identify Louise Mountbatten
    ?louise a dbo:Person ;
        foaf:name ""Louise Mountbatten""@en .

    # Step 2: Find her parent
    ?parent dbo:child ?louise .

    # Step 3: Find the spouse of that parent
    ?spouseOfParent dbo:spouse ?parent .

    # Step 4: Find the spouse of this person
    ?secondSpouse dbo:spouse ?spouseOfParent .

    # Step 5: Identify Prince George of Battenberg as a noble child
    ?princeGeorge a dbo:Person ;
        foaf:name ""Prince George of Battenberg""@en ;
        dbo:nobleTitle ?title .

    # Step 6: Find the parent of this child
    ?parentOfPrince dbo:child ?princeGeorge .

    # Ensure the parent from step 2 is the same as the parent in step 6
    FILTER (?parent = ?parentOfPrince)

    # Get the spouse of the person identified in step 6
    ?spouseOfSpouse dbo:spouse ?parentOfPrince .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
443,19,val,Give me the birthplace of Ulf Lundell and landmark at elevation of the award of William Shepherd and birthplace of Carl Larsson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ulfLundellBirthplace ?williamShepherdAwardElevation ?carlLarssonBirthplace
WHERE {
  # Ulf Lundell's birthplace
  dbr:Ulf_Lundell dbo:birthPlace ?ulfLundellBirthplace .

  # William Shepherd's award elevation
  dbr:William_Shepherd dbo:elevation ?williamShepherdAwardElevation .

  # Carl Larsson's birthplace
  dbr:Carl_Larsson dbo:birthPlace ?carlLarssonBirthplace .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
236,16,val,"Give me the party member of the administration of James Madison and party member of the administration, that is an organisation, of John Adams.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . ?result <http://dbpedia.org/ontology/party> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?madisonParty ?adamsParty
WHERE {
  # Find the party associated with James Madison's administration
  ?madisonParty a dbo:PoliticalParty ;
                dbo:member dbr:James_Madison .

  # Find the organization (party) associated with John Adams' administration
  ?adamsParty a dbo:Organization ;
              dbo:member dbr:John_Adams .
}
```",4,5,5,2,2,3,2,20,0,0,19,0,0.0,0
826,55,val,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result WHERE {
  # Step 1: Find Prince Friedrich of Hesse and by Rhine's parent
  ?friedrich a dbo:Person ;
             foaf:name ""Prince Friedrich of Hesse and by Rhine""@en .
  ?parent dbo:child ?friedrich .

  # Step 2: Find the predecessor of this parent
  ?predecessor dbo:succeededBy ?parent .

  # Step 3: Find Louis I, Grand Duke of Hesse's child who is royalty
  ?louis a dbo:Person ;
         foaf:name ""Louis I, Grand Duke of Hesse""@en .
  ?child dbo:child ?louis ;
         rdf:type dbo:Royalty .

  # Step 4: Find the successor of this royal child
  ?successor dbo:succeededBy ?child .

  # Step 5: Find Johann Heinrich Appel's child
  ?appel a dbo:Person ;
         foaf:name ""Johann Heinrich Appel""@en .
  ?appelChild dbo:child ?appel .

  # Step 6: Find the spouse of Johann Heinrich Appel's child
  ?spouse dbo:spouse ?appelChild .

  # Final step: Match the predecessor with the successor and spouse
  FILTER (?predecessor = ?successor && ?successor = ?spouse)
  
  BIND(?successor AS ?result)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
892,45,val,"Give me the landmark at elevation of 58 and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in Italy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/province> ?v0 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark ?region ?party WHERE {
  # Find landmarks with elevation of 58 meters
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ""58""^^xsd:float ;
            dbo:country dbr:Italy .

  # Ensure the landmark is in an administrative region that is also a settlement and a region
  ?region a dbo:AdministrativeRegion, dbo:Settlement, dbo:Region ;
          dbo:location ?landmark ;
          dbp:country dbr:Italy .

  # Find the political party of Andrea Cozzolino
  ?party a dbo:PoliticalParty, dbo:Organization ;
         dbo:member dbr:Andrea_Cozzolino .

  # Ensure the region is associated with the party
  ?region dbo:governingBody ?party .
}
```",5,11,6,3,3,3,3,71,0,0,2,0,0.0,0
955,17,val,"Give me the band of the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs and band of Nate Albert.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nate_Albert> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberArtist WHERE {
  # Find bands related to Street Dogs and Nate Albert
  ?referenceBand a dbo:MusicalGroup ;
                 dbo:member ?bandMember .

  FILTER EXISTS { 
    ?streetDogs a dbo:MusicalGroup ;
                dbo:member ?nateAlbert .
    ?nateAlbert foaf:name ""Nate Albert""^^xsd:string .
    ?referenceBand dbo:relatedBand ?streetDogs .
  }

  # Ensure the band member is also an artist
  ?bandMemberArtist a dbo:Person ;
                    foaf:name ?name ;
                    dbo:member ?referenceBand .

  FILTER EXISTS {
    ?bandMemberArtist dbo:occupation dbr:Musical_artist ;
                      dbo:occupation dbr:Artist .
  }
}
```",4,9,5,3,2,3,2,20,0,0,1,0,0.0,0
965,44,val,"Give me the spouse of Prince Louis of Battenberg and parent of the child, that is a royalty, of Prince Louis of Battenberg and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Prince Louis of Battenberg
  ?prince a dbo:Person ;
          foaf:name ""Prince Louis of Battenberg""@en .
  
  # Spouse of Prince Louis
  ?prince dbo:spouse ?spouse .

  # Child with royalty status
  ?child dbo:parent ?spouse ;
         dbo:title ?royaltyTitle .
  FILTER EXISTS { 
    ?royaltyTitle rdfs:label ?titleLabel .
    FILTER(CONTAINS(LCASE(?titleLabel), ""king"") || CONTAINS(LCASE(?titleLabel), ""queen"") ||
           CONTAINS(LCASE(?titleLabel), ""prince"") || CONTAINS(LCASE(?titleLabel), ""princess""))
  }

  # Parent of Prince George of Battenberg
  ?george a dbo:Person ;
          foaf:name ""Prince George of Battenberg""@en .
  ?spouse dbo:parent ?george .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
865,40,val,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of Shahla Khatun and father of AK Abdul Momen.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  # Identify the person who died in Patna and is the father of Shahla Khatun and AK Abdul Momen
  ?person dbo:deathPlace dbr:Patna ;
          dbo:spouse ?shahlaKhatun ;
          dbo:child ?akAbdulMomen .
  
  # Shahla Khatun and AK Abdul Momen are children of the person
  ?shahlaKhatun a dbo:Person ; 
                dbo:parent ?person .
  ?akAbdulMomen a dbo:Person ;
                 dbo:parent ?person .

  # Find the residence of this person
  ?person dbo:residence ?residence .

  # Get the native country of the residence
  ?residence dbo:nativeCountry ?nativeCountry .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
892,51,val,"Give me the landmark at elevation of the award of Anna Ishii and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?region ?party WHERE {
  # Anna Ishii's award
  ?award dbo:recipient dbr:Anna_Ishii .
  
  # Landmark at the same elevation as the award
  ?landmark dbo:elevation ?elevation .
  ?award dbo:elevation ?sameElevation .
  FILTER(?elevation = ?sameElevation) .

  # Entity in administration, Italian region and settlement, administrative region
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:settlement true ;
          dbo:administrativeRegion true .

  # Party of Andrea Cozzolino
  ?party a dbo:PoliticalParty ;
         dbo:member dbr:Andrea_Cozzolino .
  
  # Link the region to the party (assuming some relationship exists)
  ?region dbo:associatedWith ?party .
}
```",5,11,6,3,2,3,3,71,0,0,2,0,0.0,0
582,45,val,"Give me the player in Kazuaki Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to Japan.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?team ?nickname WHERE {
  # Find Kazuaki Nagasawa's team
  ?nagasawa a dbo:FootballPlayer ;
            foaf:name ""Kazuaki Nagasawa""@en ;
            dbo:playsFor ?team .

  # Ensure the team is related to Japan
  ?team dbo:country dbr:Japan .

  # Find Hajime Moriyasu's team and its nickname
  ?moriyasu a dbo:FootballManager ;
            foaf:name ""Hajime Moriyasu""@en ;
            dbo:manages ?managedTeam .
  
  ?managedTeam dbo:nickname ?nickname .
  
  # Ensure the managed team is related to Japan
  ?managedTeam dbo:country dbr:Japan .

  # Check if Nagasawa's team and Moriyasu's managed team are the same
  FILTER (?team = ?managedTeam)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
417,49,val,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
    # Count Ingolf of Rosenborg and his parent who is royalty
    ?countIngolf dbo:parent ?parentIngolf .
    FILTER EXISTS { ?parentIngolf a dbo:Monarch . }

    # Parent's child who is royalty
    ?childParent dbp:parent ?parentIngolf .
    FILTER EXISTS { ?childParent a dbo:Monarch . }

    # Alexandrine of Mecklenburg-Schwerin and her parent who is royalty
    ?alexandrine dbp:parent ?parentAlexandrine .
    FILTER EXISTS { ?parentAlexandrine a dbo:Monarch . }

    # Spouse of the child from step 2
    ?childParent dbp:spouse ?spouse .

}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
987,51,val,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the actor of All for Free.",SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://dbpedia.org/property/timeZone> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  # Step 1: Find the actor of ""All for Free""
  ?actor dbo:title ""All for Free""@en .
  
  # Step 2: Get their birthplace
  ?actor dbo:birthPlace ?birthPlace .

  # Step 3: Determine the time zone of Canicosa de la Sierra
  dbr:Canicosa_de_la_Sierra dbo:timeZone ?timeZone .

  # Step 4: Identify a sports event associated with that time zone
  ?sportsEvent dbo:locationTimezone ?timeZone .
  
  # Step 5: Locate a country in the region of that sports event
  ?sportsEvent dbo:region ?country .
  FILTER (isLiteral(?country) && datatype(?country) = xsd:string)
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
124,47,val,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Find the war associated with A Field Battery, Royal Australian Artillery
  ?battery a dbo:MilitaryUnit ;
           dbo:participatedIn ?war1 .
  
  # Ensure the war is both a societal event and a military conflict
  ?war1 a dbo:SocietalEvent, dbo:MilitaryConflict .

  # Find the awardee of the British South Africa Company Medal
  ?medalAward dbr:British_South_Africa_Company_Medal ;
              dbo:awardedTo ?person .
  
  # Ensure this person was a commander in another war that is both a societal event and a military conflict
  ?war2 dbo:commander ?person ;
        a dbo:SocietalEvent, dbo:MilitaryConflict .

  # Find the military force associated with these wars
  ?war1 dbo:militaryForce ?militaryForce .
  ?war2 dbo:militaryForce ?militaryForce .
}
```",5,10,6,3,2,3,3,71,0,0,10,0,0.0,0
865,48,val,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfCountry WHERE {
  # Step 1: Identify Abu Ahmad Abdul Hafiz
  ?person a dbo:Person ;
          foaf:name ""Abu Ahmad Abdul Hafiz""@en .
  
  # Step 2: Find his child
  ?child dbo:parent ?person .

  # Step 3: Determine the father of this child (should be Abu Ahmad Abdul Hafiz)
  ?person dbo:spouse ?spouse ;
          dbo:deathPlace dbr:Patna .

  # Step 4: Locate where this person died at Patna
  OPTIONAL { ?person dbo:residence ?residence . }

  # Step 5: Identify the residence of this person that is a country
  FILTER (isLiteral(?residence) && regex(str(?residence), ""Country""))

  # Step 6: Find out who is native to this country
  ?nativeOfCountry dbo:nativePlace ?residence .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
465,42,val,"Give me the spouse of Archduchess Barbara of Austria and successor of the child, that is a royalty, of Anne of Brittany and successor of the child of Alfonso I d'Este.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?successor1 ?successor2 WHERE {
  # Spouse of Archduchess Barbara of Austria
  dbr:Barbara_of_Austria dbo:spouse ?spouse .

  # Successor of a royal child of Anne of Brittany
  dbr:Anne_of_Brittany dbo:child ?child1 .
  ?child1 rdf:type dbo:Monarch .
  ?child1 dbo:successor ?successor1 .

  # Successor of a child of Alfonso I d'Este
  dbr:Alfonso_I_d%27Este dbo:child ?child2 .
  ?child2 dbo:successor ?successor2 .

  # Find commonality or connection
  FILTER(?spouse = ?successor1 || ?spouse = ?successor2)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
715,55,val,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Abd el-Krim's military conflict and commander role
  ?conflict dbo:participant dbr:Abd_el-Krim .
  ?conflict dbo:commander ?commander .

  # Carlos Franco Iribarnegaray's office leadership
  ?office dbo:leader dbr:Carlos_Franco_Iribarnegaray .
  
  # Francisco Largo Caballero's military command role
  ?conflict2 dbo:participant dbr:Felipe_Largo_Caballero .
  ?conflict2 dbo:commander ?commander .

  FILTER (?commander = ?commander)
}
```

This query attempts to find a common commander (`?commander`) who is associated with Abd el-Krim in a military conflict and also linked to the leadership roles of Carlos Franco Iribarnegaray and Francisco Largo Caballero.",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
976,52,val,"Give me the office of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v4 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v4 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?naciBostanciOffice ?mayorOffice ?leaderOffice
WHERE {
  # Naci Bostancı's office
  dbr:Naci_Bostancı dbo:office ?naciBostanciOffice .

  # Mayor of Nation Alliance (Turkey)
  ?mayor a dbo:Mayor ;
         dbo:party dbr:Nation_Alliance_(Turkey) ;
         dbo:country dbr:Türkiye ;
         dbo:office ?mayorOffice .

  # Leader of Kemal Kılıçdaroğlu's administration
  dbr:Kemal_Kılıçdaroğlu dbo:leaderOf ?administration .
  ?administration a dbo:Organization .
  ?administration dbo:leader ?leader .
  ?leader dbo:office ?leaderOffice .
}",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
445,40,val,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in United Kingdom and death place of Patrick Moore.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInResidence
WHERE {
  # Find athletes from Great Britain
  ?athlete dbo:nationality dbr:United_Kingdom ;
           a dbo:Athlete .

  # Their residence should be a country and in the United Kingdom
  ?athlete dbo:residence ?residence .
  ?residence rdf:type dbo:Country ;
             dbo:country dbr:United_Kingdom .

  # Get the entity in the residence that is also in the UK
  ?entityInResidence rdf:type dbo:Place ;
                     dbo:location dbr:United_Kingdom ;
                     rdfs:label ?residenceLabel .
  
  FILTER (lang(?residenceLabel) = 'en')

  # Find Patrick Moore's death place
  dbr:Patrick_Moore dbo:deathPlace ?deathPlace .

  # Ensure the entity in residence is also the death place of Patrick Moore
  FILTER (?entityInResidence = ?deathPlace)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
839,50,val,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v4 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?charlieBand ?peterBand
WHERE {
  # Find Charlie Huhn's band
  ?charlieHuhn dbo:band ?charlieBand .
  FILTER (str(?charlieHuhn) = ""Charlie_Huhn"") .

  # Check if the band is a musical artist
  OPTIONAL { ?charlieBand dbo:musicalArtist ?musicalArtist . }

  # Find Peter Schorowsky's band
  ?peterSchorowsky dbo:band ?peterBand .
  FILTER (str(?peterSchorowsky) = ""Peter_Schorowsky"") .

  # Check if the band is both a band and a group
  OPTIONAL { ?peterBand dbo:type dbp:Band . }
  OPTIONAL { ?peterBand dbo:type dbp:Group . }

  FILTER EXISTS { ?peterBand dbo:type dbp:Band } .
  FILTER EXISTS { ?peterBand dbo:type dbp:Group } .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
507,46,val,"Give me the spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v4 <http://dbpedia.org/ontology/director> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Find Anne V. Coates by her birth name
  ?anne a dbo:FilmEditor ;
        foaf:name ""Anne V. Coates""@en ;
        foaf:birthName ?birthName .

  # Find a movie directed by Anne V. Coates that features Beryl Reid
  ?movie dbo:director ?anne ;
         dbo:starring dbr:Beryl_Reid .

  # Get the spouse of Anne V. Coates
  ?anne dbo:spouse ?spouse .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
216,43,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in Igor Bišćan and team of Ognjen Vukojević.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v4 . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?coach WHERE {
  # Džemal Berberović and Igor Bišćan are players of the same club
  ?club a dbo:SoccerClub ;
        dbo:sportTeamMember ?player1, ?player2 .
  
  ?player1 foaf:name ""Džemal Berberović""@en .
  ?player2 foaf:name ""Igor Bišćan""@en .

  # Ognjen Vukojević's team
  ?team dbo:sportTeamMember dbr:Ognjen_Vukojević ;
        dbo:coach ?coach .

  # The coach is a soccer player, sports manager, and soccer manager
  ?coach a dbo:SoccerPlayer, dbo:SportsManager, dbo:SoccerManager .
  
  # The club is an organization, sports club, and soccer club
  ?club a dbo:Organization, dbo:SportsClub, dbo:SoccerClub .

  # Link the coach to the club
  ?club dbo:coach ?coach .
}
```",5,11,6,3,3,3,3,71,0,0,1,0,0.0,0
926,48,val,"Give me the father of the father of the spouse of Neşerek Kadın and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?royalty WHERE {
  # Neşerek Kadın's spouse
  ?neşerekKadın dbp:spouse ?x .
  
  # Father of the spouse (X)
  ?x dbo:father ?y .

  # Father of Y (Z)
  ?y dbo:father ?z .

  # Z's child who is a royalty and related to Mustafa III
  ?z dbo:child ?royalty .
  ?royalty a dbo:Monarch .
  
  # Ensure the royalty is related to Mustafa III
  ?mustafaIII dbp:parent ?z .
  ?mustafaIII dbp:name ""Mustafa III""@en .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
933,54,val,Give me the reference to the birth name of the professional in Musician and band of The Ramong Sound and band of the band of Alan Warner (musician).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v1 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  # Find a musician who was part of The Ramones
  ?musician dbo:memberOfBand dbr:The_Ramones .
  
  # Ensure the same musician is in a band led by Alan Warner
  ?band dbo:leadArtist dbr:Alan_Warner ;
        dbo:member ?musician .

  # Retrieve the birth name of this musician
  ?musician dbo:birthName ?birthName .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
329,22,val,"Give me the entity in the region, that is a country, of Western European Time and birthplace of the author of The Tailor and Ansty.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  # Find the author of ""The Tailor and Ansty""
  ?book dbo:author ?author .
  ?book rdfs:label ""The Tailor and Ansty""@en .

  # Get the birthplace of the author
  ?author dbp:birthPlace ?birthPlace .

  # Ensure the birthplace is a country in Western European Time
  ?birthPlace a dbo:Country ;
              dbo:timeZone dbr:Western_European_Time .

  # Bind the country to the result variable
  BIND(?birthPlace AS ?country)
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
136,7,val,Give me the landmark at elevation of 5 and region coded as the area code of Levenhagen.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Levenhagen> <http://dbpedia.org/ontology/areaCode> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ""5""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/areaCode> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?elevation ?region
WHERE {
  ?landmark a dbo:Lighthouse .
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = ""5""^^xsd:float) .
  
  ?landmark dbo:locatedIn ?location .
  ?location dbo:country dbr:Germany . # Assuming Levenhagen is in Germany
  ?location rdfs:label ?region .
  FILTER (CONTAINS(LCASE(?region), LCASE(""Levenhagen""))) .

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
ORDER BY ?landmark",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
582,43,val,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and figure known as --10-19 and reference to Japan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find Kazuaki Nagasawa
  ?kazuaki a dbo:Person ;
           foaf:name ""Kazuaki Nagasawa"" ;
           dbo:nationality dbr:Japan .

  # Identify the child of Kazuaki Nagasawa
  ?child dbo:parent ?kazuaki .
  
  # Find the father who is an athlete, soccer manager, and sports manager
  ?father a dbo:Athlete, dbo:SoccerManager, dbo:SportsManager ;
          dbo:nationality dbr:Japan .

  # Connect the child to this father
  ?child dbo:parent ?father .
  
  # Identify the figure known as --10-19 (assuming it's another person)
  ?figure a dbo:Person ;
          foaf:name ""--10-19"" ;
          dbo:nationality dbr:Japan .

  # Ensure all entities are connected to Japan
  FILTER EXISTS { ?kazuaki dbo:nationality dbr:Japan }
  FILTER EXISTS { ?child dbo:nationality dbr:Japan }
  FILTER EXISTS { ?father dbo:nationality dbr:Japan }
  FILTER EXISTS { ?figure dbo:nationality dbr:Japan }

  # Return the player (father)
  BIND(?father AS ?player)
}",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
933,48,val,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfTheBand
WHERE {
  # The Ramones is a band
  dbr:The_Ramones dbo:bandMember ?artist .
  
  # This artist is also a musical artist
  ?artist rdf:type dbo:MusicalArtist .

  # Find the band of this artist that is both a group and an organization
  ?artist dbo:bandMember ?intermediateBand .
  ?intermediateBand rdf:type dbo:Band ;
                   rdf:type dbo:Group ;
                   rdf:type dbo:Organization .

  # This intermediate band should be associated with Alan Warner (musician)
  ?intermediateBand dbo:bandMember dbr:Alan_Warner_(musician) .

  # Finally, find the band of this intermediate band
  ?intermediateBand dbo:bandMember ?bandOfTheBand .
}
```",5,10,6,3,2,3,3,71,0,0,4,0,0.0,0
495,16,val,Give me the father of the child of Princess Charlotte of Saxe-Hildburghausen and child of the father of William I of Württemberg.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Find Princess Charlotte's child
  ?charlotteChild dbo:parent dbr:Princess_Charlotte_of_Saxe-Hildburghausen .
  
  # Find the father of Princess Charlotte's child
  ?charlotteChild dbo:parent ?father .

  # Find William I of Württemberg's father
  ?williamFather dbo:child dbr:William_I,_King_of_W%C3%BCrttemberg .

  # Find a person who is both the father of Princess Charlotte's child and a child of William I's father
  FILTER (?father = ?williamChild)
  
  # Ensure this person is indeed a child of William I's father
  ?williamFather dbo:child ?williamChild .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
273,15,val,Give me the spouse of the child of the child of Edoardo Agnelli (1831-1871) and parent of Gianni Agnelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gianni_Agnelli> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Edoardo Agnelli's children
  ?child dbo:parent dbr:Edoardo_Agnelli_(1831-1871) .
  
  # Step 2: For each child, identify their children (grandchildren of Edoardo)
  ?grandchild dbo:parent ?child .

  # Step 3: Find the grandchild who is a parent of Gianni Agnelli
  ?grandchild dbo:child dbr:Gianni_Agnelli .
  
  # Step 4: Determine the spouse of this identified grandchild
  ?spouse dbo:spouse ?grandchild .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
465,48,val,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successor WHERE {
  # Anne of Brittany's children
  ?anneChild dbo:parent dbr:Anne_of_Brittany ;
             a dbo:Person .

  # Identify the royal child
  ?royalChild dbo:parent dbr:Anne_of_Brittany ;
              a dbo:Monarch .

  # Successor of the royal child
  ?successor1 dbo:predecessorOrSuccessorOf ?royalChild ;
              a dbo:Monarch .

  # Ercole II d'Este's parent and his child
  ?alfonsoChild dbo:parent dbr:Alfonso_I_d'_Este ;
                a dbo:Person .
  
  FILTER(?alfonsoChild = dbr:Ercole_II_d'_Este)

  # Successor of Ercole II
  ?successor2 dbo:predecessorOrSuccessorOf dbr:Ercole_II_d'_Este ;
              a dbo:Monarch .

  # Find the common successor
  FILTER(?successor1 = ?successor2)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
365,16,val,"Give me the spouse of the native, that is a politician, of Poltava Governorate and person born as the birth name of Symon Petliura.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person dbo:nativePlace dbr:Poltava_Governorate ;
          dbo:birthName ""Symon Petliura""@en ;
          dbo:occupation dbr:Politician .
  
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
917,54,val,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I and child of Kekūanāoʻa.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/ontology/parent> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Kamehameha IV's child who is royalty
  ?child1 dbo:spouse dbr:Kamehameha_IV .
  ?child1 a dbo:Monarch .

  # Leleiohoku I's spouse's father who is royalty and their child
  ?spouse2 dbo:spouse dbr:Leleiohoku_I .
  ?fatherOfSpouse2 dbo:parent ?spouse2 .
  ?fatherOfSpouse2 a dbo:Monarch .
  ?child2 dbo:parent ?fatherOfSpouse2 .

  # Kekūanāoʻa's child
  ?child3 dbo:parent dbr:Kekuanaoa .

  # The common child and their parent
  FILTER (?child1 = ?child2 && ?child2 = ?child3)
  ?commonChild dbo:parent ?parent .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
645,43,val,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in Battle of Jarama and leader of Ministry of the Army (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Francisco Franco as a politician and president during Restoration (Spain)
  dbr:Francisco_Franco dbo:nationality dbr:Spain ;
                       dbo:positionHeld dbr:President_of_Spain .

  # Commander in Battle of Jarama
  dbr:Battle_of_Jarama dbo:commander dbr:Francisco_Franco .

  # Leader of Ministry of the Army (Spain)
  ?ministry dbo:leader dbr:Francisco_Franco ;
            rdfs:label ""Ministry of the Army (Spain)""@en .
  
  # Military force associated with Francisco Franco
  ?militaryForce dbo:commander dbr:Francisco_Franco ;
                 a dbo:MilitaryConflict ;
                 dbo:societalEvent ?societalEvent .

  FILTER(lang(?societalEvent) = 'en')
}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
382,16,val,"Give me the landmark at elevation of the award of Harry Combes and birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?v2 . <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark WHERE {
  # Find Harry Combes' award
  dbr:Harry_Combes dbo:award dbr:Award1 .
  
  # Get the elevation of the award location
  OPTIONAL { dbr:Award1 dbo:elevation ?elevation . }
  
  # Identify a manager of Bonner SC who is also an athlete and sports manager
  ?manager dbo:occupation dbr:Soccer_Manager ;
           dbo:birthPlace ?birthplace .
  FILTER EXISTS {
    ?manager dbo:occupation dbr:Athlete .
    ?manager dbo:occupation dbr:Sports_Manager .
  }
  
  # Find the landmark at the elevation of the award and birthplace of the manager
  ?landmark dbo:elevation ?elevation ;
            dbo:location ?birthplace .
}
```

This query assumes:
- `dbr:Award1` is a placeholder for Harry Combes' actual award.
- The ontology properties like `dbo:award`, `dbo:elevation`, `dbo:occupation`, and `dbo:birthPlace` are used to navigate the DBpedia data.",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
445,48,val,"Give me the entity in the award of George H. Cameron and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardEntity ?countryEntity
WHERE {
  # Find George H. Cameron's award
  ?person a dbo:Person ;
          foaf:name ""George H. Cameron"" ;
          dbo:honorificTitle ?award .
  
  # Find an athlete who resides in Great Britain
  ?athlete a dbo:Athlete ;
           dbo:nationality dbr:United_Kingdom ;
           dbo:residence ?residence .

  # Ensure the residence is a country
  ?residence a dbo:Country .

  # Bind the award and country entities
  BIND(?award AS ?awardEntity)
  BIND(?residence AS ?countryEntity)
}
```",5,7,6,3,2,3,3,71,0,0,102,0,0.0,0
865,42,val,"Give me the father of the child of Abu Ahmad Abdul Hafiz and father of AK Abdul Momen and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Abu Ahmad Abdul Hafiz's child and their father (grandfather)
  ?child dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz .
  ?person dbo:parent ?child .

  # AK Abdul Momen's father
  ?akChild dbo:parent ?person .
  ?akChild rdfs:label ""AK Abdul Momen""@en .

  # Ram Jaipal Singh Yadav's country of residence
  dbr:Ram_Jaipal_Singh_Yadav dbo:nativePlace ?country .

  # The person must be native to the same country as Ram Jaipal Singh Yadav
  ?person dbo:nativePlace ?country .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
216,46,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/coach> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?playerInCoach WHERE {
  ?person a dbo:SoccerPlayer .
  ?person a dbo:SportsManager .
  ?person a dbo:SoccerManager .

  ?team dbr:Bosnia_and_Herzegovina_national_under-18_football_team ;
        dbo:coach ?person .

  OPTIONAL { 
    ?club a dbo:Organization ;
          dbo:sportTeam dbr:Croatia_U21 ;
          dbo:playerInCoach ?playerInCoach .
  
    FILTER (?playerInCoach = ?person)
  }
}
```",5,10,6,3,2,3,3,71,0,0,3,0,0.0,0
47,41,val,Give me the office of the awardee of Banga Bhushan and office of the administration of Jagdeep Dhankhar and office of Ajoy Mukherjee.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office
WHERE {
  VALUES (?person ?award) {
    (dbr:Jagdeep_Dhankhar ""Vice President of India"") 
    (dbr:Ajoy_Mukherjee ""Chief Minister of West Bengal"")
    # Add specific Banga Bhushan awardees here, e.g., dbr:Sarad_Banerjee
  }
  
  ?person dbo:office ?office .
  OPTIONAL {
    ?person dbo:honoraryTitle ?award .
  }
}
ORDER BY ?person",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
417,47,val,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the father of the leader, that is a royalty, of Colony of Greenland.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
    # Step 1: Identify Count Ingolf of Rosenborg and his parent who is royalty
    ?countIngolf a dbo:Count ;
                 dbo:parent ?parentIngolf .
    
    FILTER EXISTS { ?parentIngolf dbo:royalty true } .

    # Step 2: Identify the leader of Colony of Greenland and their father who is royalty
    ?leaderGreenland a dbo:Leader ;
                    dbo:colony dbr:Colony_of_Greenland ;
                    dbo:father ?fatherLeader .
    
    FILTER EXISTS { ?fatherLeader dbo:royalty true } .

    # Step 3: Find the spouse of the parent identified in step 1
    ?parentIngolf dbo:spouse ?spouse .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
715,41,val,"Give me the commander in the force of Francisco Largo Caballero and commander in the force, that is a military conflict, of Abd el-Krim and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderFranciscoLargoCaballero ?commanderAbdElKrim ?leaderMinistryOfAirSpain
WHERE {
  # Francisco Largo Caballero's commander in the force
  OPTIONAL {
    ?franciscoLargoCaballero dbo:positionTitle ""Prime Minister of Spain""@en .
    ?franciscoLargoCaballero dbo:commanderInForce ?commanderFranciscoLargoCaballero .
  }
  
  # Abd el-Krim's commander in a military conflict
  OPTIONAL {
    ?abdElKrim dbo:occupation ""Military leader""@en ;
               dbo:militaryConflict ?conflict .
    ?conflict dbo:commander ?commanderAbdElKrim .
  }

  # Leader of the Ministry of the Air (Spain)
  OPTIONAL {
    ?ministryOfAir dbr:Ministry_of_the_Air_(Spain) ;
                   dbo:leader ?leaderMinistryOfAirSpain .
  }
  
  VALUES ?franciscoLargoCaballero { dbr:Franco_Largo_Caballero }
  VALUES ?abdElKrim { dbr:Abd_el-Krim }
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
582,42,val,Give me the reference to the residence of Hirotaka Sugawara and player in Kazuaki Nagasawa and figure known as the nickname of Japan national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence ?playerRole ?nickname
WHERE {
  # Hirotaka Sugawara's residence
  dbr:Hirotaka_Sugawara dbo:residence ?residence .

  # Kazuaki Nagasawa as a player
  dbr:Kazuaki_Nagasawa dbo:role ?playerRole .
  
  # Japan National Football Team nickname
  dbr:Japan_national_football_team dbo:nickname ?nickname .
}
```

This query assumes that:
- Hirotaka Sugawara's residence is linked via the `dbo:residence` property.
- Kazuaki Nagasawa has a role or occupation linked via `dbo:role`.
- The Japan national football team has a nickname linked via `dbo:nickname`.

Please note that the exact properties and resource identifiers might need adjustments based on DBpedia's current schema and available data.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
47,55,val,Give me the office of the awardee of Banga Bhushan and office of the administration of Jagdeep Dhankhar and office of the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v5 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v3 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?office WHERE {
  # Find individuals who have received the Banga Bhushan award
  { 
    ?person dbo:awardReceived dbr:Banga_Bhushan_Award .
    OPTIONAL { ?person dbo:positionHeld ?office . }
  }

  UNION

  # Find individuals who have received the Padma Vibhushan award
  {
    ?person dbo:awardReceived dbr:Padma_Vibhushan .
    OPTIONAL { ?person dbo:positionHeld ?office . }
  }

  UNION

  # Find the office of Jagdeep Dhankhar's administration
  {
    dbr:Jagdeep_Dhankhar dbo:positionHeld ?office .
  }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
47,44,val,Give me the office of the awardee of Padma Vibhushan and office of the awardee of Banga Bhushan and office of Suvendu Adhikari.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v4 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?office WHERE {
  # Find individuals who have received the Padma Vibhushan award
  { 
    ?person dbo:award dbr:Padma_Vibhushan .
    OPTIONAL { ?person dbo:positionHeld ?office . }
  } UNION
  # Find individuals who have received the Banga Bhushan award
  {
    ?person dbo:award dbr:Banga_Bhushan .
    OPTIONAL { ?person dbo:positionHeld ?office . }
  } UNION
  # Find offices held by Suvendu Adhikari
  {
    ?person dbr:Suvendu_Adhikari .
    OPTIONAL { ?person dbo:positionHeld ?office . }
  }
}
```

This query uses the `dbo:award` property to find individuals associated with the Padma Vibhushan and Banga Bhushan awards. It also directly queries for Suvendu Adhikari using his DBpedia resource identifier. The `OPTIONAL` clause is used to retrieve any offices held by these individuals.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
417,50,val,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild ?leaderChild WHERE {
  # Frederick Francis III and his children
  ?frederick a dbo:Monarch ;
             foaf:name ""Frederick Francis III"" .
  
  ?child dbo:spouseOrPartnerOf|dbo:parent ?frederick ;
         a dbo:Person .

  # Grandchildren of Frederick Francis III who are royalty
  ?grandchild dbo:parent ?child ;
              a dbo:Monarch .

  # Leader of Colony of Greenland and their father
  ?leader a dbo:HeadOfState ;
          dbp:country ""Colony of Greenland"" .
  
  ?father dbo:spouseOrPartnerOf|dbo:parent ?leader ;
          a dbo:Person .

  # Child of the leader's father who is royalty
  ?leaderChild dbo:parent ?father ;
               a dbo:Monarch .

  # Find intersection or relationship between grandchild and leader's child
  FILTER(?grandchild = ?leaderChild)
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
83,15,val,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA and party of Alceu Collares.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. <http://dbpedia.org/resource/Alceu_Collares> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v1 <http://dbpedia.org/property/leaderParty> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rulingParty WHERE {
  # Find Alceu Collares and his birthplace
  ?person a dbo:SoccerManager ;
          foaf:name ""Alceu Collares"" ;
          dbo:memberOf dbr:Kedah_FA .
  
  ?person dbo:birthPlace ?town .

  # Ensure the town is in Brazil and has a soccer club
  ?town a dbo:Town ;
        dbo:country dbr:Brazil ;
        dbo:sportTeam ?soccerClub .

  ?soccerClub a dbo:SoccerClub .

  # Find the ruling party of the town
  ?town dbo:government ?government .
  ?government dbo:rulingParty ?rulingParty .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
933,42,val,"Give me the reference to Alan Warner and band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of the band of Alan Warner (musician).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?musician a dbo:MusicArtist ;
            foaf:name ""Alan Warner"" .
  
  OPTIONAL { 
    ?musician dbo:memberOfBandOrMusicalGroup ?band .
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
791,43,val,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of Emperor Go-Toba and spouse of Taira no Tokuko.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Emperor Go-Shirakawa's child
  ?child1 dbo:spouse dbr:Taira_no_Tokuko .
  
  # Child of the child (Go-Toba)
  ?child2 dbo:father ?child1 ;
          rdfs:label ""Emperor Go-Toba""@en .

  # Office holder and royalty condition
  ?officeHolder dbo:parent ?child1 ;
                a dbo:Monarch, dbo:OfficeHolder .

  # Predecessor (Father) of the office holder
  ?predecessor dbo:child ?officeHolder .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
865,54,val,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of Shahla Khatun and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Find the spouse of Syeda Shahar Banu
  ?spouse a dbo:Spouse ;
          dbo:spouse dbr:Syeda_Sharbanoo .

  # Step 2: Identify their child who is a politician
  ?child dbo:parent ?spouse ;
         a dbo:Politician .

  # Step 3 & 4: Find the father of this child (politician) and Shahla Khatun
  ?father dbo:child ?child .
  ?shahlaParent dbo:child dbr:Shahla_Khatun ;
                owl:sameAs ?father .

  # Step 5: Identify Ram Jaipal Singh Yadav's country of residence
  dbr:Ram_Jaipal_Singh_Yadav dbo:nativePlace ?country .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
987,42,val,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and entity in the region, that is a country, of Central European Time and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandBirthPlace WHERE {
  # Find the band associated with Šako Polumenta
  ?band dbo:member dbr:Šako_Polumenta .
  
  # Get the birthplace of the band (considered as an artist)
  ?band dbp:birthPlace ?bandBirthPlace .

  # Identify countries in the Central European Time region
  ?country dbo:timeZone dbr:Central_European_Time .

  # Find Moamer Kasumović's birthplace
  dbr:Moamer_Kasumović dbp:birthPlace ?kasumovicBirthPlace .
  
  # Ensure the band's birthplace is in a country within the Central European Time region
  ?bandBirthPlace dbo:country ?country .

  # Ensure Moamer Kasumović's birthplace matches the band's birthplace
  FILTER (?kasumovicBirthPlace = ?bandBirthPlace)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
573,47,val,"Give me the person decedent at the administration, that is a region, of Charlie Baker and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region ?settlement WHERE {
  # Find regions where Charlie Baker was an administrator
  ?administration dbo:administrator dbr:Charlie_Baker .
  ?administration dbo:administrativeRegion ?region .

  # Find American politicians
  ?politician a dbo:Politician ;
             dbp:nationality ""American""@en .

  # Find settlements associated with these politicians
  ?residence dbo:resident ?politician .
  ?residence dbo:settlement ?settlement .
}
```",5,8,6,3,2,3,3,71,0,0,400,0,0.0,0
554,17,val,"Give me the leader of Portuguese São Tomé and Príncipe and leader of the birth place of the band, that is an artist, of Rita Redshoes.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> ?result . <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Portuguese_São_Tomé_and_Príncipe> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leaderSaoTomePrincipe ?artistBirthplaceRitaRedshoes
WHERE {
  # Leader of São Tomé and Príncipe
  dbr:São_Tomé_and_Príncipe dbo:president ?leaderSaoTomePrincipe .
  
  # Birthplace of Rita Redshoes
  dbr:Rita_Redshoes dbo:birthPlace ?birthPlaceRitaRedshoes .

  # An artist from the birthplace of Rita Redshoes
  ?artistBirthplaceRitaRedshoes a dbo:Artist ;
                               dbo:birthPlace ?birthPlaceRitaRedshoes .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
955,15,val,"Give me the band of the writer of the work, that is a work and an album and a musical work, of Matt Freeman and band of Johnny Rioux.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Rioux> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  # Find bands associated with Matt Freeman
  {
    ?work dbo:composer dbr:Matt_Freeman .
    ?work dbo:performer ?band .
  }
  
  UNION
  
  # Find bands associated with Johnny Rioux
  {
    ?work dbo:composer dbr:Johnny_Rioux .
    ?work dbo:performer ?band .
  }
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
987,48,val,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  # Dado Pršo's band
  dbr:Dado_Pršo dbo:memberOf dbr:Zabranjeno_Pušenje .

  # Artist associated with the band
  dbr:Mišo_Kovač dbo:memberOf dbr:Zabranjeno_Pušenje ;
                 a dbo:MusicalArtist .

  # Birthplace of the musical artist
  dbr:Mišo_Kovač dbp:birthPlace ?birthPlace .

  # Ensure the region is in Central European Time
  ?region dbo:timeZone dbr:Central_European_Time .
  ?birthPlace dbo:locatedIn ?region .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
965,55,val,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?alice dbo:spouse ?princeLouis .
  ?princeLouis dbp:name ""Prince Louis of Battenberg""@en .

  ?victoria dbo:child ?alice .
  ?victoria dbp:name ""Princess Victoria of Hesse and by Rhine""@en .

  OPTIONAL { ?philip dbo:parent ?alice . }
  FILTER (EXISTS {
    ?philip dbp:name ""Prince Philip, Duke of Edinburgh""@en .
  })
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
129,19,val,Give me the professional in the mayor of 1999 West Dunbartonshire Council election and associated musical artist of Saba (rapper) and associated musical artist of EarthGang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mayorProfessional ?sabaArtist ?earthgangArtist WHERE {
  # Find the mayor elected in the 1999 West Dunbartonshire Council election
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 1999 && CONTAINS(LCASE(STR(?election)), ""west dunbartonshire council""))
  ?mayor dbo:officeHolder ?election .
  ?mayor dbo:profession ?mayorProfessional .

  # Find the associated musical artist of Saba
  dbr:Saba dbo:associatedMusicalArtist ?sabaArtist .

  # Find the associated musical artist of EarthGang
  dbr:EarthGang dbo:associatedMusicalArtist ?earthgangArtist .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
98,22,val,Give me the birth place of the person born as Paolo Elito M. Ballesteros IV and region of the time zone of Lopez Jaena.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceLabel ?timeZoneRegionLabel
WHERE {
  # Find birthplace of Paolo Elito M. Ballesteros IV
  OPTIONAL {
    ?person a dbo:Person ;
            foaf:name ""Paolo Elito M. Ballesteros IV"" ;
            dbo:birthPlace ?birthPlace .
    SERVICE <http://dbpedia.org/sparql> {
      ?birthPlace rdfs:label ?birthPlaceLabel .
    }
  }

  # Find time zone of Lopez, Jaena and its region
  OPTIONAL {
    dbr:Lopez,_Jaena dbo:timeZone ?timeZone ;
                     dbo:location ?location .
    SERVICE <http://dbpedia.org/sparql> {
      ?timeZone rdfs:label ?timeZoneLabel .
      ?location dbo:country ?country .
      ?country dbo:region ?region .
      ?region rdfs:label ?timeZoneRegionLabel .
    }
  }
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
926,51,val,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of the child of Ahmed III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Beyhan Sultan and her father Mustafa III
  dbr:Beyhan_Sultan dbo:father dbr:Mustafa_III .

  # Mustafa III's parent (Mahmud I)
  dbr:Mustafa_III dbo:father dbr:Mahmud_I .

  # Child of Ahmed III who is Mustafa III
  dbr:Ahmed_III dbo:child dbr:Mustafa_III .

  # Successor of Mustafa III is Abdul Hamid I
  dbr:Abdul_Hamid_I dbo:predecessor dbr:Mustafa_III .

  # Child of Mahmud I who is a royalty and parent of Abdul Hamid I
  dbr:Mahmud_I dbo:child ?child .
  ?child rdf:type dbo:Monarch .
  ?child dbo:successor dbr:Abdul_Hamid_I .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
892,44,val,"Give me the landmark at elevation of the award of Anna Ishii and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and entity in Italy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?region WHERE {
  # Find an award associated with Anna Ishii
  ?award dbo:recipient dbr:Anna_Ishii .
  
  # Get the elevation of that award's location (assuming awards have a location)
  ?awardLocation dbo:elevation ?elevation .
  
  # Find a landmark at that elevation
  ?landmark dbo:elevation ?elevation ;
            dbo:location dbr:Italy .

  # Ensure the entity is an Italian region, settlement, or administrative region
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:governingParty dbr:Democratic_Party_(Italy) .
  
  # Link the landmark to the region
  ?landmark dbo:location ?region .
}
```",5,9,6,2,3,3,3,71,0,0,2,0,0.0,0
865,53,val,"Give me the father of the child of Abu Ahmad Abdul Hafiz and father of AK Abdul Momen and native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonFather WHERE {
  # Abu Ahmad Abdul Hafiz and his child
  ?child1 dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz .
  
  # AK Abdul Momen and his father
  ?fatherAK dbo:child dbr:AK_Abdul_Momen .

  # Common father of both children
  ?commonFather dbo:child ?child1 .
  ?commonFather dbo:child ?child2 .
  FILTER(?child2 = ?fatherAK)

  # Person decedent at Patna and their country of residence
  ?decedent dbo:placeOfDeath dbr:Patna .
  ?decedent dbo:nationality ?country .

  # Ensure the common father is native to this country
  ?commonFather dbo:nationality ?country .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
965,42,val,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Prince George of Battenberg
  VALUES ?princeGeorge { dbr:Prince_George_of_Battenberg }
  
  # Princess Victoria of Hesse and by Rhine's spouse (Eduard VII)
  VALUES ?edwardVII { dbr:Eduard_VII }

  # Louise Mountbatten's parent
  VALUES ?louiseMountbatten { dbr:Louise_Mountbatten }
  
  # Prince George of Battenberg's parent
  ?princeGeorge dbo:parent ?parent .

  # Princess Victoria of Hesse and by Rhine's spouse is Eduard VII
  ?edwardVII dbo:spouse ?princessVictoria .
  ?princessVictoria rdfs:label ""Princess Victoria of Hesse and by Rhine""@en .

  # Louise Mountbatten's parent
  ?louiseMountbatten dbo:parent ?parent .
}
```

This query attempts to find the common parent among these individuals based on their relationships. Note that DBpedia might not have all the detailed family relationships, so this query assumes those relationships are available.",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
433,44,val,"Give me the associated musical artist of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and professional in the profession of Bob Marley.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find associated musical artist of Paul Chambers
  ?paulChambers a dbo:Musician ;
                dbp:associatedBandOrMusicalArtist ?artist1 .

  # Step 2: Find associated musical artist of the artist from step 1
  ?artist1 a dbo:Musician ;
           dbp:associatedBandOrMusicalArtist ?artist2 .

  # Step 3: Identify an artist who is both a musician and associated with Scott LaFaro
  ?scottLaFaro a dbo:Musician ;
               dbp:associatedBandOrMusicalArtist ?artist3 .
  
  # Ensure this artist is also professionally linked to Bob Marley
  ?bobMarley a dbo:Musician ;
             dbp:associatedBandOrMusicalArtist ?artist3 .

  # Final condition: The artist from step 2 should match the artist from steps 3 and 4
  FILTER (?artist2 = ?artist3)
  
  # Ensure the final artist is both an artist and a musician
  ?finalArtist a dbo:Musician, dbo:Artist ;
               dbp:name ?name .
  FILTER (?artist2 = ?finalArtist)

}
ORDER BY ?finalArtist",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
987,41,val,"Give me the birth place of the actor of All for Free and entity in Montenegro and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorBirthPlace ?entityInMontenegro ?bandBirthPlace WHERE {
  # Actor of ""All for Free""
  ?movie dbo:title ""All for Free""@en .
  ?movie dbo:starring ?actor .
  ?actor dbo:birthPlace ?actorBirthPlace .

  # Entity in Montenegro
  ?entityInMontenegro dbo:country dbr_Montenegro .

  # Band of Šako Polumenta
  ?band dbo:member ?sakoPolumenta .
  ?sakoPolumenta rdfs:label ""Šako Polumenta""@en .
  ?band dbo:birthPlace ?bandBirthPlace .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
445,54,val,"Give me the entity in the residence, that is a country, of Anna Sharkey and entity in United Kingdom and death place of the awardee of the establishment of 1820-03-10.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?residenceCountry ?ukEntity ?deathPlace WHERE {
  # Anna Sharkey's residence country
  OPTIONAL {
    ?anna a dbo:Person ;
          foaf:name ""Anna Sharkey"" .
    ?anna dbo:residenceLocation ?location .
    ?location dbo:countryName ?residenceCountry .
  }

  # Entity in United Kingdom
  OPTIONAL {
    ?ukEntity dbo:country dbr:United_Kingdom .
  }

  # Awardee of the establishment on 1820-03-10 and their death place
  OPTIONAL {
    ?award a dbo:Award ;
           dbo:date ""1820-03-10""^^xsd:date .
    ?recipient dbo:recipient ?award .
    ?recipient dbo:deathPlace ?deathPlace .
  }
}
```",6,7,7,3,3,3,3,71,1,42998,0,2.3256354798948812e-05,1.0,4.6511627906976735e-05
892,55,val,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of the award of Anna Ishii.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?profession ?region ?landmark WHERE {
  # Henri Crolla's profession
  dbr:Henri_Crolla dbo:occupation ?profession .

  # Italian region and settlement in Democratic Party (Italy)
  ?region a dbo:Region ;
          dbp:country ""Italy""^^xsd:string ;
          dbo:settlement ?settlement .
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Democratic Party (Italy)""@en .
  ?region dbo:memberOf ?party .

  # Landmark at elevation of Anna Ishii's award
  dbr:Anna_Ishii dbo:award ?award .
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = ?award) .
}
```",6,10,7,2,3,3,3,71,0,0,2,0,0.0,0
41,22,val,"Give me the party of the person born as David Declan Costello and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?costelloParty ?leaderParty WHERE {
  # Find David Declan Costello and his political party
  OPTIONAL {
    ?costello a dbo:Person ;
              foaf:name ""David Declan Costello"" ;
              dbo:party ?costelloParty .
  }

  # Find the leader of the 2005 Castlereagh Borough Council election
  OPTIONAL {
    ?leader a dbo:Politician, dbo:OfficeHolder ;
            dbo:electedAsLeaderOf dbr:2005_Castlereagh_Borough_Council_election ;
            dbo:party ?leaderParty .
  }
}
```

This query uses optional patterns to find the political party of David Declan Costello and the leader from the specified election. It assumes that DBpedia has structured data for these entities, which might require adjustments based on actual data availability.",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
98,23,val,"Give me the region of the time zone of Lopez Jaena and entity in the region, that is a country, of Philippine Standard Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?country WHERE {
  # Find the time zone of Lopez Jaena, Philippines
  ?lorenzoJaena dbo:timeZone ?timeZone .
  
  # Get the region associated with this time zone
  ?timeZone dbo:location ?region .

  # Ensure that the region is part of Philippine Standard Time (PST)
  FILTER(CONTAINS(LCASE(STR(?timeZone)), ""philippine standard time""))

  # Find a country in this region
  ?country dbo:locatedInRegion ?region .
  FILTER EXISTS { ?country a dbo:Country . }
}
```

This query does the following:
- It starts by identifying the time zone associated with Lopez Jaena.
- Then, it finds the region linked to that time zone and ensures it is related to Philippine Standard Time (PST).
- Finally, it looks for countries located in this region.

Please note that you might need to adjust entity URIs or property paths based on how they are specifically represented in DBpedia. The query assumes a certain structure which may require verification against the actual data model of DBpedia.",4,5,5,2,2,2,3,28,0,0,1743,0,0.0,0
170,20,val,Give me the domain of Mayor and entity in Russia and birth place of the awardee of People's Artist of Russia.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mayorDomain ?entityInRussia ?birthPlace WHERE {
  # Find domains of ""Mayor""
  ?property rdfs:domain ?mayorDomain .
  FILTER(CONTAINS(LCASE(STR(?mayorDomain)), ""mayor""))

  # Find entities in Russia
  ?entityInRussia a dbo:AdministrativeTerritory ;
                  dbo:country dbr:Russia .

  # Find birthplace of People's Artist of Russia awardees
  ?person dbo:honoraryTitle dbr:People%27s_Artist_of_Russia .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace }
}
```",4,4,5,2,3,2,3,28,0,0,3,0,0.0,0
645,51,val,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Francisco Largo Caballero as a person
  dbr:Francisco_Largo_Caballero 
    dbo:nationality dbr:Spain ;
    dbo:birthPlace dbr:Restoration_(Spain) .

  # His role in military and political contexts
  ?role dbo:agent dbr:Francisco_Largo_Caballero .
  
  # Role as a leader of a government agency/organization
  ?agency dbo:leader dbr:Francisco_Largo_Caballero ;
          rdf:type dbo:GovernmentAgency .

  # Military force associated with events that are military conflicts and societal events
  ?event dbo:agent ?role ;
         rdf:type dbo:MilitaryConflict, dbo:SocietalEvent .
  
  ?militaryForce dbo:participatedIn ?event ;
                 rdf:type dbo:MilitaryForce .
}
```",5,10,6,3,2,3,3,71,0,0,2,0,0.0,0
365,17,val,"Give me the person born as Symon Vasylyovych Petliura and spouse of the native, that is a politician, of the reference to Полтавская губерния.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/property/birthName> ""Symon Vasylyovych Petliura""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Symon Vasylyovych Petliura and his spouse
  dbr:Symon_Petliura dbo:spouse ?spouse .

  # Ensure the spouse is a politician from Полтавская губерния
  ?spouse dbo:nationality dbr:Ukraine ;
         dbo:birthPlace dbr:Poltava_Governorate ;
         rdf:type dbo:Politician .
}",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
274,20,val,Give me the professional in the designer of Tetris Classic and band member of Dizzy Gillespie and associated musical artist of Cecil Taylor.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Designer of Tetris Classic
  ?tetrisCreator dbo:creator ?person .
  FILTER (str(?tetrisCreator) = ""Tetris Classic"")

  # Band member of Dizzy Gillespie
  ?dizzyBandMember dbo:bandMember ?person .
  FILTER (str(?dizzyBandMember) = ""Dizzy Gillespie"")

  # Associated musical artist of Cecil Taylor
  ?cecilArtist dbo:associatedMusicalArtist ?person .
  FILTER (str(?cecilArtist) = ""Cecil Taylor"")
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
216,47,val,"Give me the player in the coach of Croatia national under-21 football team and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/coach> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerRole ?coachRole ?organisation
WHERE {
  # Džemal Berberović's involvement as a player and coach
  dbr:Džemal_Berberović dbo:role ?playerRole .
  dbr:Džemal_Berberović dbo:role ?coachRole .

  # Ensure the roles are related to being a soccer player, sports manager, and soccer manager
  ?playerRole rdf:type dbo:SoccerPlayer .
  ?coachRole rdf:type dbo:SportsManager ;
             rdf:type dbo:SoccerManager .

  # The organisation is the Croatia national under-21 football team
  ?organisation rdfs:label ""Croatia national under-21 football team""@en .
  ?organisation rdf:type dbo:SportsClub ;
                rdf:type dbo:SoccerClub .

  # Linking Džemal Berberović to the organisation through his roles
  ?playerRole dbo:team ?organisation .
  ?coachRole dbo:team ?organisation .
}
```",5,11,6,3,2,3,3,71,0,0,3,0,0.0,0
933,55,val,"Give me the reference to the birth name of Alan Warner (musician) and band of the band of Alan Warner (musician) and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName ?bandName WHERE {
  # Find Alan Warner the musician
  ?musician a dbo:MusicArtist ;
            rdfs:label ""Alan Warner (musician)""@en .
  
  # Get his birth name
  OPTIONAL { ?musician dbo:birthName ?birthName . }
  
  # Find bands associated with him
  ?band a dbo:Band ;
        dbo:member ?musician .
  
  # Get the band's name
  OPTIONAL { ?band rdfs:label ?bandName . FILTER (lang(?bandName) = 'en') }
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
124,48,val,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  # Herbert Kitchener and his military force
  dbr:Herbert_Kitchener_1st_Earl_Kitchener dbo:militaryConflict dbr:Second_Boer_War .
  
  # Second Boer War as a societal event and military conflict
  dbr:Second_Boer_War a dbo:SocietalEvent ;
                     a dbo:MilitaryConflict .

  # Reference to 'A' Battery, Royal Australian Artillery in World War I
  dbr:A_Battery_Royal_Australian_Artillery dbo:militaryConflict dbr:World_War_I .
  
  # World War I as a societal event and military conflict
  dbr:World_War_I a dbo:SocietalEvent ;
                  a dbo:MilitaryConflict .

  # Australian Army as an organisation and military unit
  dbr:Australian_Army a dbo:Organisation ;
                     a dbo:MilitaryUnit .
  
  # Linking the military forces through societal events and conflicts
  ?militaryForce a dbo:SocietalEvent ;
                 a dbo:MilitaryConflict .

  FILTER(?militaryForce = dbr:Second_Boer_War)
}",5,12,6,3,2,3,3,71,0,0,9,0,0.0,0
170,19,val,Give me the domain of Mayor and entity in the work of International Energy Agency and birth place of Era Ziganshina.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mayorDomain ?eraBirthPlace WHERE {
  # Find the domain of ""Mayor"" in relation to International Energy Agency
  OPTIONAL {
    ?entity a dbo:Mayor ;
            dbo:worksFor dbr:International_Energy_Agency .
    ?domain rdfs:domain ?entity .
    BIND(?domain AS ?mayorDomain)
  }

  # Find the birthplace of Era Ziganshina
  OPTIONAL {
    dbr:Era_Ziganshina dbo:birthPlace ?eraBirthPlace .
  }
}
```",4,4,5,2,3,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
465,51,val,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Step 1: Identify Charles Orlando, Dauphin of France's parent
  ?charlesOrlando a dbo:Dauphin ;
                  dbo:childOf ?parent .

  FILTER(?charlesOrlando = dbr:Charles_Orland)

  # Step 2: Find the child who is royalty from this parent
  ?royaltyChild dbo:childOf ?parent ;
                a dbo:Monarch .

  # Step 3: Identify Ferdinand I, Holy Roman Emperor's child who is royalty
  ?ferdinandI a dbo:HolyRomanEmperor ;
              dbo:child ?ferdinandsChild .
  
  FILTER(?ferdinandI = dbr:Ferdinand_I,_Holy_Roman_Emperor)

  ?royaltyFerdinandsChild dbo:childOf ?ferdinandI ;
                          a dbo:Monarch .

  # Step 4: Find the spouse of Ferdinand's child
  ?spouse owl:sameAs ?royaltyFerdinandsChild .

  # Step 5: Find the successor of the royalty child from Charles Orlando's parent
  ?successor dbo:predecessorOrPredeceasedBy ?royaltyChild .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
267,16,val,"Give me the coach of the player, that is a soccer club, in Rasoul Khatibi and person born on the birth date of Dan Cathy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/coach> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?coach WHERE {
  # Find Dan Cathy's birthdate
  VALUES (?danCathyBirthDate) { 
    SELECT ?birthdate WHERE {
      dbr:Dan_Cathy dbo:birthday ?birthdate .
    }
  }

  # Find players associated with a soccer club in Rasoul Khatibi
  ?player dbo:nationality dbr:Iran ;
          dbo:sport dbr:Soccer ;
          dbo:birthDate ?playerBirthDate .

  # Match the player's birthdate with Dan Cathy's birthdate
  FILTER (?playerBirthDate = ?danCathyBirthDate)

  # Find the club associated with Rasoul Khatibi
  ?club dbo:location dbr:Rasoul_Khatibi ;
        dbo:member ?player .

  # Retrieve the coach of such a player
  ?coach dbp:team ?club .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
715,46,val,"Give me the commander in the force of Francisco Largo Caballero and commander in the force, that is a military conflict, of the native of Morocco.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander1 ?conflict1 ?commander2 ?conflict2
WHERE {
  # Francisco Largo Caballero's command role
  dbr:Fran%C3%A7ois_Largo_Caballero dbo:positionHeld ?commander1 .
  ?commander1 dbo:participatedIn ?conflict1 .

  # A native of Morocco involved in a military conflict
  ?person dbo:nationality dbr:Morocco ;
          dbo:positionHeld ?commander2 .
  ?commander2 dbo:participatedIn ?conflict2 .
}
```

This query attempts to find:

- The command role (`?commander1`) of Francisco Largo Caballero and the conflict (`?conflict1`) he was involved in.
- A Moroccan individual's command role (`?commander2`) and the conflict (`?conflict2`) they were involved in.",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
573,48,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/property/governor> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  # Step 1: Find Charlie Baker's real name
  dbr:Charlie_Baker_(Australian_footballer) dbo:realName ?charlieRealName .

  # Step 2: Identify the administration (region)
  ?administration a dbo:Region ;
                 dbo:decedent ?charlieRealName .

  # Step 3: Find the author of Exchequer Standards
  dbr:Exchequer_Standards dbo:author ?author .

  # Step 4: Find the parent who is a politician and office holder
  ?parent dbo:child ?author ;
          a dbo:Politician, dbo:OfficeHolder .
  
  # Get the name of the parent
  ?parent rdfs:label ?parentName .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
508,16,val,"Give me the birthplace of the commander, that is Saudi, in Central Plains War and birthplace of the commander, that is a politician, in 1939–1940 Winter Offensive.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthplace1 ?birthplace2 WHERE {
  # Find the Saudi commander in the Central Plains War
  ?person1 a dbo:MilitaryPerson ;
           dbo:nationality dbr:Saudi_Arabia ;
           dbo:commanderOf dbr:Central_Plains_War .
  
  # Get their birthplace
  ?person1 dbo:birthPlace ?birthplace1 .

  # Find the politician commander in the 1939–1940 Winter Offensive
  ?person2 a dbo:MilitaryPerson, dbo:Politician ;
           dbo:commanderOf dbr:Winter_Offensive_1939-40 .
  
  # Get their birthplace
  ?person2 dbo:birthPlace ?birthplace2 .
}
```",4,6,5,2,2,3,2,20,0,0,3,0,0.0,0
645,40,val,Give me the commander in the force of the commander in Siege of Madrid and military force of Spanish Civil War and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:commanderOf ?siegeCommander .
  ?siegeCommander dbo:participatedIn dbr:Siege_of_Madrid .
  
  ?person dbo:militaryConflict dbr:Spanish_Civil_War .

  ?person dbo:leaderOf dbr:Ministry_of_the_Army_(Spain) .

  ?person rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
122,7,val,Give me the band of Gift of Gab (rapper) and band member of the band of Gift of Gab (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?member WHERE {
  ?artist a dbo:MusicalArtist ;
          foaf:name ""Gift of Gab""@en .
  
  ?artist dbo:band ?band .

  ?band dbo:bandMember ?member .
}
```

This query does the following:
- It selects artists with the name ""Gift of Gab"".
- It finds the band associated with this artist using `dbo:band`.
- It retrieves members of that band using `dbo:bandMember`.",3,3,4,2,2,2,2,9,0,0,3,0,0.0,0
18,21,val,"Give me the parent of Liza Huber and professional in  and alumnus of the figure known, that is an educational institution, as Saints.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . ?result <http://dbpedia.org/ontology/almaMater> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?alumnus WHERE {
  # Find Liza Huber and her parent
  ?liza a dbo:Person ;
        foaf:name ""Liza Huber"" ;
        dbo:child ?parent .

  # Find the educational institution known as Saints
  ?institution a dbo:EducationalInstitution ;
               foaf:name ""Saints"" .

  # Find alumni of this institution who are professionals in the same field as Liza Huber
  ?alumnus a dbo:Person ;
           dbo:almaMater ?institution ;
           dbo:profession ?profession .
  
  # Ensure the profession matches (assuming we know it, e.g., ""Actress"")
  ?liza dbo:profession ?profession .

  FILTER(?parent != ?alumnus)
}
```

This query assumes:
- Liza Huber's profession is known and can be matched.
- The educational institution named ""Saints"" exists in DBpedia.

Please adjust the profession part as needed based on specific information about Liza Huber's career.",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
917,46,val,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of Keʻelikōlani.",SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Liliuokalani as the mayor of Hawaiian Kingdom
  dbr:Liliuokalani dbo:spouse ?child .

  # Child who is royalty (Prince William Pitt Leleiohoku II)
  ?child a dbo:RoyalFamilyMember ;
         dbo:father dbr:Kīnaʻu ; # Father of Keʻelikōlani

  # Parent of the royal child
  ?child dbo:parent ?parent .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
826,42,val,"Give me the spouse of the child of Johann Heinrich Appel and predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Find Johann Heinrich Appel's child
  ?child dbo:parent dbr:Johann_Heinrich_Appel .
  
  # Step 2: Find the spouse of that child
  ?child dbo:spouse ?spouse .

  # Step 3: Find Prince Friedrich's parent and their predecessor
  ?friedrichParent dbo:child dbr:Prince_Friedrich_of_Hesse_and_by_Rhine .
  ?predecessor dbo:succ dbp:parentOf ?friedrichParent .

  # Step 4: Find the successor of Louis II, Grand Duke of Hesse
  ?successor dbo:predecessor dbr:Louis_II,_Grand_Duke_of_Hesse .

  # Ensure the spouse is related to both predecessor and successor conditions
  FILTER (?spouse = ?predecessor && ?spouse = ?successor)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
892,46,val,Give me the landmark at elevation of the award of Anna Ishii and entity in the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v2 <http://dbpedia.org/property/occupation> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?entityInProfession
WHERE {
  # Find Anna Ishii's award
  ?annaIshii dbo:award ?award .
  
  # Find a landmark at the elevation of that award
  ?award dbo:elevation ?elevation .
  ?landmark dbo:elevation ?elevation .

  # Determine Enrico Crolla's profession or true self
  ?enricoCrolla dbo:profession ?profession .

  # Find an entity in that profession
  ?entityInProfession a ?profession .
}
```",5,5,6,3,2,3,3,71,0,0,11,0,0.0,0
124,54,val,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of Battle of Atbara and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Identify the war as both a societal event and military conflict
  ?war a dbo:MilitaryConflict ;
      a dbo:SocietalEvent .

  # Find the commander of A Field Battery, Royal Australian Artillery in this war
  ?battery dbr:A_Field_Battery,_Royal_Australian_Artillery ;
          dbo:commander ?commander ;
          dbo:participatedInWar ?war .

  # Identify the military force involved in the Battle of Atbara
  ?battle dbr:Battle_of_Atbara .
  ?force dbo:participatedInBattle ?battle .

  # Find the war involving the awardee of British South Africa Company Medal
  ?medalAwardee dbo:awardedWith dbr:British_South_Africa_Company_Medal ;
               dbo:participatedInWar ?anotherWar .
  
  # Ensure both wars are the same
  FILTER(?war = ?anotherWar)

  # Link the military force from Battle of Atbara to the war
  ?force dbo:participatedInWar ?war .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
124,41,val,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of Battle of Atbara and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  # Find commanders of the Battle of Atbara
  ?battle dbp:name ""Battle of Atbara""@en .
  ?battle dbo:commander ?commander .

  # Ensure the commander is also associated with Frank Rhodes' military force
  OPTIONAL {
    ?frank dbp:name ""Frank Rhodes (British Army officer)""@en ;
           dbo:militaryConflict ?conflict .
    ?conflict dbo:participatedInBattle ?battle .
  }

  # Check if the commander was involved in a societal event and military conflict
  ?commander dbo:militaryConflict ?conflict .
  FILTER EXISTS { ?conflict rdf:type dbo:MilitaryConflict . }
  FILTER EXISTS { ?conflict dbo:societalEvent true } .

  # Ensure the commander is linked to A Field Battery, Royal Australian Artillery
  OPTIONAL {
    ?battery dbp:name ""A Field Battery, Royal Australian Artillery""@en ;
             dbo:commander ?commander .
  }
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
773,43,val,"Give me the spouse of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious and parent of Charles the Fat.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Louis the German's spouse
  dbr:Louis_the_German dbo:spouse ?spouse .
  
  # Hemma of Waiblingen as parent of Lothair I and Charles the Fat
  ?spouse dbo:child dbr:Lothair_I ;
          dbo:child dbr:Charles_the_Fat .

  # Lothair I as a child of Louis the Pious
  dbr:Louis_the_Pious dbo:child dbr:Lothair_I .
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
888,17,val,Give me the awardee of the award of the commander in 2022 Ukrainian eastern counteroffensive and commander in Southern Ukraine campaign.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Southern_Ukraine_campaign> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:recipient ?person .
  ?person foaf:name ?awardee .

  FILTER (
    EXISTS { ?award rdfs:label ?label1 . FILTER(CONTAINS(LCASE(?label1), ""ukrainian eastern counteroffensive"")) }
    || EXISTS { ?award rdfs:label ?label2 . FILTER(CONTAINS(LCASE(?label2), ""southern ukraine campaign"")) }
  )
}
```

This query attempts to find individuals (`?person`) who are recipients of awards (`?award`) with labels containing phrases related to the specified military campaigns. The `foaf:name` property is used to extract the name of the awardee.

Please note that this query might not return results if DBpedia does not have updated information on these specific events or awards. For precise and up-to-date information, consulting official sources or databases dedicated to recent historical records would be more appropriate.",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
839,52,val,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of Matthias Röhr and band of the member of Böhse Onkelz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?band
WHERE {
  # Kevin Russell (musician)
  {
    VALUES ?person { dbr:Kevin_Russell_(musician) }
    OPTIONAL {
      ?person dbo:musicalArtist dbr:True_Confessions_(band) .
      BIND(dbr:True_Confessions_(band) AS ?band)
    }
  }

  UNION

  # Matthias Röhr
  {
    VALUES ?person { dbr:Matthias_Röhr }
    OPTIONAL {
      ?person dbo:musicalArtist dbr:Die_Puhdys .
      BIND(dbr:Die_Puhdys AS ?band)
    }
  }

  UNION

  # Member of Böhse Onkelz
  {
    VALUES ?band { dbr:Böhse_Onkelz }
    ?person dbo:musicalArtist ?band .
    FILTER NOT EXISTS { ?person rdfs:label ""Böhse Onkelz""@en } # Exclude the band itself
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
839,41,val,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of Böhse Onkelz and band of Matthias Röhr.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandKevin ?bandMatthias WHERE {
  # Kevin Richard Russell (Kevin Russell)
  OPTIONAL {
    ?kevin a dbo:MusicalArtist ;
           foaf:name ""Kevin Richard Russell"" .
    ?kevin dbo:memberOfBand ?bandKevin .
  }
  
  # Matthias Röhr
  OPTIONAL {
    ?matthias a dbo:MusicalArtist ;
              foaf:name ""Matthias Röhr"" .
    ?matthias dbo:memberOf ?boMember .
    ?boMember dbo:band dbr:Böhse_Onkelz .
    ?matthias dbo:memberOfBand ?bandMatthias .
  }
}
```

This query does the following:
- Searches for Kevin Richard Russell as a musical artist and retrieves any band he is associated with.
- Searches for Matthias Röhr, identifies his membership in Böhse Onkelz, and retrieves any other bands he might be part of.",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
976,44,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as Mehmet Naci Bostancı and office of Mustafa Şentop.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?office WHERE {
  VALUES (?person) { 
    dbr:Mehmet_Naci_Bostancı
    dbr:Mustafa_Şentop
  }
  
  ?person dbo:nationality dbr:Turkey .
  ?person dbo:politicalParty dbr:Nation_Alliance_(Turkey) .
  ?office dbo:positionTitle ""Mayor""@en .
  ?office dbo:holder ?person .
}
```

This query does the following:
- Selects individuals (`?person`) who are Mehmet Naci Bostancı or Mustafa Şentop.
- Ensures they have Turkish nationality and are affiliated with the Nation Alliance (Turkey).
- Checks if they hold an office with the title ""Mayor"".",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
955,16,val,"Give me the band of the band member, that is a musical artist and an artist, of Street Dogs and band of the writer of Don't Forget Your Roots (album).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band1 ?band2 WHERE {
  # Find Street Dogs band member who is a musical artist and an artist
  ?member dbo:memberOf dbr:Street_Dogs ;
          a dbo:MusicalArtist, dbo:Artist .

  # Get the band of this member
  ?member dbo:band ?band1 .

  # Find writer of ""Don't Forget Your Roots"" album
  ?album dbo:title ""Don't Forget Your Roots""@en ;
         dbo:writer ?writer .

  # Get the band of this writer
  ?writer dbo:band ?band2 .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
965,52,val,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of the spouse of the parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","```sparql
SELECT ?parent WHERE {
  ?princeLouis rdf:type dbo:Person ;
               foaf:name ""Prince Louis of Battenberg""@en .
  
  ?princessVictoriaEugenie dbo:spouse ?alfonsoXIII ;
                           dbo:childOf ?princeLouis .

  ?louisMountbatten dbo:parent ?princessVictoriaEugenie ;
                    dbo:fatherOf ?georgeMountbatten .

  ?princeLouis dbo:spouse ?victoriaHesse .
  
  FILTER (str(?alfonsoXIII) = ""Alfonso XIII of Spain""@en &&
          str(?georgeMountbatten) = ""George Mountbatten, 2nd Marquess of Milford Haven""@en)
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
917,43,val,"Give me the child of Kekūanāoʻa and parent of Albert Kamehameha and child of the father of the spouse, that is a royalty, of Leleiohoku I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Find Kekūanāoʻa's child who is a parent of Albert Kamehameha
  ?childKeku dbr:Kekūanāoʻa dbo:child .
  ?childKeku dbr:Albert_Kamehameha dbo:parent .

  # Step 2: Find the spouse of Leleiohoku I and their father's child who is royalty
  ?spouseLelei dbr:Leleiohoku_I dbo:spouse .
  ?fatherSpouse dbo:child ?spouseLelei .
  ?royaltyChild ?fatherSpouse dbo:child .
  
  # Ensure the person found is a royalty
  ?royaltyChild rdf:type dbo:Monarch .

  # The person we are looking for should match both conditions
  FILTER (?childKeku = ?royaltyChild)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
715,40,val,"Give me the commander in Spanish Civil War and commander in the force, that is a military conflict, of the native of Morocco and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?spanishCivilWarCommander ?otherConflictCommander WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Morocco .
  ?person dbo:leaderOf dbr:Ministry_of_the_Air_(Spain) .
  
  # Spanish Civil War
  OPTIONAL { 
    ?spanishCivilWarEvent dbo:commander ?person ;
                          dbo:name ""Spanish Civil War""@en .
    BIND(""Spanish Civil War"" AS ?spanishCivilWarCommander)
  }
  
  # Other military conflict
  OPTIONAL {
    ?otherConflictEvent dbo:commander ?person ;
                        dbo:name ?conflictName .
    FILTER(?conflictName != ""Spanish Civil War"")
    BIND(?conflictName AS ?otherConflictCommander)
  }

  SERVICE <http://dbpedia.org/sparql> {
    ?person rdfs:label ?name .
    FILTER(LANG(?name) = 'en')
  }
}
```

This query does the following:
- Identifies a person who is a native of Morocco and was a leader of the Ministry of the Air in Spain.
- Checks if this person commanded during the Spanish Civil War.
- Looks for another military conflict where this person also served as a commander, excluding the Spanish Civil War.",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
102,17,val,"Give me the native of the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury and manager of Sheffield United W.F.C..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sheffield_United_W.F.C.> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeLanguage WHERE {
  ?person a dbo:Athlete ;
          dbo:nationality dbr:United_Kingdom ;
          dbo:residence ?settlement .
  
  ?settlement a dbo:Settlement ;
              dbo:country dbr:England .

  ?person dbo:managerOf dbr:Sheffield_United_Women_Football_Club .

  ?athlete dbo:birthPlace dbr:Dewsbury .

  FILTER (?person = ?athlete)

  ?settlement dbp:nativeLanguage ?nativeLanguage .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
987,50,val,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorBirthPlace WHERE {
  # Step 1: Find a film with Emir Hadžihafizbegović
  ?film dbo:starring dbr:Emir_Hadžihafizbegović .
  
  # Step 2: Identify related shows or series (assuming they are adaptations)
  ?show dbo:basedOnFilm ?film .

  # Step 3: Find actors in the show/series
  ?show dbo:starring ?actor .

  # Step 4: Get birthplace of the actor
  ?actor dbp:birthPlace ?actorBirthPlace .

  # Step 5: Ensure the country is within Central European Time
  ?actorBirthPlace dbo:timeZone dbr:Central_European_Time .
}
```",5,7,6,3,2,3,3,71,0,0,18,0,0.0,0
465,41,val,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of Renée of France and successor of the child of Alfonso I d'Este.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Ferdinand I, Holy Roman Emperor's children who are royalty
  ?child dbo:parent dbr:Ferdinand_I,_Holy_Roman_Emperor ;
         a dbo:Monarch .

  # Successor of Renée of France
  ?successor dbp:succeededBy dbr:Renée_of_France .
  
  # Child of Alfonso I d'Este
  ?alfonsoChild dbo:parent dbr:Alfonso_I_d%27Este .

  # The child must be a successor of both Renée and the child of Alfonso I d'Este
  FILTER (?child = ?successor && ?child = ?alfonsoChild)

  # Get the spouse of this specific child
  ?spouse dbo:spouse ?child .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
987,47,val,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

# Step 1: Find a film featuring Emir Hadžihafizbegović
SELECT ?film WHERE {
    ?film dbo:starring dbr:Emir_Hadžihafizbegović .
}

# Step 2: For each film, find an actor and their birthplace
SELECT DISTINCT ?actorBirthPlace WHERE {
    ?film dbo:starring ?actor .
    ?actor dbp:birthPlace ?actorBirthPlace .
}

# Step 3: Find the band associated with Šako Polumenta as both an artist and a musical artist
SELECT ?band WHERE {
    ?band dbo:member dbr:Šako_Polumenta ;
          rdf:type dbo:Band .
}

# Step 4: Retrieve the birthplace of that band (assuming bands have a location or origin)
SELECT DISTINCT ?bandBirthPlace WHERE {
    ?band dbp:originLocation ?bandBirthPlace .
}
```

This query assumes:
- Films are linked to actors via `dbo:starring`.
- Actors and bands have a `dbp:birthPlace` or `dbp:originLocation` property.
- Šako Polumenta is a member of a band, which can be identified by his role.",5,8,6,3,2,3,3,71,0,0,4,0,0.0,0
839,45,val,"Give me the band of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician and band of Peter Schorowsky.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?kevinBand ?bandOfKevinBand ?peterBand WHERE {
  # Kevin Russell's band
  ?kevinRussell a dbo:Musician ;
                foaf:name ""Kevin Russell"" .
  
  ?kevinRussell dbo:memberOf ?kevinBand .

  # The band of Kevin Russell should be a musical artist
  ?kevinBand a dbo:MusicalArtist .

  # Find the band associated with this musical artist
  ?kevinBand dbo:bandMember ?bandOfKevinBand .

  # Peter Schorowsky's band
  ?peterSchorowsky a dbo:Musician ;
                   foaf:name ""Peter Schorowsky"" .
  
  ?peterSchorowsky dbo:memberOf ?peterBand .
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
874,17,val,"Give me the band of Manfred Mann (musician) and band of the band member of the band, that is an organisation, of Mark Read (singer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Manfred_Mann_(musician)> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manfredMannBand ?markReadBand WHERE {
  # Find Manfred Mann's band
  ?manfredMann dbo:musicalArtistManagesOrPartOf ?band .
  ?band a dbo:MusicalBand ;
        rdfs:label ?manfredMannBand .

  FILTER(CONTAINS(LCASE(?manfredMannBand), ""manfred mann""))

  # Find Mark Read's band that is an organization
  ?markRead dbp:member ?person .
  ?person dbo:musicalArtistManagesOrPartOf ?band2 .
  ?band2 a dbo:MusicalBand ;
         rdfs:label ?markReadBand .

  FILTER(CONTAINS(LCASE(?markReadBand), ""kiss"") && 
         (STRSTARTS(STR(?band2), STR(dbpedia:KISS_(band)))))

}
```

This query does the following:
- It identifies bands associated with Manfred Mann using the `musicalArtistManagesOrPartOf` property.
- It filters to ensure that the band is labeled as ""Manfred Mann"" or a related variant.
- For Mark Read, it finds his membership in any band and checks if that band is an organization (specifically looking for KISS, which is known to be both a band and an organization).
- The `FILTER` conditions are used to ensure the correct bands are selected based on their labels.",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
935,16,val,Give me the death place of the awardee of Sitara-i-Imtiaz and headquarter of the office of Sanaullah Khan Zehri.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/location> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?headquarters WHERE {
  # Find a person who received Sitara-i-Imtiaz
  ?person dbo:awardReceived dbr:Sitara-i-Imtiaz .
  
  OPTIONAL {
    ?person dbo:deathPlace ?deathPlace .
  }
  
  # Find Sanaullah Khan Zehri's office and its headquarters
  ?office dbo:headOf dbr:Sanaullah_Khan_Zehri ;
          dbo:headquarters ?headquarters .
}
```

This query does the following:
- Searches for individuals who have received the Sitara-i-Imtiaz award.
- Retrieves the death place of such an individual if available.
- Identifies the office associated with Sanaullah Khan Zehri and its headquarters.",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
839,43,val,"Give me the band of Matthias Röhr and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of Kevin Russell (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMatthiasRöhr ?bandPeterSchorowsky ?bandKevinRussell WHERE {
  # Band of Matthias Röhr
  ?matthias a dbo:Person ;
            dbp:honorificPrefix ""Matthias"" ;
            dbp:honorificSuffix ""Röhr"" .
  OPTIONAL { ?matthias dbo:musicalArtist ?bandMatthiasRöhr . }

  # Band of Peter Schorowsky
  ?peter a dbo:Person ;
         dbp:honorificPrefix ""Peter"" ;
         dbp:honorificSuffix ""Schorowsky"" .
  OPTIONAL { 
    ?peter dbo:musicalArtist ?bandPeterSchorowsky .
    ?bandPeterSchorowsky a dbo:Band ; # Ensure it's a band
                         dbo:member ?member .
    ?member dbo:musicalArtist ?subgroup .
    FILTER(?subgroup != ?bandPeterSchorowsky) # It should be another group
  }

  # Band of Kevin Russell (musician)
  ?kevin a dbo:Person ;
          dbp:honorificPrefix ""Kevin"" ;
          dbp:honorificSuffix ""Russell"" .
  OPTIONAL { ?kevin dbo:musicalArtist ?bandKevinRussell . }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
987,49,val,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/timeZone> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  # Step 1: Find the time zone of Canicosa de la Sierra
  ?canicosa a dbo:Settlement ;
            rdfs:label ""Canicosa de la Sierra""@en .
  
  ?canicosa dbo:timeZone ?timezone .

  # Step 2: Find sports events associated with this time zone
  ?event dbo:location ?timezone ;
         a dbo:SportEvent .

  # Step 3: Identify the region of the sports event
  ?region dbo:country ?country .
  ?event dbo:location ?region .

  # Step 4: Find Šako Polumenta's birthplace and band
  dbr:Šako_Polumenta dbo:birthPlace ?birthPlace ;
                     dbo:memberOfBand ?band .

  ?band a dbo:Artist, dbo:MusicalArtist .
  
  ?birthPlace rdfs:label ?locationLabel .
  
  # Step 5: Match the country with the region
  FILTER(?country = ?region)
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
216,40,val,"Give me the player in Mario Ivanković and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and team of Ognjen Vukojević.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player ?coach ?team ?club
WHERE {
  # Mario Ivanković as a player in Croatia U21
  ?player dbo:birthName ""Mario Ivanković""@en .
  ?player dbo:member ?team .
  ?team rdfs:label ""Croatia national under-21 football team""@en .

  # Ognjen Vukojević as a coach and his associated club
  ?coach dbo:birthName ""Ognjen Vukojević""@en .
  ?coach dbo:coach ?club .
  ?club rdf:type dbo:SoccerClub .
  
  FILTER (lang(?teamLabel) = 'en' && lang(?clubLabel) = 'en')
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
433,50,val,"Give me the professional in the profession of Bob Marley and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist WHERE {
  # Bob Marley's profession and associated musical artists
  ?bobMarley dbo:profession ?profession .
  FILTER (str(?profession) = ""singer"" || str(?profession) = ""musician"") .

  ?bobMarley dbp:associatedMusicalArtist ?associatedBob .
  
  # Check if the associated artist is both a visual artist and a musical artist
  ?associatedBob dbo:occupation ?occupation1 .
  ?associatedBob dbo:genre ?genre1 .
  FILTER (str(?occupation1) = ""artist"" && str(?genre1) = ""music"") .

  # Ornette Coleman's associated musical artists
  ?ornetteColeman dbp:associatedMusicalArtist ?associatedOrnette .

  # Check if the associated artist is both a musical artist and an artist
  ?associatedOrnette dbo:occupation ?occupation2 .
  ?associatedOrnette dbo:genre ?genre2 .
  FILTER (str(?occupation2) = ""musician"" && str(?genre2) = ""art"") .

  # Find common artists between the two sets
  VALUES ?artist { ?associatedBob ?associatedOrnette }
}
```",5,9,6,3,2,3,3,71,0,0,44,0,0.0,0
267,17,val,Give me the person born on the birth date of the reference to Dan Cathy and coach of Iran national football team.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Iran_national_football_team> <http://dbpedia.org/ontology/coach> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Get Dan Cathy's birthdate
  dbr:Dan_Cathy dbo:birthday ?danCathyBirthDate .

  # Find individuals with the same birthdate as Dan Cathy
  ?person dbo:birthday ?birthdate .
  
  FILTER (?birthdate = ?danCathyBirthDate)

  # Filter to find the coach of the Iran national football team
  ?person dbp:position ""coach""@en ;
          dbp:team dbr:Iran_national_football_team .

}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
892,42,val,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of 58.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession ?region ?landmark WHERE {
  # Henri Crolla's profession
  dbr:Henri_Crolla dbo:occupation ?profession .

  # Italian entity in administration that is a region and settlement, part of the Democratic Party (Italy)
  ?region a dbo:AdministrativeRegion ;
          dbp:country ""Italy""^^xsd:string ;
          dbo:settlement ?settlement ;
          dbo:party dbr:Democratic_Party_(Italy) .

  # Landmark at elevation 58
  ?landmark dbo:elevationAboveSeaLevel ""58""^^xsd:decimal .
}
```",5,9,6,2,3,3,3,71,0,0,2,0,0.0,0
926,46,val,Give me the successor of the child of Ahmed III and father of the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Step 1: Find a child of Ahmed III
  ?child dbo:parent dbr:Ahmed_III.

  # Step 2: Find the father of that child's father (Ahmed III)
  ?father dbp:spouse ?nefererekKadin.
  
  # Step 3: Identify Neşerek Kadın's spouse
  ?nefererekKadin dbo:spouse ?husband.

  # Step 4: Find the successor of Ahmed III
  dbr:Ahmed_III dbo:successor ?successor.
}
```",5,5,6,3,2,3,3,71,0,1,1,0.0,0.0,0
443,20,val,"Give me the birthplace of Carl Larsson and landmark at elevation of 28 and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthplace ?landmark ?person
WHERE {
  # Find Carl Larsson's birthplace
  dbr:C._Larsson dbo:birthPlace ?birthplace .

  # Find a landmark at an elevation of 28 meters
  ?landmark a dbo:Landmark ;
            dbo:elevationAboveSeaLevel ""28""^^xsd:float .

  # Find a person born on November 20, 1949, who is both a musical artist and an artist
  ?person dbo:birthDate ?date ;
          dbo:occupation dbr:Musical_artist ;
          dbo:occupation dbr:Artist ;
          dbp:birthday ""1949-11-20""^^xsd:date .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
216,41,val,"Give me the team of Ognjen Vukojević and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of Croatia national under-21 football team.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team1 ?role1 ?team2 ?role2 WHERE {
  # Ognjen Vukojević's resource
  VALUES ?person { dbr:Ognjen_Vukojević }

  # His role as a manager for Bosnia and Herzegovina national under-18 football team
  ?person dbo:managerOf ?team1 .
  ?team1 rdfs:label ""Bosnia and Herzegovina national under-18 football team""@en .

  # His role related to Croatia national under-21 football team
  ?person dbo:assistantCoach ?team2 .
  ?team2 rdfs:label ""Croatia national under-21 football team""@en .

  OPTIONAL {
    ?person dbo:sport dbr:Soccer .
  }

  OPTIONAL {
    ?person dbo:occupation dbr:Sports_manager .
  }
}
ORDER BY ?team1 ?role1 ?team2 ?role2",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
826,44,val,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Prince Friedrich of Hesse and by Rhine
  ?friedrich a dbo:Person ;
             foaf:name ""Prince Friedrich of Hesse and by Rhine""@en .
  
  # Parent of Prince Friedrich
  ?parent dbo:child ?friedrich .

  # Predecessor of the parent
  ?predecessor dbo:succeededBy ?parent .

  # Spouse of Anna Magdalena Appel
  ?anna a dbo:Person ;
        foaf:name ""Anna Magdalena Appel""@en .
  
  ?predecessor dbo:spouse ?anna .

  # Louis I, Grand Duke of Hesse and his child
  ?louis a dbo:Person ;
         foaf:name ""Louis I, Grand Duke of Hesse""@en .
  
  ?child dbo:child ?louis .

  # Successor of the child who is royalty
  ?successor dbo:succeededBy ?child ;
             a dbo:Royalty .
  
  FILTER (?predecessor = ?successor)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
456,55,val,"Give me the professional in the alter ego of The Shadow and band of the band, that is a musical artist, of Dean Brody and spouse of the actor of Pacific Drive.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?band ?spouse WHERE {
  # The Shadow's alter ego
  dbr:The_Shadow dbo:aliasName ?alterEgo .

  # Dean Brody's band
  dbr:Dean_Brody dbo:associatedBand ?band .
  
  # Actor from Pacific Drive and their spouse
  ?actor dbo:title dbr:Pacific_Drive ;
         dbo:spouse ?spouse .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
507,42,val,Give me the spouse of the person born as Anne Voase Coates and director of Entertaining Mr Sloane (film) and professional in the profession of Guy Ferland.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:FilmDirector ;
          foaf:name ""Anne Voase Coates""@en ;
          dbp:directedFilm <http://dbpedia.org/resource/Entertaining_Mr_Sloane> .
  
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```

This query does the following:
- It looks for a person who is a film director (`dbo:FilmDirector`) and has directed ""Entertaining Mr Sloane"".
- It checks if this person's name matches ""Anne Voase Coates"".
- It retrieves the spouse of this person using the `dbo:spouse` property.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
102,16,val,"Give me the manager of the player in Ellie Roebuck and native of the residence, that is English and a settlement, of Peter Finbow.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?v2 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager ?nativeSettlement WHERE {
  # Find Ellie Roebuck and her manager
  ?ellie a dbo:FootballPlayer ;
         foaf:name ""Ellie Roebuck"" ;
         dbo:managedBy ?manager .

  # Find Peter Finbow's native settlement in England
  ?peter a dbo:Person ;
         foaf:name ""Peter Finbow"" ;
         dbo:nationality dbr:England ;
         dbo:birthPlace ?nativeSettlement .
  
  FILTER (dbo:type(?nativeSettlement, dbo:Settlement))
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
826,43,val,"Give me the spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?successor WHERE {
  # Anna Magdalena Bach's spouse
  dbr:Anna_Magdalena_Bach dbo:spouse dbr:Johann_Sebastian_Bach .
  
  # Find a child of Johann Sebastian Bach who is royalty
  ?child dbo:parent dbr:Johann_Sebastian_Bach ;
         rdf:type dbo:Monarch .

  # Successor of the royal child
  ?successor dbo:predecessor ?child .

  # Reference to Louis I and predecessor of Louis IV, Grand Duke of Hesse
  dbr:Ludwig_IV,_Grand_Duke_of_Hesse dbo:predecessor dbr:Ludwig_I,_Grand_Duke_of_Hesse .
  
  # Connect the royal child to Louis I
  ?child dbo:successor dbr:Ludwig_I,_Grand_Duke_of_Hesse .

  # Ensure the successor is also connected in this lineage
  ?successor dbo:predecessor dbr:Ludwig_IV,_Grand_Duke_of_Hesse .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
36,19,val,"Give me the person born in 1971 and person born as Ayo Makun and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person1971 ?ayoMakun ?actorLepaciousBose WHERE {
  # Find the person born in 1971
  ?person1971 dbo:birthYear ""1971""^^xsd:gYear .
  
  # Find Ayo Makun
  ?ayoMakun rdfs:label ""Ayo Makun""@en .
  FILTER NOT EXISTS { ?ayoMakun a dbo:Film . } # Ensure it's not a film

  # Find the actor known for the film ""Lepacious Bose""
  ?actorLepaciousBose dbo:film dbr:Lepacious_Bose ;
                      rdf:type dbo:Actor .
  
  FILTER NOT EXISTS { ?actorLepaciousBose rdfs:label ""Ayo Makun""@en } # Ensure it's not Ayo Makun
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
192,16,val,"Give me the child of the child of Stephen V of Hungary and spouse of the spouse, that is a royalty, of Charles Martel of Anjou.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonIndividual WHERE {
  # Step 1: Find Stephen V of Hungary and his children
  ?stephenV a dbo:Monarch ;
            foaf:name ""Stephen V of Hungary""@en .
  
  ?childOfStephenV dbo:parent ?stephenV ;
                   a dbo:Person .

  # Step 2: Find the grandchildren of Stephen V
  ?grandChildOfStephenV dbo:parent ?childOfStephenV ;
                        a dbo:Person .

  # Step 3: Identify Charles Martel of Anjou and his spouse
  ?charlesMartel a dbo:Monarch ;
                 foaf:name ""Charles Martel of Anjou""@en .
  
  ?spouseOfCharlesMartel dbo:spouse ?charlesMartel ;
                         a dbo:Person .

  # Step 4: Find the spouse of his spouse (who is royalty)
  ?royalSpouseOfSpouse dbo:spouse ?spouseOfCharlesMartel ;
                       a dbo:Monarch .

  # Step 5: Combine to find common individual
  ?commonIndividual rdf:type dbo:Person .
  
  FILTER (?grandChildOfStephenV = ?commonIndividual)
  FILTER (?royalSpouseOfSpouse = ?commonIndividual)
}",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
456,41,val,Give me the spouse of the actor of Pacific Drive and professional in the alter ego of The Shadow and band of Alan Doyle.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Actor of Pacific Drive
  ?actor dbo:title ""Pacific Drive""@en .
  ?actor dbo:spouse ?spouse .

  UNION

  # Professional alter ego of The Shadow
  ?shadow dbo:alterEgo ""The Shadow""@en .
  ?shadow dbo:spouse ?spouse .

  UNION

  # Band of Alan Doyle
  ?band dbp:memberAlanDoyle true .
  ?band dbo:spouse ?spouse .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
417,43,val,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and spouse of Princess Caroline-Mathilde of Denmark and child of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Leader of Colony of Greenland
  ?leader dbo:positionTitle ""Governor of Greenland""@en .
  
  # Father of the leader
  ?father dbo:spouse ?leader .
  
  # Child of the father who is royalty
  ?child dbo:parent ?father ;
         a dbo:Monarch .

  # Spouse of Princess Caroline-Mathilde of Denmark
  ?child dbo:spouse dbr:Princess_Caroline_Matilda_of_Denmark .

  # Child of Alexandrine of Mecklenburg-Schwerin
  ?child dbo:parent dbr:Alexandrine_of_Mecklenburg-Schwerin .
}
```

This query assumes the existence of specific DBpedia resources and properties. Adjustments may be necessary based on actual data availability in DBpedia.",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
456,52,val,"Give me the professional in the alter ego of The Shadow and band of Alan Doyle and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # The Shadow's alter ego
  ?shadowAlterEgo dbo:alterEgoOf dbr:The_Shadow .
  
  # Alan Doyle's band
  ?band dbo:member dbr:Alan_Doyle ;
        rdfs:label ""Great Big Sea""@en .

  # Ross Newton's work and television show
  ?work dbo:actor dbr:Ross_Newton ;
        a dbo:Film ; # Assuming it's a film, adjust if needed

  # Spouse connection
  ?spouse dbo:spouseOf ?actor .
  
  # Linking the professional to all these entities
  ?professional dbo:alterEgo ?shadowAlterEgo ;
                dbo:member ?band ;
                dbo:spouseOf ?spouse .

}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
579,16,val,"Give me the person born as the birth name of Jane Percy, Duchess of Northumberland and native of the residence, that is English and a settlement, of Alan Clyne.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Jane Percy's birth name
  dbr:Jane_Percy Duchess_of_Northumberland dbo:birthName ?birthName .

  # Find Alan Clyne's residence that is a settlement in England
  dbr:Alan_Clyne dbo:residence ?settlement .
  ?settlement rdf:type dbo:Settlement ;
              dbp:country ""England""@en .

  # Match the person born with the birth name and in the settlement
  ?person dbo:birthName ?birthName ;
          dbo:birthPlace ?settlement .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
791,52,val,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of the child of Emperor Takakura and father of Emperor Go-Toba.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?emperorTakakura dbo:spouse ?empressMasako .
  ?empressMasako dbo:child ?antoku .
  ?antoku dbo:predecessorOf ?goToba .
  ?goToba dbo:father ?tsuchimikado .
  ?tsuchimikado dbo:spouse ?spouse .
  FILTER (dbo:Person(?spouse) && dbp:title ?title . 
          REGEX(str(?title), ""royalty"", ""i""))
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
433,42,val,"Give me the associated musical artist of Bill Evans and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and professional in the profession of Bob Marley.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist1 ?associatedArtist2 WHERE {
  # Find associated artists of Bill Evans
  ?billEvans a dbr:Bill_Evans ;
             dbo:musicalArtist ?associatedArtist1 .
  
  # Find associated artists of Paul Chambers
  ?paulChambers a dbr:Paul_Chambers_(musician) ;
                dbo:musicalArtist ?associatedArtist2 .

  # Find someone born as both a musical artist and an artist like Bob Marley
  ?person a dbo:MusicalArtist, dbo:Artist ;
          rdfs:label ?name .
  
  FILTER CONTAINS(LCASE(?name), ""bob marley"")
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
926,43,val,Give me the successor of the child of the spouse of Şermi Kadın and child of Ahmed III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Identify Selim III
  ?selim a dbo:Sultan ;
         dbo:spouse ?sermiKadin ;
         dbo:childOf ?ahmedIII ;
         dbo:fatherOf ?mahmudII .

  # Find the successor of Selim III
  ?selim dbo:successor ?successor .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
158,17,val,"Give me the entity in France and party of the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v0 <http://dbpedia.org/ontology/successor> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deceasedName ?successorName ?successorParty WHERE {
  # Find the deceased person
  ?deceased a dbo:Politician ;
            dbo:country dbr:France ;
            dbo:dateOfDeath ?deathDate ;
            foaf:name ?deceasedName .
  
  FILTER (YEAR(?deathDate) = 1945 && MONTH(?deathDate) = 9 && DAY(?deathDate) = 15)

  # Find the successor who became Prime Minister
  ?successor a dbo:Politician, dbo:PrimeMinister ;
             dbo:country dbr:France ;
             foaf:name ?successorName ;
             dbp:party ?successorParty .

  # Assuming there is some relation or temporal order to determine succession
  # This part might need more specific data or assumptions about the dataset
  FILTER (?deceased != ?successor)
}
ORDER BY ?deceasedName",4,9,5,3,2,3,2,20,0,0,1,0,0.0,0
527,16,val,"Give me the author of the work, that is a work and a book, of Tom Baker and actor of the movie, that is a work and English and a television show, with Bernard Bresslaw.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/author> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  # Find works authored by Tom Baker
  ?work dbo:author dbr:Tom_Baker .
  
  # Ensure the work is a book and a work
  ?work rdf:type dbo:Book ;
        rdf:type dbo:Work .

  # Find movies (works) acted in by Bernard Bresslaw that are also television shows and English
  ?movie dbo:starring dbr:Bernard_Bresslaw .
  ?movie rdf:type dbo:Film ;
         rdf:type dbo:TelevisionShow ;
         dbo:language dbr:English .

  # Ensure the work is related to the movie
  ?work dbo:basedOn ?movie .
}
```",4,9,5,2,2,3,2,20,0,0,1,0,0.0,0
465,44,val,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Anne of Brittany's child who is royalty
  ?child dbo:parent dbr:Anne_of_Brittany ;
         a dbo:Monarch .

  # Ercole II d'Este's successor
  ?ercole2 dbo:succeededBy ?successor .
  FILTER(?ercole2 = dbr:Ercole_II_d%27Este)

  # Ferdinand I's child who is royalty and their spouse
  ?ferdinandChild dbo:parent dbr:Ferdinand_I,_Holy_Roman_Emperor ;
                  a dbo:Monarch ;
                  dbp:spouse ?spouse .

  # The successor of Ercole II is the spouse of Ferdinand I's child
  FILTER(?successor = ?spouse)

  # Find the successor of this person (the spouse)
  ?spouse dbo:succeededBy ?finalSuccessor .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
47,50,val,"Give me the office of the awardee of Padma Vibhushan and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeOffice ?mantuAwardOffice WHERE {
  # Find the office of Padma Vibhushan awardees
  ?person dbo:honoraryAward dbr:Padma_Vibhushan .
  OPTIONAL { ?person dbo:officeHolder ?awardeeOffice . }

  # Find Mantu Ghosh's award and associated office
  dbr:Mantu_Ghosh dbo:award ?mantuAward .
  OPTIONAL { ?mantuAward dbo:officeHolder ?mantuAwardOffice . }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
124,43,val,"Give me the commander in Mahdist War and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and military force of Battle of Atbara.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?militaryForce ?awardee ?battleForce
WHERE {
  # Mahdist War resource
  VALUES ?mahdistWar { dbr:Mahdist_War }

  # Commanders and military forces in the Mahdist War
  ?event dbo:participatedInMilitaryConflict ?mahdistWar .
  ?event dbo:commander ?commander .
  ?event dbo:militaryForce ?militaryForce .

  # Awardees of British South Africa Company Medal
  ?awardee dbo:receivedAward dbr:British_South_Africa_Company_Medal .

  # Military forces in the Battle of Atbara
  ?battleEvent dbo:participatedInMilitaryConflict dbr:Battle_of_Atbara .
  ?battleEvent dbo:militaryForce ?battleForce .

  # Linking commanders and awardees
  ?commander rdfs:label ?commanderLabel .
  FILTER (CONTAINS(LCASE(?commanderLabel), ""received british south africa company medal""))

  # Linking military forces in both events
  FILTER (?militaryForce = ?battleForce)
}
ORDER BY ?commander",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
933,43,val,Give me the reference to the birth name of the professional in Musician and band of The Ramong Sound and band of Mike Elliott (saxophonist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?musician ?birthName WHERE {
  # Musicians in The Ramones
  VALUES ?band { dbr:The_Ramones }
  
  ?member dbo:memberOfBand ?band .
  ?member foaf:name ?musician .

  OPTIONAL {
    ?member foaf:mbox ?email . 
    ?person dbo:birthName ?birthName ;
            foaf:mbox ?email .
  }

  UNION

  # Mike Elliott (saxophonist)
  VALUES ?musician { ""Mike Elliott"" }
  
  ?person foaf:name ?musician .
  OPTIONAL {
    ?person dbo:birthName ?birthName .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
453,7,val,"Give me the religion of the birth place, that is a country, of William Denning and religion of John Henry Newman.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_Henry_Newman> <http://dbpedia.org/ontology/religion> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Denning> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/religion> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace ?religion 
WHERE {
  # William Denning
  VALUES ?person { dbr:William_Denning (dbr:John_Henry_Newman) }
  
  # Get birthplace of the person
  ?person dbo:birthPlace ?birthPlace .

  # Check if the birthplace is a country and get its religion
  OPTIONAL {
    ?birthPlace rdf:type dbo:Country .
    ?birthPlace dbo:religion ?religion .
  }

  # If not a country, check for city or region with associated religion
  FILTER NOT EXISTS { ?birthPlace rdf:type dbo:Country }
  OPTIONAL {
    ?birthPlace dbo:country ?country .
    ?country dbo:religion ?religion .
  }
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
582,47,val,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of Hirotaka Sugawara.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player WHERE {
  # Find Kazuaki Nagasawa's child
  ?child dbo:parent <http://dbpedia.org/resource/Kazuaki_Nagasawa> .
  
  # Find Hirotaka Sugawara's residence
  ?sugawara foaf:based_near ?residence .
  FILTER(?sugawara = <http://dbpedia.org/resource/Hirotaka_Sugawara>)
  
  # Determine the father of that child who is an athlete, soccer manager, and sports manager
  ?child dbo:parent ?player .
  ?player a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
445,47,val,"Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the residence, that is a country, of Anna Sharkey.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  # Find an entity established on 1820-03-10
  ?entity dbo:foundingDate ""1820-03-10""^^xsd:date ;
          dbo:awardee ?awardee .

  # Get the country where Anna Sharkey resides
  dbr:Anna_Sharkey dbo:residenceCountry ?country .

  # Ensure the awardee is in the same country as Anna Sharkey
  ?awardee dbo:residenceCountry ?country .

  # Retrieve the death place of the awardee
  ?awardee dbo:deathPlace ?deathPlace .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
417,55,val,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of the father of Frederick IX of Denmark.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Frederick IX of Denmark's father
  ?frederickIXFather dbo:child dbr:Frederick_IX_of_Denmark .
  
  # Frederick Francis III's child who is royalty and their child
  ?frederickFrancisChild dbo:parent ?frederickFrancisIII ;
                        a dbo:RoyalFamilyMember .
  ?grandchild dbo:parent ?frederickFrancisChild .

  # Count Ingolf of Rosenborg's parent who is royalty
  ?countIngolfParent dbo:child dbr:Count_Ingolf_of_Rosenborg ;
                     a dbo:RoyalFamilyMember .

  # Spouse of the parent (royalty) of Count Ingolf of Rosenborg
  ?spouse dbo:spouse ?countIngolfParent .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
417,46,val,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the father of Frederick IX of Denmark.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Frederick IX of Denmark
  ?frederickIX a dbo:Monarch ;
               dbp:father ?fatherFrederickIX .

  # Knud, Hereditary Prince of Denmark
  ?knud a dbo:Person ;
        dbp:child ?commonChild .

  # Common child between Knud and Frederick IX's father
  ?commonChild dbp:parent ?fatherFrederickIX .
  ?commonChild dbp:parent ?royalParent .

  # Determine which parent is royalty
  FILTER (?royalParent != ?fatherFrederickIX) .
  
  # Find the spouse of this royal parent
  ?royalParent dbo:spouse ?spouse .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
987,43,val,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of Dado Polumenta and entity in Montenegro.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorBirthPlace ?dadoBirthPlace ?montenegroEntity WHERE {
  # Find a film with Emir Hadžihafizbegović
  ?film dbo:starring dbr:Emir_Hadžihafizbegović .
  
  # Find an actor from that film who is also in a show
  ?film dbo:starring ?actor .
  ?show dbo:starring ?actor .
  
  # Get the birthplace of this actor
  ?actor dbp:birthPlace ?actorBirthPlace .

  # Get the birthplace of Dado Polumenta
  dbr:Dado_Polumenta dbp:birthPlace ?dadoBirthPlace .

  # Find an entity in Montenegro
  ?montenegroEntity dbo:country dbr:Montenegro .
}
```",5,6,6,3,3,3,3,71,1,960,0,0.001040582726326743,1.0,0.002079002079002079
917,42,val,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of the father of Kamehameha IV and child of Kekūanāoʻa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Kamehameha IV and his children
  dbr:Kamehameha_IV a dbo:Monarch ;
                    dbo:child ?child .

  # Identify the child who is royalty
  ?child dbo:royalty true .

  # Father of Kamehameha IV (Kekūanāoʻa)
  dbr:Kamehameha_IV dbo:father dbr:Ke_Kuana_o_ka_Lani .

  # Child of Kekūanāoʻa and the royal child
  ?child2 dbo:parent dbr:Ke_Kuana_o_ka_Lani ;
          dbo:parent ?royalChild .

  # Parent of this individual
  ?child2 dbo:parent ?parent .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
715,48,val,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryConflict WHERE {
  # Find Carlos Franco Iribarnegaray and his associations
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@en .
  
  # Check if he is a native of Morocco
  ?person dbo:nationality dbr:Morocco .

  # Identify any government roles or organizations he led
  OPTIONAL {
    ?office dbo:head ?person ;
            a dbo:GovernmentAgency ;
            a dbo:Organization .
  }

  # Find military conflicts where he was a commander
  ?militaryConflict dbo:commander ?person .
  
  # Return the person as commander and the military conflict
  BIND(?person AS ?commander)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
47,48,val,"Give me the office of the awardee of Padma Vibhushan and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?officeAwardee ?politician ?officePolitician
WHERE {
  # Find Padma Vibhushan awardees
  ?awardee dbo:honoraryAward dbr:Padma_Vibhushan .
  
  OPTIONAL { 
    ?awardee dbo:positionHeld ?officeAwardee .
  }
  
  # Find politicians involved in Operation Green Hunt
  ?politician dbo:occupation dbp:Politician ;
              dbo:participatedIn dbr:Operation_Green_Hunt .
  
  OPTIONAL {
    ?politician dbo:positionHeld ?officePolitician .
  }
}
```",5,6,6,3,2,3,3,71,0,0,22,0,0.0,0
791,54,val,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and spouse of the spouse, that is a royalty, of Emperor Takakura and father of Emperor Go-Toba.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
    # Step 1: Find Emperor Go-Shirakawa's grandchild who is an office holder and royalty
    ?grandchild dbo:parent dbr:Emperor_Go-Shirakawa ;
               a dbo:Monarch ;
               dbo:officeHolder true .
    
    # Step 2: Find spouse of the spouse (who is royalty) of Emperor Takakura
    ?spouseOfSpouse dbo:spouse ?emperorTakakuraSpouse ;
                   a dbo:RoyalFamilyMember .
    ?emperorTakakuraSpouse dbo:spouse dbr:Emperor_Takakura .

    # Step 3: Find father of Emperor Go-Toba
    ?father dbo:child dbr:Emperor_Go-Toba .

    # Combine conditions to find the person who fits all criteria
    ?person rdf:type dbo:Monarch ;
            dbo:parent ?grandchild ;
            dbo:spouse ?spouseOfSpouse ;
            dbo:parent ?father .

    # Step 4: Find predecessor of this person
    ?predecessor dbo:successor ?person .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
917,53,val,"Give me the child of Kekūanāoʻa and child of the father of Kamehameha IV and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfKekuanaoa ?royalChild ?parentOfRoyalChild
WHERE {
  # Kekūanāoʻa's child
  dbr:Kekuanaoa dbo:child dbr:Bernice_Pauahi_Bishop .
  
  # Kamehameha IV's father and his child
  dbr:Kamehameha_IV dbo:father dbr:Kamehameha_I .
  dbr:Kamehameha_I dbo:child dbr:Kamehameha_IV .

  # Mayor of Hawaiian Kingdom's royal child and their parent
  ?mayor dbo:position ""Mayor""@en ;
         dbo:child ?royalChild .
  
  FILTER EXISTS { ?royalChild a dbo:Monarch . }
  
  ?parentOfRoyalChild dbo:child ?royalChild .

  # Find the intersection of these relationships
  VALUES (?childOfKekuanaoa) { dbr:Bernice_Pauahi_Bishop }
  VALUES (?royalChild) { ?royalChild }
  VALUES (?parentOfRoyalChild) { ?parentOfRoyalChild }

}
```

This query assumes:
- Bernice Pauahi Bishop is the child of Kekūanāoʻa.
- The mayor's royal child and their parent are identified through DBpedia resources.",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
274,23,val,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound and band member of the person born, that is a musical artist, as John Birks Gillespie.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Step 1: Find the actor associated with ""Imagine the Sound""
  ?actor dbo:associatedActors dbr:Imagine_the_Sound .
  
  # Step 2: Ensure this actor is also a musical artist
  ?actor a dbo:MusicalArtist .

  # Step 3: Find band members of Dizzy Gillespie
  ?bandMember dbo:member dbr:Dizzy_Gillespie ;
              a dbo:MusicalArtist .

  # Step 4: Match the actor from step 1 with the band member from step 3
  FILTER (?actor = ?bandMember)
  
  # Return the artist
  BIND(?actor AS ?artist)
}
```",4,6,5,2,2,2,3,28,0,0,4,0,0.0,0
236,15,val,"Give me the party member of the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts and party member of Democratic-Republican Party.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic-Republican_Party> . ?v1 <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?administration WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolderOf dbr:Quincy,_Massachusetts ;
          dbo:partyMemberOf dbr:Democratic-Republican_Party .
  
  ?person dbo:memberOfOrganization ?administration .
}
```

This query does the following:
- Selects individuals (`?person`) who are politicians.
- Ensures they held an office in Quincy, Massachusetts.
- Confirms their membership in the Democratic-Republican Party.
- Retrieves the administration or organization (`?administration`) to which they belonged.",4,7,5,3,2,3,2,20,0,0,18,0,0.0,0
382,17,val,"Give me the birthplace of Björn Joppe and landmark at elevation of the award of the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. <http://dbpedia.org/resource/Björn_Joppe> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v0 <http://dbpedia.org/property/awards> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthplace ?landmark WHERE {
  # Björn Joppe's birthplace
  dbr:Björn_Joppe dbo:birthPlace ?birthplace .

  # Harry Combes' award (assuming it is a specific known award)
  dbr:Harry_Combes dbo:award ?award .
  
  # Find the reference number or identifier of the award
  ?award dbo:referenceNumber ?referenceNumber .

  # Landmark with elevation equal to the award's reference number
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = ?referenceNumber)
}
```

This query assumes:
- Björn Joppe and Harry Combes have entries in DBpedia.
- The award has a `referenceNumber` property, which is used to find the elevation of a landmark.",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
865,49,val,"Give me the father of the child of the father of Abul Maal Abdul Muhith and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfFather WHERE {
  # Step 1: Find Abul Maal Abdul Muhith's father
  ?abulMaal a dbo:Person ;
            dbo:father ?fatherOfAbulMaal .

  # Step 2: Ram Jaipal Singh Yadav's residence that is a country
  dbr:Ram_Jaipal_Singh_Yadav dbo:residence ?countryResidence .
  ?countryResidence a dbo:Country .

  # Step 3: Find the father of Abul Maal Abdul Muhith who is native to that country
  ?fatherOfAbulMaal dbo:nativePlace ?nativePlace .
  FILTER (?nativePlace = ?countryResidence)
  
  # The result we want is this person
  BIND(?fatherOfAbulMaal AS ?fatherOfFather)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
965,49,val,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseOfSpouse WHERE {
  # Princess Victoria of Hesse and by Rhine's spouse
  ?princess a dbo:Person ;
            rdfs:label ""Princess Victoria of Hesse and by Rhine""@en .
  
  ?princess dbo:spouse ?spouse .

  # Spouse of the spouse is Princess Victoria herself
  ?spouseOfSpouse a dbo:Person ;
                  rdfs:label ""Victoria, Princess Royal""@en .

  # George Mountbatten, 2nd Marquess of Milford Haven's parent
  ?georgeMountbatten a dbo:Person ;
                     dbp:birthName ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  
  ?georgeMountbatten dbo:parent ?spouseOfSpouse .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
124,44,val,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in Mahdist War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?kitchenerForce ?rhodesForce WHERE {
  # Herbert Kitchener, 1st Earl Kitchener
  ?kitchener a dbo:MilitaryPerson ;
             foaf:name ""Herbert Kitchener"" ;
             dbo:commanderOf ?eventKitchener .
  
  ?eventKitchener a dbo:SocietalEvent, dbo:MilitaryConflict .

  OPTIONAL {
    ?eventKitchener dbo:militaryForce ?kitchenerForce .
  }

  # Frank Rhodes (British Army officer)
  ?rhodes a dbo:MilitaryPerson ;
          foaf:name ""Frank Rhodes"" ;
          dbo:commanderIn ?eventRhodes .

  ?eventRhodes a dbo:Event, dbo:MilitaryConflict, dbo:SocietalEvent ;
               dbo:militaryForce ?rhodesForce .
  
  # Frank Rhodes as commander in the Mahdist War
  OPTIONAL {
    ?mahdistWar dbr:Mahdist_War ;
                dbo:commander ?rhodes .
  }
}
```",5,10,6,2,3,3,3,71,0,0,3,0,0.0,0
892,48,val,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and entity in the profession of the true self of Enrico Crolla.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?entity a dbo:Region .
  ?entity a dbo:Settlement .
  ?entity a dbo:AdministrativeRegion .
  ?entity dbo:country dbr:Italy .
  
  # Entity in the administration of Democratic Party (Italy)
  ?adminEntity dbo:memberParty dbr:Democratic_Party_(Italy) .
  ?adminEntity dbo:administrativeBody ?entity .

  # Profession of Enrico Crolla
  ?enrico dbo:profession ?profession .
  ?enrico rdfs:label ""Enrico Crolla""@it .
  
  # Linking the profession to the entity
  ?entity dbo:relatedThroughProfession ?profession .
}
```

This query attempts to find entities that are regions, settlements, and administrative regions in Italy, linked to the Democratic Party (Italy) through some administrative role, and related to the profession of Enrico Crolla.",5,9,6,3,2,3,3,71,0,0,587,0,0.0,0
273,16,val,Give me the spouse of the child of Giovanni Agnelli and parent of the alumnus of University of Turin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Giovanni Agnelli's child
  ?child dbo:parent dbr:Giovanni_Agnelli .
  
  # Spouse of the child
  ?child dbo:spouse ?spouse .

  # Check if this spouse is a parent of an alumnus from University of Turin
  ?alumnus dbo:almaMater dbr:University_of_Turin ;
           dbo:parent ?spouse .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
216,21,val,Give me the administration of the designer of Woolfe: The Red Hood Diaries and party of Campbell Newman and office of Tim Nicholls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v0 . ?result <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?designerAdministration ?newmanParty ?nichollsOffice
WHERE {
  # Designer of Woolfe: The Red Hood Diaries
  ?game dbo:title ""Woolfe: The Red Hood Diaries""@en .
  ?game dbo:creator ?designer .
  ?designer dbo:politicalAffiliation ?party .
  OPTIONAL { 
    ?party dbo:member ?politician .
    ?politician dbo:officeHeld ?administration .
    BIND(?administration AS ?designerAdministration)
  }

  # Campbell Newman's Party Affiliation
  dbr:Campbell_Newman dbo:partyAffiliation ?newmanParty .

  # Tim Nicholls' Office
  dbr:Tim_Nicholls dbo:officeHeld ?nichollsOffice .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
445,55,val,"Give me the death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of Anna Sharkey and entity in the award of George H. Cameron.",SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?country ?awardEntity
WHERE {
  # Awardee of Royal Astronomical Society
  ?awardee dbo:award <http://dbpedia.org/resource/Royal_Astronomical_Society> .
  
  # Death place of the awardee
  ?awardee dbo:deathPlace ?deathPlace .

  # Country where Anna Sharkey resides
  dbr:Anna_Sharkey dbo:residenceLocation ?country .

  # Entity in the award of George H. Cameron
  ?georgeCameronAward dbo:award <http://dbpedia.org/resource/George_H._Cameron> .
  ?georgeCameronAward dbo:entity ?awardEntity .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
124,53,val,"Give me the military force of Battle of Tamai and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?commander ?militaryForce ?australianUnit
WHERE {
  # Identify the Battle of Tamai as a societal event and military conflict
  dbr:Battle_of_Tamai dbo:type ?type .
  FILTER (CONTAINS(LCASE(STR(?type)), ""societal event"") && CONTAINS(LCASE(STR(?type)), ""military conflict""))

  # Find the commander associated with the Battle of Tamai
  OPTIONAL {
    dbr:Battle_of_Tamai dbo:commander ?commander .
    FILTER (CONTAINS(LCASE(STR(?commander)), ""herbert kitchener""))
  }

  # Identify the military force involved in the battle
  OPTIONAL {
    dbr:Battle_of_Tamai dbo:militaryForce ?militaryForce .
  }

  # Find the connection to 'A' Battery, Royal Australian Artillery
  OPTIONAL {
    dbr:A_Battery,_Royal_Australian_Artillery dbo:partOf ?australianUnit .
    FILTER (CONTAINS(LCASE(STR(?australianUnit)), ""australia"") && CONTAINS(LCASE(STR(?australianUnit)), ""military unit""))
  }
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
433,54,val,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in Musician and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?finalArtist WHERE {
  # Step 1: Find Ornette Coleman's associated musical artist who is both an artist and a musician
  ?coleman dbo:associatedMusicalArtist ?artist1 .
  ?artist1 rdf:type dbo:Musician ;
           rdf:type dbo:Artist .

  # Step 2: Find Paul Chambers' associated musical artist who is both a musician and an artist
  ?chambers dbp:birthName ""Paul Laurence Dunbar Chambers Jr.""^^xsd:string ;
            dbo:associatedMusicalArtist ?artist2 .
  ?artist2 rdf:type dbo:Musician ;
           rdf:type dbo:Artist .

  # Step 3: Find the associated musical artist of the person identified in step 1
  ?artist1 dbo:associatedMusicalArtist ?finalArtist .
  ?finalArtist rdf:type dbo:Musician .
}
```",6,12,7,3,3,3,3,71,0,0,3,0,0.0,0
216,50,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v4 . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerInCoach WHERE {
  # Find Džemal Berberović
  dbr:Džemal_Berberović a dbo:SoccerPlayer ;
                        dbo:birthDate ""1983-12-20""^^xsd:date .

  # Find the player's organization (sports club and soccer club)
  ?playerInCoach a dbo:SoccerPlayer, dbo:SportsManager, dbo:SoccerManager ;
                 dbo:team dbr:Some_Sports_Club ; # Replace with actual club resource
                 dbo:team a dbo:SportsClub, dbo:SoccerClub .

  # Ensure the player is associated with Džemal Berberović's team
  ?playerInCoach dbo:team ?club .
  ?džemalTeam dbo:member dbr:Džemal_Berberović ;
              dbo:team ?club .
}
```

**Notes:**
- Replace `dbr:Some_Sports_Club` with the actual DBpedia resource for the sports club associated with Džemal Berberović.
- The query assumes that the relationships and classes are correctly modeled in DBpedia. Adjustments may be needed based on the exact schema.",5,14,6,3,2,3,3,71,0,0,1,0,0.0,0
495,17,val,Give me the child of Frederick I of Württemberg and father of the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_I_of_Württemberg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfFrederick WHERE {
    # Step 1: Identify Princess Pauline of Württemberg
    ?pauline a dbo:Person ;
        foaf:name ""Pauline, Princess of Württemberg""@en ;
        dbo:birthDate ?birthDate .

    FILTER(?birthDate >= ""1810-01-01""^^xsd:date && ?birthDate <= ""1856-12-31""^^xsd:date) .
    
    # Step 2: Find her parent
    ?pauline dbo:parent ?parent .

    # Step 3: Determine the child of that parent
    ?childOfParent a dbo:Person ;
        dbo:parent ?parent .

    # Step 4: Identify Frederick I of Württemberg's children
    dbr:Friedrich_I_of_W%C3%BCrttemberg dbo:child ?frederickChild .

    # Step 5: Find which one is also a parent of the child identified in step 3
    ?frederickChild dbo:parent ?childOfParent .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
507,47,val,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of the person born as Anne Voase Coates.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v4 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?director WHERE {
  # Find the person born on June 17, 1919
  ?person a dbo:Person ;
          dbo:birthDate ""1919-06-17""^^xsd:date ;
          dbo:spouse dbr:Anne_Voase_Coates .

  # Find movies directed by this person that are both a movie and a work
  ?movie dbo:director ?person ;
         a dbo:Film, dbo:CreativeWork .

  # Get the director of these movies
  OPTIONAL { ?movie dbo:director ?director }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
433,47,val,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?finalArtist WHERE {
  # Step 1: Find Paul Chambers' associated musical artist who is also an artist
  ?chambers a dbo:Musician ;
            foaf:name ""Paul Laurence Dunbar Chambers Jr.""@en .
  
  ?chambers dbp:associatedMusicalArtist ?artist1 .
  ?artist1 a dbo:Artist, dbo:Musician .

  # Step 2: Find the associated musical artist of the above artist who is also an artist
  ?artist1 dbp:associatedMusicalArtist ?artist2 .
  ?artist2 a dbo:Artist, dbo:Musician .

  # Step 3: Find the associated musical artist of Ornette Coleman
  ?coleman a dbo:Musician ;
           foaf:name ""Ornette Coleman""@en .
  
  ?artist2 dbp:associatedMusicalArtist ?finalArtist .
}
```",5,11,6,3,2,3,3,71,0,0,10,0,0.0,0
417,41,val,"Give me the child of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the father of Frederick IX of Denmark.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Alexandrine of Mecklenburg-Schwerin's child
  ?alexChild dbo:parent dbr:Alexandrine_of_Mecklenburg-Schwerin ;
             a dbo:Person .

  # Spouse of Alexandrine's parent (either father or mother)
  OPTIONAL { ?alexParent dbp:spouse ?spouse . }
  FILTER (?alexParent IN (dbr:Frederick_Frederik_Casimir_of_Mecklenburg-Schwerin, dbr:Princess_Alexandrina_of_Prussia) )

  # Check if the spouse is royalty
  OPTIONAL { ?spouse dbo:royalTitle ?title . }
  FILTER EXISTS { ?spouse dbo:royalTitle ?title }

  # Count Ingolf of Rosenborg's parent
  ?ingolfParent dbo:child dbr:Count_Ingolf_of_Rosenborg ;
                a dbo:Person .

  # Child of Frederick IX of Denmark's father (Christian X)
  ?frederickChild dbo:parent dbr:Christian_X_of_Denmark ;
                  a dbo:Person .

  # Find the person who satisfies all conditions
  FILTER (?spouse = ?ingolfParent && ?alexChild = ?frederickChild)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
102,15,val,"Give me the manager of the player in the member, that is a soccer player, of England women's national football team and native of Dewsbury.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Dewsbury> . ?v0 <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?player a dbo:SoccerPlayer ;
          dbo:nationality dbr:England ;
          dbo:birthPlace dbr:Dewsbury ;
          dbo:memberOfTeam dbr:England_women's_national_football_team .

  ?team dbp:coach ?manager .
  
  FILTER(?team = ?player)
}
```

This query does the following:
- It selects players who are soccer players (`dbo:SoccerPlayer`), have nationality England, were born in Dewsbury, and are members of the England women's national football team.
- It then finds the manager (`dbp:coach`) of that team.",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
130,16,val,"Give me the figure known as the film, that is a soccer club and an organisation, of Candice Storey Lee and entity in the administration, that is American, of .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> """"@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v2 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?soccerClub WHERE {
  # Find Candice Storey Lee's film roles
  ?film dbo:starring dbr:Candice_Storey_Lee .
  
  # Find soccer clubs she is associated with as an administrator
  ?soccerClub dbo:administrator dbr:Candice_Storey_Lee ;
              a dbo:SoccerClub .

}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
212,7,val,"Give me the birthplace of KODA (singer) and birthplace of the professional, that is a musical artist and an artist, in Singer, rapper, CEO, Facilities and Project Manager.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Singer, rapper, CEO, Facilities and Project Manager""@en . <http://dbpedia.org/resource/KODA_(singer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?kodaBirthplace ?kanyeWestBirthplace WHERE {
  # Koda (singer)
  dbr:Koda_(singer) dbo:birthPlace ?kodaBirthplace .

  # Kanye West
  dbr:Kanye_West dbo:birthPlace ?kanyeWestBirthplace .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
18,22,val,Give me the professional in the award of Ana María Sánchez de Ríos and parent of the professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalOccupation WHERE {
  # Find Ana María Sánchez de Ríos
  ?person a dbo:Person ;
          rdfs:label ""Ana María Sánchez de Ríos""@en .
  
  # Ensure she has received awards
  ?person dbo:award ?award .

  # Check if she is a parent to someone whose profession is acting
  ?child dbo:profession dbr:Acting ;
         dbo:parent ?person .

  # Retrieve her professional occupation
  ?person dbo:occupation ?professionalOccupation .
  
  FILTER(LANG(?professionalOccupation) = 'en')
}
```",4,4,5,2,2,2,3,28,0,0,200,0,0.0,0
18,23,val,"Give me the professional in the award of Ana María Sánchez de Ríos and alumnus of the figure known, that is an educational institution, as Saints.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""Saints""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find Ana María Sánchez de Ríos and her award
  ?award dbo:recipient dbr:Ana_María_Sánchez_de_Ríos .
  
  # Find the professional associated with this award
  ?award dbo:profession ?professional .

  # Find the educational institution known as ""Saints""
  ?institution rdfs:label ""Saints""@en .
  
  # Ensure the professional is an alumnus of this institution
  ?professional dbo:almaMater ?institution .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
465,54,val,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of the child of Alfonso I d'Este and successor of Renée of France.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Elizabeth of Austria (1526–1545)
  ?elizabeth a dbo:Person ;
             foaf:name ""Elizabeth of Austria"" ;
             dbp:birthYear ""1526""^^xsd:gYear ;
             dbp:deathYear ""1545""^^xsd:gYear .

  # Parent of Elizabeth
  ?parent dbo:child ?elizabeth .
  
  # Child of the parent who is royalty
  ?royalChild dbo:child ?parent ;
              a dbo:RoyalFamilyMember .

  # Spouse of the royal child
  ?royalChild dbp:spouse ?spouse .

  # Alfonso I d'Este's child and their successor
  ?alfonsoChild dbo:child <http://dbpedia.org/resource/Alfonso_I_d%27Este> .
  ?successorAlfonso dbo:succeededBy ?alfonsoChild .

  # Successor of Renée of France
  ?renéeSuccessor dbo:succeededBy <http://dbpedia.org/resource/Ren%C3%A9e_of_France> .

  # Linking the successor to the spouse
  FILTER (?spouse = ?successorAlfonso || ?spouse = ?renéeSuccessor)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
93,15,val,"Give me the death place of John Weir Troy and capital of the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/John_Weir_Troy> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?capitalCity WHERE {
  # Get John Weir Troy's death place
  dbr:John_Weir_Troy dbo:placeOfBirth ?birthPlace .
  OPTIONAL { dbr:John_Weir_Troy dbo:deathPlace ?deathPlace . }

  # Get the region and settlement for Clam Cove Pictograph Site
  dbr:Clam_Cove_Pictograph_Site dbo:locatedIn ?region .
  
  # Get the capital of that region
  ?region a dbo:Region ;
          dbo:capital ?capitalCity .

}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
216,23,val,Give me the administration of the designer of Woolfe: The Red Hood Diaries and office of the mayor of Ros Bates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v1 . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?designerAdministration ?mayorOffice WHERE {
  # Find the designer of ""Woolfe: The Red Hood Diaries""
  ?game dcterms:creator ?designer .
  ?designer foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""woolfe: the red hood diaries"")) .

  # Get the administration they were part of
  OPTIONAL {
    ?designer dbo:positionHeld ?position .
    ?position dbo:organization ?administration .
    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", STR(?administration))) AS ?designerAdministration)
  }

  # Find Ros Bates as a mayor
  ?mayor foaf:name ""Ros Bates"" .
  
  # Get the office or city she was mayor of
  OPTIONAL {
    ?mayor dbo:positionHeld ?position .
    ?position dbo:organization ?office .
    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", STR(?office))) AS ?mayorOffice)
  }
  
  # Ensure we are looking at the game ""Woolfe: The Red Hood Diaries""
  VALUES ?game { dbr:Woolfe:_The_Red_Hood_Diaries }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
443,22,val,"Give me the landmark at elevation of the award of William Shepherd and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/elevation> ?v2 . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark WHERE {
  # Find William Shepherd's award
  dbr:William_Shepherd dbo:award dbr:Award1 .
  
  # Get the elevation of this award (assuming it has an elevation property)
  dbr:Award1 dbp:elevation ?elevation .

  # Find a person born on 1949-11-20 who is both a musical artist and an artist
  ?person dbo:birthDate ""1949-11-20""^^xsd:date ;
          rdf:type dbo:MusicalArtist, dbo:Artist .
  
  # Find a landmark at the same elevation as the award
  ?landmark dbo:elevation ?elevation .
}
```

**Notes:**
- Replace `dbr:Award1` with the actual resource for William Shepherd's award.
- Ensure that the properties like `dbo:award`, `dbp:elevation`, and `dbo:elevation` are correctly used based on DBpedia's schema.
- The query assumes that the elevation is a property of both awards and landmarks.",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
456,40,val,"Give me the professional in  and band of Alan Doyle and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?band ?spouseName WHERE {
  # Alan Doyle's profession and band
  dbr:Alan_Doyle dbo:occupation ?profession .
  OPTIONAL { dbr:Great_Big_Sea dbo:member dbr:Alan_Doyle . }
  
  # Actor who worked with Ross Newton in both a movie and TV show
  ?actor dbo:spouse ?spouse .
  ?movie dbo:starring ?actor ;
         dbo:starring dbr:Ross_Newton .
  ?tvShow dbo:starring ?actor ;
          dbo:starring dbr:Ross_Newton .

  # Get spouse's name
  ?spouse rdfs:label ?spouseName .
  
  FILTER (lang(?spouseName) = 'en')
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
417,42,val,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of Christian X of Denmark and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild WHERE {
  # Frederick Francis III and his child who is a royalty
  dbr:Friedrich_Frederick_Carl_Ludwig_Georg (_Frederick_Francis_III) dbo:spouse ?parent;
    dbo:child ?royaltyChild.

  # The royalty child must be the spouse of Count Ingolf of Rosenborg
  ?royaltyChild dbo:spouse dbr:Ingolf_of_Rosenborg.
  
  # Find the child of this royalty child (who is a parent)
  ?royaltyChild dbo:child ?childOfChild.

  # Ensure the child of child is also a royalty
  ?childOfChild rdf:type dbo:Monarch .

  # The child of child must be related to Christian X of Denmark
  ?childOfChild dbo:parent dbr:Christian_X_of_Denmark .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
773,48,val,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of the father of the parent of Bernard (son of Charles the Fat).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Louis the German's children
  ?child dbo:parent dbr:Louis_the_German .

  # Step 2: Child who is royalty
  ?child a dbo:Monarch .

  # Step 3: Spouse of this child's father (Louis the German)
  ?spouse dbp:spouse dbr:Louis_the_German .

  # Step 4: Bernard, son of Charles the Fat
  ?bernard dbo:parent dbr:Charles_the_Fat ;
           rdfs:label ""Bernard""@en .
  
  # Find parent of Bernard
  ?parent dbo:child ?bernard .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
129,23,val,Give me the associated musical artist of the person born as Tahj Malik Chandler and professional in the mayor of 1999 West Dunbartonshire Council election.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person rdfs:label ""The Game""@en .
  ?person dbo:birthName Tahj Malik Chandler .
  ?person dbo:profession ?occupation .
  FILTER(CONTAINS(LCASE(STR(?occupation)), ""music"") || CONTAINS(LCASE(STR(?occupation)), ""singer"") || CONTAINS(LCASE(STR(?occupation)), ""rapper""))
  OPTIONAL { ?person dbo:musicArtist ?artist . }
}
```",4,4,5,2,2,2,3,28,0,0,7,0,0.0,0
507,45,val,Give me the director of Entertaining Mr Sloane (film) and professional in the profession of the person born on 1966-02-18 and spouse of Anne V. Coates.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?director ?profession
WHERE {
  # Find the director of ""Entertaining Mr Sloane"" (film)
  dbr:Entertaining_Mr_Sloane_(film) dbo:director ?director .

  # Find the person born on 1966-02-18
  ?person dbo:birthday ""1966-02-18""^^xsd:date .
  
  # Check if this person is married to Anne V. Coates
  ?person foaf:mbox <http://dbpedia.org/resource/Anne_V._Coates> .

  # Get the profession of this person
  ?person dbo:profession ?profession .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
573,55,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentPolitician WHERE {
  # Step 1: Identify the author of ""Exchequer Standards""
  ?author dbo:work ?exchequerStandards .
  ?exchequerStandards rdfs:label ""Exchequer Standards""@en .

  # Step 2: Find the parent who is a politician and an office holder
  ?parentPolitician dbo:child ?author ;
                   a dbo:Politician ;
                   dbo:officeHolder true .

  # Step 3: Locate the residence where William J. Phelan died
  ?phelan dbr:William_J._Phelan ;
          dbo:placeOfDeath ?settlement .
  
  # Step 4: Determine the administration where Charlie Baker was in charge
  ?baker dbr:Charlie_Baker ;
         dbo:administrativePost ?administration .

  # Step 5: Find the person who died at both the settlement and region
  ?person dbo:placeOfDeath ?settlement, ?administration .
}
```",6,10,7,2,3,3,3,71,0,0,2,0,0.0,0
582,54,val,"Give me the figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of Hirotaka Sugawara.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?figure ?residence WHERE {
  ?person dbo:childOf dbr:Kazuaki_Nagasawa .
  ?person foaf:name ?name .
  FILTER(CONTAINS(?name, ""--10-19"")) .
  
  ?person dbo:sportRole [
    a dbo:Athlete ;
    dbo:sportTeam ?team .
  ] .
  
  ?person dbo:occupation [
    a dbo:SoccerManager ;
    dbo:sportTeam ?team2 .
  ] .
  
  ?person dbo:occupation [
    a dbo:SportsManager .
  ] .

  OPTIONAL { 
    ?hirotaka foaf:name ""Hirotaka Sugawara"" .
    ?hirotaka dbo:residence ?residence .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
965,43,val,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Step 1: Identify George Mountbatten, 2nd Marquess of Milford Haven
  dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbo:spouse dbr:Prince_Louis_of_Battenberg .

  # Step 2: Find their child who is royalty
  ?child dbo:parent dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven .
  ?child dbo:parent dbr:Prince_Louis_of_Battenberg .
  ?child a dbo:Royal .

  # Step 3: Identify the politician born on May 24, 1854
  ?politician dbo:birthday ""1854-05-24""^^xsd:date .
  ?politician a dbo:Politician .

  # Step 4: Find the parent of this royal child
  ?child dbo:parent ?parent .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
417,48,val,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Knud, Hereditary Prince of Denmark
  ?knud a dbo:Person ;
        foaf:name ""Knud, Hereditary Prince of Denmark""@en .

  # Step 2: Find his child who is royalty
  ?child dbp:parent ?knud ;
         a dbo:Monarch .

  # Step 3: Identify Frederick Francis III, Grand Duke of Mecklenburg-Schwerin
  ?frederick a dbo:Person ;
             foaf:name ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin""@en .

  # Step 4: Find his grandchild who is royalty
  ?grandchild dbp:parent ?parent ;
              a dbo:Monarch .
  
  # Step 5: Determine the parent of this grandchild (who must be a child of Frederick Francis III)
  ?parent dbp:parent ?frederick .

  # Ensure the grandchild's parent is also royalty
  ?parent a dbo:Monarch .

  # Find the spouse of this parent
  ?spouse dbp:spouse ?parent .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
433,43,val,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and associated musical artist of Paul Chambers and professional in Musician.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find Ornette Coleman's associated artist who is also a musical artist and an artist
  ?artist1 dbo:associatedMusicalArtistOrchestraOrBandOrChoir dbr:Ornette_Coleman .
  ?artist1 rdf:type dbo:Musician .

  # Step 2: From this artist, find another musical artist who is also an artist
  ?artist2 dbo:associatedMusicalArtistOrchestraOrBandOrChoir ?artist1 .
  ?artist2 rdf:type dbo:Musician .

  # Step 3: Find Paul Chambers' associated artist who is a musician and a musical artist
  ?artist3 dbo:associatedMusicalArtistOrchestraOrBandOrChoir dbr:Paul_Chambers .
  ?artist3 rdf:type dbo:Musician .

  # Step 4: From this artist, find another musician
  ?finalArtist dbo:associatedMusicalArtistOrchestraOrBandOrChoir ?artist3 .
  ?finalArtist rdf:type dbo:Musician .
}
```",5,9,6,3,3,3,3,71,0,0,3,0,0.0,0
976,50,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the person born as Mehmet Naci Bostancı.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/office> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayorOffice ?bostanciOffice WHERE {
  # Find Millet İttifakı
  VALUES ?millettifaki { dbr:Millet_İttifakı }
  
  # Find mayors who are politicians, office holders, and Turkish
  ?mayor dbo:nationality dbr:Turkey ;
         dbo:officeHolderOf ?city ;
         dbo:politicalParty ?party .
  FILTER (?party = ?millettifaki)
  
  # Ensure the mayor is a politician and an office holder
  ?mayor dbo:occupation dbr:Politician ;
         dbo:positionHeld ?mayorOffice .

  # Find Mehmet Naci Bostancı's office
  ?bostanci dbp:name ""Mehmet Naci Bostancı""@tr ;
            dbo:officeHolderOf ?cityBostanci ;
            dbo:positionHeld ?bostanciOffice .
  
  # Ensure Mehmet Naci Bostancı is Turkish
  ?bostanci dbo:nationality dbr:Turkey .
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
445,49,val,"Give me the entity in the residence, that is a country, of Anna Sharkey and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?awardEntity
WHERE {
  # Part 1: Find the country of residence for Anna Sharkey
  OPTIONAL {
    ?anna a dbo:Person ;
          foaf:name ""Anna Sharkey"" ;
          dbo:residence ?residence .
    ?residence dbo:country ?country .
  }

  # Part 2: Find the entity associated with an award in the Battle of Saint-Mihiel
  OPTIONAL {
    ?battle a dbo:MilitaryConflict ;
            foaf:name ""Battle of Saint-Mihiel"" ;
            dbo:award ?award .
    ?award dbo:recipient ?awardEntity .
  }
}
```",5,6,6,3,2,3,3,71,0,0,102,0,0.0,0
791,50,val,"Give me the father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Identify Emperor Takakura
  VALUES ?emperorTakakura { dbr:Takakura }

  # Step 2: Find his children who are royalty
  ?child dbo:parent ?emperorTakakura ;
         a dbo:Monarch .

  # Step 3: Determine the predecessor of one of these children in terms of succession
  ?predecessor dbo:succeededBy ?child .

  # Step 4: Identify this predecessor's child who is both an office holder and royalty
  ?grandChild dbo:parent ?predecessor ;
              a dbo:Monarch, dbo:OfficeHolder .

  # Step 5: Find the father of Emperor Takakura's child
  ?father dbo:child ?child .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
417,52,val,"Give me the child of the father of Frederick IX of Denmark and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of Alexandrine of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Frederick IX of Denmark's father and mother
  ?frederickIX dbo:father ?father .
  ?father dbo:spouse ?mother .

  # Knud, Hereditary Prince of Denmark and Alexandrine of Mecklenburg-Schwerin's child
  ?knud dbp:child ?child1 .
  ?alexandrine dbp:child ?child1 .

  # Check if the child is a royalty
  ?child dbo:spouse ?mother .
  ?child rdf:type dbo:Monarch .
}
```

This query assumes:
- The relationships are directly available in DBpedia.
- The `dbo:father`, `dbo:spouse`, and `dbp:child` properties are used to navigate family trees.
- The `rdf:type dbo:Monarch` is used to filter for royalty.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
326,16,val,"Give me the person decedent at the award, that is a country, of Adelbert Cronkhite and resident of the birthplace, that is a state and British, of David Jessel.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personDecedent WHERE {
  # Find an award associated with Adelbert Cronkhite
  ?award dbo:recipient dbr:Adelbert_Cronkhite .
  
  # The award should be linked to a country
  ?award dbo:country ?country .

  # Find David Jessel's birthplace
  dbr:David_Jessel dbo:birthPlace ?birthPlace .

  # The birthplace should be a state in Britain
  ?birthPlace rdf:type dbo:State .
  ?birthPlace dbo:country dbr:United_Kingdom .

  # Find the person decedent at the award
  ?award dbo:personDecedent ?personDecedent .
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
456,44,val,"Give me the band of the band, that is a musical artist, of Dean Brody and spouse of Danielle Spencer (Australian actress) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  # Find Dean Brody's band
  ?person dbo:stageName ""Dean Brody"" .
  ?person dbo:musicalArtist ?band .

  # Check if this person is the spouse of Danielle Spencer
  OPTIONAL { 
    ?spouse foaf:name ""Danielle Spencer""@en .
    ?spouse dbo:spouse ?person .
  }

  # Check for professional alter ego of The Shadow
  OPTIONAL {
    ?alias foaf:name ""The Shadow"" .
    ?alias dbo:alternateName ?person .
  }
}
```

This query attempts to find the band associated with Dean Brody and checks if he is linked as a spouse to Danielle Spencer and has an alias or alternate name related to The Shadow.",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
433,40,val,"Give me the professional in Musician and associated musical artist of Bill Evans and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?billEvansRole ?associatedArtistBillEvans 
       ?paulChambersPersona ?associatedArtistPaulChambers

WHERE {
  # Bill Evans
  dbr:Bill_Evans dbo:occupation ?billEvansRole .
  OPTIONAL { dbr:Bill_Evans dbo:associatedMusicalArtist ?associatedArtistBillEvans . }

  # Paul Chambers persona
  ?paulChambersPersona a dbo:Person ;
                      dbo:birthPlace ?place ;
                      dbo:profession [a dbo:Musician, dbo:Artist] .
  
  OPTIONAL { ?paulChambersPersona dbo:associatedMusicalArtist ?associatedArtistPaulChambers . }
}
```

This query does the following:
- Retrieves Bill Evans' occupation and any associated musical artists.
- Finds a person who is both a musician and an artist, with Paul Chambers as their persona, and retrieves any associated musical artists.",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
5,17,val,"Give me the birthplace of Gerald Regan and entity in the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Gerald_Regan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?band
WHERE {
  # Gerald Regan's birthplace
  dbr:Gerald_Regan dbo:birthPlace ?birthPlace .

  # Rubén Colón Tarrats' award and associated band
  OPTIONAL {
    ?award dbo:recipient dbr:Rubén_Colón_Tarrats .
    ?award dbo:associatedBand ?band .
  }
}
```",4,5,5,3,2,3,2,20,1,0,0,1.0,1.0,1.0
216,42,val,"Give me the player in the coach of Croatia national under-21 football team and player in Mario Ivanković and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?coach ?team WHERE {
  # Find the coach of Croatia national under-21 football team
  ?coach dbo:position dbr:Croatia_national_under-21_football_team_coach .
  
  # Ensure the coach is connected to Mario Ivanković's team
  ?coach dbo:memberOfTeam ?team .
  ?team dbo:manager dbr:Mario_Ivanković .

  # Check birth date and roles
  ?coach dbp:birthday ""1983-12-20""^^xsd:date ;
         a dbo:SoccerPlayer, dbo:SportsManager, dbo:SoccerCoach .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
645,41,val,"Give me the commander in the force of Carlos Asensio Cabanillas and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and leader of Ministry of the Army (Spain).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Carlos Asensio Cabanillas and his military force
  ?asensio a dbo:MilitaryPerson ;
           foaf:name ""Carlos Asensio Cabanillas"" ;
           dbo:militaryCommanderOf ?force .

  # Francisco Largo Caballero's role in the Spanish Civil War
  ?caballero a dbo:GovernmentOfficial ;
             foaf:name ""Francisco Largo Caballero"" ;
             dbo:ministerOf dbr:Ministry_of_the_Army_(Spain) ;
             dbo:participatedIn ?event .

  # The event is both a military conflict and a societal event
  ?event a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Linking the force to the event
  ?force dbo:participatedIn ?event .

  # Finding the commander of the force
  ?commander a dbo:MilitaryPerson ;
             dbo:militaryCommanderOf ?force .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
582,41,val,"Give me the reference to the residence of Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and figure known as --10-19.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  # Find Hirotaka Sugawara's residence
  OPTIONAL { 
    dbr:Hirotaka_Sugawara dbo:homeTown ?residence .
  }

  # Identify Masami Nagasawa's father
  OPTIONAL {
    ?father dbo:spouse dbr:Masami_Nagasawa ;
            a dbo:Athlete ;
            a dbo:SoccerManager ;
            a dbo:SportsManager .

    # Check if the father is known by the alias --10-19
    OPTIONAL { 
      ?alias rdfs:label ""--10-19""@en .
      ?father foaf:name ?alias .
    }
  }

  # Return the residence of Hirotaka Sugawara if conditions are met
  FILTER(?residence != '' && EXISTS{?father})
}
LIMIT 1",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
773,45,val,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of Carloman of Bavaria and spouse of Louis the German.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Carloman of Bavaria's father
  dbr:C._of_Bavaria dbo:father dbr:Pepin_of_Saxony .

  # Pepin of Saxony is an office holder and royalty, spouse of Louis the German
  dbr:Pepin_of_Saxony a dbo:OfficeHolder ;
                     a dbo:Royalty ;
                     dbo:spouse dbr:Louis_the_German .

  # Child of Pepin of Saxony who is royalty
  ?child dbo:father dbr:Pepin_of_Saxony .
  ?child a dbo:Royalty .

  # Parent of this child
  ?child dbo:parent ?parent .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
978,15,val,"Give me the band member of the professional, that is a musical artist and an artist, in the award of Michel Claparède and band member of Chicane (musician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chicane_(musician)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:award dbr:Mic_hel_Claparède_Award .
  ?person dbo:occupation dbr:Musical_artist .
  ?person dbo:occupation dbr:Artist .
  ?bandMemberRelation dbo:member ?person .
  ?bandMemberRelation dbo:band dbr:Chicane_(musician) .
}
```

This query does the following:
- Selects individuals (`?person`) who have received the ""Michel Claparède"" award.
- Ensures these individuals are both a musical artist and an artist by checking their occupation.
- Checks if they are a band member of Chicane.",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
465,53,val,"Give me the spouse of Archduchess Barbara of Austria and successor of the child, that is a royalty, of Anne of Brittany and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse ?successor1 ?successor2 WHERE {
  # Spouse of Archduchess Barbara of Austria
  ?barbara a dbo:Archduchess ;
           foaf:name ""Barbara of Austria"" .
  ?barbara dbp:spouse ?spouse .

  # Successor of the child, that is royalty, of Anne of Brittany
  ?anne a dbo:Queen ;
        foaf:name ""Anne of Brittany"" .
  ?anne dbo:child ?child1 .
  ?child1 a dbo:RoyalFamilyMember ;
          dbp:title ?title1 .
  ?child1 dbp:successor ?successor1 .

  # Successor of the child of the parent of Ercole II d'Este, Duke of Ferrara
  ?ercole2 a dbo:Duke ;
           foaf:name ""Ercole II d'Este"" .
  ?ercole2 dbo:parent ?parent .
  ?parent dbo:child ?child2 .
  ?child2 dbp:successor ?successor2 .

  # Ensure the successors are royalty
  ?successor1 a dbo:RoyalFamilyMember ;
              dbp:title ?title2 .
  ?successor2 a dbo:RoyalFamilyMember ;
              dbp:title ?title3 .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
933,40,val,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to Alan Warner and band of The Ramong Sound.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?artist WHERE {
  # The band in question is ""The Ramones""
  VALUES ?ramonesBand { dbr:The_Ramones }
  
  # Find artists associated with ""The Ramones""
  ?ramonesBand dbo:member ?member .
  
  # Ensure the member is also an artist and a musical artist
  ?member rdf:type dbo:MusicalArtist ;
          dbo:associatedBand ?band .

  # Check for any reference to Alan Warner in relation to ""The Ramones""
  OPTIONAL {
    ?relatedResource dbo:reference dbr:Alan_Warner .
    ?ramonesBand dbo:reference ?relatedResource .
  }
  
  FILTER EXISTS { ?member dbo:reference dbr:Alan_Warner . }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
791,48,val,"Give me the father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Identify Emperor Takakura
  ?emperor a dbo:Monarch ;
           dbp:name ""Emperor Takakura""@en .

  # Find his spouse who is royalty
  ?spouse dbo:spouseOf ?emperor ;
          a dbo:Person, dbo:Royalty .

  # Find their child who is royalty
  ?child dbo:parent ?emperor, ?spouse ;
         a dbo:Person, dbo:Royalty .

  # The father of this child is Emperor Takakura
  BIND(?emperor AS ?father)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
445,41,val,"Give me the entity in the residence, that is a country, of Anna Sharkey and death place of the awardee of Royal Astronomical Society and entity in United Kingdom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Anna Sharkey's residence country
  OPTIONAL { 
    dbr:Anna_Sharkey dbo:residenceLocation ?residence .
    ?residence dbo:country ?country .
  }

  # Death place of an awardee of the Royal Astronomical Society
  OPTIONAL {
    ?awardee dbo:awardReceived <http://dbpedia.org/resource/Royal_Astronomical_Society> .
    ?awardee dbo:deathPlace ?deathPlace .
  }

  # Entity in United Kingdom
  OPTIONAL {
    ?ukEntity dbo:country dbr:United_Kingdom .
  }

  # Find common entity that satisfies all conditions
  FILTER (?residence = ?deathPlace && ?residence = ?ukEntity)
  BIND(?residence AS ?entity)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
791,51,val,"Give me the predecessor of the child of Emperor Takakura and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Emperor Antoku and his father (Emperor Takakura)
  dbr:Emperor_Antoku dbo:father dbr:Emperor_Takakura .
  
  # Step 2: Child of Emperor Takakura who is royalty
  ?child dbo:parent dbr:Emperor_Takakura .
  ?child a dbo:Monarch .

  # Step 3: Father of the child (which is Emperor Takakura)
  ?child dbo:father dbr:Emperor_Takakura .

  # Step 4: Predecessor of Emperor Takakura
  dbr:Emperor_Takakura dbo:predecessor ?predecessor .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
573,51,val,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Step 1: Identify John Quincy Adams and his works
  dbr:John_Quincy_Adams dbo:author dbr:WorkByJohnQuincyAdams .
  
  # Step 2: Find the parent of John Quincy Adams who is a politician and office holder
  dbr:John_Quincy_Adams dbp:father ?parent .
  ?parent a dbo:Politician ;
          dbo:officeHolderOf ?office .

  # Step 3: Identify William J. Phelan's residence
  dbr:William_J._Phelan dbo:residence dbr:SettlementByWilliamJPhelan .

  # Step 4: Find persons who deceased at this settlement
  ?decedent dbp:placeOfDeath dbr:SettlementByWilliamJPhelan .
  
  # Step 5: Connect the decedent to the parent (if needed, based on additional context)
  # This step is more about ensuring logical connection if required by question context.
}
```

This query assumes:
- `dbr:WorkByJohnQuincyAdams` and `dbr:SettlementByWilliamJPhelan` are placeholders for actual DBpedia resources representing works of John Quincy Adams and the settlement where William J. Phelan resided, respectively.",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
329,23,val,"Give me the birthplace of the author of The Tailor and Ansty and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?organisation ?country
WHERE {
  # Step 1: Identify the author of ""The Tailor and Ansty""
  dbr:The_Tailor_and_Ansty dbo:author ?author .

  # Step 2: Retrieve the birthplace of this author
  ?author dbo:birthPlace ?birthPlace .

  # Step 3: Find entities within this birthplace that are both organizations and countries
  ?organisation a dbo:Organisation ;
                dbo:location dbr:?birthPlace .
  
  ?country a dbo:Country ;
           dbo:location dbr:?birthPlace .
}
```

This query assumes the following:
- The book ""The Tailor and Ansty"" is linked to its author via `dbo:author`.
- The birthplace of an individual can be found using `dbo:birthPlace`.
- Organizations and countries are identified by their respective classes (`dbo:Organisation` and `dbo:Country`) and have a location property linking them to the birthplace.",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
98,7,val,Give me the child of Emperor Go-Shirakawa and parent of the successor of Emperor Nijō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Nijō> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Find Emperor Go-Shirakawa's child
  ?goShirakawaChild dbo:parent dbr:Emperor_Go-Shirakawa .
  
  # Find Emperor Nijō's successor
  ?nijoSuccessor dbo:predecessor dbr:Emperor_Nijō .

  # Check if the child of Go-Shirakawa is also a parent of Nijō's successor
  ?goShirakawaChild dbo:parent ?nijoSuccessor .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
926,50,val,"Give me the child of the father, that is a royalty, of Mustafa III and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Mustafa III and his father
  dbr:Mustafa_III dbo:father dbr:Ahmad_III .

  # Ahmad III's children who are royalty
  ?child dbo:parent dbr:Ahmad_III .
  ?child a dbo:Monarch .

  # Şermi Kadın's spouse and their child
  dbr:Şermi_Kadın dbo:spouse ?spouse .
  ?spouseChild dbo:parent ?spouse .
  
  # Successor of the child of Şermi Kadın's spouse
  ?successor dbo:predecessor ?spouseChild .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
456,42,val,"Give me the spouse of the actor of Pacific Drive and professional in  and band of the band, that is a musical artist, of Dean Brody.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?bandMember WHERE {
  # Find the actor of ""Pacific Drive""
  ?movie dbo:title ""Pacific Drive""@en .
  ?movie dbo:starring ?actor .

  # Find the spouse of this actor
  ?actor dbo:spouse ?spouse .

  # Find the band associated with Dean Brody
  dbr:Dean_Brody dbo:bandMember ?band .

  # Identify the musical artist in that band
  ?band dbo:member ?bandMember .
  ?bandMember a dbo:MusicalArtist .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
433,51,val,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Step 1: Identify the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  ?album dbo:writer ?writer .
  
  FILTER(STRSTARTS(LCASE(?album), LCASE(""slowhand at 70 – live at the royal albert hall"")))

  # Step 2: Find the associated musical artist of this writer
  ?writer dbo:associatedMusicalArtist ?associatedArtist .

  # Step 3: Determine the professional in the profession of a writer for this associated musical artist
  ?professional dbo:profession dbr:Writer .
  
  ?professional dbo:associatedMusicalArtist ?associatedArtist .

  # Step 4: Ensure that this professional is also an artist and a musical artist, specifically related to Scott LaFaro
  ?professional dbo:associatedMusicalArtist dbr:Scott_LaFaro .
  ?professional rdf:type dbo:Artist .
  ?professional rdf:type dbo:MusicalArtist .
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
791,53,val,"Give me the predecessor of Emperor Antoku and father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?father ?spouseOfSpouse WHERE {
  # Emperor Antoku's predecessor
  ?antoku dbo:succession dbr:Emperor_Antoku .
  ?predecessor dbo:succession ?antoku .

  # Child of Emperor Takakura and his spouse
  ?takakura dbo:spouse ?spouseTakakura .
  ?child dbo:parent ?takakura ;
         dbo:parent ?spouseTakakura .
  
  # Father of the child (should be one of the parents)
  ?father dbo:parent ?child .

  # Spouse of Emperor Takakura's spouse
  ?spouseOfSpouse dbo:spouse ?spouseTakakura .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
47,52,val,"Give me the office of Ajoy Mukherjee and office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of Banga Bhushan.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/governor> ?v3 . ?v5 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office WHERE {
  # Ajoy Mukherjee's office
  OPTIONAL { 
    VALUES ?person { dbr:Ajoy_Mukherjee }
    ?person dbo:office ?office .
  }

  # Commander in Operation Green Hunt and their office
  OPTIONAL {
    ?operation dbo:commander ?commander .
    FILTER (CONTAINS(LCASE(?operation), ""operation green hunt""))
    ?commander rdf:type dbo:Politician .
    ?commander dbo:office ?office2 .
    BIND(?commander AS ?person)
  }

  # Awardee of Banga Bhushan and their office
  OPTIONAL {
    ?awardee dbo:award dbr:Banga_Bhushan .
    ?awardee dbo:office ?office3 .
    BIND(?awardee AS ?person)
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
892,41,val,Give me the landmark at elevation of the award of Anna Ishii and entity in the profession of Henri Crolla and entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Find Anna Ishii's award
  ?anna a dbo:Person ;
        foaf:name ""Anna Ishii"" .
  ?anna dbo:honoraryTitle ?award .

  # Find Henri Crolla's profession
  ?henri a dbo:Person ;
         foaf:name ""Henri Crolla"" .
  ?henri dbo:occupation ?profession .

  # Province of Reggio Emilia
  dbr:Province_of_Reggio_Emilia dbo:locatedInCountry dbr:Italy .

  # Find landmark at the elevation of Anna Ishii's award and related to Henri Crolla's profession
  ?landmark a dbo:Landmark ;
            dbo:elevation ?elevation .
  FILTER (?elevation = ?awardElevation)
  
  OPTIONAL {
    ?landmark dbo:relatedTo ?profession .
    ?landmark dbo:locatedIn dbr:Province_of_Reggio_Emilia .
  }
}
```

This query assumes:
- The award is represented as an elevation value.
- There are properties linking landmarks to professions and locations.

Please note that the exact property names (like `dbo:honoraryTitle`, `foaf:name`) might need adjustments based on DBpedia's current schema. This query serves as a conceptual framework.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
773,46,val,Give me the parent of the successor of Charles the Bald and spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Find Charles the Bald and his successor
  ?charles dbo:succeededBy ?successor .
  FILTER(STR(?charles) = ""Charles_the_Bald"")

  # Step 2: Find the parent of the successor
  ?successor dbo:parent ?parent .

  # Step 3: Find the father of this parent
  ?parent dbo:father ?grandfather .

  # Step 4: Find the spouse of this grandfather
  ?grandfather dbo:spouse ?spouse .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
582,40,val,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as --10-19 and player in Kazuaki Nagasawa.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v2 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  # Hirotaka Sugawara's residence
  OPTIONAL { 
    dbr:Hirotaka_Sugawara dbo:residenceLocation ?hirotakaResidence .
  }
  
  # Kazuaki Nagasawa's residence
  OPTIONAL { 
    dbr:Kazuaki_Nagasawa dbo:residenceLocation ?kazuakiResidence .
  }

  # Assuming --10-19 is a reference to another entity, e.g., a scientist or figure
  OPTIONAL {
    dbr:Figure_--10-19 dbo:residenceLocation ?figureResidence .
  }
  
  # Find a common residence or reference
  FILTER (?hirotakaResidence = ?kazuakiResidence || ?hirotakaResidence = ?figureResidence || ?kazuakiResidence = ?figureResidence)
}
```

This query attempts to find the residences of Hirotaka Sugawara, Kazuaki Nagasawa, and a figure known as --10-19. It then checks for any common residence among them.",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
130,17,val,"Give me the entity in the administration, that is American, of the award of Živko Ključe and figure known as Vanderbilt Commodores.",SELECT ?result WHERE { <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Vanderbilt_Commodores> . ?result <http://dbpedia.org/ontology/state> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationEntity WHERE {
  ?award dbo:recipient dbr:Živko_Ključe .
  OPTIONAL { ?award dbo:relatedSportTeam dbr:Vanderbilt_Commodores . }
  ?administrationEntity dbo:administratorOf ?award ;
                       a dbo:AdministrativeEntity ;
                       dbo:nationality dbr:United_States .
}
```

This query:
- Searches for an award associated with Živko Ključe.
- Optionally links this award to the Vanderbilt Commodores.
- Filters for an administrative entity that is American.",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
965,54,val,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfRoyalty WHERE {
  # Step 1: Find the politician born on 1854-05-24
  ?politician a dbo:Politician ;
              dbo:birthDate ""1854-05-24""^^xsd:date .

  # Step 2: Find this person's spouse
  ?spouseOfPolitician dbo:spouse ?politician .

  # Step 3: Find the spouse of Princess Victoria of Hesse and by Rhine
  dbr:Princess_Victoria_of_Hesse_and_by_Rhine dbo:spouse ?spouseOfVictoria .

  # Step 4: Identify the parent of George Mountbatten, 2nd Marquess of Milford Haven
  dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven dbo:parent ?parentOfGeorge .

  # Step 5: Connect these relationships to find the ""parent of the child that is royalty""
  ?child a dbo:Royal ;
         dbo:parent ?spouseOfVictoria ;
         dbo:parent ?parentOfGeorge .
  
  ?parentOfRoyalty dbo:parent ?child .
}
```

This query assumes:
- The politician born on 1854-05-24 has a spouse.
- Princess Victoria of Hesse and by Rhine has a spouse.
- George Mountbatten, 2nd Marquess of Milford Haven has a parent.
- There is a child who is royalty and connects these relationships.

Please note that the actual DBpedia data might not have all these specific relationships or entities directly linked as described. Adjustments may be needed based on available data.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
965,50,val,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/father> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfRoyalChild WHERE {
  # Step 1: Find the politician born on 1854-05-24
  ?politician dbo:birthDate ""1854-05-24""^^xsd:date ;
              a dbo:Politician .

  # Step 2: This person is the parent of Prince George of Battenberg
  ?politician dbo:child dbr:Prince_George_of_Battenberg .

  # Step 3: Find Prince George's parent who has a child that is royalty
  dbr:Prince_George_of_Battenberg dbo:parent ?parentOfGeorge ;
                                  dbo:child ?royalChild .
  
  ?royalChild a dbo:RoyalFamilyMember .

  # Step 4: Get the parent of this royal child
  ?royalChild dbo:parent ?parentOfRoyalChild .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
826,41,val,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Louis I, Grand Duke of Hesse and his children
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:child ?royalChild .
  
  # The royal child must be a royalty
  ?royalChild rdf:type dbo:Monarch .

  # Spouse of the child of Johann Heinrich Appel
  ?appelChild dbo:parent dbr:Johann_Heinrich_Appel ;
              dbo:spouse ?spouse .
  
  # The spouse must be the royal child identified earlier
  FILTER (?royalChild = ?spouse) .

  # This person is a predecessor of Louis IV, Grand Duke of Hesse
  ?predecessor dbo:successor dbr:Louis_IV,_Grand_Duke_of_Hesse ;
               rdf:type dbo:Monarch .
  
  # The spouse must be the predecessor identified earlier
  FILTER (?spouse = ?predecessor) .

  # Find the successor of this person
  ?predecessor dbo:successor ?successor .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
456,48,val,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and band of the band, that is a musical artist, of Dean Brody.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find the work that is both a movie and TV show
  ?work dbo:type dbr:Film .
  ?work dbo:type dbr:TelevisionShow .

  # Ross Newton acted in this work
  ?role dbo:actor dbr:Ross_Newton ;
        dbo:characterIn ?work .

  # Find Dean Brody's band
  ?band dbo:musicalArtist dbr:Dean_Brody .

  # Find the spouse of an actor from the work
  ?actor dbo:spouse ?spouse .
  ?role dbo:actor ?actor .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
124,51,val,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?militaryForce
WHERE {
  # Find the person born on 1850-06-24
  ?person a dbo:Person ;
          dbp:birthday ""1850-06-24""^^xsd:date .

  # Find military conflicts involving this person
  ?conflict dbo:participant ?person ;
            a (dbo:MilitaryConflict|dbo:SocietalEvent) .

  # Find the military force associated with these conflicts
  ?conflict dbo:militaryForce ?militaryForce1 .

  # Find wars involving Frank Rhodes
  ?war dbo:participant dbr:Frank_Rhodes ;
       a (dbo:MilitaryConflict|dbo:Event|dbo:SocietalEvent) .

  # Find the military force associated with these wars
  ?war dbo:militaryForce ?militaryForce2 .

  # Ensure both forces are the same
  FILTER (?militaryForce1 = ?militaryForce2)
}
```",5,10,6,3,2,3,3,71,0,0,1085,0,0.0,0
124,52,val,"Give me the military force of Battle of Atbara and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?commander ?militaryForce ?battery
WHERE {
  # Battle of Atbara as a military conflict and societal event
  dbr:Battle_of_Atbara dbo:type ?type1 .
  FILTER(?type1 IN (dbo:MilitaryConflict, dbo:SocietalEvent)) .

  # Commander of the Battle of Atbara
  dbr:Battle_of_Atbara dbo:commander ?commander .

  # Frank Rhodes and his military force
  dbr:Frank_Rhodes dbo:militaryForce ?militaryForce .
  FILTER(?militaryForce IN (dbo:MilitaryConflict, dbo:SocietalEvent)) .

  # 'A' Battery, Royal Australian Artillery as an organization and military unit
  dbr:A_Battery,_Royal_Australian_Artillery dbo:type ?type2 .
  FILTER(?type2 IN (dbo:Organization, dbo:MilitaryUnit)) .

  # Linking the military force to 'A' Battery
  ?militaryForce dbo:partOf ?battery .
  FILTER(?battery = dbr:A_Battery,_Royal_Australian_Artillery) .
}
```",6,14,7,3,3,3,3,71,0,0,1,0,0.0,0
170,22,val,Give me the birth place of the awardee of People's Artist of Russia and entity in the work of International Energy Agency.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:award dbr:People's_Artist_of_Russia .
  ?person dbo:memberOf dbr:International_Energy_Agency .
  ?person dbo:birthPlace ?birthPlace .
}
```

This query assumes:
- `dbo:award` is the property linking a person to an award.
- `dbr:People's_Artist_of_Russia` is the resource for the award.
- `dbo:memberOf` is the property linking a person to an organization they are part of.
- `dbr:International_Energy_Agency` is the resource for the International Energy Agency.",4,4,5,2,2,2,3,28,0,0,12,0,0.0,0
839,40,val,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of Peter Schorowsky and band of Matthias Röhr.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band WHERE {
  # Kevin Russell (musician)
  { 
    VALUES ?person { dbr:Kevin_Russell_(musician) }
    OPTIONAL { ?person dbo:birthDate ?birthDate . FILTER(?birthDate != """") }
    OPTIONAL { ?person dbo:musicalArtist ?artist . FILTER(?artist = true) }
    OPTIONAL { ?person dbo:band ?band }
  }

  UNION

  # Peter Schorowsky
  {
    VALUES ?person { dbr:Peter_Schorowsky }
    OPTIONAL { ?person dbo:birthDate ?birthDate . FILTER(?birthDate != """") }
    OPTIONAL { ?person dbo:musicalArtist ?artist . FILTER(?artist = true) }
    OPTIONAL { ?person dbo:band ?band }
  }

  UNION

  # Matthias Röhr
  {
    VALUES ?person { dbr:Matthias_Röhr }
    OPTIONAL { ?person dbo:birthDate ?birthDate . FILTER(?birthDate != """") }
    OPTIONAL { ?person dbo:musicalArtist ?artist . FILTER(?artist = true) }
    OPTIONAL { ?person dbo:band ?band }
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
507,50,val,"Give me the professional in the profession of Guy Ferland and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/director> ?result . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?director WHERE {
  # Find Guy Ferland's profession
  dbr:Guy_Ferland dbo:profession ?profession .
  
  # Find a person who is the director of a movie that is both a ""movie"" and a ""work""
  ?person dbo:profession ?sameProfession ;
          dbp:birthDate ""1919-06-17""^^xsd:date ;
          dbo:directorOf ?movie .
  ?movie rdf:type dbo:Film ;
         rdf:type dbo:CreativeWork .

  # Ensure the profession matches and is related to directing
  FILTER(?sameProfession = ?profession && ?sameProfession = dbr:Film_director)

  BIND(?person AS ?director)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
987,54,val,"Give me the entity in Montenegro and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorBirthPlace ?bandBirthPlace WHERE {
  # Find the film with Emir Hadžihafizbegović
  ?film dbo:starring dbr:Emir_Hadžihafizbegović .
  
  # Find actors in this film and their birthplaces
  ?film dbo:starring ?actor .
  ?actor dbp:birthPlace ?actorBirth .
  ?actorBirth dbo:country dbr:Montenegro .

  # Get the birthplace of the actor
  ?actorBirth rdfs:label ?actorBirthPlace .

  # Find the band associated with Šako Polumenta
  ?band dbo:member dbr:Šako_Polumenta .
  
  # Get the birthplace of the band
  ?band dbp:birthPlace ?bandBirth .
  ?bandBirth rdfs:label ?bandBirthPlace .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
926,44,val,"Give me the successor of the child of Ahmed III and father of Mahmud II and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Mustafa III is the child of Ahmed III
  dbr:Mustafa_III dbo:childOf dbr:Ahmed_III .
  
  # Selim III is the father of Mahmud II and a child of Mustafa III
  dbr:Selim_III dbo:parent dbr:Mahmud_II ;
                dbo:childOf dbr:Mustafa_III .

  # Find the successor of Selim III
  ?successor dbo:predecessor dbr:Selim_III .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
826,48,val,Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of the child of the father of Anna Magdalena Appel.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?predecessor WHERE {
  # Prince Friedrich of Hesse and by Rhine
  ?friedrich dbo:parent ?parent .
  
  # Parent's predecessor (likely the grandparent)
  ?parent dbo:parent ?predecessor .

  # Spouse of a child of the parent (Friedrich's sibling)
  ?sibling dbo:parent ?parent ;
           dbo:spouse ?spouse .

  # Father of Anna Magdalena Appel
  ?annaMagdalena dbo:father ?father .
  
  FILTER(?spouse = ?predecessor) .
}
```

This query assumes:
- `?friedrich` is the resource for Prince Friedrich.
- The relationships are directly accessible via DBpedia properties.
- The spouse of a sibling (`?sibling`) is equivalent to the predecessor.

Note: This query might need adjustments based on actual data availability and structure in DBpedia. You may need to refine entity URIs or property paths if they differ.",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
459,19,val,"Give me the governor of Dana Murphy and governor of the death place, that is a settlement, of Cliff Roquemore and person born as John Kevin Stitt.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorDana ?governorCliff ?governorJohn
WHERE {
  # Governor of Dana Murphy's birthplace
  OPTIONAL { 
    dbr:Dana_Murphy dbo:birthPlace ?birthPlaceDana .
    ?birthPlaceDana dbo:governor ?governorDana .
  }

  # Governor of Cliff Roquemore's death place (ensuring it is a settlement)
  OPTIONAL {
    dbr:Cliff_Roquemore dbo:deathPlace ?deathPlaceCliff .
    FILTER(STRSTARTS(STR(?deathPlaceCliff), ""http://dbpedia.org/resource/Category:Populated_places_in_""))
    ?deathPlaceCliff dbo:governor ?governorCliff .
  }

  # Governor of John Kevin Stitt's birthplace
  OPTIONAL {
    dbr:John_Kevin_Stitt dbo:birthName ""John Kevin Stitt"" ;
                         dbo:birthPlace ?birthPlaceJohn .
    ?birthPlaceJohn dbo:governor ?governorJohn .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
124,42,val,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of Battle of Tamai and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the commander of A Field Battery, Royal Australian Artillery in the Battle of Tamai
  OPTIONAL {
    ?battle dbr:Battle_of_Tamai .
    ?unit dbo:participatedIn ?battle ;
          rdfs:label ""A Field Battery, Royal Australian Artillery""@en .
    ?unit dbo:commander ?commander1 .
  }

  # Find the commander of Herbert Kitchener's military force
  OPTIONAL {
    ?person dbr:Herbert_Kitchener,_1st_Earl_Kitchener ;
            dbo:militaryCommanderOf ?force .
    ?force dbo:commander ?commander2 .
  }

  # Ensure both commanders are the same individual
  FILTER (?commander1 = ?commander2)
  BIND(?commander1 AS ?commander)
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
445,51,val,Give me the entity in the award of the commander in Battle of Saint-Mihiel and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v1 <http://dbpedia.org/property/awards> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInAward ?deathPlace
WHERE {
  # Part 1: Commander in Battle of Saint-Mihiel
  ?battle dbr:Battle_of_Saint-Mihiel ;
          dbo:commander ?commander .
  
  # Part 2: Awardee of the Royal Astronomical Society
  ?awardee dbo:honoraryMemberOf dbr:Royal_Astronomical_Society ;
           dbo:deathPlace ?deathPlace .

  # Linking the commander to an award entity
  ?commander dbo:award ?entityInAward .
  
  # Ensuring we get a result where both conditions are met
  FILTER(?commander = ?awardee)
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
507,53,val,Give me the professional in the profession of Guy Ferland and director of Entertaining Mr Sloane (film) and spouse of the person born as the birth name of Anne V. Coates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find Guy Ferland's profession
  ?guyFerland a dbo:Person ;
              foaf:name ""Guy Ferland""@en .
  
  ?guyFerland dbo:profession ?profession .

  # Find the director of ""Entertaining Mr Sloane""
  ?film a dbo:Film ;
        foaf:name ""Entertaining Mr Sloane""@en ;
        dbo:director ?director .

  # Find Anne V. Coates and her spouse
  ?anneVCoates a dbo:Person ;
               foaf:name ""Anne V. Coates""@en .
  
  ?anneVCoates dbo:spouse ?spouse .

  # Match the conditions
  FILTER (?profession = ?director && ?director = ?spouse)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
791,55,val,"Give me the spouse of the spouse, that is a royalty, of Emperor Takakura and father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of Emperor Takakura.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse WHERE {
  # Emperor Takakura's spouse
  dbr:Takakura_of_Japan dbo:spouse ?empressTakakura .
  
  # Empress Takakura's spouse (Emperor Takakura)
  ?empressTakakura dbo:spouse dbr:Takakura_of_Japan .

  # Child of Emperor Takakura who is royalty
  dbr:Takakura_of_Japan dbo:child ?royalChild .
  
  # Predecessor of the royal child
  ?royalChild dbo:predecessor ?predecessor .

  # The spouse of the predecessor (which should be the same as Empress Takakura)
  ?predecessor dbo:spouse ?spouseOfSpouse .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
527,15,val,"Give me the actor of the movie, that is a work and English and a television show, with the professional in Actor and author of The Boy Who Kicked Pigs.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/The_Boy_Who_Kicked_Pigs> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?work dbo:type dbr:Film .
  ?work dbo:type dbr:TelevisionShow .
  ?work dbo:language dbr_English .
  
  ?actor dbo:profession dbr_Actor .
  ?actor dbo:author dbr_The_Boy_Who_Kicked_Pigs .
  ?actor dbo:actedIn ?work .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
274,19,val,"Give me the associated musical artist of Cecil Taylor and professional in  and band member of the person born, that is a musical artist, as John Birks Gillespie.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist ?bandMember
WHERE {
  # Find Cecil Taylor's associated musical artist
  dbr:Cecil_Taylor dbo:associatedMusicalArtist ?associatedArtist .

  # Find Dizzy Gillespie and his band members who are also professional musicians
  dbr:Dizzy_Gillespie dbo:birthName ""John Birks Gillespie""@en ;
                     dbo:bandMember ?bandMember .
  
  # Ensure the band member is a musical artist
  ?bandMember rdf:type dbo:MusicalArtist .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
579,17,val,"Give me the native of Edinburgh and person born as the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person1 ?person2 WHERE {
  # Find a person native of Edinburgh
  ?person1 dbo:nativePlace dbr:Edinburgh .
  
  # Ensure this person is an office holder
  ?person1 dbo:occupation dbr:Office_holder .

  # Get the birth name of this person
  ?person1 dbp:birthName ?birthName .

  # Find another person native of Edinburgh with the same birth name
  ?person2 dbo:nativePlace dbr:Edinburgh .
  ?person2 dbp:birthName ?birthName .

  # Ensure they are distinct individuals
  FILTER(?person1 != ?person2)
}
```",4,5,5,3,2,3,2,20,0,0,18,0,0.0,0
933,44,val,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and reference to the birth name of Alan Warner (musician) and band of Mike Elliott (saxophonist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandAlanWarner ?birthNameAlanWarner ?bandMikeElliott WHERE {
  # Alan Warner (musician)
  ?alanWarner a dbo:Band ;
              dbo:member dbr:Alan_Warner_(musician) .
  
  OPTIONAL { 
    ?alanWarner dbp:name ?bandAlanWarner .
  }
  
  OPTIONAL {
    ?alanWarnerMember dbo:birthName ?birthNameAlanWarner .
    ?alanWarnerMember foaf:name ""Alan Warner"" .
  }

  # Mike Elliott (saxophonist)
  ?mikeElliott a dbo:Band ;
               dbo:member dbr:Mike_Elliott_(saxophonist) .

  OPTIONAL {
    ?mikeElliott dbp:name ?bandMikeElliott .
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
839,46,val,"Give me the band of the member of Böhse Onkelz and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band1 ?band2 WHERE {
  # Find a member of Böhse Onkelz and their band
  ?member dbo:memberOf dbr:Böhse_Onkelz .
  ?member dbo:band ?band1 .

  # Find Kevin Russell, ensure he is a musical artist, and get his band
  dbr:Kevin_Russell (dbo:birthDate|dbp:dateOfBirth) ?birthdate ;
    rdf:type dbo:MusicalArtist ;
    dbo:band ?band2 .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
926,55,val,"Give me the child of the father, that is a royalty, of Mustafa III and father of the father of Abdulaziz and successor of the child of Ahmed III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Mustafa III's father
  dbr:Mustafa_III dbo:father dbr:Mahmud_I .

  # Mahmud I's child who is royalty and successor of Mustafa III
  dbr:Mahmud_I dbo:child ?person .
  
  # Abdulaziz's grandfather (father's father)
  dbr:Abdulaziz dbo:father ?abdulazizFather .
  ?abdulazizFather dbo:father ?grandfather .
  FILTER(?grandfather = dbr:Mehmed_IV) .

  # Ahmed III's child
  dbr:Ahmed_III dbo:child dbr:Mustafa_III .

  # Ensure the person is a successor of Mustafa III
  ?person dbo:predecessor dbr:Mustafa_III .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
443,21,val,Give me the birthplace of Ulf Lundell and landmark at elevation of 28 and birthplace of the work of yes.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""yes""@en . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ulundellBirthplace ?landmarkName ?yesWorkBirthplace WHERE {
  # Ulf Lundell's birthplace
  dbr:Ulf_Lundell dbo:birthPlace ?ulundellBirthplace .

  # Landmark at elevation of 28 (assuming meters)
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ""28""^^xsd:float ;
            rdfs:label ?landmarkName .
  
  FILTER(lang(?landmarkName) = 'en')

  # Jon Anderson's birthplace
  dbr:Jon_Anderson dbo:birthPlace ?yesWorkBirthplace .
}",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
98,19,val,Give me the entity in Philippines and region of the time zone of Lopez Jaena and birth place of Paolo Ballesteros.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timeZoneRegion ?birthPlace
WHERE {
  # Lopez Jaena's time zone region
  OPTIONAL {
    dbr:Lopez_Jaena dbo:location dbr:Zamboanga_Peninsula ;
                     dbo:timeZone dbr:CST_(Philippines) .
    dbr:CST_(Philippines) dbo:region ?timeZoneRegion .
  }

  # Paolo Ballesteros's birthplace
  OPTIONAL {
    dbr:Paolo_Ballesteros dbo:birthPlace ?birthPlace .
  }
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
124,40,val,"Give me the military force of Battle of Tamai and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of Battle of Atbara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?force ?commander WHERE {
  VALUES ?battle { 
    dbr:Battle_of_Tamai 
    dbr:Battle_of_Atbara
  }
  
  ?battle dbo:militaryForce ?force .
  OPTIONAL { ?force dbo:commander ?commander . }

  # Reference to 'A' Battery, Royal Australian Artillery
  OPTIONAL {
    ?reference dbr:A_Battery,_Royal_Australian_Artillery ;
               dbo:militaryConflict ?battle .
  }
}
ORDER BY ?battle",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
715,43,val,"Give me the leader of Ministry of the Air (Spain) and commander in Rif War and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:name ?name .
  FILTER (CONTAINS(LCASE(?name), ""juan negrín"")) .

  OPTIONAL { ?person dbo:officeHolderOf dbr:Ministry_of_the_Air_(Spain) . }
  OPTIONAL { ?person dbo:commanderInRifWar true . }
  OPTIONAL { ?person dbo:commanderInForceOfMayor true . }
  OPTIONAL { ?person dbo:presidentOfElection dbr:1933_Spanish_general_election . }
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
456,45,val,"Give me the spouse of Danielle Spencer (Australian actress) and professional in  and band of the band, that is a musical artist, of the band of Alan Doyle.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?profession ?band ?musicalArtist WHERE {
  # Danielle Spencer and her spouse
  ?danielle a dbo:Actor ;
            foaf:name ""Danielle Spencer"" ;
            dbp:nationality dbc:Australian_people .
  
  OPTIONAL { ?danielle dbo:spouse ?spouse . }
  OPTIONAL { ?spouse dbo:profession ?profession . }

  # Alan Doyle's band and its musical artists
  ?alan a dbo:Musician ;
        foaf:name ""Alan Doyle"" .

  ?alan dbo:musicalBand ?band .
  
  ?member dbo:musicalBand ?band ;
          a dbo:MusicalArtist .
  
  BIND(?member AS ?musicalArtist)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
573,49,val,"Give me the person decedent at the administration, that is a region, of Charlie Baker and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Charlie Baker's administration that is a region
  ?administration dbo:type dbr:Region .
  ?administration dbo:administrator dbr:Charlie_Baker .

  # Find John Quincy Adams' work and its author who is a politician and office holder
  ?work dbo:author ?author .
  ?author dbo:occupation dbr:Politician ;
          dbo:officeHolder true .
  ?work dbo:subject dbr:John_Quincy_Adams .

  # The person we are looking for is a decedent at Charlie Baker's administration and parent of John Quincy Adams' author
  ?person dbo:decedentAt ?administration .
  ?author dbo:parent ?person .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
773,40,val,Give me the parent of Carloman of Bavaria and parent of Charles the Fat and spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . },"```sparql
# Parent of Carloman of Bavaria
SELECT ?result AS ?relationship WHERE {
  dbpedia:Carloman_of_Bavaria dbo:parent ?result .
} UNION

# Parent of Charles the Fat
SELECT ?result AS ?relationship WHERE {
  dbpedia:Charles_the_Fat dbo:parent ?result .
} UNION

# Spouse of the father of the parent of Bernard (son of Charles the Fat)
SELECT ?spouse AS ?relationship WHERE {
  # Find Bernard's parent
  dbpedia:Bernard_I_of_Saxony dbo:parent ?bernardsParent .

  # Find that parent's parent
  ?bernardsParent dbo:parent ?grandparent .

  # Identify the spouse of this grandparent
  ?grandparent dbo:spouse ?spouse .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
166,17,val,"Give me the resting place of Gonzalo Queipo de Llano and entity in the territory administered, that is a country, from the reference to Madrid.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?v3 <http://dbpedia.org/ontology/capital> ?v0 . <http://dbpedia.org/resource/Gonzalo_Queipo_de_Llano> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace ?country
WHERE {
  # Find the resting place of Gonzalo Queipo de Llano
  dbr:Gonzalo_Queipo_de_Llano dbo:finalRestingPlace ?restingPlace .

  # Find a country associated with Madrid as an administrative entity
  dbr:Madrid dbo:administrativeTerritory ?country .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
445,50,val,Give me the entity in the award of George H. Cameron and death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?deathPlace WHERE {
    # Find the award associated with George H. Cameron
    ?award dbo:recipient dbr:George_H._Cameron .
    
    # Get the entity related to this award
    ?award dbo:relatedEntity ?entity .

    # Find the establishment date of March 10, 1820
    ?establishment dbo:date dbr:March_10,_1820 .
    
    # Link the awardee of the establishment to find their death place
    ?establishment dbo:awardee ?awardee .
    ?awardee dbo:deathPlace ?deathPlace .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
508,15,val,"Give me the birthplace of Ma Bufang and birthplace of the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ma_Bufang> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?maBufangBirthplace ?hayaoTadaBirthplace WHERE {
  # Ma Bufang's birthplace
  dbr:Ma_Bufang dbo:birthPlace ?maBufangBirthplace .

  # Hayao Tada's role in a war (assuming he was a commander)
  # We need to find the specific war and his role as a commander
  ?hayaoTada dbo:occupation dbr:Military_commander .
  ?war dbo:commander ?hayaoTada .
  ?hayaoTada dbo:birthPlace ?hayaoTadaBirthplace .

  # Ensure Hayao Tada is linked to a specific war event
  ?war rdf:type dbo:MilitaryConflict .
}
```

This query assumes that DBpedia has structured data for Ma Bufang and Hayao Tada, including their birthplaces and roles in military conflicts. Adjustments may be necessary based on the actual structure of DBpedia entries.",4,8,5,3,2,3,2,20,0,0,3,0,0.0,0
47,49,val,"Give me the office of the administration of Jagdeep Dhankhar and office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeJagdeepDhankhar ?awardName ?awardeeOffice
WHERE {
  # Find the office held by Jagdeep Dhankhar
  dbr:Jagdeep_Dhankhar dbo:positionHeld ?officeJagdeepDhankhar .
  
  # Find awards given in India and their awardees' offices
  ?award dbo:country dbr:India ;
         dbo:recipient ?awardee .
  ?awardee dbo:positionHeld ?awardeeOffice .

  # Ensure we get the award name as well
  ?award rdfs:label ?awardName .
  
  FILTER (lang(?awardName) = 'en')
}
```",5,6,6,3,2,3,3,71,0,0,11,0,0.0,0
826,52,val,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v2 <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Louis I, Grand Duke of Hesse and his children
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:child ?royalChild .
  
  # The child that is royalty
  ?royalChild a dbo:Monarch .

  # Spouse of the child of Johann Ambrosius Bach (father of Anna Magdalena Bach)
  dbr:Johann_Ambrosius_Bach dbo:child ?bachChild .
  ?bachChild dbo:spouse ?spouse .

  # Predecessor of Louis IV, Grand Duke of Hesse
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:predecessor ?predecessor .

  # Successor of the royal child who is spouse of Bach's child and predecessor of Louis IV
  ?royalChild dbo:successor ?successor .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
417,54,val,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Step 1: Leader of Colony of Greenland
  ?leader dbo:positionTitle ""Leader of the Colony of Greenland""@en .
  
  # Step 2: Father of this leader and his child who is royalty
  ?father dbo:spouse ?leader .
  ?royalChild dbo:parent ?father ;
              a dbo:Monarch .

  # Step 3: Parent (Royalty) of Count Ingolf of Rosenborg
  ?countIngolf dbr:Count_Ingolf_of_Rosenborg .
  ?parentOfCount dbo:child ?countIngolf ;
                 a dbo:Monarch .
  
  # Step 4: Spouse of the parent from step 3
  ?spouseOfParent dbo:spouse ?parentOfCount .

  # Step 5: Child of Alexandrine of Mecklenburg-Schwerin
  ?alexandrine dbr:Alexandrine_of_Mecklenburg-Schwerin .
  ?childOfAlexandrine dbo:parent ?alexandrine ;
                      a dbo:Person .

  # Final condition: Match the person from step 2 with steps 3 and 4, and step 5
  FILTER (?royalChild = ?spouseOfParent && ?royalChild = ?childOfAlexandrine)
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
976,45,val,Give me the office of Meral Akşener and office of Mustafa Şentop and office of the person born as the birth name of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeName WHERE {
  # Meral Akşener
  VALUES ?person { 
    dbr:Meral_Akşener 
  }
  
  # Mustafa Şentop
  UNION {
    VALUES ?person { 
      dbr:Mustafa_Şentop 
    }
  }

  # Person born as Naci Bostancı (Ali İhsan Yücel)
  UNION {
    ?person dbo:birthName dbr:Naci_Bostancı .
  }

  # Get the office information
  ?person dbo:office ?office .
  ?office rdfs:label ?officeName .
  
  FILTER(LANG(?officeName) = 'en')
}
ORDER BY ?person",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
216,49,val,"Give me the player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?coach ?team
WHERE {
  # Find the coach of Croatia national under-21 football team
  ?coach dbo:position ""Coach""@en .
  ?coach dbo:team dbr:Croatia_national_under-21_football_team .

  # Ensure the person is a sports manager, soccer manager, and player
  ?coach dbo:occupation dbr:Sports_manager ;
         dbo:occupation dbr:Soccer_manager ;
         dbo:occupation dbr:Soccer_player .

  # Find out which team this coach was playing for when Pavel Vezhinov died
  ?deathEvent dbo:agent ?coach .
  ?deathEvent dbo:date ?dateOfDeath .
  ?playerTeam dbo:member ?coach .
  ?playerTeam dbo:endTime ?endTime .
  
  FILTER (?endTime <= ?dateOfDeath)

  # Get the date of Pavel Vezhinov's death
  dbr:Pavel_Vezhinov dbo:deathDate ?dateOfDeath .

  # Bind the team to a variable
  BIND(?playerTeam AS ?team)
}
ORDER BY ?coach",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
933,50,val,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  # Find Alan Warner and his associated band
  ?person a dbo:Musician ;
          foaf:name ""Alan Warner"" ;
          dbo:associatedBand ?band .

  # Ensure the band is both a group and an organization
  ?band a dbo:MusicalGroup, dbo:Organization .

  # Retrieve Alan Warner's birth name
  ?person dbp:birthdayBirthName ?birthName .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
445,46,val,"Give me the death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  ?person a dbo:AwardRecipient ;
          dbo:awardReceived dbr:Royal_Astronomical_Society_Award ;
          dbo:nationality dbr:United_Kingdom ;
          dbo:residence ?residence .
  
  ?residence a dbo:Country .

  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```

This query does the following:
- Selects individuals (`?person`) who are recipients of an award from the Royal Astronomical Society.
- Ensures these individuals have British nationality and reside in a country.
- Retrieves their death place if available.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
874,16,val,"Give me the band of the writer, that is an artist and a musical artist, of Mezzanine (album) and band of the band member of The Jones Gang.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Find the band of the album ""Mezzanine""
  VALUES (?album) { dbr:Mezzanine_(Massive_Attack_album) }
  ?album dbo:byArtist ?artist .
  ?artist a dbo:Band ;
          rdfs:label ?bandLabel .

  UNION

  # Find the band associated with a member of ""The Jones Gang""
  VALUES (?project) { dbr:The_Jones_Gang_(band) }
  ?project dbo:member ?member .
  ?member dbo:associatedBand ?artist2 .
  ?artist2 a dbo:Band ;
           rdfs:label ?bandLabel2 .

  FILTER (lang(?bandLabel) = 'en' || lang(?bandLabel2) = 'en')
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
83,17,val,"Give me the ruling party in Fortaleza and party of the governor of the commander, that is a politician, in Central African Republic Civil War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Fortaleza> <http://dbpedia.org/property/leaderParty> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/governor> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rulingParty ?commanderName ?partyOfCommander
WHERE {
  # Ruling party in Fortaleza
  ?mayor a dbo:Mayor ;
         dbo:city dbr:Fortaleza .
  OPTIONAL { ?mayor dbo:politicalAffiliation ?rulingParty . }

  # Commander in the Central African Republic Civil War
  ?commander a dbo:Person ;
             dbo:occupation ""Military commander""@en ;
             dbo:country dbr:Central_African_Republic .
  OPTIONAL { ?commander dbo:politicalAffiliation ?partyOfCommander . }
  
  BIND (STR(?mayor) AS ?rulingPartyLabel)
  BIND (STR(?commander) AS ?commanderNameLabel)

}
```

This query attempts to:

- Identify the mayor of Fortaleza and their political affiliation.
- Find individuals identified as military commanders in the Central African Republic Civil War and their political affiliations.

Note: The actual results depend on how well these entities are represented in DBpedia. You might need to refine the query based on available data or additional context.",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
456,53,val,"Give me the band of the band, that is a musical artist, of Dean Brody and spouse of the actor of the movie, that is a work and a television show, with Ross Newton and professional in .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandName WHERE {
  # Step 1: Find Dean Brody's band
  ?deanBrody a dbo:MusicalArtist ;
             foaf:name ""Dean Brody"" .
  
  ?deanBrody dbo:memberOfBand ?band .

  # Step 2: Identify the actor who starred with Ross Newton
  ?actor a dbo:Actor ;
         dbo:spouse ?spouse ;
         dbo:starringIn ?work .
  
  ?work dbo:starring ?rossNewton ;
        foaf:name ?title .

  FILTER CONTAINS(LCASE(?title), ""ross newton"") .

  # Step 3: Link the spouse to Dean Brody's band
  ?spouse dbo:memberOfBand ?band .

  BIND(STR(?band) AS ?bandName)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
417,51,val,"Give me the child of the father of Frederick IX of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Frederick IX of Denmark and his father
  dbr:Frederick_IX_of_Denmark dbo:father dbr:Christian_X_of_Denmark .

  # Children of Christian X of Denmark who are royalty
  ?royalChild dbo:parent dbr:Christian_X_of_Denmark .
  ?royalChild a dbo:Monarch .

  # Alexandrine of Mecklenburg-Schwerin and her parent
  dbr:Alexandrine_of_Mecklenburg-Schwerin dbo:parent ?alexParent .
  ?alexParent a dbo:Monarch .

  # Child of Alexandrine's royal parent
  ?childOfChild dbo:parent ?alexParent .
  ?childOfChild a dbo:Monarch .

  # Find the intersection
  FILTER(?royalChild = ?childOfChild)
}",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
36,20,val,Give me the person born in the birth year of Deanne Bray and actor of Being Mrs Elliot and person born as Ayo Makun.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Deanne Bray's birth year
  ?deanneBray a dbo:Person ;
             dbp:name ""Deanne Bray""@en ;
             dbp:birthdayYear ?birthYear .

  # Find actors of ""Being Mrs Elliot""
  ?beingMrsElliot dbo:actor ?actor .
  ?beingMrsElliot dbr:Being_Mrs_Elliot .

  # Find person born as Ayo Makun
  ?person a dbo:Person ;
          dbp:name ""Ayo Makun""@en ;
          dbp:birthdayYear ?birthYear .

  # Ensure the actor is also Deanne Bray's birth year and Ayo Makun
  FILTER (?actor = ?deanneBray && ?person = ?actor)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
507,48,val,Give me the professional in the profession of Guy Ferland and spouse of the person born as the birth name of Anne V. Coates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional WHERE {
  # Find Guy Ferland's profession
  ?guyFerland dbo:profession ?profession .
  FILTER(?guyFerland = dbpedia:Guy_Ferland)

  # Find Anne V. Coates by her birth name
  ?anneVCoates foaf:name ""Anne V. Coates""@en ;
               foaf:birthName ?birthName .

  # Find the spouse of Anne V. Coates
  ?spouse dbo:spouse ?anneVCoates .
  
  # Ensure the spouse has the same profession as Guy Ferland
  ?spouse dbo:profession ?sameProfession .
  FILTER(?sameProfession = ?profession)

  BIND(?spouse AS ?professional)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
933,49,val,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of the band of Alan Warner (musician).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandOfBand
WHERE {
  # Step 1: Find the person born on 1947-04-21 who is a musical artist
  ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
          rdf:type dbo:MusicalArtist .

  # Step 2: Find the band associated with this person
  ?band dbo:member ?person ;
        rdf:type dbo:Band .

  # Step 3: Ensure this band is also an organization and another band
  ?band rdf:type dbo:Organization .
  
  # Step 4: Identify Alan Warner (musician) and find his band
  dbr:Alan_Warner_Musician dbo:memberOf ?alanWarnerBand ;
                           rdf:type dbo:MusicalArtist .

  # Step 5: Determine the band of the band identified in step 3
  ?bandOfBand dbo:member ?band .
}
```",5,9,6,3,2,3,3,71,0,0,4,0,0.0,0
465,49,val,"Give me the successor of the child of Alfonso I d'Este and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor1 ?successor2 WHERE {
  # Alfonso I d'Este's child
  ?alfonsoChild dbo:parent dbr:Alfonso_I_d%27Este ;
               a dbo:Person .

  # Successor of Alfonso's child if they were royalty
  OPTIONAL { ?alfonsoSuccessor dbo:predecessor ?alfonsoChild .
             FILTER EXISTS { ?alfonsoSuccessor a dbo:Monarch } }
  
  # Charles Orlando, Dauphin of France's parent
  ?charlesParent dbo:child dbr:Charles_Orlando_Dauphin_of_France ;
                 a dbo:Person .

  # Child of Charles Orlando's parent that is royalty
  OPTIONAL { ?royaltyChild dbo:parent ?charlesParent .
             FILTER EXISTS { ?royaltyChild a dbo:Monarch } }

  # Successor of this royalty child
  OPTIONAL { ?successor2 dbo:predecessor ?royaltyChild .

             FILTER EXISTS { ?successor2 a dbo:Monarch } }
  
  # Bind the successors to variables
  BIND(IF(BOUND(?alfonsoSuccessor), ?alfonsoSuccessor, NULL) AS ?successor1)
  BIND(IF(BOUND(?successor2), ?successor2, NULL) AS ?successor2)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
456,46,val,"Give me the professional in the alter ego of The Shadow and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?spouse WHERE {
  # The Shadow's alter ego profession
  dbr:The_Shadow dbo:profession ?professional .

  # Ross Newton's movies that are both works and television shows
  dbr:Ross_Newton dbo:actedIn ?movie .
  ?movie a dbo:Film ;
         a dbo:TelevisionShow .

  # Actor from the movie
  ?actor dbo:actedIn ?movie .

  # Spouse of the actor
  ?spouse dbo:spouse ?actor .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
554,15,val,Give me the leader of the administration of the party member of Independent politician and leader of Portuguese Mozambique.,SELECT ?result WHERE { <http://dbpedia.org/resource/Portuguese_Mozambique> <http://dbpedia.org/property/leader> ?result . ?v1 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . ?v1 <http://dbpedia.org/property/leader> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderOfAdministration WHERE {
  ?person a dbo:Politician ;
          dbo:politicalAffiliation dbr:Independent_politician ;
          dbo:officeHolderOf dbr:Portuguese_Mozambique .
  
  ?administration dbo:head ?leaderOfAdministration .

  FILTER(?person = ?administration)
}
```

This query assumes:
- There is a resource for ""Independent politician"" and ""Portuguese Mozambique.""
- The `dbo:politicalAffiliation` property links politicians to their political affiliations.
- The `dbo:officeHolderOf` property indicates the office or region they held.
- The `dbo:head` property identifies the leader of an administration.",4,4,5,3,2,3,2,20,0,0,3,0,0.0,0
888,16,val,"Give me the commander in the force, that is a societal event and an event, of Serhiy Kotenko and awardee of the award of Oleksandr Syrskyi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Serhiy Kotenko and his command relationship
  ?kotenko a dbo:MilitaryPerson ;
           foaf:name ""Serhiy Kotenko"" .
  
  ?event1 dbo:participant ?kotenko ;
          a dbo:SocietalEvent .

  ?event2 dbo:participant ?kotenko ;
          a dbo:Event .

  # Commander of Serhiy Kotenko
  ?commander dbo:subordinate ?kotenko .

  # Oleksandr Syrskyi and the award relationship
  ?syrskyi a dbo:MilitaryPerson ;
           foaf:name ""Oleksandr Syrskyi"" .
  
  ?award dbo:recipient ?commander ;
         dbo:awardedBy ?syrskyi .
}",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
417,45,val,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and spouse of Princess Caroline-Mathilde of Denmark and child of Christian X of Denmark.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Alexandrine of Mecklenburg-Schwerin and her spouse
  dbr:Alexandrine_of_Mecklenburg-Schwerin dbo:spouse dbr:Princess_Caroline-Mathilde_of_Denmark .
  
  # Princess Caroline-Mathilde's parent is Christian X of Denmark
  dbr:Princess_Caroline-Mathilde_of_Denmark dbo:childOf dbr:Christian_X_of_Denmark .

  # Find the child of Caroline-Mathilde who is a royalty
  ?child dbo:parent dbr:Princess_Caroline-Mathilde_of_Denmark .
  ?child rdf:type dbo:Monarch .

  # Find the child of that child who is also a royalty
  ?grandchild dbo:parent ?child .
  ?grandchild rdf:type dbo:Monarch .
}",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
93,16,val,"Give me the death place of the governor of Bob Bartlett and capital of the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/capital> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?regionCapital ?settlementCapital WHERE {
  # Find death place of Bob Bartlett
  dbr:Bob_Bartlett dbo:placeOfBirth ?birthPlace .
  OPTIONAL { dbr:Bob_Bartlett dbo:deathPlace ?deathPlace . }

  # Find the region and settlement for Lake Clark National Park and Preserve headquarters
  dbr:Lake_Clark_National_Park_and_Preserve dbo:headquarters ?headquarters .

  # Assuming headquarters is a region or settlement, find their capitals
  OPTIONAL { ?headquarters dbo:capital ?regionCapital . }
  OPTIONAL { ?headquarters dbo:settlementCapital ?settlementCapital . }

}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
582,50,val,"Give me the figure known as the nickname of Japan national football team and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname ?fatherName WHERE {
  # Find the Japan national football team and its nickname
  ?team a dbo:NationalSoccerTeam ;
        dbp:name ""Japan national football team""@en .
  
  OPTIONAL { ?team dbp:nickname ?nickname . }
  
  # Find Kazuaki Nagasawa's father
  ?kazuaki dbo:father ?father .
  ?father rdfs:label ?fatherName .

  # Ensure the father is an athlete, soccer manager, and sports manager
  ?father a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .
  
  FILTER (lang(?fatherName) = 'en')
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
573,43,val,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of John Quincy Adams and person decedent at Massachusetts.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v0 <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personDecedentAtResidence WHERE {
  ?parent a dbo:Politician ;
          dbo:nationality dbr:United_States ;
          dbo:child dbr:John_Quincy_Adams .
  
  ?parent dbo:deathPlace ?decedentLocation .
  FILTER (CONTAINS(LCASE(STR(?decedentLocation)), ""massachusetts""))

  ?residence dbo:resident ?parent ;
             a dbo:Settlement .

  ?personDecedentAtResidence dbo:deathPlace ?residence .
}
```",5,7,6,3,3,3,3,71,0,0,2,0,0.0,0
573,50,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?residence ?professional
WHERE {
  # Step 1: Find the author of ""Exchequer Standards""
  ?author dbo:work dbr:Exchequer_Standards .
  
  # Step 2: Identify the parent who is a politician and an office holder
  ?author dbo:parent ?parent .
  ?parent rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Step 3: Find the residence where this person died
  ?parent dbp:placeOfDeath ?residence .
  ?residence rdf:type dbo:Settlement .

  # Step 4: Identify a professional from this settlement who is American and involved in politics
  ?professional dbo:nationality dbr:United_States ;
                dbo:profession dbr:Politician ;
                dbp:placeOfBirth ?residence .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
166,16,val,"Give me the resting place of the military force of Spanish Civil War and entity in the territory administered, that is a country, from Madrid.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace ?administeredCountry WHERE {
  # Resting place of the International Brigades from the Spanish Civil War
  dbr:Internacional_Brigadas_during_the_Spanish_Civil_War dbo:finalRestingPlace dbr:Cementerio_de_los_Caídos .
  
  # Country administered by Spain from Madrid
  ?administeredCountry dbo:administrativeCapital dbr:Madrid ;
                      dbo:country dbr:Spain .
}
```",4,5,5,2,2,3,2,20,0,0,4,0,0.0,0
508,17,val,"Give me the birthplace of Ma Hongkui and birthplace of the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v0 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ma_Hongkui> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query to find the birthplace of Ma Hongkui
SELECT ?birthPlaceMaHongkui WHERE {
  ?maHongkui dbo:birthPlace ?birthPlaceMaHongkui .
  ?maHongkui rdfs:label ""Ma Hongkui""@en .
  FILTER(LANG(?birthPlaceMaHongkui) = 'en')
}

UNION

# Query to find the birthplace of the Saudi commander involved in a war with Hu Yukun
SELECT ?birthPlaceCommander WHERE {
  ?huYukun dbo:participatedInMilitaryConflict ?conflict .
  ?commander dbo:nationality dbr:Saudi_Arabia ;
             dbo:participatedInMilitaryConflict ?conflict .
  ?commander dbo:birthPlace ?birthPlaceCommander .
  ?huYukun rdfs:label ""Hu Yukun""@en .
  FILTER(LANG(?birthPlaceCommander) = 'en')
}
```",4,7,5,3,2,3,2,20,0,0,3,0,0.0,0
170,21,val,Give me the domain of the profession of John Scholey and birth place of Era Ziganshina and entity in Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v0 . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professionDomain ?birthPlace ?russianEntity
WHERE {
  # John Scholey's profession domain
  ?johnScholey a dbr:John_Scholey ;
               dbo:occupation ?occupation .
  ?occupation rdfs:domain ?professionDomain .

  # Era Ziganshina's birthplace
  ?eraZiganshina a dbr:Era_Ziganshina ;
                 dbo:birthPlace ?birthPlace .

  # Entity in Russia
  ?russianEntity dbo:country dbr:Russia .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
965,45,val,"Give me the parent of Louise Mountbatten and spouse of Prince Louis of Battenberg and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse WHERE {
  # Parent of Louise Mountbatten
  ?louiseMountbatten a dbo:Person ;
                     foaf:name ""Louise Mountbatten""@en .
  
  ?parent dbo:child ?louiseMountbatten .

  # Spouse of Prince Louis of Battenberg
  ?princeLouis a dbo:Person ;
              foaf:name ""Prince Louis of Battenberg""@en .
  
  ?spouse dbo:spouse ?princeLouis .

  # Parent of George Mountbatten, 2nd Marquess of Milford Haven
  ?georgeMountbatten a dbo:Person ;
                     foaf:name ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  
  ?parent dbo:child ?georgeMountbatten .

  # Ensure the parent is common across all conditions
  FILTER (?parent = ?louiseParent && ?parent = ?princeSpouseParent)
}
```

This query attempts to find a person who satisfies all three conditions by linking them through their relationships in DBpedia. Note that this query assumes certain properties and may need adjustments based on the actual data available in DBpedia.",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
417,53,val,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of Christian X of Denmark.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  # Frederick Francis III and his children
  ?frederick a dbo:Person ;
             foaf:name ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin""@en .
  
  ?child1 dbo:spouseOf ?frederick ;
          a dbo:Person .

  # Children of Frederick's child (grandchildren)
  ?child1 dbo:child ?grandparent .
  ?grandparent dbo:child ?grandchild .
  
  # Filter grandchildren who are royalty
  ?grandchild a dbo:Monarch .

  # Knud, Hereditary Prince of Denmark and his child
  ?knud a dbo:Person ;
        foaf:name ""Knud, Hereditary Prince of Denmark""@en .
  
  ?knudChild dbo:child ?knud .
  
  # Parent of Knud's child (child of Christian X)
  ?knudChild dbo:parent ?christianXChild .

  ?christianX a dbo:Person ;
              foaf:name ""Christian X of Denmark""@en .
  
  ?christianX dbo:child ?christianXChild .

  # Spouse of the parent
  ?spouse dbo:spouseOf ?christianXChild ;
          a dbo:Person .

  # Match the grandchild with the spouse
  FILTER(?grandchild = ?spouse)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
582,52,val,"Give me the figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?residence WHERE {
  ?person dbo:child dbr:Masami_Nagasawa .
  ?person a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .
  OPTIONAL { ?person foaf:nick ""--10-19"" . }
  
  ?person dbo:residence ?location .
  ?scientist dbo:name ""Hirotaka Sugawara""@en .
  ?scientist dbo:residence ?location .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
965,41,val,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the child, that is a royalty, of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # George Mountbatten, 2nd Marquess of Milford Haven
  dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven dbo:spouse ?spouse .
  
  # Spouse of Princess Victoria of Hesse and by Rhine (Princess Louis of Battenberg)
  ?spouse dbo:spouse dbr:Victoria_of_Hesse_and_by_Rhine .
  
  # Parent of Prince Louis of Battenberg
  dbr:Prince_Louis_of_Battenberg dbo:parent dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven .

  # Find the parent of George Mountbatten, 2nd Marquess of Milford Haven
  dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven dbo:parent ?parent .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
773,50,val,"Give me the parent of the child, that is a royalty, of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfChildA WHERE {
  # Louis the German and his child who was royalty
  ?childA dbo:child ?louisGerman .
  ?louisGerman rdfs:label ""Louis the German""@en .

  # Child A is a royalty
  ?childA dbp:title ?titleA .
  FILTER(CONTAINS(LCASE(?titleA), ""king"") || CONTAINS(LCASE(?titleA), ""queen""))

  # Parent of Child A
  ?parentOfChildA dbo:parent ?childA .

  # Louis the Pious and his child who was royalty
  ?childB dbo:child ?louisPious .
  ?louisPious rdfs:label ""Louis the Pious""@en .

  # Child B is a royalty
  ?childB dbp:title ?titleB .
  FILTER(CONTAINS(LCASE(?titleB), ""king"") || CONTAINS(LCASE(?titleB), ""queen""))

  # Successor of Child B (assuming direct succession)
  ?successor dbo:predecessor ?childB .

  # Parent of the successor
  ?parentOfSuccessor dbo:parent ?successor .
  
  # Ensure we are looking at the same parent for both relationships
  FILTER(?parentOfChildA = ?parentOfSuccessor)
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
124,46,val,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Frank Rhodes and his involvement in a war
  dbr:Frank_Rhodes dbo:militaryConflict ?war .
  
  # The war is both a military conflict and a societal event
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:SocietalEvent .

  # 'A' Battery, Royal Australian Artillery involvement in the same war
  dbr:A_Battery,_Royal_Australian_Artillery dbo:militaryConflict ?war .
  
  # The reference to 'A' Battery is an organization and military unit
  dbr:A_Battery,_Royal_Australian_Artillery rdf:type dbo:Organisation ;
                                            rdf:type dbo:MilitaryUnit .

  # Find the military force associated with the war
  ?war dbo:militaryForce ?militaryForce .
}
```",5,13,6,3,2,3,3,71,0,0,9,0,0.0,0
582,27,train,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  ?person a dbo:FootballManager ;
          foaf:name ""Hajime Moriyasu""@en .
  
  ?person dbo:managedTeam ?team .

  ?team dbo:nickname ?nickname .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
47,1,train,Give me the office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bidesh Ranjan Bose""@en .
  OPTIONAL { ?person dbo:positionHeld ?office . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
129,10,train,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artistOrganization WHERE {
  # Find the entity for ""Dreamville Presents: Revenge""
  dbr:Dreamville_Presents:_Revenge dbo:starring ?actor .

  # Check if this actor is associated with a musical artist organization
  ?actor dbo:associatedBandOrMusicalArtist ?artist .
  ?artist rdf:type dbo:MusicalArtist ;
          dbo:associatedBandOrMusicalArtist ?artistOrganization .
  
  FILTER (?artistOrganization != ?artist)
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
926,20,train,Give me the successor of the child of Ahmed III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  ?mustafa3 dbo:father dbr:Mahmud_II ;
           dbo:succeededBy ?successor .
  FILTER EXISTS { ?mustafa3 rdfs:label ""Mustafa III""@en }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
933,6,train,Give me the birth name of Alan Warner (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:Q123456 wdt:P735 ?birthName .
  FILTER (lang(?birthName) = ""en"")
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Alan Warner, the musician. You can find this by searching DBpedia or using a SPARQL endpoint to query for his resource ID.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
791,27,train,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfAntoku ?childOfFather WHERE {
  dbr:Emperor_Antoku dbo:father ?fatherOfAntoku .

  ?fatherOfAntoku a dbo:Monarch .
  OPTIONAL { ?fatherOfAntoku dbo:officeHolder ?office . }

  ?fatherOfAntoku dbo:child ?childOfFather .
  ?childOfFather a dbo:Monarch .

  FILTER EXISTS { ?fatherOfAntoku dbo:officeHolder ?office }
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
216,35,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach of Croatia national under-21 football team.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ""1983-12-20""^^xsd:date ;
          dbo:sportsManagerOf ?team ;
          dbo:managerialCareer ?career .
  
  ?career dbo:managedTeam dbr:Croatia_national_under-21_football_team .

  OPTIONAL { ?person dbo:occupation dbp:SoccerPlayer . }
  OPTIONAL { ?person dbo:occupation dbp:SoccerManager . }
}
```

This query does the following:
1. Selects individuals who are a `SoccerPlayer` and were born on December 20, 1983.
2. Checks if they have been a sports manager of any team (`?team`).
3. Verifies that their managerial career includes managing the Croatia national under-21 football team.
4. Optionally checks for occupations as both a soccer player and a soccer manager.",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
579,14,train,"Give me the person born as the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?result <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ?birthName .
  ?person dbo:officeHolderOf ?office .
  ?person dbo:placeOfBirth dbr:Edinburgh .
}
```

This query does the following:
- Selects individuals (`?person`) who are of type `dbo:Person`.
- Ensures they have a birth name (`dbo:birthName`).
- Checks if they hold an office (`dbo:officeHolderOf`).
- Confirms their place of birth is Edinburgh (`dbo:placeOfBirth`).",3,4,4,3,1,3,2,20,0,0,20,0,0.0,0
170,10,train,Give me the birth place of the awardee of People's Artist of Russia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  ?person dbo:award dbr:People's_Artist_of_Russia .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,0,33,0,0.0,0
465,21,train,Give me the successor of the child of Alfonso I d'Este and successor of Renée of France.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Find Ercole II d'Este, Duke of Ferrara
  ?child a dbo:Person ;
         dbo:spouse ?parent1 , ?parent2 ;
         rdfs:label ""Ercole II d'Este""@en .
  
  FILTER(?parent1 = <http://dbpedia.org/resource/Alfonso_I_d%27Este> &&
         ?parent2 = <http://dbpedia.org/resource/Renée_of_France>)
  
  # Find the successor of Ercole II d'Este
  ?child dbo:successor ?successor .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
933,17,train,"Give me the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person dbo:birthDate ""1947-04-21""^^xsd:date .
  ?person a dbo:MusicalArtist .
  ?person dbo:member ?organisation .
  ?organisation a dbo:Band ;
                rdfs:label ?band .
}
```",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
36,12,train,Give me the actor of Being Mrs Elliot and person born in 1971 and person born as Ayo Makun.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  ?film dbo:title ""Being Mrs Elliot""@en .
  ?film dbo:starring ?actor .
  ?actor dbo:birthYear ""1971""^^xsd:gYear .
  OPTIONAL { ?actor foaf:name ""Ayo Makun""@en }
}
```

This query does the following:
- Searches for a film with the title ""Being Mrs Elliot.""
- Finds actors (`?actor`) who starred in this film.
- Filters these actors by those born in 1971.
- Optionally checks if they are also known as Ayo Makun.",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
507,5,train,Who is the person born on 1919-06-17?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1919 && MONTH(?birthDate) = 6 && DAY(?birthDate) = 17)
}
```",1,1,2,1,1,3,3,71,14,0,0,1.0,1.0,1.0
917,29,train,Give me the child of the father of Keʻelikōlani and child of Kekūanāoʻa and parent of Albert Kamehameha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Keʻelikōlani's father
  ?keelikoalaniFather dbo:child dbr:Keʻelikōlani ;
                     a dbo:Person .

  # Kekūanāoʻa
  ?kekuanaoa a dbo:Person ;
             rdfs:label ""Kekūanāoʻa""@en .

  # The person we are looking for is the child of both Keʻelikōlani's father and Kekūanāoʻa
  ?person dbo:child ?keelikoalaniFather ;
          dbo:child ?kekuanaoa ;
          a dbo:Person .

  # This person must be a parent of Albert Kamehameha
  ?person dbo:parent dbr:Albert_Kamehameha_III .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
465,37,train,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Renée of France.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Find Elizabeth of Austria and her parent
  ?elizabeth a dbo:Person ;
             foaf:name ""Elizabeth of Austria"" ;
             dbo:parent ?parent .

  # Step 2: Identify the child of this parent who is royalty
  ?child dbo:parent ?parent ;
         dbo:spouse ?successor ;
         a dbo:Monarch .

  # Step 3: Find the successor of Renée of France
  ?renée a dbo:Person ;
         foaf:name ""Renée of France"" .
  
  ?successor dbo:succeededBy ?renée .

  # Step 4: Get the spouse of this royal child
  ?child dbo:spouse ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
606,4,train,"Give me the figure known, that is a university and a sports league and an educational institution, as Penn Quakers.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?team a dbo:AthleticTeam ;
        dbo:sportTeamInstitution dbr:University_of_Pennsylvania ;
        rdfs:label ?label .
  
  FILTER(CONTAINS(LCASE(?label), ""quakers""))
}
```

This query does the following:
- It selects entities that are of type `dbo:AthleticTeam`.
- It ensures these teams are associated with the University of Pennsylvania (`dbr:University_of_Pennsylvania`).
- It filters results to include only those whose label contains ""Quakers"" (case-insensitive).",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
976,19,train,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of Meral Akşener.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeLabel WHERE {
  # Find the Speaker of the Grand National Assembly of Turkey
  {
    SELECT DISTINCT ?speaker WHERE {
      ?speaker a dbo:Politician ;
               dbo:positionHeld ?position .
      ?position dbo:organization dbr:Grand_National_Assembly_of_Turkey ;
                dbo:title ""Speaker"" .
    }
    # Get the office held by the Speaker
    OPTIONAL { ?speaker dbo:office ?office . }
  }

  UNION

  # Find Meral Akşener and her offices
  {
    SELECT DISTINCT ?person WHERE {
      ?person a dbo:Politician ;
              rdfs:label ""Meral Akşener""@en .
    }
    OPTIONAL { ?person dbo:office ?office . }
  }

  BIND(?speaker AS ?person) # Bind the speaker to person for union results
  OPTIONAL { ?office rdfs:label ?officeLabel . FILTER(LANG(?officeLabel) = 'en') }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
508,7,train,"Give me the birthplace of the commander, that is a politician, in 1939–1940 Winter Offensive.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Identify the person who was a commander in the Winter Offensive and also a politician
  ?person dbo:occupation dbr:Military_person ;
          dbo:occupation dbr:Politician ;
          dbo:commanderOf dbr:Winter_Offensive_1939%E2%80%931940 .

  # Find the birthplace of this person
  ?person dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,2,20,0,0,11,0,0.0,0
417,14,train,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  # Frederick Francis III, Grand Duke of Mecklenburg-Schwerin
  ?frederick a dbo:Person ;
             dbp:name ""Frederick Francis III"" ;
             dbp:title ""Grand Duke of Mecklenburg-Schwerin""@en .

  # His children
  ?child dbo:parent ?frederick .
  
  # Their children (grandchildren)
  ?grandchild dbo:parent ?child .

  # Filter grandchildren who are royalty
  ?grandchild a dbo:Monarch ;
              dbp:title ?title .
}
```",2,3,3,2,1,3,3,71,0,0,8,0,0.0,0
865,9,train,Give me the native of British Raj and father of AK Abdul Momen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?person dbo:father dbr:AK_Abdul_Momen .
  ?person dbo:nativePlace ?nativePlace .
  FILTER EXISTS { ?person dbo:country dbr:British_Raj }
}
```

This query does the following:
- It selects the native place (`?nativePlace`) of a person.
- The person is identified as having AK Abdul Momen as their child (`dbo:father`).
- Additionally, it checks if this person has a connection to British Raj through the `dbo:country` property.

Note that the exact properties and resources might need adjustment based on DBpedia's current schema and available data. If `dbo:country` or similar properties are not directly linking to ""British Raj,"" you may need to explore alternative ways to establish this historical context, possibly by checking for other related properties or using broader queries.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
41,15,train,"Give me the party of Enda Kenny and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyEndaKenny ?partyLeader2005Castlereagh
WHERE {
  # Enda Kenny's political party
  dbr:Enda_Kenny dbo:politicalParty ?partyEndaKenny .

  # Leader of the 2005 Castlereagh Borough Council election
  # Assuming we have a resource for this leader, e.g., dbr:Leader_2005_Castlereagh
  # This part might need manual adjustment based on available data in DBpedia
  OPTIONAL {
    dbr:Leader_2005_Castlereagh dbo:politicalParty ?partyLeader2005Castlereagh .
  }
}
```

**Notes:**
- The query assumes that there is a resource for the leader of the 2005 Castlereagh Borough Council election. You might need to adjust this part based on actual data available in DBpedia.
- If the specific leader's resource is not directly available, you may need to find it through related resources or additional queries.",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
83,10,train,"Who is the governor of the commander, that is a politician, in Central African Republic Civil War?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor WHERE {
  # Find the commander involved in the Central African Republic Civil War
  ?commander dbo:wikiPageWikiLink* dbr:Central_African_Republic_Civil_War .
  
  # Ensure the commander is a politician
  ?commander rdf:type dbo:Politician .

  # Find if this commander has a role as governor
  ?commander dbo:governorOf ?governor .
}
```",2,3,3,2,1,3,2,20,0,0,19,0,0.0,0
573,0,train,Give me the person decedent at Massachusetts.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Massachusetts .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,3,71,968,885,0,0.5223961144090664,1.0,0.6862814604750089
267,5,train,Give me the birth date of Dan Cathy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
SELECT ?birthDate WHERE {
  wd:Q1234568 dbo:birthDate ?birthDate .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Dan Cathy. You can find this by searching for ""Dan Cathy"" on DBpedia or using a SPARQL endpoint to query for his identifier.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
987,1,train,Give me the birth place of Moamer Kasumović.,SELECT ?result WHERE { <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q1116 dbo:birthPlace ?birthPlace.
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
935,1,train,Give me the headquarter of Provincial Assembly of Balochistan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Provincial_Assembly_of_Balochistan> <http://dbpedia.org/ontology/location> ?result . },"```sparql
SELECT ?headquarters WHERE {
  wd:Q123456 wdt:P856 ?headquarters .
  FILTER (langMatches(lang(?headquarters), ""en""))
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for the Provincial Assembly of Balochistan. You can find this identifier by searching for the entity on DBpedia or using a SPARQL query to search for it.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
170,11,train,Give me the domain of the profession of John Scholey.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?domain
WHERE {
  ?person a dbo:Person ;
          foaf:name ""John Scholey""@en .
  
  OPTIONAL { 
    ?person dbo:profession ?profession .
    
    ?profession rdfs:domain ?domain .
  }
}
```",2,2,3,2,1,2,3,28,0,0,39395,0,0.0,0
129,7,train,Give me the associated musical artist of Saba (rapper) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?saba { dbr:Saba_(rapper) }
  
  ?association dbo:associatedMusicalArtist ?artist .
  ?association dbo:musicalArtist ?saba .

  FILTER(?artist != ?saba)
}
```",2,2,3,1,2,2,3,28,0,0,7,0,0.0,0
445,11,train,"Give me the entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?person a dbo:Person ;
          foaf:name ""Anna Sharkey""@en .
  OPTIONAL { ?person dbo:residence ?residence . }
  ?residence dbo:country ?country .
}
```

This query does the following:
- It looks for an entity `?person` that is of type `dbo:Person` and has a name ""Anna Sharkey"".
- It then checks if this person has a residence (`dbo:residence`) linked to them.
- Finally, it retrieves the country associated with that residence.

Note: The query assumes that DBpedia contains such detailed information about Anna Sharkey. If her data is not present or structured differently, adjustments may be needed.",2,3,3,2,1,3,3,71,0,0,3570,0,0.0,0
41,17,train,Give me the party of the person born as David Declan Costello and party of Enda Kenny.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyLabel WHERE {
  VALUES ?person { 
    dbr:David_Declan_Costello 
    dbr:Enda_Kenny
  }
  
  ?person dbo:politicalParty ?party .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
41,9,train,Give me the party of Declan Costello and party of Enda Kenny.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyLabel WHERE {
  VALUES ?person { 
    dbr:Declan_Costello 
    dbr:Enda_Kenny 
  }
  
  ?person dbo:politicalParty ?party .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
98,5,train,"Give me the region, that is a country, of Philippine Standard Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?timeZone dbo:timezoneName ""Philippine Standard Time"" .
  ?timeZone dbo:country ?country .
}
```",1,2,2,1,1,2,3,28,0,0,8,0,0.0,0
933,12,train,Give me the reference to Alan Warner and band of The Ramong Sound.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?person a dbo:MusicArtist .
  ?person foaf:name ""Alan Warner"" .
  ?membership dbo:member ?person .
  ?membership dbo:group ?band .
  ?band foaf:name ""The Ramones"" .
}
```

This query does the following:
- It looks for individuals (`?person`) who are classified as `dbo:MusicArtist`.
- It checks if their name is ""Alan Warner"".
- It finds memberships where this person is a member of a band.
- It ensures that the band's name is ""The Ramones"".",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
773,6,train,Give me the successor of Charles the Bald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  ?charles a dbo:Monarch ;
           foaf:name ""Charles the Bald""@en .
  OPTIONAL { 
    ?charles dbo:successor ?successor .
  }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
236,8,train,Give me the party member of the administration of James Madison.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . },"```sparql
SELECT ?partyMember WHERE {
  wd:Q1116 wdt:P69 ?administration.
  ?administration wdt:P102 wd:Q1116. # James Madison's administration
  ?administration wdt:P106 ?position.
  ?position wdt:P279* wd:Q1656682. # Position of government official
  ?partyMember wdt:P39 ?position.
  ?partyMember wdt:P31 wd:Q5. # Person
}
```",2,2,3,2,1,3,2,20,0,0,597,0,0.0,0
826,5,train,"Who is the reference, that is a royalty, to Louis I?","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  ?person dbo:spouse|dbo:child|dbo:parent|dbo:sibling* dbr:Louis_I_of_France .
  ?person a dbo:Monarch ;
          rdfs:label ?reference .
  FILTER (LANG(?reference) = 'en')
}
```",1,2,2,1,1,3,3,71,0,0,8,0,0.0,0
216,39,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in Mario Ivanković.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Find Pavel Vezhinov's death date
  ?vezhinov a dbo:Person ;
           dbp:deathDate ?deathDate .

  # Identify the person with multiple roles
  ?person a dbo:SoccerPlayer, dbo:SoccerManager, dbo:SportsManager ;
          dbo:birthPlace ?placeBirth ;
          dbo:deathDate ?deathDate ; # Ensure they died on Pavel Vezhinov's death date

  # Connection to Mario Ivanković as a player
  ?team dbo:player ?person ;
        dbo:player ?marioIvankovic .

  # Define Mario Ivanković
  ?marioIvankovic dbr:Mario_Ivanković .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
579,5,train,"Give me the birth name of Jane Percy, Duchess of Northumberland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?result . }","```sparql
SELECT ?birthName WHERE {
  wd:Q123456 wdt:P735 ?person . # Jane Percy, Duchess of Northumberland's Wikidata item
  ?person wdt:P1476 ?birthName .
}
```

Note: Replace `wd:Q123456` with the actual Wikidata ID for Jane Percy, Duchess of Northumberland.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
200,0,train,Give me the reference to Angelcorpse.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Angelcorpse""@en . }","```sparql
SELECT ?reference WHERE {
  wd:Q123456 rdfs:label ""Angelcorpse""@en. # Replace Q123456 with the actual DBpedia ID of Angelcorpse if known.
  ?reference schema:description ?description .
  FILTER(CONTAINS(LCASE(?description), ""angelcorpse""))
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
606,7,train,"Give me the figure known as the nickname of DeKalb, Illinois.","SELECT ?result WHERE { <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alias WHERE {
  VALUES ?city { dbr:DeKalb_(Illinois) }
  ?city dbo:commonName ?alias .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
445,18,train,Give me the death place of Patrick Moore and entity in United Kingdom and entity in England.,SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?ukEntity ?englandEntity WHERE {
  # Get death place of Patrick Moore
  dbr:Patrick_Moore dbo:deathPlace ?deathPlace .

  # Get an entity related to the United Kingdom
  OPTIONAL { 
    dbr:United_Kingdom dbo:wikiPageRedirects ?ukEntity .
  }

  # Get an entity related to England
  OPTIONAL {
    dbr:England dbo:wikiPageRedirects ?englandEntity .
  }
}
```",3,3,4,1,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
507,1,train,Give me the director of Entertaining Mr Sloane (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . },"```sparql
SELECT ?director WHERE {
  ?film dct:subject dbc:Entertaining_Mr_Sloane_film .
  ?film dbo:director ?director .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
273,9,train,Give me the child of the child of Edoardo Agnelli (1831-1871).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Find Edoardo Agnelli's children
  ?child dbo:parent dbr:Edoardo_Agnelli_(1831-1871) .
  
  # For each child, find their children (i.e., Edoardo's grandchildren)
  ?grandchild dbo:parent ?child .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
83,13,train,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/property/leaderParty> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?rulingParty WHERE {
  # Find sports managers who are members of Kedah FA
  ?person dbo:memberOf dbr:Kedah_FA ;
          a dbo:SportsManager ;
          dbo:birthPlace ?town .

  # Ensure the birthplace is a Brazilian town with a soccer club
  ?town a dbo:Settlement ;
        dbp:country dbr:Brazil ;
        dbp:sportTeam ?soccerClub .
  
  # Find the ruling party in that town
  ?town dbo:government ?government .
  ?government dbo:rulingParty ?rulingParty .

}
```",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
507,36,train,Give me the professional in the profession of the person born on 1966-02-18 and spouse of Anne V. Coates.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  ?person dbo:birthday ""1966-02-18""^^xsd:date .
  ?person dbo:spouse ?coates .
  ?coates rdfs:label ""Anne V. Coates""@en .
  FILTER (lang(?coatesLabel) = 'en') .

  OPTIONAL { ?person dbo:profession ?professional . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
715,26,train,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Identify the president from the 1933 Spanish general election
  ?president a dbo:President ;
             dbo:electedDuring dbr:Spanish_general_election,_1933 ;
             dbo:country dbr:Spain .

  # Find the mayor of Madrid or Barcelona during this time
  OPTIONAL { 
    ?mayor dbo:officeHolderOf dbr:Madrid ; 
           dbo:officeHolderOf dbr:Barcelona .
  }

  # Identify the commander in chief under this president
  ?commander dbo:commandedBy ?president ;
             a dbo:MilitaryPerson .

  FILTER EXISTS { ?president dbp:term ""President of Spain"" }
}
```",3,6,4,3,1,3,3,71,0,0,28,0,0.0,0
715,4,train,"Give me the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?person a dbo:Person ;
          foaf:name ""Abd el-Krim""@en .
  
  OPTIONAL { 
    ?person dbo:militaryConflict ?conflict .
    ?conflict dbo:participatingMilitaryForce ?force .
  }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
839,36,train,"Give me the band of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?subBand 
WHERE {
  # Find Kevin Russell and his associated band
  dbr:Kevin_Russell (dbo:musicalArtist) ?band .
  
  # Check if the band itself is a musical artist with its own bands
  OPTIONAL { 
    ?band dbo:musicalArtist ?subBand .
  }
}
```

This query does the following:
- It looks for Kevin Russell and identifies any entity that is linked to him as a `musicalArtist`.
- Then, it checks if this band (`?band`) has its own associated bands or musical artists (`?subBand`).",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
47,37,train,"Give me the office of the awardee of the award, that is an award, of Mantu Ghosh and office of Ajoy Mukherjee.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?award ?office
WHERE {
  # Find awards associated with Mantu Ghosh
  { 
    VALUES ?person { dbr:Mantu_Ghosh }
    ?person dbo:awards ?award .
    OPTIONAL { ?award dbo:recipient ?person . }
    
    # Retrieve the office held by Mantu Ghosh
    OPTIONAL {
      ?person dbo:office ?office .
    }
  }

  UNION

  # Find awards associated with Ajoy Mukherjee
  { 
    VALUES ?person { dbr:Ajoy_Mukherjee }
    ?person dbo:awards ?award .
    OPTIONAL { ?award dbo:recipient ?person . }
    
    # Retrieve the office held by Ajoy Mukherjee
    OPTIONAL {
      ?person dbo:office ?office .
    }
  }
}
ORDER BY ?person",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
465,17,train,"Give me the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Identify Charles Orlando, Dauphin of France
  dbr:Charles_Orlando,_Dauphin_of_France dbo:parent ?parent .

  # Step 2: Find the children of that parent
  ?parent dbo:child ?child .

  # Step 3: Filter those children to include only royalty
  ?child a dbo:Monarch .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
839,37,train,"Give me the band of Matthias Röhr and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?matthiasBand ?schorowskyMemberBand
WHERE {
  # Find Matthias Röhr's band
  ?person1 foaf:name ""Matthias Röhr""@en .
  ?person1 dbo:musicalArtist ?matthiasBand .
  
  # Ensure the band is both a band and a group
  ?matthiasBand rdf:type dbo:MusicalGroup .

  # Find Peter Schorowsky's band member
  ?person2 foaf:name ""Peter Schorowsky""@en .
  ?person2 dbo:musicalArtist ?schorowskyMember .
  
  # Ensure the member is part of a band that is both a band and a group
  ?schorowskyMember dbo:band ?schorowskyMemberBand .
  ?schorowskyMemberBand rdf:type dbo:MusicalGroup .

}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
508,13,train,"Give me the birthplace of the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Hayao Tada as a person and commander in a military conflict
  dbr:Hayao_Tada dbo:occupation dbr:Commander .
  
  # The military conflict that is also a societal event
  dbr:Hayao_Tada dbo:militaryConflict [
    a dbo:MilitaryConflict ;
    dbo:societalEvent true .
  ] .

  # Hayao Tada's birthplace
  dbr:Hayao_Tada dbo:birthPlace ?birthPlace .
}
```",3,7,4,3,1,3,2,20,0,0,49,0,0.0,0
365,14,train,"Give me the spouse of the native, that is a politician, of the reference to Полтавская губерния.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person dbo:nationality dbr:Ukraine ;
          dbo:birthPlace dbr:Poltava_Governorate ;
          dbo:occupation dbr:Politician .
  
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",3,4,4,3,1,3,2,20,0,0,3,0,0.0,0
917,25,train,Give me the child of Kekūanāoʻa and child of the father of Kamehameha IV.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Kekūanāoʻa's child
  dbr:Kamehameha_I dbo:parent dbr:Kekūanāoʻa .
  
  # Father of Kamehameha IV is Kamehameha II
  dbr:Kamehameha_IV dbo:parent dbr:Kamehameha_II .

  # Child of Kamehameha II
  ?child dbo:parent dbr:Kamehameha_II .
  
  FILTER(?child = dbr:Kamehameha_IV)
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
98,16,train,"Give me the region of Philippine Standard Time and entity in the region, that is a country, of Philippine Standard Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
SELECT ?region ?country WHERE {
  ?timeZone dcterms:isPartOf ?region .
  ?timeZone rdfs:label ""Philippine Standard Time""@en .
  OPTIONAL { ?region dbo:country ?country . FILTER (isLiteral(?country)) }
}
```",3,4,4,2,2,2,3,28,0,0,1743,0,0.0,0
216,29,train,"Give me the player in Igor Bišćan and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and team of Ognjen Vukojević.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Igor Bišćan related players
  {
    ?player dbo:teamMember dbr:Igor_Bišćan .
    ?player dbo:position ""Player""@en .
  }
  
  UNION
  
  # Ognjen Vukojević related players
  {
    ?player dbo:teamMember dbr:Ognjen_Vukojević .
    ?player dbo:position ""Player""@en .
  }

  # Filter for sports managers and soccer managers
  FILTER EXISTS { 
    ?player dbo:occupation dbr:Soccer_manager ;
            dbo:occupation dbr:Sports_manager .
  }
  
  # Connection to Bosnia and Herzegovina national under-18 football team
  FILTER EXISTS {
    ?player dbo:teamMember dbr:Bosnia_and_Herzegovina_national_under-18_football_team .
  }
}",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
839,33,train,"Give me the band of Kevin Russell (musician) and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?kevinBand ?peterBand WHERE {
  # Find the band associated with Kevin Russell (musician)
  OPTIONAL {
    ?kevin dbr:Kevin_Russell_(musician) .
    ?kevin dbo:musicalArtistInGroup ?kevinBand .
    FILTER NOT EXISTS { ?kevinBand a dbo:MusicalArtist . }
  }

  # Find the band associated with Peter Schorowsky if he is part of any group that is both a band and a group
  OPTIONAL {
    ?peter dbr:Peter_Schorowsky .
    ?peter dbo:musicalArtistInGroup ?group .
    ?group rdf:type dbo:Band ;
           rdf:type dbo:MusicalGroup .
    ?group dbo:musicalArtistInGroup ?peterBand .
    FILTER NOT EXISTS { ?peterBand a dbo:MusicalArtist . }
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
987,10,train,Give me the entity in Montenegro and birth place of Dado Polumenta.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Dado Prlja""@en ;
          dbo:birthPlace ?birthPlace .
  
  FILTER (regex(str(?birthPlace), ""Montenegro"", ""i""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
791,34,train,"Give me the father of Emperor Go-Toba and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?spouseOfSpouse WHERE {
  # Find the father of Emperor Go-Toba
  dbr:Emperor_Go-Toba dbo:father ?father .

  # Find the spouse of Emperor Takakura (who is royalty)
  dbr:Emperor_Takakura dbo:spouse ?takakuraSpouse .
  
  # Ensure the spouse is a royalty
  ?takakuraSpouse rdf:type dbo:Monarch .

  # Find the spouse of Emperor Takakura's spouse
  ?takakuraSpouse dbo:spouse ?spouseOfSpouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
978,5,train,Give me the person born as Nicholas Bracegirdle.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  ?person dbo:birthName ""Nicholas Bracegirdle""@en .
}
```

This query uses the `dbo:birthName` property to find individuals whose birth name is ""Nicholas Bracegirdle"". The result will include the DBpedia resource for the person and their birth name.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
926,5,train,Give me the spouse of Şermi Kadın.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . },"```sparql
SELECT ?spouse WHERE {
  wd:Q1234568 wdt:P26 ?spouse .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Şermi Kadın. You can find this by searching for her on DBpedia or using a SPARQL query to identify her unique ID.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
158,0,train,Give me the entity in France.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:France .
}
```",1,1,2,1,1,3,2,20,44301,0,0,1.0,1.0,1.0
715,34,train,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?conflict WHERE {
  ?person dbo:nationality dbr:Morocco .
  ?person dbo:role ?role .
  FILTER EXISTS { ?role rdfs:label ""Ministry of the Air""@en . }
  ?person dbo:militaryConflict ?conflict .
}
```

This query does the following:
- Selects individuals (`?person`) who are nationals of Morocco.
- Checks if they have a role related to the Ministry of the Air (Spain).
- Links them to any military conflict.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
888,4,train,Give me the commander in 2022 Ukrainian eastern counteroffensive.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find resources related to Ukraine's military or defense ministry
  ?militaryLeader dbo:position ""Commander"" .
  ?militaryLeader dbo:country dbr:Ukraine .
  
  # Optionally, filter by time frame if available
  OPTIONAL { 
    ?event dbo:date ?date .
    FILTER (YEAR(?date) = 2022)
    ?militaryLeader dbo:participatedIn ?event .
  }
  
  # Return the commander's name or title
  ?commander rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
527,7,train,"Give me the actor of the movie, that is a work and English and a television show, with Bernard Bresslaw.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Bernard_Bresslaw ;
         dbo:genre ?genre .
  
  ?tvShow a dbo:TelevisionSeries ;
          dbo:language ""English""^^xsd:string ;
          dbo:basedOn ?movie .

  ?actor dbo:starring ?movie .
}
```

This query does the following:
- Selects movies that are films and have Bernard Bresslaw as one of the starring actors.
- Ensures these movies are also based on television shows that are in English.
- Retrieves distinct actors who starred in these movies.",2,5,3,2,1,3,2,20,0,0,7,0,0.0,0
18,17,train,"Give me the parent of the professional in Actress and alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          dbo:almaMater dbr:Marymount_College_(Tarrytown) ;
          dbo:occupation dbr:Actress .
  
  OPTIONAL { ?person dbo:child ?parent . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
773,35,train,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of the father of Charles the Fat.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Step 1: Identify Louis the German
  ?louis a dbo:Monarch ;
         dbp:name ""Louis the German""@en .

  # Step 2: Find his children who are royalty
  ?child dbo:spouseOrPartnerOf ?louis ;
         a dbo:Monarch .

  # Step 3: Identify Charles the Fat and his father (Louis the German)
  ?charles a dbo:Monarch ;
           dbp:name ""Charles the Fat""@en .
  ?father dbo:child ?charles ;
          dbp:name ""Louis the German""@en .

  # Step 4: Find the spouse of Louis the German
  ?spouse dbo:spouseOrPartnerOf ?louis .
  
  BIND(?spouse AS ?parent)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
129,2,train,Give me the associated musical artist of Saba (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  wd:Q1056987 wdt:P175 ?artist .
}
```",1,1,2,1,1,2,3,28,0,0,8,0,0.0,0
417,12,train,Give me the child of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Children of Alexandrine of Mecklenburg-Schwerin
  { 
    dbr:Alexandrine_of_Mecklenburg-Schwerin dbo:spouse dbr:Christian_X_of_Denmark .
    ?child dbo:parent dbr:Alexandrine_of_Mecklenburg-Schwerin .
  }
  
  UNION
  
  # Children of Christian X of Denmark
  { 
    dbr:Christian_X_of_Denmark dbo:spouse dbr:Alexandrine_of_Mecklenburg-Schwerin .
    ?child dbo:parent dbr:Christian_X_of_Denmark .
  }
}
```",2,2,3,1,2,3,3,71,2,0,0,1.0,1.0,1.0
36,1,train,Give me the person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthYear ""1971""^^xsd:gYear .
}
```",1,1,2,1,1,2,3,28,2611,0,0,1.0,1.0,1.0
281,16,train,Give me the commander in New Guinea campaign and awardee of the award of Alfred Warden.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?award
WHERE {
  ?campaign dbo:location dbr:New_Guinea .
  ?campaign dbo:commander ?commander .
  ?commander dbo:awardsReceived ?award .
  FILTER (str(?award) = ""Alfred_Warden_Medal"")
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
965,34,train,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouseOfSpouse WHERE {
  # Step 1: Identify Louise Mountbatten's parent
  ?parent a dbo:Person ;
          dbo:child ?louiseMountbatten .
  
  # Louise Mountbatten URI
  VALUES ?louiseMountbatten { <http://dbpedia.org/resource/Louise_Mountbatten> }
  
  # Step 2: Find the spouse of that parent
  ?parent dbo:spouse ?commonSpouse .

  # Step 3: Identify George Mountbatten's parent
  ?georgeParent a dbo:Person ;
                dbo:child ?georgeMountbatten .
  
  # George Mountbatten URI
  VALUES ?georgeMountbatten { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> }
  
  # Step 4: Find the common spouse
  ?georgeParent dbo:spouse ?commonSpouse .

  # Step 5: Determine the spouse of this common spouse
  ?commonSpouse foaf:mbox ?spouseOfSpouse .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
216,6,train,"Give me the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coach WHERE {
  # Find the Bosnia and Herzegovina national under-18 football team
  dbr:Bosnia_and_Herzegovina_national_under-18_football_team dbo:coach ?coach .

  # Ensure the coach is also a soccer player
  ?coach dbo:occupation dbr:Soccer_player .

  # Ensure the coach is also a sports manager
  ?coach dbo:occupation dbr:Sports_manager .
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
417,39,train,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Alexandrine of Mecklenburg-Schwerin and Christian X of Denmark as parents
  VALUES ?parent { 
    dbr:Alexandrine_of_Mecklenburg-Schwerin 
    dbr:Christian_X_of_Denmark 
  }

  # Find their children
  ?child dbo:spouse|dbo:partner ?parent .
  
  # From those children, find grandchildren who are royalty
  ?grandchild dbo:parent ?child .
  ?grandchild a dbo:Monarch ; # Ensure the grandchild is royalty
             rdfs:label ?name .
}
ORDER BY ?name
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
495,11,train,Give me the child of the father of William I of Württemberg and father of Princess Charlotte of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Charlotte_of_Württemberg> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Frederick II Eugene, Duke of Württemberg
  dbr:Friedrich_II_Eugen,_Duke_of_W%C3%BCrttemberg dbo:spouse ?spouse .
  
  # Find children of Frederick II Eugene
  ?child dbo:parent dbr:Friedrich_II_Eugen,_Duke_of_W%C3%BCrttemberg .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
41,6,train,Give me the party of Declan Costello and party of Mark Durkan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyLabel WHERE {
  VALUES ?person { 
    dbr:Declan_Costello 
    dbr:Mark_Durkan 
  }
  
  ?person dbo:politicalParty ?party .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
158,5,train,"Who is the successor, that is a prime minister and an office holder and a politician, of André Tardieu?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # André Tardieu as Prime Minister of France
  dbr:André_Tardieu dbo:officeHolderOf dbr:Prime_Minister_of_France.
  
  # Find the successor who is also a prime minister, office holder, and politician
  ?successor dbo:succeededBy dbr:André_Tardieu .
  ?successor dbo:officeHolderOf dbr:Prime_Minister_of_France .
  ?successor rdf:type dbo:Politician .
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
978,0,train,Give me the band member of Enya.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Enya> . },"```sparql
SELECT ?member WHERE {
  wd:Q15288 dbo:musicalArtist ?band .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
465,19,train,Give me the successor of the child of Alfonso I d'Este and spouse of Archduchess Barbara of Austria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v0 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  ?child a dbo:Person ;
         dbo:spouse ?barbara ;
         dbo:parent ?alfonsoI .

  ?alfonsoI rdfs:label ""Alfonso I d'Este""@en .
  
  ?barbara rdfs:label ""Barbara of Austria""@en .

  ?child dbo:succeededBy ?successor .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
573,5,train,"Who is the professional, that is American, in Politician?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Politician .
  ?person dbo:nationality dbr:United_States .
}
```",1,2,2,1,1,3,3,71,78,2698,5,0.028097982708933718,0.9397590361445783,0.05456453305351521
865,28,train,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of AK Abdul Momen and father of Shahla Khatun.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeLanguage WHERE {
  # Identify Ram Jaipal Singh Yadav
  ?person a dbo:Person ;
          foaf:name ""Ram Jaipal Singh Yadav""@en .
  
  # Find his children AK Abdul Momen and Shahla Khatun
  ?person dbo:child dbr:AK_Abdul_Momen ;
          dbo:child dbr:Shahla_Khatun .

  # Get the residence of Ram Jaipal Singh Yadav
  ?person dbo:residence ?residence .
  
  # Check if the residence is a country
  ?residence a dbo:Country .

  # Retrieve the native language or nationality of that country
  ?residence dbp:nativeLanguage ?nativeLanguage .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
865,5,train,Who is the spouse of Syeda Shahar Banu?,SELECT ?result WHERE { <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person dbp:name ""Syeda Shahar Banu""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
573,39,train,"Give me the person decedent at Quincy, Massachusetts and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # John Quincy Adams as an author
  dbr:John_Quincy_Adams dbo:author dbr:Some_Work .

  # Parent of John Quincy Adams
  ?parent dbo:child dbr:John_Quincy_Adams .
  
  # Decedent at Quincy, Massachusetts
  ?parent dbo:deathPlace dbr:Quincy,_Massachusetts .
  
  # Politician and Office Holder
  ?parent a dbo:Politician ;
          dbo:officeHolder ?office .

}
```

### Explanation:

- **PREFIX**: Define prefixes for DBpedia ontology (`dbo`), resources (`dbr`), and properties (`dbp`).
- **SELECT**: We are selecting the person who fits all criteria.
- **John Quincy Adams as an author**: This line ensures we're considering John Quincy Adams in his role as an author.
- **Parent of John Quincy Adams**: Find a parent linked to John Quincy Adams.
- **Decedent at Quincy, Massachusetts**: Ensure the parent died in Quincy, Massachusetts.
- **Politician and Office Holder**: Check if the person is a politician and held office.

This query assumes that DBpedia has structured data for these relationships. Adjustments might be needed based on actual data availability and structure in DBpedia.",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
892,3,train,Give me the true self of Enrico Crolla.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?property ?value
WHERE {
  VALUES ?resource { dbr:Enrico_Crolla }
  ?resource ?property ?value .
  FILTER(?property IN (dbo:birthName, dbo:birthPlace, dbo:dateOfBirth))
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
102,13,train,"Give me the manager of the player in the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player ?manager WHERE {
  ?player dbo:memberOfTeam dbr:England_women%27s_national_football_team .
  
  ?player rdf:type dbo:SoccerPlayer .

  ?player dbo:currentClub ?team .

  ?team dbo:manager ?manager .
}
```",3,4,4,3,1,3,2,20,0,0,43,0,0.0,0
527,11,train,"Give me the actor of the movie, that is a work and English and a television show, with Bernard Bresslaw and author of The Boy Who Kicked Pigs.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Boy_Who_Kicked_Pigs> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie a dbo:TelevisionShow ;
         dbo:language ""English"" ;
         dbo:starring dbr:Bernard_Bresslaw .
  
  ?author dbo:book dbr:The_Boy_Who_Kicked_Pigs ;
          dbo:starring ?actor .

  FILTER(?movie = ?author)
}
```",3,6,4,2,2,3,2,20,0,0,1,0,0.0,0
987,27,train,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  # Find the time zone for Canicosa de la Sierra
  dbr:Canicosa_de_la_Sierra dbo:timeZone ?timezone .

  # Link the time zone to a sports event
  ?sportsEvent dbo:timeZone ?timezone .
  
  # Ensure the sports event is indeed a sports event
  ?sportsEvent rdf:type dbo:SportsEvent .

  # Find the country associated with this sports event
  ?sportsEvent dbo:country ?country .
}
```",3,5,4,3,1,3,3,71,0,1,173261,0.0,0.0,0
18,2,train,"Give me the alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . }","```sparql
SELECT ?alumnus WHERE {
  ?college dcterms:isPartOf <http://dbpedia.org/resource/Marymount_College_(Tarrytown,_New_York)> ;
           dbo:alumni ?alumnus .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
36,7,train,Give me the actor of Being Mrs Elliot and person born as Ayo Makun.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?person WHERE {
  # Find the actor of ""Being Mrs Elliot""
  { 
    ?movie dbo:title ""Being Mrs Elliot""@en .
    ?movie dbo:actor ?actor .
  }
  
  UNION
  
  # Find the person born as Ayo Makun
  {
    ?person foaf:name ""Ayo Makun"" .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
715,23,train,"Give me the commander in the force, that is a military conflict, of the native of Morocco.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?conflict ?commander WHERE {
  ?conflict a dbo:MilitaryConflict .
  ?conflict dbo:commander ?commander .
  ?commander dbo:nationality dbr:Morocco .
}
```

This query does the following:
- Selects military conflicts (`?conflict`) and their commanders (`?commander`).
- Ensures that the commander is from Morocco by checking the nationality property.",3,4,4,3,1,3,3,71,0,0,476,0,0.0,0
507,15,train,Who is the person born as the birth name of Anne V. Coates?,SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Anne V. Coates""@en .
}
```

This query searches for a person in DBpedia whose birth name is ""Anne V. Coates."" The `dbo:birthName` property is used to find the birth name of individuals.",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
216,18,train,Give me the party of Campbell Newman and administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?newmanParty ?administration
WHERE {
  dbr:Campbell_Newman dbo:partyAffiliation ?newmanParty .

  OPTIONAL {
    ?designer dbo:profession dbr:Video_game_designer .
    ?designer dbo:work dbr:Woolfe:_The_Red_Hood_Diaries .
    
    ?administration dbo:headOfGovernment ?designer .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
443,18,train,Give me the birthplace of Ulf Lundell and birthplace of the work of yes.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ""yes""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?subject { 
    dbr:Ulf_Lundell 
    dbr:Yes_(band) 
  }
  
  OPTIONAL {
    ?subject dbo:birthPlace ?birthPlace .
  }

  BIND(
    IF(?subject = dbr:Ulf_Lundell, ""Ulf Lundell"", ""Yes (band)"") AS ?person
  )
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
965,23,train,Give me the spouse of the spouse of the parent of Louise Mountbatten.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouseOfSpouseOfParent
WHERE {
  # Step 1: Find Louise Mountbatten's parents
  ?parent a dbo:Person ;
          dbo:child ?louiseMountbatten .
  
  # Louise Mountbatten entity
  VALUES ?louiseMountbatten { <http://dbpedia.org/resource/Louise_Mountbatten> }
  
  # Step 2: Find the spouses of those parents
  ?parent dbo:spouse ?parentSpouse .

  # Step 3: Find the spouses of those spouses
  ?parentSpouse dbo:spouse ?spouseOfParentSpouse .
  
  # Return the spouse of the spouse of the parent
  BIND(?spouseOfParentSpouse AS ?spouseOfSpouseOfParent)
}
```",3,3,4,3,1,3,3,71,1,0,1,1.0,0.5,0.6666666666666666
826,20,train,"Give me the spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?successor WHERE {
  # Find Anna Magdalena Appel's spouse
  dbr:Anna_Magdalena_Appel dbo:spouse ?spouse .

  # Find a royal child of Louis I, Grand Duke of Hesse
  OPTIONAL { 
    dbr:Louis_I,_Grand_Duke_of_Hesse dbo:child ?royalChild .
    FILTER EXISTS { ?royalChild rdf:type dbo:Monarch . }
    
    # Find the successor of that royal child
    ?royalChild dbo:successor ?successor .
  }
}
```

This query does the following:
- Retrieves the spouse of Anna Magdalena Appel.
- Optionally finds a royal child of Louis I, Grand Duke of Hesse, and their successor.

Note: The exact properties like `dbo:spouse`, `dbo:child`, and `dbo:successor` might need adjustments based on DBpedia's current schema. Additionally, the query assumes that there is a direct property for successors, which may not always be available in DBpedia.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
892,5,train,Give me the member of E-girls.,SELECT ?result WHERE { <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
SELECT ?member WHERE {
  ?group dcterms:subject dbc:E-girls .
  ?group dbo:member ?member .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
47,2,train,Give me the office of Ajoy Mukherjee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Ajoy_Mukherjee dbo:positionHeld ?office .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
433,16,train,"Give me the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Find associated musical artists of Ornette Coleman who are both an artist and a musical artist
  ?ornette dbo:musicalArtist ?artist1 .
  ?artist1 rdf:type dbo:MusicalArtist .
  ?artist1 rdf:type dbo:Artist .

  # From those, find their associated musical artists who are also both an artist and a musical artist
  ?artist1 dbo:musicalArtist ?associatedArtist .
  ?associatedArtist rdf:type dbo:MusicalArtist .
  ?associatedArtist rdf:type dbo:Artist .
}
```",2,6,3,2,1,3,3,71,0,0,20,0,0.0,0
158,13,train,"Give me the entity in the award, that is a country, of the reference to Adelbert Cronkhite.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?person rdfs:label ""Adelbert Cronkhite""@en .
  ?person dbo:award ?award .
  ?award dbo:country ?country .
}
```",3,4,4,3,1,3,2,20,0,0,44301,0,0.0,0
645,0,train,Give me the commander in Battle of Jarama.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?battle dbo:wikiPageID ""Battle_of_Jarama"" .
  ?battle dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
965,37,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Step 1: Identify George Mountbatten, 2nd Marquess of Milford Haven
  dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbo:parent ?parentOfMilfordHaven .

  # Step 2: Find a child of this parent who is royalty
  ?child dbo:parent ?parentOfMilfordHaven .
  ?child rdf:type dbo:Monarch .

  # Step 3: Identify the politician born on 1854-05-24
  ?politician dbo:birthday ""1854-05-24""^^xsd:date ;
              rdf:type dbo:Politician .

  # Step 4: Find the parent of this politician
  ?parentOfPolitician dbo:child ?politician .
  
  # Return the common parent
  FILTER(?parentOfMilfordHaven = ?parentOfPolitician)
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
865,34,train,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of Shahla Khatun.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativePlace WHERE {
  ?person dbo:deathPlace dbr:Patna .
  ?person dbo:child dbr:Shahla_Khatun .
  ?person dbo:residence ?residence .
  ?residence dbo:country ?country .
  ?country dbp:nativeName ?nativePlace .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
47,28,train,Give me the office of the administration of Jagdeep Dhankhar and office of Ajoy Mukherjee and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?officeTitle WHERE {
  VALUES ?person { 
    dbr:Jagdeep_Dhankhar 
    dbr:Ajoy_Mukherjee 
    dbr:Bidesh_Ranjan_Bose
  }
  
  OPTIONAL { ?person dbo:positionHeld ?position . }
  OPTIONAL { ?position dbp:title ?officeTitle . }

  FILTER(?officeTitle != """")
}
ORDER BY ?person",4,4,5,2,3,3,3,71,0,621672,1,0.0,0.0,0
917,2,train,Give me the child of Kekūanāoʻa.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?person dbo:child ?child .
  FILTER(?person = dbpedia:Kekūanāoʻa)
}
```

This query selects the child of Kekūanāoʻa by looking for individuals (`?child`) who are linked to Kekūanāoʻa through the `dbo:child` property.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
933,24,train,Give me the reference to the birth name of Alan Warner (musician) and band of The Ramong Sound.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName ?band
WHERE {
  # Alan Warner (musician)
  dbr:Alan_Warner_(musician) dbo:birthName ?birthName .
  
  # The Ramones band association
  OPTIONAL {
    dbr:The_Ramones dbo:member dbr:Alan_Warner_(musician) .
    BIND(""The Ramones"" AS ?band)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
933,16,train,Give me the birth name of the professional in Musician.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?musician ?givenName ?familyName WHERE {
  ?musician a dbo:MusicArtist .
  OPTIONAL { ?musician foaf:givenName ?givenName . }
  OPTIONAL { ?musician foaf:familyName ?familyName . }
}
```",2,2,3,2,1,3,3,71,0,0,856,0,0.0,0
18,3,train,Give me the award of Ana María Sánchez de Ríos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES ?person { dbr:Ana_María_Sánchez_de_Ríos }
  ?person dbo:award ?award .
}
```",1,1,2,1,1,2,3,28,0,2,3,0.0,0.0,0
773,11,train,Give me the spouse of the father of Charles the Fat.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Charles the Fat
  ?charles a dbo:Person ;
           foaf:name ""Charles III"" ; # Assuming DBpedia uses this name for Charles the Fat

  # Step 2: Find his father
  ?father dbo:child ?charles .

  # Step 3: Determine the spouse of that father
  ?spouse dbo:spouse ?father .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
124,16,train,"Give me the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  ?medal a dbo:Award .
  ?medal rdfs:label ""British South Africa Company Medal""@en .
  
  ?event dbo:awardee ?recipient .
  ?event dbo:award ?medal .

  ?war dbo:type dbr:Military_conflict ;
       dbo:partOf ?event .
}
```

This query does the following:
- Identifies the British South Africa Company Medal as an award.
- Finds events where this medal was awarded.
- Links these events to wars that are of type `Military conflict`.",2,5,3,2,1,3,3,71,0,0,13,0,0.0,0
773,5,train,"Give me the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Louis the Pious in DBpedia
  dbr:Louis_the_Pious dbo:spouse ?parent .
  
  # Find children of Louis the Pious
  ?parent dbo:child ?child .

  # Filter to ensure the child is royalty (e.g., has a title or role related to royalty)
  OPTIONAL { ?child dbo:title ?title . FILTER regex(?title, ""King|Queen|Emperor|Empress"", ""i"") }
}
```

This query does the following:
- Identifies Louis the Pious using `dbr:Louis_the_Pious`.
- Uses the `dbo:spouse` property to find his spouse(s) and then uses `dbo:child` to find their children.
- Filters these children to ensure they have a title indicating royalty, such as ""King"", ""Queen"", ""Emperor"", or ""Empress"".",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
987,17,train,"Give me the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  # Find the time zone for Canicosa de la Sierra
  dbr:Canicosa_de_la_Sierra dbo:timeZone ?timezone .

  # Link the time zone to a sports event
  ?sportsEvent dbo:timeZone ?timezone .
  
  # Ensure the sports event is linked to a region that is a country
  ?sportsEvent dbo:location ?region .
  FILTER (isLiteral(?region) && regex(str(?region), ""Country""))

  # Return the region
}
```",2,4,3,2,1,3,3,71,0,0,56,0,0.0,0
281,9,train,Give me the awardee of Medal bar and awardee of Volunteer Decoration.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  {
    ?award dbo:wikiPageRedirects dbr:Medal_bar .
    ?award dbo:recipient ?awardee .
  }
  UNION
  {
    ?award dbo:wikiPageRedirects dbr:Volunteer_Decoration .
    ?award dbo:recipient ?awardee .
  }
}
```

This query does the following:
- Uses `dbo:wikiPageRedirects` to find resources that redirect to the Medal bar and Volunteer Decoration.
- Retrieves the recipients (`?awardee`) of these awards using the property `dbo:recipient`.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
955,0,train,Give me the band of Nate Albert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nate_Albert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:name ""Nate Albert""@en .
  ?person dbo:memberOf ?band .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
445,19,train,"Give me the death place of Patrick Moore and entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?residenceCountry
WHERE {
  dbr:Patrick_Moore dbo:placeOfBirth ?deathPlace .
  
  dbr:Anna_Sharkey dbo:residence ?residence .
  ?residence dbo:country ?residenceCountry .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
93,6,train,Give me the death place of John Weir Troy and capital of Alaska.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alaska> <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/John_Weir_Troy> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace ?capital
WHERE {
  ?johnWeirTroy a dbo:Person ;
                foaf:name ""John Weir Troy"" ;
                dbo:deathPlace ?deathPlace .
  
  ?alaska a dbo:State ;
          rdfs:label ""Alaska""@en ;
          dbp:capital ?capital .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
216,12,train,Give me the party of Campbell Newman and office of Tim Nicholls and administration of .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/property/leader> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?office ?administration
WHERE {
  # Find Campbell Newman's party
  OPTIONAL { 
    dbr:Campbell_Newman dbo:politicalParty ?party .
  }
  
  # Find Tim Nicholls' office
  OPTIONAL { 
    dbr:Tim_Nicholls dbo:positionHeld ?office .
  }

  # Find the administration they were part of (assuming Queensland Government)
  OPTIONAL {
    ?administration a dbo:Government ;
                   dbo:member dbr:Campbell_Newman ;
                   dbo:member dbr:Tim_Nicholls .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
281,7,train,Give me the awardee of Volunteer Decoration and commander in New Guinea campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:honoraryTitle dbr:Volunteer_Decoration .
  ?person dbo:commanderOfMilitaryUnit ?unit .
  ?unit dbo:campaign dbr:New_Guinea_campaign .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
ORDER BY ?name
LIMIT 10",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
888,12,train,Give me the commander in Southern Ukraine campaign and awardee of the award of Oleksandr Syrskyi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Southern_Ukraine_campaign> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?award WHERE {
  # Find Oleksandr Syrskyi and his awards
  VALUES ?oleksandrSyrskyi { dbr:Oleksandr_Syrskyi }
  
  ?oleksandrSyrskyi dbo:awardeeOf ?award .
  
  # Assuming there's a way to link commanders to the Southern Ukraine campaign
  ?campaign dbo:commander ?commander .
  FILTER(CONTAINS(LCASE(?campaign), ""southern ukraine""))
}
```

This query assumes:
- There is a direct relationship between Oleksandr Syrskyi and his awards.
- The campaign in Southern Ukraine can be identified by its name or description.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
122,5,train,Give me the band member of the band of Gift of Gab (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?bandMember WHERE {
  wd:Q1234567 wdt:P31 wd:Q482980 . # Gift of Gab is a member of a band (replace Q1234567 with the actual DBpedia ID for Gift of Gab)
  wd:Q1234567 wdt:P127 ?band .       # The band that Gift of Gab belongs to
  ?bandMember wdt:P31 wd:Q215380.    # ?bandMember is an instance of a musical artist
  ?bandMember wdt:P47 ?band         # ?bandMember is a member of the band
}
```",2,2,3,2,1,2,2,9,0,0,24,0,0.0,0
935,0,train,Give me the death place of Abdul Raziq Bugti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdul_Raziq_Bugti> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  ?person dbo:deathPlace ?deathPlace .
  ?person rdfs:label ""Abdul Raziq Bugti""@en .
  FILTER(LANG(?deathPlace) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
433,28,train,"Give me the associated musical artist of Bill Evans and professional in Musician and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist1 ?associatedArtist2 WHERE {
  # Find associated musical artist of Bill Evans
  OPTIONAL {
    dbr:Bill_Evans dbo:associatedMusicalArtist ?associatedArtist1 .
  }

  # Find professional occupation and associated musical artist of Paul Chambers
  OPTIONAL {
    dbr:Paul_Chambers_(musician) a dbo:Musician ;
      dbo:associatedMusicalArtist ?associatedArtist2 .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
926,13,train,Give me the successor of the child of Ahmed III.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v1 <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successor WHERE {
  # Find Ahmed III's children
  ?child dbo:parent dbr:Aḥmed_III .
  
  # Find the successors of those children
  ?child dbo:successor ?successor .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
192,3,train,"Give me the spouse, that is a royalty, of Charles Martel of Anjou.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Resource for Charles Martel of Anjou
  dbr:Charles_Martel_of_Anjou dbo:spouse ?spouse .
  
  # Filter to include only those spouses who are royalty
  ?spouse a dbo:Monarch ;
          dbo:title ?title .
}
```

This query does the following:
- It starts by identifying Charles Martel of Anjou using his DBpedia resource identifier.
- It then looks for any entities linked as his spouse.
- Finally, it filters these spouses to include only those who are classified under `dbo:Monarch` and have a title, indicating royalty.",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
98,0,train,Give me the parent of Emperor Rokujō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Rokujō> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?emperor { dbr:Emperor_Rokujō }
  ?emperor dbo:parent ?parent .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
582,8,train,Give me the nickname of Japan national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?result . },"```sparql
SELECT ?nickname WHERE {
  wd:Q30 wdt:P1448 ?nickname .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
329,3,train,Give me the author of The Tailor and Ansty.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  ?work dcterms:title ""The Tailor and Ansty""@en .
  ?work dbo:author ?author .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
892,30,train,"Give me the landmark at elevation of 58 and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and entity in Italy.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark WHERE {
  ?landmark a dbo:Landmark ;
            dbo:elevationAboveSeaLevel ""58""^^xsd:integer ;
            dbo:country dbr:Italy ;
            dbo:administrativeRegion ?region .

  ?region a dbo:AdministrativeRegion, dbo:Settlement, dbo:Region ;
          dbp:politicalParty dbr:Democratic_Party_(Italy) .
}
```",4,8,5,2,3,3,3,71,0,0,2,0,0.0,0
892,39,train,"Give me the landmark at elevation of 58 and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark ?region ?party WHERE {
  # Find landmarks in Italy with elevation of 58
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ""58""^^xsd:float ;
            dbo:country dbr:Italy .

  # Find regions that are also settlements and administrative regions
  ?region a dbo:Region, dbo:Settlement, dbo:AdministrativeRegion ;
          dbo:country dbr:Italy .

  # Find the political party of Andrea Cozzolino
  ?party a dbo:PoliticalParty, dbo:Organization ;
         dbp:member dbr:Andrea_Cozzolino .

  # Link the region to the landmark and party
  ?landmark dbo:location ?region .
  ?region dbo:governingBody ?party .
}
```",4,10,5,3,2,3,3,71,0,0,2,0,0.0,0
507,14,train,Give me the professional in the profession of Guy Ferland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession WHERE {
  ?person foaf:name ""Guy Ferland""@en .
  ?person dbo:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,0,2,38,0.0,0.0,0
417,21,train,"Give me the child of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?spouse WHERE {
  # Alexandrine of Mecklenburg-Schwerin's child
  ?alexandrine a dbo:Person ;
              foaf:name ""Alexandrine of Mecklenburg-Schwerin""@en .
  
  ?alexandrine dbo:child ?child .

  # Spouse of Alexandrine (parent of the child)
  ?spouse dbo:spouse ?alexandrine .
  
  # Check if spouse is royalty
  ?spouse a dbo:Monarch ;
          foaf:name ?name .

  # Relation to Count Ingolf of Rosenborg
  OPTIONAL {
    ?count a dbo:Person ;
           foaf:name ""Count Ingolf of Rosenborg""@en .
    
    ?spouse dbo:child ?count .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
417,34,train,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of Alexandrine of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Knud, Hereditary Prince of Denmark
  ?knud a dbo:Person ;
        foaf:name ""Knud, Hereditary Prince of Denmark""@en .

  # Step 2: Find his child who is also a child of Alexandrine of Mecklenburg-Schwerin
  ?child dbo:parent ?knud ;
         dbo:parent ?alexandrine .
  ?alexandrine foaf:name ""Alexandrine of Mecklenburg-Schwerin""@en .

  # Step 3: Determine this child's parent (who should be royalty)
  ?royalParent dbo:child ?child ;
               a dbo:Monarch .

  # Step 4: Retrieve the spouse of that royal parent
  ?royalParent dbp:spouse ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
212,2,train,"Give me the professional, that is a musical artist and an artist, in Singer, rapper, CEO, Facilities and Project Manager.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ""Singer, rapper, CEO, Facilities and Project Manager""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:MusicalArtist .
  
  # Check for professions
  OPTIONAL { ?person dbo:occupation dbp:Singer . }
  OPTIONAL { ?person dbo:occupation dbp:Rapper . }
  OPTIONAL { ?person dbo:occupation dbp:CEO . }
  OPTIONAL { ?person dbo:occupation dbp:FacilitiesAndProjectManager . }

  # Ensure at least one of the professions is matched
  FILTER (
    EXISTS { ?person dbo:occupation dbp:Singer } ||
    EXISTS { ?person dbo:occupation dbp:Rapper } ||
    EXISTS { ?person dbo:occupation dbp:CEO } ||
    EXISTS { ?person dbo:occupation dbp:FacilitiesAndProjectManager }
  )
}
ORDER BY ?person
LIMIT 100",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
267,4,train,Who is the reference to Dan Cathy?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?description WHERE {
  ?person rdfs:label ""Dan Cathy""@en .
  OPTIONAL { ?person dbo:description ?description . FILTER (lang(?description) = 'en') }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
192,4,train,Give me the parent of Anna of Hungary (Byzantine empress).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Anna_of_Hungary_(Byzantine_empress) dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
47,31,train,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt and office of Bidesh Ranjan Bose.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v1 . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderOffice ?boseOffice
WHERE {
  # Find the commander involved in Operation Green Hunt
  ?operation dbr:Operation_Green_Hunt .
  ?operation dbo:commander ?commander .

  # Get the office of this commander
  ?commander dbo:office ?commanderOffice .

  # Find Bidesh Ranjan Bose and his office
  dbr:Bidesh_Ranjan_Bose dbo:office ?boseOffice .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
136,2,train,Give me the area code of Levenhagen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Levenhagen> <http://dbpedia.org/ontology/areaCode> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?areaCode
WHERE {
  ?place a dbo:Settlement .
  ?place rdfs:label ""Levenhagen""@en .
  OPTIONAL { ?place dbo:postalCode ?areaCode . }
}
```",1,1,2,1,1,2,2,9,0,1,1,0.0,0.0,0
495,9,train,Give me the father of the parent of Princess Catherine of Württemberg.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?grandfather WHERE {
  # Find Princess Catherine of Württemberg
  ?catherine dbo:spouse ?parent .
  
  FILTER (str(?catherine) = ""Princess_Catherine_of_W%C3%BCrttemberg"")

  # Identify her parent
  ?parent dbo:child ?catherine .

  # Determine the father of that parent
  ?parent dbo:father ?grandfather .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
98,3,train,Who is the child of Emperor Toba?,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Toba> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?emperorToba .
  ?emperorToba a dbo:Monarch ;
               foaf:name ""Emperor Toba""@en .
  ?emperorToba dbo:child ?child .
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
582,1,train,Give me the player in Kazuaki Nagasawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?coach a dbo:Coach ;
         foaf:name ""Kazuaki Nagasawa""@en .
  
  ?team dbo:coach ?coach .
  
  ?player dbo:playsFor ?team ;
          foaf:name ?name .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
158,8,train,"Give me the party of the successor, that is a prime minister and an office holder and a politician, of André Tardieu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorParty WHERE {
  # André Tardieu as a Prime Minister of France
  dbr:André_Tardieu dbo:positionHeld dbr:Prime_Minister_of_France .

  # Find the successor in the position of Prime Minister of France
  ?successor dbo:positionHeld dbr:Prime_Minister_of_France .
  
  # Ensure the successor is after André Tardieu
  FILTER(?successor != dbr:André_Tardieu) .

  # Check if the successor is also a politician and an office holder
  ?successor rdf:type dbo:Politician ;
             dbo:officeHolder true .

  # Get the political party of the successor
  ?successor dbo:party ?successorParty .
}
ORDER BY ?successor",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
926,28,train,Give me the child of Ahmed III and father of the father of Abdulaziz and successor of Mustafa III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Ahmed III and his child Mustafa III
  dbr:Ahmed_III dbo:child dbr:Mustafa_III .
  
  # Mustafa III is the father of Abdul Hamid I
  dbr:Mustafa_III dbo:spouse ?mother . 
  ?mother dbo:child dbr:Abdul_Hamid_I .

  # Abdul Hamid I is the father of Mahmud II
  dbr:Abdul_Hamid_I dbo:child dbr:Mahmud_II .

  # Mahmud II is the father of Abdulaziz I
  dbr:Mahmud_II dbo:child dbr:Abdul_Aziz_I .
  
  # Mustafa III's successor is Abdul Hamid I
  dbr:Mustafa_III dbo:succeededBy dbr:Abdul_Hamid_I .

  # The person we are looking for is Mustafa III
  ?person = dbr:Mustafa_III .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
281,11,train,Give me the awardee of the award of Alfred Warden.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award a dbo:Award ;
        rdfs:label ""Alfred Warden""@en .
  ?award dbo:recipient ?recipient .
}
```

This query does the following:
- It uses the `dbo:Award` class to identify entities that are awards.
- It looks for an award with the label ""Alfred Warden"" in English (`rdfs:label ""Alfred Warden""@en`).
- It retrieves the recipients of this award using the property `dbo:recipient`.",2,2,3,2,1,2,3,28,0,0,12,0,0.0,0
874,0,train,Give me the band of Manfred Mann (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Manfred_Mann_(musician)> . },"```sparql
SELECT ?band WHERE {
  wd:Q12345 dbo:musicalArtist ?band .
}
```

Note: Replace `wd:Q12345` with the actual DBpedia identifier for Manfred Mann (musician). You can find this by searching for ""Manfred Mann musician"" on DBpedia or a similar resource to get the correct Q-number.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
978,8,train,Give me the band member of the person born as Nicholas Bracegirdle.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?member WHERE {
  # Find Nick Mason's DBpedia resource
  dbr:Nick_Mason a dbo:Person ;
                 foaf:name ""Nick Mason"" .

  # Find bands he is associated with
  dbr:Nick_Mason dbo:musicalArtistIn <http://dbpedia.org/resource/Category:Musicians_from_London> .

  # Get the band and its members
  ?band a dbo:Band ;
        dbo:member dbr:Nick_Mason .
  
  ?band dbo:member ?member .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
373,2,train,"Give me the work, that is a single and a musical work and a work and a soundtrack, of .","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/writer> """"@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work a dbo:SinglesAlbum .
  ?work dbo:soundtrackOf ?movie .
}
```

This query selects works that are both singles (using the `dbo:SinglesAlbum` class) and soundtracks (linked via the `dbo:soundtrackOf` property).",1,5,2,1,1,2,2,9,0,0,8275,0,0.0,0
36,0,train,Give me the actor of Being Mrs Elliot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?film dct:subject dbr:Being_Mrs_Elliot .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,6,0,0.0,0
232,2,train,"Give me the person born, that is a writer, on 1849-09-14.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1849-09-14""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthDate ""1849-09-14""^^xsd:date .
  ?person dbo:occupation dbr:Writer .
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
826,7,train,"Who is the child of Louis IV, Grand Duke of Hesse?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:child dbr:?child .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
382,11,train,"Give me the landmark at elevation of 100 and birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/elevation> ""100""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?landmark WHERE {
  # Find the manager of Bonner SC who is a soccer manager, athlete, and sports manager
  ?manager dbo:position ""soccer manager""@en .
  ?manager dbo:sport ""football""@en .
  ?manager dbo:occupation ""sports manager""@en .
  ?manager dbp:team dbr:Bonner_SC .

  # Ensure the person is also an athlete
  ?athlete dbo:occupation ""athlete""@en .
  FILTER (?manager = ?athlete)

  # Get the birthplace of this manager
  ?manager dbp:birthPlace ?birthPlace .

  # Find landmarks at elevation 100 in that location
  ?landmark a dbo:Lighthouse ;
            dbo:elevation 100 ;
            dbo:location ?birthPlace .
}
```",3,6,4,2,2,3,2,20,0,0,1,0,0.0,0
136,4,train,Give me the region coded as 03834 and landmark at elevation of 5.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ""03834"" . ?result <http://dbpedia.org/ontology/elevation> ""5""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?region ?landmark WHERE {
  ?region dcterms:identifier ""03834"" .
  
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = 5)
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
166,5,train,"Give me the territory administered, that is a country, from Madrid.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?country WHERE {
  dbr:Madrid dbo:country ?country .
  FILTER (isBlank(?country) = false)
}
```

This query selects the country associated with Madrid by using the `dbo:country` property. The filter ensures that we only get non-blank results, which correspond to actual countries.",1,2,2,1,1,3,2,20,0,0,15,0,0.0,0
124,18,train,Give me the military force of Battle of Atbara and military force of Battle of Tamai and commander in Mahdist War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?militaryForce ?commander WHERE {
  # Battle of Atbara
  VALUES (?battle) { 
    dbr:Battle_of_Atbara 
    dbr:Battle_of_Tamai 
  }
  
  OPTIONAL {
    ?battle dbo:militaryCommander ?commander .
  }

  OPTIONAL {
    ?battle dbo:participatedInMilitaryConflict ?conflict .
    ?conflict dbo:participant ?militaryForce .
  }
}
ORDER BY ?battle",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
773,37,train,"Give me the parent of Charles the Fat and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfCharlesFat ?parentOfSuccessor
WHERE {
  # Step 1: Find Charles the Fat and his parent
  dbr:Charles_the_Fat a dbo:Monarch ;
                     dbo:fatherOrGuardian ?parentOfCharlesFat .

  # Step 2: Find Louis the Pious's children who are royalty
  dbr:Louis_the_Pious a dbo:Monarch ;
                      dbo:child ?royalChild .
  
  FILTER EXISTS { ?royalChild a dbo:Monarch } .

  # Step 3: Find the successor of this royal child
  ?royalChild dbo:successor ?successor .

  # Step 4: Find the parent of this successor
  ?successor dbo:fatherOrGuardian ?parentOfSuccessor .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
554,11,train,Give me the leader of the administration of Francisco da Costa Gomes and leader of Portuguese Mozambique.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . <http://dbpedia.org/resource/Portuguese_Mozambique> <http://dbpedia.org/property/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?president ?primeMinister ?mozambiqueLeader
WHERE {
  # Francisco da Costa Gomes as President of Portugal
  dbr:Fernando_da_Costa_Gomes dbo:positionHeld dbr:President_of_Portugal .
  
  # Prime Minister during his administration
  ?administration dbo:head dbr:Fernando_da_Costa_Gomes ;
                  dbo:primeMinister ?primeMinister .
  
  # Leader of Portuguese Mozambique
  ?mozambiqueLeader dbo:country dbr:Mozambique ;
                   dbo:capital ""Lourenço_Marques""^^xsd:string ; # Lourenço Marques was the capital during that period
                   dbo:head ?leader .
}
```

This query assumes:
- Francisco da Costa Gomes is linked to his presidency.
- The administration entity has a prime minister associated with it.
- Portuguese Mozambique's leader can be identified through its administrative structure.",3,3,4,2,2,3,2,20,0,0,3,0,0.0,0
582,11,train,Give me the reference to the residence of Hirotaka Sugawara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Hirotaka Sugawara""@en .
  OPTIONAL { ?person dbo:residence ?residence . }
}
```",2,2,3,2,1,3,3,71,0,0,41,0,0.0,0
965,19,train,Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of Louise Mountbatten.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Princess Victoria of Hesse and by Rhine
  ?princess a dbo:Person ;
            foaf:name ""Princess Victoria of Hesse and by Rhine""@en .
  
  # Her spouse, Ernest Louis, Grand Duke of Hesse
  ?erestLouis a dbo:Person ;
              foaf:name ""Ernest Louis, Grand Duke of Hesse""@en ;
              dbo:spouse ?princess .

  # Their daughter, Alice (Princess Victoria's child)
  ?alice a dbo:Person ;
         foaf:name ""Alice, Princess of Great Britain and Ireland""@en ;
         dbo:parent ?erestLouis ;
         dbo:parent ?princess .
  
  # Alice's spouse, King George V
  ?kingGeorgeV a dbo:Person ;
               foaf:name ""George V""@en ;
               dbo:spouse ?alice .

  # Louise Mountbatten's parent (Princess Andrew of Greece and Denmark)
  ?louiseParent a dbo:Person ;
                foaf:name ""Princess Andrew of Greece and Denmark""@en ;
                dbo:child dbr:Louise_Mountbatten .
  
  # Linking Alice to Princess Andrew through her son
  ?princeAndrew a dbo:Person ;
                foaf:name ""Prince Andrew of Greece and Denmark""@en ;
                dbo:parent ?alice ;
                dbo:parent ?louiseParent .

  # The spouse of the spouse of Princess Victoria (King George V)
  BIND(?kingGeorgeV AS ?spouse)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
826,13,train,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Step 1: Identify Louis I, Grand Duke of Hesse
  dbr:Louis_I,_Grand_Duke_of_Hesse a dbo:Monarch ;
                                  dbo:spouse ?spouse .

  # Step 2: Find his children who are royalty
  ?child dbo:parent dbr:Louis_I,_Grand_Duke_of_Hesse ;
         dbo:parent ?spouse ;
         a dbo:Person ;
         dbo:royalty ?isRoyalty .
  
  FILTER(?isRoyalty = true)

  # Step 3: Determine the successor of that royal child
  ?child dbo:succeededBy ?successor .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
274,7,train,Give me the band member of Dizzy Gillespie and associated musical artist of Cecil Taylor.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember ?associatedArtist
WHERE {
  # Find band members of Dizzy Gillespie
  { 
    ?gillespie dbp:name ""Dizzy Gillespie""@en .
    ?gillespie dbo:bandMember ?bandMember .
  }
  
  UNION
  
  # Find associated musical artists of Cecil Taylor
  { 
    ?taylor dbp:name ""Cecil Taylor""@en .
    ?taylor dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```

This query uses a `UNION` to combine results from two different queries: one for Dizzy Gillespie's band members and another for Cecil Taylor's associated musical artists. The properties `dbo:bandMember` and `dbo:associatedMusicalArtist` are used to retrieve the relevant information.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
917,26,train,"Give me the child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  # Step 1: Identify Leleiohoku I
  VALUES ?leleiohokuI { dbr:Leleiohoku_I }

  # Step 2: Find his spouse(s)
  ?spouse dbo:spouseOf ?leleiohokuI .

  # Step 3: Determine the father of each spouse
  ?spouse dbo:father ?father .

  # Step 4: Identify any children of these fathers who are royalty
  ?child dbo:parent ?father .
  ?child a dbo:Monarch .
}
```",3,4,4,3,1,3,3,71,0,0,11,0,0.0,0
465,35,train,"Give me the successor of the child of Alfonso I d'Este and successor of the child, that is a royalty, of Anne of Brittany.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor1 ?successor2 WHERE {
  # Alfonso I d'Este's child
  ?childAlfonso dbo:parent dbr:Alfonso_I_d%27Este ;
               a dbo:Person .

  # Successor of Alfonso I d'Este's child
  ?successor1 dbo:predecessor ?childAlfonso .

  # Anne of Brittany's royal child
  ?royalChildAnne dbo:parent dbr:Anne_of_Brittany ;
                  a dbo:Person ;
                  dbo:positionTitle ?title .
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))

  # Successor of Anne of Brittany's royal child
  ?successor2 dbo:predecessor ?royalChildAnne .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
573,29,train,"Give me the parent of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at Massachusetts.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent ?decedentAtPhelanResidence ?decedentInMassachusetts
WHERE {
  # Parent of John Quincy Adams
  dbr:John_Quincy_Adams dbo:childOf ?parent .

  # Residence of William J. Phelan that is a settlement
  OPTIONAL { 
    dbr:William_J._Phelan dbo:residenceLocation ?settlement .
    FILTER (dbo:Settlement IN (rdf:type/rdf:first) && rdf:type/rdf:first = ?settlement)
  }

  # Person decedent at the residence of William J. Phelan
  OPTIONAL {
    ?decedentAtPhelanResidence dbo:deathPlace ?settlement .
  }

  # Person decedent in Massachusetts
  OPTIONAL {
    ?decedentInMassachusetts dbo:deathPlace dbr:Massachusetts .
  }
}
```",4,5,5,2,3,3,3,71,0,0,2,0,0.0,0
267,12,train,Give me the person born on the birth date of Dan Cathy and coach of Iran national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Iran_national_football_team> <http://dbpedia.org/ontology/coach> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Get Dan Cathy's birthdate
  dbr:Dan_Cathy dbo:birthday ?danCathyBirthDate .

  # Find individuals with the same birthdate as Dan Cathy
  ?person dbo:birthday ?birthdate .
  
  FILTER (?birthdate = ?danCathyBirthDate)

  # Check if this person is a coach of the Iran national football team
  OPTIONAL { 
    ?person dbo:coachOf dbr:Iran_national_football_team .
  }
  
  # Ensure that the person is indeed a coach of the Iran national football team
  FILTER EXISTS {
    ?person dbo:coachOf dbr:Iran_national_football_team .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
773,12,train,Give me the parent of Carloman of Bavaria and parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person (GROUP_CONCAT(?parentLabel; separator="", "") AS ?parents)
WHERE {
  VALUES (?person) { 
    (dbr:C._of_Bavaria) 
    (dbr:Charles_the_Fat) 
  }
  
  ?person dbo:parent ?parent .
  ?parent rdfs:label ?parentLabel .
  FILTER(LANG(?parentLabel) = 'en')
}
GROUP BY ?person
```",2,2,3,1,2,3,3,71,0,2,2,0.0,0.0,0
791,22,train,"Give me the spouse of Taira no Tokuko and father of the child, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Taira no Tokuko and her spouse
  ?tokuko a dbo:Person ;
          rdfs:label ""Taira no Tokuko""@en .
  
  ?tokuko dbo:spouse ?spouse .

  # Emperor Takakura's child who is royalty
  ?child dbo:parent dbp:Takakura_Emperor ;
         a dbo:Monarch ;
         dbo:father ?spouse .

}
```

This query does the following:
- Identifies Taira no Tokuko as an individual.
- Finds her spouse using the `dbo:spouse` property.
- Checks for Emperor Takakura's child who is royalty (`a dbo:Monarch`) and identifies their father.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
216,1,train,Give me the party of Campbell Newman.,SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  wd:Q2076950 dbo:politicalParty ?party .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
166,9,train,"Who is the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?manuelHedilla dbo:associatedWith ?militaryForce .
  ?manuelHedilla a dbo:Person ;
                 foaf:name ""Manuel Hedilla""@en .

  ?event dbo:relatedMilitaryConflict ?militaryForce ;
         a dbo:Event, dbo:SocietalEvent .

  ?manuelHedilla dbo:involvedIn ?event .
}
```

This query attempts to find the military force associated with Manuel Hedilla by linking him to an event that is both a societal event and a military conflict.",2,5,3,2,1,3,2,20,0,0,514,0,0.0,0
573,30,train,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at Massachusetts and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?author dbo:work ?exchequerStandards .
  ?exchequerStandards rdfs:label ""Exchequer Standards""@en .

  ?author dbo:deathPlace ?massachusetts .
  ?massachusetts rdfs:label ""Massachusetts""@en .

  ?author dbo:deathPlace ?quincy .
  ?quincy rdfs:label ""Quincy, Massachusetts""@en .

  ?parent dbo:child ?author .
  ?parent a dbo:Politician ;
          dbo:officeHolder true .
}
```",4,6,5,2,3,3,3,71,0,0,2,0,0.0,0
839,20,train,Give me the band of Kevin Russell (musician) and band of the member of Böhse Onkelz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?kevinRussellBand ?boMember ?boMemberBand 
WHERE {
  # Find Kevin Russell's band
  OPTIONAL {
    ?kevinRussell a dbo:MusicArtist ;
                  foaf:name ""Kevin Russell"" .
    ?kevinRussell dbo:band ?kevinRussellBand .
  }

  # Find members of Böhse Onkelz and their bands
  OPTIONAL {
    ?boMember a dbo:MusicArtist ;
              dbo:memberOf dbr:Böhse_Onkelz .
    ?boMember dbo:band ?boMemberBand .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
573,20,train,"Give me the person decedent at Massachusetts and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?decedentAtMassachusetts ?decedentAtResidence WHERE {
  # Find William J. Phelan's resource
  ?phelan a dbo:Person ;
          foaf:name ""William J. Phelan""@en .

  # Find his residence
  OPTIONAL { 
    ?phelan dbo:residenceLocation ?residence .
  }

  # Find decedent at the residence location
  OPTIONAL {
    ?decedentAtResidence a dbo:Person ;
                         dbo:deathPlace ?residence .
  }

  # Find any person decedent associated with Massachusetts
  OPTIONAL {
    ?decedentAtMassachusetts a dbo:Person ;
                            dbo:deathPlace dbr:Massachusetts .
  }
}
```",3,4,4,2,2,3,3,71,4,295250,0,1.3547657271366349e-05,1.0,2.7094947469670593e-05
582,13,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  ?person dbo:spouse ?masamiNagasawa .
  ?masamiNagasawa foaf:name ""Masami Nagasawa""@en .

  ?person foaf:parent ?father .
  
  ?father a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .
}
```

This query does the following:
- It looks for a person (`?person`) who is married to Masami Nagasawa.
- It identifies the father of this person (`?father`).
- It checks if this father has roles as an Athlete, Soccer Manager, and Sports Manager.

Please note that DBpedia's data model might not directly map these exact relationships or classes, so adjustments may be necessary based on available data. Additionally, ensure that Masami Nagasawa is correctly identified in the dataset with her full name and language tag.",2,5,3,2,1,3,3,71,0,0,4,0,0.0,0
236,7,train,"Give me the party member of the administration, that is an organisation, of John Adams.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember WHERE {
  # Identify John Adams and his political role
  dbr:John_Adams dbo:officeHeld ?role .
  
  # Find the administration associated with that role
  ?role dbo:partOf ?administration .

  # Determine the party of the administration
  ?administration dbo:politicalParty ?party .

  # Find members of that party who were part of the administration
  ?partyMember a dbo:Person ;
              dbo:memberOf ?party ;
              dbo:officeHeld ?adminRole .
  
  FILTER(?adminRole != ?role) # Exclude John Adams himself from results
}
```

This query does the following:
- Identifies John Adams and his political role.
- Finds the administration associated with that role.
- Determines the political party of that administration.
- Selects members of that party who were part of the administration, excluding John Adams.",2,3,3,2,1,3,2,20,0,0,269,0,0.0,0
365,10,train,"Give me the native, that is a politician, of the reference to Полтавская губерния.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Politician .
  ?person dbo:birthPlace dbr:Poltava_Governorate ;
          rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",2,3,3,2,1,3,2,20,11,11,0,0.5,1.0,0.6666666666666666
373,5,train,"Give me the writer of the work, that is a single and a musical work and a work and a soundtrack, of .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work ?writer WHERE {
  ?work a dbo:Singles;
        a dbo:MusicalWork;
        a dbo:Soundtrack.
  
  OPTIONAL { ?work dbo:composer ?writer. }
  FILTER (lang(?writer) = 'en')
}
ORDER BY ?work
LIMIT 10",2,6,3,2,1,2,2,9,0,0,15041,0,0.0,0
98,4,train,Give me the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Paolo Elito M. Ballesteros IV""@en .
  OPTIONAL { ?person dbo:birthday ?birthDate . }
}
```

This query searches for entities of type `dbo:Person` with the name ""Paolo Elito M. Ballesteros IV"" and optionally retrieves their birth date.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
216,7,train,Give me the death of Pavel Vezhinov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?result . },"```sparql
SELECT ?deathDate WHERE {
  wd:Q123456 dbr:P569 ?deathStatement .
  ?deathStatement wikibase:timeValue ?deathTime ;
                  wikibase:timePrecision ?precision .
  BIND(CONCAT(""^^"", STR(?precision)) AS ?type) .
  BIND(YEAR_FROM_UTC(?deathTime) as ?year) .
  FILTER (?year > 0)
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Pavel Vezhinov. You can find this by searching for his name on DBpedia or using a SPARQL query to identify his unique identifier.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
917,19,train,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of Kekūanāoʻa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find children of Kamehameha IV who are royalty
  ?child dbo:spouse|dbo:childOf dbr:Kamehameha_IV .
  ?child a dbo:Monarch .

  # Ensure the child is also related to Kekūanāoʻa
  ?child dbo:parent dbr:Kekūanāoʻa .

  # Find the parent of this child
  ?child dbo:parent ?parent .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
495,3,train,Give me the father of William I of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:William_I_of_W%C3%BCrttemberg dbo:parent ?person .
  ?person rdf:type dbo:Person .
  ?person rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""father""))
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
18,5,train,"Give me the figure known, that is an educational institution, as Saints.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ""Saints""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?institution WHERE {
  ?institution a dbo:EducationalInstitution .
  ?institution rdfs:label ""Saints""@en .
}
```",1,2,2,1,1,2,3,28,0,0,25,0,0.0,0
791,28,train,"Give me the predecessor of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura and father of Emperor Go-Toba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Predecessor of Emperor Antoku is Emperor Takakura
  ?antoku dbo:predecessor dbr:Emperor_Antoku .
  ?takakura dbo:successor ?antoku ;
            dbo:spouse ?tokushi .

  # Spouse of the spouse (that is a royalty) of Emperor Takakura
  ?tokushi rdf:type dbo:RoyalPerson .

  # Father of Emperor Go-Toba is Emperor Tsuchimikado
  ?go_toba dbo:father dbr:Emperor_Go_Toba .
  ?tsuchimikado dbo:successor ?go_toba ;
                dbo:father ?person .

  # Retired Emperor Go-Shirakawa is the father of both Takakura and Tsuchimikado
  ?takakura dbo:father ?person .
  ?tsuchimikado dbo:father ?person .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
124,33,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in Mahdist War.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  ?person dbo:awardReceived dbr:British_South_Africa_Company_Medal .
  ?person dbo:militaryCommanderOf dbr:Mahdist_War .
  
  ?war dbo:type dbr:Military_Conflict ;
       dbo:type dbr:Societal_Event ;
       dbo:participatedIn ?militaryForce .

  ?person dbo:commanded ?war .
}
```",4,7,5,3,2,3,3,71,0,0,3,0,0.0,0
433,0,train,Give me the associated musical artist of Paul Chambers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  wd:Q11188 dbo:musicalArtist ?artist .
}
```",1,1,2,1,1,3,3,71,0,0,31,0,0.0,0
874,10,train,"Give me the band member of the band, that is an organisation, of Mark Read (singer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find Mark Read as a singer
  ?markRead dbo:occupation dbr:Singer .
  
  # Link Mark Read to bands he is associated with
  ?markRead dbo:memberOfBand ?band .

  # Ensure the band is an organization
  ?band rdf:type dbo:MusicalGroup ;
        dbo:abstract ?abstract .

  FILTER(CONTAINS(LCASE(?abstract), ""organization""))

  # Find members of that band
  ?bandMember dbo:memberOf ?band .
  
  # Exclude Mark Read from the results to get other members
  FILTER (?markRead != ?bandMember)
}
```",2,3,3,2,1,3,2,20,0,0,7,0,0.0,0
892,24,train,Give me the entity in Province of Reggio Emilia and landmark at elevation of the award of Anna Ishii.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?landmark ?elevation ?award
WHERE {
  # Find entities in the Province of Reggio Emilia
  ?entity dbo:location dbr:Province_of_Reggio_Emilia .
  
  # Find landmarks with a specific elevation (assuming we have an elevation property)
  ?landmark dbo:elevation ?elevation .
  
  # Relate Anna Ishii to her award
  dbr:Anna_Ishii dbp:award ?award .

  # Assuming there's a connection between the entity, landmark, and award
  ?entity dbo:hasLandmark ?landmark .
}
```

This query assumes:
- There is a property `dbo:elevation` for landmarks.
- Anna Ishii has an associated award under `dbp:award`.
- Entities in Reggio Emilia have landmarks connected via `dbo:hasLandmark`.

Adjustments may be needed based on the actual schema and available data in DBpedia.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
582,25,train,Give me the figure known as the nickname of Japan national football team and player in Kazuaki Nagasawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  # Find the nickname of the Japan national football team
  dbr:Japan_national_football_team dbo:nickname ?nickname .
  
  OPTIONAL {
    # Check if Kazuaki Nagasawa is associated with this team
    dbr:Kazuaki_Nagasawa dbo:team ?team .
    FILTER(?team = dbr:Japan_national_football_team)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
453,3,train,"Who is the author, that is a cardinal and a cleric, of Apologia Pro Vita Sua?",SELECT ?result WHERE { <http://dbpedia.org/resource/Apologia_Pro_Vita_Sua> <http://dbpedia.org/property/author> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cardinal>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>. },"```sparql
SELECT ?author WHERE {
  ?book dcterms:title ""Apologia Pro Vita Sua""@en .
  ?book dbo:author ?author .

  ?author dbo:occupation [
    a dbo:ReligiousLeader ;
    rdfs:label ?occupationLabel .
  ] .
  
  FILTER(CONTAINS(LCASE(?occupationLabel), ""cardinal"") || CONTAINS(LCASE(?occupationLabel), ""cleric""))
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
465,18,train,"Give me the successor of Renée of France and successor of Ercole II d'Este, Duke of Ferrara and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Successor of Renée of France
  { 
    ?renee a dbo:Monarch ;
           dbp:succeededBy ?successor .
    FILTER (str(?renee) = ""Ren%C3%A9e_of_France"")
  }
  
  UNION
  
  # Successor of Ercole II d'Este, Duke of Ferrara
  { 
    ?ercole a dbo:Monarch ;
            dbp:succeededBy ?successor .
    FILTER (str(?ercole) = ""Ercole_II_d%27Este"")
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
274,18,train,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?associatedArtist WHERE {
  # Find actors associated with ""Imagine the Sound""
  ?soundEvent dbo:performer ?actor .
  FILTER(CONTAINS(LCASE(?soundEvent), ""imagine the sound""))

  # Ensure the actor is also a musical artist
  ?actor dbo:occupation dbr:Musical_artist .

  # Retrieve other musical artists associated with this actor
  ?actor dbo:associatedMusicalArtist ?associatedArtist .
  FILTER(NOT EXISTS { ?actor = ?associatedArtist }) # Exclude self-reference

  # Ensure the associated entity is a musical artist
  ?associatedArtist dbo:occupation dbr:Musical_artist .
}
```",3,4,4,2,2,2,3,28,0,0,6,0,0.0,0
124,8,train,"Give me the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . }","```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?force WHERE {
  ?person a dbo:Person ;
          foaf:name ""Herbert Kitchener""@en .
  
  OPTIONAL { 
    ?person dbp:nationality dbr:United_Kingdom . 
  }
  
  ?person dbp:commander ?force .

  FILTER EXISTS {
    ?force dbo:type ?type .
    VALUES ?type { dbo:MilitaryConflict dbo:SocietalEvent }
  }
}
```",1,3,2,1,1,3,3,71,0,0,8,0,0.0,0
715,27,train,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader WHERE {
  # Find resources related to Carlos Franco Iribarnegaray
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@en .
  
  # Identify offices (government agencies or organizations) associated with him
  ?office dbo:head ?leader ;
          dbo:member ?person .

  # Ensure the office is a government agency or organization
  ?office rdf:type ?type .
  FILTER (
    ?type = dbo:GovernmentAgency || 
    ?type = dbo:Organization
  )
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
459,5,train,Give me the birth name of Kevin Stitt.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:QXXXXX foaf:name ""Kevin Stitt""@en .
  OPTIONAL { wd:QXXXXX schema:birthName ?birthName . }
}
```

Note: Replace `wd:QXXXXX` with the actual DBpedia resource identifier for Kevin Stitt. You can find this by searching for his name in DBpedia or using a SPARQL endpoint to query for it.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
507,34,train,"Give me the professional in Film director, television director and spouse of the person born as the birth name of Anne V. Coates.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse ?filmDirector ?tvDirector WHERE {
  # Find Anne V. Coates by her birth name
  ?anne a dbo:Person ;
        foaf:name ""Anne V. Coates""@en .
  
  # Get her spouse
  ?anne dbo:spouse ?spouse .

  # Check if the spouse has professions as film director or television director
  OPTIONAL { ?spouse dbo:occupation dbr:Film_director . BIND(""Yes"" AS ?filmDirector) }
  OPTIONAL { ?spouse dbo:occupation dbr:Television_director . BIND(""Yes"" AS ?tvDirector) }

  # Filter to ensure at least one of the professions is matched
  FILTER(?filmDirector = ""Yes"" || ?tvDirector = ""Yes"")
}
```",4,4,5,3,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
865,24,train,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of Shahla Khatun.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  # Abu Ahmad Abdul Hafiz and Shahla Khatun
  ?abuAHmad a dbo:Person ;
            foaf:name ""Abu Ahmad Abdul Hafiz"" .
  
  ?shahlaKhatun a dbo:Person ;
                foaf:name ""Shahla Khatun"" .

  # Their child who is a politician
  ?child dbo:parent ?abuAHmad, ?shahlaKhatun ;
         a dbo:Politician .

  # The father of that child
  ?father dbo:spouse ?shahlaKhatun .
}
```

This query assumes:
- `dbo:Person` is used to identify people.
- `foaf:name` is used for names (though DBpedia might use different properties).
- `dbo:parent` links parents to children.
- `dbo:Politician` identifies politicians.
- `dbo:spouse` connects spouses.

Note: The actual property URIs and values may vary based on the specific data available in DBpedia. Adjustments might be necessary if these assumptions do not hold true for the dataset at the time of querying.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
554,3,train,Give me the administration of Francisco da Costa Gomes.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . },"```sparql
SELECT ?administration WHERE {
  wd:Q123456 wdt:P39 ?administration .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Francisco da Costa Gomes. You can find this by searching for his DBpedia page or using a SPARQL query to identify him.",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
987,8,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .
}
```

This query selects countries (`dbo:Country`) that have the `dbo:timeZone` property set to Central European Time (`dbr:Central_European_Time`).",1,2,2,1,1,3,3,71,0,0,56,0,0.0,0
645,34,train,Give me the commander in the force of the commander in Siege of Madrid and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:positionHeld dbr:Ministry_of_the_Army_(Spain) .
  ?person dbo:commanderOf dbr:Siege_of_Madrid .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
124,17,train,"Give me the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?societalEvent ?militaryConflict WHERE {
  # Identify the person born on June 24, 1850
  ?person dbo:birthDate ""1850-06-24""^^xsd:date ;
          rdfs:label ?name .
  
  FILTER(CONTAINS(LCASE(?name), ""otto von bismarck"")) .

  # Find societal events associated with the person
  ?event dbo:agent ?person ;
         a dbo:SocietalEvent ;
         rdfs:label ?societalEventLabel .
  BIND(CONCAT(STR(?societalEventLabel), "" ("", STR(?event), "")"") AS ?societalEvent)

  # Find military conflicts associated with the person
  ?conflict dbo:agent ?person ;
            a dbo:MilitaryConflict ;
            rdfs:label ?militaryConflictLabel .
  BIND(CONCAT(STR(?militaryConflictLabel), "" ("", STR(?conflict), "")"") AS ?militaryConflict)
}
```",2,4,3,2,1,3,3,71,0,0,8,0,0.0,0
445,6,train,Who is the awardee of Royal Astronomical Society?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?awardYear WHERE {
  ?person dbo:awardedBy dbr:Royal_Astronomical_Society .
  OPTIONAL { ?person dbo:dateAwarded ?awardYear . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
456,27,train,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfBand WHERE {
  # Step 1: Find Alan Doyle's band
  dbr:Alan_Doyle dbo:musicalArtist dbr:GreatBigSea .
  
  # Step 2: Ensure the band is a musical artist
  dbr:GreatBigSea a dbo:MusicalArtist .

  # Step 3: Find any related sub-group or entity (band of the band)
  OPTIONAL {
    dbr:GreatBigSea dbo:member dbr:?SubGroup .
    ?SubGroup a dbo:Band .
    BIND(?SubGroup AS ?bandOfBand)
  }
  
  # If no direct sub-group, check for other associations
  FILTER(!bound(?bandOfBand))
  OPTIONAL {
    dbr:GreatBigSea dbo:associatedBand dbr:?AssociatedBand .
    ?AssociatedBand a dbo:Band .
    BIND(?AssociatedBand AS ?bandOfBand)
  }
}
```",3,4,4,3,1,3,3,71,0,0,3,0,0.0,0
917,23,train,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Identify the leader of Hawaiian Kingdom (mayor or equivalent)
  ?leader a dbo:Mayor ;
          dbo:country dbr:Hawaiian_Kingdom .

  # Step 2: Find royal children associated with this leader
  ?child dbo:royalHouseMemberOf ?house ;
         dbo:parent ?leader .

  # Step 3: Identify the parent of this child
  ?child dbo:parent ?parent .
}
```",3,4,4,3,1,3,3,71,0,0,12,0,0.0,0
216,24,train,"Give me the team of Ognjen Vukojević and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team ?role1 ?role2 ?role3 WHERE {
  # Find Ognjen Vukojević's resource
  VALUES ?ognjenVukojevic { dbr:Ognjen_Vukojević }
  
  # Identify his role as a coach of the Bosnia and Herzegovina national under-18 football team
  ?ognjenVukojevic dbo:coachOf ?team .
  FILTER (strstarts(str(?team), ""Bosnia_and_Herzegovina_national_under-18_football_team""))

  # Check if he is a soccer player, sports manager, and soccer manager
  OPTIONAL { ?ognjenVukojevic dbo:sport dbr:Soccer }
  OPTIONAL { ?ognjenVukojevic dbo:occupation dbr:Sports_manager }
  OPTIONAL { ?ognjenVukojević dbo:managerOf ?team }

  BIND(IF(BOUND(?ognjenVukojevic), ""Ognjen Vukojević"", ""Unknown"") AS ?role1)
  BIND(IF(BOUND(?ognjenVukojevic) && strstarts(str(?team), ""Bosnia_and_Herzegovina_national_under-18_football_team""), ""Coach of Bosnia and Herzegovina national under-18 football team"", ""Not a coach"") AS ?role2)
  BIND(IF(BOUND(?ognjenVukojević) && ?ognjenVukojevic dbo:sport dbr:Soccer, ""Soccer Player"", ""Not a Soccer Player"") AS ?role3)
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
826,11,train,Give me the spouse of the child of Johann Heinrich Appel.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Johann Heinrich Appel""@en .
  
  ?child dbo:parent ?person ;
         a dbo:Person .

  ?child dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
124,1,train,Give me the military force of Battle of Tamai.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?side WHERE {
  VALUES ?battle { dbr:Battle_of_Tamai }
  
  ?battle dbo:militaryForce ?force .
  OPTIONAL { ?force dbo:participatedInMilitaryConflicts ?conflict . }
  OPTIONAL { ?force dbo:country ?country . }
  OPTIONAL { ?force dbo:side ?side . }

  FILTER(?side IN (""British Empire"", ""Egyptian Khedivate""))
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
417,24,train,Give me the child of the father of Frederick IX of Denmark and child of Alexandrine of Mecklenburg-Schwerin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?father dbo:spouse dbr:Alexandrine_of_Mecklenburg-Schwerin .
  ?father dbo:child ?child .
  
  FILTER (?father = dbr:Frederick_VIII_of_Denmark)
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
273,7,train,Give me the spouse of the child of Giovanni Agnelli.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Find Giovanni Agnelli's children
  ?child dbo:parent dbr:Giovanni_Agnelli .
  
  # For each child, find their spouses
  ?child dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
965,22,train,"Give me the spouse of Prince Louis of Battenberg and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Prince Louis of Battenberg
  dbr:Prince_Louis_of_Battenberg dbo:spouse ?spouse .
  
  # Ensure the spouse has a child named Prince George of Battenberg
  ?spouse dbo:child dbr:Prince_George_of_Battenberg .

  # Optional: Filter to ensure Prince George was born as a noble (if needed)
  OPTIONAL { 
    dbr:Prince_George_of_Battenberg dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""prince""))
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
417,6,train,Who is the father of Frederick IX of Denmark?,SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  wd:Q1206 wdt:P22 ?father .
}
```

This query uses the DBpedia resource for Frederick IX of Denmark (`wd:Q1206`) and looks up his father using the property `P22`, which represents ""father"" in Wikidata/DBpedia.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
36,16,train,Give me the person born as the birth name of Ayo Makun and actor of Being Mrs Elliot.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Ayo Makun""@en .
  ?person dbo:actedIn dbr:Being_Mrs_Elliot .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
124,31,train,"Give me the military force of Battle of Tamai and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?force1 ?commander1 ?force2 ?commander2 WHERE {
  # Identify the Battle of Tamai
  VALUES ?battle { dbr:Battle_of_Tamai }
  
  # Find military forces and commanders involved in the battle
  ?battle dbo:participatingMilitaryUnit ?force1 .
  ?force1 dbo:commander ?commander1 .

  OPTIONAL {
    ?battle dbo:opposingMilitaryUnit ?force2 .
    ?force2 dbo:commander ?commander2 .
  }

  # Information about 'A' Battery, Royal Australian Artillery
  VALUES ?australianBattery { dbr:A_Battery,_Royal_Australian_Artillery }
  
  OPTIONAL {
    ?australianBattery a dbo:MilitaryUnit ;
                      dbo:country dbr:Australia .
  }
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
98,4,train,Give me the parent of Emperor Rokujō and child of Emperor Go-Shirakawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . <http://dbpedia.org/resource/Emperor_Rokujō> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?parent dbo:child dbr:Emperor_Rokujō .
  ?parent dbo:child dbr:Emperor_Go-Shirakawa .
  BIND(?parent AS ?person)
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
976,32,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the leader, that is a politician, of Grand National Assembly of Turkey.",SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayorOffice ?leaderOffice
WHERE {
  # Find the mayor associated with Nation Alliance (Turkey)
  ?person a dbo:Mayor ;
          dbo:nationality dbr:Turkey ;
          dbo:partyAffiliation dbr:Nation_Alliance_(Turkey) ;
          dbo:officeHolderOf ?mayorOffice .
  
  # Ensure the person is a politician
  ?person dbo:occupation dbr:Politician .

  # Find the leader of the Grand National Assembly of Turkey
  ?leader a dbo:Leader ;
          dbo:organization dbr:Grand_National_Assembly_of_Turkey ;
          dbo:officeHolderOf ?leaderOffice .
  
  # Ensure the leader is also a politician
  ?leader dbo:occupation dbr:Politician .

}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
47,11,train,Give me the office of the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jagdeep Dhankhar""@en .
  OPTIONAL { ?person dbo:positionHeld ?position . }
  OPTIONAL { ?position dbo:office ?office . }
}
```",2,2,3,2,1,3,3,71,22,122703,58,0.000179262578936647,0.275,0.00035829160050486545
216,13,train,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Find the Bosnia and Herzegovina national under-18 football team
  dbr:Bosnia_and_Herzegovina_national_under-18_football_team dbo:coach ?player .

  # Ensure the player is also a soccer player
  ?player dbo:occupation dbr:Soccer_player .

  # Ensure the player is also a sports manager
  ?player dbo:occupation dbr:Sports_manager .

  # Ensure the player is also a soccer manager
  ?player dbo:occupation dbr:Soccer_manager .
}",2,5,3,2,1,3,3,71,0,0,13,0,0.0,0
645,23,train,Give me the commander in the force of the commander in Siege of Madrid.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderOfCommander WHERE {
  # Find the commander of the forces during the Siege of Madrid
  ?siegeEvent a dbo:MilitaryConflict ;
              dbo:location dbr:Madrid ;
              dbo:participatingMilitaryUnit ?unit1, ?unit2 .
  
  ?unit1 dbo:commander ?commander ;
         rdfs:label ?unitLabel .

  # Find the commander of that commander
  ?commander dbo:commander ?commanderOfCommander .

  FILTER(CONTAINS(LCASE(?unitLabel), ""siege of madrid""))
}
```

This query attempts to:

1. Identify military conflicts (`?siegeEvent`) related to Madrid.
2. Extract participating units and their commanders during the Siege of Madrid.
3. Find who commanded those commanders.

Note: The exact structure might need adjustments based on available DBpedia data, as specific relationships like ""commander of a commander"" may not be directly modeled.",3,3,4,3,1,3,3,71,0,0,274,0,0.0,0
892,34,train,Give me the entity in the profession of the true self of Enrico Crolla and entity in Province of Reggio Emilia.,"SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?reggioEntity WHERE {
  # Enrico Crolla's profession
  OPTIONAL {
    dbr:Enrico_Crolla dbo:occupation ?profession .
  }
  
  # Entity in Province of Reggio Emilia
  OPTIONAL {
    ?reggioEntity dbo:locatedIn dbr:Province_of_Reggio_Emilia .
  }
}
```",4,4,5,3,2,3,3,71,0,0,40,0,0.0,0
130,2,train,"Give me the native, that is a coach and a college coach, of Madison, Alabama.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:United_States .
  ?person dbo:birthPlace dbr:Mitchell_County,_Alabama .
  ?person dbo:occupation dbo:Coach .
  ?person dbo:almaMater ?college .
  ?college dbo:type dbp:College_or_university .
  
  OPTIONAL { 
    ?person dbo:spouse ?spouse . 
    FILTER (lang(?spouse) = 'en') 
  }
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

  # Filter for Madison, Alabama
  ?place a dbo:Place ;
         rdfs:label ""Madison, Alabama""@en .
  ?person dbo:nativePlace ?place .

}
ORDER BY ?name",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
353,5,train,"Give me the alma mater of the awardee of Medal of the Order ""For Merit to the Fatherland"".",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_the_Order_%22For_Merit_to_the_Fatherland%22> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?almaMater WHERE {
  ?person dbo:award dbr:Medal_of_the_Order_""For_Merit_to_the_Fatherland"" .
  OPTIONAL { 
    ?person dbo:almaMater ?almaMater .
  }
}
```",2,2,3,2,1,2,2,9,0,0,8,0,0.0,0
326,11,train,"Give me the person decedent at France and resident of the birthplace, that is a state and British, of David Jessel.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personDecedent WHERE {
  # Find David Jessel's birthplace
  VALUES (?davidJessel) { dbr:David_Jessel }
  
  ?davidJessel dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a state and British
  ?birthPlace rdf:type dbo:State ;
             dbo:country dbr:United_Kingdom .

  # Find person decedent at France with the same birthplace
  ?personDecedent dbo:deathPlace dbr:France .
  ?personDecedent dbo:birthPlace ?birthPlace .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
839,18,train,Give me the band of Peter Schorowsky and band of Kevin Russell (musician) and band of Matthias Röhr.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?bandName WHERE {
  VALUES ?person { 
    dbr:Peter_Schorowsky 
    dbr:Kevin_Russell_(musician) 
    dbr:Matthias_Röhr
  }
  
  OPTIONAL { ?person dbo:musicalBand ?band . }
  OPTIONAL { ?band dbp:name ?bandName . }

  FILTER(?bandName != """")
}
ORDER BY ?person",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
382,0,train,Give me the birthplace of Björn Joppe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Björn_Joppe> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Björn Joppe. You can find this by searching for his name on DBpedia or using a SPARQL endpoint to query for his unique identifier.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
158,7,train,"Give me the entity in the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?country
WHERE {
  ?award dbo:recipient dbr:Adelbert_Cronkhite .
  ?award dbo:country ?country .
  FILTER (isLiteral(?country) && datatype(?country) = xsd:string)
}
```

This query does the following:
- It selects awards (`?award`) and their associated countries (`?country`).
- It filters for awards where Adelbert Cronkhite is a recipient.
- It ensures that the country is represented as a literal string.",2,3,3,2,1,3,2,20,0,0,44301,0,0.0,0
47,33,train,"Give me the office of the awardee of the award, that is an award, of Mantu Ghosh and office of Suvendu Adhikari.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office WHERE {
  # Mantu Ghosh's award and office
  {
    ?award dbo:recipient dbr:Mantu_Ghosh .
    ?award dbo:office ?office .
  }
  
  UNION
  
  # Suvendu Adhikari's award and office
  {
    ?award dbo:recipient dbr:Suvendu_Adhikari .
    ?award dbo:office ?office .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
124,22,train,"Give me the commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Herbert Kitchener
  dbr:Herbert_Kitchener_1st_Earl_Kitchener a dbo:MilitaryPerson ;
    dbo:militaryConflict dbr:Mahdist_War .

  # Mahdist War as a societal event and military conflict
  dbr:Mahdist_War a dbo:SocietalEvent, dbo:MilitaryConflict .

  # Commander in the Mahdist War
  ?commander a dbo:MilitaryPerson ;
    dbo:militaryConflict dbr:Mahdist_War ;
    dbo:rank ?militaryRank .
  
  OPTIONAL {
    ?commander dbo:militaryForce ?militaryForce .
  }
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
329,9,train,Give me the entity in United Kingdom and entity in Northern Ireland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  {
    ?entity dbo:country dbr:United_Kingdom .
  }
  UNION
  {
    ?entity dbo:country dbr:Northern_Ireland .
  }
}
```",2,2,3,1,2,2,3,28,531,42783,0,0.012259315694694557,1.0,0.024221690044474855
527,6,train,Give me the author of The Boy Who Kicked Pigs and actor of The Book Tower.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Book_Tower> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/The_Boy_Who_Kicked_Pigs> <http://dbpedia.org/property/author> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?actor
WHERE {
  # Find the author of ""The Boy Who Kicked Pigs""
  OPTIONAL {
    ?book dbr:The_Boy_Who_Kicked_Pigs .
    ?book dbo:author ?author .
  }

  # Find an actor from ""The Book Tower""
  OPTIONAL {
    ?film dbr:The_Book_Tower .
    ?film dbo:starring ?actor .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
933,39,train,"Give me the reference to Alan Warner and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1947-04-21""^^xsd:date ;
          rdfs:label ""Alan Warner""@en .
  
  ?band dbo:member ?person ;
        a (dbo:Band, dbo:Organization) .

  FILTER(LANG(?person->rdfs:label) = 'en')
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
200,6,train,Give me the band member of the band of Revenge (Canadian band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Revenge_(Canadian_band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?member WHERE {
  ?band dbo:genre dbr:Canadian_indie_rock ;
        foaf:name ""Revenge (Canadian band)"" .
  ?member dbo:memberOf ?band ;
          foaf:name ?name .
}
```",2,2,3,2,1,2,2,9,0,0,9,0,0.0,0
232,5,train,"Give me the artistic movement of the person born, that is a writer, on 1849-09-14.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/movement> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1849-09-14""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movement WHERE {
  ?person a dbo:Writer ;
          dbo:birthDate ""1849-09-14""^^xsd:date .
  
  OPTIONAL { 
    ?person dbo:artisticMovement ?movement .
  }
}
```",2,3,3,2,1,2,2,9,0,0,1,0,0.0,0
236,11,train,"Give me the party member of Democratic-Republican Party and party member of the administration, that is an organisation, of John Adams.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . ?result <http://dbpedia.org/ontology/party> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic-Republican_Party> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember ?administration
WHERE {
  # John Adams as a person in DBpedia
  dbr:John_Adams dbo:memberOfParty ?party .
  
  # Check if the party is Democratic-Republican Party
  FILTER (str(?party) = ""Democratic-Republican_Party"")

  # Find administration associated with John Adams
  OPTIONAL {
    dbr:John_Adams dbo:positionHeld ?administration .
    ?administration a dbo:Organization .
  }
  
  # Get other members of the Democratic-Republican Party
  ?person dbo:memberOfParty ?party .
  FILTER (?person != dbr:John_Adams)
}
```",3,4,4,2,2,3,2,20,0,0,18,0,0.0,0
507,18,train,"Give me the director of Entertaining Mr Sloane (film) and professional in Film director, television director and spouse of Anne V. Coates.","SELECT ?result WHERE { <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
SELECT ?director WHERE {
  ?film dcterms:title ""Entertaining Mr Sloane""@en .
  ?film dbo:director ?director .
  
  OPTIONAL { 
    ?director dbo:profession ""Film director""@en ;
              dbo:profession ""Television director""@en .
  }
  
  OPTIONAL {
    ?director dbo:spouse ?spouse .
    ?spouse foaf:name ""Anne V. Coates"" .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
129,9,train,Give me the associated musical artist of EarthGang and associated musical artist of Saba (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES (?band) { 
    dbr:EarthGang 
    dbr:Saba_(rapper)
  }
  ?band dbo:associatedBand ?artist .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
573,14,train,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards.",SELECT ?result WHERE { <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Find the author of ""Exchequer Standards""
  ?author dbo:wikiPageWikiLink dbr:Exchequer_Standards .
  
  # Step 2: Check if this author is a politician or office holder
  OPTIONAL { ?author dbo:occupation dbr:Politician . }
  OPTIONAL { ?author dbo:officeHolderOf ?office . }

  # Ensure the author has at least one of these roles
  FILTER EXISTS { ?author dbo:occupation dbr:Politician } || 
                EXISTS { ?author dbo:officeHolderOf ?office }

  # Step 3: Find the parent of this individual
  OPTIONAL { ?author dbo:parent ?parent . }
  
  # Ensure a parent exists
  FILTER EXISTS { ?author dbo:parent ?parent }
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
773,2,train,Give me the parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Charles_the_Fat dbo:child dbr:?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
41,7,train,Give me the party of Enda Kenny and party of Mark Durkan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?party WHERE {
  VALUES ?person { 
    dbr:Enda_Kenny 
    dbr:Mark_Durkan 
  }
  
  ?person dbo:name ?name .
  OPTIONAL { ?person dbo:partyAffiliation ?party . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
865,18,train,Give me the father of AK Abdul Momen and native of British Raj and father of Shahla Khatun.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Find AK Abdul Momen
  ?momen dbo:birthName ""AK Abdul Momen""@en .
  
  # Identify his father
  ?momen dbo:father ?father .

  # Check if the father was native of British Raj
  ?father dbp:nationality dbc:British_Raj_residents .

  # Verify that this person is also Shahla Khatun's father
  ?shahla dbo:birthName ""Shahla Khatun""@en .
  ?shahla dbo:father ?father .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
582,31,train,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in Kazuaki Nagasawa.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?scientistResidence ?playerResidence WHERE {
  # Hirotaka Sugawara as a scientist
  OPTIONAL {
    dbr:Hirotaka_Sugawara dbo:residence ?scientistResidence .
  }
  
  # Kazuaki Nagasawa as a player
  OPTIONAL {
    dbr:Kazuaki_Nagasawa dbo:residence ?playerResidence .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
645,15,train,Give me the force of the commander in Siege of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?force
WHERE {
  ?event dbo:participatedIn dbr:Siege_of_Madrid .
  ?event dbo:commander ?commander .
  OPTIONAL { ?commander dbo:strength ?force . }
}
```",2,2,3,2,1,3,3,71,0,0,65,0,0.0,0
417,22,train,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and spouse of Princess Caroline-Mathilde of Denmark.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Frederick Francis III and Princess Caroline-Mathilde of Denmark
  VALUES (?parent1) { (dbr:Friedrich_Franz_III,_Grand_Duke_of_Mecklenburg-Schwerin) }
  VALUES (?parent2) { (dbr:Caroline_Matilda_of_Great_Britain) }

  # Find their children
  ?child dbo:spouse|dbo:partnerOf ?parent1 .
  ?child dbo:spouse|dbo:partnerOf ?parent2 .

  # From those children, find grandchildren who are royalty
  ?grandchild dbo:parent ?child .
  ?grandchild a ?royaltyClass .
  
  FILTER (
    ?royaltyClass IN (dbr:Monarch, dbr:Royal_family_member)
  )
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
933,5,train,Who is the professional in Musician?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?musician WHERE {
  ?musician a dbo:MusicArtist .
}
```",1,1,2,1,1,3,3,71,0,0,1825,0,0.0,0
865,27,train,Give me the father of the child of the father of Abul Maal Abdul Muhith.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?grandfather ?uncle ?uncleFather WHERE {
  # Step 1: Find the father of Abul Maal Abdul Muhith
  dbpedia:Abul_Maal_Abdul_Muhith dbo:parent ?father .

  # Step 2: Find the children (siblings) of this person
  ?father dbo:child ?uncle .
  
  # Step 3: Determine the father of these children
  ?uncle dbo:parent ?uncleFather .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
443,17,train,"Give me the birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and birthplace of Carl Larsson.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace1 ?birthPlace2 WHERE {
  # Find the birthplace of a person born on 1949-11-20 who is both a musical artist and an artist
  ?person dbo:birthDate ""1949-11-20""^^xsd:date ;
          dbo:musicalArtist true ;
          dbo:artist true .
  ?person dbo:birthPlace ?birthPlace1 .

  # Find the birthplace of Carl Larsson
  dbr:C._L.__Carl_Larsson dbo:birthPlace ?birthPlace2 .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
445,29,train,Give me the entity in United Kingdom and entity in England and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity ?deathPlace WHERE {
  # Find entities in the United Kingdom or England
  ?entity dbo:country dbr:United_Kingdom .
  OPTIONAL { ?entity dbo:stateOrProvince dbr:England . }
  
  # Find awardees of the Royal Astronomical Society
  ?awardee dbo:awardReceived dbr:Royal_Astronomical_Society .
  
  # Match entities with awardees
  FILTER (?entity = ?awardee)
  
  # Get death place if available
  OPTIONAL { ?awardee dbp:deathPlace ?deathPlace . }
}
```

This query does the following:

- Selects distinct entities that are located in the United Kingdom or specifically in England.
- Identifies individuals who have received an award from the Royal Astronomical Society.
- Matches these entities with the awardees to ensure we're looking at the correct individuals.
- Retrieves the death place of these awardees if available.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
582,36,train,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to Japan.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  ?team dbo:coach dbr:Hajime_Moriyasu .
  ?team dbo:nickname ?nickname .
  FILTER(CONTAINS(LCASE(?team), ""japan national football team""))
}
```

This query does the following:
- It looks for a team (`?team`) that has Hajime Moriyasu as its coach.
- It retrieves the nickname of this team.
- The filter ensures we are specifically looking at the Japan national football team.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
935,12,train,Give me the death place of Abdul Raziq Bugti and headquarter of the office of Sanaullah Khan Zehri.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdul_Raziq_Bugti> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?headquarters
WHERE {
  # Abdul Raziq Bugti's death place
  OPTIONAL {
    dbr:Abdul_Razzaq_Bugti dbo:placeOfDeath ?deathPlace .
  }
  
  # Sanaullah Khan Zehri's office headquarters
  OPTIONAL {
    dbr:Sanaullah_Khan_Zehri dbo:headquarter ?headquarters .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
232,1,train,"Give me the claim to fame of Katherine ""Kitty"" Marshall.",SELECT ?result WHERE { <http://dbpedia.org/resource/Katherine_%22Kitty%22_Marshall> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  dbr:Katherine_Marshall dbo:notableWork ?work .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
573,2,train,Give me the parent of John Quincy Adams.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  VALUES ?johnQuincyAdams { dbr:John_Quincy_Adams }
  ?johnQuincyAdams dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER(LANG(?parentName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,2,2,0.0,0.0,0
554,13,train,Give me the leader of the administration of the party member of Independent politician.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . ?v1 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?administration WHERE {
  ?leader dbo:politicalAffiliation dbr:Independent_politician .
  ?administration dbo:head ?leader .
}
```",3,3,4,3,1,3,2,20,0,0,1909,0,0.0,0
124,12,train,Give me the military force of Battle of Tamai and military force of Battle of Atbara.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . },"```sparql
# Query for the Battle of Tamai
SELECT ?unit WHERE {
  ?battle dbp:wikiPageID ""Battle_of_Tamai"" .
  ?battle dbo:participatedInMilitaryEngagement ?unit .
}

UNION

# Query for the Battle of Atbara
SELECT ?unit WHERE {
  ?battle dbp:wikiPageID ""Battle_of_Atbara"" .
  ?battle dbo:participatedInMilitaryEngagement ?unit .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
93,10,train,"Who is the governor of the native, that is a politician, of Seattle?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor WHERE {
  # Step 1: Identify Seattle and its state
  dbr:Seattle dbo:locatedIn dbr:Washington_(state) .

  # Step 2: Find the governor of Washington
  dbr:Washington_(state) dbo:governmentLeader ?governor .
  
  # Optional: Filter to ensure the governor is a politician (if needed)
  ?governor rdf:type dbo:Politician .
}
```",2,3,3,2,1,3,2,20,0,0,18,0,0.0,0
47,7,train,"Give me the entity, that is an award, in India.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
SELECT ?award WHERE {
  ?award a dbo:Award ;
         dbo:country dbr:India .
}
```",1,2,2,1,1,3,3,71,272,0,0,1.0,1.0,1.0
933,13,train,Give me the reference to the birth name of Alan Warner (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?birthName WHERE {
  wd:Q123456 wdt:P735 ?birthName .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Alan Warner (musician). You can find this by searching for his profile on DBpedia or using a SPARQL endpoint to query for musicians named Alan Warner.",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
791,4,train,"Give me the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?emperor rdf:type dbo:Emperor ;
           foaf:name ""Takakura""@en .
  
  ?emperor dbo:spouse ?spouse .

  OPTIONAL { 
    ?spouse rdf:type dbo:Monarch ; # or another relevant type for royalty
            dbp:title ?title .
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
83,2,train,"Who is the member, that is a sports manager, of Kedah FA?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?person a dbo:SportsManager ;
          dbo:worksFor dbr:Kedah_FA .
}
```

This query assumes:
- `dbo:SportsManager` is the class for sports managers.
- `dbo:worksFor` links a person to an organization they work for.

Note that exact property and class names might vary, so you may need to adjust them based on DBpedia's current schema. You can explore DBpedia using its SPARQL endpoint to refine these details.",1,2,2,1,1,3,2,20,0,0,17,0,0.0,0
216,2,train,Give me the team of Ognjen Vukojević.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . },"```sparql
SELECT ?team WHERE {
  wd:Q1234568 dbo:playsFor ?team .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Ognjen Vukojević.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
83,14,train,"Give me the party of the governor of the commander, that is a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/governor> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor ?party WHERE {
  # Find individuals involved in the Central African Republic Civil War as commanders or governors
  ?event dbo:wikiPageRedirects dbr:Central_African_Republic_Civil_War .
  
  ?individual dbo:role ?role .
  ?role dbo:wikiPageRedirects ?event .
  
  FILTER (CONTAINS(LCASE(?role), ""commander"") || CONTAINS(LCASE(?role), ""governor""))
  
  # Ensure the individual is a politician
  ?individual rdf:type dbo:Politician .

  # Get the political party of the governor/commander
  OPTIONAL { ?individual dbo:party ?party . }
  
  BIND (STR(?individual) AS ?governor)
}
```",3,4,4,3,1,3,2,20,0,0,12,0,0.0,0
507,11,train,Give me the spouse of the person born as Anne Voase Coates.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person dbo:birthName ""Anne Voase Coates""@en .
  ?person dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
865,22,train,Give me the native of British Raj and father of the child of Abu Ahmad Abdul Hafiz.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v0 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfBritishRaj WHERE {
  ?child dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz .
  ?father dbo:child ?child .
  ?father dbo:nativePlace ?place .
  FILTER(CONTAINS(LCASE(?place), ""british raj""))
  BIND(?father AS ?nativeOfBritishRaj)
}
```

This query assumes:
- `dbo:parent` links a child to Abu Ahmad Abdul Hafiz.
- `dbo:child` links a father to his child.
- `dbo:nativePlace` provides the native place of an individual.

Please note that this is a hypothetical structure, as specific relationships and entities might not be directly available in DBpedia. Adjustments may be necessary based on actual data availability.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
976,39,train,Give me the office of the person born as the birth name of Naci Bostancı and office of Meral Akşener.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeLabel WHERE {
  # Find Naci Bostancı by his birth name
  OPTIONAL {
    VALUES ?naciBostanci { dbr:Naci_Bostancı }
    ?naciBostanci dbo:birthName ?birthName .
    FILTER(?birthName = ""Naci Bostancı"")
    ?naciBostanci dbo:office ?office .
    BIND(""Naci Bostancı"" AS ?person)
  }

  # Find Meral Akşener
  OPTIONAL {
    VALUES ?meralAksener { dbr:Meral_Akşener }
    ?meralAksener dbo:office ?office .
    BIND(""Meral Akşener"" AS ?person)
  }

  SERVICE <http://dbpedia.org/sparql> {
    ?office rdfs:label ?officeLabel .
    FILTER(LANG(?officeLabel) = 'en')
  }
}
ORDER BY ?person
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
976,37,train,"Give me the office of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?officeNaciBostanci ?officeMayor
WHERE {
  # Naci Bostancı's office
  dbr:Naci_Bostancı dbo:nationality dbr:Turkey ;
                    dbo:office ?officeNaciBostanci .

  # Mayor's office, who is a politician and Turkish
  ?mayor rdf:type dbo:Mayor ;
         dbo:nationality dbr:Turkey ;
         dbo:politicalParty dbr:Millet_İttifakı ;
         dbo:office ?officeMayor .
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
645,37,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and leader of Ministry of the Army (Spain).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Antonio Cánovas del Castillo as a politician and leader of Ministry of the Army during Restoration (Spain)
  dbr:Antonio_Cánovas_del_Castillo dbo:nationality dbr:Spain ;
                                  dbo:officeHolderOf dbr:Ministry_of_the_Army_(Spain) .

  # Third Carlist War as a military conflict and societal event
  ?militaryForce a dbo:MilitaryConflict ;
                 dbo:place dbr:Spain ;
                 dbo:participatedIn dbr:Restoration_(Spain) .
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
216,17,train,"Give me the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthDate WHERE {
  # Find Pavel Vezhinov's death date
  VALUES ?vezhinovDeathDate { 
    SELECT ?deathDate WHERE {
      dbr:Pavel_Vezhinov dbo:dateOfDeath ?deathDate .
    }
  }

  # Find individuals who are a sports manager, soccer manager, and soccer player
  ?person a dbo:SportsManager ;
          a dbo:SoccerManager ;
          a dbo:SoccerPlayer .

  # Match their birth date with Pavel Vezhinov's death date
  ?person dbp:birthday ?birthDate .
  
  FILTER (?birthDate = ?vezhinovDeathDate)
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
353,6,train,"Give me the entity in the country of Moskovsky City District, Nizhny Novgorod.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Moskovsky_City_District,_Nizhny_Novgorod> <http://dbpedia.org/ontology/country> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?entityLabel WHERE {
  ?entity a dbo:Place .
  ?entity dbo:location dbr:Moskovsky_District_(Nizhny_Novgorod) .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

This query does the following:
- Uses `dbo:Place` to ensure we are querying for geographical entities.
- Filters entities by their location using `dbo:location`, specifically targeting the Moskovsky District in Nizhny Novgorod (`dbr:Moskovsky_District_(Nizhny_Novgorod)`).
- Utilizes a label service to fetch human-readable labels for the entities.",2,2,3,2,1,2,2,9,0,0,29927,0,0.0,0
917,3,train,Who is the mayor of Hawaiian Kingdom?,SELECT ?result WHERE { <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?mayor WHERE {
  ?place a dbo:Country ;
        rdfs:label ""Hawaiian Kingdom""@en .
  OPTIONAL { 
    ?place dbo:mayor ?mayor .
  }
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
582,18,train,Give me the player in Kazuaki Nagasawa and figure known as --10-19 and reference to Japan.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>

SELECT ?player ?alias WHERE {
  ?player a dbo:Person ;
          foaf:name ""Kazuaki Nagasawa"" ;
          dbo:birthPlace ?place .
  
  OPTIONAL { 
    ?player skos:altLabel ?alias .
    FILTER (CONTAINS(LCASE(?alias), ""10-19""))
  }
  
  VALUES ?country { <http://dbpedia.org/resource/Japan> }
  ?place rdfs:label ?location .
  FILTER(CONTAINS(LCASE(?location), LCASE(""Japan"")))
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
892,33,train,Give me the landmark at elevation of the award of the member of E-girls and entity in Italy.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/elevation> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Find a member of E-girls
  ?member dbo:memberOf dbr:E-girls .
  
  # Find an award associated with this member
  ?award dbo:recipient ?member .
  
  # Get the elevation related to this award (assuming there's a property for elevation)
  ?award dbo:elevation ?elevation .

  # Find a landmark at this elevation in Italy
  ?landmark dbo:elevation ?elevation ;
            dbo:location dbr:Italy .
}
```

This query assumes that:
- There is a direct relationship between an award and its recipient.
- The award has an associated elevation property.
- Landmarks have an elevation and location property.

Please note that the actual properties might differ, and you may need to adjust them based on DBpedia's schema. If specific properties are not available, additional exploration of DBpedia's ontology might be necessary.",4,4,5,3,2,3,3,71,0,0,11,0,0.0,0
826,15,train,Who is the child of the father of Anna Magdalena Appel?,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
  ?anna a dbo:Person ;
        foaf:name ""Anna Magdalena Bach""@en .
  
  ?anna dbo:father ?father .

  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
987,13,train,Give me the birth place of the actor of All for Free.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?actor dbo:birthPlace ?birthPlace .
  ?actor dbo:name ""Lee Min-ho""@en .
  OPTIONAL { 
    ?film dbo:starring ?actor .
    ?film dbo:title ""All for Free""@en .
  }
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
5,7,train,"Give me the birthplace of the person born, that is a politician, as .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:Politician .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```

This query does the following:
- It selects individuals (`?person`) who are of type `dbo:Politician`.
- It optionally retrieves their birthplace (`?birthPlace`).",2,3,3,2,1,3,2,20,0,0,222,0,0.0,0
274,17,train,Give me the associated musical artist of Cecil Taylor and professional in the designer of Tetris Classic.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist ?designer WHERE {
  # Find associated musical artist of Cecil Taylor
  ?cecil a dbo:MusicArtist ;
         foaf:name ""Cecil Taylor"" .
  
  ?cecil dbo:associatedBand ?band .
  ?band dbo:genre ?artist .

  # Find professional designer of Tetris Classic
  ?tetris dbp:title ""Tetris Classic""@en ;
          dbo:creator ?designer .
}
```

This query assumes that Cecil Taylor's associated bands or genres can lead us to other artists, and the creator property for Tetris Classic will give us the designer. Adjustments might be needed based on actual data availability in DBpedia.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
888,7,train,"Give me the commander in the force, that is a societal event and an event, of Serhiy Kotenko.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find Serhiy Kotenko
  ?serhiyKotenko a dbo:MilitaryPerson ;
                 foaf:name ""Serhiy Kotenko""@en .

  # Find the commander in the force of Serhiy Kotenko
  ?serhiyKotenko dbo:commanderInForce ?commander .

  # Ensure the commander is both an event and a societal event
  ?commander a dbo:Event ;
             a dbo:SocietalEvent .
}
```

This query does the following:
- Identifies Serhiy Kotenko as a military person.
- Finds his commander in force.
- Ensures that this commander is classified as both an `Event` and a `SocietalEvent`.",2,4,3,2,1,3,2,20,0,0,13,0,0.0,0
865,8,train,Who is the child of Abu Ahmad Abdul Hafiz?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Abu Ahmad Abdul Hafiz""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
83,0,train,Give me the player in Greg Boehme.,SELECT ?result WHERE { <http://dbpedia.org/resource/Greg_Boehme> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?person a dbo:FootballPlayer ;
          foaf:name ""Greg Boehme"" .
  
  ?person dbo:playsForTeam ?team .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
373,6,train,Give me the professional in the profession of Beto Guedes.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Beto_Guedes> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  ?betoGuedes dbo:profession dbr:Singer .
  ?betoGuedes foaf:name ""Beto Guedes"" .

  ?professional dbo:profession dbr:Singer .
  FILTER(?professional != ?betoGuedes)
}
```",2,2,3,2,1,2,2,9,0,0,1543,0,0.0,0
124,34,train,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of Battle of Atbara.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify 'A' Battery, Royal Australian Artillery as a reference
  dbr:A_Battery,_Royal_Australian_Artillery dbo:militaryUnitOf dbr:Royal_Australian_Artillery .
  
  # Find the Battle of Atbara and its associated war (Sudan Campaign)
  dbr:Battle_of_Atbara dbo:partOf dbr:Sudan_Campaign_1896–1899 .

  # Identify commanders involved in the Sudan Campaign
  ?commander dbo:commanded dbr:Sudan_Campaign_1896–1899 .
  
  # Ensure the commander is associated with 'A' Battery, Royal Australian Artillery
  ?commander dbo:militaryCommanderOf dbr:A_Battery,_Royal_Australian_Artillery .
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
129,12,train,Give me the associated musical artist of Saba (rapper) and associated musical artist of EarthGang and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist1 ?artist2 WHERE {
  # Find associated artists for Saba (rapper)
  OPTIONAL {
    ?saba dbo:associatedMusicalArtist ?artist1 .
    FILTER(?saba = dbr:Saba_(rapper))
  }
  
  # Find associated artists for EarthGang
  OPTIONAL {
    ?earthgang dbo:associatedMusicalArtist ?artist2 .
    FILTER(?earthgang = dbr:EarthGang)
  }

  # Ensure at least one artist is found
  VALUES (?saba ?earthgang) { (dbr:Saba_(rapper)) (dbr:EarthGang) }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
341,0,train,Give me the band member of Beyoncé.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Beyoncé> . },"```sparql
SELECT ?member WHERE {
  wd:Q134064 memberOf/wd:Q11424 .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,2,2,9,0,0,50,0,0.0,0
459,2,train,Give me the person born as John Kevin Stitt.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:name ?name . }
  OPTIONAL { ?person dbo:birthName ?birthName . }
  FILTER (CONTAINS(LCASE(?birthName), ""john kevin stitt""))
}
```",1,1,2,1,1,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
5,6,train,Give me the entity in Canada and birthplace of Gerald Regan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> . <http://dbpedia.org/resource/Gerald_Regan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInCanada ?birthPlace WHERE {
  dbr:Gerald_Regan dbo:nationality dbr:Canada .
  OPTIONAL { dbr:Gerald_Regan dbo:placeOfBirth ?birthPlace . }
  OPTIONAL { dbr:Gerald_Regan dbo:residence ?entityInCanada . FILTER (regex(str(?entityInCanada), ""Canada"")) }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
459,16,train,Give me the person born as the birth name of Kevin Stitt and governor of Oklahoma.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbp:name ""Kevin Stitt"" .
  ?person dbo:birthName ""Kevin Stitt"" .
  ?person dbo:governmentRole dbr:Governor_of_Oklahoma .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
41,8,train,"Give me the party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  # Find the leader of the Castlereagh Borough Council in 2005
  ?leader a dbo:Mayor ;
          dbo:electedDuring dbr:2005_Castlereagh_Borough_Council_election .

  # Ensure the leader is also a politician and an office holder
  ?leader dbo:occupation dbr:Politician ;
          dbo:officeHolderOf dbr:Castlereagh_Borough_Council .

  # Retrieve the political party of the leader
  ?leader dbp:party ?party .
}
```

This query assumes that DBpedia has structured data for the Castlereagh Borough Council election, including details about leaders and their roles. The `dbo:electedDuring` property is used to link the leader to the specific election year, while `dbp:party` retrieves the political party information.",2,4,3,2,1,2,3,28,0,0,6,0,0.0,0
645,39,train,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and military force of Spanish Civil War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:birthPlace dbr:Restoration_(Spain) .
  ?person dbo:militaryService ?militaryForce .
  ?militaryForce dbo:partOf dbr:Spanish_Civil_War .

  ?office dbo:leader ?person ;
          a dbo:GovernmentAgency, dbo:Organization .

  ?leader dbp:name ?name .
}
```

This query does the following:
- Filters individuals (`?person`) who are nationals of Spain and born in Restoration (Spain).
- Ensures these individuals were part of a military force involved in the Spanish Civil War.
- Identifies an office that is both a government agency and an organization, led by such a person.
- Retrieves the name of this leader.",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
36,10,train,Give me the person born in the birth year of Deanne Bray.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v1 . },"```sparql
SELECT ?person ?birthYear WHERE {
  # Find Deanne Bray's birth year
  dbpedia:Deanne_Bray dbo:birthDate ?deanneBirthDate .
  
  # Extract the year from Deanne Bray's birth date
  BIND(YEAR(?deanneBirthDate) AS ?birthYear)
  
  # Find other persons born in the same year
  ?person a dbo:Person ;
          dbo:birthDate ?personBirthDate .
  
  # Ensure the person is not Deanne Bray and extract the year from their birth date
  FILTER (?person != dbpedia:Deanne_Bray && YEAR(?personBirthDate) = ?birthYear)
}
```",2,2,3,2,1,2,3,28,0,0,2611,0,0.0,0
926,34,train,Give me the child of Ahmed III and father of the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Step 1: Find Neşerek Kadın's spouse
  ?neserekKadin a dbo:Spouse ;
                dbp:spouse ?spouse .

  # Step 2: Find the father of the spouse
  ?spouse dbo:father ?fatherOfSpouse .

  # Step 3: Find the grandfather (father of the father)
  ?fatherOfSpouse dbo:father ?grandfather .

  # Step 4: Identify Ahmed III's child who is this grandfather
  ?ahmedIII dbo:child ?child .
  FILTER(?ahmedIII = dbpedia:Ahmed_III) .
  FILTER(?grandfather = ?child)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
573,9,train,"Give me the person decedent at Massachusetts and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . }","```sparql
# Query for persons who died in Massachusetts
SELECT ?person ?personLabel WHERE {
  ?person dbo:deathPlace dbr:Massachusetts .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

```sparql
# Query for persons who died in Quincy, Massachusetts
SELECT ?person ?personLabel WHERE {
  ?person dbo:deathPlace dbr:Quincy,_Massachusetts .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
442,6,train,Give me the resting place of the actor of This Side of Heaven.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/This_Side_of_Heaven> <http://dbpedia.org/ontology/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?restingPlace WHERE {
  VALUES ?film { dbr:This_Side_of_Heaven }
  
  ?film dbo:starring ?actor .
  
  OPTIONAL {
    ?actor dbo:deathPlace ?restingPlace .
  }
}
```",2,2,3,2,1,2,2,9,0,9,3,0.0,0.0,0
456,14,train,"Give me the band of the band, that is a musical artist, of Dean Brody.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person dbo:birthName ""Dean Brody""@en .
  ?person dbo:associatedBandOrMusicalGroup ?band .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
417,8,train,"Who is the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Frederick Francis III, Grand Duke of Mecklenburg-Schwerin
  dbr:Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin dbo:spouse ?spouse .
  
  # Find his children
  ?child dbo:parent ?spouse ;
         dbo:parent dbr:Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin .

  # Filter for those who are royalty
  ?child a dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
216,28,train,Give me the player in Mario Ivanković and team of Ognjen Vukojević and player in the coach of Croatia national under-21 football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v1 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerMarioIvankovic ?teamOgnjenVukojevic ?playerCoachCroatiaU21
WHERE {
  # Find the player associated with Mario Ivanković
  ?person dbo:nationality dbr:Croatia ;
          foaf:name ""Mario Ivanković""@en .
  ?person dbo:playsFor ?team .
  ?team dbo:member ?playerMarioIvankovic .

  # Find the team associated with Ognjen Vukojević
  ?coach foaf:name ""Ognjen Vukojević""@en ;
         dbo:nationality dbr:Croatia .
  ?coach dbo:worksFor ?teamOgnjenVukojevic .

  # Identify the coach of Croatia national under-21 football team and find a player associated with this coach
  ?croatiaU21Coach dbo:nationality dbr:Croatia ;
                   dbo:position ""Head Coach""@en ;
                   dbo:worksFor dbr:Croatia_national_under-21_football_team .
  ?croatiaU21Coach dbo:member ?playerCoachCroatiaU21 .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
353,2,train,"Give me the awardee of Medal of the Order ""For Merit to the Fatherland"".",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_the_Order_%22For_Merit_to_the_Fatherland%22> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?medal a dbo:Award .
  ?medal rdfs:label ""Medal of the Order \""For Merit to the Fatherland\""""@en .
  ?recipient dbo:award ?medal .
  ?recipient foaf:name ?awardee .
}
```",1,1,2,1,1,2,2,9,0,19,12,0.0,0.0,0
453,2,train,"Give me the birth place, that is a country, of William Denning.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Denning> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
  FILTER (isBlank(?birthPlace) || ?birthPlace a wd:Q6256)
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for William Denning. You can find this by searching for his name on DBpedia or using an external service to get the correct QID.",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
382,2,train,Give me the player in Lukas Kübler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?team WHERE {
  dbpedia:de:Lukas_Kübler dbo:playsFor ?team .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
865,35,train,"Give me the father of the child of Abu Ahmad Abdul Hafiz and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Find Abu Ahmad Abdul Hafiz and his child
  ?abuAH a dbo:Person ;
         foaf:name ""Abu Ahmad Abdul Hafiz"" .
  
  ?child dbo:parent ?abuAH ;
         a dbo:Person .

  # Identify the father of the child
  ?father dbo:spouse ?mother ;
          dbo:child ?child .

  # Find Ram Jaipal Singh Yadav and his country of residence
  ?ramJAIPAL a dbo:Person ;
             foaf:name ""Ram Jaipal Singh Yadav"" .
  
  ?country dbo:nativePlace ?ramJAIPAL ;
           a dbo:Country .

}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
456,30,train,"Give me the spouse of Danielle Spencer (Australian actress) and band of the band, that is a musical artist, of Dean Brody and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?spouse WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Danielle Spencer""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}

SELECT ?band WHERE {
  ?artist a dbo:MusicalArtist ;
          foaf:name ""Dean Brody""@en .
  OPTIONAL { ?artist dbo:associatedBand ?band . }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
715,37,train,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Politician .
  ?person dbo:officeHolderOf dbr:Mayor_of_Spain .
  ?person dbo:leaderOfMinistry dbr:Ministry_of_the_Air_(Spain) .
  ?person dbo:presidentDuring dbr:1933_Spanish_general_election .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
267,3,train,"Give me the player, that is a soccer club, in Rasoul Khatibi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?club rdf:type dbo:SoccerClub .
  ?club rdfs:label ""Rasoul Khatibi""@en .
  FILTER (lang(?club) = 'en') .

  ?member dbo:team ?club .
  ?member rdf:type dbo:Player .
  ?member rdfs:label ?player .
}
```",1,2,2,1,1,3,2,20,0,0,12,0,0.0,0
236,4,train,"Give me the reference, that is an office holder and a politician, to James Madison.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?reference WHERE {
  wd:Q571 ?p ?o .
  FILTER (
    (str(?p) = ""wikiPageWikiLink"" || str(?p) = ""officialPositionHeldBy"") &&
    EXISTS { ?o wdt:P106 wd:Q82955 } && # P106 is the property for occupation, Q82955 is politician
    EXISTS { ?o wdt:P39 ?position . FILTER (BOUND(?position)) } # P39 is the property for office held
  )
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
892,2,train,Give me the entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?name WHERE {
  ?entity dbo:location dbr:Province_of_Reggio_Emilia .
  OPTIONAL { ?entity rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
```",1,1,2,1,1,3,3,71,0,2,40,0.0,0.0,0
976,30,train,Give me the office of Mustafa Şentop and office of Meral Akşener and office of the person born as Mehmet Naci Bostancı.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v0 <http://dbpedia.org/property/office> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeName WHERE {
  VALUES ?person { 
    dbr:Mustafa_Şentop 
    dbr:Meral_Akşener 
    dbr:Mehmet_Naci_Bostancı
  }
  
  ?person dbo:positionHeld ?office .
  ?office rdfs:label ?officeName .
  FILTER (lang(?officeName) = 'en')
}
ORDER BY ?person",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
433,36,train,Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of Paul Chambers.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer ?profession ?associatedArtist
WHERE {
  # Find the album and its writer(s)
  dbr:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall dbo:composer ?writer .

  # Get the profession of the writer
  ?writer a ?profession .

  # Find musical artists associated with Paul Chambers
  ?associatedArtist dbo:associatedBand dbr:Paul_Chambers .
}
```",4,4,5,3,2,3,3,71,0,0,16,0,0.0,0
955,13,train,"Give me the band of the writer of the work, that is a work and an album and a musical work, of Matt Freeman.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?band WHERE {
  # Find Matt Freeman's DBpedia resource
  ?mattFreeman a dbo:Person ;
               rdfs:label ""Matt Freeman""@en .
  
  # Find works by Matt Freeman that are both albums and musical works
  ?work dbo:composer ?mattFreeman ;
        a dbo:Album, dbo:MusicalWork .

  # Get the band associated with these works
  ?work dbo:band ?band .
}
```

This query does the following:
- Identifies Matt Freeman as a `Person` in DBpedia.
- Finds works (`?work`) that are both an `Album` and a `MusicalWork`, composed by Matt Freeman.
- Retrieves the band (`?band`) associated with these works.",3,6,4,3,1,3,2,20,0,0,21,0,0.0,0
281,0,train,Give me the commander in New Guinea campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?commanderLabel WHERE {
  ?campaign dbo:location dbr:New_Guinea .
  ?campaign dbo:commander ?commander .
  OPTIONAL { ?commander rdfs:label ?commanderLabel . FILTER (lang(?commanderLabel) = 'en') }
}
```",1,1,2,1,1,2,3,28,0,0,27,0,0.0,0
83,1,train,Give me the player in Albert Edward (soccer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Albert_Edward_(soccer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?team a dbo:SoccerClub ;
        dbo:member ?player .
  
  FILTER(CONTAINS(LCASE(STR(?team)), ""albert edward""))
}
```

This query assumes that there is an association between soccer clubs and players through the `dbo:member` property. It searches for teams with names containing ""Albert Edward"" (case-insensitive) and retrieves associated players.",1,1,2,1,1,2,2,9,0,0,8,0,0.0,0
926,22,train,"Give me the child of the father, that is a royalty, of Mustafa III and father of Mahmud II.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Mustafa III's information
  dbr:Mustafa_III dbo:spouse ?spouse .
  
  # Find children of Mustafa III who are royalty
  ?child dbo:parent dbr:Mustafa_III ;
         a dbo:Monarch .

  # Check if the child is also the parent of Mahmud II
  ?child dbo:parent dbr:Mahmud_II .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
122,3,train,"Who is the reference, that is a musical artist and an artist, to Gift of Gab?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""Gift of Gab""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  # Gift of Gab resource
  VALUES ?giftOfGab { dbr:Gift_of_Gab }

  # Find entities related to Gift of Gab as a musical artist or collaborator
  ?related dbo:associatedMusicalArtist ?giftOfGab .
  
  # Ensure the reference is also an artist (broad sense)
  ?related dbo:occupation dbr:Musician ;
           dbo:occupation dbr:Artist .

  # Return distinct references to avoid duplicates
  FILTER(?reference != ?giftOfGab)
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
443,15,train,Give me the landmark at elevation of the award of William Shepherd and birthplace of Carl Larsson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Find William Shepherd's award and its elevation
  ?shepherdAward dbo:recipient dbr:William_Shepherd .
  ?shepherdAward dbo:elevation ?elevation .

  # Find Carl Larsson's birthplace
  ?larssonBirthPlace dbo:birthPlace dbr:Carl_Larsson .

  # Find a landmark at the same elevation as the award
  ?landmark dbo:elevation ?sameElevation .
  
  FILTER (?elevation = ?sameElevation)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
508,6,train,Give me the birthplace of Ma Hongkui and birthplace of Ma Bufang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ma_Hongkui> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ma_Bufang> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Ma_Hongkui 
    dbr:Ma_Bufang 
  }
  
  ?person dbo:birthPlace ?birthPlace .
}
```

This query uses the `dbo:birthPlace` property to find the birthplaces of Ma Hongkui and Ma Bufang. It selects both the person's resource identifier and their birthplace.",2,2,3,1,2,3,2,20,0,0,3,0,0.0,0
382,3,train,"Give me the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?team dbo:name ""Bonner SC""@en .
  ?team dbo:manager ?manager .

  ?manager dbo:sport ?sport .
  FILTER (
    EXISTS { ?manager dbo:sport dbr:Soccer }
    && EXISTS { ?manager dbo:sport dbr:Athletics }
    && EXISTS { ?manager dbo:sport dbr:Sports_management }
  )
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
170,15,train,Give me the entity in the work of International Energy Agency and domain of Mayor.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Find entities related to the International Energy Agency
  { 
    ?entity dbo:organization dbr:International_Energy_Agency .
  }
  
  UNION
  
  # Find entities related to the domain of a Mayor
  {
    ?entity dbo:positionTitle dbr:Mayor .
  }
}
```",3,3,4,2,2,2,3,28,0,0,99,0,0.0,0
465,10,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and successor of Renée of France.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  dbr:Ercole_II_d%27Este,_Duke_of_Ferrara dbo:succeededBy ?successor .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
5,3,train,"Give me the person born, that is a politician, as .","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:Politician .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,2,2,1,1,3,2,20,155,205373,14,0.0007541551516095131,0.9171597633136095,0.0015070710802782734
935,13,train,"Give me the death place of the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  # Find awards associated with Syed Sohail Hussain Naqvi
  dbr:Sohail_Hussain_Naqvi dbo:award dbr:Award1 .
  
  # Find awardees of those awards
  dbr:Award1 dbo:recipient ?awardee .

  # Get the death place of each awardee
  OPTIONAL { ?awardee dbo:deathPlace ?deathPlace . }
}
```

Note:
- Replace `dbr:Sohail_Hussain_Naqvi` with the correct DBpedia resource for Syed Sohail Hussain Naqvi.
- Replace `dbr:Award1` with actual awards associated with him. You may need to explore DBpedia or use a more dynamic approach if there are multiple awards.",3,4,4,3,1,3,2,20,0,0,18,0,0.0,0
129,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?professional dbo:location dbr:CityName .
  ?professional rdf:type dbo:Person .
}
```",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
645,22,train,"Give me the commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?officeLeader WHERE {
  # Find the commander in the Battle of Jarama
  ?battle dbo:type dbr:Battle_of_Jarama .
  ?battle dbo:commander ?commander .

  # Find Camilo Menéndez Tolosa's office
  ?person foaf:name ""Camilo Menéndez Tolosa"" .
  ?office dbo:leader ?person ;
          a (dbo:GovernmentAgency | dbo:Organization) .

  # Find the leader of that office
  ?officeLeader dbo:leader ?person .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
573,35,train,"Give me the person decedent at the administration, that is a region, of Charlie Baker and parent of the author, that is a politician and an office holder, of Exchequer Standards.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Charlie Baker as an office holder
  dbr:Charlie_Baker a dbo:OfficeHolder ;
                    dbo:administrativeArea ?region .

  # Author of Exchequer Standards who is a politician and office holder
  ?author dbo:wikiPageWikiLink dbr:Exchequer_Standards ;
          a dbo:Politician, dbo:OfficeHolder .

  # Parent of the author
  ?parent dbo:child ?author .

  # Decedent at the region of Charlie Baker's administration
  ?decedent dbo:placeOfBirth ?region .
}
```",4,7,5,2,2,3,3,71,0,0,2,0,0.0,0
826,27,train,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?predecessor WHERE {
    # Step 1: Find children of Louis IV, Grand Duke of Hesse
    ?child dbo:parent dbr:Louis_IV,_Grand_Duke_of_Hesse .

    # Step 2: For each child, find their parent
    ?child dbo:parent ?grandParent .

    # Step 3: For each grandparent, find their predecessor
    OPTIONAL {
        ?predecessor dbp:successor ?grandParent .
    }
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
445,31,train,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and death place of Patrick Moore.",SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInResidenceCountry
WHERE {
  # Find athletes from Great Britain
  ?athlete dbo:nationality dbr:United_Kingdom ;
           a dbo:Athlete .

  # Get their residences that are countries
  ?athlete dbo:residence ?residence .
  ?residence rdf:type dbo:Country ;
             dbo:location ?entityInResidenceCountry .

  # Find the death place of Patrick Moore
  dbr:Patrick_Moore dbo:deathPlace ?deathPlace .

  # Ensure the residence country is the same as the death place of Patrick Moore
  FILTER (?entityInResidenceCountry = ?deathPlace)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
41,12,train,Give me the party of Enda Kenny and party of Declan Costello and party of Mark Durkan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyLabel WHERE {
  VALUES ?person { 
    dbr:Enda_Kenny 
    dbr:Declan_Costello_(politician) 
    dbr:Mark_Durkan
  }
  
  ?person dbo:politicalParty ?party .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
ORDER BY ?person",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
554,8,train,Give me the leader of the birth place of The Legendary Tigerman.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Find the birthplace of The Legendary Tigerman
  dbr:The_Legendary_Tigerman dbo:birthPlace ?birthPlace .

  # Get the leader of that place
  ?birthPlace dbo:mayorOrLeader ?leader .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
527,10,train,"Give me the work, that is a work and a book, of the host of Hyperland.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v0 . ?result <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?host dbo:hostedBy ""Hyperland""@en .
  ?host dbo:work ?work .
  ?work a dbo:Book .
}
```

This query assumes:
- There is a property `dbo:hostedBy` that links the host to Hyperland.
- The works of the host are linked via `dbo:work`.
- Books are instances of `dbo:Book`.

Please note that the exact properties and classes might differ based on DBpedia's schema, so adjustments may be necessary if these assumptions don't hold.",2,4,3,2,1,3,2,20,0,0,9,0,0.0,0
874,5,train,Give me the band member of The Jones Gang.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . },"```sparql
SELECT ?member WHERE {
  wd:Q1234568 dbo:bandMember ?member .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for The Jones Gang. You can find this by searching for ""The Jones Gang"" in DBpedia or using a SPARQL query to identify the correct entity.",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
987,35,train,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName ?birthPlace WHERE {
  # Find the band associated with Šako Polumenta
  ?band dbo:member dbr:Šako_Polumenta .
  
  # Ensure the band is classified as both an artist and a musical artist
  ?band rdf:type dbo:Band ;
        dbo:genre dbp:musicalArtist .

  # Get the birth place of the band
  ?band dbo:birthPlace ?birthPlace .

  # Find countries in the Central European Time region
  ?country dbo:timeZone dbr:Central_European_Time .
  
  # Ensure the birth place is within a country that observes Central European Time
  ?birthPlace dbo:locatedIn ?country .
}
```",4,7,5,2,2,3,3,71,0,0,2,0,0.0,0
443,5,train,Who is the work of yes?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""yes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?creator WHERE {
  ?work rdfs:label ""Yes""@en .
  ?work dbo:artist ?creator .
  FILTER (lang(?work) = 'en')
}
```

This query searches for works labeled as ""Yes"" and retrieves the artists or creators associated with it. Note that this assumes ""Yes"" refers to a musical work, such as an album by the band Yes.",1,1,2,1,1,2,3,28,0,0,1563,0,0.0,0
554,0,train,Give me the leader of Portuguese São Tomé and Príncipe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Portuguese_São_Tomé_and_Príncipe> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?presidentName WHERE {
  ?country a dbo:Country .
  ?country dbo:name ""São Tomé and Príncipe""@en .
  ?country dbo:headOfState ?president .
  ?president dbo:name ?presidentName .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
773,33,train,"Give me the spouse of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Louis the German and his spouse
  dbr:Louis_the_German a dbo:Monarch ;
                       dbo:spouse ?spouse .

  # Louis the Pious and his child who is royalty
  dbr:Louis_the_Pious a dbo:Monarch ;
                      dbo:child ?royalChild .
  
  FILTER EXISTS { ?royalChild a dbo:Monarch } .

  # Successor of the royal child
  ?royalChild dbo:successor ?successor .

  # Parent of the successor
  ?successor dbo:parent ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
192,12,train,Give me the child of the child of Stephen V of Hungary and spouse of Clemence of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Clemence_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild ?spouse WHERE {
  # Find Stephen V of Hungary
  ?stephenV a dbo:Monarch ;
            foaf:name ""Stephen V of Hungary""@en .
  
  # Find his children
  ?child dbo:parent ?stephenV .

  # For each child, find their children (grandchildren)
  ?grandchild dbo:parent ?child .

  # Check if the grandchild is married to Clemence of Austria
  ?marriage dbo:spouse1 ?grandchild ;
            dbo:spouse2 dbr:Clemence_of_Austria .
  
  OPTIONAL { ?marriage dbo:spouse1 ?spouse . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
507,30,train,Give me the spouse of Anne V. Coates and director of Entertaining Mr Sloane (film) and professional in the profession of Guy Ferland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?director ?profession 
WHERE {
  # Anne V. Coates' spouse
  dbr:Anne_V._Coates dbo:spouse ?spouse .

  # Director of ""Entertaining Mr Sloane""
  dbr:Entertaining_Mr_Sloane (dbo:director|dbo:directedBy) ?director .

  # Professional association with Guy Ferland
  ?person dbo:profession ?profession .
  ?person dbo:worksFor dbr:Guy_Ferland .
  
  # Ensure the same person satisfies all conditions
  FILTER (?spouse = ?director && ?director = ?person)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
826,14,train,Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Prince Friedrich of Hesse and by Rhine
  ?friedrich a dbo:Person ;
             foaf:name ""Prince Friedrich of Hesse and by Rhine""@en .

  # Step 2: Find his parent (father)
  ?fathership dbo:child ?friedrich ;
              dbo:parent ?father .
  
  # Step 3: Determine the predecessor of that parent
  ?predecessorship dbo:child ?father ;
                   dbo:parent ?predecessor .

  # Ensure we are looking at a person
  ?predecessor a dbo:Person .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
582,34,train,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as --10-19.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person a dbo:Scientist ;
          foaf:name ""Hirotaka Sugawara""@en .
  OPTIONAL { ?person dbo:residence ?residence . }
}
```

This query does the following:
- It looks for an entity (`?person`) that is of type `dbo:Scientist` and has a name ""Hirotaka Sugawara"".
- It attempts to retrieve any associated residence information using the property `dbo:residence`.

Please note that this query assumes Hirotaka Sugawara's data is available in DBpedia with these specific properties. If his data isn't present or structured differently, adjustments may be necessary.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
573,23,train,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Find Charlie Baker (Australian footballer) and his real name
  dbr:Charlie_Baker_(Australian_footballer) dbo:birthName ?realName .
  
  # Find the region associated with this real name
  ?region dbo:administrativeRegionOf ?administration .
  ?administration dbo:name ?realName .

  # Find a person who was decedent at that administration
  ?decedent dbo:positionHeld ?administration ;
            rdf:type dbo:Person .
}
```",3,4,4,3,1,3,3,71,0,0,968,0,0.0,0
582,6,train,"Give me the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?person dbo:birthName ""Masami Nagasawa""@en .
  ?person dbo:father ?father .

  FILTER EXISTS { 
    ?father dbo:occupation ?occupation .
    VALUES ?occupation { 
      dbo:Athlete 
      dbo:SoccerManager 
      dbo:SportsManager
    }
  }

  FILTER NOT EXISTS {
    ?father dbo:deathDate ?death .
  }
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
166,6,train,Give me the resting place of Gonzalo Queipo de Llano and entity in Spain.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gonzalo_Queipo_de_Llano> <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burial WHERE {
  dbr:Gonzalo_Queipo_de_Llano dbo:placeOfBurial ?burial .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
926,29,train,Give me the child of Ahmed III and successor of the child of Ahmed III and father of Mahmud II.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Ahmed III and his child
  dbr:Ahmed_III dbo:child dbr:Sultan_Mustafa_II .

  # Mustafa II's successor (who is also the father of Mahmud II)
  dbr:Sultan_Mustafa_II dbo:succeededBy ?successor .
  
  # The successor must be the father of Mahmud II
  ?successor dbo:child dbr:Mahmud_II .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
192,0,train,Give me the spouse of Clemence of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Clemence_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Clemence of Austria. You can find this by searching for her on DBpedia or using a SPARQL query to identify her unique ID.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
874,8,train,Give me the band of the band member of The Jones Gang.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . ?result <http://dbpedia.org/ontology/bandMember> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band WHERE {
  ?person dbo:bandMember dbp:The_Jones_Gang .
  ?person dbo:memberOfBand ?band .
}
```

This query does the following:
- It uses `dbo:bandMember` to find individuals who are members of ""The Jones Gang.""
- Then, it uses `dbo:memberOfBand` to find other bands those individuals might be associated with.",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
433,14,train,Give me the professional in the profession of Bob Marley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  # Find Bob Marley's profession
  ?bobMarley dbo:occupation ?profession .
  
  # Filter for individuals with the same profession
  ?person dbo:occupation ?sameProfession .

  # Ensure it is the same profession as Bob Marley's
  FILTER (?sameProfession = ?profession)

  # Exclude Bob Marley from results
  FILTER(?person != <http://dbpedia.org/resource/Bob_Marley>)

  # Get names of these individuals
  ?person rdfs:label ?name .
  
  # Filter to ensure we get English labels
  FILTER(LANG(?name) = 'en')
}
ORDER BY ?name
LIMIT 10
```",2,2,3,2,1,3,3,71,0,4,45013,0.0,0.0,0
839,13,train,Give me the band of the member of Böhse Onkelz.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?band 
WHERE {
  ?member dbo:memberOfBand dbr:Böhse_Onkelz .
  OPTIONAL { ?member dbo:associatedBand ?band . }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
917,12,train,Give me the child of Kekūanāoʻa and child of Kekūanāoʻa.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person dbo:parent dbr:Kekūanāoʻa .
  ?person dbo:child ?child .
}
```",2,2,3,1,2,3,3,71,0,5,3,0.0,0.0,0
433,13,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT DISTINCT ?secondLevelArtist WHERE {
  # Scott LaFaro's associated musical artist
  dbpedia:Scott_LaFaro dbo:musicalArtist ?firstLevelArtist .
  
  # First level collaborator's associated musical artists
  ?firstLevelArtist dbo:musicalArtist ?secondLevelArtist .
  
  FILTER(?secondLevelArtist != dbpedia:Scott_LaFaro) # Exclude Scott LaFaro himself
}
```",2,4,3,2,1,3,3,71,0,0,13,0,0.0,0
326,4,train,Who is the awardee of French Legion of Honor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:honoraryTitle dbr:Légion_d'honneur .
}
```

This query looks for entities (`?person`) that have an honorary title of the French Legion of Honor. The `dbo:honoraryTitle` property is used to find individuals associated with this award.",1,1,2,1,1,3,2,20,0,0,13,0,0.0,0
18,14,train,Give me the parent of the professional in Actress and professional in .,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/child> ?v2 . }","PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?parentClass WHERE {
  <http://dbpedia.org/class/yago/YagoLegalActor104930848> rdfs:subClassOf+ ?parentClass .
}
```

Explanation:
- `PREFIX rdfs:` defines the RDF Schema namespace.
- `<http://dbpedia.org/class/yago/YagoLegalActor104930848>` is a URI for the class ""Actress"" in DBpedia. This specific URI might need to be verified or adjusted based on the exact mapping in DBpedia, as it can change over time.
- `rdfs:subClassOf+` is used to traverse up the hierarchy and find all superclasses of ""Actress"".
- `?parentClass` is a variable that will hold the result of the query, representing any superclass of ""Actress"".",3,3,4,2,2,2,3,28,0,0,200,0,0.0,0
839,28,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of Peter Schorowsky and band of Matthias Röhr.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v1 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band
WHERE {
  VALUES ?personName { 
    ""Kevin Richard Russell"" 
    ""Peter Schorowsky"" 
    ""Matthias Röhr""
  }
  
  ?person dbo:name ?personName .
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}
ORDER BY ?person
```

This query does the following:
- Uses `PREFIX` to define common namespaces for DBpedia properties.
- Selects individuals (`?person`) and their associated bands (`?band`).
- Filters individuals by their names using a `VALUES` clause.
- Checks if these individuals are members of any band using the `dbo:memberOfBand` property.",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
232,4,train,"Give me the artistic movement of Ella Cheever Thayer and claim to fame of Katherine ""Kitty"" Marshall.",SELECT ?result WHERE { <http://dbpedia.org/resource/Katherine_%22Kitty%22_Marshall> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Ella_Cheever_Thayer> <http://dbpedia.org/ontology/movement> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist ?movement ?claimToFame
WHERE {
  VALUES ?artist { 
    dbr:Ella_Cheever_Thayer 
    dbr:Katherine_Marshall_(actress)
  }
  
  OPTIONAL {
    ?artist dbo:artisticMovement ?movement .
  }

  OPTIONAL {
    ?artist dbo:notableWork ?claimToFame .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
329,8,train,Give me the birthplace of the author of The Tailor and Ansty.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?birthPlace WHERE {
  ?author dbo:book ""The Tailor and Ansty""@en .
  ?author foaf:name ""George MacDonald""@en .
  ?author dbp:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
192,8,train,Give me the child of the child of Stephen V of Hungary.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Find Stephen V of Hungary
  ?stephenV a dbo:Monarch ;
            foaf:name ""Stephen V of Hungary""@en .

  # Find his children
  ?stephenV dbo:spouse ?spouse .
  ?spouse dbo:child ?child .

  # Find the grandchildren (children of Stephen's children)
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,2,20,0,0,7,0,0.0,0
373,0,train,Give me the writer of 2300 Jackson Street (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/2300_Jackson_Street_(song)> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  ?song dcterms:title ""2300 Jackson Street (song)"" .
  ?song dbo:lyricsBy ?writer .
}
```",1,1,2,1,1,2,2,9,0,0,6,0,0.0,0
976,3,train,"Give me the administration, that is an organisation, of Kemal Kılıçdaroğlu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organization WHERE {
  ?person dbo:givenName ""Kemal"" .
  ?person dbo:familyName ""Kılıçdaroğlu"" .
  ?person dbo:affiliation ?organization .
}
```

This query searches for a person with the given name ""Kemal"" and family name ""Kılıçdaroğlu"", then retrieves any organizations he is affiliated with.",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
465,30,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of Anne of Brittany and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Ercole II d'Este's successor
  dbr:Ercole_II_d%27Este dbo:succeededBy ?successor .

  # Anne of Brittany's child who is royalty and their spouse
  OPTIONAL {
    dbr:Claude_of_France dbo:spouse ?spouse .
    FILTER (isLiteral(?spouse) && contains(str(?spouse), ""Francis I of France""))
  }

  # Check if the successor is related to the spouse of Anne's child
  OPTIONAL {
    ?successor dbo:spouse ?relatedSpouse .
    FILTER (isLiteral(?relatedSpouse) && contains(str(?relatedSpouse), ""Barbara of Austria""))
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
865,32,train,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry
WHERE {
  # Ram Jaipal Singh Yadav's residence native country
  ?ram a dbo:Person ;
      foaf:name ""Ram Jaipal Singh Yadav"" .
  
  ?residence dbo:nativeOf ?nativeCountry .

  # Abu Ahmad Abdul Hafiz's child who is a politician
  ?child a dbo:Politician ;
         dbo:parent ?father .

  ?abu a dbo:Person ;
       foaf:name ""Abu Ahmad Abdul Hafiz"" .
  
  ?abu dbo:child ?child .

  # Linking the father to the native country of Ram Jaipal Singh Yadav's residence
  ?father dbr:Residence_of_Ram_Jaipal_Singh_Yadav = ?residence .
}
```

This query assumes that there are direct links available in DBpedia for these individuals and their relationships. You may need to adjust the properties or resource identifiers based on actual data availability.",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
456,35,train,"Give me the spouse of the actor of Pacific Drive and band of the band, that is a musical artist, of Dean Brody.",SELECT ?result WHERE { <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?band
WHERE {
  # Find the actor of ""Pacific Drive""
  ?movie dbo:title ""Pacific Drive""@en .
  ?movie dbo:starring ?actor .

  # Get the spouse of this actor
  ?actor dbo:spouse ?spouse .

  # Find Dean Brody's band
  dbr:Dean_Brody dbo:band ?band .

  # Check if the band is a musical artist
  ?band rdf:type dbo:MusicalArtist .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
445,33,train,Give me the death place of the awardee of the establishment of 1820-03-10 and entity in England.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  ?entity dbo:foundingDate ""1820-03-10""^^xsd:date ;
          dbo:country dbr:England .
  
  ?award dbo:recipient ?awardee .
  ?award dbo:relatedEntity ?entity .

  ?awardee dbp:deathPlace ?deathPlace .
}
```

This query assumes that there is a direct relationship between the entity and an award, which in turn has a recipient (the awardee). It also assumes that the death place of the awardee can be directly accessed via `dbp:deathPlace`.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
47,17,train,"Give me the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?awardee WHERE {
  ?award a dbo:Award ;
         dbo:country dbr:India .
  OPTIONAL { ?award dbo:recipient ?awardee . }
}
ORDER BY ?award
```

This query does the following:
- Selects awards (`?award`) that are of type `dbo:Award` and have been given in India (`dbo:country dbr:India`).
- Optionally selects the recipient (`?awardee`) of each award.
- Orders the results by the name of the award.",2,3,3,2,1,3,3,71,0,0,1632,0,0.0,0
791,0,train,Give me the spouse of Taira no Tokuko.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
SELECT ?spouse WHERE {
  dbpedia:Tokuko_(Taira) dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
41,2,train,Give me the party of Enda Kenny.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  wd:Q176656 wdt:P106 wd:Q82955 .
  wd:Q82955 wdt:P102 ?party .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
465,15,train,"Give me the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?child WHERE {
  # Step 1: Find the parent of Ercole II d'Este
  ?parent dbo:spouse|dbo:child ?ercole .
  
  # Ensure we are referring to Ercole II d'Este specifically
  ?ercole foaf:name ""Ercole II d'Este""@en ;
          dbo:title ""Duke of Ferrara""@en .

  # Step 2: Find the children of that parent
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
456,29,train,Give me the professional in the alter ego of The Shadow and band of Alan Doyle and spouse of Danielle Spencer (Australian actress).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # The Shadow's alter ego is Lamont Cranston
  ?alterEgo dbo:alias ""Lamont Cranston""@en .
  ?alterEgo dbo:characterName dbr:The_Shadow .

  # Alan Doyle's band is Great Big Sea
  ?band dbo:member dbr:Alan_Doyle .
  ?band rdfs:label ""Great Big Sea""@en .

  # Danielle Spencer, the Australian actress
  ?spouse dbo:spouse dbr:Danielle_Spencer_(actress) .
  ?spouse dbo:nationality dbr:Australia .

  # The person we are looking for is connected to all these entities
  ?person dbo:alterEgo ?alterEgo ;
          dbo:memberOfBand ?band ;
          dbo:spouse ?spouse .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
917,1,train,Give me the child of Kekūanāoʻa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person dbo:child ?child .
  FILTER(?person = dbpedia:Kekūanāoʻa)
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
130,0,train,Give me the figure known as Vanderbilt Commodores.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Vanderbilt_Commodores> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?description WHERE {
  ?entity rdfs:label ""Vanderbilt Commodores""@en .
  OPTIONAL { ?entity dbo:description ?description . FILTER (lang(?description) = 'en') }
}
```",1,1,2,1,1,3,2,20,0,2,3,0.0,0.0,0
582,16,train,"Give me the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?father WHERE {
  # Find children of Kazuaki Nagasawa
  ?child dbo:parent ?nagasawa .
  ?nagasawa foaf:name ""Kazuaki Nagasawa""@en .

  # Find fathers of those children
  ?child dbo:parent ?father .

  # Filter fathers by their occupations
  OPTIONAL { ?father dbo:occupation dbp:Athlete . }
  OPTIONAL { ?father dbo:occupation dbp:SoccerManager . }
  OPTIONAL { ?father dbo:occupation dbp:SportsManager . }

  FILTER (
    EXISTS { ?father dbo:occupation dbp:Athlete } &&
    EXISTS { ?father dbo:occupation dbp:SoccerManager } &&
    EXISTS { ?father dbo:occupation dbp:SportsManager }
  )
}",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
715,32,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in the force of Francisco Largo Caballero.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?conflict ?commanderAbdelKrim ?commanderCaballero
WHERE {
  # Abd el-Krim's military conflicts and his role as commander
  ?conflict1 dbo:militaryConflict [dbo:commander ?abdelKrim].
  ?abdelKrim rdfs:label ""Abd el-Krim""@en.
  
  OPTIONAL { 
    ?conflict1 dbo:commander ?commanderAbdelKrim.
    FILTER(LANG(?commanderAbdelKrim) = 'en')
  }

  # Francisco Largo Caballero's military conflicts and his role as commander
  ?conflict2 dbo:militaryConflict [dbo:commander ?caballero].
  ?caballero rdfs:label ""Francisco Largo Caballero""@en.
  
  OPTIONAL { 
    ?conflict2 dbo:commander ?commanderCaballero.
    FILTER(LANG(?commanderCaballero) = 'en')
  }
}
```

This query attempts to find military conflicts associated with Abd el-Krim and Francisco Largo Caballero, specifically looking for their roles as commanders. It uses the `dbo:militaryConflict` property to link individuals to conflicts and `dbo:commander` to identify who commanded those forces.",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
417,30,train,"Give me the spouse of Princess Caroline-Mathilde of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of Christian X of Denmark.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse ?royalChild ?grandchild
WHERE {
  # Step 1: Find the spouse of Princess Caroline-Mathilde of Denmark
  ?princess a dbo:Princess ;
           rdfs:label ""Caroline-Mathilde of Denmark""@en .
  
  ?princess dbo:spouse ?spouse .

  # Step 2: Identify a child of Frederick Francis III who is royalty
  ?frederickFrancisIII a dbo:GrandDuke ;
                       rdfs:label ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin""@en .
  
  ?frederickFrancisIII dbo:child ?royalChild .
  ?royalChild rdf:type/rdfs:subClassOf* dbo:Royal .

  # Step 3: Identify a child of the royal child who is also a child of Christian X
  ?christianX a dbo:King ;
              rdfs:label ""Christian X of Denmark""@en .
  
  ?royalChild dbo:child ?grandchild .
  ?grandchild dbo:parent ?christianX .
}",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
373,3,train,Give me the profession of Beto Guedes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Beto_Guedes> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  wd:Q123456 wdt:P106 ?occupation .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Beto Guedes. You can find this by searching for his DBpedia page or using a SPARQL query to identify him.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
341,2,train,Give me the awardee of List of awards and nominations received by Beyoncé.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Beyoncé> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES ?beyonce { dbr:Beyoncé }
  ?beyonce dbo:award ?award .
}
```",1,1,2,1,1,2,2,9,0,1,1,0.0,0.0,0
47,24,train,Give me the office of the awardee of Banga Bhushan and office of Ajoy Mukherjee.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?office
WHERE {
  # Find awardees of Banga Bibhushan
  ?award dbr:Banga_Bibhushan .
  ?award dbo:recipient ?awardee .

  OPTIONAL {
    ?awardee dbo:positionHeld ?office .
  }

  UNION

  # Find offices held by Ajoy Mukherjee
  dbr:Ajoy_Mukherjee dbo:positionHeld ?office .
}
```

This query does the following:
- It selects awardees of the Banga Bibhushan award and checks if they have any positions or offices listed.
- It also retrieves the offices held by Ajoy Mukherjee directly.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
158,4,train,"Who is the person deceased, that is an office holder and a politician, on 1945-09-15?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolderOf ?office ;
          dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 1945 && MONTH(?deathDate) = 9 && DAY(?deathDate) = 15)
  OPTIONAL { ?person rdfs:label ?name . FILTER(LANG(?name) = 'en') }
}
ORDER BY ?name
LIMIT 10",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
582,4,train,Give me the residence of Hirotaka Sugawara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?residence WHERE {
  wd:Q123456 wdt:P1128 ?residence .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Hirotaka Sugawara. You can find this by searching for his name on DBpedia or using a SPARQL query to identify him.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
273,2,train,Give me the child of Edoardo Agnelli (1831-1871).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:birthYear ""1831""^^xsd:gYear .
  ?person dbo:deathYear ""1871""^^xsd:gYear .
  ?person foaf:name ""Edoardo Agnelli""@en .
  ?person dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
456,22,train,"Give me the band of the band, that is a musical artist, of Dean Brody and spouse of Danielle Spencer (Australian actress).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?dean a dbo:MusicalArtist ;
        foaf:name ""Dean Brody"" .
  
  ?dean dbo:spouse ?danielle .

  ?danielle foaf:name ""Danielle Spencer""@en ;
            dbo:musicalBand ?band .
}
```

This query does the following:
- It identifies Dean Brody as a `MusicalArtist`.
- It finds his spouse, Danielle Spencer.
- It checks if Danielle Spencer is associated with any musical band.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
892,8,train,"Give me the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?region a dbo:AdministrativeRegion ;
          dbo:settlement true ;
          dbo:country dbr:Italy .
  
  OPTIONAL { 
    ?party a dbo:PoliticalParty ;
           rdfs:label ""Democratic Party (Italy)""@en .
    
    ?member dbo:memberOfParliament ?party ;
            dbo:administrativeArea ?region .
  }
}
```",1,5,2,1,1,3,3,71,0,0,14,0,0.0,0
926,23,train,Give me the father of the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?grandfather WHERE {
  ?neşerekKadın a dbo:Person ;
                foaf:name ""Neşerek Kadın""@en .
  
  ?neşerekKadın dbo:spouse ?spouse .

  ?spouse dbo:parent ?fatherOfSpouse .
  
  ?fatherOfSpouse dbo:parent ?grandfather .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
507,29,train,"Give me the spouse of Anne V. Coates and professional in Film director, television director and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v3 <http://dbpedia.org/ontology/director> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse ?movie WHERE {
  # Find Anne V. Coates
  ?anne a dbo:Person ;
        foaf:name ""Anne V. Coates""@en .
  
  # Identify her spouse
  ?anne dbo:spouse ?spouse .

  # Ensure the spouse is a film and television director
  ?spouse a dbo:FilmDirector, dbo:TelevisionProducer .

  # Find movies directed by the spouse
  ?movie dbo:director ?spouse ;
         dbo:starring dbr:Beryl_Reid .

}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
274,14,train,Give me the professional in the designer of Tetris Classic and band member of Dizzy Gillespie.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?personLabel WHERE {
  ?person dbo:creator <http://dbpedia.org/resource/Tetris_Classic> .
  ?bandMemberRelation dbo:musicalArtist ?person ;
                      dbo:associatedBand <http://dbpedia.org/resource/Dizzy_Gillespie> .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

This query assumes:
- `dbo:creator` is used for the designer role of Tetris Classic.
- A hypothetical property `dbo:musicalArtist` and `dbo:associatedBand` are used to link a person to Dizzy Gillespie's band. Adjust these properties based on actual DBpedia schema if different.",3,3,4,2,2,2,3,28,0,0,8,0,0.0,0
326,13,train,"Give me the resident of the birthplace, that is a state and British, of the professional in Writer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Writer""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?resident WHERE {
  ?writer a dbo:Writer ;
          dbo:birthPlace ?state .
  
  FILTER (isLiteral(?state) && regex(str(?state), ""State"", ""i""))
  FILTER EXISTS { ?state dbo:country dbr:United_Kingdom . }
  
  ?person dbo:residence ?state .
  ?person a dbo:Person ;
          rdfs:label ?resident .
}
```",3,5,4,3,1,3,2,20,0,0,120,0,0.0,0
459,18,train,Give me the governor of Dana Murphy and person born as the birth name of Kevin Stitt.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorOfDanaMurphy ?personBornAsKevinStitt
WHERE {
  # Find Dana Murphy's governor
  ?danaMurphy a dbo:LieutenantGovernor ;
              dbo:governs ?state .
  ?state dbo:hasGoverningBody ?government .
  ?government dbo:head ?governorOfDanaMurphy .

  # Find the person born as Kevin Stitt
  dbr:Kevin_Stitt dbo:birthName ?personBornAsKevinStitt .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
791,2,train,Give me the father of Emperor Go-Toba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  wd:Q12345 wdt:P22 ?father .
}
```

Note: In this query, `wd:Q12345` should be replaced with the actual DBpedia identifier for Emperor Go-Toba. You can find this identifier by searching for ""Emperor Go-Toba"" in DBpedia or using a SPARQL endpoint to retrieve it.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
129,6,train,Give me the professional in  and associated musical artist of EarthGang.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?associatedArtist WHERE {
  VALUES ?earthGang { dbr:EarthGang }
  
  ?earthGang dbo:occupation ?professional .
  OPTIONAL { 
    ?earthGang dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
507,23,train,Give me the spouse of the person born as the birth name of Anne V. Coates.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Anne V. Coates resource and her birth name
  dbr:Anne_V._Coates dbo:birthName ""Anne Victoria Coates"" .
  
  # Step 2: Find the spouse of Anne V. Coates
  dbr:Anne_V._Coates dbo:spouse ?spouse .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
888,3,train,"Give me the force, that is a societal event and an event, of Serhiy Kotenko.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  VALUES ?serhiyKotenko { dbr:Serhiy_Kotenko }
  
  ?event dbo:associatedWith ?serhiyKotenko .
  ?societalEvent dbo:societalRole ?serhiyKotenko .
  
  OPTIONAL { ?event dbo:force ?force . }
  OPTIONAL { ?societalEvent dbo:force ?force . }
}
```

This query attempts to find any ""force"" associated with events or societal roles linked to Serhiy Kotenko. Note that the exact property `dbo:force` might not exist, and you may need to adjust based on available properties in DBpedia.",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
645,25,train,"Give me the military force of Spanish Civil War and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?leader WHERE {
  # Find military forces involved in the Spanish Civil War
  ?militaryForce dbo:partOf dbr:Spanish_Civil_War .
  
  OPTIONAL {
    # Find an organization or government agency associated with Camilo Menéndez Tolosa
    ?organization dbo:head dbr:Camilo_Menéndez_Tolosa ;
                  a dbo:GovernmentAgency ; # Assuming it's a government agency
                  dbo:leader ?leader .
    
    # Alternatively, if the office is an organization
    OPTIONAL {
      ?organization dbo:head dbr:Camilo_Menéndez_Tolosa ;
                    a dbo:Organization ;
                    dbo:leader ?leader .
    }
  }
}
```

This query does the following:
- Searches for military forces (`?militaryForce`) that were part of the Spanish Civil War.
- Attempts to find an organization or government agency associated with Camilo Menéndez Tolosa and retrieves its leader.

Note: The exact classes and properties might need adjustment based on DBpedia's current schema, as it can evolve over time. This query assumes `dbo:GovernmentAgency` and `dbo:Organization` are relevant classes for the office type.",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
216,4,train,Give me the awardee of Australian Defence Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?recipient dbo:award dbr:Australian_Defence_Medal .
}
```",1,1,2,1,1,2,3,28,5,2,0,0.7142857142857143,1.0,0.8333333333333333
965,38,train,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Prince Louis of Battenberg and his children who are royalty
  ?child1 dbo:spouse|dbo:child dbr:Prince_Louis_of_Battenberg .
  ?child1 a dbo:Monarch .

  # Parent of Prince George of Battenberg who is a noble
  ?parent dbo:child dbr:Prince_George_of_Battenberg .
  ?parent a dbo:Noble .

  # Find the common parent
  FILTER (?parent = ?child1)
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
445,35,train,"Give me the entity in the residence, that is a country, of Anna Sharkey and entity in the award of George H. Cameron.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?annaCountry ?georgeAward
WHERE {
  # Anna Sharkey's residence
  OPTIONAL {
    ?anna a dbo:Person ;
          foaf:name ""Anna Sharkey"" .
    ?anna dbo:residence ?residence .
    ?residence rdf:type dbo:Country ;
               rdfs:label ?annaCountry .
  }

  # George H. Cameron's award
  OPTIONAL {
    ?george a dbo:Person ;
            foaf:name ""George H. Cameron"" .
    ?george dbo:award ?award .
    ?award rdfs:label ?georgeAward .
  }
}
```",4,5,5,2,2,3,3,71,0,0,102,0,0.0,0
433,39,train,Give me the associated musical artist of Bill Evans and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist ?profession
WHERE {
  # Find Bill Evans' associated artist
  dbr:Bill_Evans dbo:associatedBandOrMusicalArtist dbr:Miles_Davis .
  
  # Find the writer of Eric Clapton's album and their profession
  dbr:""Slowhand at 70 – Live at the Royal Albert Hall"" dbo:lyricist ?writer .
  ?writer dbo:profession ?profession .

  # Ensure the professions match
  FILTER(?artist = ""Miles Davis"")
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
865,38,train,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  # Abu Ahmad Abdul Hafiz
  ?abuAHmad a dbo:Person ;
            foaf:name ""Abu Ahmad Abdul Hafiz""@en .

  # Children of Abu Ahmad Abdul Hafiz
  ?child1 dbo:parent ?abuAHmad .
  ?child2 dbo:parent ?abuAHmad .

  # One child is a politician
  ?child1 a dbo:Politician .

  # Both children have the same father
  ?father dbo:spouse ?mother ;
          dbo:child ?child1, ?child2 .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
839,34,train,"Give me the band of Matthias Röhr and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?matthiasBand ?kevinRussellBand WHERE {
  # Find Matthias Röhr and his band
  ?matthias a dbo:MusicArtist ;
            foaf:name ""Matthias Röhr"" .
  OPTIONAL { 
    ?matthias dbo:band ?matthiasBand .
  }

  # Find Kevin Russell (musician) and his band
  ?kevinRussell a dbo:MusicalArtist ;
                foaf:name ""Kevin Russell"" .
  OPTIONAL {
    ?kevinRussell dbo:band ?kevinRussellBand .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
926,18,train,Give me the child of Ahmed III and successor of Mustafa III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?person WHERE {
  ?person dbo:childOf dbr:Ahmed_III ;
          dbo:successorOf dbr:Mustafa_III ;
          dbo:parent dbr:Mahmud_II .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
495,7,train,Give me the child of the father of William I of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find William I of Württemberg
  dbr:William_I_of_W%C3%BCrttemberg dbo:father ?father .
  
  # Find the children of his father
  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
582,39,train,"Give me the player in Kazuaki Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Find Kazuaki Nagasawa's team
  ?nagasawaTeam dbo:member dbr:Kazuaki_Nagasawa .
  
  # Find Hajime Moriyasu's team and its nickname
  ?moriyasuTeam dbo:manager dbr:Hajime_Moriyasu ;
               dbo:nickname ?teamNickname .

  # Find a player who has been in both teams
  ?nagasawaTeam dbo:member ?player .
  ?moriyasuTeam dbo:member ?player .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
791,1,train,Give me the predecessor of Emperor Antoku.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  dbr:Emperor_Antoku dbo:successorOf ?predecessor .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
130,8,train,"Give me the entity in the administration, that is American, of .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://dbpedia.org/property/governor> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:nationality dbr:United_States .
  ?entity dbo:position ?position .
  FILTER EXISTS { ?administration dbo:member ?entity . }
}
```

This query assumes:
- `dbo:nationality` is used to denote nationality.
- `dbr:United_States` represents the American nationality.
- `dbo:position` indicates a role or position within an administration.
- The administration entity should be specified in place of `?administration`.

You may need to adjust the query based on the specific administration you are interested in.",2,3,3,2,1,3,2,20,0,0,26076,0,0.0,0
326,0,train,"Give me the person decedent at Rancho Mirage, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Rancho_Mirage,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Rancho_Mirage .
}
```",1,1,2,1,1,2,2,9,0,5,97,0.0,0.0,0
445,4,train,"Give me the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Anna Sharkey""@en .
  OPTIONAL { ?person dbo:country ?residence . }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
124,35,train,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?commander WHERE {
  # Find wars involving A Field Battery, Royal Australian Artillery
  ?battery dbo:participatedIn ?war .
  FILTER (str(?battery) = ""A_Field_Battery,_Royal_Australian_Artillery"")

  # Find wars involving Herbert Kitchener, 1st Earl Kitchener
  ?kitchener dbo:commanded ?war .
  FILTER (str(?kitchener) = ""Herbert_Kitchener,_1st_Earl_Kitchener"")

  # Get the commander of the war
  ?war dbo:commander ?commander .
}
```

This query does the following:
- Uses `dbo:participatedIn` to find wars involving A Field Battery, Royal Australian Artillery.
- Uses `dbo:commanded` to find wars commanded by Herbert Kitchener.
- Finds common wars between these two entities and retrieves their commanders.",4,8,5,2,2,3,3,71,0,0,9,0,0.0,0
326,5,train,"Give me the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person dbo:award ?award .
  FILTER (strstarts(str(?award), ""Country"") || strstarts(str(?award), ""Award""))
  VALUES ?person { dbr:Adelbert_Cronkhite }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
47,0,train,Give me the office of Suvendu Adhikari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  wd:Q1234567 dbo:positionHeld ?office .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Suvendu Adhikari. You can find this by searching for his name on DBpedia or using a SPARQL query to identify his unique identifier.",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
417,27,train,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Find Alexandrine's royal parents
  ?parent a dbo:Monarch ;
          dbo:spouse|dbo:child dbr:Alexandrine_of_Mecklenburg-Schwerin .

  # Step 2: Find the children of those parents who are royalty
  ?parent dbo:child ?royalChild .
  FILTER EXISTS { ?royalChild a dbo:Monarch } .

  # Step 3: Find the grandchildren (children of the royal child) who are royalty
  ?royalChild dbo:child ?grandchild .
  FILTER EXISTS { ?grandchild a dbo:Monarch }
}
```",3,5,4,3,1,3,3,71,0,0,8,0,0.0,0
216,0,train,Give me the player in Igor Bišćan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  dbr:Igor_Bišćan dbo:playsFor ?team .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
136,6,train,Give me the landmark at elevation of the award of Bret Anthony Johnston.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v0 . <http://dbpedia.org/resource/Bret_Anthony_Johnston> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Step 1: Identify Bret Anthony Johnston
  ?person a dbo:Writer ;
          foaf:name ""Bret Anthony Johnston""@en .

  # Step 2: Find awards associated with him
  ?award dbo:recipient ?person ;
         dbo:elevation ?elevation .

  # Step 3: Find landmark at that elevation
  ?landmark dbo:elevation ?elevation .
}
```

This query assumes:
- Bret Anthony Johnston is identified as a `Writer`.
- Awards have an `elevation` property, which might not be standard but fits the question's context.
- Landmarks are associated with elevations.

Please note that this query is speculative and depends on how DBpedia structures its data. Adjustments may be necessary based on actual schema details.",2,2,3,2,1,2,2,9,0,0,909,0,0.0,0
892,4,train,Give me the profession of Henri Crolla.,SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  wd:Q123456 wdt:P106 ?occupation .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Henri Crolla. You can find this by searching for his name on DBpedia or using a SPARQL endpoint to query for it.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
124,20,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in Mahdist War.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify the Mahdist War as an event
  dbr:Mahdist_War a dbo:Event .

  # Find military forces involved in the Mahdist War
  ?event dbo:militaryConflictOf ?militaryForce .
  
  FILTER(?event = dbr:Mahdist_War)

  OPTIONAL {
    # Check if Frank Rhodes was associated with this event as a commander
    ?person dbo:commanderInMilitaryConflicts ?event ;
            rdfs:label ""Frank Rhodes""@en .
    
    FILTER(CONTAINS(LCASE(?person), ""frank rhodes""))
  }
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
216,5,train,Give me the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?result . },"```sparql
SELECT ?designer WHERE {
  wd:Q1234568 dbo:creator ?designer .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia resource identifier for ""Woolfe: The Red Hood Diaries"" if it is different. You may need to look up this specific identifier in DBpedia or another reliable source.",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
582,22,train,Give me the figure known as the nickname of Japan national football team and reference to Japan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  ?team dbo:nationality dbr:Japan .
  ?team dbo:commonName ?nickname .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
47,22,train,Give me the office of the awardee of Padma Vibhushan and office of Suvendu Adhikari.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?office WHERE {
  # Find individuals who have received the Padma Vibhushan award
  ?person dbo:honoraryAward dbr:Padma_Vibhushan .
  
  OPTIONAL {
    # Find offices held by these individuals
    ?person dbo:holdsOffice ?office .
  }
  
  UNION
  
  # Specifically find Suvendu Adhikari and his office
  {
    ?person rdfs:label ""Suvendu Adhikari""@en .
    OPTIONAL { ?person dbo:holdsOffice ?office . }
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
443,6,train,Give me the birthplace of Ulf Lundell and landmark at elevation of 28.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . }","SELECT ?result WHERE {
  { 
    dbpedia:Ulf_Lundell dbo:birthPlace ?result .
    BIND(""Birthplace of Ulf Lundell"" AS ?type)
  }
  UNION
  {
    ?landmark a dbo:Landmark ;
              dbo:elevationAboveSeaLevel ""28""^^xsd:float .
    BIND(?landmark AS ?result)
    BIND(""Landmark at Elevation 28m"" AS ?type)
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
353,3,train,"Give me the country of Moskovsky City District, Nizhny Novgorod.","SELECT ?result WHERE { <http://dbpedia.org/resource/Moskovsky_City_District,_Nizhny_Novgorod> <http://dbpedia.org/ontology/country> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?district a dbo:CityDistrict .
  ?district rdfs:label ""Moskovsky City District, Nizhny Novgorod""@en .
  ?district dbo:partOf ?city .
  ?city dbo:locatedInCountry ?country .
}
```

This query does the following:
- It looks for an entity that is a `CityDistrict` and has the label ""Moskovsky City District, Nizhny Novgorod"" in English.
- It finds which city this district is part of using the `dbo:partOf` property.
- Finally, it retrieves the country where this city is located using the `dbo:locatedInCountry` property.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
926,27,train,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Beyhan Sultan and her parents
  dbr:Beyhan_Sultan dbo:parent dbr:Mustafa_III .
  
  # Mustafa III's spouse (to find the mother)
  OPTIONAL { 
    dbr:Mustafa_III dbo:spouse ?mother .
  }
  
  # Check if Mustafa III is royalty
  FILTER EXISTS {
    dbr:Mustafa_III a dbo:Monarch .
  }

  # Find children of Mustafa III (royal father)
  OPTIONAL { 
    ?child dbo:parent dbr:Mustafa_III .
  }
}
```

This query assumes that Beyhan Sultan's mother is not royalty, focusing on Mustafa III as the royal parent. It checks if Mustafa III is a monarch and then finds his children.",3,5,4,3,1,3,3,71,0,0,11,0,0.0,0
582,14,train,Give me the figure known as the nickname of Japan national football team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
SELECT ?nickname WHERE {
  ?team dcterms:subject dbc:Japan_national_football_team .
  ?team dbo:nickname ?nickname .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
507,8,train,Give me the profession of Guy Ferland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  wd:Q123456 wdt:P106 ?profession .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Guy Ferland. You can find this by searching for his name on DBpedia or using a SPARQL endpoint to query for it.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
987,16,train,"Who is the actor of the show, that is a film, with Emir Hadžihafizbegović?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find films featuring Emir Hadžihafizbegović
  ?film dbo:starring dbr:Emir_Hadžihafizbegović .
  
  # Check if the film has a TV show adaptation
  OPTIONAL { 
    ?film dbo:adaptationOf ?show .
    
    # Find actors in that show
    ?show dbo:starring ?actor .
  }
}
```",2,3,3,2,1,3,3,71,0,0,54,0,0.0,0
102,9,train,"Give me the player in the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?team a dbo:SportsTeam .
  ?team dbo:member ?player .
  ?player dbo:sport dbr:Soccer .
  ?team rdfs:label ""England women's national football team""@en .
}
```",2,3,3,2,1,3,2,20,0,0,180,0,0.0,0
826,25,train,"Give me the successor of Louis II, Grand Duke of Hesse and predecessor of the parent of Prince Friedrich of Hesse and by Rhine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?predecessor
WHERE {
  # Find successor of Louis II, Grand Duke of Hesse
  OPTIONAL {
    ?louis2 dbo:succeededBy ?successor .
    FILTER(STRSTARTS(STR(?louis2), ""http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse""))
  }

  # Find parent of Prince Friedrich of Hesse and by Rhine
  OPTIONAL {
    ?friedrich dbo:parent ?parent .
    FILTER(STRSTARTS(STR(?friedrich), ""http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine""))
  }

  # Find predecessor of Louis IV, Grand Duke of Hesse
  OPTIONAL {
    ?louis4 dbo:succeededBy ?successor .
    ?predecessor dbo:succeededBy ?louis4 .
    FILTER(STRSTARTS(STR(?louis4), ""http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse""))
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
527,13,train,"Give me the actor of the movie, that is a work and English and a television show, with the professional in Actor.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor
WHERE {
  ?movie a dbo:Film ;
         dbo:language ""English"" ;
         rdf:type dbo:TelevisionShow .
  
  ?movie dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .
}
```

This query does the following:
- Selects movies that are both films and television shows (`rdf:type dbo:Film` and `rdf:type dbo:TelevisionShow`).
- Filters these movies to those with English as their language (`dbo:language ""English""`).
- Retrieves actors who starred in these movies (`dbo:starring ?actor`) and ensures they have the type of Actor (`rdf:type dbo:Actor`).",3,6,4,3,1,3,2,20,0,0,1472,0,0.0,0
216,10,train,Give me the player in Igor Bišćan and team of Ognjen Vukojević.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bišćanTeam ?vukojevićTeam WHERE {
  # Find Igor Bišćan's team
  OPTIONAL {
    ?bišćan dbr:Igor_Bišćan .
    ?bišćan dbo:team ?bišćanTeam .
  }
  
  # Find Ognjen Vukojević's team
  OPTIONAL {
    ?vukojević dbr:Ognjen_Vukojević .
    ?vukojević dbo:team ?vukojevićTeam .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
136,0,train,Give me the region coded as 03834.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ""03834"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?region dbo:postalCode ""03834"" .
}
```",1,1,2,1,1,2,2,9,0,0,9,0,0.0,0
465,1,train,Give me the spouse of Archduchess Barbara of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . },"```sparql
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Archduchess Barbara of Austria. You can find this identifier by searching for her on DBpedia or using a SPARQL query to retrieve it.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
791,15,train,"Give me the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse
WHERE {
  ?emperor dbo:name ""Emperor Takakura""@en .
  ?emperor dbo:spouse ?spouse .
  ?spouse rdf:type ?type .
  FILTER EXISTS { ?type rdfs:subClassOf* <http://dbpedia.org/ontology/Royalty> }
}
```

This query does the following:
- It looks for an entity with the name ""Emperor Takakura"".
- It retrieves the spouse of this individual.
- It checks if the spouse is a subclass of `Royalty`.",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
926,9,train,Give me the successor of Mustafa III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  ?mustafaIII dbo:succeededBy ?successor .
  
  VALUES ?mustafaIII { dbr:Mustafa_III }
  
  ?mahmudII dbo:father ?successor .
  
  VALUES ?mahmudII { dbr:Mahmud_II }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
645,1,train,Give me the military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT ?militaryForce WHERE {
  ?event dbo:wikiPageID ""Spanish_Civil_War"" .
  ?event dbo:militaryConflictOf ?militaryForce .
}
```",1,1,2,1,1,3,3,71,0,0,514,0,0.0,0
353,1,train,Give me the entity in Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Russia .
}
```",1,1,2,1,1,2,2,9,29927,0,0,1.0,1.0,1.0
83,5,train,Give me the player in the person born on 1995-07-07.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1995-07-07""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/team> ?result . }","```sparql
SELECT ?player WHERE {
  ?person dbo:birthDate ""1995-07-07""^^xsd:date .
  ?person foaf:name ?name .
  ?person dbo:occupation dbr:Association_football_player .
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(?name, "" "", ""_""))) AS ?player)
}
```",2,2,3,2,1,2,2,9,0,0,133,0,0.0,0
508,9,train,"Give me the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Hayao Tada resource
  dbr:Hayao_Tada a dbo:MilitaryPerson ;
                 dbo:militaryConflict ?conflict .

  # Find commanders of the conflict
  ?conflict dbo:commander ?commander .

  # Ensure the commander is also a politician
  ?commander a dbo:Politician .
}
```

This query does the following:
- Identifies Hayao Tada as a military person involved in certain conflicts.
- Retrieves those conflicts and their commanders.
- Filters to ensure that the commander is also classified as a politician.",2,6,3,2,1,3,2,20,0,0,28,0,0.0,0
839,12,train,Give me the band of Peter Schorowsky and band of Matthias Röhr.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . },"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?bandName WHERE {
  VALUES ?person { 
    <http://dbpedia.org/resource/Peter_Schorowsky> 
    <http://dbpedia.org/resource/Matthias_Röhr>
  }
  
  OPTIONAL {
    ?person dbp:band ?band .
    ?band rdfs:label ?bandName .
    FILTER(LANG(?bandName) = 'en')
  }
}
ORDER BY ?person
```",2,2,3,1,2,3,3,71,0,2,1,0.0,0.0,0
573,7,train,Give me the work of John Quincy Adams.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . },"```sparql
SELECT ?work WHERE {
  wd:Q11696 dbo:work ?work .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
5,14,train,"Give me the entity in the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  # Find Rubén Colón Tarrats and his associated band
  ?artist a dbo:MusicalArtist ;
          foaf:name ""Rubén Colón Tarrats"" .
  
  OPTIONAL { 
    ?artist dbo:band dbr:Banda_Sin_nombre ; # Replace with the actual band resource if known
            dbo:award ?award .
  }
}
```

This query assumes that Rubén Colón Tarrats is associated with a specific band, which you might need to replace with the correct DBpedia resource identifier for his band. The `OPTIONAL` clause ensures that even if there are no awards, the artist and band information will still be retrieved.",3,4,4,3,1,3,2,20,0,0,20990,0,0.0,0
495,8,train,Give me the father of the child of Princess Charlotte of Saxe-Hildburghausen.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  dbr:Princess_Charlotte_of_Saxe-Hildburghausen dbo:child ?child .
  
  ?child dbo:father ?father .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
839,38,train,"Give me the band of the member of Böhse Onkelz and band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?boBand ?chBand
WHERE {
  # Find members of Böhse Onkelz and their bands
  ?member dbo:bandMemberOf dbr:Böhse_Onkelz .
  ?member dbo:bandMemberOf ?boBand .

  # Find Charlie Huhn as a musical artist and his band(s)
  dbr:Charlie_Huhn dbo:musicalArtist dbr:Charlie_Huhn ;
                   dbo:bandMemberOf ?chBand .

}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
773,18,train,Give me the parent of Carloman of Bavaria and spouse of Louis the German and parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Carloman of Bavaria's parent
  OPTIONAL { 
    dbr:C._of_Bavaria dbo:parent dbr:?parent1 .
  }
  
  # Louis the German's spouse
  OPTIONAL { 
    dbr:Louis_the_German dbo:spouse dbr:?spouse .
  }

  # Charles the Fat's parent
  OPTIONAL { 
    dbr:Charles_the_Fat dbo:parent dbr:?parent2 .
  }

  # Find common individual in all relationships
  FILTER (?parent1 = ?spouse && ?parent1 = ?parent2)
  
  BIND(?parent1 AS ?individual)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
445,17,train,Give me the award of the commander in Battle of Saint-Mihiel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?award WHERE {
  # Find the battle resource
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of Saint-Mihiel""@en .

  # Identify commanders involved in this battle
  ?commander dbo:commanded ?battle .

  OPTIONAL {
    # Check if they received any awards or titles
    ?commander dbo:award ?award .
  }
}
```

This query does the following:
- It identifies the resource for the ""Battle of Saint-Mihiel.""
- It finds individuals who commanded in this battle.
- It optionally checks if these commanders have any associated awards.",2,2,3,2,1,3,3,71,0,0,26,0,0.0,0
839,1,train,Give me the band of Peter Schorowsky.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Peter Schorowsky""@en .
  ?person dbo:memberOfBand ?band .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
445,32,train,"Give me the entity in the residence, that is a country, of Anna Sharkey and death place of the awardee of Royal Astronomical Society.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Find Anna Sharkey's residence country
  ?anna a dbo:Person ;
        foaf:name ""Anna Sharkey"" .
  OPTIONAL { ?anna dbo:residenceLocation ?residence . }
  OPTIONAL { ?residence dbo:country ?residenceCountry . }

  # Find the death place of an awardee of the Royal Astronomical Society
  ?awardee a dbo:Person ;
           dbo:honoraryTitle dbr:Royal_Astronomical_Society .
  OPTIONAL { ?awardee dbo:deathPlace ?deathPlace . }
  OPTIONAL { ?deathPlace dbo:country ?deathCountry . }

  # Find the common country between residence and death place
  FILTER (?residenceCountry = ?deathCountry)
  BIND(?residenceCountry AS ?country)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
935,6,train,Give me the death place of Abdul Raziq Bugti and headquarter of Provincial Assembly of Balochistan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdul_Raziq_Bugti> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Provincial_Assembly_of_Balochistan> <http://dbpedia.org/ontology/location> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?assemblyHeadquarters
WHERE {
  # Find Abdul Raziq Bugti's death place
  OPTIONAL {
    dbr:Abdul_Razzaq_Bugti dbo:placeOfBirth ?birthPlace .
    dbr:Abdul_Razzaq_Bugti dbo:deathPlace ?deathPlace .
  }
  
  # Find the headquarters of the Provincial Assembly of Balochistan
  OPTIONAL {
    dbr:Provincial_Assembly_of_Balochistan dbo:headquarter ?assemblyHeadquarters .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
166,2,train,"Give me the force, that is an event and a societal event and a military conflict, of Manuel Hedilla.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?event dbo:agent dbr:Manuel_Hedilla .
  ?event rdf:type ?eventType .
  
  FILTER (
    (?eventType = dbo:SocietalEvent || ?eventType = dbo:MilitaryConflict)
  )
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
36,11,train,Give me the person born as the birth name of Ayo Makun.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName WHERE {
  # Find Ayo Makun's birth name
  VALUES (?ayoMakun) { dbr:Ayo_Makun }
  
  ?ayoMakun dbo:birthName ?birthName .
  
  # Find other individuals with the same birth name
  ?person a dbo:Person ;
          dbo:birthName ?birthName .
  
  FILTER(?person != ?ayoMakun)
}
ORDER BY ?person",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
465,29,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of Renée of France.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  ?ercole dbo:succeededBy ?alfonso .
  ?ercole rdfs:label ""Ercole II d'Este""@en .
  
  ?alfonso dbo:spouse ?annaCaterina .
  ?annaCaterina dbp:father ?ferdinandI .
  ?ferdinandI rdfs:label ""Ferdinand I, Holy Roman Emperor""@en .

  ?renée dbo:succeededBy ?annaCaterina .
  ?renée rdfs:label ""Renée of France""@en .
  
  ?successor dbo:succeededBy ?alfonso .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
791,9,train,Give me the spouse of Taira no Tokuko and predecessor of Emperor Antoku.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Taira no Tokuko's spouse
  dbr:Taira_no_Tokuko dbo:spouse ?spouse .
  
  # Predecessor of Emperor Antoku
  ?predecessor dbo:succession ?antokuSuccession .
  dbr:Emperor_Antoku dbo:predecessor ?predecessor .

  FILTER (?spouse = ?predecessor)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
582,37,train,"Give me the figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  ?child dbo:parent ?father .
  ?father foaf:name ?name ;
          dbo:sport ?sport ;
          dbo:occupation ?occupation .
  
  FILTER(?sport = ""Soccer"" || ?sport = ""Football"")
  FILTER(?occupation IN (""Athlete"", ""Sports Manager""))
  
  ?nagasawa dbo:child ?child .
  ?nagasawa foaf:name ""Kazuaki Nagasawa""@en .

  OPTIONAL {
    ?father foaf:nick ?nickname .
    FILTER(STRSTARTS(LCASE(?nickname), ""10-19""))
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
41,0,train,Give me the party of Mark Durkan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  wd:Q123456 wdt:P102 ?party .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Mark Durkan. You can find this by searching for his name on DBpedia or using a SPARQL query to identify him.",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
456,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?professional dbo:fieldOfExpertise dbr:YourFieldOfInterest .
  OPTIONAL { ?professional dbo:location dbr:YourLocation . }
}
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
839,15,train,"Give me the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthDate WHERE {
  # Assuming Kevin Russell is the lead singer of The Black Keys
  dbr:The_Black_Keys dbo:leadSinger dbr:Kevin_Russell .
  
  # Find the person who is a musical artist and has the same persona as Kevin Russell
  dbr:Kevin_Russell foaf:name ""Kevin Russell"" .
  ?person foaf:name ""Kevin Russell"" .
  ?person dbo:birthDate ?birthDate .

  # Ensure that the person is a musical artist
  ?person rdf:type dbo:MusicalArtist .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
329,11,train,"Give me the entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Find Robert Bates (loyalist)
  ?person a dbo:Person ;
          foaf:name ""Robert Bates"" ;
          dbo:nationality dbr:Loyalist .

  # Get his birthplace
  ?person dbo:birthPlace ?birthPlace .

  # Filter entities that are both an organization and a country in the context of the birthplace
  ?entity a dbo:Country, dbo:Organization ;
          dbo:location ?birthPlace .
}
```

This query assumes:
- Robert Bates is identified with the nationality ""Loyalist"".
- The `foaf:name` property is used to specify his name.
- The `dbo:birthPlace` property provides information about his birthplace.
- We are looking for entities that are both a country and an organization located at this birthplace.",2,4,3,2,1,2,3,28,0,0,846,0,0.0,0
987,30,train,"Give me the birth place of Moamer Kasumović and birth place of Dado Polumenta and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?kadhafiBirthplace ?polumentaBirthplace ?country
WHERE {
  # Birthplace of Moamer Kadhafi
  dbr:Mohamed_Gaddafi dbo:birthPlace ?kadhafiBirthplace .

  # Birthplace of Dado Polumenta
  dbr:Dado_Polumenta dbo:birthPlace ?polumentaBirthplace .

  # Countries in the Central European Time region
  {
    SELECT DISTINCT ?country WHERE {
      ?country a dbo:Country .
      ?country dbp:timeZone ""Central European Time"" .
    }
  } LIMIT 1
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
865,25,train,Give me the father of AK Abdul Momen and father of the child of Abu Ahmad Abdul Hafiz.,SELECT ?result WHERE { <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?fatherAKAbdulMomen ?fatherChildOfAbuAhmadAbdulHafiz
WHERE {
  # Find the father of AK Abdul Momen
  ?akAbdulMomen a dbo:Person ;
                foaf:name ""AK Abdul Momen""@en .
  ?akAbdulMomen dbo:father ?fatherAKAbdulMomen .

  # Find the child of Abu Ahmad Abdul Hafiz and then find that child's father
  ?abuAhmadAbdulHafiz a dbo:Person ;
                      foaf:name ""Abu Ahmad Abdul Hafiz""@en .
  ?childOfAbuAhmadAbdulHafiz dbo:father ?abuAhmadAbdulHafiz ;
                             dbo:father ?fatherChildOfAbuAhmadAbdulHafiz .
}
```

This query does the following:
- It selects two variables, `?fatherAKAbdulMomen` and `?fatherChildOfAbuAhmadAbdulHafiz`.
- It identifies AK Abdul Momen as a person with the name ""AK Abdul Momen"" and retrieves his father.
- It identifies Abu Ahmad Abdul Hafiz as a person with the name ""Abu Ahmad Abdul Hafiz"", finds one of his children, and then retrieves that child's father.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
582,21,train,Give me the figure known as --10-19 and reference to the residence of Hirotaka Sugawara.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?figureDescription ?residenceLocation
WHERE {
  # Find the figure known as ""10-19""
  OPTIONAL {
    ?figure dbo:wikiPageRedirects dbr:10-19_system .
    ?figure dbo:description ?figureDescription .
  }

  # Find Hirotaka Sugawara's residence
  ?person a dbo:Person ;
          foaf:name ""Hirotaka Sugawara""@en ;
          dbo:residenceLocation ?residence .

  BIND(?residence AS ?residenceLocation)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
382,5,train,Give me the award of Harry Combes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person dbo:name ""Harry Combes""@en.
  OPTIONAL { ?person dbo:award ?award. }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
645,31,train,Give me the commander in the force of the commander in Siege of Madrid and military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Find entities related to the Siege of Madrid
  ?siege dbo:partOf dbr:Spanish_Civil_War .
  ?siege rdfs:label ""Siege of Madrid""@en .

  # Find military forces involved in the siege
  ?force dbo:involvedIn ?siege .
  
  # Find commanders of these military forces
  ?commander dbo:commanded ?force .
  
  # Ensure we get relevant labels for clarity
  ?commander rdfs:label ?commanderLabel .
  FILTER(LANG(?commanderLabel) = ""en"")
  
  ?force rdfs:label ?forceLabel .
  FILTER(LANG(?forceLabel) = ""en"")

  # Return the commander and military force involved
  BIND(CONCAT(""Commander: "", STR(?commander), ""; Military Force: "", STR(?force)) AS ?result)
}
ORDER BY ?commander
```",4,4,5,3,2,3,3,71,0,0,53,0,0.0,0
465,2,train,Give me the successor of Renée of France.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  dbr:Renée_of_France dbo:predecessorOf ?successor .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
236,2,train,"Give me the person decedent, that is a politician and an office holder, at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolderOf dbr:Quincy,_Massachusetts .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
LIMIT 10",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
839,0,train,Give me the band of Kevin Russell (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Kevin Russell""@en .
  OPTIONAL { ?person dbo:memberOf ?band . }
}
```

This query searches for entities that are classified as musicians with the name ""Kevin Russell"" and retrieves any bands they might be associated with.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
365,3,train,Give me the birth name of Symon Petliura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:Q12345 foaf:name ""Symon Petliura""@en .
  OPTIONAL { wd:Q12345 schema:birthName ?birthName . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
465,31,train,"Give me the spouse of Archduchess Barbara of Austria and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v0 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Ercole II d'Este and his parent
  ?ercole2 dbo:parent ?parent .
  FILTER (str(?ercole2) = ""Ercole II d'Este"")

  # Step 2: Find the child of that parent
  ?child dbo:parent ?parent .

  # Step 3: Determine the successor of this child
  ?successor dbp:succeededBy ?child .

  # Step 4: Find the spouse of Archduchess Barbara of Austria
  ?barbara dbo:spouse ?spouse .
  FILTER (str(?barbara) = ""Barbara of Austria"")
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
124,11,train,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find wars involving A Field Battery, Royal Australian Artillery
  ?war dbo:participatingUnit dbr:A_Field_Battery,_Royal_Australian_Artillery .
  
  # Ensure the war is both a societal event and a military conflict
  ?war rdf:type dbo:SocietalEvent ;
       rdf:type dbo:MilitaryConflict .

  # Find commanders of these wars
  ?commander dbo:commanded ?unit .
  ?unit dbo:participatedIn ?war .
  
  # Filter to ensure the commander is related to a military unit
  ?unit rdf:type dbo:MilitaryUnit .
}
```",2,4,3,2,1,3,3,71,0,0,109,0,0.0,0
839,26,train,"Give me the band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Peter Schorowsky""@en .
  
  ?group dbo:member ?person ;
         a dbo:Band, dbo:MusicalGroup .

  ?band owl:sameAs ?group .
}
```

This query does the following:
- It looks for a person named Peter Schorowsky who is classified as a `MusicalArtist`.
- It identifies groups (`?group`) that have this person as a member and are both a `Band` and a `MusicalGroup`.
- It then finds any band (`?band`) that is the same as this group.",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
102,14,train,"Give me the native of the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/residence> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  ?athlete dbo:residence ?settlement .
  ?athlete a dbo:Athlete .
  ?athlete dbo:birthPlace dbr:Dewsbury .

  ?settlement dbo:country dbr:England .
  ?settlement a dbo:Settlement .

  ?settlement dbo:nativeName ?native .
}
```

This query does the following:
- Selects athletes (`?athlete`) who have Dewsbury as their birthplace.
- Filters for those whose residence is in England and is classified as a settlement.
- Retrieves the native name or language of that settlement.",3,6,4,3,1,3,2,20,0,0,100,0,0.0,0
976,33,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of Mustafa Şentop.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayorOffice WHERE {
  # Find the reference organization and political party related to Millet İttifakı
  ?reference a dbo:Organization ;
             dbo:country dbr:Türkiye ;
             dbo:politicalParty dbr:Millet_İttifakı .

  # Identify the mayor who is Turkish, a politician, and associated with the reference
  ?mayor a dbo:Politician ;
         dbo:nationality dbr:Türkiye ;
         dbo:officeHolder ?reference ;
         dbo:positionTitle ?mayorOffice .

  # Ensure Mustafa Şentop's office is considered
  OPTIONAL {
    ?mustafaOffice a dbo:PublicOffice ;
                   dbo:incumbent dbr:Mustafa_Şentop .
  }
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
453,0,train,Give me the religion of Newfoundland Colony.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newfoundland_Colony> <http://dbpedia.org/ontology/religion> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?religion WHERE {
  ?colony rdf:type dbo:Colony .
  ?colony rdfs:label ""Newfoundland Colony""@en .
  OPTIONAL { ?colony dbo:hasReligiousAffiliation ?religion . }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
933,31,train,"Give me the reference to Alan Warner and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  ?band a dbo:Band .
  ?band dbo:name ""The Ramones"" .
  
  ?member dbo:associatedBand ?band ;
          foaf:name ""Alan Warner""@en .

  OPTIONAL { 
    ?artist dbo:alias ?reference .
    ?artist foaf:name ""Alan Warner""@en .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
326,6,train,Give me the person decedent at France and resident of Berkshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Berkshire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:deathPlace dbr:France .
  ?person dbo:residence dbr:Berkshire .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
200,3,train,Give me the band of Revenge (Canadian band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Revenge_(Canadian_band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?band dbo:genre dbr:Canadian_music .
  ?band rdfs:label ""Revenge""@en .
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
274,3,train,"Who is the person born, that is a musical artist, as John Birks Gillespie?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?fullName ?artistName WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""John Birks Gillespie""@en .
  OPTIONAL { ?person foaf:name ?artistName . }
  ?person foaf:name ?fullName .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
892,13,train,Give me the landmark at elevation of the award of Anna Ishii.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Step 1: Identify Anna Ishii and her award
  ?person a dbo:Person ;
          foaf:name ""Anna Ishii""@en .
  
  ?award dbo:recipient ?person ;
         dbo:elevation ?elevation .

  # Step 2: Find the landmark associated with that elevation
  ?landmark dbo:elevation ?elevation .
}
```",2,2,3,2,1,3,3,71,0,0,258,0,0.0,0
166,3,train,Who is the military force of Spanish Civil War?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?participant ?name WHERE {
  VALUES ?conflict { dbr:Spanish_Civil_War }
  
  ?participant dbo:participatedIn ?conflict .
  OPTIONAL { ?participant rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
```",1,1,2,1,1,3,2,20,0,0,514,0,0.0,0
456,32,train,Give me the professional in the alter ego of The Shadow and spouse of the actor of Pacific Drive.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?profession WHERE {
  # Find the actor of Pacific Drive
  ?actor dbo:title ""Pacific Drive""@en .
  
  # Get the spouse of this actor
  ?actor dbo:spouse ?spouse .

  # Ensure the spouse is Lamont Cranston's spouse (The Shadow's alter ego)
  ?spouse dbo:alias ""Lamont Cranston""@en .

  # Get the profession of this spouse
  ?spouse dbo:occupation ?profession .
}
```

This query assumes:
- The actor from ""Pacific Drive"" has a spouse who is also Lamont Cranston's spouse.
- DBpedia contains relevant data about these individuals and their relationships.",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
508,1,train,Give me the birthplace of Ma Bufang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ma_Bufang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Ma Bufang. You can find this by searching for Ma Bufang on DBpedia or using a SPARQL endpoint to query for his identifier.",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
98,18,train,"Give me the entity in the region, that is a country, of Philippine Standard Time and birth place of Paolo Ballesteros.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  # Find countries in the region of Philippine Standard Time
  ?country dbo:timeZone dbr:Philippine_Standard_Time .
  
  # Ensure the entity is a country
  ?country rdf:type dbo:Country .

  # Find Paolo Ballesteros and his birthplace
  dbr:Paolo_Ballesteros dbp:birthPlace ?birthPlace .

  # Match the birthplace with the country found in the first step
  ?birthPlace dbo:locatedIn ?country .
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
573,22,train,"Give me the person decedent at Massachusetts and parent of the author, that is a politician and an office holder, of Exchequer Standards.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Assuming John of Exeter is the author
  dbr:John_of_Exeter dbo:authorOf dbr:Exchequer_Standards .

  # Find parent of John of Exeter
  dbr:John_of_Exeter dbp:parent ?parent .

  # Ensure the parent died in Massachusetts
  ?parent dbo:deathPlace dbr:Massachusetts .

  # Check if the person is a politician and office holder
  ?parent a dbo:Politician ;
          dbo:officeHolderOf ?office .
}
```

This query assumes:
- ""John of Exeter"" is the author of ""Exchequer Standards.""
- The parent's death place can be linked to Massachusetts.
- The parent is classified as a politician and held an office.

Please adjust the resource identifiers (`dbr:John_of_Exeter`, `dbr:Exchequer_Standards`, etc.) based on actual DBpedia entries.",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
976,24,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of Naci Bostancı.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person a dbo:Politician ;
          dbo:nationality dbr:Turkey ;
          dbo:partyAffiliation dbr:Nation_Alliance_(Turkey) .
  
  ?person rdfs:label ""Naci Bostancı""@en .

  OPTIONAL { ?person dbo:office ?office . }
}
```

This query does the following:
- Selects individuals who are politicians (`dbo:Politician`).
- Filters those with Turkish nationality (`dbo:nationality dbr:Turkey`).
- Ensures they are affiliated with the Nation Alliance (Turkey) (`dbo:partyAffiliation dbr:Nation_Alliance_(Turkey)`).
- Matches the label ""Naci Bostancı"" to identify the correct person.
- Retrieves any office or position held by this individual.",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
326,2,train,Who is the professional in Writer?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Writer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?writer ?name WHERE {
  ?writer a dbo:Writer .
  OPTIONAL { ?writer foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,2,20,1,14,6465,0.06666666666666667,0.0001546551190844417,0.0003085943527233452
274,13,train,"Give me the professional in  and band member of the person born, that is a musical artist, as John Birks Gillespie.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalRole ?bandMember 
WHERE {
  # Identify Dizzy Gillespie by his birth date and confirm he is a musical artist
  dbr:Dizzy_Gillespie dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1917 && MONTH(?birthDate) = 10 && DAY(?birthDate) = 21)
  
  # Ensure he is classified as a musical artist
  dbr:Dizzy_Gillespie a dbo:MusicalArtist .

  # Retrieve his professional roles
  OPTIONAL { 
    ?professionalRole dbp:person dbr:Dizzy_Gillespie .
    ?professionalRole rdfs:label ?roleLabel .
    FILTER (lang(?roleLabel) = 'en')
  }

  # Retrieve band memberships
  OPTIONAL {
    ?bandMember dbo:member dbr:Dizzy_Gillespie .
    ?bandMember rdfs:label ?bandLabel .
    FILTER (lang(?bandLabel) = 'en')
  }
}
```",3,4,4,2,2,2,3,28,0,0,8,0,0.0,0
826,33,train,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Louis I and his spouse
  ?louis1 a dbo:Monarch ;
          dbo:spouse ?annaMagdalenaAppel .
  
  # Child of the spouse who is royalty
  ?child dbo:parent ?annaMagdalenaAppel ;
         a dbo:RoyalFamilyMember .

  # Successor of that child
  ?successor dbo:predecessor ?child .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
933,8,train,"Give me the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?musician rdf:type dbo:MusicArtist .
  ?musician foaf:name ""Alan Warner"" .
  ?musician dbo:band ?band .
  ?band rdf:type/(dbo:Band|dbo:Organization) .
}
```",1,4,2,1,1,3,3,71,0,0,2,0,0.0,0
839,14,train,"Give me the band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:birthName ""Charlie Huhn""@en .
  ?person dbo:musicalArtist ?artist .
  ?artist dbo:associatedBand ?band .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
507,6,train,"Give me the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?movie a dbo:Film .
  ?movie dbo:starring dbr:Beryl_Reid .
}
```",1,3,2,1,1,3,3,71,9,2,0,0.8181818181818182,1.0,0.9
170,18,train,Give me the domain of the profession of John Scholey and birth place of Era Ziganshina.,SELECT ?result WHERE { <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?professionDomain ?birthPlace
WHERE {
  # Find John Scholey's profession and its domain
  ?johnScholey dbo:occupation ?profession .
  ?profession rdfs:domain ?professionDomain .

  # Find Era Ziganshina's birthplace
  ?eraZiganshina dbo:birthPlace ?birthPlace .

  # Bind the specific individuals to their DBpedia resources
  VALUES ?johnScholey { <http://dbpedia.org/resource/John_Scholey> }
  VALUES ?eraZiganshina { <http://dbpedia.org/resource/Era_Ziganshina> }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
933,33,train,Give me the reference to the birth name of the professional in Musician and band of Mike Elliott (saxophonist).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Mike Elliott"" ;
          dbo:saxophonist true .
  OPTIONAL { ?person rdfs:label ?label . FILTER (lang(?label) = 'en') }
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
453,6,train,"Give me the religion of the author, that is a cardinal and a cleric, of Apologia Pro Vita Sua.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>. <http://dbpedia.org/resource/Apologia_Pro_Vita_Sua> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cardinal>. ?v0 <http://dbpedia.org/ontology/religion> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?religion WHERE {
  ?person a dbo:Writer ;
          dbo:work ?work .
  
  ?work rdfs:label ""Apologia Pro Vita Sua""@en .

  ?person dbo:title ""Cardinal""@en ;
          dbo:occupation dbr:Clergyman .

  OPTIONAL { ?person dbo:religion ?religion . }
  
  FILTER (lang(?work) = 'en')
}
```",2,4,3,2,1,2,2,9,0,0,2,0,0.0,0
417,16,train,"Who is the father of the leader, that is a royalty, of Colony of Greenland?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?father WHERE {
  ?leader a dbo:Monarch ;
          dbo:country dbr:Greenland .
  
  OPTIONAL { ?leader dbo:royalTitle ?title . }
  
  ?leader dbo:parent ?father .

  FILTER EXISTS { ?leader dbo:royalTitle ?title } # Ensures the leader is royalty
}",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
433,15,train,"Give me the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:MusicalArtist .
  ?person a dbo:Artist .
  ?person dbo:birthDate ?birthDate .
  FILTER(CONTAINS(LCASE(?person), ""paul chambers""))
}
ORDER BY ?birthDate
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
41,10,train,Give me the party of the person born as David Declan Costello.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person a dbo:Person ;
          foaf:name ""David Declan Costello""@en .
  OPTIONAL { ?person dbo:politicalParty ?party . }
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
445,0,train,Give me the entity in England.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:England .
}
```",1,1,2,1,1,3,3,71,16,10834,3530,0.0014746543778801843,0.0045121263395375075,0.0022228396776882466
129,11,train,Give me the associated musical artist of the person born as Tahj Malik Chandler.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . }","```sparql
SELECT ?artist WHERE {
  wd:Q198964 wdt:P31/wdt:P279* wd:Q5; # Tahj Malik Chandler is a human
  wdt:P106 wd:Q838939. # Tahj Malik Chandler has the occupation of musician (singer)
  
  OPTIONAL { 
    ?artist wdt:P175 wd:Q198964. # The artist associated with Tahj Malik Chandler as a member
  }
}
```",2,2,3,2,1,2,3,28,0,0,8,0,0.0,0
281,8,train,"Give me the commander in the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find Roy Boehm
  ?person a dbo:Person ;
          foaf:name ""Roy Boehm""@en .
  
  # Find wars or military conflicts involving Roy Boehm
  ?event dbo:participant ?person ;
         a dbo:MilitaryConflict .

  # Get the commander of these events
  ?event dbo:commander ?commander .
}
```

This query does the following:
- It identifies `Roy Boehm` as a person.
- It finds military conflicts (`dbo:MilitaryConflict`) in which he participated.
- It retrieves the commanders (`dbo:commander`) of those conflicts.",2,4,3,2,1,2,3,28,0,0,171,0,0.0,0
508,4,train,"Give me the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?war a dbo:MilitaryConflict .
  ?war a dbo:SocietalEvent .
  ?war dbo:agent dbr:Hu_Yukun .
}
```",1,3,2,1,1,3,2,20,0,0,4,0,0.0,0
976,9,train,Give me the office of Mustafa Şentop and office of Meral Akşener.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeName WHERE {
  VALUES ?person { 
    dbr:Mustafa_Şentop 
    dbr:Meral_Akşener
  }
  
  ?person dbo:positionHeld ?office .
  ?office rdfs:label ?officeName .
  FILTER (lang(?officeName) = 'en')
}
ORDER BY ?person",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
826,38,train,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Find Prince Friedrich of Hesse and by Rhine's parent
  ?friedrich a dbo:Person ;
             foaf:name ""Prince Friedrich of Hesse and by Rhine""@en .
  
  ?parent dbo:child ?friedrich .

  # Step 2: Find the predecessor of this parent
  ?predecessor dbo:succeededBy ?parent .

  # Step 3: Find Louis I, Grand Duke of Hesse's royal child
  ?louis a dbo:Person ;
         foaf:name ""Louis I, Grand Duke of Hesse""@en .
  
  ?child dbo:child ?louis ;
         rdf:type dbo:Monarch .

  # Step 4: Find the successor of this royal child
  FILTER(?predecessor = ?successor)

  ?successor dbo:succeededBy ?child .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
459,11,train,Give me the person born as the birth name of Kevin Stitt.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person dbo:birthName ""Kevin Stitt""@en .
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
495,0,train,Give me the child of Frederick I of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_I_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?parent dbo:spouse ?spouse .
  FILTER(?parent = dbr:Friedrich_I_of_Württemberg || ?spouse = dbr:Friedrich_I_of_Württemberg) .
  ?parent dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
130,13,train,"Give me the figure known as the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v1 <http://dbpedia.org/ontology/director> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?film WHERE {
  ?person dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Madison,_Alabama .
  
  ?person dbo:occupation dbr:Coach ;
          dbo:occupation dbr:College_coach .

  ?organisation dbo:coach ?person ;
                a dbo:Soccer_Club ;
                dbo:film ?film .
}
```",3,7,4,3,1,3,2,20,0,0,3,0,0.0,0
124,15,train,"Give me the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v1 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Identify A Battery, Royal Australian Artillery
  dbr:A_Battery,_Royal_Australian_Artillery 
    a dbo:MilitaryUnit ;
    dbo:nationality dbr:Australia .

  # Find wars that involve this military unit
  ?war a dbo:MilitaryConflict ;
       dbo:participatingMilitaryUnit dbr:A_Battery,_Royal_Australian_Artillery .
  
  # Ensure the war is also considered a societal event
  ?war a dbo:SocietalEvent .
}
```

This query does the following:
- Identifies ""A Battery, Royal Australian Artillery"" as an entity with nationality Australia.
- Searches for wars (`dbo:MilitaryConflict`) that this unit participated in.
- Ensures these wars are also classified as societal events (`dbo:SocietalEvent`).",2,7,3,2,1,3,3,71,0,0,6,0,0.0,0
166,8,train,"Give me the entity in the territory administered, that is a country, from Madrid.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:Madrid dbo:administrativeTerritory dbr:?territory .
  ?territory a dbo:Country .
  BIND(?territory AS ?country)
}
```

This query does the following:
- It uses the `dbo:administrativeTerritory` property to find territories associated with Madrid.
- It filters these territories to those that are instances of `dbo:Country`.
- It binds the resulting country entities to the variable `?country`.",2,3,3,2,1,3,2,20,0,0,12023,0,0.0,0
826,35,train,Give me the spouse of the child of Johann Heinrich Appel and predecessor of the parent of Prince Friedrich of Hesse and by Rhine.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find Johann Heinrich Appel's children
  ?child dbo:parent dbr:Johann_Heinrich_Appel .
  
  # Get the spouse of that child
  ?child dbo:spouse ?spouse .

  # Find Prince Friedrich of Hesse and by Rhine's parents
  ?friedrich dbp:fatherOrMother ?parent .
  FILTER (str(?friedrich) = ""Prince_Friedrich_of_Hesse_and_by_Rhine"")

  # Find the predecessor (likely a sibling) of one of those parents
  ?predecessor dbo:siblingOf ?parent .

  # Ensure the spouse is related to this predecessor
  ?spouse dbo:child ?predecessor .
}
```

This query assumes that DBpedia has structured data for these individuals and their relationships. Adjustments may be necessary based on actual data availability.",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
170,14,train,Give me the entity in Russia and birth place of the awardee of People's Artist of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardee ?birthPlace WHERE {
  ?awardee dbo:honoraryTitle dbr:People's_Artist_of_Russia .
  ?awardee dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is in Russia
  ?birthPlace dbp:country dbr:Russia .
}
```

This query does the following:
- Selects distinct awardees who have been awarded ""People's Artist of Russia.""
- Retrieves their birthplaces.
- Filters to ensure that these birthplaces are located within Russia.",3,3,4,2,2,2,3,28,0,0,12,0,0.0,0
216,10,train,Give me the party of the awardee of Australian Defence Medal.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party WHERE {
  ?person dbo:award dbr:Australian_Defence_Medal .
  OPTIONAL { ?person dbo:politicalParty ?party . }
}
```",2,2,3,2,1,2,3,28,0,7,5,0.0,0.0,0
888,2,train,Give me the military force of War in Donbas (2014–2022).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?militaryForce WHERE {
  # Ukraine's military forces involved in the conflict
  {
    dbr:Ukraine dbo:militaryBranch ?ukraineMilitary .
    ?ukraineMilitary rdfs:label ?militaryForce .
    FILTER (LANG(?militaryForce) = 'en')
  }
  
  UNION
  
  # Russia-backed separatists' military forces involved in the conflict
  {
    dbr:Donbas_conflict dbo:militaryParticipant ?separatistGroup .
    ?separatistGroup dbo:militaryBranch ?separatistMilitary .
    ?separatistMilitary rdfs:label ?militaryForce .
    FILTER (LANG(?militaryForce) = 'en')
  }
}
ORDER BY ?party
```

This query attempts to retrieve the military branches or forces associated with Ukraine and the separatists involved in the Donbas conflict. It uses DBpedia's ontology classes like `dbo:militaryBranch` and `dbo:militaryParticipant`.",1,1,2,1,1,3,2,20,0,0,135,0,0.0,0
715,39,train,"Give me the commander in Spanish Civil War and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?office WHERE {
  # Find Carlos Franco Iribarnegaray
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@en .
  
  # Check if he was a commander in the Spanish Civil War
  OPTIONAL { 
    ?person dbo:role ?role .
    ?role dbo:spanishCivilWarParticipant true .
    BIND(?person AS ?commander)
  }
  
  # Find an office he led that is both a government agency and an organization
  OPTIONAL {
    ?office dbo:head ?person ;
            a dbo:GovernmentAgency, dbo:Organization .
    BIND(?office AS ?officeLedByCarlos)
  }
}
```

This query attempts to:

- Identify Carlos Franco Iribarnegaray using his label.
- Check if he had a role related to the Spanish Civil War as a commander.
- Find any office he led that is classified both as a government agency and an organization.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
456,11,train,Give me the spouse of the actor of Pacific Drive.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?movie dbo:starring ?actor .
  
  VALUES ?movie { dbr:Pacific_Drive }
  
  ?actor dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,4,0,0,1.0,1.0,1.0
216,3,train,"Give me the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . }","```sparql
SELECT ?organisation WHERE {
  ?team rdf:type dbo:SportsTeam .
  ?team rdfs:label ""Croatia national under-21 football team""@en .
  ?team dbo:organizer ?organisation .
  FILTER (lang(?organisation) = 'en')
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
892,27,train,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region WHERE {
  # Find the political party associated with Andrea Cozzolino
  ?party a dbo:PoliticalParty ;
         dbo:member dbr:Andrea_Cozzolino .

  # Identify regions in Italy that are settlements and administrative regions
  ?region a dbo:Settlement, dbo:AdministrativeRegion ;
          dbo:country dbr:Italy ;
          dbo:administrativeRegionOf ?party .

  FILTER (str(?region) != """")
}
```",3,9,4,3,1,3,3,71,0,0,587,0,0.0,0
935,14,train,"Give me the headquarter of the office of the native of Balochistan, Pakistan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . ?v0 <http://dbpedia.org/ontology/location> ?result . ?v2 <http://dbpedia.org/property/office> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital WHERE {
  ?province dbo:country dbr:Pakistan .
  ?province rdfs:label ""Balochistan""@en .
  ?province dbo:capital ?capital .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
93,11,train,"Give me the capital of the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve and death place of John Weir Troy.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/John_Weir_Troy> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital WHERE {
  # Find the location associated with Lake Clark National Park and Preserve
  ?park dbo:location dbr:Lake_Clark_National_Park_and_Preserve .
  
  # Ensure this location is a region and settlement
  ?region dbo:wikiPageRedirects ?park ;
          a dbo:Settlement ;
          dbo:country dbr:United_States .

  # Find John Weir Troy's death place
  ?troy dbo:deathPlace ?deathPlace .
  FILTER (?deathPlace = ?region)

  # Get the capital of this region
  ?region dbo:capital ?capital .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
456,2,train,Give me the band of Alan Doyle.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  wd:Q2105180 dbo:member ?person .
  ?person foaf:name ""Alan Doyle""@en .
  ?band dbo:member ?person .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
130,4,train,Give me the award of Živko Ključe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person rdfs:label ""Živko Ključe""@en .
  FILTER (lang(?person) = 'en') # Ensures we're looking at the English label
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
839,31,train,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of Peter Schorowsky.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band
WHERE {
  # For Kevin Russell (musician)
  { 
    ?kevin a dbo:MusicalArtist ;
           foaf:name ""Kevin Russell"" ;
           dbo:birthDate ?birthDate1 .
    OPTIONAL { ?kevin dbo:memberOfBand ?band . }
  } UNION

  # For Peter Schorowsky
  {
    ?peter a dbo:MusicalArtist ;
           foaf:name ""Peter Schorowsky"" ;
           dbo:birthDate ?birthDate2 .
    OPTIONAL { ?peter dbo:memberOfBand ?band . }
  }

  FILTER EXISTS { ?kevin dbo:birthDate ?birthDate1 } # Ensure Kevin Russell is a musical artist
  FILTER EXISTS { ?peter dbo:birthDate ?birthDate2 } # Ensure Peter Schorowsky is a musical artist

  BIND(IF(BOUND(?kevin), ?kevin, ?peter) AS ?person)
}
ORDER BY ?person
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
216,5,train,"Give me the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?player WHERE {
  ?player rdfs:label ""Džemal Berberović""@en .
  FILTER NOT EXISTS { ?player a owl:Thing } # Ensure it's not just any entity
  OPTIONAL { ?player dbo:type ?type1 . }
  OPTIONAL { ?player dbo:sportsTeam ?team1 . }
  OPTIONAL { ?player dbo:memberOfSportsOrganization ?org1 . }

  VALUES (?category) {
    (dbo:Organisation)
    (dbo:SportsClub)
    (dbo:SoccerClub)
  }

  FILTER (
    EXISTS { ?type1 rdfs:subClassOf* ?category } ||
    EXISTS { ?team1 a ?category } ||
    EXISTS { ?org1 a ?category }
  )
}
```

This query does the following:
- It looks for an entity with the label ""Džemal Berberović"" in English.
- It checks if this entity is associated with any of the categories: Organisation, SportsClub, or SoccerClub.
- The `FILTER NOT EXISTS` clause ensures that we are not just matching any random entity.
- The `VALUES` block lists the categories we're interested in.
- The `FILTER` condition checks for subclass relationships to ensure the entity fits one of the specified categories.",1,4,2,1,1,3,3,71,0,0,10,0,0.0,0
976,29,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of Naci Bostancı and office of Mustafa Şentop.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?office WHERE {
  # Define the politicians of interest
  VALUES ?politician { 
    dbr:Naci_Bostancı 
    dbr:Mustafa_Şentop 
  }
  
  # Ensure they are associated with Nation Alliance (Turkey)
  ?politician dbo:party dbr:Nation_Alliance_(Turkey) .
  
  # Ensure they are Turkish
  ?politician dbo:nationality dbr:Turkey .

  # Find their offices, specifically looking for mayors
  ?office dbo:holder ?politician ;
          a dbo:Office ;
          dbp:title ?title .

  # Filter to include only those with the title ""Mayor""
  FILTER(CONTAINS(LCASE(?title), ""mayor""))

  BIND(?politician AS ?person)
}
ORDER BY ?person",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
874,3,train,"Give me the writer, that is an artist and a musical artist, of Mezzanine (album).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  # Find the album Mezzanine
  dbr:Mezzanine (dbo:artist) ?writer .
  
  # Ensure the writer is also an artist in visual arts and music
  ?writer dbo:occupation dbr:Artist .
  ?writer dbo:genre dbr:Musical_artist .
}
```",1,3,2,1,1,3,2,20,0,0,15,0,0.0,0
445,9,train,Give me the entity in England and death place of Patrick Moore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace WHERE {
  VALUES ?person { dbr:Patrick_Moore }
  
  OPTIONAL {
    ?person dbo:birthPlace ?birthPlace .
    FILTER (lang(?birthPlaceLabel) = 'en' && regex(str(?birthPlace), ""England""))
  }

  OPTIONAL {
    ?person dbo:deathPlace ?deathPlace .
    FILTER (lang(?deathPlaceLabel) = 'en')
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
47,27,train,"Give me the office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?award ?awardee ?office WHERE {
  ?award a dbo:Award ;
        dbo:country dbr:India .
  
  ?recipient dbo:recipientOfAward ?award ;
             foaf:name ?awardee .

  OPTIONAL { 
    ?awardee dbo:positionHeld ?office .
  }
}
```",3,4,4,3,1,3,3,71,0,0,200,0,0.0,0
892,7,train,"Give me the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?party WHERE {
  # Find Andrea Cozzolino in DBpedia
  ?cozzolino a dbo:Person ;
             foaf:name ""Andrea Cozzolino""@en .
  
  # Find political parties associated with Andrea Cozzolino
  ?cozzolino dbo:memberOf ?party .

  # Ensure the party is an organization and specifically a political party
  ?party a dbo:Organization ;
         rdf:type dbo:PoliticalParty .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
791,5,train,"Give me the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?parent dbr:Emperor_Go-Shirakawa .
  ?parent dbo:child ?child .

  ?child dbo:officeHolderOf ?office .

  ?child a dbo:RoyalFamilyMember .
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
129,17,train,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and associated musical artist of Saba (rapper).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist1 ?artist2 WHERE {
  # Find Dreamville Presents: Revenge and its associated musical artists
  ?entity1 a dbo:MusicalArtist ;
           dbp:associatedBand ""Dreamville Presents: Revenge"" .
  
  OPTIONAL { 
    ?entity1 dbo:associatedMusicalArtist ?artist1 .
  }

  # Find Saba (rapper) and his associated musical artists
  ?entity2 foaf:name ""Saba (rapper)"" ;
           a dbo:MusicalArtist .

  OPTIONAL {
    ?entity2 dbo:associatedMusicalArtist ?artist2 .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
495,6,train,Give me the father of Princess Charlotte of Württemberg and child of Frederick I of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Charlotte_of_Württemberg> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_I_of_Württemberg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Princess Charlotte of Württemberg and her father
  dbr:Princess_Charlotte_of_W%C3%BCrttemberg dbo:parent ?father .
  
  # Frederick I of Württemberg and his children
  ?child dbo:parent dbr:Frederick_I,_Duke_of_W%C3%BCrttemberg .
  
  # The father must be the same person as one of Frederick's children
  FILTER (?father = ?child)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
606,0,train,Give me the figure known as Barb City.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?label WHERE {
  ?entity rdfs:label ""Barb City""@en .
  OPTIONAL { ?entity dbo:wikiPageRedirects ?redirect . }
  FILTER (!bound(?redirect))
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
93,7,train,"Give me the capital of the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital WHERE {
  # Find Lake Clark National Park and Preserve
  dbr:Lake_Clark_National_Park_and_Preserve dbo:administrativeRegion ?region .

  # Ensure the region is also a settlement
  ?region rdf:type dbo:Settlement .

  # Get the capital of this region
  ?region dbo:capital ?capital .
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
917,10,train,Give me the child of Kekūanāoʻa and parent of Albert Kamehameha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:parent dbr:Kekūanāoʻa .
  ?person dbo:child dbr:Albert_Kamehameha .
}
```

This query looks for a person who is both the child of Kekūanāoʻa and the parent of Albert Kamehameha.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
326,7,train,"Give me the resident of the birthplace, that is a state and British, of David Jessel.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?resident WHERE {
  # Find David Jessel's birthplace
  dbr:David_Jessel dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a state and in Britain
  ?birthPlace rdf:type dbo:State .
  ?birthPlace dbp:country dbr:United_Kingdom .

  # Find notable residents of this place
  ?resident dbo:residence ?birthPlace .
}
```",2,4,3,2,1,3,2,20,0,0,5,0,0.0,0
965,1,train,Give me the parent of Louise Mountbatten.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  VALUES ?louiseMountbatten { dbr:Louise_Mountbatten }
  ?louiseMountbatten dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER(LANG(?parentName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,2,2,0.0,0.0,0
582,23,train,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/property/residence> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person a dbo:Scientist ;
          foaf:name ""Hirotaka Sugawara""@en .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  OPTIONAL { ?person dbo:residence ?residence . }
}
```

This query assumes that Hirotaka Sugawara is identified as a `dbo:Scientist` and uses the `foaf:name` property to match his name. It retrieves the residence information if available.",3,4,4,3,1,3,3,71,0,0,41,0,0.0,0
236,5,train,Give me the administration of James Madison.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . },"```sparql
SELECT ?administration WHERE {
  wd:Q11696 wdt:P39 ?administration .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
987,20,train,Give me the birth place of Dado Polumenta and birth place of the actor of All for Free.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  # Dado Polumenta
  OPTIONAL {
    VALUES ?person { dbr:Dado_Polumenta }
    ?person dbo:birthPlace ?birthPlace .
  }

  # Actor of ""All for Free""
  OPTIONAL {
    ?film dbo:title ""All for Free""@en .
    ?film dbo:starring ?actor .
    ?actor dbo:birthPlace ?birthPlace .
  }
}
```",3,3,4,2,2,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
926,17,train,"Give me the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Beyhan Sultan is a daughter of Mustafa III
  ?beyhanSultan dbo:childOf ?mustafaIII .
  
  FILTER (str(?beyhanSultan) = ""Beyhan Sultan""^^xsd:string)
  FILTER (str(?mustafaIII) = ""Mustafa III""^^xsd:string)

  # Mustafa III is a royalty
  ?mustafaIII dbo:royalty true .

  # Find the father of Mustafa III who is also royalty
  ?mustafaIII dbo:father ?father .
  
  FILTER EXISTS { ?father dbo:royalty true }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
273,13,train,Give me the spouse of the child of the child of Edoardo Agnelli (1831-1871).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Find Edoardo Agnelli's children
  ?child dbo:parent dbr:Edoardo_Agnelli_(1831-1871) .
  
  # Step 2: For each child, find their children (grandchildren of Edoardo)
  ?grandchild dbo:parent ?child .

  # Step 3: Find the spouse of each grandchild
  ?spouse dbp:spouse ?grandchild .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
926,7,train,"Give me the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Identify Beyhan Sultan as a child of Mustafa III
  ?beyhanSultan dbo:childOf ?mustafaIII .
  
  # Ensure the person is identified as Beyhan Sultan, daughter of Mustafa III
  ?beyhanSultan dbr:Beyhan_Sultan .

  # Find parents of Beyhan Sultan
  ?parent dbo:child ?beyhanSultan .

  # Filter for royalty
  ?parent a dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
715,17,train,"Give me the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/office> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person foaf:name ""Carlos Franco Iribarnegaray""@en .
  ?person dbo:positionHeld ?office .
  ?office a dbo:GovernmentAgency ;
          a dbo:Organization .
}
```

This query does the following:
- Uses `foaf:name` to identify Carlos Franco Iribarnegaray.
- Retrieves the office (`?office`) he held using `dbo:positionHeld`.
- Ensures that this office is both a government agency and an organization by checking if it has types `dbo:GovernmentAgency` and `dbo:Organization`.",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
987,26,train,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorBirthPlace WHERE {
  # Step 1: Find films featuring Emir Hadžihafizbegović
  ?film dbo:starring dbr:Emir_Hadžihafizbegović .

  # Step 2: Check if the film is based on a show or vice versa (optional, depending on data availability)
  OPTIONAL { ?film dbo:basedOn ?show . }

  # Step 3: Find actors in these films/shows
  ?film dbo:starring ?actor .
  
  # Step 4: Get birthplace of the actor
  ?actor dbp:birthPlace ?birthPlace .

  # Bind the birth place to a variable for output
  BIND(?birthPlace AS ?actorBirthPlace)
}
```",3,4,4,3,1,3,3,71,37,17,3,0.6851851851851852,0.925,0.7872340425531915
417,10,train,Give me the child of Alexandrine of Mecklenburg-Schwerin and spouse of Princess Caroline-Mathilde of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find children of Alexandrine of Mecklenburg-Schwerin
  ?alexChild dbo:parent dbr:Alexandrine_of_Mecklenburg-Schwerin .
  
  # Ensure the child is also a spouse of Princess Caroline-Mathilde of Denmark
  ?child dbo:spouse dbr:Princess_Caroline-Mathilde_of_Denmark .
  
  # Link the two conditions to find the common individual
  FILTER (?alexChild = ?child)
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
965,14,train,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person dbo:birthName ""Prince George of Battenberg""@en .
  ?person dbo:parent ?parent .

  OPTIONAL { 
    ?parent dbo:nobleTitle ?title .
  }

  FILTER EXISTS { ?parent dbo:nobleTitle ?title }
}
```

This query does the following:
- It identifies `?person` as Prince George of Battenberg using his birth name.
- It retrieves the parent(s) of this person with `dbo:parent`.
- It checks if any of these parents have a noble title (`dbo:nobleTitle`) to ensure they are nobles.",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
892,29,train,Give me the entity in Province of Reggio Emilia and landmark at elevation of the award of Anna Ishii and entity in Italy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?landmark WHERE {
  # Entity in Province of Reggio Emilia
  ?entity dbo:locatedIn dbr:Province_of_Reggio_Emilia .
  
  # Landmark at elevation of Anna Ishii's award
  ?award dbo:recipient dbr:Anna_Ishii .
  ?award dbo:elevation ?elevation .
  ?landmark dbo:elevation ?elevation ;
            dbo:location ?entity .

  # Entity in Italy
  ?entity dbo:country dbr:Italy .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
445,20,train,Give me the entity in England and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?deathPlace WHERE {
  ?person dbo:awardReceived dbr:Royal_Astronomical_Society_Medal .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  FILTER EXISTS { 
    ?place a dbo:Place ;
           dbp:country ""England""^^xsd:string .
    ?person dbo:birthPlace ?place .
  }
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`), resources (`dbr`), and properties (`dbp`).
- **SELECT**: We select the person and their death place.
- **?person dbo:awardReceived dbr:Royal_Astronomical_Society_Medal**: This line filters individuals who received an award from the Royal Astronomical Society.
- **OPTIONAL { ?person dbo:deathPlace ?deathPlace . }**: This retrieves the death place if available.
- **FILTER EXISTS**: Ensures that the person was born in a place located in England.

This query assumes that the awards are linked directly to individuals and that birth places can be used to infer location within England. Adjustments might be needed based on actual data availability and structure in DBpedia.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
965,4,train,Give me the spouse of Princess Victoria of Hesse and by Rhine.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Princess Victoria of Hesse and by Rhine. You can find this identifier by searching for her on DBpedia or using a SPARQL query to retrieve it.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
445,12,train,Give me the entity in United Kingdom and death place of Patrick Moore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace
WHERE {
  VALUES ?person { dbr:Patrick_Moore }
  
  ?person dbo:birthPlace ?birthPlace .
  FILTER (STRSTARTS(STR(?birthPlace), ""http://dbpedia.org/resource/United_Kingdom""))
  
  OPTIONAL { 
    ?person dbo:deathPlace ?deathPlace .
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
573,8,train,"Who is the author, that is a politician and an office holder, of Exchequer Standards?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  # Find the work ""Exchequer Standards""
  ?work dbo:title ""Exchequer Standards""@en .
  
  # Link the author to this work
  ?work dbo:author ?author .

  # Ensure the author is a politician
  ?author dbo:occupation dbr:Politician .

  # Ensure the author has held an office
  ?author dbo:officeHolderOf ?office .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
47,29,train,Give me the office of Ajoy Mukherjee and office of Suvendu Adhikari and office of the awardee of Banga Bhushan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeName WHERE {
  {
    # Ajoy Mukherjee
    dbr:Ajoy_Mukherjee dbo:office ?office .
    ?office rdfs:label ?officeName .
    FILTER (lang(?officeName) = 'en')
  }
  UNION
  {
    # Suvendu Adhikari
    dbr:Suvendu_Adhikari dbo:office ?office .
    ?office rdfs:label ?officeName .
    FILTER (lang(?officeName) = 'en')
  }
  UNION
  {
    # Awardee of Banga Bhushan
    ?award dbo:recipient ?person .
    ?award rdf:type dbr:Banga_Bhushan_award .
    ?person dbo:office ?office .
    ?office rdfs:label ?officeName .
    FILTER (lang(?officeName) = 'en')
  }
}
ORDER BY ?person
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
917,0,train,Give me the parent of Albert Kamehameha.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?child dbo:child ?parent .
  FILTER(?child = dbpedia:Albert_Kamehameha)
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
216,23,train,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/coach> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coach WHERE {
  # Find the Croatian U21 team
  dbr:Croatian_national_under-21_football_team dbo:coach ?teamCoach .
  
  # Ensure the coach is associated with an organization that is a soccer club
  ?teamCoach dbo:position ""head coach""^^xsd:string .
  ?teamCoach dbo:affiliation ?organization .
  ?organization rdf:type dbo:SoccerClub .

  # Bind the coach to the variable
  BIND(?teamCoach AS ?coach)
}
```",3,5,4,3,1,3,3,71,0,0,6,0,0.0,0
865,36,train,Give me the native of British Raj and father of the child of the father of Abul Maal Abdul Muhith.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfBritishRaj WHERE {
  # Step 1: Identify Abul Maal Abdul Muhith
  ?abulMaal a dbo:Person ;
            foaf:name ""Abul Maal Abdul Muhith""@en .
  
  # Step 2: Find his father
  ?father dbo:child ?abulMaal .

  # Step 3: Determine the child of that father (which is Abul Maal)
  ?father dbo:child ?child .

  # Step 4: Find the native of British Raj who is also the father of this child
  ?nativeOfBritishRaj dbo:nativePlace dbr:British_Raj ;
                      dbo:child ?child .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
507,7,train,Who is the person born on 1966-02-18?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1966 && MONTH(?birthDate) = 2 && DAY(?birthDate) = 18)
}
```",1,1,2,1,1,3,3,71,21,0,0,1.0,1.0,1.0
645,4,train,Give me the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?property ?hasValue
WHERE {
  VALUES ?person { dbr:Caballero_de_la_Soledad }
  ?person ?property ?hasValue .
}
```

This query retrieves all properties and their values for the resource associated with Carlos Asensio Cabanillas, assuming he is linked to ""Caballero de la Soledad"" in DBpedia. Adjust the resource identifier if necessary based on actual DBpedia entries.",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
976,35,train,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as Mehmet Naci Bostancı.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeLeader ?officeMehmetNaciBostancı
WHERE {
  # Office of the leader of the Grand National Assembly of Turkey (Speaker)
  dbr:Speaker_of_the_Grand_National_Assembly_of_Turkey dbo:positionHeld ?leader.
  ?leader dbo:office ?officeLeader.

  # Office of Mehmet Naci Bostancı
  dbr:Mehmet_Naci_Bostancı dbo:positionHeld ?bostanciPosition.
  ?bostanciPosition dbo:office ?officeMehmetNaciBostancı.
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
645,16,train,"Give me the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?event rdf:type dbo:Event .
  ?event dbo:wikiPageRedirects dbr:Spanish_Restoration .

  ?force rdf:type dbo:MilitaryConflict ;
         dbo:socialEvent ?event .

  ?native rdf:type dbo:President ;
          dbo:country dbr:Spain ;
          dbo:politicalParty ?party ;
          dbo:officeHolder ?office .

  ?office dbo:positionHeldBy ?native .
  ?native dbo:birthPlace ?place .
  
  FILTER EXISTS { ?force dbo:relatedEvent ?event }
}
```",2,7,3,2,1,3,3,71,0,0,1,0,0.0,0
442,1,train,Give me the resting place of Fay Bainter.,SELECT ?result WHERE { <http://dbpedia.org/resource/Fay_Bainter> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?place WHERE {
  wd:Q123456 dbr:resting_place ?place .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Fay Bainter. You can find this by searching for her on DBpedia or using a SPARQL query to identify her unique identifier.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
158,14,train,"Give me the party of the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successorParty WHERE {
  # Find a deceased person who was an office holder and politician
  ?deceased a dbo:Politician ;
            dbo:officeHolderOf ?office ;
            dbo:dateOfBirth ?dob ;
            dbo:dateOfDeath ?dod .

  FILTER (?dod = ""1945-09-15""^^xsd:date)

  # Find the successor who is also a prime minister, office holder, and politician
  ?successor dbo:predecessor ?deceased ;
             a dbo:PrimeMinister, dbo:Politician, dbo:OfficeHolder .

  # Get the party of the successor
  ?successor dbp:party ?successorParty .
}
```",3,8,4,3,1,3,2,20,0,0,1,0,0.0,0
645,26,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify the event that is both a military conflict and societal event
  ?event dbo:type dbr:Military_conflict ;
         dbo:type dbr:Societal_event .

  # Link the event to the Glorious Revolution
  ?event rdfs:label ""Glorious Revolution""@en .

  # Find the native president during this period
  ?president dbo:nationality dbr:Spain ;
             dbo:officeHolderOf dbr:First_Spanish_Republic ;
             dbo:type dbr:Politician ;
             dbo:type dbr:President .

  # Link the military force to the event and the president
  ?militaryForce dbo:participatedIn ?event ;
                 dbo:commandedBy ?president .
}
```",3,8,4,3,1,3,3,71,0,0,514,0,0.0,0
365,5,train,"Give me the native, that is a politician, of Poltava Governorate.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?politician ?name WHERE {
  ?politician a dbo:Politician .
  ?politician dbo:birthPlace dbr:Poltava_Governorate .
  OPTIONAL { ?politician foaf:name ?name . }
}
```

This query does the following:
- Filters individuals who are of type `dbo:Politician`.
- Checks if their birthplace is `Poltava Governorate` using the property `dbo:birthPlace`.
- Optionally retrieves their name using the `foaf:name` property.",1,2,2,1,1,3,2,20,0,0,11,0,0.0,0
443,9,train,Give me the birthplace of Carl Larsson and birthplace of Ulf Lundell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlaceLabel WHERE {
  VALUES ?person { 
    dbr:C._Larsson (Carl_Larsson) 
    dbr:Ulf_Lundell 
  }
  
  ?person dbo:birthPlace ?birthPlace.
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
976,13,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayorName ?office WHERE {
  ?person a dbo:Mayor ;
          dbo:nationality dbr:Turkey ;
          dbo:partyAffiliation dbr:Nation_Alliance_(Turkey) .
  
  ?person dbo:occupation [ 
            a dbo:Politician, dbo:OfficeHolder ] .

  ?person rdfs:label ?mayorName .
  FILTER (lang(?mayorName) = 'en')

  OPTIONAL {
    ?person dbo:office ?office .
  }
}
```

This query does the following:
- Selects individuals who are mayors (`dbo:Mayor`) and have Turkish nationality (`dbo:nationality dbr:Turkey`).
- Filters those affiliated with the Nation Alliance in Turkey (`dbo:partyAffiliation dbr:Nation_Alliance_(Turkey)`).
- Ensures they are both politicians and office holders (`dbo:occupation [ a dbo:Politician, dbo:OfficeHolder ]`).
- Retrieves their name and any associated office.",2,5,3,2,1,3,3,71,0,0,3,0,0.0,0
443,14,train,"Give me the birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and landmark at elevation of 28.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:MusicalArtist ;
          a dbo:Artist ;
          dbp:birthday ""1949-11-20""^^xsd:date ;
          dbo:birthPlace ?birthPlace .
  
  OPTIONAL { 
    ?landmark dbo:elevation ""28""^^xsd:float ;
              dbo:location ?person .
  }
}
```

This query does the following:
- Filters for a person who is both a `MusicalArtist` and an `Artist`.
- Matches the birth date to November 20, 1949.
- Retrieves the birthplace of this person.
- Optionally checks if there's a landmark associated with the person at an elevation of 28 meters.",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
791,19,train,"Give me the predecessor of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor ?spouse WHERE {
  # Find Emperor Antoku and his predecessor
  ?antoku a dbo:Monarch ;
          dbp:country ""Japan"" ;
          dbp:succession ""Emperor of Japan"" ;
          dbp:reignEnd ""1185-06-28"" .
  
  ?predecessor a dbo:Monarch ;
               dbp:country ""Japan"" ;
               dbp:succession ""Emperor of Japan"" ;
               dbp:reignEnd ?endDate .

  # Ensure the predecessor comes before Antoku
  FILTER(?endDate < ""1185-06-28""^^xsd:date)

  # Find the successor relationship
  ?antoku dbo:predecessor ?predecessor .

  # Find the spouse of the predecessor
  ?predecessor dbp:spouse ?spouse .

  # Ensure the spouse is a royalty
  ?spouse a dbo:Monarch .
}
ORDER BY ?predecessor",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
933,27,train,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1947-04-21""^^xsd:date .
  
  ?person dbo:memberOfBand ?band .

  ?band a dbo:Band, dbo:Organization, dbo:Group .
}
```

This query does the following:
- Selects individuals (`?person`) who are of type `dbo:MusicalArtist` and have a birth date of April 21, 1947.
- Finds bands (`?band`) that these persons are members of.
- Ensures that the band is classified as a `Band`, an `Organization`, and a `Group`.",3,7,4,3,1,3,3,71,0,0,4,0,0.0,0
865,15,train,"Give me the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?residenceCountry WHERE {
  ?person dbo:deathPlace dbr:Patna .
  OPTIONAL { ?person dbo:residence ?residence . }
  FILTER EXISTS { ?residence a dbo:Country . }
  BIND(?residence AS ?residenceCountry)
}
```

This query does the following:
- It selects individuals (`?person`) who have Patna as their place of death.
- It checks if they have a residence that is classified as a country.
- If such a residence exists, it binds this to `?residenceCountry`.",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
122,6,train,"Give me the band of the reference, that is a musical artist and an artist, to Gift of Gab.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Gift of Gab""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Gift of Gab"" .
  ?person dbo:memberOf ?band .
}
```",2,4,3,2,1,2,2,9,0,0,4,0,0.0,0
18,15,train,"Give me the alumnus of Marymount College, Tarrytown and professional in the award of Ana María Sánchez de Ríos.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus ?profession WHERE {
  ?alumnus dbo:almaMater dbr:Marymount_College_Tarrytown .
  OPTIONAL { 
    ?association dbo:associatedWith dbr:Ana_María_Sánchez_de_Ríos ;
                 dbo:person ?alumnus .
  }
  ?alumnus dbo:profession ?profession .
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT Clause**: We are selecting the alumnus and their profession.
- **WHERE Clause**:
  - `?alumnus dbo:almaMater dbr:Marymount_College_Tarrytown`: This finds individuals who attended Marymount College, Tarrytown.
  - `OPTIONAL { ... }`: This block is used to find any professional association with Ana María Sánchez de Ríos. It checks if there's an association where the person (`?alumnus`) is linked to Ana María Sánchez de Ríos.
  - `?alumnus dbo:profession ?profession`: Retrieves the profession of the alumnus.

This query assumes that DBpedia has structured data about alumni and their professional associations, which might not always be comprehensive. Adjustments may be needed based on actual data availability.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
456,7,train,Give me the band of Alan Doyle.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  wd:Q2105180 dbo:member ?person .
  ?person foaf:name ""Alan Doyle""@en .
  ?band dbo:member ?person .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
965,10,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbo:father ?parent .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
136,1,train,Give me the landmark at elevation of 5.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""5""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark ?name WHERE {
  ?landmark a dbo:Landmark .
  OPTIONAL { ?landmark rdfs:label ?name . FILTER (lang(?name) = 'en') }
  OPTIONAL { ?landmark dbp:elevation ?elevation . FILTER (?elevation = ""5""^^xsd:integer) }
}
```",1,1,2,1,1,2,2,9,0,0,909,0,0.0,0
645,19,train,Give me the military force of Spanish Civil War and commander in the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  ?person dbo:givenName ""Carlos"" .
  ?person dbo:familyName ""Asensio Cabanillas"" .
  ?person dbo:commander ?commander .
  ?commander dbo:militaryForce ?militaryForce .
}
```",3,3,4,2,2,3,3,71,0,0,23,0,0.0,0
93,4,train,"Who is the native, that is a politician, of Seattle?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Seattle ;
          a dbo:Politician .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10",1,2,2,1,1,3,2,20,5,5,109,0.5,0.043859649122807015,0.08064516129032258
456,34,train,"Give me the band of Alan Doyle and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?spouse WHERE {
  # Alan Doyle's band
  dbr:Alan_Doyle dbo:musicalArtistInBand dbr:Great_Big_Sea .
  
  # Ross Newton's movie that is also a work and television show
  dbr:Ross_Newton dbo:film dbr:Movie_Title . # Replace Movie_Title with the actual title

  # Actor in the same movie
  ?actor dbo:film dbr:Movie_Title .

  # Spouse of the actor
  ?actor dbo:spouse ?spouse .
  
  # Return the band and spouse
  BIND(dbr:Great_Big_Sea AS ?band)
}
```

**Notes:**
- Replace `dbr:Movie_Title` with the actual DBpedia resource for the movie.
- Ensure that the properties used (like `dbo:musicalArtistInBand`, `dbo:film`, and `dbo:spouse`) are correct according to DBpedia's ontology.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
124,5,train,Who is the awardee of British South Africa Company Medal?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?medal a dbo:Award .
  ?medal rdfs:label ""British South Africa Company Medal""@en .
  ?recipient dbo:award ?medal .
  ?recipient foaf:name ?awardee .
}
```",1,1,2,1,1,3,3,71,0,4,5,0.0,0.0,0
102,0,train,Give me the manager of Sheffield United W.F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Sheffield_United_W.F.C.> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?manager WHERE {
  wd:Q1234568 wdt:P127 ?organization .
  ?organization wdt:P112 ?person .
  ?person wdt:P106 wd:Q33999 . # P106 is the property for occupation, and Q33999 is the concept of a manager.
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Sheffield United W.F.C. You can find this by searching DBpedia or using a SPARQL query to identify the correct entity.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
456,9,train,Give me the professional in  and spouse of Danielle Spencer (Australian actress).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession ?spouse WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Danielle Spencer""@en .
  
  OPTIONAL { ?person dbo:occupation ?profession . }
  OPTIONAL { ?person dbp:spouse ?spouse . }

  FILTER (lang(?person) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
192,2,train,Give me the child of Charles II of Naples.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Charles_II_of_Naples dbo:child dbr:?child .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
582,30,train,Give me the reference to Japan and figure known as the nickname of Japan national football team and player in Kazuaki Nagasawa.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . }","```sparql
SELECT ?nickname ?player WHERE {
  wd:Q11 wdt:P1448 ?team.
  ?team wdt:P170 ?player.
  ?team wdt:P1813 ?nickname.
  FILTER(?player = wd:Q123456) # Replace Q123456 with the actual Wikidata ID for Kazuaki Nagasawa
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
433,7,train,Give me the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album dbo:artist dbr:Eric_Clapton .
  ?album rdfs:label ""Slowhand at 70 – Live at the Royal Albert Hall""@en .
  OPTIONAL { ?track dbo:composer ?writer . }
}
```

This query looks for an album associated with Eric Clapton and matches it to the title ""Slowhand at 70 – Live at the Royal Albert Hall."" It then attempts to find any tracks on that album and their composers, which would include Eric Clapton as a primary writer.",1,1,2,1,1,3,3,71,0,0,30,0,0.0,0
36,8,train,"Give me the actor of the claim to fame, that is a film, of Lepacious Bose.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Lepidoptera Bose in DBpedia
  ?person a dbo:Person ;
          foaf:name ""Lepidoptera Bose""@en .
  
  # Find films associated with him (e.g., as director, actor, etc.)
  ?film dbo:director ?person ;
        dbo:starring ?actor .

  FILTER(?film != dbr:)
}
```

This query does the following:
- Identifies a person named ""Lepidoptera Bose"" in DBpedia.
- Finds films where he is listed as a director (or you can adjust this to other roles if needed).
- Retrieves actors (`?actor`) who starred in those films.",2,3,3,2,1,2,3,28,0,0,6,0,0.0,0
926,4,train,Give me the father of Abdulaziz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Abdulaziz ?p ?o .
  FILTER(?p = dbo:father) .
  BIND(?o AS ?father)
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
791,20,train,Give me the predecessor of the child of Emperor Takakura and spouse of Taira no Tokuko.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find Antoku
  ?antoku a dbo:Monarch ;
          dbo:succession dbr:Emperor_of_Japan ;
          dbo:predecessor ?predecessor .

  # Ensure Antoku is the child of Emperor Takakura and spouse of Taira no Tokuko
  ?antoku dbo:father dbr:Takakura ;
         dbo:spouse dbr:Taira_no_Tokuko .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
443,16,train,Give me the landmark at elevation of 28 and birthplace of the work of yes.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/author> ""yes""@en . ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?birthPlace WHERE {
  # Part 1: Landmark at elevation of 28
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ""28""^^xsd:float .

  # Part 2: Birthplace related to the work of Yes
  ?album dbo:artist dbr:Yes ;
         dbo:producer ?person .
  ?person dbo:birthPlace ?birthPlace .
}
```

This query does the following:

- Searches for landmarks that are lighthouses with an elevation of 28.
- Finds albums produced by the band ""Yes"" and identifies the birthplace of the producers associated with those albums.

Note: The exact properties and classes might need adjustment based on DBpedia's current schema, as it can evolve over time. This query assumes typical relationships like `dbo:artist`, `dbo:producer`, and `dbo:birthPlace`.",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
47,19,train,Give me the office of Bidesh Ranjan Bose and office of the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeName WHERE {
  VALUES ?person { 
    dbr:Bidesh_Ranjan_Bose 
    dbr:Jagdeep_Dhankhar
  }
  
  ?person dbo:positionHeld ?office .
  ?office rdfs:label ?officeName .
  FILTER (lang(?officeName) = 'en')
}
ORDER BY ?person",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
442,4,train,Give me the resting place of Fay Bainter and resting place of Allyn K. Capron.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allyn_K._Capron> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Fay_Bainter> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?restingPlace WHERE {
  VALUES (?person ?name) {
    (dbr:Fay_Bainter ""Fay Bainter"")
    (dbr:Allyn_K._Capron ""Allyn K. Capron"")
  }
  ?person dbo:name ?name .
  OPTIONAL { ?person dbo:placeOfBurial ?restingPlace . }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
888,0,train,Give me the commander in Southern Ukraine campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Southern_Ukraine_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?name WHERE {
  ?campaign dbo:location dbr:Southern_Ukraine .
  ?campaign dbo:commander ?commander .
  ?commander rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,13,0,0.0,0
645,9,train,Give me the military force of Spanish Civil War and commander in Battle of Jarama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?militaryForce ?commander WHERE {
  # Spanish Civil War military forces involved in Battle of Jarama
  ?battle dbpedia-owl:wikiPageRedirects ?redirect .
  FILTER(STRSTARTS(LCASE(?redirect), ""battle_of_jarama""))
  
  ?battle dbo:militaryConflict ?conflict .
  ?conflict rdfs:label ?conflictLabel .
  FILTER(CONTAINS(LCASE(?conflictLabel), ""spanish civil war""))

  # Get military forces involved
  ?battle dbo:participatingMilitaryUnit ?militaryForce .

  # Get commanders of the military forces
  OPTIONAL {
    ?militaryForce dbo:commander ?commander .
  }
  
  FILTER(!isBlank(?militaryForce))
}
ORDER BY ?militaryForce
```",2,2,3,1,2,3,3,71,0,0,6,0,0.0,0
192,5,train,Give me the child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Stephen_V_of_Hungary dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,5,1,0,0.8333333333333334,1.0,0.9090909090909091
582,26,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?father WHERE {
  # Find children of Kazuaki Nagasawa
  ?child dbo:parent ?nagasawa .
  ?nagasawa foaf:name ""Kazuaki Nagasawa""@en .

  # Find the father of those children
  ?child dbo:parent ?father .

  # Check if the father is an athlete, soccer manager, and sports manager
  ?father a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .
}
```",3,6,4,3,1,3,3,71,0,0,4,0,0.0,0
83,11,train,"Give me the party of Alceu Collares and ruling party in the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. <http://dbpedia.org/resource/Alceu_Collares> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?sandroBirthplace ?soccerClub ?alceuParty ?rulingParty
WHERE {
  # Find Sandro (footballer, born October 1983)
  ?sandro dbo:birthDate ?birthDate .
  FILTER(CONTAINS(str(?birthDate), ""October 1983""))
  ?sandro dbo:birthPlace ?sandroBirthplace .

  # Ensure the birthplace is a town in Brazil
  ?sandroBirthplace dbo:country dbr:Brazil ;
                   rdf:type dbo:Settlement .

  OPTIONAL {
    # Find soccer club associated with the birthplace
    ?soccerClub dbo:location ?sandroBirthplace .
  }

  # Get Alceu Collares' party
  dbr:Alceu_Collares dbo:party ?alceuParty .

  # Get ruling party in Sandro's birthplace
  OPTIONAL {
    ?rulingParty dbp:country dbr:Brazil ;
                 dbp:settlement ?sandroBirthplace .
  }
}
```",3,6,4,2,2,3,2,20,0,0,1,0,0.0,0
573,13,train,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Step 1: Identify William J. Phelan
  dbr:William_J._Phelan dbo:residence ?residence .

  # Step 2: Ensure the residence is a settlement
  ?residence rdf:type dbo:Settlement .

  # Step 3: Find decedents at this residence
  ?decedent dbo:placeOfDeath ?residence .
}
```

This query does the following:
- It starts by identifying William J. Phelan and his place of residence.
- It checks if that residence is a settlement.
- Finally, it finds any notable persons who died at that location.",2,3,3,2,1,3,3,71,0,0,40,0,0.0,0
83,7,train,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983).","SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?rulingParty WHERE {
  # Find Sandro's birthplace
  ?sandro dbo:birthPlace ?birthPlace .
  
  FILTER (strstarts(str(?sandro), ""Sandro_(footballer,_born_October_1983)""))

  # Ensure the birthplace is a town and Brazilian
  ?birthPlace a dbo:Settlement ;
             dbp:country dbr:Brazil .

  # Check for a soccer club in the birthplace
  ?club dbo:location ?birthPlace .
  
  # Retrieve the ruling party of the birthplace
  ?birthPlace dbp:government ?government .
  ?government dbo:rulingParty ?rulingParty .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
645,33,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in Battle of Jarama.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify the president during Restoration (Spain)
  ?president a dbo:President ;
             dbo:nationality dbr:Spanish_people ;
             dbo:country dbr:Spain ;
             dbo:termStart ?startTerm .

  FILTER (?startTerm >= ""1874-11-29""^^xsd:date && ?startTerm <= ""1931-04-14""^^xsd:date) # Approximate dates for Restoration

  # Identify the commander in Battle of Jarama
  ?commander a dbo:MilitaryPerson ;
             dbo:commanded ?battle .

  ?battle rdfs:label ""Battle of Jarama""@en .
  
  # Link the president and commander if they are the same person
  FILTER (?president = ?commander)

  # Find the military force associated with this person
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:commander ?commander .

  # Ensure the event is classified as a military conflict, societal event, and an event
  ?event a dbo:Event ;
         dbo:type dbr:Military_conflict , dbr:Societal_event .

  FILTER (?battle = ?event)
}
```",4,9,5,3,2,3,3,71,0,0,6,0,0.0,0
573,19,train,"Give me the person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?decedent WHERE {
  # Find Charlie Baker's administration period
  ?administration dbo:head dbr:Charlie_Baker .
  
  # Find decedents associated with Quincy, Massachusetts
  ?deathEvent dbo:place dbr:Quincy,_Massachusetts ;
              dbo:agent ?decedent .

  # Find decedents associated with Charlie Baker's administration region
  OPTIONAL {
    ?administration dbp:region ?region .
    ?deathEvent dbo:place ?region ;
                dbo:agent ?decedent .
  }
  
  FILTER(?decedent != dbr:Charlie_Baker) # Exclude Charlie Baker himself
}
```",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
507,37,train,"Give me the professional in Film director, television director and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v3 <http://dbpedia.org/ontology/director> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?filmDirector ?tvDirector ?movieDirected WHERE {
  ?person a dbo:Person ;
          dbp:birthday ""1919-06-17""^^xsd:date ;
          dbo:occupation ?occupation .
  
  FILTER (
    EXISTS { ?occupation rdfs:label ?label . FILTER (CONTAINS(LCASE(?label), ""film director"")) }
    && 
    EXISTS { ?occupation rdfs:label ?label2 . FILTER (CONTAINS(LCASE(?label2), ""television director"")) }
  )
  
  OPTIONAL {
    ?person dbo:directorOfFilm ?filmDirector .
  }
  
  OPTIONAL {
    ?person dbo:directorOfTVSeries ?tvDirector .
  }
  
  OPTIONAL {
    ?movieDirected dbo:director ?person ;
                   a dbo:Film .
  }
}
```

This query does the following:

- Selects individuals (`?person`) who are of type `dbo:Person`.
- Filters those born on June 17, 1919.
- Checks if they have occupations labeled as ""film director"" and ""television director"".
- Retrieves films directed by them (`?filmDirector`).
- Retrieves TV series directed by them (`?tvDirector`).
- Identifies movies (`?movieDirected`) where they are listed as directors.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
98,12,train,Give me the birth place of Paolo Ballesteros and entity in Philippines and region of Philippine Standard Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?entityInPhilippines ?regionPST
WHERE {
  # Get the birthplace of Paolo Ballesteros
  dbr:Paolo_Ballesteros dbo:birthPlace ?birthPlace .

  # Find an entity in the Philippines
  ?entityInPhilippines a dbo:Place ;
                      dbo:country dbr:Philippines .
  
  # Identify regions under Philippine Standard Time
  ?regionPST a dbo:AdministrativeRegion ;
             dbo:timeZone dbr:Philippine_Standard_Time .
}
```",3,3,4,1,3,2,3,28,2,2330,0,0.0008576329331046312,1.0,0.0017137960582690659
433,22,train,Give me the associated musical artist of Paul Chambers and professional in the profession of Bob Marley.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find Paul Chambers and his associated musical artist (bassist)
  ?paulChambers a dbo:MusicalArtist ;
                foaf:name ""Paul Chambers"" ;
                dbo:instrument dbr:Bass_guitar .

  OPTIONAL { 
    ?paulChambers dbo:associatedBandOrMusicalGroup ?band .
    ?band dbo:musicalGenre dbr:Jazz .
  }

  # Find Bob Marley and his associated musical artist (reggae musician)
  ?bobMarley a dbo:MusicalArtist ;
             foaf:name ""Bob Marley"" ;
             dbo:genre dbr:Reggae .

  OPTIONAL { 
    ?bobMarley dbo:associatedBandOrMusicalGroup ?band .
    ?band dbo:musicalGenre dbr:Reggae .
  }

  # Find artists associated with both
  ?artist a dbo:MusicalArtist ;
          dbo:instrument ?instrument ;
          dbo:genre ?genre .

  FILTER (?instrument = dbr:Bass_guitar || ?genre = dbr:Jazz)
  FILTER (?genre = dbr:Reggae)

}
LIMIT 10",3,3,4,2,2,3,3,71,0,0,16,0,0.0,0
216,15,train,"Give me the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/coach> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coach WHERE {
  ?team a dbo:SoccerTeam ;
        dbo:country dbr:Croatia ;
        dbo:ageCategory ""Under-21"" .
  
  ?team dbo:coach ?coach .

  OPTIONAL { 
    ?coach dbo:worksFor ?organization .
    FILTER EXISTS { ?organization a dbo:SoccerClub }
  }
}
```

This query does the following:
- Selects entities that are soccer teams (`dbo:SoccerTeam`) associated with Croatia and in the ""Under-21"" age category.
- Retrieves the coach of these teams.
- Optionally checks if the coach works for an organization that is a soccer club.",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
326,1,train,Give me the person decedent at France.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:France .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,2,20,3795,3736,0,0.5039171424777587,1.0,0.6701395020307258
976,1,train,Give me the office of Meral Akşener.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  wd:Q1056980 dbo:positionHeld ?office .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
976,11,train,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?assembly a dbo:Parliament ;
            dbo:leader ?leader .
  
  FILTER(?assembly = dbr:Grand_National_Assembly_of_Turkey)
  
  ?leader dbo:occupation dbr:Politician .

  ?leader dbo:positionHeld ?position .
  ?position dbo:title ?office .
}
```",2,3,3,2,1,3,3,71,0,0,4,0,0.0,0
527,12,train,"Give me the author of the work, that is a work and a book, of Tom Baker and actor of The Book Tower.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Book_Tower> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?work dbo:author ?author .
  ?author dbo:birthName ""Tom Baker"" .
  ?author dbo:profession dbr:Actor .

  ?book dbo:abstract ?abstract .
  FILTER CONTAINS(LCASE(?abstract), ""the book tower"") .

  ?work a dbo:Book .
  ?work rdfs:label ?title .
  
  FILTER (CONTAINS(LCASE(?title), ""tom baker""))
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
773,39,train,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of Carloman of Bavaria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Carloman of Bavaria and his father
  dbr:C._of_Bavaria dbo:father ?father .
  
  # Father's father (Grandfather) who is an office holder and royalty
  ?father dbo:father ?grandfather .
  ?grandfather a dbo:Monarch ;
              a dbo:OfficeHolder .

  # Child of Grandfather who is Royalty
  ?grandfather dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .

  # Parent of that Royal Child
  ?royalChild dbo:parent ?parent .
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
192,13,train,"Give me the spouse of the spouse, that is a royalty, of the child of Charles II of Naples.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouseOfSpouse WHERE {
  # Step 1: Identify Charles II of Naples
  ?charles2 a dbo:Monarch ;
            foaf:name ""Charles II of Naples""@en ;
            dbo:child ?child .

  # Step 2: Find his children
  ?child a dbo:Person ;
         dbo:spouse ?spouse .

  # Step 3: Identify the spouse's spouses and check if they are royalty
  ?spouse dbo:spouse ?royalSpouse .
  
  # Step 4: Check if the spouse is royalty
  ?royalSpouse a dbo:Monarch ;
               foaf:name ?name .

  # Step 5: Find the spouse of that royal person
  ?royalSpouse dbo:spouse ?spouseOfSpouse .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
791,24,train,Give me the predecessor of the child of Emperor Takakura and father of Emperor Go-Toba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Antoku is the child of Emperor Takakura and father of Emperor Go-Toba
  ?antoku dbo:childOf dbr:Emperor_Takakura ;
          dbo:parentOf dbr:Emperor_Go-Toba .

  # Find the predecessor of Antoku
  ?antoku dbo:predecessor ?predecessor .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
433,38,train,"Give me the professional in the profession of Bob Marley and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional ?artist
WHERE {
  # Bob Marley's profession
  dbr:Bob_Marley dbo:profession ?profession .
  
  # Artists associated with Bob Marley
  ?associatedArtist dbo:associatedMusicalArtist dbr:Bob_Marley ;
                   a dbo:MusicArtist .

  # Scott LaFaro's associated musical artist
  dbr:Scott_LaFaro dbo:associatedMusicalArtist ?artist ;
                   a dbo:MusicArtist .
  
  # Find common artists between Bob Marley and Scott LaFaro
  FILTER (?associatedArtist = ?artist)

  # Ensure the professional is in the same profession as Bob Marley
  ?professional dbo:profession ?profession ;
                a dbo:MusicArtist .
}
```",4,6,5,2,2,3,3,71,0,0,4,0,0.0,0
926,31,train,Give me the father of the father of the spouse of Neşerek Kadın and successor of Mustafa III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?grandfatherFather WHERE {
    # Step 1: Find Neşerek Kadın's spouse
    ?neşerekKadın a dbo:Person ;
        foaf:mbox <http://dbpedia.org/resource/Neşerekkadin> .
    
    ?spouse a dbo:Person ;
        dbo:spouse ?neşerekKadın .

    # Step 2: Find the father of Neşerek Kadın's spouse
    ?fatherOfSpouse a dbo:Person ;
        dbo:child ?spouse .

    # Step 3: Find the grandfather (father of the father)
    ?grandfather a dbo:Person ;
        dbo:child ?fatherOfSpouse .

    # Step 4: Identify the successor of Mustafa III
    ?mustafaIII a dbo:Person ;
        foaf:name ""Mustafa III""@en .
    
    ?successor a dbo:Person ;
        dbo:predecessor ?mustafaIII ;
        dbo:child ?grandfather .

    # Step 5: Find the father of the grandfather
    ?grandfatherFather a dbo:Person ;
        dbo:child ?grandfather .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
874,12,train,Give me the band of Manfred Mann (musician) and band of the band member of The Jones Gang.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Manfred_Mann_(musician)> . ?result <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manfredMannBand ?jonesGangMember ?bandOfJonesGangMember
WHERE {
  # Find the band associated with Manfred Mann
  ?manfredMann dbo:musicalArtist <http://dbpedia.org/resource/Manfred_Mann> .
  ?manfredMann dbp:member <http://dbpedia.org/resource/Manfred_Mann> ;
               dbo:name ?manfredMannBand .

  # Find members of The Jones Gang
  ?jonesGangMember dbo:musicalArtist <http://dbpedia.org/resource/The_Jones_Gang> .
  
  # Find bands associated with each member of The Jones Gang
  OPTIONAL {
    ?bandOfJonesGangMember dbo:member ?jonesGangMember ;
                           dbo:name ?bandName .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
892,0,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity a dbo:Place .
  OPTIONAL { ?entity dbo:country dbr:Italy . }
  FILTER NOT EXISTS { ?entity dbo:country ?otherCountry . FILTER (?otherCountry != dbr:Italy) }
}
ORDER BY ?entity
LIMIT 100",1,1,2,1,1,3,3,71,0,100,13092,0.0,0.0,0
433,34,train,"Give me the professional in Musician and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Paul Chambers as a person
  dbr:Paul_Chambers a dbo:Musician ;
                    dbo:birthPlace ?place .

  # Associated musical artists with Paul Chambers
  ?association dbo:musicArtist dbr:Paul_Chambers .
  ?association dbo:musicalArtist ?associatedArtist .

  # Ensure the associated artist is both a musician and an artist
  ?associatedArtist a dbo:Musician ;
                   a dbo:Artist .
}
```",4,6,5,3,2,3,3,71,0,0,15,0,0.0,0
158,12,train,"Give me the party of the successor, that is a prime minister and an office holder and a politician, of André Tardieu and entity in France.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v0 <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?party WHERE {
  # André Tardieu as Prime Minister of France
  dbr:André_Tardieu dbo:positionHeld [
    a dbo:Office ;
    dbo:officeHolder dbr:André_Tardieu ;
    dbo:country dbr:France ;
    dbo:positionName ""Prime Minister"" .
  ] .

  # Find the successor who is also a Prime Minister
  ?successor dbo:positionHeld [
    a dbo:Office ;
    dbo:officeHolder ?successor ;
    dbo:country dbr:France ;
    dbo:positionName ""Prime Minister"" ;
    dbo:predecessor dbr:André_Tardieu .
  ] .

  # Ensure the successor is also a politician and office holder
  ?successor a dbo:Politician ;
             dbo:officeHolder ?office .

  # Retrieve the political party of the successor
  ?successor dbo:party ?party .
}
```",3,6,4,2,2,3,2,20,0,0,1,0,0.0,0
166,1,train,Give me the entity in Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Spain .
}
```",1,1,2,1,1,3,2,20,77,1985,11767,0.03734238603297769,0.0065011820330969266,0.011074356392923916
267,7,train,"Give me the coach of the player, that is a soccer club, in Rasoul Khatibi.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/coach> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coach WHERE {
  ?player dbo:playsFor dbr:Rasoul_Khatibi .
  ?player dbo:coach ?coach .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
965,27,train,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  # Identify George Mountbatten, 2nd Marquess of Milford Haven by his birth name
  dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbo:birthName ?birthName .
  
  # Find the parent relationship
  ?person dbo:birthName ?birthName ;
          dbo:parent ?parent .

  # Retrieve the name of the parent
  ?parent rdfs:label ?parentName .
  
  FILTER(LANG(?parentName) = 'en')
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
433,12,train,Give me the associated musical artist of Bill Evans and professional in Musician.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find Bill Evans and his associated artists
  ?billEvans a dbo:MusicalArtist ;
             foaf:name ""Bill Evans"" .
  
  # Look for associations with other musical artists
  ?association dbo:associatedBandOrMusicalGroup ?billEvans ;
               dbo:associatedBandOrMusicalGroup ?artist .

  # Ensure the associated artist is also a musician
  ?artist a dbo:MusicalArtist ;
          dbo:profession dbr:Musician .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
773,3,train,Give me the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?person dbo:child dbr:Bernard_I_of_Italy .
  ?person dbo:spouse ?spouse .
  OPTIONAL { ?spouse dbo:child dbr:Bernard_I_of_Italy . }
  FILTER (?person = dbr:Charles_the_Fat)
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
773,14,train,"Give me the parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find Louis the German's children who are royals
  ?child dbo:spouse ?royal .
  ?royal dbo:father dbr:Louis_the_German .

  # Get the parent of this child (who is a royalty)
  ?child dbo:parent ?parent .
}
```

This query assumes that:
- `dbo:spouse` can be used to identify relationships where one party is a royal.
- `dbo:father` identifies Louis the German as the father.
- `dbo:parent` gives us the parent of the child.",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
791,25,train,"Give me the predecessor of Emperor Antoku and father of the child, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?father WHERE {
  dbr:Emperor_Antoku dbo:successorOf ?predecessor .

  dbr:Emperor_Takakura dbo:child ?royaltyChild .
  
  ?royaltyChild rdf:type dbo:Monarch .

  ?royaltyChild dbo:father ?father .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
917,39,train,"Give me the child of Kekūanāoʻa and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfChild WHERE {
  # Kekūanāoʻa and his children
  dbr:Kekūanāoʻa a dbo:Person ;
    dbo:child ?kekuanaoaChild .

  # Father of Kekūanāoʻa's child is Kekūanāoʻa himself, find his other children
  dbr:Kekūanāoʻa a dbo:Person ;
    dbo:child ?otherChildOfKekuanaoa .
  
  # Ensure the person is royalty
  FILTER EXISTS { ?otherChildOfKekuanaoa dbo:royaltyType ?royalty . }

  # The child of Kekūanāoʻa's child (i.e., grandchild of Kekūanāoʻa)
  ?kekuanaoaChild a dbo:Person ;
    dbo:child ?childOfChild .

  # Ensure the grandchild is royalty
  FILTER EXISTS { ?childOfChild dbo:royaltyType ?grandchildRoyalty . }
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
874,6,train,Give me the band of Robert Hart (musician) and band of Manfred Mann (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Robert_Hart_(musician)> . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Manfred_Mann_(musician)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?musician ?bandName WHERE {
  VALUES ?musician { 
    dbr:Robert_Hart_(musician) 
    dbr:Manfred_Mann
  }
  
  OPTIONAL {
    ?musician dbo:band ?band .
    ?band rdfs:label ?bandName .
    FILTER (lang(?bandName) = 'en')
  }
}
ORDER BY ?musician",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
573,3,train,Give me the real name of Charlie Baker (Australian footballer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
SELECT ?realName WHERE {
  wd:Q1234568 foaf:name ""Charlie Baker""@en .
  OPTIONAL { wd:Q1234568 schema:givenName ?firstName . }
  OPTIONAL { wd:Q1234568 schema:familyName ?lastName . }
  OPTIONAL { wd:Q1234568 schema:name ?realName . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
715,28,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in Spanish Civil War and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Commander in military conflict with Abd el-Krim
  ?conflict dbo:commander ?person ;
            dbo:opposingCommander dbr:Abd_el-Krim .

  # Commander during the Spanish Civil War
  ?civilWarConflict dbo:commander ?person ;
                   dbo:location dbr:Spain ;
                   dbo:date ""1936-04-18""^^xsd:date^^^xsd:string .
  
  # Leader of Ministry of the Air (Spain)
  ?ministryPosition dbo:positionHolder ?person ;
                    dbo:organization dbr:Ministry_of_the_Air_(Spain) .

}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
933,37,train,Give me the reference to the birth name of the professional in Musician and band of The Ramong Sound.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  dbr:Paul_McCartney dbo:musicArtist dbr:The_Beatles .
  dbr:Paul_McCartney foaf:name ?birthName .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
83,1,train,Give me the party of Alceu Collares.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alceu_Collares> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  dbpedia:Alceu_Collares dbo:politicalParty ?party .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
965,32,train,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the child, that is a royalty, of Prince Louis of Battenberg.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse WHERE {
  # Step 1: Princess Victoria of Hesse and by Rhine
  ?princessVictoria a dbo:Person ;
                   foaf:name ""Princess Victoria of Hesse and by Rhine""@en .

  # Step 2: Her spouse, Prince Louis of Battenberg
  ?princeLouis a dbo:Person ;
              foaf:name ""Prince Louis of Battenberg""@en ;
              dbo:spouse ?princessVictoria .

  # Step 3: Their child who is royalty, Princess Alice
  ?princessAlice a dbo:Person ;
                foaf:name ""Princess Alice, Grand Duchess of Hesse""@en ;
                dbo:parent ?princeLouis ;
                dbo:parent ?princessVictoria .

  # Step 4: Spouse of Princess Alice, Louis IV
  ?louisIV a dbo:Person ;
           foaf:name ""Louis IV, Grand Duke of Hesse""@en ;
           dbo:spouse ?princessAlice .

  # Step 5: Spouse of Louis IV, Princess Alice of the United Kingdom
  ?aliceOfUK a dbo:Person ;
             foaf:name ""Princess Alice of the United Kingdom""@en ;
             dbo:spouse ?louisIV .

  # Result: The spouse of the spouse of Princess Victoria's spouse
  BIND(?aliceOfUK AS ?spouseOfSpouse)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
495,14,train,Give me the father of the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  # Step 1: Get the parent of Princess Pauline of Württemberg
  dbpedia:Princess_Pauline_of_W%C3%BCrttemberg dbo:parent ?parent .

  # Step 2: Find children of that parent
  ?child dbo:parent ?parent .
  
  # Step 3: Get the father of those children
  ?child dbo:father ?father .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
329,15,train,Give me the entity in Northern Ireland and birthplace of the author of The Tailor and Ansty.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?author dbo:birthName ""Seamus Heaney""@en .
  ?author dbo:birthPlace ?birthPlace .
  FILTER (CONTAINS(LCASE(str(?birthPlace)), ""northern ireland""))
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
433,17,train,Give me the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  ?album dbo:artist dbr:Eric_Clapton .
  ?album rdfs:label ""Slowhand at 70 – Live at the Royal Albert Hall""@en .
  OPTIONAL { ?person dbo:occupation ?profession . }
  FILTER(?person = dbr:Eric_Clapton)
}
```",2,2,3,2,1,3,3,71,0,0,11,0,0.0,0
791,17,train,"Give me the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Emperor Antoku's father
  ?father a dbo:Monarch ;
          dbo:spouse ?mother ;
          dbo:child dbr:Emperor_Antoku .

  # Ensure the father is an office holder and royalty
  ?father dbo:officeHolderOf ?office .
  
  # Find children of this father who are royalty
  ?father dbo:child ?child .
  ?child a dbo:Monarch .
}
```

This query does the following:
- Identifies Emperor Antoku's father (`?father`) by checking if he is a monarch and has Emperor Antoku as a child.
- Ensures that this father holds an office, confirming his status as an office holder.
- Finds children of this father who are also monarchs (royalty).",2,5,3,2,1,3,3,71,0,0,3,0,0.0,0
976,14,train,Give me the office of the person born as Mehmet Naci Bostancı.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office
WHERE {
  VALUES ?person { dbr:Mehmet_Naci_Bostancı }
  ?person dbo:office ?office .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
573,4,train,"Give me the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/governor> ""Charlie Baker""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?person a dbo:Governor ;
          foaf:name ""Charlie Baker""@en .
  ?person dbo:stateOrTerritory dbr:Massachusetts .
  ?administration dbo:governor ?person ;
                  a dbo:AdministrativeRegion .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
839,4,train,"Give me the person born, that is a musical artist, as Kevin Richard Russell.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthName ""Kevin Richard Russell"" .
  ?person a dbo:MusicalArtist .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
47,21,train,Give me the office of the administration of Jagdeep Dhankhar and office of Ajoy Mukherjee.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?officeName WHERE {
  VALUES ?person { 
    dbr:Jagdeep_Dhankhar 
    dbr:Ajoy_Mukherjee
  }
  
  ?person dbo:positionHeld ?office .
  ?office rdfs:label ?officeName .
  FILTER (lang(?officeName) = 'en')
}
ORDER BY ?person",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
417,2,train,Give me the child of Alexandrine of Mecklenburg-Schwerin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  
  FILTER (
    ?person = dbr:Alexandrine_of_Mecklenburg-Schwerin
  )
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
976,16,train,"Who is the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı?","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor WHERE {
  # Identify Millet İttifakı as a political party in Turkey
  dbr:Millet_İttifakı dbo:country dbr:Türkiye ;
                      a dbo:PoliticalParty .

  # Find the mayor who is a politician, office holder, and Turkish
  ?mayor dbo:nationality dbr:Türkiye ;
         dbo:officeHolderOf ?party ;
         a dbo:Politician , dbo:OfficeHolder .

  # Ensure the party is Millet İttifakı
  FILTER(?party = dbr:Millet_İttifakı)
}
```",2,8,3,2,1,3,3,71,0,0,1,0,0.0,0
495,5,train,Give me the child of Princess Charlotte of Saxe-Hildburghausen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Princess_Charlotte_of_Saxe-Hildburghausen dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
955,12,train,"Give me the band of the band member, that is a musical artist and an artist, of Street Dogs and band of Nate Albert.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nate_Albert> . ?result <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band WHERE {
  # Find Nate Albert and his association with Street Dogs
  ?nateAlbert a dbo:MusicalArtist ;
              foaf:name ""Nate Albert"" ;
              dbo:memberOfBand ?streetDogs .

  # Ensure Street Dogs is the band in question
  ?streetDogs dbp:name ""Street Dogs"" .

  # Find other bands Nate Albert is associated with
  ?nateAlbert dbo:memberOfBand ?band .
  
  FILTER(?band != ?streetDogs) # Exclude Street Dogs itself
}
```

This query does the following:
- Identifies Nate Albert as a `MusicalArtist`.
- Confirms his membership in Street Dogs.
- Retrieves other bands he is associated with, excluding Street Dogs.",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
773,16,train,"Give me the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Louis the Pious
  dbr:Louis_the_Pious dbo:child ?royalChild .
  
  # Ensure the child is royalty (e.g., king or emperor)
  ?royalChild a ?royaltyClass .
  FILTER (
    ?royaltyClass = dbo:King OR 
    ?royaltyClass = dbo:Emperor
  )
  
  # Find the successor of this royal child
  ?royalChild dbo:succeededBy ?successor .
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
36,6,train,Give me the actor of Being Mrs Elliot and person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""Being Mrs. Elliot""@en .
  FILTER NOT EXISTS { ?movie dbo:abstract ?abstract . FILTER (CONTAINS(LCASE(?abstract), ""fictional character"")) }
  ?actor dbo:birthdayYear ?year .
  FILTER (?year = 1971)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
987,14,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .
}
```

This query selects entities that are classified as countries (`dbo:Country`) and have the time zone `dbr:Central_European_Time`.",2,3,3,2,1,3,3,71,0,0,173261,0,0.0,0
933,14,train,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:instrument ?instrument .
  ?person foaf:name ""Alan Warner"" .
  ?person dbo:member ?organization .
  ?organization a dbo:Band ;
                dbo:bandMember ?person .
  OPTIONAL { ?organization dbo:band ?band . }
  FILTER(?band != """")
}
```",2,5,3,2,1,3,3,71,0,0,4,0,0.0,0
579,1,train,Give me the person born as Isobel Jane Miller Richard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Isobel Jane Miller Richard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person rdfs:label ""Isobel Jane Miller""@en . }
  OPTIONAL { ?person dbo:birthName ""Isobel Jane Miller"" . }
  OPTIONAL { ?person rdfs:label ""Richard""@en . }
}
```",1,1,2,1,1,3,2,20,1,1048575,0,9.5367431640625e-07,1.0,1.9073468138248312e-06
102,3,train,Give me the player in Ellie Roebuck.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?player a dbo:Athlete .
  ?player foaf:name ""Ellie Roebuck""@en .
}
```

This query assumes that Ellie Roebuck is categorized under the class `dbo:Athlete` and uses the `foaf:name` property to match her name. Adjustments might be necessary depending on how DBpedia categorizes or labels individuals.",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
826,8,train,Who is the parent of Prince Friedrich of Hesse and by Rhine?,SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?person { dbr:Friedrich_of_Hesse_and_by_Rhine }
  ?person dbo:father|dbo:mother ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
170,12,train,Give me the domain of Mayor and entity in Russia and birth place of Era Ziganshina.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mayorDomain ?entityInRussiaDomain ?eraZiganshinaBirthPlace
WHERE {
  # Find the domain of ""Mayor""
  ?mayor rdfs:subClassOf* dbo:Mayor .
  ?mayor rdfs:domain ?mayorDomain .

  # Find the domain of ""entity in Russia""
  ?russiaEntity rdfs:subClassOf* dbr:Russia .
  ?russiaEntity rdfs:domain ?entityInRussiaDomain .

  # Find the birthplace of Era Ziganshina
  OPTIONAL {
    dbr:Era_Ziganshina dbo:birthPlace ?eraZiganshinaBirthPlace .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
170,1,train,Give me the birth place of Era Ziganshina.,SELECT ?result WHERE { <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:QXXXXX dbo:birthPlace ?birthPlace .
}
```

Note: Replace `wd:QXXXXX` with the actual DBpedia identifier (QID) for Era Ziganshina. You can find this by searching for her on DBpedia or using a SPARQL endpoint to query for her name.",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
554,12,train,Give me the leader of the birth place of The Legendary Tigerman and leader of Portuguese São Tomé and Príncipe.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?result . <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Portuguese_São_Tomé_and_Príncipe> <http://dbpedia.org/property/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?leaderTigermanBirthplace ?leaderSTP WHERE {
  # Find the birthplace of The Legendary Tigerman
  dbr:The_Legendary_Tigerman dbo:birthPlace ?birthPlace .

  # Get the leader (president) of the birthplace
  ?birthPlace dbp:governmentHead ?leaderTigermanBirthplace .
  
  # Get the leader (president) of São Tomé and Príncipe
  dbr:São_Tomé_and_Príncipe dbp:headOfState ?leaderSTP .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
382,7,train,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:SoccerManager ;
          dbo:managerOf dbr:Bonner_SC ;
          dbo:sport dbr:Soccer .
  ?person dbo:athlete true .
  ?person dbo:occupation dbr:Sports_Manager .
  ?person dbp:birthPlace ?birthPlace .
}
```

This query assumes that the manager's roles as a soccer manager, athlete, and sports manager are represented in DBpedia with these properties. It selects the birthplace of such an individual who is also associated with Bonner SC.",2,5,3,2,1,3,2,20,0,0,2,0,0.0,0
267,14,train,Give me the person born on the birth date of the reference to Dan Cathy.,"SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthdate WHERE {
  # Get Dan Cathy's birthdate
  VALUES (?danCathy) { dbr:Dan_Cathy }
  ?danCathy dbo:birthday ?birthdate .

  # Find other people with the same birthdate
  ?person a dbo:Person .
  ?person dbo:birthday ?sameBirthdate .
  
  FILTER(?person != ?danCathy)
  FILTER(?sameBirthdate = ?birthdate)
}
ORDER BY ?person",3,3,4,3,1,3,2,20,0,0,35,0,0.0,0
417,32,train,"Give me the child of the father of Frederick IX of Denmark and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mother WHERE {
  # Frederick IX of Denmark
  dbr:Frederick_IX_of_Denmark dbo:father ?father .
  
  # Father's child is Frederick IX himself
  ?child dbo:father ?father .
  FILTER(?child = dbr:Frederick_IX_of_Denmark)
  
  # Spouse of the father (mother of Frederick IX)
  ?father dbo:spouse ?mother .

  # Count Ingolf of Rosenborg's parent who is royalty
  dbr:Count_Ingolf_of_Rosenborg dbo:parent ?parent .
  FILTER(STRSTARTS(STR(?parent), ""http://dbpedia.org/resource/Category:Royalty""))

  # Check if the mother matches the criteria
  OPTIONAL { ?mother rdfs:label ?label . }
  FILTER(CONTAINS(LCASE(?label), ""royalty""))
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
341,5,train,Give me the band member of the awardee of List of awards and nominations received by Beyoncé.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Beyoncé> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify Beyoncé's DBpedia resource
  dbr:Beyoncé a dbo:MusicalArtist .

  # Step 2: Find awards she has won
  ?award dbo:recipient dbr:Beyoncé .
  
  # Step 3: Check if the award is associated with any band members
  OPTIONAL {
    ?award dbo:bandMember ?bandMember .
  }
}
```",2,2,3,2,1,2,2,9,0,0,50,0,0.0,0
166,13,train,"Give me the resting place of the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?restingPlace WHERE {
  # Find Manuel Hedilla
  dbr:Manuel_Hedilla dbo:associatedWith ?militaryForce .
  
  # Find the resting place of the military force
  ?militaryForce dbo:location ?restingPlace .
}
```",3,6,4,3,1,3,2,20,0,0,36,0,0.0,0
326,4,train,"Give me the person decedent at Rancho Mirage, California and professional in Composer.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Rancho_Mirage,_California> . ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation dbr:Composer .
  ?person dbo:deathPlace dbr:Rancho_Mirage,_California .
}
```

This query selects persons who have the occupation of Composer and died in Rancho Mirage, California.",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
892,35,train,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession ?region
WHERE {
  # Find Henri Crolla's profession
  dbr:Henri_Crolla dbo:occupation ?profession .

  # Find an Italian region that is a settlement, administrative region, and part of the Democratic Party (Italy)
  ?region a dbo:Settlement ;
          a dbo:AdministrativeRegion ;
          dbp:country dbr:Italy ;
          dbp:governingParty dbr:Democratic_Party_(Italy) .
}
```",4,8,5,2,2,3,3,71,0,0,587,0,0.0,0
216,11,train,Give me the administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?administration
WHERE {
  # Find the designer of ""Woolfe: The Red Hood Diaries""
  ?game dbo:designer ?person .
  
  FILTER (str(?game) = ""Woolfe:_The_Red_Hood_Diaries"")

  OPTIONAL {
    ?person dbo:officeHeld ?administration .
  }
}
```

This query does the following:
- It looks for a game resource with the designer property pointing to a person.
- Filters this to specifically find the game ""Woolfe: The Red Hood Diaries.""
- Optionally retrieves any administrative roles (offices held) associated with that person.",2,2,3,2,1,2,3,28,0,0,1099,0,0.0,0
892,6,train,Give me the award of Anna Ishii.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person foaf:name ""Anna Ishii""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
791,13,train,Give me the predecessor of the child of Emperor Takakura.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Find Emperor Takakura's children
  ?child dbo:parent dbr:Emperor_Takakura ;
         a dbo:Monarch .

  # For each child, find their predecessor
  ?child dbo:successor ?successor .
  
  # Get the predecessor of the successor (the child)
  ?predecessor dbo:successor ?child .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
216,2,train,Give me the administration of .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  VALUES ?country { dbr:CountryName }
  ?country dbo:government ?administration .
}
```",1,1,2,1,1,2,3,28,0,0,1099,0,0.0,0
645,11,train,Give me the commander in the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Carlos Asensio Cabanillas""@en .
  
  OPTIONAL { 
    ?person dbp:commander ?commander .
  }
}
```",2,2,3,2,1,3,3,71,0,0,51,0,0.0,0
573,25,train,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?author dbo:profession dbr:Politician ;
          dbo:officeHolder true ;
          dbo:deathPlace dbr:Quincy,_Massachusetts ;
          dbo:work dbr:Exchequer_Standards .
  
  ?author dbp:parents ?parent .
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
955,4,train,"Give me the reference, that is a band and a group and an organisation, to Street Dogs.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  VALUES ?band { dbr:Street_Dogs }
  ?reference a dbo:Band ;
             dbo:member ?member .
  FILTER EXISTS { ?member dbo:associatedBand ?band . }
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
273,3,train,Give me the child of Giovanni Agnelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:spouse|dbo:partner ?spouse .
  ?spouse dbo:child ?child .
  FILTER(?person = dbpedia:Giovanni_Agnelli)
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
965,25,train,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person1 dbo:birthName ""Prince George of Battenberg""@en .
  ?person1 dbo:spouse ?person2 .
  ?person2 foaf:name ""Louise Mountbatten""@en .

  OPTIONAL { ?person1 dbo:child ?child . }
  OPTIONAL { ?person2 dbo:child ?child . }

  FILTER(?child != ?person1 && ?child != ?person2)

  ?parent dbo:child ?child .
}
```

This query does the following:
- Identifies `?person1` as Prince George of Battenberg using his birth name.
- Finds `?person2`, who is Louise Mountbatten, by checking for a spouse relationship with `?person1`.
- Uses optional patterns to find children (`?child`) related to both `?person1` and `?person2`.
- Retrieves the parent (`?parent`) of these children.",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
865,37,train,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of Shahla Khatun.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  ?spouse a dbo:Spouse ;
          foaf:name ""Syeda Shahar Banu""@en .
  
  ?child dbo:parent ?spouse ;
         dbo:occupation dbo:Politician ;
         dbo:parent ?father .

  ?shahla dbo:parent ?father ;
          foaf:name ""Shahla Khatun""@en .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
978,9,train,"Who is the professional, that is a musical artist and an artist, in the award of Michel Claparède?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person a dbo:Artist .
  ?award dbo:recipient ?person ;
         rdfs:label ""Michel Claparède"" .
}
```

This query does the following:
- Selects individuals (`?person`) who are both `dbo:MusicalArtist` and `dbo:Artist`.
- Filters these individuals to those who have received an award with a label containing ""Michel Claparède"".

Please note that this assumes there is a direct relationship between awards and recipients in DBpedia, which may not always be the case. Adjustments might be necessary based on the actual structure of DBpedia data.",2,4,3,2,1,3,2,20,0,0,8677,0,0.0,0
365,13,train,"Give me the person born as the birth name of the commander, that is an office holder, in Ukrainian–Soviet War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  ?person dbo:officeHolderOf ?event .
  ?event rdfs:label ""Ukrainian–Soviet War""@en .
  ?person dbo:commanderOf ?army .
  ?person dbp:birthName ?birthName .
}
```

This query does the following:
- Selects individuals (`?person`) who are office holders of an event labeled as ""Ukrainian–Soviet War"".
- Ensures these individuals also held a commander role.
- Retrieves their birth name.",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
281,17,train,"Give me the awardee of Volunteer Decoration and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?result <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?volunteerDecorationAwardee ?militaryConflict WHERE {
  # Find the resource for Lawrence Moore Cosgrave
  ?cosgrave a dbo:Person ;
            foaf:name ""Lawrence Moore Cosgrave"" .

  # Find the Volunteer Decoration award and its awardees
  ?award dbo:recipient ?cosgrave ;
         rdfs:label ""Volunteer Decoration""@en .
  
  # Get all recipients of the Volunteer Decoration
  ?volunteerDecorationAwardee dbo:recipientOfAward ?award .

  # Find any military conflict associated with Lawrence Moore Cosgrave's award
  OPTIONAL {
    ?cosgrave dbo:awardedForMilitaryConflict ?militaryConflict .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
935,4,train,"Give me the native of Balochistan, Pakistan.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . }","```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?language WHERE {
  ?region dbp:name ""Balochistan, Pakistan""@en .
  ?region dbo:officialLanguage ?language .
}
```",1,1,2,1,1,3,2,20,0,0,57,0,0.0,0
791,21,train,"Give me the father of Emperor Go-Toba and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherOfGoToba WHERE {
  # Find Emperor Go-Toba's father
  ?goToba dbo:spouse ?mother .
  ?mother dbo:child ?goToba .
  ?goToba dbp:name ""Emperor Go-Toba""@en .

  ?fatherOfGoToba dbo:spouse ?mother .
  ?fatherOfGoToba dbo:child ?goToba .

  # Find Emperor Takakura's spouse
  ?takakura dbo:spouse ?spouseOfTakakura .
  ?takakura dbp:name ""Emperor Takakura""@en .

  # Find the spouse of Emperor Takakura's spouse, ensuring they are royalty
  ?spouseOfTakakura dbo:spouse ?royaltySpouse .
  ?royaltySpouse a dbo:Monarch .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
83,0,train,Give me the ruling party in Fortaleza.,SELECT ?result WHERE { <http://dbpedia.org/resource/Fortaleza> <http://dbpedia.org/property/leaderParty> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?city rdfs:label ""Fortaleza""@en .
  ?city dbo:government ?government .
  ?government dbo:headOfGovernment ?leader .
  ?leader dbo:politicalParty ?party .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
955,1,train,Give me the band of Johnny Rioux.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Rioux> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person foaf:name ""Johnny Rioux""@en .
  ?person dbo:musicGroup ?band .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
445,27,train,Give me the entity in the award of the commander in Battle of Saint-Mihiel.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?award WHERE {
  # Find the battle event
  ?battle dbo:eventLocation dbr:Battle_of_Saint-Mihiel .
  
  # Identify the commander of the battle
  ?battle dbo:commander ?commander .

  # Check if the commander received any awards
  ?commander dbo:award ?award .
}
```

This query assumes that DBpedia has structured data linking battles to their commanders and any awards those commanders might have received. Adjustments may be necessary based on actual schema details in DBpedia.",3,3,4,3,1,3,3,71,0,0,87241,0,0.0,0
645,8,train,"Give me the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office WHERE {
  ?person foaf:name ""Camilo Menéndez Tolosa""@en .
  ?person dbo:agent ?office .
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type org:Organization .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
645,21,train,Give me the leader of Ministry of the Army (Spain) and commander in the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?leader ?commander WHERE {
  # Find the leader of the Ministry of the Army in Spain
  ?ministry a dbo:GovernmentMinistry ;
            dbo:country dbr:Spain ;
            dbo:leader ?leader .
  
  # Find Carlos Asensio Cabanillas and his commander role
  ?person foaf:name ""Carlos Asensio Cabanillas""@en ;
          dbo:commanderInForce ?commander .

}
```

This query assumes that the Ministry of the Army is represented as a `GovernmentMinistry` in DBpedia, which might need adjustment based on actual data. The query looks for entities related to Spain and checks for leadership roles.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
976,10,train,Give me the office of Mustafa Şentop and office of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeName WHERE {
  VALUES ?person { 
    dbr:Mustafa_Şentop 
    dbr:Naci_Bostancı
  }
  
  ?person dbo:positionHeld ?office .
  ?office rdfs:label ?officeName .
  FILTER (lang(?officeName) = 'en')
}
ORDER BY ?person",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
158,9,train,"Give me the award, that is a country, of the reference to Adelbert Cronkhite.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/awards> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?country WHERE {
  ?person a dbo:Person ;
          foaf:name ""Adelbert Cronkhite""@en .
  
  OPTIONAL { ?person dbo:award ?award . }
  OPTIONAL { ?person dbo:nationality ?nationality . }

  ?nationality rdfs:label ?country .
  FILTER (lang(?country) = 'en')
}
```

This query does the following:
- It looks for a DBpedia resource representing Adelbert Cronkhite as a `dbo:Person`.
- It retrieves any awards (`dbo:award`) associated with this person.
- It also fetches the nationality of the person, which is linked to a country via `rdfs:label`.

Note that the query assumes the existence of an English label for both the award and the country. Adjustments might be necessary depending on the actual data available in DBpedia.",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
527,2,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?actor ?actorLabel WHERE {
  ?actor a dbo:Actor .
  OPTIONAL { ?actor rdfs:label ?actorLabel . FILTER (lang(?actorLabel) = ""en"") }
}
LIMIT 10
```",1,1,2,1,1,3,2,20,3,17,21577,0.15,0.00013901760889712696,0.0002777777777777778
465,32,train,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Step 1: Find a child of Alfonso I d'Este
  ?childAlfonso dbo:parent dbr:Alfonso_I_d%27Este ;
               dbo:sibling ?sibling .

  # Step 2: Find a child of Ferdinand I who is royalty and their spouse
  ?royaltyChild dbo:parent dbr:Ferdinand_I,_Holy_Roman_Emperor ;
                rdf:type dbo:Royalty ;
                dbp:spouse ?spouse .

  # Ensure the spouse is related to the sibling found in step 1
  ?sibling dbp:spouse ?spouse .

  # Step 3: Find the successor of the child of Alfonso I d'Este
  ?successor dbo:succeededBy ?childAlfonso .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
129,14,train,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artistOrganization WHERE {
  # Find actors associated with ""Dreamville Presents: Revenge""
  ?event dbo:performer ?actor .
  ?actor dbo:profession dbr:Actor .

  FILTER regex(str(?event), ""Dreamville Presents: Revenge"", ""i"")

  # Find musical artist organizations associated with the actor
  ?actor dbo:associatedMusicalArtistOrganization ?artistOrganization .

  # Ensure the organization is professional in music
  ?artistOrganization a dbo:MusicalGroup .
  ?artistOrganization dbo:genre dbr:Hip_hop_music .
}
```",3,4,4,2,2,2,3,28,0,0,3,0,0.0,0
888,9,train,"Give me the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Identify the event of War in Donbas
  VALUES ?event { dbr:War_in_Donbass_(2014–2022) }
  
  # Find entities related to this event that are classified as societal events and military forces
  ?event dbo:wikiPageRedirects ?relatedEvent .
  ?relatedEvent a dbo:SocietalEvent ;
                dbo:militaryForce ?force .

  # Ensure the force is also an event
  ?force a dbo:Event .
}
```

This query does the following:
- It identifies the War in Donbas as the main event.
- It looks for related events that are classified under `SocietalEvent` and have a military force associated with them.
- It ensures that the identified military force is also an event.",2,4,3,2,1,3,2,20,0,0,24,0,0.0,0
273,6,train,Give me the parent of Gianni Agnelli and spouse of Edoardo Agnelli (industrialist).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Edoardo_Agnelli_(industrialist)> . <http://dbpedia.org/resource/Gianni_Agnelli> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfGianniAgneilli ?spouseOfEdoardoAgnelli
WHERE {
  # Find Gianni Agnelli and his parent
  ?gianniAgneilli dbo:birthName ""Gianni Agnelli"" .
  ?gianniAgneilli dbo:fatherOrMother ?parentOfGianniAgneilli .

  # Find Edoardo Agnelli (industrialist) and his spouse
  ?edoardoAgnelli dbp:occupation ""Industrialist""@en .
  ?edoardoAgnelli dbo:birthName ""Edoardo Agnelli"" .
  ?edoardoAgnelli dbo:spouse ?spouseOfEdoardoAgnelli .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
839,39,train,"Give me the band of Peter Schorowsky and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band1 ?band2 WHERE {
  # Find Peter Schorowsky's band
  ?person a dbo:Musician ;
          foaf:name ""Peter Schorowsky"" .
  
  ?person dbo:memberOfBand ?band1 .

  # Check if the band is associated with another musical artist
  OPTIONAL {
    ?band1 dbo:memberOfBand ?band2 .
    ?band2 a dbo:MusicalArtist .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
417,25,train,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of Christian X of Denmark.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Frederick Francis III, Grand Duke of Mecklenburg-Schwerin
  ?frederick a dbo:Person ;
             dbp:spouse ?spouse .

  # Christian X of Denmark
  ?christianX a dbo:Person ;
              dbp:father ?spouse .

  # Child of Frederick Francis III (Christian X)
  ?child a dbo:Person ;
         dbp:parent ?frederick ;
         dbp:parent ?christianX .

  # Grandchild of Frederick Francis III and child of Christian X
  ?grandchild a dbo:Person ;
              dbp:parent ?child ;
              dbp:title ?title .
  
  FILTER (CONTAINS(LCASE(?title), ""royalty""))
}
```

This query does the following:
- Identifies Frederick Francis III and his spouse.
- Finds Christian X of Denmark as the child of Frederick's spouse.
- Determines the children of both Frederick and Christian X, identifying Christian X as their common parent.
- Searches for grandchildren of Frederick who are also children of Christian X and have a title containing ""royalty"".",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
987,4,train,"Who is the band, that is an artist and a musical artist, of Šako Polumenta?",SELECT ?result WHERE { <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?band a dbo:Band ;
        dbo:member dbr:Šako_Polumenta .
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
965,12,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and parent of Louise Mountbatten.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?george dbo:parent ?parent .
  FILTER(STR(?george) = ""George_Mountbatten,_2nd_Marquess_of_Milford_Haven"")
  
  ?louise dbo:parent ?parent .
  FILTER(STR(?louise) = ""Louise_Mountbatten"")
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
892,11,train,Give me the entity in the profession of Henri Crolla.,SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession WHERE {
  ?person dbp:name ""Henri Crolla""@en .
  ?person dbo:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,0,1,13092,0.0,0.0,0
976,6,train,"Who is the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayor ?mayorName WHERE {
  ?mayor a dbo:Mayor ;
         dbo:nationality dbr:Turkey ;
         dbo:partyAffiliation dbr:Nation_Alliance_(Turkey) .
  
  OPTIONAL { ?mayor rdfs:label ?mayorName . FILTER (lang(?mayorName) = 'en') }
  
  ?mayor dbo:occupation [ a dbo:Politician, dbo:OfficeHolder ] .
}
```

This query does the following:
- Selects individuals who are classified as `dbo:Mayor`.
- Ensures they have Turkish nationality (`dbo:nationality`).
- Confirms their affiliation with the Nation Alliance (Turkey) using `dbo:partyAffiliation`.
- Checks that they are both a politician and an office holder.
- Optionally retrieves their name in English.",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
417,19,train,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of Christian X of Denmark.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?count dbo:parent ?parent .
  FILTER (?count = dbpedia:Ingolf_of_Rosenborg) .

  ?parent a dbo:Monarch ;
          dbo:childOf dbpedia:Christian_X_of_Denmark .

  ?parent dbo:spouse ?spouse .
}
```

This query does the following:
- Selects `?spouse` of the parent who is royalty.
- Ensures that Count Ingolf of Rosenborg's parent (`?parent`) is a monarch and a child of Christian X of Denmark.
- Retrieves the spouse of this royal parent.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
353,0,train,Give me the alma mater of Daniil Yegorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniil_Yegorov> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  ?person a dbo:Person ;
          foaf:name ""Daniil Yegorov""@en .
  ?person dbo:almaMater ?university .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
456,13,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?professional WHERE {
  wd:Q1234568 wdt:P136 ?professional .
}
```

Note: In this query, `wd:Q1234568` should be replaced with the actual DBpedia resource identifier for ""The Shadow"" if it exists. You may need to look up or verify the correct identifier in DBpedia.",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
554,4,train,"Who is the band, that is an artist, of Rita Redshoes?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?artist a dbo:MusicalArtist ;
          foaf:name ""Rita Redshoe""@en .
  
  ?band dbo:member ?artist ;
        a dbo:Band .

  FILTER (lang(?bandLabel) = 'en')
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
865,21,train,"Give me the father of Shahla Khatun and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
SELECT ?fatherOfShahlaKhatun ?nativeCountryOfRamJaipalSinghYadav WHERE {
  # Find the father of Shahla Khatun
  ?shahlaKhatun dbo:spouse ?person .
  ?person foaf:parent ?fatherOfShahlaKhatun .

  # Find the native country (residence) of Ram Jaipal Singh Yadav
  dbpedia:Ram_Jaipal_Singh_Yadav dbo:nativePlace ?nativeCountryOfRamJaipalSinghYadav .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
281,15,train,"Give me the commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of Volunteer Decoration.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Find wars involving Roy Boehm
  ?war dbo:participant dbr:Roy_Boehm .
  
  # Identify commanders of those wars
  ?war dbo:commander ?commander .

  # Ensure the commander has received the Volunteer Decoration
  ?commander dbp:awards dbr:Volunteer_Decoration .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
47,15,train,"Give me the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?administration WHERE {
  # Find the operation
  ?operation dbo:wikiPageRedirects dbr:Operation_Green_Hunt .
  
  # Identify commanders involved in the operation
  ?operation dbo:participatedIn ?event .
  ?event dbo:agent ?commander .

  # Ensure the commander is a politician
  ?commander rdf:type dbo:Politician .

  # Find the administration they were part of
  ?commander dbp:officeHeld ?position .
  ?position dbo:partOf ?administration .
  
  FILTER (lang(?operation->rdfs:label) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,189,0,0.0,0
170,3,train,Give me the work of International Energy Agency.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . },"```sparql
SELECT ?work WHERE {
  wd:Q1116 dbo:wikiPageWikiLink ?work .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
129,3,train,Give me the mayor of 1999 West Dunbartonshire Council election.,SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor WHERE {
    ?election dbo:electionDate ?date .
    ?election dbo:electoralBody dbr:West_Dunbartonshire_Council .
    ?election dbo:winner ?mayor .
    
    FILTER (YEAR(?date) = 1999)
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
47,18,train,Give me the office of Suvendu Adhikari and office of Ajoy Mukherjee and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeTitle
WHERE {
  VALUES ?person { 
    dbr:Suvendu_Adhikari 
    dbr:Ajoy_Mukherjee 
    dbr:Bidesh_Ranjan_Bose 
  }
  
  OPTIONAL { ?person dbo:office ?office . }
  OPTIONAL { ?office dbo:title ?officeTitle . }
}
```",3,3,4,1,3,3,3,71,0,172834,1,0.0,0.0,0
917,16,train,"Who is the father of the spouse, that is a royalty, of Leleiohoku I?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Identify Leleiohoku I
  VALUES ?leleiohokuI { dbr:Leleiohoku_I }

  # Step 2: Find his spouse(s)
  ?leleiohokuI dbo:spouse ?spouse .

  # Step 3: Check if the spouse is royalty
  ?spouse a dbo:Monarch ;
          dbo:father ?father .
}
```

This query assumes that Leleiohoku I's spouse is also a monarch (royalty) and retrieves the father of that spouse.",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
715,18,train,Give me the commander in Rif War and commander in Spanish Civil War and leader of Ministry of the Air (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?role ?event WHERE {
  # Commander in Rif War
  { 
    ?person dbo:occupation dbr:General.
    ?person dbo:wikiPageDisambiguates ?rifWarCommander.
    ?rifWarCommander rdfs:label ""Rif War""@en .
    BIND(""Commander in Rif War"" AS ?role)
    BIND(dbr:""Rif War"" AS ?event)
  }
  
  UNION
  
  # Commander in Spanish Civil War
  { 
    ?person dbo:occupation dbr:General.
    ?person dbo:wikiPageDisambiguates ?spanishCivilWarCommander.
    ?spanishCivilWarCommander rdfs:label ""Spanish Civil War""@en .
    BIND(""Commander in Spanish Civil War"" AS ?role)
    BIND(dbr:""Spanish Civil War"" AS ?event)
  }
  
  UNION
  
  # Leader of Ministry of the Air (Spain)
  { 
    ?person dbo:occupation dbr:Minister_of_Air.
    ?person dbo:wikiPageDisambiguates ?ministryOfAirLeader.
    ?ministryOfAirLeader rdfs:label ""Ministry of the Air (Spain)""@en .
    BIND(""Leader of Ministry of the Air (Spain)"" AS ?role)
    BIND(dbr:""Ministry_of_the_Air_(Spain)"" AS ?event)
  }
}
ORDER BY ?person
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
507,28,train,"Give me the spouse of the person born as Anne Voase Coates and professional in Film director, television director and director of Entertaining Mr Sloane (film).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:FilmDirector ;
          foaf:name ""Anne Voase Coates""@en .
  OPTIONAL { ?person dbo:birthName ""Anne Voase Coates""@en . }
  OPTIONAL { ?person dbo:profession dbp:film_director, dbp:television_director . }
  OPTIONAL { ?person dbo:directedFilm <http://dbpedia.org/resource/Entertaining_Mr_Sloane> . }
  ?person dbo:spouse ?spouse .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
965,2,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  
  OPTIONAL { 
    ?person dbo:child ?child .
    ?child dbo:parent ?parent .
  }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
579,4,train,"Give me the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?officeHolder ?position WHERE {
  ?officeHolder a dbo:OfficeHolder ;
               dbo:nationality dbr:United_Kingdom ;
               dbo:birthPlace dbr:Edinburgh .
  
  OPTIONAL { ?officeHolder dbo:position ?position . }
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`), resources (`dbr`), and properties (`dbp`) to simplify the query.
- **SELECT**: We select individuals who are office holders and their positions.
- **FILTER by Birthplace**: The `dbo:birthPlace dbr:Edinburgh` ensures that we're looking at people born in Edinburgh.
- **Nationality**: While not strictly necessary for being a native, it's often useful to filter by nationality (e.g., United Kingdom) to narrow down results.

This query will return individuals who are office holders and were born in Edinburgh. Adjust the `dbo:nationality` if you want to refine the search further based on specific nationalities or other criteria.",1,2,2,1,1,3,2,20,0,0,88,0,0.0,0
715,12,train,Give me the commander in Spanish Civil War and leader of Ministry of the Air (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:positionTitle ?title .
  FILTER (
    CONTAINS(LCASE(?title), ""commander"") &&
    CONTAINS(LCASE(?title), ""ministry of the air"")
  )
  
  OPTIONAL { 
    ?person foaf:name ?name .
  }
  
  # Filter for Spanish Civil War context
  ?person dbo:spouse ?spouse .
  ?spouse dbo:nationality dbr:Spain .

  FILTER (
    EXISTS {
      ?event dbo:location dbr:Spanish_Civil_War .
      ?person dbo:role ?role .
      ?role dbo:event ?event .
    }
  )
}
ORDER BY ?name
LIMIT 10
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
445,2,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:United_Kingdom .
}
```",1,1,2,1,1,3,3,71,87,2691,42912,0.03131749460043196,0.0020233028675085466,0.003801035454485877
326,0,train,Give me the resident of Berkshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Berkshire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?resident WHERE {
  ?resident dbo:location dbr:Berkshire .
}
```",1,1,2,1,1,3,2,20,0,157,5,0.0,0.0,0
274,0,train,Give me the band member of Dizzy Gillespie.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . },"```sparql
SELECT ?member WHERE {
  wd:Q12345 wdt:P106 wd:Q33999 . # Dizzy Gillespie is a member of a band (P106: profession, Q33999: musician)
  ?band wdt:P527* wd:Q12345 .     # Find bands related to Dizzy Gillespie
  ?member wdt:P46 ?band .         # Members of the band
}
```",1,1,2,1,1,2,3,28,0,0,67,0,0.0,0
36,9,train,Give me the person born as Ayo Makun and person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Ayo Makun"" .
  ?person dbo:birthYear ""1971""^^xsd:gyear .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
773,32,train,Give me the parent of the successor of Charles the Bald and spouse of the father of Charles the Fat.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfSuccessor ?spouseOfFather
WHERE {
  # Step 1: Find Charles the Bald and his successor
  ?charlesTheBald a dbo:Monarch ;
                  foaf:name ""Charles II"" ; # Assuming DBpedia uses this name for Charles the Bald

  ?successor dbo:predecessorOrRegent ?charlesTheBald .

  # Step 2: Find the parent of the successor
  ?parentOfSuccessor dbo:child ?successor .

  # Step 3: Identify Charles the Fat and his father
  ?charlesTheFat a dbo:Monarch ;
                 foaf:name ""Charles III"" ; # Assuming DBpedia uses this name for Charles the Fat

  ?fatherOfCharlesTheFat dbo:child ?charlesTheFat .

  # Step 4: Find the spouse of Charles the Fat's father
  ?spouseOfFather dbo:spouseOrPartner ?fatherOfCharlesTheFat .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
917,38,train,Give me the child of the father of Keʻelikōlani and child of the father of Kamehameha IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonChild WHERE {
  # Find the father of Keʻelikōlani
  ?keelikolanifather dbo:child dbr:Keʻelikōlani .
  
  # Find the father of Kamehameha IV
  ?kamehamehavfather dbo:child dbr:Kamehameha_IV .

  # Ensure they are the same person (common father)
  FILTER (?keelikolanifather = ?kamehamehavfather)

  # Find a child of this common father
  ?commonChild dbo:parent ?keelikolanifather .
}
```",4,4,5,2,2,3,3,71,3,3,0,0.5,1.0,0.6666666666666666
791,12,train,Give me the predecessor of Emperor Antoku and father of Emperor Go-Toba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?emperor WHERE {
  ?antoku dbo:predecessor dbr:Emperor_Antoku .
  ?goToba dbo:father ?emperor .
  ?emperor dbo:successor dbr:Emperor_Takakura .
  FILTER(?antoku = ?goToba)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
456,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?alterEgo WHERE {
  wd:Q1234568 wdt:P136 ?alterEgo .
}
```

Note: In this query, `wd:Q1234568` should be replaced with the actual DBpedia resource identifier for ""The Shadow"". You can find this by searching DBpedia or using a SPARQL endpoint to look up the entity.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
965,39,train,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Identify George Mountbatten by his birth name
  dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbo:birthName dbr:Prince_Louis_of_Battenberg .
  
  # Find the parent who is a noble
  ?parent dbo:child dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven ;
          a dbo:NoblePerson .

}",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
122,1,train,Give me the band of Gift of Gab (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  wd:Q1234568 dbo:member ?person .
  ?person foaf:name ""Gift of Gab""@en .
  ?band dbo:member ?person .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia resource identifier for Gift of Gab if it is known. If not, you may need to adjust the query to find the correct entity.",1,1,2,1,1,2,2,9,0,0,4,0,0.0,0
341,1,train,Give me the writer of In Love & War (Amerie album).,SELECT ?result WHERE { <http://dbpedia.org/resource/In_Love_&_War_(Amerie_album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  ?album dcterms:title ""In Love & War""@en .
  ?album dbo:artist <http://dbpedia.org/resource/Amerie> .
  ?track dbo:partOfAlbum ?album ;
         dbo:lyricsWriter ?writer .
}
```",1,1,2,1,1,2,2,9,0,0,57,0,0.0,0
976,2,train,Give me the office of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  wd:Q123456 rdfs:label ""Naci Bostancı""@en .
  OPTIONAL { wd:Q123456 dbo:positionHeld ?office . }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Naci Bostancı. You can find this by searching for his name on DBpedia or using a SPARQL query to retrieve it.",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
507,31,train,Give me the director of Entertaining Mr Sloane (film) and spouse of the person born as the birth name of Anne V. Coates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?director ?spouse WHERE {
  # Find the director of ""Entertaining Mr Sloane""
  dbr:Entertaining_Mr_Sloane_film dbo:director ?director .

  # Get Anne V. Coates' birth name
  dbr:Anne_V._Coates foaf:name ?anneName .
  FILTER(CONTAINS(LCASE(?anneName), ""anne v coates""))

  # Find the person born with that birth name
  ?person foaf:name ?birthName .
  FILTER(?birthName = ?anneName)

  # Get the spouse of that person
  ?person dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
715,9,train,Give me the commander in Rif War and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rifCommander ?civilWarCommander WHERE {
  # Find commanders in the Rif War
  ?rifEvent dbo:eventType dbr:Rif_War .
  ?rifEvent dbo:commander ?rifCommander .

  # Find commanders in the Spanish Civil War
  ?civilEvent dbo:eventType dbr:Spanish_Civil_War .
  ?civilEvent dbo:commander ?civilWarCommander .

  # Ensure we are looking at the same person for both wars
  FILTER (?rifCommander = ?civilWarCommander)
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
987,34,train,"Give me the entity in Montenegro and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?member ?birthPlace WHERE {
  # Step 1: Identify Dado Polumenta
  dbr:Dado_Polumenta dbo:associatedBand ?band .
  
  # Step 2: Find members of the band who are artists and musical artists
  ?band dbo:bandMember ?member .
  ?member a dbo:Artist ;
          a dbo:MusicalArtist .

  # Step 3: Get birthplace of these members
  ?member dbp:birthPlace ?birthPlace .

  # Step 4: Filter for birthplaces in Montenegro
  ?birthPlace dbo:country dbr:Montenegro .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
417,9,train,Give me the child of Christian X of Denmark and spouse of Princess Caroline-Mathilde of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find children of Christian X of Denmark
  ?child dbo:parent dbr:Christian_X_of_Denmark .
  
  # Check if the child is a spouse of Princess Caroline-Mathilde of Denmark
  ?child dbo:spouse dbr:Princess_Caroline_Matilda_of_Denmark .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
606,5,train,Who is the alumnus of University of Pennsylvania?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  ?alumnus dbo:almaMater dbr:University_of_Pennsylvania .
}
```",1,1,2,1,1,3,2,20,1114,0,0,1.0,1.0,1.0
606,14,train,"Give me the birthplace of the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. ?v0 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus ?birthPlace WHERE {
  # Find the University of Pennsylvania (Penn Quakers)
  ?university a dbo:EducationalInstitution ;
              rdfs:label ""University of Pennsylvania""@en .
  
  # Find notable alumni from this university
  ?alumnus dbo:almaMater ?university ;
           dbp:birthPlace ?birthPlace .

  FILTER (LANG(?alumnus) = 'en')
}
ORDER BY ?alumnus",3,6,4,3,1,3,2,20,0,0,598,0,0.0,0
41,3,train,"Who is the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election?",SELECT ?result WHERE { <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Find the election event
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2005 && CONTAINS(LCASE(STR(?election)), ""castlereagh borough council"")) .

  # Identify the leader of this election
  ?election dbo:winner ?leader .

  # Ensure the leader is a politician and an office holder
  ?leader rdf:type dbo:Politician .
  ?leader dbo:officeHolderOf ?office .
}
```

This query does the following:
- Searches for elections in 2005 related to Castlereagh Borough Council.
- Identifies the winner (or leader) of that election.
- Ensures the identified person is both a politician and holds an office.",1,3,2,1,1,2,3,28,0,0,4,0,0.0,0
917,32,train,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of the father of Keʻelikōlani.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Kamehameha IV and his children
  ?child dbo:spouse|dbo:child dbr:Kamehameha_IV .
  
  # Ensure the child is royalty
  ?child a dbo:Monarch .

  # Parent of the child (should be Kapaakea)
  ?parent dbo:child ?child .

  # Kapaakea as father of Keʻelikōlani
  dbr:Keʻelikōlani dbo:father ?parent .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
507,19,train,Give me the spouse of the person born as Anne Voase Coates and director of Entertaining Mr Sloane (film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:FilmDirector ;
          foaf:name ""Anne Voase Coates""@en ;
          dbp:directedFilm <http://dbpedia.org/resource/Entertaining_Mr_Sloane> .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
216,21,train,Give me the player in the coach of Croatia national under-21 football team and team of Ognjen Vukojević.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coach ?team
WHERE {
  # Find the coach of the Croatia national under-21 football team
  ?team1 a dbo:SportsTeam ;
         rdfs:label ""Croatia national under-21 football team""@en .
  
  ?team1 dbo:coach ?coach .

  # Find the team associated with Ognjen Vukojević
  ?person rdfs:label ""Ognjen Vukojević""@en ;
          dbo:playsFor ?team2 .

  FILTER(?coach = ?person)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
826,30,train,"Give me the spouse of Anna Magdalena Appel and predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Anna Magdalena Appel's spouse
  dbr:Johann_Sebastian_Bach dbo:spouse ?spouse .

  # Predecessor of the parent of Prince Friedrich of Hesse and by Rhine
  dbr:Ludwig_IV,_Grand_Duke_of_Hesse dbo:predecessor ?predecessor .
  
  # Successor of Louis II, Grand Duke of Hesse
  dbr:Louis_II,_Grand_Duke_of_Hesse dbo:successor ?successor .

  # Ensure the spouse is connected to both predecessor and successor
  ?spouse dbo:spouse dbr:Ludwig_IV,_Grand_Duke_of_Hesse .
  ?predecessor rdfs:label ""Maria Ludovika Wilhelmine of Hesse-Darmstadt""@en .
  ?successor rdfs:label ""Ernst Ludwig, Grand Duke of Hesse""@en .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
93,13,train,"Give me the capital of the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital WHERE {
  # Step 1: Identify Clam Cove Pictograph Site and its associated region
  dbr:Clam_Cove_Pictograph_Site dbo:headquarters ?region .
  
  # Step 2: Ensure the region is a settlement
  ?region rdf:type dbo:Settlement .

  # Step 3: Find the capital of this region
  ?region dbo:capital ?capital .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
83,4,train,"Who is the commander, that is a politician, in Central African Republic Civil War?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name WHERE {
  ?person rdf:type dbo:Commander .
  ?person rdf:type dbo:Politician .
  ?person dbo:participatedIn dbr:Central_African_Republic_Civil_War_(2012%E2%80%932013) .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",1,2,2,1,1,3,2,20,0,0,279,0,0.0,0
236,3,train,"Give me the administration, that is an organisation, of John Adams.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?person a dbo:Person ;
          foaf:name ""John Adams""@en .
  OPTIONAL { ?person dbo:positionHeld ?administration . }
}
```

This query looks for entities of type `dbo:Person` with the name ""John Adams"" and retrieves any associated positions or administrations he held.",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
826,2,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  ?position a dbo:Monarch ;
            dbo:monarch ?successor .
  ?successor foaf:name ""Louis IV, Grand Duke of Hesse""@en .
  ?position dbo:monarch ?predecessor .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
955,2,train,"Give me the work, that is a work and an album and a musical work, of Matt Freeman.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work a dbo:Album .
  ?work a dbo:MusicalWork .
  ?work dbo:artist dbr:Matt_Freeman .
}
```",1,4,2,1,1,3,2,20,0,0,2,0,0.0,0
507,4,train,Who is the person born as Anne Voase Coates?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  ?person dbo:birthName ""Anne Voase Coates""@en .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
```

This query does the following:
- It uses the `dbo:birthName` property to find individuals with the birth name ""Anne Voase Coates"".
- The `OPTIONAL` clause is used to retrieve a label for the person, which typically includes their most commonly known name.
- The filter ensures that the label retrieved is in English.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
976,22,train,Give me the office of Mustafa Şentop and office of the person born as Mehmet Naci Bostancı.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?office
WHERE {
  VALUES ?person { 
    dbr:Mustafa_Şentop 
    dbr:Mehmet_Naci_Bostancı 
  }
  
  OPTIONAL { ?person dbo:positionHeld ?office . }
}
```

This query does the following:
- Uses `PREFIX` to define common namespaces for DBpedia properties.
- Selects two variables, `?person` and `?office`.
- Specifies the individuals of interest using their DBpedia resources (`dbr:Mustafa_Şentop` and `dbr:Mehmet_Naci_Bostancı`).
- Uses an `OPTIONAL` clause to find any office positions held by these individuals.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
129,8,train,Give me the professional in the mayor of 1999 West Dunbartonshire Council election.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?profession WHERE {
  ?election dbo:electionDate ?date .
  ?election dbo:officeHolder ?mayor .
  ?mayor dbo:occupation ?profession .

  FILTER (CONTAINS(LCASE(?election), ""west dunbartonshire council"") && 
          CONTAINS(YEAR(?date), ""1999""))
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
826,39,train,"Give me the successor of Louis II, Grand Duke of Hesse and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Successor of Louis II, Grand Duke of Hesse
  ?successor dbo:predecessor dbr:Louis_II,_Grand_Duke_of_Hesse .

  # Child of Louis IV, Grand Duke of Hesse
  ?child dbo:parent dbr:Louis_IV,_Grand_Duke_of_Hesse .
  
  # Predecessor of Louis IV, Grand Duke of Hesse
  ?predecessor dbo:successor dbr:Louis_IV,_Grand_Duke_of_Hesse .

  # The person we are looking for is both the successor of Louis II and predecessor of Louis IV
  FILTER (?successor = ?predecessor)
  
  BIND(?successor AS ?person)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
465,23,train,"Give me the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Find the parent of Ercole II d'Este
  ?parent dbo:child ?ercole .
  
  # Ensure it's Ercole II d'Este
  VALUES ?ercole { <http://dbpedia.org/resource/Ercole_II_d%27Este> }
  
  # Find a child of this parent
  ?parent dbo:child ?child .

  # Find the successor of that child
  ?child dbp:successor ?successor .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
926,32,train,Give me the father of the father of Abdulaziz and successor of the child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Abdulaziz Ibn Saud's father
  dbr:Abdulaziz_Ibn_Saud dbo:father ?father1 .
  
  # Father of Abdulaziz's father (grandfather)
  ?father1 dbo:father ?grandfather .

  # Ahmed III's child
  dbr:Aḥmed_III dbo:child ?child .

  # Successor of Ahmed III's child
  ?child dbo:succeededBy ?successor .

  # Find the grandfather who is also the successor
  FILTER (?grandfather = ?successor)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
573,37,train,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of John Quincy Adams.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?decedent WHERE {
  # John Quincy Adams and his parent
  dbr:John_Quincy_Adams dbo:parent dbr:John_Adams .
  
  # Parent's profession and nationality
  dbr:John_Adams a dbo:Politician ;
                 dbp:nationality dbr:United_States .

  # Residence of the decedent
  ?decedent dbo:residence ?settlement .
  ?settlement a dbo:Settlement .
  
  # Decedent is related to John Adams (parent of John Quincy Adams)
  ?decedent dbo:spouse dbr:John_Adams ;
            dbo:dateOfDeath ?deathDate .

}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
47,23,train,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?operation rdfs:label ""Operation Green Hunt""@en .
  ?operation dbo:relatedThroughTime ?event .
  ?event dbo:agent ?politician .
  ?politician a dbo:Politician ;
              dbo:officeHeld ?office .
}
```

This query does the following:
- Identifies the operation labeled as ""Operation Green Hunt.""
- Finds events related to this operation.
- Looks for politicians involved in these events.
- Retrieves the office or role held by these politicians.",3,4,4,3,1,3,3,71,0,0,369,0,0.0,0
573,12,train,"Give me the person decedent at Quincy, Massachusetts and parent of John Quincy Adams.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:spouse ?parent .
  ?parent dbo:child dbr:John_Quincy_Adams ;
          dbo:deathPlace dbr:Quincy,_Massachusetts .
}
```

This query assumes that the parent-child relationship is represented by `dbo:child` and spouse relationships are captured with `dbo:spouse`. It looks for a person who has a spouse (`?parent`) who is both a child of John Quincy Adams and died in Quincy, Massachusetts.",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
987,15,train,"Who is the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Find Dado Prato and his association with Planet Funk
  ?dado a dbo:MusicArtist ;
        foaf:name ""Dado Prato"" ;
        dbo:memberOfBandOrchestra ?planetFunk .
  
  # Check if there is another band associated with the members of Planet Funk
  ?artist a dbo:MusicArtist ;
          dbo:memberOfBandOrchestra ?planetFunk ;
          dbo:memberOfBandOrchestra ?band .

  FILTER(?dado != ?artist) # Ensure we are not referring to Dado himself again

  # Return the band associated with other members of Planet Funk
  BIND(?band AS ?band)
}
```",2,5,3,2,1,3,3,71,0,0,2,0,0.0,0
826,37,train,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  dbr:Louis_I_of_Hesse_and_by_Rhine dbo:child ?child .
  
  ?child rdf:type dbo:Monarch .
  ?child dbo:predecessor dbr:Louis_IV,_Grand_Duke_of_Hesse .

  ?child dbo:successor ?successor .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
865,33,train,"Give me the native of British Raj and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  # Step 1: Identify Syeda Shahar Banu's spouse
  ?spouse a dbo:Spouse;
          dbo:spouse dbr:Syeda_Shahar_Banu.

  # Step 2: Find their child who is a politician
  ?child dbo:parent ?spouse;
         a dbo:Politician.

  # Step 3: Determine the father of that child
  ?father dbo:child ?child;
          dbo:nationality dbr:British_Raj.

  # Step 4: Identify the native place associated with this father
  ?father dbo:nativePlace ?nativePlace.
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
987,18,train,Give me the entity in Montenegro and birth place of Dado Polumenta and birth place of Moamer Kasumović.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES (?person ?label) { 
    (dbr:Dado_Polumenta ""Dado Polumenta"")
    (dbr:Moamer_Kasumović ""Moamer Kasumović"")
  }
  
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?placeLabel .
  FILTER(lang(?placeLabel) = 'en')
  OPTIONAL {
    ?birthPlace dbo:country dbr:Montenegro .
  }
}
ORDER BY ?person
```",3,3,4,1,3,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
130,7,train,"Give me the figure known as the film, that is a soccer club and an organisation, of Candice Storey Lee.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  # Candice Storey Lee is a person
  dbr:Candice_Storey_Lee dbo:profession dbr:Film_director .
  
  # Find films associated with her
  ?film dbo:director dbr:Candice_Storey_Lee .

  # Filter films that are also soccer clubs and organizations
  ?film rdf:type dbo:Soccer_Club ;
        a dbo:Organization .
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
715,8,train,"Give me the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person dbo:birthName ""Carlos Franco Iribarnegaray""@en .
  ?person dbo:officeHolder ?office .

  FILTER EXISTS { ?office a dbo:GovernmentAgency . }
  FILTER EXISTS { ?office a dbo:Organization . }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
465,25,train,"Give me the successor of the child, that is a royalty, of Anne of Brittany and spouse of Archduchess Barbara of Austria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Step 1: Find children of Anne of Brittany who are royalty
  ?child dbo:parent dbr:Anne_of_Brittany ;
         a dbo:Monarch ; # Assuming the child is a monarch, which implies royalty

  # Step 2: Check if this child married Archduchess Barbara of Austria
  ?child dbo:spouse dbr:Barbara_of_Austria .

  # Step 3: Find the successor of that child
  ?successor dbo:predecessor ?child .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
976,34,train,"Give me the office of Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v1 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?naciOffice ?kemalLeader
WHERE {
  # Naci Bostancı's office
  OPTIONAL { 
    dbr:Naci_Bostancı dbo:office ?naciOffice .
  }

  # Kemal Kılıçdaroğlu's administration and its leader
  OPTIONAL {
    dbr:Kemal_Kılıçdaroğlu dbo:positionHeld ?kemalPosition .
    ?kemalPosition dbo:organization ?administration .
    ?administration dbo:leader ?kemalLeader .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
166,10,train,"Give me the territory administered, that is a country, from the reference to Madrid.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:Madrid dbo:country ?country .
  FILTER (isLiteral(?country) && langMatches(lang(?country), ""en""))
}
```",2,3,3,2,1,3,2,20,0,0,15,0,0.0,0
865,2,train,Give me the father of Shahla Khatun.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?person dbp:name ""Shahla Khatun""@en .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
98,15,train,Give me the region of the time zone of Lopez Jaena and entity in Philippines.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?location a dbo:PopulatedPlace ;
            rdfs:label ""Lopez Jaena""@en .
  
  OPTIONAL { ?location dbo:country dbr:Philippines . }
  
  ?location dbo:timeZone ?timezone .

  ?timezone dbo:region ?region .
}
```",3,3,4,2,2,2,3,28,0,0,1743,0,0.0,0
926,36,train,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of Mahmud II.",SELECT ?result WHERE { <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Beyhan Sultan's parent (royalty)
  dbr:Beyhan_Sultan dbo:parent dbr:Mustafa_III .
  
  # Father of Mahmud II
  dbr:Mahmud_II dbo:father dbr:Abdul_Hamid_I .

  # Child of Abdul Hamid I who is royalty
  dbr:Abdul_Hamid_I dbo:child ?child .
  ?child a dbo:Monarch .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
839,5,train,"Give me the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Peter Schorowsky""@en .
  
  ?person dbo:member ?band .

  ?band a (dbo:Band|dbo:MusicalGroup) .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
417,17,train,"Who is the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin?",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Identify Alexandrine of Mecklenburg-Schwerin and her children who are royalty
  ?parent a dbo:Monarch ;
          foaf:name ""Alexandrine of Mecklenburg-Schwerin""@en .
  
  ?parent dbo:spouse|dbo:child ?child .
  FILTER EXISTS { ?child a dbo:Monarch } .

  # Step 2: Find the children (grandchildren) of these children who are royalty
  ?child dbo:child ?grandchild .
  FILTER EXISTS { ?grandchild a dbo:Monarch }
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
874,9,train,"Give me the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?v0 <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  # Find works by Horace Andy
  ?work dbo:artist dbr:Horace_Andy .
  
  # The writer of the work should be an artist and a musical artist
  ?work dbo:writer ?writer .
  ?writer rdf:type dbo:Artist .
  ?writer rdf:type dbo:MusicalArtist .
}
```",2,5,3,2,1,3,2,20,0,0,29,0,0.0,0
417,0,train,Give me the spouse of Princess Caroline-Mathilde of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"```sparql
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Princess Caroline-Mathilde of Denmark. You can find this identifier by searching for her on DBpedia or using a SPARQL query to retrieve it.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
445,3,train,"Who is the resident, that is an athlete, of Great Britain?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Athlete .
  ?person dbo:nationality dbr:United_Kingdom .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10",1,2,2,1,1,3,3,71,0,13,6,0.0,0.0,0
527,9,train,"Give me the movie, that is a work and English and a television show, with the professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/starring> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?movie WHERE {
  ?movie a dbo:TelevisionShow ;
         rdfs:label ?title ;
         dbo:language dbr:English_language ;
         dbo:genre ?work .
  FILTER(CONTAINS(LCASE(?title), ""actor"") || CONTAINS(LCASE(STR(?work)), ""actor""))
  FILTER(langMatches(lang(?title), ""en""))
}
```",2,5,3,2,1,3,2,20,0,0,298,0,0.0,0
329,16,train,"Give me the birthplace of Eric Cross (writer) and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ericCrossBirthplace ?robertBatesBirthplaceOrganization ?robertBatesBirthplaceCountry
WHERE {
  # Get the birthplace of Eric Cross (writer)
  OPTIONAL { 
    dbr:Eric_Cross_(writer) dbo:birthPlace ?ericCrossBirthplace .
  }

  # Get the birthplace of Robert Bates (loyalist), and find an organization and a country associated with it
  OPTIONAL {
    dbr:Robert_Bates_(loyalist) dbo:birthPlace ?robertBatesBirthplace .
    
    # Find an organization in the birthplace
    ?organization dbo:location ?robertBatesBirthplace ;
                  a dbo:Organisation .

    # Find a country associated with the birthplace
    ?country dbo:countryName ?robertBatesBirthplaceCountry ;
             dbo:countryCode ?robertBatesBirthplace .
    
    BIND(?organization AS ?robertBatesBirthplaceOrganization)
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
826,16,train,"Who is the child, that is a royalty, of the reference, that is a royalty, to Louis I?","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?childName WHERE {
  ?parent a dbo:Monarch ;
          foaf:name ""Louis I""@en .
  ?parent dbo:child ?child .
  ?child a dbo:Royalty ;
         foaf:name ?childName .
}
```",2,4,3,2,1,3,3,71,0,0,8,0,0.0,0
124,0,train,Give me the commander in Mahdist War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?event dbo:wikiPageRedirects db:Mahdist_War.
  ?event dbo:commander ?commander.
}
```",1,1,2,1,1,3,3,71,0,0,15,0,0.0,0
554,5,train,Give me the birth place of The Legendary Tigerman.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q1234568 dbo:birthPlace ?birthPlace .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for The Legendary Tigerman. You can find this by searching for ""The Legendary Tigerman"" on DBpedia or using a SPARQL endpoint to query for his identifier.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
445,21,train,"Give me the entity in United Kingdom and entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ukEntity ?residenceCountry
WHERE {
  # Find Anna Sharkey in DBpedia
  ?anna a dbo:Person ;
        foaf:name ""Anna Sharkey"" ;
        
        # Property for place of birth (United Kingdom)
        dbo:birthPlace dbr:United_Kingdom .
  
  # Get the entity related to United Kingdom
  ?ukEntity rdfs:label ""United Kingdom""@en .

  # Find residence country of Anna Sharkey
  ?anna dbo:residence ?residence ;
        foaf:name ""Anna Sharkey"" .
  
  # Ensure the residence is a country
  ?residenceCountry a dbo:Country ;
                    rdfs:label ?residenceLabel .
}
```

This query assumes:
- `dbo:Person` represents individuals.
- `foaf:name` is used for names (though DBpedia might use different properties).
- `dbo:birthPlace` and `dbo:residence` are the properties for birthplace and residence, respectively.
- The label of the United Kingdom is directly queried to ensure it's a country.",3,4,4,2,2,3,3,71,0,0,102,0,0.0,0
507,16,train,"Give me the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?movie WHERE {
  ?person dbo:birthday ""1919-06-17""^^xsd:date .
  ?person dbo:film ?movie .
  ?movie a dbo:Film ;
         a dbo:CreativeWork .
}
```

This query does the following:
- Uses `dbo:birthday` to find the person born on June 17, 1919.
- Links this person to films using `dbo:film`.
- Ensures that these films are both of type `dbo:Film` and `dbo:CreativeWork`.",2,4,3,2,1,3,3,71,0,0,11,0,0.0,0
98,1,train,Give me the birth place of Paolo Ballesteros.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Paolo Ballesteros. You can find this by searching for his name on DBpedia or using a SPARQL endpoint to query for his unique identifier.",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
495,1,train,Give me the father of Princess Charlotte of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Charlotte_of_Württemberg> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  wd:Q1234567 wdt:P22 ?father .
}
```

Note: In this query, `wd:Q1234567` should be replaced with the actual DBpedia identifier for Princess Charlotte of Württemberg. You can find this identifier by searching for her on DBpedia or using a SPARQL endpoint to look up entities related to her.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
839,22,train,"Give me the band of Kevin Russell (musician) and band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?kevinRussellBand ?charlieHuhnBand ?bandOfTheBand
WHERE {
  # Find the band associated with Kevin Russell
  dbr:Kevin_Russell_(musician) dbo:musicalArtist ?kevinRussellBand .

  # Find the band associated with Charlie Huhn
  dbr:Charlie_Huhn dbo:musicalArtist ?charlieHuhnBand .

  # Check if this band is itself a musical artist (i.e., has its own band)
  OPTIONAL {
    ?charlieHuhnBand dbo:musicalArtist ?bandOfTheBand .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
326,2,train,"Give me the region coded, that is a settlement, as 442/760.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/areaCode> ""442/760"" . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?region WHERE {
  ?region dbo:regionCode ""442/760"" .
  ?region rdf:type ?type .
  FILTER (strstarts(str(?type), str(dbo:)) && 
          (?type = dbo:PopulatedPlace || ?type = dbo:Settlement))
}
```

This query does the following:
- Uses `dbo:regionCode` to filter regions with the code ""442/760"".
- Checks if the region is of a type that starts with `dbo:` and specifically checks for types like `dbo:PopulatedPlace` or `dbo:Settlement`.
- Returns the region matching these criteria.",1,2,2,1,1,2,2,9,0,0,168,0,0.0,0
791,39,train,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and predecessor of Emperor Antoku.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Emperor_Antoku dbo:father dbr:Taira_no_Kiyomori .

  ?child dbo:parent dbr:Taira_no_Kiyomori .
  ?child a dbo:Monarch .

  ?child dbo:father ?father .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
715,2,train,Give me the leader of Ministry of the Air (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?ministry a dbo:GovernmentMinistry ;
            dbo:country dbr:Spain ;
            rdfs:label ""Ministry of the Air""@en .
  
  OPTIONAL { 
    ?ministry dbo:minister ?leader .
  }
}
```

This query does the following:
- It looks for an entity that is classified as a `GovernmentMinistry` (`dbo:GovernmentMinistry`) and has a label ""Ministry of the Air"" in English.
- It specifies that this ministry should be associated with Spain (`dbo:country dbr:Spain`).
- It attempts to find any minister (`dbo:minister`) associated with this ministry, which would represent its leader.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
987,24,train,Give me the entity in Montenegro and birth place of the actor of All for Free.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?birthPlace WHERE {
  # Find the actor of ""All for Free""
  ?movie dbo:starring dbr:Guillaume_Canet .
  ?movie rdfs:label ""All for Free""@en .

  # Get birthplace of Guillaume Canet
  dbr:Guillaume_Canet dbo:birthPlace ?birthPlace .

  # Filter to find if the birthplace is in Montenegro
  ?birthPlace dbo:country dbr:Montenegro .
  
  BIND(dbr:Guillaume_Canet AS ?actor)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
965,13,train,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Find children of Prince Louis of Battenberg
  ?child dbo:father dbr:Prince_Louis_of_Battenberg .
  
  # Filter for those who are royalty
  ?child a dbo:Monarch ;
         dbo:spouse ?spouse .

  # Get the parent (mother) of this child
  OPTIONAL { ?child dbo:mother ?parent . }
}
```

This query does the following:
1. Identifies children (`?child`) of Prince Louis of Battenberg.
2. Filters these children to find those who are royalty by checking if they have a type `dbo:Monarch`.
3. Retrieves the mother (`?parent`) of each child who is royalty.",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
507,21,train,"Give me the professional in Film director, television director and spouse of the person born as Anne Voase Coates.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v1 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?filmDirector ?tvDirector ?spouse WHERE {
  ?anne a dbo:Person ;
        foaf:name ""Anne Voase Coates""@en ;
        dbo:birthName ""Anne Voase Coates"" .
  
  OPTIONAL { ?anne dbo:occupationFilmDirector ?filmDirector . }
  OPTIONAL { ?anne dbo:occupationTelevisionDirector ?tvDirector . }
  OPTIONAL { ?anne dbp:spouse ?spouse . }

  FILTER (lang(?filmDirector) = 'en' || lang(?tvDirector) = 'en')
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
955,14,train,"Give me the band of the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?bandOfBandMember WHERE {
  # Identify Street Dogs as a band
  dbr:Street_Dogs a dbo:MusicalGroup .

  # Find members of Street Dogs who are both musical artists and artists
  ?member dbo:member dbr:Street_Dogs .
  ?member a dbo:MusicalArtist .
  ?member a dbo:Artist .

  # Get the band associated with this member
  ?bandOfBandMember dbo:member ?member .
  
  # Ensure the band is distinct from Street Dogs to avoid self-reference
  FILTER(?bandOfBandMember != dbr:Street_Dogs)
}
```",3,8,4,3,1,3,2,20,0,0,3,0,0.0,0
892,15,train,Give me the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v1 <http://dbpedia.org/property/occupation> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession WHERE {
  ?person a dbo:Person ;
          foaf:name ""Enrico Crolla""@en .
  OPTIONAL { ?person dbo:occupation ?profession . }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
826,31,train,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?spouse WHERE {
  # Find Louis II, Grand Duke of Hesse and his successor
  VALUES (?louis2) { dbr:Ludwig_II,_Grand_Duke_of_Hesse }
  ?louis2 dbo:successor ?successor .

  # Find Anna Magdalena Appel's father
  ?annaMagdalena a dbo:Person ;
                foaf:parent ?father .
  
  FILTER(?annaMagdalena = dbr:Anna_Magdalena_Bach)

  # Find the children of Anna Magdalena Appel's father
  ?father dbo:child ?child .

  # Find a spouse of one of these children
  ?child dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
527,4,train,Give me the host of Hyperland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?host WHERE {
  ?show a dbo:TelevisionShow .
  ?show dbo:title ""Hyperland""@en .
  ?show dbo:host ?host .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
158,1,train,Give me the party of Théodore Steeg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Théodore_Steeg> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  wd:Q1234568 dbo:politicalParty ?party .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Théodore Steeg. You can find this by searching for his DBpedia page or using a SPARQL query to identify him.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
47,30,train,Give me the office of Bidesh Ranjan Bose and office of the awardee of Padma Vibhushan and office of Suvendu Adhikari.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeName WHERE {
  VALUES ?person { 
    dbr:Bidesh_Ranjan_Bose 
    (SELECT ?awardee WHERE { 
      ?award dbr:Padma_Vibhushan ; dbo:recipient ?awardee . 
    }) 
    dbr:Suvendu_Adhikari
  }
  
  OPTIONAL {
    ?person dbo:office ?office .
    ?office rdfs:label ?officeName .
    FILTER (lang(?officeName) = 'en')
  }
}
```

This query does the following:
- It uses `VALUES` to specify the individuals of interest: Bidesh Ranjan Bose, any awardee of the Padma Vibhushan, and Suvendu Adhikari.
- For the Padma Vibhushan awardees, it performs a subquery to find all recipients of this award.
- It then queries for each person's office using `dbo:office` and retrieves the label (name) of the office in English.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
791,26,train,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Identify Emperor Go-Shirakawa
  VALUES ?goShirakawa { dbr:Emperor_Go-Shirakawa }

  # Step 2: Find his children
  ?child dbo:parent ?goShirakawa .

  # Step 3: For each child, find their children (grandchildren of Go-Shirakawa)
  ?grandChild dbo:parent ?child .

  # Step 4: Filter grandchildren who are office holders and royalty
  ?grandChild a dbo:Monarch ;
              dbo:officeHolder ?office .

  # Step 5: Determine the predecessor of such a grandchild
  OPTIONAL { ?predecessor dbo:successor ?grandChild . }
}
ORDER BY ?predecessor",3,5,4,3,1,3,3,71,0,0,3,0,0.0,0
5,12,train,Give me the birthplace of Gerald Regan and entity in the award of Coro de la Pontificia Universidad Católica de Puerto Rico.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Gerald_Regan> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?awardEntity
WHERE {
  # Query for Gerald Regan's birthplace
  dbr:Gerald_Regan dbo:birthPlace ?birthPlace .

  # Query for the entity associated with the award ""Coro de la Pontificia Universidad Católica de Puerto Rico""
  OPTIONAL { 
    ?award dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico a dbo:Award .
    ?award dbo:recipient ?awardEntity .
  }
}
```

This query does the following:
- Retrieves the birthplace of Gerald Regan using the `dbo:birthPlace` property.
- Attempts to find an entity associated with the award ""Coro de la Pontificia Universidad Católica de Puerto Rico"" by looking for a resource that is classified as an `Award` and has recipients.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
933,1,train,Give me the reference to Alan Warner.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . }","```sparql
SELECT ?reference WHERE {
  wd:Q12345 rdfs:label ""Alan Warner""@en .
  ?reference schema:about wd:Q12345 ;
              schema:isPartOf ?source .
}
```

Note: Replace `wd:Q12345` with the actual DBpedia identifier for Alan Warner if it differs.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
917,14,train,Give me the child of the father of Kamehameha IV.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Kamehameha IV
  dbr:Kamehameha_IV dbo:father ?father .
  
  # Find the children of his father
  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
18,16,train,"Give me the alumnus of the figure known, that is an educational institution, as Saints and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus ?profession WHERE {
  ?institution a dbo:EducationalInstitution ;
               rdfs:label ""Saints""@en .
  
  ?alumnus dbo:almaMater ?institution ;
           foaf:name ?name .

  OPTIONAL { 
    ?alumnus dbo:occupation ?profession .
  }
}
ORDER BY ?name
LIMIT 10",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
987,31,train,"Give me the birth place of Moamer Kasumović and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?kadhafiBirthPlace ?bandName ?bandBirthPlace WHERE {
  # Moamer Kadhafi's birthplace
  dbr:Moamer_Kadhafi dbo:birthPlace ?kadhafiBirthPlace .

  # Dado Polumenta's band
  OPTIONAL {
    dbr:Dado_Polumenta dbo:memberOf ?band .
    ?band a dbo:Band ;
          rdfs:label ?bandName ;
          dbo:originPlace ?bandBirthPlace .
  }
}
```",4,7,5,3,2,3,3,71,0,0,3,0,0.0,0
839,16,train,"Give me the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Find Peter Schorowsky in DBpedia
  ?person a dbo:MusicalArtist ;
          foaf:name ""Peter Schorowsky""@en .
  
  # Find bands or groups he is a member of
  ?person dbo:member ?band .

  # Ensure the band is also classified as a group/band
  ?band a dbo:Band ; 
        dbo:genre ?genre .

  FILTER (lang(?genre) = 'en')
}
```",2,4,3,2,1,3,3,71,0,0,4,0,0.0,0
933,32,train,Give me the reference to the birth name of Alan Warner (musician) and band of the band of Alan Warner (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?birthName ?band
WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Alan Warner"" ;
          foaf:givenName ?birthName .
  
  OPTIONAL { 
    ?person dbo:musicalBand ?band .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
933,35,train,"Give me the band of the band of Alan Warner (musician) and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band ?relatedGroup
WHERE {
  # Find Alan Warner and his associated band
  ?alan a dbo:Musician ;
        foaf:name ""Alan Warner"" ;
        dbp:associatedBand ?band .

  # Check if the band is also an organization or group
  OPTIONAL {
    ?band a dbo:MusicalGroup, dbo:Organization .
    
    # Find related groups or organizations associated with this band
    ?band dbp:relatedBandOrGroup ?relatedGroup .
  }
}
```

This query does the following:
- It identifies Alan Warner as a musician and retrieves his associated band.
- It checks if this band is also classified as a musical group or organization.
- It attempts to find any related bands or groups associated with this band.",4,7,5,2,2,3,3,71,0,0,4,0,0.0,0
459,14,train,"Give me the governor of Oklahoma and governor of the administration, that is a politician, of Brad Henry.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor ?politician WHERE {
  # Find Brad Henry's term as governor of Oklahoma
  dbr:Brad_Henry dbo:governmentRole [
    a dbo:Governorship ;
    dbo:stateOrTerritory dbr:Oklahoma ;
    dbo:startDate ?start ;
    dbo:endDate ?end .
  ] .

  # Find the governor during Brad Henry's term
  ?governor dbo:governmentRole [
    a dbo:Governorship ;
    dbo:stateOrTerritory dbr:Oklahoma ;
    dbo:startDate ?g_start ;
    dbo:endDate ?g_end .
  ] .

  FILTER (
    (?start <= ?g_end && ?end >= ?g_start) # Overlapping terms
  ) .

  # Check if the governor is a politician
  OPTIONAL {
    ?governor dbo:occupation dbr:Politician .
    BIND (TRUE AS ?politician)
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
281,3,train,"Give me the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?event a dbo:MilitaryConflict ;
         dbo:agent dbr:Roy_Boehm .
  
  OPTIONAL { ?event rdfs:label ?warLabel . }
  
  FILTER (lang(?warLabel) = 'en')
}
```",1,3,2,1,1,2,3,28,0,0,20,0,0.0,0
274,10,train,Give me the professional in the designer of Tetris Classic.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v1 . },"```sparql
SELECT ?designer ?profession WHERE {
  ?game dbp:genre ""Puzzle video game"" .
  ?game dbp:title ""Tetris Classic""@en .
  ?game dbo:creator ?designer .
  ?designer foaf:name ?name .
  FILTER regex(?name, ""Alexey Pajitnov"", ""i"") .
  OPTIONAL { ?designer dbo:occupation ?profession . }
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
839,30,train,"Give me the band of Peter Schorowsky and band of Kevin Russell (musician) and band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band WHERE {
  VALUES (?person ?name) {
    (dbr:Peter_Schorowsky ""Peter Schorowsky"")
    (dbr:Kevin_Russell_(musician) ""Kevin Russell"")
    (dbr:Charlie_Huhn ""Charlie Huhn"")
  }
  
  OPTIONAL { 
    ?person dbo:musicalArtist ?band .
  }

  SERVICE <http://dbpedia.org/sparql> {
    ?band dbp:name ?bandName .
  }
}
```

This query does the following:
- Uses `VALUES` to specify the individuals of interest: Peter Schorowsky, Kevin Russell (musician), and Charlie Huhn.
- Utilizes the `dbo:musicalArtist` property to find bands associated with these individuals.
- Optionally retrieves the band names using a SPARQL service call.",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
926,35,train,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather ?royalChild
WHERE {
  # Abdulaziz (Ibn Saud)
  ?abdulaziz dbo:father ?fatherAbdulaziz .
  
  # Father of Abdulaziz's father
  ?fatherAbdulaziz dbo:father ?grandfather .

  # Mustafa III
  ?mustafaIII dbo:father ?fatherMustafaIII .

  # Child of Mustafa III who is royalty
  ?royalChild dbo:father ?fatherMustafaIII .
  ?royalChild a dbo:Monarch .
  
  FILTER(?grandfather = ?royalChild)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
773,23,train,Give me the spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find Bernard who is a son of Charles the Fat
  ?bernard dbo:childOf ?charlesTheFat .
  ?charlesTheFat foaf:name ""Charles the Fat""@en .

  # Step 2: Identify Bernard's father
  ?father dbo:spouse ?mother .
  ?father dbo:child ?bernard .

  # Step 3: Find Bernard's grandfather (father of his father)
  ?grandfather dbo:spouse ?greatGrandmother .
  ?grandfather dbo:child ?father .

  # Step 4: Get the spouse of Bernard's grandfather
  ?spouse a foaf:Person ;
          dbo:spouse ?grandfather .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
791,10,train,Give me the father of Emperor Go-Toba and spouse of Taira no Tokuko.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?spouse
WHERE {
  # Find the father of Emperor Go-Toba
  dbr:Emperor_Go-Toba dbo:father dbr:Emperor_Takakura .
  BIND(dbr:Emperor_Takakura AS ?father)

  # Find the spouse of Taira no Tokuko
  dbr:Taira_no_Tokuko dbo:spouse dbr:Emperor_Shirakawa .
  BIND(dbr:Emperor_Shirakawa AS ?spouse)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
926,26,train,Give me the successor of the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v0 <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Find Şermi Kadın's spouse
  ?spouse a dbo:Spouse ;
          dbo:spouse ?sermiKadin .
  
  FILTER(?sermiKadin = dbpedia:Şermi_Kadın)

  # Find the children of this spouse
  ?child dbo:parent ?spouse .

  # Determine the successors (e.g., rulers, leaders) of these children
  ?successor dbo:predecessor ?child .
}
```

This query assumes that:
- `dbo:Spouse` is used to denote a spousal relationship.
- `dbo:parent` denotes parent-child relationships.
- `dbo:predecessor` and `dbo:successor` are used for succession (e.g., in leadership or rulership).",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
978,13,train,"Give me the band member of the professional, that is a musical artist and an artist, in the award of Michel Claparède.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/occupation> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?professional a dbo:MusicalArtist ;
                a dbo:Artist ;
                dbo:award dbr:Michele_Claparède_Award .
  
  ?professional dbo:member ?bandMember .
}
```

This query does the following:
- It selects entities that are both `dbo:MusicalArtist` and `dbo:Artist`.
- These entities must have received the award `dbr:Michele_Claparède_Award`.
- It retrieves the band members (`?bandMember`) of these professionals.

Please note, you might need to adjust the resource URI for the ""Michel Claparède"" award if it differs in DBpedia.",3,5,4,3,1,3,2,20,0,0,9007,0,0.0,0
36,15,train,"Give me the person born as Ayo Makun and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?film
WHERE {
  # Find Ayo Makun by birth name
  ?person dbo:birthName ""Ayo Makun""@en .
  
  # Find Lepacious Bose's claim to fame film
  dbr:Lepacious_Bose dbo:claimToFame ?film .

  # Optionally, check if there is any connection between the person and the film
  OPTIONAL { ?person dbo:actedIn ?film }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
917,18,train,Give me the child of Kekūanāoʻa and child of Kekūanāoʻa and parent of Albert Kamehameha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  ?keku child:Kekūanāoʻa dbp:child ?child .
  ?child dbo:parent Albert_Kamehameha .
}
```

This query does the following:
- It selects a variable `?child` which represents the child of Kekūanāoʻa.
- The first triple pattern finds an individual who is a child of Kekūanāoʻa.
- The second triple pattern ensures that this child is also a parent of Albert Kamehameha.

Note: Ensure that the exact property URIs and resource names match those in DBpedia, as they might differ slightly or require specific identifiers.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
926,12,train,Give me the successor of Mustafa III and child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  ?mustafa dbo:predecessor ?ahmed .
  ?ahmed dbo:child ?successor .
  ?successor dbo:predecessor ?mustafa .
  
  VALUES ?mustafa { <http://dbpedia.org/resource/Mustafa_III> }
  VALUES ?ahmed { <http://dbpedia.org/resource/Ahmed_III> }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
417,28,train,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Count Ingolf of Rosenborg
  VALUES (?countIngolf) { dbr:Count_Ingolf_of_Rosenborg }

  # Parents of Count Ingolf of Rosenborg
  ?parent dbo:childOf ?countIngolf .
  
  # Check if the parent is royalty (either Alexandrine or Christian X)
  VALUES (?royalParent) {
    dbr:Alexandrine_of_Mecklenburg-Schwerin
    dbr:Christian_X_of_Denmark
  }
  
  FILTER(?parent = ?royalParent)

  # Find the spouse of the royal parent
  ?spouse dbo:spouse ?parent .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
978,12,train,Give me the band member of the person born as Nicholas Bracegirdle and band member of Enya.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Enya> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find Roma Ryan (Nicholas Bracegirdle) and her association with Enya
  dbr:Roma_Ryan a dbo:Person ;
                dbo:associatedBand dbr:Enya .

  # Find band members associated with Enya
  ?bandMember a dbo:MusicalArtist ;
              dbo:memberOfBand dbr:Enya .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
935,7,train,Give me the death place of the awardee of Sitara-i-Imtiaz.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?deathPlace WHERE {
  ?award dbo:recipient ?person .
  FILTER (strstarts(str(?award), ""dbr:Sitara-i-Imtiaz"")).
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",2,2,3,2,1,3,2,20,0,0,18,0,0.0,0
216,3,train,Give me the mayor of Ros Bates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?city ?mayor WHERE {
  ?person a dbo:Mayor ;
          foaf:name ""Ros Bates""@en .
  OPTIONAL { ?person dbo:holdsOfficeIn ?office . }
  ?office dbo:location ?city .
  ?office dbo:incumbent ?mayor .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
83,4,train,Give me the player in Greg Boehme and player in Albert Edward (soccer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Greg_Boehme> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Albert_Edward_(soccer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Find Greg Boehme's team
  ?team1 dbo:member dbr:Greg_Boehme .
  
  # Find Albert Edward's team
  ?team2 dbo:member dbr:Albert_Edward_(soccer) .

  # Ensure the teams are in soccer
  ?team1 a dbo:SoccerTeam ;
         dbo:player ?player .
  ?team2 a dbo:SoccerTeam ;
         dbo:player ?player .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
987,11,train,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?birthPlace WHERE {
  # Find Šako Polumenta as an individual
  ?person a dbo:Person ;
          foaf:name ""Šako Polumenta""@en .
  
  # Find bands associated with him
  ?person dbo:memberOfBand ?band .

  # Ensure the band is both an artist and a musical artist
  ?band a dbo:MusicalArtist, dbo:Artist .

  # Get the birthplace of the band
  ?band dbo:birthPlace ?birthPlace .
}
```",2,4,3,2,1,3,3,71,0,0,6,0,0.0,0
158,3,train,"Give me the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person dbo:givenName ""Adelbert"" .
  ?person dbo:familyName ""Cronkhite"" .
  ?person dbo:award ?award .
  ?award a dbo:Award .
  ?award rdfs:label ?awardLabel .
  FILTER (CONTAINS(LCASE(?awardLabel), ""country""))
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
274,4,train,Give me the designer of Tetris Classic.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?result . },"```sparql
SELECT ?designer WHERE {
  wd:Q1234 rdfs:label ""Tetris Classic""@en .
  OPTIONAL { wd:Q1234 dbo:creator ?designer . }
}
```

Note: The above query assumes that the DBpedia resource for Tetris Classic is `wd:Q1234`. You may need to verify or adjust this identifier based on the actual DBpedia entry.",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
445,25,train,Give me the entity in the award of George H. Cameron and death place of Patrick Moore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardEntity ?deathPlace 
WHERE {
  # Find George H. Cameron's award
  OPTIONAL { 
    ?person dbo:wikiPageID ""George_H._Cameron"" .
    ?person dbo:honorificTitle ?award .
    ?award dbr:recipient ?awardEntity .
  }
  
  # Find Patrick Moore's death place
  OPTIONAL {
    ?moore dbo:wikiPageID ""Patrick_Moore_(astronomer)"" .
    ?moore dbo:deathPlace ?deathPlace .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
158,11,train,"Give me the entity in the award, that is a country, of Adelbert Cronkhite and party of Théodore Steeg.",SELECT ?result WHERE { <http://dbpedia.org/resource/Théodore_Steeg> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Adelbert Cronkhite's award and associated country
  ?cronkhiteAward dbo:recipient dbr:Adelbert_Cronkhite .
  ?cronkhiteAward dbo:awardingCountry ?country .

  # Théodore Steeg's award and associated country
  ?steegAward dbo:recipient dbr:Théodore_Steeg .
  ?steegAward dbo:awardingCountry ?country .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
456,10,train,Give me the band of Alan Doyle and spouse of Danielle Spencer (Australian actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?spouse WHERE {
  # Alan Doyle's band
  ?alan a dbo:MusicalArtist ;
        foaf:name ""Alan Doyle""@en .
  ?alan dbo:memberOf ?band .

  # Danielle Spencer's spouse
  ?danielle a dbo:Person ;
            dbp:birthPlace <http://dbpedia.org/resource/Australia> ;
            foaf:name ""Danielle Spencer""@en .
  ?danielle dbo:spouse ?spouse .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
124,13,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Find Frank Rhodes and his military service
  ?frankRhodes a dbo:MilitaryPerson ;
               foaf:name ""Frank Rhodes"" ;
               dbo:militaryService ?service .

  # Identify wars involving Frank Rhodes
  ?war dbo:participant ?frankRhodes ;
       a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Retrieve the military force associated with the war
  ?war dbo:militaryForce ?militaryForce .
}
```

This query does the following:
- Identifies Frank Rhodes as a `MilitaryPerson`.
- Finds wars (`?war`) where he was a participant and ensures these are classified as both `MilitaryConflict` and `SocietalEvent`.
- Retrieves the military force associated with those wars.",2,5,3,2,1,3,3,71,0,0,1091,0,0.0,0
216,30,train,"Give me the player in Mario Ivanković and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in Igor Bišćan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Mario Ivanković's team
  dbr:Mario_Ivanković dbo:team dbr:Team1 .
  
  # Person born on 1983-12-20 who is a sports manager, soccer manager, and player
  ?person dbo:birthday ""1983-12-20""^^xsd:date ;
          rdf:type dbo:SportsManager ;
          rdf:type dbo:SoccerManager ;
          rdf:type dbo:SoccerPlayer .
  
  # Igor Bišćan's team
  dbr:Igor_Bišćan dbo:team dbr:Team2 .

  # Find the player in both teams
  ?player dbo:playsFor dbr:Team1 ;
          dbo:playsFor dbr:Team2 .
}
```

Note:
- Replace `dbr:Team1` and `dbr:Team2` with actual team resources once identified.
- Ensure that the roles (SportsManager, SoccerManager, SoccerPlayer) are correctly mapped to DBpedia's ontology.",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
365,4,train,Give me the reference to Полтавская губерния.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . }","```sparql
SELECT ?reference WHERE {
  wd:Q123456 rdfs:label ""Полтавская губерния""@ru .
  OPTIONAL { wd:Q123456 schema:about ?reference }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Полтавская губерния if known. You can find this by searching DBpedia or using a SPARQL query to identify the correct entity.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
987,19,train,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandBirthPlace ?goranBirthPlace WHERE {
  # Šako Polumenta's band ""Zabranjeno Pušenje""
  OPTIONAL {
    ?band a dbo:Band ;
          dbo:member dbr:Šako_Polumenta .
    ?band dbo:birthPlace ?bandBirthPlace .
  }
  
  # Moamer Kasumović (Goran Bregović)
  OPTIONAL {
    dbr:Goran_Bregović dbo:birthPlace ?goranBirthPlace .
  }
}
```",3,5,4,2,2,3,3,71,1,2,2,0.3333333333333333,0.3333333333333333,0.3333333333333333
433,6,train,"Give me the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Scott LaFaro resource
  VALUES ?scottLaFaro { dbr:Scott_LaFaro }

  # Find associated artists who are both a musical artist and an artist
  ?association dbo:associatedMusicalArtist ?artist .
  ?association dbo:musicalArtist ?artist .

  FILTER (?artist != ?scottLaFaro)
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
200,2,train,Give me the name of Angelcorpse.,SELECT ?result WHERE { <http://dbpedia.org/resource/Angelcorpse> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
SELECT ?name WHERE {
  wd:Q123456 rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Angelcorpse. You can find this by searching for Angelcorpse on DBpedia or using a SPARQL endpoint to query for it.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
926,6,train,Give me the child of Ahmed III.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  FILTER(?person = dbr:Ahmed_III)
}
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
987,0,train,Give me the birth place of Dado Polumenta.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Dado Pršo. You can find this by searching for ""Dado Pršo"" on DBpedia or using a SPARQL endpoint to query for his identifier.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
442,3,train,Give me the actor of This Side of Heaven.,SELECT ?result WHERE { <http://dbpedia.org/resource/This_Side_of_Heaven> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?movie dbo:film ""This Side of Heaven""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
236,1,train,Give me the party member of Democratic-Republican Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic-Republican_Party> . },"```sparql
SELECT ?person WHERE {
  ?party dcterms:subject dbc:Democratic-Republican_Party.
  ?party dbo:member ?person.
}
```",1,1,2,1,1,3,2,20,0,0,590,0,0.0,0
978,11,train,"Give me the band member of the professional, that is a musical artist and an artist, in  and band member of Chicane (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chicane_(musician)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  # Find members of Chicane
  ?bandMember dbo:memberOfBand dbr:Chicane_(musician) .
  
  # Ensure the member is a musical artist
  ?bandMember dbo:occupation dbr:Musical_artist .

  # Ensure the member is also an artist (visual)
  ?bandMember dbo:occupation dbr:Artist .

}
```",3,5,4,2,2,3,2,20,0,0,2,0,0.0,0
267,9,train,"Give me the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?club a dbo:SoccerClub ;
        dbo:seasonTrainer ?trainer .
  
  ?trainer dbo:managedTeam ?team ;
           dbo:birthPlace ?place .

  FILTER EXISTS { 
    ?team dbo:officialName ""Tractor S.C."" .
  }

  FILTER EXISTS {
    ?club dbo:season ?season .
    ?season dbo:startDate ?start ;
            dbo:endDate ?end .
    
    BIND(""2020-07-01""^^xsd:date AS ?minStartDate) 
    BIND(""2021-06-30""^^xsd:date AS ?maxEndDate)
    
    FILTER (?start <= ?minStartDate && ?end >= ?maxEndDate)
  }

  ?manager dbo:birthPlace ?place .
}
```

This query does the following:
- Identifies a soccer club (`?club`) that has a season trainer (`dbo:seasonTrainer`).
- Checks if this trainer managed a team with the official name ""Tractor S.C."".
- Ensures the management period overlaps with the 2020–21 season using date filters.
- Retrieves the manager's details.",2,3,3,2,1,3,2,20,0,0,31,0,0.0,0
987,29,train,Give me the birth place of Dado Polumenta and entity in Montenegro and birth place of the actor of All for Free.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceDadoPolumenta ?actorAllForFreeBirthPlace WHERE {
  # Assuming Dado Polumenta is an entity in Montenegro
  OPTIONAL {
    ?dadoPolumenta dbo:birthPlace ?birthPlaceDadoPolumenta .
    FILTER (CONTAINS(LCASE(STR(?birthPlaceDadoPolumenta)), ""montenegro""))
  }
  
  # Finding the actor of ""All for Free""
  ?movie dbo:title ""All for Free""@en .
  ?movie dbo:actor ?actor .
  OPTIONAL {
    ?actor dbo:birthPlace ?actorAllForFreeBirthPlace .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
417,23,train,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Knud, Hereditary Prince of Denmark
  ?knud a dbo:Person ;
        foaf:name ""Knud, Hereditary Prince of Denmark""@en .

  # Step 2: Find his child
  ?child dbo:parent ?knud .

  # Step 3: Determine the parent of that child (which is Knud)
  ?royalParent dbo:spouse ?spouse ;
               a dbo:Person .

  # Step 4: Check if this parent is royalty
  ?royalParent dbp:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))

  # Ensure the royal parent is Knud
  FILTER (?knud = ?royalParent)
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
582,9,train,Give me the player in Kazuaki Nagasawa and reference to Japan.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?player dbo:nationality dbr:Japan .
  ?player dbo:team dbr:Kazuaki_Nagasawa .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
826,32,train,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Louis I, Grand Duke of Hesse and his children
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:child ?child .
  
  # Child who is royalty
  ?child a dbo:Monarch .

  # Johann Heinrich Appel's child
  dbr:Johann_Heinrich_Appel dbo:child ?appelChild .

  # Spouse of Johann Heinrich Appel's child
  ?appelChild dbo:spouse ?royalty .

  # Ensure the royalty is one of Louis I's children
  FILTER (?royalty = ?child)

  # Find the successor of this royal child
  ?royalty dbo:successor ?successor .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
606,10,train,"Who is the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. ?v0 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  ?alumnus dbo:almaMater dbr:University_of_Pennsylvania .
}
```",2,5,3,2,1,3,2,20,1114,0,0,1.0,1.0,1.0
978,14,train,Give me the band member of the person born as the name of Chicane (musician).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find Nick Bracegirdle (Chicane) and his birth name
  dbr:Nick_Bracegirdle dbo:birthName ?birthName .
  
  # Find bands or groups associated with Nick Bracegirdle
  OPTIONAL { 
    dbr:Nick_Bracegirdle dbo:memberOf ?band .
    
    # Find other members of the band
    ?bandMember dbo:memberOf ?band ;
                foaf:name ?name .
    
    FILTER(?birthName != ?name) # Exclude Nick Bracegirdle himself
  }
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
527,5,train,"Give me the work, that is a work and a book, of Tom Baker.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work dbo:author dbr:Tom_Baker .
  ?work rdf:type dbo:Book .
}
```",1,3,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
987,9,train,Give me the birth place of Dado Polumenta and birth place of Moamer Kasumović.,SELECT ?result WHERE { <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlaceLabel WHERE {
  VALUES ?person { 
    dbr:Dado_Polumenta 
    dbr:Moamer_Krasumić
  }
  
  ?person dbo:birthPlace ?birthPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
341,6,train,"Give me the writer of the work, that is a work and an album, of Serrano.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> ""Serrano""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album rdf:type dbo:Album .
  ?album dbo:artist dbr:Serrano .
  ?album dbo:creator ?writer .
}
```",2,4,3,2,1,2,2,9,0,0,283,0,0.0,0
892,17,train,"Give me the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration WHERE {
  # Find the political party associated with Andrea Cozzolino
  ?party a dbo:PoliticalParty ;
         dbo:member dbr:Andrea_Cozzolino .
  
  # Ensure the party is also an organization
  ?party a dbo:Organization .

  # Find administrations that are Italian, regions, settlements, and administrative regions
  ?administration a dbo:Region , dbo:Settlement , dbo:AdministrativeRegion ;
                  dbo:country dbr:Italy ;
                  dbo:governingParty ?party .
}
```",2,8,3,2,1,3,3,71,0,0,14,0,0.0,0
41,14,train,Give me the party of the person born as David Declan Costello and party of Mark Durkan.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?partyLabel WHERE {
  VALUES ?person { 
    dbr:David_Declan_Costello 
    dbr:Mark_Durkan
  }
  
  ?person dbo:name ?name .
  OPTIONAL { ?person dbp:politicalParty ?party . }
  SERVICE <http://dbpedia.org/sparql> {
    ?party rdfs:label ?partyLabel FILTER (lang(?partyLabel) = 'en')
  }
}
ORDER BY ?person
```

This query does the following:
- Uses `PREFIX` to define common namespaces for DBpedia ontology and properties.
- Selects individuals (`?person`) who are either David Declan Costello or Mark Durkan using their DBpedia resource identifiers (`dbr:David_Declan_Costello`, `dbr:Mark_Durkan`).
- Retrieves the name of each person with `dbo:name`.
- Optionally retrieves the political party associated with each person using `dbp:politicalParty`.
- Uses a SPARQL service to fetch the English label for the political party (`rdfs:label`) if available.
- Orders results by the person's identifier.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
715,3,train,Who is the native of Morocco?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace dbr:Morocco .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,3,71,10,10,858,0.5,0.01152073732718894,0.02252252252252252
18,9,train,"Give me the parent of Liza Huber and alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?almaMater WHERE {
  ?liza a dbo:Person ;
        foaf:name ""Liza Huber"" .
  
  ?liza dbo:childOf ?parent .

  ?parent dbo:almaMater ?almaMater .
  
  FILTER (str(?almaMater) = ""Marymount College, Tarrytown"")
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`) and properties (`dbp`).
- **SELECT**: We are selecting the parent and their alma mater.
- **?liza a dbo:Person**: Identifies Liza Huber as a person in DBpedia.
- **foaf:name ""Liza Huber""**: Matches her name.
- **dbo:childOf ?parent**: Finds the parent of Liza Huber.
- **dbo:almaMater ?almaMater**: Checks if the parent attended Marymount College, Tarrytown.
- **FILTER**: Ensures the alma mater is specifically ""Marymount College, Tarrytown"".

This query assumes that DBpedia has structured data for these relationships and entities. Adjustments might be necessary based on actual data availability.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
554,9,train,Give me the administration of the party member of Independent politician.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?politician ?position ?administration
WHERE {
  ?politician a dbo:Politician .
  OPTIONAL { ?politician dbo:party dbr:Independent . }
  OPTIONAL { ?politician dbo:office ?position . }
  OPTIONAL { ?position dbo:holder ?politician . }
  OPTIONAL { ?position dbo:administrativeArea ?administration . }
}
```",2,2,3,2,1,3,2,20,165,200683,740,0.0008215167688998646,0.18232044198895028,0.0016356634102095136
507,35,train,Give me the professional in the profession of Guy Ferland and spouse of the person born as Anne Voase Coates.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Find Guy Ferland's profession
  ?guyFerland a dbo:Person ;
              foaf:name ""Guy Ferland""@en .
  ?guyFerland dbo:profession ?profession .

  # Find Anne Voase Coates' spouse
  ?anneVoaseCoates a dbo:Person ;
                   foaf:name ""Anne Voase Coates""@en .
  ?anneVoaseCoates dbp:spouse ?spouse .

  # Match the profession of Guy Ferland with the person who is the spouse of Anne Voase Coates
  ?spouse dbo:profession ?profession .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
606,13,train,"Give me the figure known as the nickname of the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ""Barb City""@en . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?officialName WHERE {
  ?place a dbo:Settlement .
  ?place rdfs:label ?officialName .
  FILTER (lang(?officialName) = 'en') .
  ?place dbp:alsoKnownAs ?alias .
  FILTER (?alias = ""Barb City""@en)
}
```",3,4,4,3,1,3,2,20,0,0,1,0,0.0,0
192,14,train,Give me the child of the child of the parent of Anna of Hungary (Byzantine empress).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Identify Anna of Hungary's parent
  ?anna dbo:spouse ?husband .
  ?husband dbo:parent ?parent .

  # Step 2: Find the children of that parent
  ?parent dbo:child ?child .

  # Step 3: Determine the grandchildren by finding the children of those children
  ?child dbo:child ?grandchild .
}
```",3,3,4,3,1,3,2,20,1,8344,6,0.00011983223487118035,0.14285714285714285,0.000239463601532567
417,36,train,"Give me the spouse of Princess Caroline-Mathilde of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?royalChild ?parentOfRoyalChild ?alexandrineParent
WHERE {
  # Princess Caroline-Mathilde of Denmark's spouse
  dbr:Princess_Caroline_Matilda_of_Denmark dbo:spouse ?spouse .

  # Their child who is royalty
  ?spouse dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .

  # Parent of that royal child who is also royalty
  ?royalChild dbo:parent ?parentOfRoyalChild .
  ?parentOfRoyalChild a dbo:Monarch .

  # Alexandrine of Mecklenburg-Schwerin's parent who is royalty
  dbr:Alexandrine_of_Mecklenburg-Schwerin dbo:parent ?alexandrineParent .
  ?alexandrineParent a dbo:Monarch .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
93,2,train,Give me the headquarter of Clam Cove Pictograph Site.,SELECT ?result WHERE { <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarter WHERE {
  ?site dbo:wikiPageRedirects dbr:Clam_Cove_Pictograph_Site .
  OPTIONAL { ?site dbo:location ?place . }
  OPTIONAL { ?place dbo:administrativeRegion ?region . }
  OPTIONAL { ?region dbo:capital ?headquarter . }
}
```

This query attempts to find the administrative region or capital related to the Clam Cove Pictograph Site by following possible redirects and location properties.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
465,26,train,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Elizabeth of Austria (1526–1545)
  ?elizabeth a dbo:Person ;
             foaf:name ""Elizabeth of Austria"" ;
             dbo:birthYear ?birthYear .
  
  FILTER(?birthYear >= 1526 && ?birthYear <= 1545)

  # Step 2: Find her parent(s)
  ?parent dbo:child ?elizabeth .

  # Step 3: Determine the children of that parent who are royalty
  ?royalChild dbo:childOf ?parent ;
              a dbo:Monarch .

  # Step 4: Retrieve the spouse of that child
  ?royalChild dbo:spouse ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,7,0,0.0,0
456,20,train,Give me the spouse of Danielle Spencer (Australian actress) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseName WHERE {
  ?danielle a dbo:Actor ;
            foaf:name ""Danielle Spencer"" ;
            dbo:nationality dbr:Australia .
  
  ?danielle dbo:spouse ?spouse .

  OPTIONAL { 
    ?alias foaf:name ""The Shadow"" .
    ?spouse foaf:alias ?alias .
  }

  ?spouse foaf:name ?spouseName .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
274,15,train,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie and associated musical artist of Cecil Taylor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Identify Dizzy Gillespie by his birth name and ensure he's a musical artist
  ?dizzy a dbo:MusicalArtist ;
         foaf:name ""John Birks Gillespie""@en .
  
  # Find band members of Dizzy Gillespie
  ?bandMember dbo:memberOf ?group .
  ?group dbo:performer ?dizzy .

  # Ensure the band member is also associated with Cecil Taylor as a musical artist
  ?cecil a dbo:MusicalArtist ;
         foaf:name ""Cecil Taylor""@en .
  
  ?associationGroup dbo:performer ?bandMember, ?cecil .
}
```

This query does the following:
- Identifies Dizzy Gillespie using his birth name and ensures he is classified as a `MusicalArtist`.
- Finds entities that are band members of groups associated with him.
- Ensures these band members are also part of groups where Cecil Taylor is listed as a performer.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
456,0,train,Give me the spouse of Danielle Spencer (Australian actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Danielle Spencer""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
933,2,train,Give me the band of The Ramong Sound.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  wd:Q1344 dbo:musicalArtist ?band .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
36,17,train,Give me the person born as Ayo Makun and person born in the birth year of Deanne Bray.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthYear WHERE {
  # Get the birth year of Deanne Bray
  VALUES (?deanneBray) { dbr:Deanne_Bray }
  ?deanneBray dbo:birthday ?birthdayDeanne .
  
  BIND(YEAR(?birthdayDeanne) AS ?birthYear)

  # Find Ayo Makun's real name and his birth year
  VALUES (?ayoMakun) { dbr:Ayo_Makun }
  ?ayoMakun dbo:birthName ?realName .
  ?ayoMakun dbo:birthday ?birthdayAyo .

  # Find people born in the same year as Deanne Bray
  ?person dbo:birthday ?birthdayPerson .
  BIND(YEAR(?birthdayPerson) AS ?yearPerson)

  FILTER (?yearPerson = ?birthYear)
  
  # Ensure we include Ayo Makun's real name and birth year
  OPTIONAL {
    VALUES (?person) { dbr:Ayo_Makun }
    ?person dbo:birthName ?realName .
    ?person dbo:birthday ?birthdayAyo .
  }

}
ORDER BY ?person",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
417,37,train,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and child of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?leader dbo:positionTitle ""Governor of Greenland""@en .
  ?leader dbo:spouse ?mother .
  ?father dbo:spouse ?mother .
  ?father dbo:child ?leader .
  
  ?royalty dbo:parent ?father ;
           dbp:spouse ?alexandrine .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .

  ?royalty rdf:type dbo:Monarch .
  ?royalty dbo:child ?child .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
976,18,train,Give me the office of Naci Bostancı and office of Meral Akşener and office of Mustafa Şentop.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office
WHERE {
  VALUES ?person { 
    dbr:Naci_Bostancı 
    dbr:Meral_Akşener 
    dbr:Mustafa_Şentop 
  }
  
  ?person dbo:positionHeld ?office .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
216,33,train,"Give me the player in Igor Bišćan and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coachPlayer WHERE {
  # Identify Džemal Berberović as a sports club and soccer club
  dbr:Džemal_Berberović a dbo:SportsClub ;
                        a dbo:FootballClub .

  # Find Igor Bišćan's association with Džemal Berberović
  ?igor a dbo:FootballPlayer ;
        dbo:playsFor dbr:Džemal_Berberović .
  
  # Identify the coach/player who is both a soccer player and manager
  ?coachPlayer a dbo:FootballPlayer, dbo:SoccerManager, dbo:SportsManager .

  # Ensure this person is associated with Džemal Berberović as a coach
  ?coachPlayer dbo:manages dbr:Džemal_Berberović .
}
```",4,10,5,3,2,3,3,71,0,0,3,0,0.0,0
5,2,train,Give me the award of Renata Adler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Writer ;
          foaf:name ""Renata Adler""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
443,13,train,Give me the birthplace of Ulf Lundell and landmark at elevation of the award of William Shepherd.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthplace ?landmark WHERE {
  # Part 1: Birthplace of Ulf Lundell
  OPTIONAL {
    dbr:Ulf_Lundell dbo:birthPlace ?birthplace .
  }

  # Part 2: Landmark at elevation of award for William Shepherd
  OPTIONAL {
    # Assuming there's a resource for an award related to William Shepherd
    # This part is hypothetical as it depends on the specific data available in DBpedia
    dbr:William_Shepherd dbo:award ?award .
    
    # Hypothetical property for elevation of the award (this might not exist)
    ?award dbp:elevation ?elevation .

    # Find a landmark at that elevation
    ?landmark dbo:elevation ?sameElevation .
    FILTER (?sameElevation = ?elevation)
  }
}
```

This query assumes certain properties and relationships are available in DBpedia, such as `dbo:birthPlace` for birthplace, `dbo:award` for awards, and hypothetical properties like `dbp:elevation`. The actual availability of these properties may vary, and adjustments might be necessary based on the specific data structure in DBpedia.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
122,2,train,Who is the band of Gift of Gab (rapper)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  wd:Q1234567 dbo:member ?person .
  ?person foaf:name ""Gift of Gab""@en .
  ?band dbo:member ?person .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia resource identifier for the band if known. If not, you may need to adjust the query to find the correct band by searching for Gift of Gab's membership in bands.",1,1,2,1,1,2,2,9,0,0,4,0,0.0,0
212,6,train,Give me the birthplace of the professional in .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""<PersonName>""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```

Replace `<PersonName>` with the full name of the person whose birthplace you want to find. Make sure to enclose the name in quotes and append `@en` for English language matching.",2,2,3,2,1,2,2,9,0,0,13346,0,0.0,0
965,24,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # George Mountbatten, 2nd Marquess of Milford Haven
  dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbo:parent ?parent1 .
  
  # Prince Louis of Battenberg
  dbr:Prince_Louis_of_Battenberg dbo:parent ?parent2 .

  # Check if the parent is royalty and matches both conditions
  ?parent1 rdfs:label ?name1 ;
           a dbo:Monarch ; # Assuming Monarch as a class for royalty

  FILTER(?parent1 = ?parent2)
  
  BIND(?parent1 AS ?parent)
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
5,11,train,"Give me the birthplace of the person born, that is a politician, as  and entity in Canada.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:Politician .
  ?person dbo:nationality dbr:Canada .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
ORDER BY ?person
LIMIT 10",3,4,4,2,2,3,2,20,0,18,2,0.0,0.0,0
459,8,train,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor WHERE {
  # Identify Cliff Roquemore and his death place
  dbr:Cliff_Roquemore dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Retrieve the governor of this settlement
  ?deathPlace dbo:governor ?governor .
}
```",2,3,3,2,1,2,3,28,0,0,2,0,0.0,0
232,0,train,Give me the artistic movement of Ella Cheever Thayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ella_Cheever_Thayer> <http://dbpedia.org/ontology/movement> ?result . },"```sparql
SELECT ?artisticMovement WHERE {
  wd:Q1234568 wdt:P136 ?artisticMovement .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Ella Cheever Thayer. You can find this by searching her name on DBpedia or using a SPARQL query to retrieve it.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
98,14,train,Give me the region of Philippine Standard Time and birth place of the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?birthPlace
WHERE {
  # Find the region of Philippine Standard Time
  OPTIONAL {
    dbr:Philippine_Standard_Time dbo:inRegion ?region .
  }
  
  # Find the birthplace of Paolo Elito M. Ballesteros IV
  OPTIONAL {
    dbr:Paolo_Elito_M._Ballesteros_IV dbo:birthPlace ?birthPlace .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
456,3,train,"Give me the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?work WHERE {
  ?work rdf:type ?type .
  
  FILTER (?type IN (dbo:Film, dbo:TelevisionSeries)) .

  ?work dbo:starring dbr:Ross_Newton .
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
274,9,train,Give me the associated musical artist of Cecil Taylor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?cecilTaylor { dbr:Cecil_Taylor }
  ?cecilTaylor dbo:associatedMusicalArtist ?artist .
}
```",2,2,3,1,2,2,3,28,1,13,0,0.07142857142857142,1.0,0.13333333333333333
645,32,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Francisco Largo Caballero
  ?eventLargo a dbo:MilitaryConflict ;
              dbo:societalEvent true ;
              dbo:commander ?largo .
  ?largo rdfs:label ""Francisco Largo Caballero""@en .

  # Carlos Asensio Cabanillas
  ?eventAsensio a dbo:MilitaryConflict ;
                dbo:societalEvent true ;
                dbo:commander ?asensio .
  ?asensio rdfs:label ""Carlos Asensio Cabanillas""@en .

  # Find the military forces associated with these events
  ?eventLargo dbo:militaryForce ?militaryForce .
  OPTIONAL { ?eventAsensio dbo:militaryForce ?militaryForce . }
}
```

This query does the following:
- It selects distinct military forces (`?militaryForce`) involved in events that are both military conflicts and societal events.
- It identifies events where Francisco Largo Caballero and Carlos Asensio Cabanillas were commanders.
- It retrieves the military forces associated with these events.",4,7,5,2,2,3,3,71,0,0,23,0,0.0,0
18,13,train,Give me the professional in the award of Ana María Sánchez de Ríos and parent of Liza Huber.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find the award associated with Ana María Sánchez de Ríos
  ?award dbo:recipient dbr:Ana_María_Sánchez_de_Ríos .
  
  # Find the parent of Liza Huber
  ?parent dbo:child dbr:Liza_Huber .

  # Assume the professional is related to the award and is also a parent of Liza Huber
  ?award dbo:profession ?professional .
  ?parent dbp:name ?name .
  FILTER(?name = ""Ana María Sánchez de Ríos"") # Assuming name match for simplicity

}
```

This query assumes:
- The `dbo:recipient` property links an award to its recipient.
- The `dbo:child` property links a parent to their child.
- The `dbo:profession` property links the award to the professional role.

Please note that this is a simplified approach and may need adjustments based on actual DBpedia schema details. You might need to refine entity URIs or properties if they differ in the dataset.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
93,0,train,Give me the capital of Alaska.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alaska> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?capital WHERE {
  wd:Q1599 wdt:P36 ?capital .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
442,2,train,"Give me the work of Roosevelt, Theodore.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Roosevelt, Theodore""@en . }","```sparql
SELECT ?work WHERE {
  wd:Q937 ?p ?work .
  FILTER (CONTAINS(LCASE(STR(?work)), ""work""))
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
579,3,train,"Give me the residence, that is English and a settlement, of Alan Clyne.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  # Alan Clyne's resource
  dbr:Alan_Clyne dbo:birthPlace ?placeOfBirth .
  
  # Find the residence related to Alan Clyne
  OPTIONAL { dbr:Alan_Clyne dbp:residence ?residence . }
  
  # Ensure the residence is in England and a settlement
  ?residence dbo:country dbr:England ;
             a dbo:Settlement .
}
```

This query does the following:
- It starts by identifying Alan Clyne's resource.
- It attempts to find any `dbp:residence` linked to him.
- It filters results to ensure the residence is in England and classified as a settlement.",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
839,35,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the band, that is a musical artist, of Charlie Huhn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandKevin ?bandCharlie WHERE {
  # Find Kevin Richard Russell's band(s)
  OPTIONAL {
    ?person dbr:Kevin_Russell .
    ?person a dbo:MusicalArtist .
    ?person dbo:memberOfBand ?bandKevin .
    FILTER EXISTS { ?bandKevin a dbo:Band }
  }

  # Find Charlie Huhn's band(s)
  OPTIONAL {
    ?bandCharlieMember dbr:Charlie_Huhn .
    ?bandCharlieMember a dbo:MusicalArtist .
    ?bandCharlieMember dbo:memberOfBand ?bandCharlie .
    FILTER EXISTS { ?bandCharlie a dbo:Band }
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
124,39,train,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of Battle of Tamai.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?militaryForce1 ?militaryForce2 WHERE {
  # Find the person born on 1850-06-24
  ?person dbo:birthday ""1850-06-24""^^xsd:date .
  
  # Find military forces associated with societal events and military conflicts of this person
  ?event dbo:agent ?person ;
         a ?eventType .
  FILTER (?eventType IN (dbo:SocietalEvent, dbo:MilitaryConflict))
  ?event dbo:militaryForce ?militaryForce1 .

  # Find the military force involved in the Battle of Tamai
  dbr:Battle_of_Tamai dbo:militaryForce ?militaryForce2 .
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
216,16,train,Give me the administration of the designer of Woolfe: The Red Hood Diaries and office of Tim Nicholls.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?designer ?administration ?timOffice
WHERE {
  # Find the designer of ""Woolfe: The Red Hood Diaries""
  ?game dbo:creator ?designer .
  FILTER(STRSTARTS(STR(?game), STR(dbr:Woolfe:_The_Red_Hood_Diaries)))

  # Get the administration associated with the designer
  OPTIONAL { ?designer dbo:memberOf ?administration . }

  # Find Tim Nicholls and his office
  dbr:Tim_Nicholls dbo:office ?timOffice .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
579,0,train,Give me the native of Edinburgh.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . },"```sparql
SELECT ?native WHERE {
  ?native dbo:birthPlace dbr:Edinburgh .
}
```",1,1,2,1,1,3,2,20,1711,0,0,1.0,1.0,1.0
465,28,train,Give me the successor of the child of Alfonso I d'Este and spouse of Archduchess Barbara of Austria and successor of Renée of France.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Alfonso I d'Este and his child
  dbr:Alfonso_I_d%27Este dbo:child ?child .

  # Archduchess Barbara of Austria's spouse who is also the child of Alfonso I d'Este
  ?spouse dbo:spouse dbr:Archduchess_Barbara_of_Austria .
  ?spouse rdfs:label ?nameSpouse .
  
  FILTER(CONTAINS(LCASE(?nameSpouse), ""alfonso ii d'este"")) # Assuming the child is Alfonso II d'Este

  # Renée of France's successor
  dbr:Renée_of_France dbo:successor ?renéeSuccessor .

  # Ensure the spouse and Renée's successor are the same person
  FILTER(?spouse = ?renéeSuccessor)

  # Find the successor of this individual
  ?renéeSuccessor dbo:successor ?successor .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
791,14,train,"Give me the father of the child, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Find Emperor Takakura
  ?emperor a dbo:Monarch ;
           dbp:name ""Emperor Takakura""@en .
  
  # Identify his children
  ?child dbo:parent ?emperor ;
         a dbo:Person .

  # Filter for royalty among the children
  ?child dbo:title ?title .
  FILTER EXISTS { ?title dbo:isPartOf ?royaltyClass . 
                 ?royaltyClass rdfs:label ""Royalty""@en }
  
  # Find the father of this royal child
  ?father dbo:parent ?child .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
826,26,train,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Step 1: Identify Louis I
  ?louisI a dbo:Monarch ;
          foaf:name ""Louis I""@en .

  # Step 2: Find the parent/reference of Louis I
  ?parent a dbo:Monarch ;
          dbo:child ?louisI .

  # Step 3: Determine the child of this parent
  ?child a dbo:Monarch ;
         dbo:parent ?parent .

  # Step 4: Find the successor of this child
  ?successor a dbo:Monarch ;
             dbo:predecessor ?child .
}
```",3,5,4,3,1,3,3,71,0,0,4,0,0.0,0
267,13,train,"Give me the coach of the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://dbpedia.org/ontology/coach> ?result . ?v0 <http://dbpedia.org/ontology/team> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?coach WHERE {
  # Find the manager of Tractor S.C. for the 2020–21 season
  ?manager a dbo:SoccerManager ;
           dbp:teamTrainer ?tractorTeam .
  
  # Ensure it's specifically for the 2020-21 season
  ?season dbp:teamTrainer ?manager ;
          dbp:startDate ?start ;
          dbp:endDate ?end .
  FILTER (?start <= ""2020-07-01""^^xsd:date && ?end >= ""2021-06-30""^^xsd:date)
  
  # Tractor S.C. team
  ?tractorTeam rdfs:label ""Tractor S.C.""@en .

  # Check if the manager is also a player and a club
  OPTIONAL {
    ?manager dbo:playerFor ?club .
    ?coach dbo:coachOf ?club .
  }
  
  FILTER EXISTS { ?manager dbo:playerFor ?club . }
  FILTER EXISTS { ?coach dbo:coachOf ?club . }
}
```

This query does the following:
- Identifies the manager of Tractor S.C. for the specified season.
- Checks if this manager has been a player for any club.
- Retrieves the coach of that club.",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
445,15,train,"Give me the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?result . ?v1 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT ?residence WHERE {
  ?athlete dbo:country dbr:United_Kingdom .
  ?athlete dbo:residence ?residence .
  FILTER (isLiteral(?residence) && datatype(?residence) = xsd:string)
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
865,17,train,Who is the child of the father of Abul Maal Abdul Muhith?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  # Find Abul Maal Abdul Muhith's resource
  ?muhith a dbo:Person ;
         foaf:name ""Abul Maal Abdul Muhith""@en .
  
  # Identify his father
  ?muhith dbo:father ?father .

  # Find the children of that father
  ?child dbo:parent ?father .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
573,11,train,"Give me the person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Find Charlie Baker's DBpedia resource and his governorship role
  dbr:Charlie_Baker dbo:positionHeld dbr:Governor_of_Massachusetts .
  
  # Identify the successor of Charlie Baker in that position
  OPTIONAL { 
    dbr:Governor_of_Massachusetts dbo:successor ?successor .
  }
}
```",2,3,3,2,1,3,3,71,0,0,968,0,0.0,0
965,18,train,"Give me the parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentLouise ?parentGeorge ?spousePrinceLouis
WHERE {
  # Louise Mountbatten
  OPTIONAL { 
    dbr:Louise_Mountbatten dbo:parent ?parentLouise .
  }
  
  # George Mountbatten, 2nd Marquess of Milford Haven
  OPTIONAL { 
    dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven dbo:parent ?parentGeorge .
  }

  # Spouse of Prince Louis of Battenberg (Louise Mountbatten)
  OPTIONAL {
    dbr:Louise_Mountbatten dbo:spouse dbr:Prince_Louis_of_Battenberg .
    dbr:Louise_Mountbatten rdfs:label ?spousePrinceLouis .
  }
}
```",3,3,4,1,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
773,22,train,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of Louis the German.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Louis the German
  VALUES ?louis { dbr:Louis_the_German }

  # Find children of Louis the German who are royalty
  ?child dbo:spouse ?louis .
  ?child a dbo:Monarch .

  # Get the parent of this child
  ?parent dbo:child ?child .
}
```

This query does the following:
- Identifies Louis the German using his DBpedia resource.
- Finds children who are both spouses of Louis and have a class of `Monarch` (indicating royalty).
- Retrieves the parent of such a child.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
976,8,train,Who is the person born as Mehmet Naci Bostancı?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthName WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
  OPTIONAL { ?person dbo:birthName ?birthName . FILTER (lang(?birthName) = 'tr') }
  FILTER (?birthName = ""Mehmet Naci Bostancı""@tr)
}
ORDER BY ?name
LIMIT 10",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
124,21,train,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of Battle of Atbara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the war related to A Field Battery, Royal Australian Artillery
  ?war dbo:participatingUnit dbr:A_Field_Battery,_Royal_Australian_Artillery .
  
  # Find the Battle of Atbara and its commander
  dbr:Battle_of_Atbara dbo:commander ?battleCommander .

  # Ensure the same commander is involved in both contexts
  ?war dbo:commander ?commander .
  FILTER (?commander = ?battleCommander)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
888,14,train,Give me the awardee of the award of the commander in 2022 Ukrainian eastern counteroffensive.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?recipientLabel WHERE {
  ?award a dbo:Award ;
         dbo:date ?date ;
         dbo:recipient ?recipient .
  
  FILTER (CONTAINS(LCASE(?award), ""commander"") && CONTAINS(LCASE(?award), ""2022"") && CONTAINS(LCASE(?award), ""ukrainian eastern counteroffensive""))
  FILTER (YEAR(?date) = 2022)
  
  ?recipient rdfs:label ?recipientLabel .
  
  FILTER (LANG(?recipientLabel) = 'en')
}
ORDER BY ?recipientLabel
LIMIT 10
```",3,3,4,3,1,3,2,20,0,0,44,0,0.0,0
47,5,train,"Give me the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Mantu Ghosh""@en .
  OPTIONAL { ?person dbo:award ?award . }
}
```",1,2,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
917,6,train,Who is the father of Keʻelikōlani?,SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?person dbo:mother dbr:Keʻelikōlani .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
98,2,train,Who is the successor of Emperor Nijō?,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Nijō> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  dbr:Emperor_Nijo dbo:successor ?successor .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
839,8,train,"Give me the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?person dbo:birthName ""Charlie Huhn""@en .
  ?person dbo:associatedBand ?band .
  FILTER EXISTS { ?band a dbo:MusicalArtist . }
}
```",1,2,2,1,1,3,3,71,0,0,4,0,0.0,0
365,2,train,"Give me the commander, that is an office holder, in Ukrainian–Soviet War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?officeHolderRole WHERE {
  ?war dbo:wikiPageRedirects dbr:Ukrainian%E2%80%93Soviet_War .
  ?war dbo:participatedInMilitaryConflict ?conflict .
  ?conflict dbo:commander ?commander .
  OPTIONAL { ?commander dbo:officeHolder ?office . }
  FILTER EXISTS { ?office dbo:roleName ?officeHolderRole }
}
```",1,2,2,1,1,3,2,20,0,0,5,0,0.0,0
93,8,train,Give me the death place of the governor of Bob Bartlett.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?person a dbo:Governor ;
          foaf:name ""Bob Bartlett""@en .
  OPTIONAL { ?person dbo:dateOfDeath ?dateOfDeath . }
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
976,17,train,Who is the person born as the birth name of Naci Bostancı?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Naci Bostancı""@en .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
935,5,train,Give me the office of Sanaullah Khan Zehri.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  wd:Q1234568 dbo:positionHeld ?office .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Sanaullah Khan Zehri. You can find this identifier by searching for his name on DBpedia or using a SPARQL query to retrieve it.",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
445,7,train,Who is the commander in Battle of Saint-Mihiel?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  wd:Q1234568 wdt:P39 ?commander .
}
```

Note: In this query, `wd:Q1234568` should be replaced with the actual DBpedia identifier for the ""Battle of Saint-Mihiel"". You can find this identifier by searching DBpedia or using a SPARQL endpoint to look up the battle's details.",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
417,35,train,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Find Count Ingolf of Rosenborg's parent who is royalty
  ?countIngolf dbo:child ?parent .
  FILTER(CONTAINS(LCASE(STR(?parent)), ""royalty"")) .

  # Step 2: Get the spouse of this royal parent
  ?parent dbo:spouse ?spouse .

  # Step 3: Find Frederick Francis III's child who is royalty
  ?frederick dbp:child ?grandChild .
  FILTER(CONTAINS(LCASE(STR(?grandChild)), ""royalty"")) .

  # Step 4: Get the child of this royal grandChild
  ?grandChild dbo:child ?finalChild .

  # Ensure the spouse from step 2 is related to the final child from step 4
  ?spouse dbo:parent ?finalChild .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
892,9,train,Give me the entity in Italy and landmark at elevation of 58.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  ?landmark a dbo:Lighthouse ; 
            dbo:elevation ?elevation ;
            dbo:country dbr:Italy .
  FILTER (?elevation = ""58""^^xsd:integer)
}
```

This query selects landmarks that are located in Italy and have an elevation of exactly 58 meters. The `FILTER` clause ensures that only those entities with the specified elevation are returned.",2,2,3,1,2,3,3,71,0,0,11,0,0.0,0
865,10,train,Give me the native of British Raj and father of Shahla Khatun.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native ?father WHERE {
  ?shahlaKhatun a dbo:Person ;
                dbp:child ?father .
  ?father dbo:birthPlace ?place .
  FILTER (STRSTARTS(STR(?place), ""British Raj""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
955,6,train,Give me the band of Nate Albert and band of Johnny Rioux.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nate_Albert> . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Rioux> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?bandName WHERE {
  VALUES ?person { 
    dbr:Nate_Albert 
    dbr:Johnny_Rioux 
  }
  
  OPTIONAL {
    ?person dbo:musicalBand ?band.
    ?band rdfs:label ?bandName.
    FILTER(LANG(?bandName) = 'en')
  }
}
```",2,2,3,1,2,3,2,20,0,2,1,0.0,0.0,0
987,2,train,Give me the entity in Montenegro.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Montenegro .
}
```",1,1,2,1,1,3,3,71,909,0,0,1.0,1.0,1.0
465,38,train,"Give me the successor of the child, that is a royalty, of Anne of Brittany and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Anne of Brittany and her child Claude of France
  dbr:Claude_of_France dbo:parent dbr:Anne_of_Brittany .
  
  # Claude's spouse, Francis I of France
  dbr:Claude_of_France dbo:spouse dbr:Francis_I_of_France .

  # Successor of Claude of France (Henry II of France)
  dbr:Henry_II_of_France dbo:parent dbr:Claude_of_France .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
715,10,train,Give me the leader of Ministry of the Air (Spain) and commander in Rif War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?role1 ?role2 WHERE {
  # Find the leader of the Ministry of the Air in Spain
  ?ministry dbo:head ?leader .
  ?leader a dbo:Person ;
          rdfs:label ?name .

  FILTER CONTAINS(LCASE(?ministry), ""ministry of the air spain"") .

  BIND(""Leader of the Ministry of the Air (Spain)"" AS ?role1) .

  # Find commanders in the Rif War
  ?war dbo:commander ?commander .
  ?commander a dbo:Person ;
             rdfs:label ?name2 .

  FILTER CONTAINS(LCASE(?war), ""rif war"") .

  BIND(""Commander in the Rif War"" AS ?role2) .

  # Match if both roles are held by the same person
  VALUES (?person) { (str(?leader)) (str(?commander)) }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
987,6,train,Who is the actor of All for Free?,SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:title ""All for Free""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
645,28,train,Give me the military force of Spanish Civil War and leader of Ministry of the Army (Spain) and commander in the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?leader ?commander
WHERE {
  # Find military forces involved in the Spanish Civil War
  ?militaryForce dbo:partOfMilitaryConflict dbr:Spanish_Civil_War .

  OPTIONAL {
    # Find leader of Ministry of the Army (Spain)
    ?ministry dbo:head dbr:Ministry_of_the_Army_(Spain) .
    ?leader dbo:positionHeld ?ministry ;
            rdfs:label ?leaderLabel .
    FILTER(CONTAINS(LCASE(?leaderLabel), ""leader"") || CONTAINS(LCASE(?leaderLabel), ""commander""))
  }

  OPTIONAL {
    # Find commander Carlos Asensio Cabanillas
    ?person rdfs:label ""Carlos Asensio Cabanillas""@en ;
            dbo:positionHeld ?militaryForce .
    BIND(""Carlos Asensio Cabanillas"" AS ?commander)
  }
}
ORDER BY ?militaryForce",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
917,24,train,Give me the child of Kekūanāoʻa and child of the father of Keʻelikōlani.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfKekuanaoa ?childOfFatherOfKeelikolani
WHERE {
  # Find a child of Kekūanāoʻa
  ?keku dbr:Kekūanāoʻa .
  ?keku dbo:child ?childOfKekuanaoa .

  # Find the father of Keʻelikōlani
  ?keelikolani dbr:Keʻelikōlani .
  ?keelikolani dbo:father ?fatherOfKeelikolani .

  # Find a child of the father of Keʻelikōlani
  ?fatherOfKeelikolani dbo:child ?childOfFatherOfKeelikolani .
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
192,1,train,"Give me the child of Mary of Hungary, Queen of Naples.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_of_Hungary,_Queen_of_Naples> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse|dbo:partner ?mary .
  ?mary a dbo:Queen ;
        foaf:name ""Mary of Hungary"" ;
        dbo:country ?country .
  FILTER(?country = dbr:Naples)
  
  ?mary dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
582,3,train,"Give me the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?scientist WHERE {
  ?sugawara dbo:wikiPageID ""Hirotaka_Sugawara"" .
  ?collaboration dbo:agent1 ?sugawara ;
                dbo:agent2 ?scientist .
  FILTER(?scientist != ?sugawara)
  FILTER(STRSTARTS(LCASE(STR(?scientist)), LCASE(""http://dbpedia.org/resource/"")) && 
         !CONTAINS(LCASE(STR(?scientist)), ""list_of_people""))
}
ORDER BY ?scientist
LIMIT 10",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
98,10,train,Give me the birth place of the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  VALUES ?person { dbr:Paolo_Elito_M._Ballesteros_IV }
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
935,10,train,"Give me the office of the native of Balochistan, Pakistan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office 
WHERE {
  ?person dbo:nationality dbr:Pakistan .
  ?person dbo:birthPlace dbr:Balochistan_Pakistan .
  ?person dbo:positionHeld ?office .
}
```",2,2,3,2,1,3,2,20,0,0,35,0,0.0,0
18,4,train,Who is the professional in Actress?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?actorLabel WHERE {
  ?actor a dbo:Actor .
  OPTIONAL { ?actor dbo:birthPlace ?place . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
ORDER BY ?actorLabel
LIMIT 10
```",1,1,2,1,1,2,3,28,0,0,19241,0,0.0,0
236,9,train,"Give me the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?administration WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolderOf ?office ;
          dbo:deathPlace dbr:Quincy,_Massachusetts .
  
  OPTIONAL { ?person dbo:memberOfOrganization ?organization . }
  OPTIONAL { ?organization rdfs:label ?administration FILTER (lang(?administration) = 'en') . }

  # Filter to ensure the person is an office holder
  ?office a dbo:Office ;
          dbo:holder ?person .
}
ORDER BY ?person",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
433,31,train,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of Bill Evans.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find Paul Chambers' associated musical artists
  OPTIONAL {
    VALUES ?person { dbr:Paul_Chambers }
    ?person dbo:musicalArtist ?artist .
  }

  # Find Bill Evans' associated musical artists
  OPTIONAL {
    VALUES ?person { dbr:Bill_Evans }
    ?person dbo:musicalArtist ?artist .
  }
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
579,6,train,Give me the native of Edinburgh and person born as Isobel Jane Miller Richard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Isobel Jane Miller Richard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName ?nativePlace WHERE {
  ?person dbo:birthName ""Isobel Jane Miller Richard""@en .
  ?person dbo:nativePlace dbr:Edinburgh .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
865,29,train,"Give me the father of Shahla Khatun and native of British Raj and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Shahla Khatun's father
  ?shahlaKhatun a dbo:Person ;
                foaf:surname ""Khatun"" ;
                dbo:parent ?father .

  # Father is native of British Raj
  ?father dbo:nationality dbr:British_Raj .

  # Abu Ahmad Abdul Hafiz's child who is a politician
  ?abuAhmadAbdulHafiz a dbo:Person ;
                     foaf:surname ""Abdul Hafiz"" ;
                     dbo:parent ?child .
  
  ?child a dbo:Politician ;
         dbo:parent ?father .

}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
645,24,train,"Give me the leader of Ministry of the Army (Spain) and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?militaryForce ?event ?conflict ?societalEvent
WHERE {
  # Francisco Largo Caballero as leader of the Ministry of the Army (Spain)
  dbr:Francisco_Largo_Caballero dbo:positionHeld dbr:Ministry_of_the_Army_(Spain) .
  
  # Retrieve military forces associated with him
  ?militaryForce dbo:leader dbr:Francisco_Largo_Caballero .

  # Find events related to his leadership
  ?event dbo:agent dbr:Francisco_Largo_Caballero ;
         a dbo:MilitaryConflict ;
         a dbo:SocietalEvent .
  
  # Retrieve military conflicts he was involved in
  ?conflict dbo:leader dbr:Francisco_Largo_Caballero ;
            a dbo:MilitaryConflict .

  # Find societal events related to him
  ?societalEvent dbo:agent dbr:Francisco_Largo_Caballero ;
                 a dbo:SocietalEvent .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
130,3,train,"Give me the film, that is a soccer club and an organisation, of Candice Storey Lee.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?film dbo:director dbr:Candice_Storey_Lee .
  OPTIONAL { ?film a dbo:SoccerClub . }
  OPTIONAL { ?film a dbo:Organization . }
}
```",1,3,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
465,4,train,Give me the child of Alfonso I d'Este.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:spouse ?alfonso .
  ?alfonso foaf:name ""Alfonso I d'Este""@en .
  ?alfonso dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
715,24,train,Give me the leader of Ministry of the Air (Spain) and commander in the force of Francisco Largo Caballero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Identify Francisco Largo Caballero's role as commander-in-chief
  ?person a dbo:Person ;
          foaf:name ""Francisco Largo Caballero""@en .
  
  # Find the time period when he was in command
  ?period dbo:startDate ?start ;
          dbo:endDate ?end ;
          dbo:leader ?person .

  # Identify the Ministry of the Air in Spain during this period
  ?ministry a dbo:GovernmentAgency ;
            dbo:country dbr:Spain ;
            dbo:minister ?leader ;
            dbo:startDate ?m_start ;
            dbo:endDate ?m_end .
  
  FILTER (?start <= ?m_start && ?end >= ?m_end)
}
```

This query attempts to find the leader of the Ministry of the Air in Spain during the period when Francisco Largo Caballero was commander-in-chief. It uses DBpedia's ontology and resource identifiers to link relevant entities.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
41,11,train,"Give me the party of the work, that is an office holder, of yes.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person dbo:officeHolderOf ?office .
  ?person foaf:name ""Yes"" .
  ?person dbo:politicalParty ?party .
}
```

This query assumes:
- There is a DBpedia resource for the person named ""Yes.""
- The `dbo:officeHolderOf` property links them to an office.
- The `dbo:politicalParty` property provides their political party.

If ""Yes"" refers to something else, you might need to adjust the query accordingly.",2,3,3,2,1,2,3,28,0,0,35,0,0.0,0
965,35,train,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Prince George of Battenberg
  dbr:Prince_George_of_Battenberg dbo:spouse ?spouse .
  
  # Spouse of Princess Victoria of Hesse and by Rhine is Prince Louis IV
  dbr:Princess_Victoria_of_Hesse_and_by_Rhine dbo:spouse dbr:Louis_IV,_Grand_Duke_of_Hesse .

  # Spouse of Prince Louis IV is Princess Alice of the United Kingdom
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:spouse dbr:Princess_Alice_of_the_United_Kingdom .
  
  # Parent of Prince George of Battenberg who is a noble
  ?parent dbo:child dbr:Prince_George_of_Battenberg .
  ?parent a dbo:NoblePerson .
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
456,8,train,"Give me the band, that is a musical artist, of Dean Brody.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  dbr:Dean_Brody dbo:musicalArtist ?band .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
917,9,train,Give me the parent of Albert Kamehameha and child of Kekūanāoʻa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find Albert Kamehameha's parent who is also a child of Kekūanāoʻa
  ?albert dbo:childOf ?parent .
  ?keku dbo:childOf ?parent .

  FILTER (?albert = dbr:Albert_Kamehameha)
  FILTER (?keku = dbr:Kekūanāoʻa)
}
```

This query uses the `dbo:childOf` property to find a common parent for both Albert Kamehameha and Kekūanāoʻa. It filters the results to ensure that the entities are specifically these two individuals.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
965,21,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse 
WHERE {
  # Find George Mountbatten, 2nd Marquess of Milford Haven
  dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbo:parent ?parent .

  # Find Princess Victoria of Hesse and by Rhine's spouse
  dbr:Princess_Victoria_of_Hesse_and_by_Rhine dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
507,22,train,Give me the spouse of Anne V. Coates and professional in the profession of Guy Ferland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?profession
WHERE {
  # Find Anne V. Coates' spouse
  OPTIONAL {
    dbr:Anne_V._Coates dbo:spouse ?spouse .
  }
  
  # Find Guy Ferland's profession
  dbr:Guy_Ferland dbo:occupation ?guyProfession .

  # Find other professionals in the same field as Guy Ferland
  ?person dbo:occupation ?profession .
  FILTER(?profession = ?guyProfession)
}
```",3,3,4,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
274,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?name WHERE {
  ?professional a dbo:Person .
  ?professional dbo:profession ?occupation .
  FILTER regex(?occupation, ""desired_profession"", ""i"") .
  OPTIONAL { ?professional foaf:name ?name . }
}
```",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
329,0,train,Give me the birthplace of Eric Cross (writer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q1234568 dbo:birthPlace ?birthPlace .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Eric Cross (writer) if it is different.",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
47,38,train,Give me the office of the awardee of Banga Bhushan and office of the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?office
WHERE {
  # Find individuals who have received the Banga Bhushan award
  { 
    ?person dbo:award dbr:Banga_Bhushan_Award .
    OPTIONAL { ?person dbo:positionHeld ?office . }
  }

  UNION

  # Find individuals who have received the Padma Vibhushan award
  {
    ?person dbo:award dbr:Padma_Vibhushan .
    OPTIONAL { ?person dbo:positionHeld ?office . }
  }
}
ORDER BY ?person
```

This query does the following:
- Uses `dbo:award` to link individuals (`?person`) with the awards they have received.
- Checks for both Banga Bhushan and Padma Vibhushan awards using their respective DBpedia resources.
- Utilizes `OPTIONAL { ?person dbo:positionHeld ?office . }` to retrieve any office or position held by these awardees, if available.",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
917,11,train,"Give me the parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Kamehameha IV's resource
  VALUES ?kamehamehaIV { dbr:Kamehameha_IV_of_Hawaii }

  # Find children of Kamehameha IV who are royalty
  ?child dbo:spouse|dbo:childOf ?kamehamehaIV .
  ?child a dbo:Monarch .

  # Get the parent(s) of these royal children
  ?parent dbo:child ?child .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
433,32,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?finalArtist WHERE {
  ?scottLaFaro dbo:associatedMusicalArtist ?artist1 .
  FILTER (CONTAINS(LCASE(?artist1), ""musician"") && CONTAINS(LCASE(?artist1), ""artist"")) .

  ?paulChambers dbo:birthName ""Paul Laurence Dunbar Chambers Jr."" .
  ?paulChambers dbo:associatedMusicalArtist ?artist2 .
  FILTER (CONTAINS(LCASE(?artist2), ""musician"") && CONTAINS(LCASE(?artist2), ""artist"")) .

  ?artist1 dbo:associatedMusicalArtist ?finalArtist .
}
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
326,9,train,"Give me the birthplace, that is a state and British, of the professional in Writer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/occupation> ""Writer""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer ?birthPlace WHERE {
  ?writer a dbo:Writer .
  ?writer dbo:occupation ""Writer"" .
  ?writer dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a state within the UK
  ?birthPlace dbo:country dbr:United_Kingdom ;
             rdf:type dbo:State .
}
ORDER BY ?writer",2,4,3,2,1,3,2,20,0,0,38,0,0.0,0
917,34,train,"Give me the child of Kekūanāoʻa and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find Kekūanāoʻa
  ?kekuanaoa a dbo:Person ;
             foaf:name ""Kekūanāoʻa""@en .

  # Find the child of Kekūanāoʻa
  ?child dbo:parent ?kekuanaoa .

  # Ensure the parent is royalty
  ?parent dbo:child ?child .
  ?parent a dbo:Monarch ;
          dbo:country dbr:Hawaii .

}
```

This query does the following:
- Identifies Kekūanāoʻa as a person.
- Finds his child.
- Checks if that child has a parent who is a monarch (royalty) of Hawaii.",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
47,6,train,Give me the awardee of Banga Bhushan.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . },"```sparql
SELECT ?awardee WHERE {
  ?award dcterms:isPartOf <http://dbpedia.org/resource/Category:Banga_Bhushan_Awards> .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
976,28,train,"Give me the office of Meral Akşener and office of the leader, that is a politician, of Grand National Assembly of Turkey and office of Naci Bostancı.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeLabel WHERE {
  VALUES ?person { 
    dbr:Meral_Akşener 
    (SELECT ?leader WHERE { 
      ?assembly dbo:leader ?leader . 
      FILTER EXISTS { ?assembly a dbo:Parliament ; dbo:country dbr:Turkey } 
    }) 
    dbr:Naci_Bostancı
  }
  
  ?person dbo:office ?office .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
ORDER BY ?person",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
433,5,train,"Give me the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Find Ornette Coleman in DBpedia
  dbr:Ornette_Coleman a dbo:Musician .
  
  # Look for associated artists who are also musicians
  ?associatedArtist dbo:associatedMusicalArtist dbr:Ornette_Coleman ;
                   a dbo:Musician .

  # Ensure the associated artist is distinct from Ornette Coleman
  FILTER (?associatedArtist != dbr:Ornette_Coleman)
}
```",1,3,2,1,1,3,3,71,0,0,10,0,0.0,0
965,6,train,"Give me the child, that is a royalty, of Prince Louis of Battenberg.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:givenName ""Louis""@en .
  ?person dbo:familyName ""Battenberg""@en .
  ?person dbo:spouse ?spouse . # Assuming spouse might help in identifying children
  ?parent dbp:children ?child .
  FILTER(?parent = ?person || ?parent = ?spouse) .
  OPTIONAL { ?child dbo:royalTitle ?title } .
  FILTER(BOUND(?title))
}
```

This query does the following:

1. Identifies Prince Louis of Battenberg using his given and family names.
2. Assumes that children can be found through a spouse or directly from the person.
3. Filters for children who have a royal title, indicating royalty.",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
130,5,train,"Give me the administration, that is American, of .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> """"@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?administration a dbo:Government ;
                  dbo:country dbr:United_States .
}
```

This query selects administrations that are classified as governments and are associated with the United States.

If you meant something else by ""administration,"" please provide more context or specify the entity, and I can adjust the query accordingly.",1,2,2,1,1,3,2,20,0,0,43,0,0.0,0
773,15,train,Give me the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Step 1: Find Bernard (son of Charles the Fat)
  ?bernard a dbo:Person ;
           rdfs:label ""Bernard (son of Charles the Fat)""@en .
  
  # Step 2: Find Bernard's father
  ?bernard dbo:father ?father .

  # Step 3: Find the father of Bernard's father
  ?father dbo:father ?grandfather .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
456,33,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and spouse of Danielle Spencer (Australian actress).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  ?person dbo:alias ""Lamont Cranston""@en .
  ?person dbo:fictionalCharacter ?alterEgo .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
892,31,train,Give me the entity in the profession of the true self of Enrico Crolla and landmark at elevation of 58.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v2 <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?landmark WHERE {
  # Find Enrico Crolla's profession
  OPTIONAL { 
    dbr:Enrico_Crolla dbo:occupation ?profession .
  }
  
  # Find a landmark at an elevation of 58 meters
  OPTIONAL {
    ?landmark a dbo:Lighthouse ;
              dbo:elevationAboveSeaLevel ""58""^^xsd:decimal .
  }
}
```",4,4,5,3,2,3,3,71,0,0,11,0,0.0,0
573,27,train,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parentName WHERE {
  # Identify John Quincy Adams as an author
  dbr:John_Quincy_Adams dbo:author dbr:* .

  # Find his parents
  dbr:John_Quincy_Adams foaf:familyName ?lastName ;
                        foaf:givenName ?firstName ;
                        dbo:parent ?parent .

  # Get the parent's name
  ?parent foaf:name ?parentName .

  # Ensure the parent is a politician and an office holder
  ?parent dbo:occupation dbr:Politician ;
          dbo:officeHolderOf ?office .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
715,30,train,"Give me the commander in Spanish Civil War and commander in Rif War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spanishCivilWarCommander ?rifWarCommander ?officeLeader WHERE {
  # Spanish Civil War Commander
  ?war dbr:Spanish_Civil_War ;
      dbo:commander ?spanishCivilWarCommander .
  
  # Rif War Commander
  ?rifWar dbr:Rif_War ;
          dbo:commander ?rifWarCommander .

  # Leader of an office related to Carlos Franco Iribarnegaray
  ?office a dbo:GovernmentAgency ;
          dbo:leader ?officeLeader .
  ?office dbo:relatedTo dbr:Carlos_Franco_Iribarnegaray .
}",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
917,36,train,"Give me the parent of Albert Kamehameha and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?royaltyChild
WHERE {
  # Step 1: Find Albert Kamehameha's parent
  dbr:Albert_Kamehameha dbo:child dbr:Albert_Kamehameha_II .
  
  # Step 2: Identify the child of Kamehameha III and their father
  dbr:Kamehameha_III dbo:child ?k3Child .
  ?k3Child dbo:father ?k3ChildFather .

  # Step 3: Find a royalty among the children of that father
  ?k3ChildFather dbo:child ?royaltyChild .
  FILTER EXISTS { ?royaltyChild dbo:title ?title . FILTER regex(?title, ""King|Queen"", ""i"") }
  
  # Bind Albert Kamehameha's parent to the result
  BIND(dbr:Albert_Kamehameha_II AS ?parent)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
124,26,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?militaryForce WHERE {
  ?awardee dbo:award dbr:British_South_Africa_Company_Medal .
  
  ?event dbo:participant ?awardee ;
         a dbo:MilitaryConflict, dbo:SocietalEvent .

  ?event dbo:militaryForce ?militaryForce .
}
```

This query does the following:
- It selects distinct military forces (`?militaryForce`) involved in events.
- It identifies individuals (`?awardee`) who were awarded the British South Africa Company Medal.
- It links these awardees to events that are both military conflicts and societal events.
- Finally, it retrieves the military force associated with these events.",3,6,4,3,1,3,3,71,0,0,1434,0,0.0,0
5,4,train,"Give me the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Rubén Colón Tarrats""@en .
  ?association dbo:associatedBand ?band .
  FILTER (isLiteral(?band) = false)
}
```

This query assumes that there is an association between Rubén Colón Tarrats and bands, which might be represented in DBpedia through a property like `dbo:associatedBand`. The filter ensures that the result is not a literal but an entity representing a band.",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
976,31,train,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of Meral Akşener.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/leader> ?v0 . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeKemal ?officeMeral WHERE {
  # Find Kemal Kılıçdaroğlu's office in his administration
  OPTIONAL {
    ?kemal dbr:Kemal_Kılıçdaroğlu .
    ?kemal dbo:positionHeld ?positionKemal .
    ?positionKemal dbo:office ?officeKemal .
  }
  
  # Find Meral Akşener's office in her administration
  OPTIONAL {
    ?meral dbr:Meral_Akşener .
    ?meral dbo:positionHeld ?positionMeral .
    ?positionMeral dbo:office ?officeMeral .
  }
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
417,20,train,Give me the child of the father of Frederick IX of Denmark and spouse of Princess Caroline-Mathilde of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Frederick IX's father
  dbr:Frederick_IX_of_Denmark dbo:father dbr:Christian_X_of_Denmark .

  # Children of Christian X of Denmark
  dbr:Christian_X_of_Denmark dbo:child ?child .

  # Spouse relationship with Princess Caroline-Mathilde
  ?child dbo:spouse dbr:Princess_Caroline_Matilda_of_Denmark .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
130,1,train,Give me the entity in Tennessee.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Tennessee> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Tennessee .
}
```",1,1,2,1,1,3,2,20,0,314,688,0.0,0.0,0
442,5,train,"Give me the resting place of the work of Roosevelt, Theodore.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/author> ""Roosevelt, Theodore""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?restingPlace WHERE {
  VALUES ?theodoreRoosevelt { dbr:Theodore_Roosevelt }
  
  ?book dbo:author ?theodoreRoosevelt .
  ?book rdfs:label ?work .
  FILTER (lang(?work) = 'en')
  
  OPTIONAL {
    ?book dbo:location ?restingPlace .
  }
}
```",2,2,3,2,1,2,2,9,0,1,1,0.0,0.0,0
236,14,train,"Give me the party member of the administration of the reference, that is an office holder and a politician, to James Madison.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?party WHERE {
  # James Madison's presidency period
  VALUES ?presidencyPeriod { ""1809-1817"" }

  # Find people who were part of his administration
  ?administration dbo:startDate ?start .
  ?administration dbo:endDate ?end .
  
  FILTER (?start <= ""1809-01-01T00:00:00Z""^^xsd:dateTime && ?end >= ""1817-12-31T23:59:59Z""^^xsd:dateTime)
  
  # Find people who were office holders and politicians
  ?administration dbo:member ?person .
  ?person a dbo:OfficeHolder ;
          a dbo:Politician .

  # Get the political party of each person
  OPTIONAL { ?person dbp:party ?party . }
}
```",3,5,4,3,1,3,2,20,0,0,597,0,0.0,0
965,30,train,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and spouse of Prince Louis of Battenberg and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Identify Prince George of Battenberg
  ?person a dbo:NoblePerson ;
          foaf:name ""Prince George of Battenberg"" ;
          dbo:spouse dbr:Prince_Louis_of_Battenberg ;
          dbo:child dbr:Louise_Mountbatten .

  # Find the parent of Prince George of Battenberg
  ?person dbo:parent ?parent .
}
```

This query does the following:
- It identifies a person (`?person`) who is a noble, named ""Prince George of Battenberg"", spouse of ""Prince Louis of Battenberg"", and parent of ""Louise Mountbatten"".
- It then retrieves the parent of this identified person.",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
508,0,train,Give me the birthplace of Ma Hongkui.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ma_Hongkui> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Ma Hongkui. You can find this by searching for Ma Hongkui on DBpedia or using a SPARQL endpoint to query for his identifier.",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
507,32,train,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and spouse of the person born as Anne Voase Coates.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/director> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?director WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Beryl_Reid ;
         dbo:director ?director .

  ?person foaf:name ""Anne Voase Coates""@en .
  ?person dbo:birthName ""Anne Voase Coates"" .
  
  ?spouse foaf:mbox ?email .
  ?spouse dbo:spouse ?person .
  ?spouse dbo:spouse ?director .

}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
124,10,train,Give me the military force of Battle of Atbara and commander in Mahdist War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . },"```sparql
SELECT ?battle ?militaryForce1 ?commander1 ?militaryForce2 ?commander2 WHERE {
  ?battle dbo:wikiPageRedirects dbpedia-owl:Battle_of_Atbara .
  ?battle dbo:militaryConflicts dbr:Mahdist_War .
  
  OPTIONAL { 
    ?battle dbo:combatant1 ?entity1 .
    ?entity1 rdfs:label ?militaryForce1 FILTER (LANG(?militaryForce1) = ""en"") .
    ?entity1 dbo:commander ?person1 .
    ?person1 rdfs:label ?commander1 FILTER (LANG(?commander1) = ""en"") .
  }
  
  OPTIONAL { 
    ?battle dbo:combatant2 ?entity2 .
    ?entity2 rdfs:label ?militaryForce2 FILTER (LANG(?militaryForce2) = ""en"") .
    ?entity2 dbo:commander ?person2 .
    ?person2 rdfs:label ?commander2 FILTER (LANG(?commander2) = ""en"") .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
582,10,train,Give me the figure known as --10-19 and reference to Japan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?label WHERE {
  ?entity rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""10-19"") && CONTAINS(LCASE(?label), ""japan""))
  FILTER(langMatches(lang(?label), ""en""))
}
```",2,2,3,1,2,3,3,71,0,6,1,0.0,0.0,0
965,3,train,Give me the parent of Louise Mountbatten.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  VALUES ?louiseMountbatten { dbr:Louise_Mountbatten }
  ?louiseMountbatten dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER(LANG(?parentName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,2,2,0.0,0.0,0
445,28,train,"Give me the death place of Patrick Moore and entity in the residence, that is a country, of Anna Sharkey and entity in United Kingdom.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?residenceCountry ?ukEntity
WHERE {
  # Get death place of Patrick Moore
  dbr:Patrick_Moore dbo:placeOfBirth ?deathPlace .

  # Get residence country of Anna Sharkey
  dbr:Anna_Sharkey dbo:countryResidence ?residenceCountry .

  # Find an entity in the United Kingdom
  ?ukEntity a dbo:City ;
            dbo:country dbr:United_Kingdom .
}
```

This query assumes that:
- `dbo:placeOfBirth` is used for death place (though typically it's birth, this might be a placeholder or error in data).
- `dbo:countryResidence` is the property for residence country.
- We are looking for any city (`dbo:City`) within the United Kingdom.",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
554,10,train,"Give me the birth place of the band, that is an artist, of Rita Redshoes.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandBirthPlace WHERE {
  # Rita Redshoes entity
  dbr:Rita_Redshoes dbo:associatedBandOrArtist ?band .

  # Ensure the band is also an artist
  ?band a dbo:MusicalArtist .

  # Get the birthplace of the band
  ?band dbo:birthPlace ?bandBirthPlace .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
433,2,train,Give me the professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?musician ?name WHERE {
  ?musician rdf:type dbo:Musician .
  ?musician rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,7563,0,0.0,0
365,12,train,"Give me the person born as Symon Vasylyovych Petliura and spouse of the native, that is a politician, of Poltava Governorate.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . ?result <http://dbpedia.org/property/birthName> ""Symon Vasylyovych Petliura""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName WHERE {
  # Find Symon Vasylyovych Petliura
  dbr:Symon_Petliura dbo:birthName ""Symon Vasylyovych Petliura"" .
  
  # Get his spouse
  dbr:Symon_Petliura dbo:spouse ?spouse .

  # Ensure the spouse is a politician and native to Poltava Governorate
  ?spouse dbo:nationality ?nationality ;
          dbp:birthPlace ?birthPlace ;
          dbo:occupation ?occupation .
  
  FILTER (CONTAINS(LCASE(?occupation), ""politician""))
  FILTER (CONTAINS(LCASE(STR(?birthPlace)), ""poltava governorate""))

  # Get the spouse's name
  ?spouse rdfs:label ?spouseName .
}
ORDER BY ?spouseName",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
433,29,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and professional in Musician and associated musical artist of Paul Chambers.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find Scott LaFaro's associated musical artist who is also an artist and a musician.
  ?laFarosArtist dbo:associatedMusicalArtist ?person .
  FILTER (?laFarosArtist = dbp:Scott_LaFaro) .
  
  ?person rdf:type dbo:Musician ;
          dbo:associatedMusicalArtist ?intermediateArtist .

  # Step 2: From that person, find their associated musical artist who is professional in Musician and associated with Paul Chambers.
  ?intermediateArtist dbo:associatedMusicalArtist ?finalArtist .
  
  FILTER EXISTS { ?finalArtist rdf:type dbo:Musician . }
  FILTER EXISTS { 
    ?chambersAssociation dbo:associatedMusicalArtist ?finalArtist ;
                         dbp:profession ""Musician""^^xsd:string .
    ?chambersAssociation dbp:associatedMusicalArtist dbp:Paul_Chambers
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
273,0,train,Give me the spouse of Edoardo Agnelli (industrialist).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Edoardo_Agnelli_(industrialist)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Edoardo Agnelli""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
645,29,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and leader of Ministry of the Army (Spain) and commander in Battle of Jarama.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Francisco Largo Caballero as leader of the Ministry of the Army (Spain)
  dbr:Francisco_Largo_Caballero dbo:positionHeld dbr:Ministry_of_the_Army_(Spain) .
  
  # Francisco Largo Caballero's role in Battle of Jarama
  dbr:Battle_of_Jarama dbo:commander dbr:Francisco_Largo_Caballero .

  # Linking to military force through his roles
  ?militaryForce dbo:leader dbr:Francisco_Largo_Caballero .
  
  OPTIONAL {
    ?event dbo:type dbr:Military_Conflict ;
           dbo:participant dbr:Battle_of_Jarama .
    
    ?societalEvent dbo:relatedEvent ?event .
  }
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
129,18,train,Give me the associated musical artist of the person born as Tahj Malik Chandler and associated musical artist of EarthGang.,"SELECT ?result WHERE { <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist1Label ?artist2Label WHERE {
  # For Lil Uzi Vert (Tahj Malik Chandler)
  VALUES (?person1) { dbr:Lil_Uzi_Vert }
  
  OPTIONAL {
    ?person1 dbo:associatedMusicalArtist ?artist1 .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  # For EarthGang
  VALUES (?group2) { dbr:EarthGang }
  
  OPTIONAL {
    ?group2 dbo:associatedMusicalArtist ?artist2 .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
773,38,train,"Give me the parent of the child, that is a royalty, of Louis the German and parent of the successor of Charles the Bald.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Find children of Louis the German who were royalty
  ?child dbo:spouse*/* dbo:royalHouse ?royalHouse .
  ?child dbo:father dbr:Louis_the_German .

  # Step 2: Find successors of Charles the Bald
  ?successor dbo:predecessor dbr:Charles_the_Bald .

  # Step 3: Find parent of each successor
  ?successor dbo:parent ?parent .

  # Step 4: Check if any parent matches Louis the German
  FILTER(?parent = dbr:Louis_the_German)
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
353,4,train,Give me the entity in Russia and alma mater of Daniil Yegorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniil_Yegorov> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInRussia ?almaMater
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Daniil Yegorov""@en .
  
  OPTIONAL { 
    ?person dbo:birthPlace ?entityInRussia .
    FILTER (lang(?entityInRussiaLabel) = 'ru' && regex(str(?entityInRussiaLabel), ""^.*Россия.*$"", ""i""))
  }
  
  OPTIONAL {
    ?person dbo:almaMater ?almaMater .
  }

  SERVICE <http://dbpedia.org/sparql> {
    VALUES ?label { 
      (str(?entityInRussia) str(?almaMater))
    }
    ?label rdfs:label ?labelValue .
    FILTER(lang(?labelValue) = 'en')
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
582,19,train,Give me the player in Kazuaki Nagasawa and reference to the residence of Hirotaka Sugawara.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?residence WHERE {
  # Find Kazuaki Nagasawa's team or club
  OPTIONAL {
    ?nagasawa a dbo:Person ;
              foaf:name ""Kazuaki Nagasawa"" .
    ?nagasawa dbo:team ?player .
  }
  
  # Find Hirotaka Sugawara's residence
  OPTIONAL {
    ?sugawara a dbo:Person ;
              foaf:name ""Hirotaka Sugawara"" .
    ?sugawara dbo:residenceLocation ?residence .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
122,4,train,Give me the band of Gift of Gab (rapper) and band member of Lyrics Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Lyrics_Born> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandGiftOfGab ?bandLyricsBorn WHERE {
  # Gift of Gab and his band Blackalicious
  OPTIONAL { 
    dbr:Gift_of_Gab dbo:memberOf ?bandGiftOfGab .
    FILTER(CONTAINS(LCASE(STR(?bandGiftOfGab)), ""blackalicious""))
  }
  
  # Lyrics Born and his bands Latyrx and solo career
  OPTIONAL {
    dbr:Lyrics_Born dbo:memberOf ?bandLyricsBorn .
    FILTER(
      CONTAINS(LCASE(STR(?bandLyricsBorn)), ""latyrx"") ||
      CONTAINS(LCASE(STR(?bandLyricsBorn)), ""lyrics born"")
    )
  }
}
```",2,2,3,1,2,2,2,9,0,0,2,0,0.0,0
326,1,train,Give me the professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . },"```sparql
SELECT ?composer WHERE {
  ?composer a dbo:Composer .
}
```",1,1,2,1,1,2,2,9,0,0,1916,0,0.0,0
892,25,train,"Give me the landmark at elevation of 58 and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark ?elevation ?region WHERE {
  ?landmark a dbo:Landmark ;
            dbo:elevationAboveSeaLevel ?elevation ;
            dbo:country dbr:Italy ;
            dbo:administrativeRegion ?region .
  
  FILTER (?elevation = ""58""^^xsd:integer)
  
  ?region a dbo:AdministrativeRegion, dbo:Settlement ;
          dbp:politicalParty dbr:Democratic_Party_(Italy) .

}
```

This query does the following:
- Selects landmarks that are in Italy and have an elevation of 58.
- Ensures these landmarks are part of a region classified as both an administrative region and a settlement.
- Checks for any association with the Democratic Party (Italy).",3,7,4,2,2,3,3,71,0,0,2,0,0.0,0
645,35,train,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader WHERE {
  # Find offices associated with Camilo Menéndez Tolosa
  ?office1 dbo:employee dbr:Camilo_Menéndez_Tolosa .
  
  # Ensure the office is a government agency and an organization
  ?office1 rdf:type dbo:GovernmentAgency ;
           rdf:type dbo:Organization .

  # Find offices associated with Carlos Asensio Cabanillas
  ?office2 dbo:employee dbr:Carlos_Asensio_Cabanillas .

  # Ensure the same office is found for both individuals
  FILTER (?office1 = ?office2)

  # Retrieve leader of the identified office
  ?office1 dbo:leader ?leader .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
926,2,train,Give me the child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?s dbo:child ?child .
  ?s foaf:name ""Ahmed III""@en .
}
```

This query looks for entities (`?s`) that have a `dbo:child` relationship and are named ""Ahmed III"" in English. It retrieves the children of Ahmed III.",1,1,2,1,1,3,3,71,0,0,11,0,0.0,0
573,1,train,"Give me the person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Quincy,_Massachusetts .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,3,71,0,0,40,0,0.0,0
839,19,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of Peter Schorowsky.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v0 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?band
WHERE {
  # Find Kevin Richard Russell (Kevin Russell)
  { 
    VALUES ?person { dbr:Kevin_Russell_(musician) }
    OPTIONAL { ?person dbo:musicalArtistBand ?band . }
  }

  UNION

  # Find Peter Schorowsky
  { 
    VALUES ?person { dbr:Peter_Schorowsky }
    OPTIONAL { ?person dbo:musicalArtistBand ?band . }
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
573,15,train,"Give me the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?administration WHERE {
  # Find the DBpedia resource for Charlie Baker, Australian footballer
  dbr:Charlie_Baker_(Australian_footballer) dbo:birthName ?realName .
  
  # Find any administrative regions related to this real name
  ?person rdfs:label ?realName ;
          dbo:residence ?location .
  ?location dbo:administrativeRegion ?administration .
}
```

This query assumes that the DBpedia resource for Charlie Baker, the Australian footballer, is `dbr:Charlie_Baker_(Australian_footballer)`. It retrieves his real name and then looks for any administrative regions associated with locations where he resides.",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
933,3,train,"Who is the band, that is an artist and a musical artist, of The Ramong Sound?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?band a dbo:Band .
  ?band dbo:artist dbr:The_Ramones .
}
```",1,3,2,1,1,3,3,71,0,0,3,0,0.0,0
527,1,train,Give me the author of The Boy Who Kicked Pigs.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Boy_Who_Kicked_Pigs> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  ?book dcterms:title ""The Boy Who Kicked Pigs""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
166,4,train,Give me the reference to Madrid.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . }","```sparql
SELECT ?reference WHERE {
  wd:Q289 wd:sitelink ?reference .
  FILTER (langMatches(lang(?reference), ""en""))
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
465,20,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Find Ercole II d'Este and his successor
  dbr:Ercole_II_d%27Este_(Duke_of_Ferrara) dbo:successor ?successor .
  
  # Ensure the successor is a royalty child of Ferdinand I, Holy Roman Emperor
  ?successor dbo:childOf dbr:Ferdinand_I,_Holy_Roman_Emperor ;
             a dbo:Monarch .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
102,12,train,"Give me the manager of Sheffield United W.F.C. and native of the residence, that is English and a settlement, of Peter Finbow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Sheffield_United_W.F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Find Peter Finbow's place of residence
  ?person a dbo:Person ;
          foaf:name ""Peter Finbow"" ;
          dbo:nationality dbr:England ;
          dbo:residence ?residence .

  # Ensure the residence is an English settlement
  ?residence a dbo:Settlement ;
             dbp:country dbr:England .

  # Find Sheffield United W.F.C. manager
  ?team a dbo:SportsTeam ;
        foaf:name ""Sheffield United W.F.C."" ;
        dbo:manager ?manager .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
326,5,train,"Give me the person decedent at the region coded, that is a settlement, as 442/760.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/areaCode> ""442/760"" . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?place a dbo:Settlement ;
        rdfs:label ""442/760"" ; # Assuming this is the label for the settlement
        dbo:location ?location .
  
  OPTIONAL { 
    ?deathEvent dbo:place ?place ;
                dbo:agent ?person .
  }
}
```

This query assumes:
- There is a settlement with the label ""442/760.""
- The `dbo:place` property links a death event to this location.
- The `dbo:agent` property identifies the person involved in the death event.

Please note that the exact properties and labels might need adjustment based on the actual data available in DBpedia. If ""442/760"" is not directly labeled as a settlement, you may need to adjust the query to match how this region is represented in DBpedia.",2,3,3,2,1,2,2,9,0,0,699,0,0.0,0
456,31,train,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Ross_Newton .
  
  OPTIONAL { ?movie dbo:type dbr:TelevisionShow . }
  
  ?actor dbo:starring ?movie .
  
  ?actor dbo:spouse ?spouse .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
465,33,train,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouse WHERE {
  ?parent dbo:child ?elizabeth .
  ?elizabeth foaf:name ""Elizabeth of Austria""@en .
  ?parent foaf:name ""Ferdinand I, Holy Roman Emperor""@en .
  
  ?ercole2 dbo:succeededBy ?alfonso2 .
  ?ercole2 foaf:name ""Ercole II d'Este""@en .
  ?alfonso2 foaf:name ""Alfonso II d'Este""@en .

  ?alfonso2 dbo:spouse ?renée .
  ?renée foaf:name ""Renée of France""@en .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
93,3,train,"Give me the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?headquarters WHERE {
  ?park dbo:headquarters ?headquarters .
  FILTER (?park = dbpedia:Lake_Clark_National_Park_and_Preserve)
  
  ?headquarters rdf:type dbp:Settlement ;
                rdf:type dbp:Region .
}
```",1,3,2,1,1,3,2,20,0,0,5,0,0.0,0
102,5,train,"Give me the residence, that is English and a settlement, of Peter Finbow.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  # Identify Peter Finbow's resource
  dbr:Peter_Finbow dbo:residenceLocation ?location .
  
  # Ensure the location is a settlement in England
  ?location rdf:type dbo:Settlement ;
            dbp:country ""England""@en .

  # Bind the residence to the variable
  BIND(?location AS ?residence)
}
```

This query does the following:
- It starts by identifying Peter Finbow's resource.
- It looks for a `residenceLocation` property, which might indicate where he resides.
- It filters results to ensure that the location is of type `Settlement` and located in England.",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
527,8,train,"Give me the author of the work, that is a work and a book, of Tom Baker.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?book ?author WHERE {
  ?work dbo:author dbr:Tom_Baker .
  ?work a dbo:Book .
  ?work rdfs:label ?book .
  OPTIONAL { ?work dbo:author ?author . }
}
```",2,4,3,2,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
433,10,train,Give me the associated musical artist of Paul Chambers and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?paulChambers a dbo:MusicalArtist ;
                 foaf:name ""Paul Chambers"" .
  
  ?association dbo:associatedBandOrMusicalGroup ?band ;
               dbo:member ?paulChambers .

  ?artist a dbo:MusicalArtist ;
          foaf:name ?name ;
          dbo:member ?association .

  FILTER(?artist != ?paulChambers)
}
```",2,2,3,1,2,3,3,71,0,0,15,0,0.0,0
273,12,train,Give me the parent of the alumnus of University of Turin and spouse of Edoardo Agnelli (industrialist).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Edoardo_Agnelli_(industrialist)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person dbo:almaMater dbr:University_of_Turin ;
          dbo:spouse dbr:Edoardo_Agnelli_(industrialist) .
  
  ?person dbo:parent ?parent .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
715,6,train,Give me the force of Francisco Largo Caballero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?role WHERE {
  VALUES ?person { dbr:Francisco_Largo_Caballero }
  ?person dbo:positionHeld ?position .
  ?position dbo:title ?role .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
926,37,train,Give me the successor of the child of the spouse of Şermi Kadın and child of Ahmed III.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
    dbr:Şermi_Kadın dbo:spouse ?spouse .
    
    ?child dbo:parent ?spouse ;
           dbo:parent dbr:Aḥmed_III .

    ?child dbo:successor ?successor .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
826,3,train,Give me the father of Anna Magdalena Appel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  wd:Q1234567 wdt:P22 ?father .
}
```

Note: In this query, `wd:Q1234567` should be replaced with the actual DBpedia identifier for Anna Magdalena Bach (Anna Magdalena Appel is a common misspelling of her name). You can find the correct identifier by searching DBpedia or Wikidata.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
606,3,train,"Give me the nickname of DeKalb, Illinois.","SELECT ?result WHERE { <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  dbr:DeKalb_(Illinois) dbo:nickname ?nickname .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
47,4,train,Give me the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . },"```sparql
SELECT ?administration WHERE {
  wd:Q1234568 wdt:P39 ?administration .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Jagdeep Dhankhar. You can find this by searching for his DBpedia page or using a SPARQL query to identify him.",1,1,2,1,1,3,3,71,0,0,49,0,0.0,0
791,6,train,Give me the child of Emperor Takakura.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?emperor a dbo:Monarch ;
           dbp:name ""Emperor Takakura""@en .
  ?emperor dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
582,24,train,"Give me the figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?masami a dbo:Person ;
          dbp:name ""Masami Nagasawa""@en .
  
  ?masami dbo:parent ?father .

  ?father dbo:nationality dbr:Japan ; # Assuming nationality is Japan, adjust if needed
          (dbo:sportCareer | dbo:occupation) ?role .
  
  FILTER (
    EXISTS { ?father dbo:athlete true . } ||
    EXISTS { ?father dbo:soccerManager true . } ||
    EXISTS { ?father dbo:sportsManager true . }
  )
  
  OPTIONAL {
    ?figure dbp:knownAs ""--10-19"" ;
            dbo:person ?father .
  }

  FILTER (BOUND(?figure))
}
```

This query does the following:
- Identifies Masami Nagasawa using her name.
- Finds her father by querying the `dbo:parent` property.
- Checks if the father has roles as an athlete, soccer manager, or sports manager.
- Optionally matches a figure known as --10-19 to this person.",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
98,7,train,Give me the region of Philippine Standard Time and entity in Philippines.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?entity WHERE {
  # Find entities in the Philippines
  ?entity a dbo:Place ;
          dbo:country dbr:Philippines .

  OPTIONAL {
    # Find regions associated with Philippine Standard Time
    ?timeZone dbo:place dbr:Philippines .
    ?region dbo:timezone ?timeZone ;
            rdfs:label ?regionLabel .
    
    FILTER (lang(?regionLabel) = 'en')
    BIND(str(?regionLabel) AS ?region)
  }
}
```

This query does the following:
- Selects entities that are places in the Philippines.
- Optionally finds regions associated with Philippine Standard Time and binds their labels to a variable for output.",2,2,3,1,2,2,3,28,0,0,1743,0,0.0,0
465,13,train,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Identify Ferdinand I, Holy Roman Emperor
  ?ferdinand a dbo:Emperor ;
             foaf:name ""Ferdinand I"" ;
             dbo:countryReigned dbr:Austria .

  # Find his children who are royalty
  ?child dbo:parent ?ferdinand ;
         a dbo:Monarch ;
         dbp:title ?title .

  # Get the spouses of those royal children
  ?child dbo:spouse ?spouse .
}
```",2,3,3,2,1,3,3,71,0,0,7,0,0.0,0
839,29,train,Give me the band of the member of Böhse Onkelz and band of Matthias Röhr and band of Kevin Russell (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandName WHERE {
  # Böhse Onkelz members
  VALUES ?member { 
    dbr:Der_Wolf_(musician) 
    dbr:Kevin_Russell_(musician) 
    dbr:Matthias_Röhr 
    dbr:Stephan_Bretschneider 
  }
  
  # Get bands for Böhse Onkelz members
  ?member dbo:bandMemberOf ?band .
  
  # Get band names
  ?band rdfs:label ?bandName .

  FILTER (lang(?bandName) = 'en')
  
  UNION

  # Matthias Röhr's other bands
  {
    dbr:Matthias_Röhr dbo:bandMemberOf ?otherBand .
    ?otherBand rdfs:label ?otherBandName .
    FILTER (lang(?otherBandName) = 'en')
  }

  UNION

  # Kevin Russell's other bands
  {
    dbr:Kevin_Russell_(musician) dbo:bandMemberOf ?kevinBand .
    ?kevinBand rdfs:label ?kevinBandName .
    FILTER (lang(?kevinBandName) = 'en')
  }
}
ORDER BY ?bandName",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
987,39,train,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/timeZone> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity WHERE {
  # Find the time zone of Canicosa de la Sierra
  ?canicosa a dbo:Place ;
            dbp:timeZone ?timezone .

  FILTER (str(?canicosa) = ""Canicosa_de_la_Sierra"")

  # Find sports events in that time zone
  ?event a dbo:SportsEvent ;
         dbp:locationTimezone ?timezone .

  # Determine the region/country of these sports events
  ?event dbp:country ?regionCountry .

  # Identify Moamer Kasumović's birthplace
  dbr:Moamer_Kasumović dbo:birthPlace ?birthPlace .

  # Find the entity in that region/country
  ?entity a dbo:Country ;
          rdfs:label ?regionLabel .
  
  FILTER (str(?regionCountry) = str(?entity))
  FILTER (lang(?regionLabel) = 'en')
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
102,2,train,"Give me the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . },"```sparql
SELECT ?player WHERE {
  ?team rdf:type dbo:NationalSoccerTeam .
  ?team dbo:country dbr:England .
  ?team dbo:member ?player .
  ?player dbo:sport dbr:Soccer .
}
```",1,2,2,1,1,3,2,20,0,0,147,0,0.0,0
865,26,train,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  # Step 1: Identify Syeda Shahar Banu
  ?syeda a dbo:Person ;
         foaf:name ""Syeda Shahar Banu""@en .

  # Step 2: Find her spouse
  ?spouse dbo:spouseOf ?syeda .

  # Step 3: Determine their children who are politicians
  ?child dbo:parent ?spouse ;
         dbo:parent ?syeda ;
         a dbo:Politician .

  # Step 4: Retrieve the father of that child (which is the spouse)
  ?father dbo:spouseOf ?child .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
41,18,train,"Give me the party of the work, that is an office holder, of yes and party of Declan Costello.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""yes""@en . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?partyLabel WHERE {
  # Find individuals with the name ""Yes""
  { 
    ?person rdfs:label ""Yes""@en .
    ?person dbo:officeHolderOf ?office .
    ?person dbo:politicalParty ?party1 .
    BIND (str(?party1) AS ?party)
  }
  
  UNION
  
  # Find individuals with the name ""Declan Costello""
  { 
    ?person rdfs:label ""Declan Costello""@en .
    ?person dbo:officeHolderOf ?office .
    ?person dbo:politicalParty ?party2 .
    BIND (str(?party2) AS ?party)
  }
  
  # Get the label of the political party
  ?party rdfs:label ?partyLabel .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
978,7,train,"Give me the band member of the professional, that is a musical artist and an artist, in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?person a dbo:MusicalArtist .
  ?person a dbo:Artist .
  ?band dbo:member ?person .
  ?band dbo:member ?bandMember .
  FILTER(?person != ?bandMember)
}
```

This query selects band members of individuals who are both musical artists and general artists. It assumes that the `dbo:MusicalArtist` and `dbo:Artist` classes exist in DBpedia, which they do.",2,4,3,2,1,3,2,20,0,0,9007,0,0.0,0
18,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?name WHERE {
  ?professional a dbo:Person .
  ?professional dbo:profession ?occupation .
  FILTER regex(?occupation, ""desired_profession"", ""i"") .
  OPTIONAL { ?professional foaf:name ?name . }
}
```",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
453,5,train,"Give me the religion of the birth place, that is a country, of William Denning.",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Denning> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/religion> ?result . },"```sparql
SELECT ?religion WHERE {
  # Find William Denning's birthplace
  dbpedia:William_Denning dbo:birthPlace ?birthPlace .

  # Check if the birthplace is a country
  ?birthPlace rdf:type dbo:Country .

  # Get the religion associated with that country
  ?birthPlace dbo:religion ?religion .
}
```",2,3,3,2,1,2,2,9,0,0,1,0,0.0,0
573,38,train,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Step 1: Identify the author of ""Exchequer Standards""
  ?author dbo:work ?exchequerStandards .
  ?exchequerStandards rdfs:label ""Exchequer Standards""@en .

  # Step 2: Find the parent who is a politician and an office holder
  ?parent dbo:child ?author ;
          a dbo:Politician, dbo:OfficeHolder .

  # Step 3: Determine the residence of William J. Phelan that is a settlement
  dbr:William_J._Phelan dbo:placeOfDeath ?residence .
  ?residence a dbo:Settlement .

  # Step 4: Ensure the person decedent at this residence
  ?decedent dbo:placeOfDeath ?residence ;
            dbo:deathPlace ?residence .
}
```",4,7,5,2,2,3,3,71,0,0,2,0,0.0,0
459,9,train,Give me the person born as John Kevin Stitt and governor of Dana Murphy.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person foaf:name ""John Kevin Stitt""@en .
  ?person dbo:birthName ""John Kevin Stitt"" .
  ?person dbo:office dbr:Governor_of_Oklahoma .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
93,5,train,Who is the governor of Bob Bartlett?,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor ?name WHERE {
  ?governor a dbo:Governor ;
            dbo:stateOrTerritory dbr:Alaska ;
            dbo:termStart ?start ;
            dbo:termEnd ?end .
  
  FILTER (?start <= ""1983-12-31""^^xsd:date && 
          ?end >= ""1959-01-03""^^xsd:date)

  OPTIONAL { ?governor foaf:name ?name }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
329,4,train,"Give me the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?timeZone dbo:wikiPageRedirects dbr:Western_European_Time .
  ?timeZone dbo:location ?place .
  ?place a dbo:Country .
  ?place rdfs:label ?country .
  FILTER (lang(?country) = 'en')
}
```",1,2,2,1,1,2,3,28,0,0,6,0,0.0,0
216,15,train,Give me the office of the mayor of Ros Bates and administration of .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> """"@en . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?administrationStart ?administrationEnd WHERE {
  # Find Ros Bates as a person in DBpedia
  ?person rdfs:label ""Ros Bates""@en .
  
  # Link the person to their office held, specifically mayor
  ?person dbo:holdsPublicOffice ?office .
  ?office dbo:positionTitle ?title .

  # Filter for the title of Mayor
  FILTER(CONTAINS(LCASE(?title), ""mayor""))

  # Get details about her administration period
  OPTIONAL {
    ?office dbo:startDate ?administrationStart .
    ?office dbo:endDate ?administrationEnd .
  }
  
  # Ensure we are getting information specifically related to Ros Bates
  ?person foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""ros bates""))
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
47,26,train,"Give me the office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  # Find awards related to Mantu Ghosh
  ?award dbo:recipient ?person .
  ?award dbo:relatedPerson dbr:Mantu_Ghosh .

  # Get the office held by the awardee
  ?person dbo:positionHeld ?office .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
715,21,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Abd el-Krim resource
  dbr:Abd_el-Krim a dbo:Person .

  # Military conflict involvement
  OPTIONAL { 
    dbr:Abd_el-Krim dbo:militaryConflict ?conflict .
  }

  # Ministry of the Air leadership
  OPTIONAL {
    dbr:Abd_el-Krim dbo:positionHeld ?ministryPosition ;
                    ?ministryPosition dbo:officeHolderStartDate ?startDate ;
                    ?ministryPosition dbo:officeHolderEndDate ?endDate .
    FILTER EXISTS { 
      ?ministryPosition rdfs:label ""Ministry of the Air (Spain)""@en .
    }
  }

  # Commander in military conflict
  OPTIONAL {
    ?conflict dbo:commander ?commander ;
              dbo:participant dbr:Abd_el-Krim .
  }

  FILTER EXISTS { 
    ?ministryPosition rdfs:label ""Ministry of the Air (Spain)""@en .
  }
}
ORDER BY ?commander
LIMIT 1",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
715,20,train,Give me the commander in the force of Francisco Largo Caballero and commander in Rif War.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderInRepublicanForces ?rifWarCommander
WHERE {
  # Find Francisco Largo Caballero's resource
  VALUES ?franciscoLargoCaballero { dbr:Francois_Largo_Caballero }

  # Find commanders under him in the Republican forces
  ?franciscoLargoCaballero dbo:commanderOf ?unit .
  ?unit dbo:commander ?commanderInRepublicanForces .

  # Find a commander involved in the Rif War
  ?rifWarCommander dbo:participatedInMilitaryConflict ?rifWar .
  ?rifWar dbr:Rif_War .
}
```

This query assumes that there are properties like `dbo:commanderOf` and `dbo:participatedInMilitaryConflict` available in DBpedia to link commanders with their respective military units or conflicts. Adjustments might be necessary based on the actual schema of DBpedia.",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
459,4,train,"Who is the administration, that is a politician, of Brad Henry?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Brad Henry""@en .
  
  OPTIONAL { ?person dbo:officeHeld ?office . }
  OPTIONAL { ?office dbo:partOf ?administration . }

  FILTER EXISTS { ?person dbr:Brad_Henry . }
}
```",1,2,2,1,1,2,3,28,0,0,30,0,0.0,0
582,17,train,"Give me the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?result . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  ?person dbo:nationality dbr:Japan .
  ?person rdfs:label ""Hajime Moriyasu""@en .
  
  ?person dbo:team ?team .
  ?team a dbo:SportsTeam ;
        dbo:commonName ?nickname .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
456,25,train,"Give me the band of the band, that is a musical artist, of Dean Brody and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?artist a dbo:MusicalArtist ;
          foaf:name ""Dean Brody""@en .
  OPTIONAL { ?artist dbo:band ?band . }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
281,10,train,"Give me the awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?conflict WHERE {
  ?person dbr:Lawrence_Moore_Cosgrave .
  ?person dbo:recipientOf ?award .
  ?award dbo:relatedTo ?conflict .
  ?conflict a dbo:MilitaryConflict .
}
```",2,3,3,2,1,2,3,28,0,0,656,0,0.0,0
874,13,train,"Give me the band of the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Horace Andy as a musical artist
  dbr:Horace_Andy dbo:musicalArtistOf ?work .
  
  # The work is associated with an artist (band)
  ?work dbo:artist ?band .

  # Ensure the band is also recognized as an artist in DBpedia
  ?band a dbo:Band .
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
41,16,train,"Give me the party of the work, that is an office holder, of yes and party of Mark Durkan.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ""yes""@en . ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeHolder ?partyName
WHERE {
  # Find office holders named ""Yes""
  { 
    ?officeHolder a dbo:OfficeHolder ;
                  foaf:name ""Yes""@en .
    OPTIONAL { ?officeHolder dbo:politicalParty ?party . }
  } UNION
  # Find office holder Mark Durkan and his party
  { 
    ?officeHolder a dbo:OfficeHolder ;
                  foaf:name ""Mark Durkan""@en .
    OPTIONAL { ?officeHolder dbo:politicalParty ?party . }
  }

  # Get the name of the political party
  OPTIONAL {
    ?party rdfs:label ?partyName .
    FILTER (lang(?partyName) = 'en')
  }
}
```",3,4,4,2,2,2,3,28,0,1048577,1,0.0,0.0,0
508,14,train,"Give me the birthplace of the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Hu Yukun"" ;
          dbo:nationality dbr:Saudi_Arabia ;
          dbo:placeOfBirth ?birthPlace .
  
  OPTIONAL { 
    ?event dbo:location dbr:Saudi_Arabia ;
           dbo:type dbr:MilitaryConflict ;
           dbo:participant ?person .
  }
}
```

This query does the following:
- Searches for a person (`?person`) who is of type `dbo:MilitaryPerson`.
- Matches the name ""Hu Yukun"".
- Ensures the nationality is Saudi Arabia.
- Retrieves the birthplace (`?birthPlace`).
- Optionally checks if this person participated in an event (`?event`) that took place in Saudi Arabia and was a military conflict.",3,6,4,3,1,3,2,20,0,0,3,0,0.0,0
47,10,train,Give me the office of Suvendu Adhikari and office of Ajoy Mukherjee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeName WHERE {
  VALUES ?person { 
    dbr:Suvendu_Adhikari 
    dbr:Ajoy_Mukherjee
  }
  
  ?person dbo:positionHeld ?office .
  ?office rdfs:label ?officeName .
  FILTER (lang(?officeName) = 'en')
}
ORDER BY ?person",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
93,12,train,Give me the death place of the governor of Bob Bartlett and capital of Alaska.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?v0 . <http://dbpedia.org/resource/Alaska> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?capital
WHERE {
  # Find Bob Bartlett's death place
  dbr:Bob_Bartlett dbo:deathPlace ?deathPlace .

  # Find the capital of Alaska
  dbr:Alaska dbo:capital ?capital .
}
```",3,3,4,2,2,3,2,20,1,3,0,0.25,1.0,0.4
955,10,train,"Who is the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  dbr:Street_Dogs a dbo:Band ;
                  dbo:bandMember ?member .

  ?member a dbo:MusicalArtist .
  ?member a dbo:Artist .
}
```",2,7,3,2,1,3,2,20,0,0,2,0,0.0,0
465,5,train,Give me the parent of Elizabeth of Austria (1526–1545).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentLabel WHERE {
  VALUES ?elizabeth { dbr:Elizabeth_of_Austria_(1526–1545) }
  ?elizabeth dbo:parent ?parent .
  ?parent rdfs:label ?parentLabel .
  FILTER(LANG(?parentLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
329,2,train,Give me the entity in Northern Ireland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Northern_Ireland .
}
```",1,1,2,1,1,2,3,28,9,232,837,0.03734439834024896,0.010638297872340425,0.01655933762649494
933,9,train,Give me the band of Mike Elliott (saxophonist) and reference to Alan Warner.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?referenceToAlanWarner WHERE {
  # Find Mike Elliott, the saxophonist
  ?mikeElliott a dbo:Saxophonist ;
               foaf:name ""Mike Elliott"" .

  # Look for band affiliations
  ?mikeElliott dbo:memberOf ?band .

  OPTIONAL {
    # Reference to Alan Warner
    ?referenceToAlanWarner dbo:wikiPageRedirects dbr:Alan_Warner .
  }
}
```

This query does the following:
- It identifies Mike Elliott as a saxophonist.
- It retrieves any bands he is associated with using the `dbo:memberOf` property.
- It optionally includes references to Alan Warner, assuming there might be some redirection or related information available.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
917,4,train,"Who is the child, that is a royalty, of Kamehameha IV?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?kamehamehaIV .
  FILTER (str(?kamehamehaIV) = ""Kamehameha_IV"")
  
  ?person dbo:child ?child .
  
  OPTIONAL { 
    ?child a ?class .
    FILTER (
      str(?class) IN (
        ""http://dbpedia.org/ontology/Royal"",
        ""http://dbpedia.org/ontology/Monarch""
      )
    )
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
933,36,train,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of Mike Elliott (saxophonist).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1947-04-21""^^xsd:date ;
          dbo:member ?band .
  
  ?band a dbo:Band, dbo:Organization .

  ?mikeElliott a dbo:Saxophonist ;
               dbo:member ?band .

  FILTER (str(?person) = str(dbr:Mike_Elliott_(saxophonist)))
}
```",4,8,5,3,2,3,3,71,0,0,3,0,0.0,0
715,36,train,"Give me the commander in Rif War and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?office WHERE {
  # Find Carlos Franco Iribarnegaray
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@en .
  
  # Check if he was a commander in the Rif War
  ?rifWar dbo:commander ?person .
  ?rifWar rdfs:label ""Rif War""@en .

  # Find the office he led, which is both a government agency and an organization
  ?office dbo:leader ?person ;
          rdf:type dbo:GovernmentAgency , dbo:Organization .

  # Bind the person to commander role
  BIND(?person AS ?commander)
}
```

This query does the following:
- Identifies Carlos Franco Iribarnegaray as a person.
- Checks if he was a commander in the Rif War.
- Finds an office that is both a government agency and an organization, which he led.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
865,20,train,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and native of British Raj.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherName WHERE {
  # Find Abu Ahmad Abdul Hafiz
  ?person a dbo:Person ;
          foaf:name ""Abu Ahmad Abdul Hafiz""@en .
  
  # Identify his children who are politicians and natives of British Raj
  ?child dbo:parent ?person ;
         dbo:nationality dbr:British_Raj ;
         dbo:occupation dbr:Politician .

  # Retrieve the father's name
  ?father dbo:spouse ?mother ;
          dbo:child ?child .
  
  ?father foaf:name ?fatherName .
}
```

This query assumes:
- The use of `foaf:name` for names, which is common in DBpedia.
- The existence of properties like `dbo:parent`, `dbo:nationality`, and `dbo:occupation`.
- That the relationships are correctly modeled in DBpedia.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
459,7,train,Give me the person born as John Kevin Stitt and governor of Oklahoma.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthName ""John Kevin Stitt"" .
  ?person dbo:governmentRole <http://dbpedia.org/resource/Governor_of_Oklahoma> .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
281,18,train,Give me the awardee of the award of Alfred Warden and awardee of Medal bar.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  VALUES ?award { 
    dbr:Alfred_Warden_Award 
    dbr:Medal_Bar 
  }
  
  ?award dbo:recipient ?awardee .
}
```

This query assumes that the awards are represented in DBpedia with the resources `dbr:Alfred_Warden_Award` and `dbr:Medal_Bar`, and that the recipients are linked using the `dbo:recipient` property.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
917,13,train,Give me the child of the father of Keʻelikōlani.,SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Princess Keʻelikōlani
  dbr:Princess_Keʻelikōlani dbo:father ?father .
  
  # Find the children of her father
  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
579,9,train,"Give me the residence, that is English and a settlement, of the resident of Scotland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?residence WHERE {
  ?person dbo:nationality dbr:United_Kingdom ;
          dbo:birthPlace dbr:Scotland .
  
  ?person dbo:currentResidence ?residence .

  ?residence a dbo:Settlement ;
             dbo:country dbr:England .
}
```",2,4,3,2,1,3,2,20,0,0,8,0,0.0,0
865,31,train,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of AK Abdul Momen.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeLanguage WHERE {
  # Find AK Abdul Momen's father
  ?father dbo:spouse ?mother .
  ?mother dbo:child dbr:AK_Abdul_Momen .

  # Find the residence of the father at his death in Patna
  ?deathEvent dbo:place dbr:Patna ;
              dbo:agent ?father ;
              dbo:location ?residence .

  # Check if the residence is a country
  ?residence rdf:type dbo:Country .

  # Get the native language of that country
  ?residence dbo:nativeLanguage ?nativeLanguage .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
456,12,train,Give me the band of Alan Doyle and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?profession 
WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Alan Doyle""@en .
  
  OPTIONAL { ?person dbp:band ?band . }
  OPTIONAL { ?person dbo:occupation ?profession . }

  FILTER (lang(?band) = 'en' && lang(?profession) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
926,1,train,Give me the successor of Mustafa III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  dbr:Mustafa_III dbo:reignEnd ?end .
  ?successor dbo:reignStart ?start .
  FILTER (?start > ?end)
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
124,27,train,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce WHERE {
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  ?person dbo:birthPlace ?place .
  
  OPTIONAL { 
    ?event dbo:agent ?person ;
           a ?eventType .
    FILTER (
      (strstarts(str(?eventType), ""http://dbpedia.org/ontology/SocietalEvent"") ||
       strstarts(str(?eventType), ""http://dbpedia.org/ontology/MilitaryConflict""))
    )
  }
  
  OPTIONAL {
    ?event dbo:participatingMilitaryForce ?militaryForce .
  }

  FILTER EXISTS { ?event . } # Ensure there is an event
}
LIMIT 1",3,5,4,3,1,3,3,71,0,0,1190,0,0.0,0
47,20,train,Give me the office of the awardee of Banga Bhushan and office of Suvendu Adhikari.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?office
WHERE {
  # Find awardees of Banga Bibhushan
  ?award dbr:Banga_Bibhushan_Recipient ?awardee .
  
  OPTIONAL {
    ?awardee dbo:holdsOffice ?office .
  }
  
  UNION
  
  # Specific case for Suvendu Adhikari
  {
    ?person dbr:Suvendu_Adhikari .
    ?person dbo:holdsOffice ?office .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
130,12,train,"Give me the entity in the administration, that is American, of  and figure known as Vanderbilt Commodores.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> """"@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/state> ?v0 . ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Vanderbilt_Commodores> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:United_States .
  ?person dbo:positionHeld ?role .
  ?role dbo:organization dbr:Vanderbilt_Commodores .
  FILTER EXISTS { ?person a dbo:Person }
}
```

This query does the following:
- Selects entities (`?person`) who have American nationality.
- Checks if they hold a position (`dbo:positionHeld`) related to an organization, specifically the Vanderbilt Commodores.
- Ensures that the entity is of type `dbo:Person`.",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
926,30,train,"Give me the child of the father, that is a royalty, of Mustafa III and successor of Mustafa III and father of Mahmud II.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Mustafa III's father
  dbr:Mustafa_III dbo:father dbr:?Father .

  # The child of Mustafa III who is royalty and his successor
  dbr:Mustafa_III dbo:child ?child .
  ?child a dbo:Monarch .
  ?child dbo:successorOf dbr:Mustafa_III .

  # This child must also be the father of Mahmud II
  ?child dbo:father dbr:Mahmud_II .

}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
124,25,train,"Give me the military force of Battle of Tamai and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?force1 ?force2 ?kitchenerEvent ?kitchenerForce
WHERE {
  # Battle of Tamai forces
  dbr:Battle_of_Tamai dbo:participatingMilitaryUnit ?force1 .
  dbr:Battle_of_Tamai dbo:opposingMilitaryUnit ?force2 .

  # Herbert Kitchener's societal and military events
  OPTIONAL {
    ?kitchenerEvent dbo:agent dbr:Herbert_Kitchener_1st_Earl_Kitchener ;
                    a dbo:MilitaryConflict .
    ?kitchenerEvent dbo:participatingMilitaryUnit ?kitchenerForce .
  }
}
```

This query does the following:
- Retrieves military units involved in the Battle of Tamai.
- Optionally retrieves events associated with Herbert Kitchener that are classified as military conflicts, along with their participating forces.",3,5,4,2,2,3,3,71,0,0,4,0,0.0,0
326,3,train,"Give me the birthplace, that is a state and British, of David Jessel.",SELECT ?result WHERE { <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthplace WHERE {
  # Identify David Jessel
  dbr:David_Jessel dbo:birthPlace ?birthplace .

  # Ensure the birthplace is a state
  ?birthplace rdf:type dbo:State .

  # Check for British association (either directly or through country)
  OPTIONAL { ?birthplace dbo:country dbr:United_Kingdom . }
  FILTER EXISTS { ?birthplace dbo:country dbr:United_Kingdom . }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
645,38,train,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Find the office led by Camilo Menéndez Tolosa
  ?office dbo:type/dbo:subClassOf* dbo:GovernmentAgency ;
          dbo:type/dbo:subClassOf* dbo:Organization ;
          dbo:head dbr:Camilo_Menéndez_Tolosa .
  
  # Find the military force associated with Francisco Largo Caballero
  ?force dbo:type/dbo:subClassOf* dbo:MilitaryConflict ;
         dbo:type/dbo:subClassOf* dbo:SocietalEvent ;
         dbo:participatedIn dbr:Francisco_Largo_Caballero .
  
  # Find the leader of that military force
  ?force dbo:leader ?leader .
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
47,14,train,Give me the office of the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient ?office
WHERE {
  ?award dbo:category dbr:Padma_Vibhushan.
  ?award dbo:recipient ?recipient.
  OPTIONAL { ?recipient dbo:positionHeld ?office. }
}
```

This query does the following:
- It selects recipients (`?recipient`) of awards that fall under the category `Padma Vibhushan`.
- It optionally retrieves any office or position held by these recipients (`?office`).

Note: The exact property names like `dbo:category`, `dbo:recipient`, and `dbo:positionHeld` might need to be adjusted based on the actual schema in DBpedia, as it can vary over time.",2,2,3,2,1,3,3,71,0,0,77,0,0.0,0
445,26,train,Give me the death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?award dbo:dateEstablished ""1820-03-10""^^xsd:date .
  ?award dbo:recipient ?person .
  ?person dbo:deathPlace ?deathPlace .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
216,7,train,Give me the administration of  and office of Tim Nicholls.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> """"@en . <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?office
WHERE {
  VALUES ?tim_nicholls { dbr:Tim_Nicholls }
  
  ?tim_nicholls dbo:positionHeld ?office .
  OPTIONAL { ?office dbo:partOf ?administration . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
192,11,train,"Give me the child of Mary of Hungary, Queen of Naples and spouse of the spouse, that is a royalty, of Charles Martel of Anjou.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_of_Hungary,_Queen_of_Naples> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?spouse WHERE {
  # Mary of Hungary, Queen of Naples
  dbr:Mary_of_Hungary_(Queen_of_Naples) dbo:child ?child .
  
  # The child must be royalty
  ?child a dbo:Monarch .

  # Find the spouse of this child
  ?child dbo:spouse ?spouse .

  # Check if the spouse is related to Charles Martel of Anjou
  OPTIONAL { ?spouse dbo:spouse dbr:Charles_Martel_of_Anjou }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
874,2,train,"Give me the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . },"```sparql
SELECT ?work WHERE {
  ?artist foaf:name ""Horace Andy""@en .
  ?artist dbo:recorded ?album .
  ?album dbo:genre dbr/Reggae_music .
  ?album dbo:track ?work .
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
773,36,train,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of Louis the German.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Carloman of Bavaria and his father
  dbr:C._of_Bavaria dbo:father ?father .

  # Father's father (grandfather) who is an office holder and a royalty
  ?father dbo:father ?grandfather .
  ?grandfather a dbo:Monarch ;
              a dbo:OfficeHolder .

  # Spouse of Louis the German
  dbr:Louis_the_German dbo:spouse ?spouse .

  # Child of that spouse who is a royalty
  ?spouse dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .

  # Parent of that royal child
  ?royalChild dbo:parent ?parent .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
433,23,train,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Find Paul Chambers' birth details
  dbr:Paul_Chambers a dbo:Musician ;
                    dbo:birthDate ?birthDate ;
                    dbo:birthPlace ?birthPlace .

  # Find other artists with the same birth date and place
  ?person a dbo:MusicalArtist, dbo:Artist ;
          dbo:birthDate ?birthDate ;
          dbo:birthPlace ?birthPlace .
  
  FILTER(?person != dbr:Paul_Chambers)

  # Return the associated artist
  BIND(?person AS ?associatedArtist)
}
```",3,5,4,3,1,3,3,71,0,0,31,0,0.0,0
41,13,train,"Give me the party of Declan Costello and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?declanParty ?leaderParty WHERE {
  # Find Declan Costello and his party
  OPTIONAL {
    ?declan a dbo:Politician ;
           foaf:name ""Declan Costello"" ;
           dbp:party ?declanParty .
  }

  # Find the leader of the 2005 Castlereagh Borough Council election
  OPTIONAL {
    ?leader a dbo:Politician, dbo:OfficeHolder ;
            dbp:electedAsLeaderOf dbr:2005_Castlereagh_Borough_Council_election ;
            dbp:party ?leaderParty .
  }
}
```

This query uses optional patterns to find the party affiliations of Declan Costello and the leader of the specified election. It assumes that relevant data is available in DBpedia under these properties.",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
281,1,train,Give me the awardee of Medal bar.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
SELECT ?awardee WHERE {
  ?medal a dbo:Medal ;
         dbo:recipient ?awardee .
  FILTER regex(?medal, ""Bar"", ""i"")
}
```",1,1,2,1,1,2,3,28,0,0,656,0,0.0,0
465,11,train,Give me the successor of the child of Alfonso I d'Este.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v0 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Step 1: Identify Alfonso I d'Este
  ?alfonso a dbo:Person ;
           foaf:name ""Alfonso I d'Este""@en .

  # Step 2: Find his children
  ?alfonso dbp:child ?child .

  # Step 3: Determine the successors of those children
  ?child dbo:successor ?successor .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
124,29,train,"Give me the commander in Mahdist War and military force of Battle of Atbara and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?commander ?battleOfAtbaraForce ?warForce WHERE {
  # Find the Mahdist War event
  ?mahdistWar dbo:wikiPageRedirects dbpedia:Mahdist_War .
  
  # Get the commander of the Mahdist War
  ?mahdistWar dbo:militaryCommander ?commander .

  # Get the Battle of Atbara as an event within the Mahdist War
  ?battleOfAtbara dbo:event ?mahdistWar ;
                  dbo:participatingMilitaryUnit ?battleOfAtbaraForce .
  
  # Get military forces involved in the Mahdist War
  ?warParticipant dbo:participatingIn ?mahdistWar ;
                  a dbo:MilitaryConflict ;
                  dbo:militaryUnit ?warForce .

  # Filter for Frank Rhodes as a British Army officer
  ?commander foaf:name ""Frank Rhodes"" .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
130,10,train,"Give me the administration, that is American, of the award of Živko Ključe.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  # Assuming there's a resource for Živko Ključe
  dbr:Živko_Klju%C4%87e dbo:awardReceived ?award .
  
  # Find the administration responsible for the award
  ?award dbo:administeredBy ?administration .

  # Filter by American administration
  ?administration dbo:nationality dbr:United_States .
}
```",2,3,3,2,1,3,2,20,0,0,43,0,0.0,0
443,3,train,Give me the award of William Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  wd:Q12345 dbo:award ?award .
}
```

Note: Replace `wd:Q12345` with the actual DBpedia identifier (Q-number) for William Shepherd. You can find this by searching for ""William Shepherd"" on DBpedia or using a SPARQL endpoint to query his Q-number.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
124,30,train,"Give me the military force of Battle of Tamai and commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?force1 ?commander1 ?force2 ?commander2 ?kitchenerEvent ?kitchenerConflict
WHERE {
  # Battle of Tamai in the Mahdist War
  VALUES ?battle { dbr:Battle_of_Tamai }
  
  OPTIONAL {
    ?battle dbo:participatingMilitaryUnit ?force1 .
    ?force1 dbo:commander ?commander1 .
  }
  
  OPTIONAL {
    ?battle dbo:opposingMilitaryUnit ?force2 .
    ?force2 dbo:commander ?commander2 .
  }

  # Herbert Kitchener's involvement
  VALUES ?kitchener { dbr:Herbert_Kitchener_1st_Earl_Kitchener }
  
  OPTIONAL {
    ?kitchener dbo:societalEvent ?kitchenerEvent .
  }
  
  OPTIONAL {
    ?kitchener dbo:militaryConflict ?kitchenerConflict .
  }
}
```

This query attempts to retrieve:

- The military forces (`?force1` and `?force2`) involved in the Battle of Tamai.
- The commanders (`?commander1` and `?commander2`) of these forces.
- Any societal event (`?kitchenerEvent`) associated with Herbert Kitchener.
- Any military conflict (`?kitchenerConflict`) involving Herbert Kitchener.

Note: The exact properties like `dbo:participatingMilitaryUnit`, `dbo:opposingMilitaryUnit`, `dbo:societalEvent`, and `dbo:militaryConflict` are hypothetical and may need adjustment based on the actual DBpedia schema. You might need to explore DBpedia's ontology or use a SPARQL endpoint to refine these properties.",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
216,0,train,Give me the office of Tim Nicholls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person foaf:name ""Tim Nicholls""@en .
  ?person dbo:positionHeld ?office .
}
```",1,1,2,1,1,2,3,28,0,0,15,0,0.0,0
892,12,train,Give me the entity in Province of Reggio Emilia and landmark at elevation of 58.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?landmark WHERE {
  ?entity a dbo:Place ;
          dbo:locatedIn dbr:Province_of_Reggio_Emilia .
  
  ?landmark a dbo:Landmark ;
            dbo:elevation ""58""^^xsd:float ;
            dbo:location ?entity .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
102,7,train,Give me the manager of the player in Ellie Roebuck.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?player a dbo:FootballPlayer ;
          foaf:name ""Ellie Roebuck""@en .
  
  ?team dbo:member ?player .
  
  ?team dbo:coach ?manager .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
582,12,train,Give me the player in Kazuaki Nagasawa and figure known as --10-19.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?figure
WHERE {
  ?player a dbo:Footballer ;
          foaf:name ""Kazuaki Nagasawa""@en .
  
  OPTIONAL {
    ?figure dbo:role ""--10-19"" ;
            dbo:player ?player .
  }
}
```

This query does the following:
- Searches for an entity that is of type `dbo:Footballer` and has a name ""Kazuaki Nagasawa"".
- Optionally looks for a related figure with a role ""--10-19"".",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
216,25,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in Mario Ivanković.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ""1983-12-20""^^xsd:date ;
          dbo:sportsManagerOf ?managerRole ;
          dbo:coach ?marioIvankovic .
  
  ?managerRole a dbo:SportsManager ;
               dbo:teamManaged ?team .

  ?marioIvankovic dbr:Mario_Ivanković ;
                  dbo:player ?person .

  FILTER EXISTS { ?person dbo:soccerPlayer }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
917,37,train,"Give me the child of the father of the spouse, that is a royalty, of Leleiohoku I and child of Kekūanāoʻa.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?leleiohoku1 dbo:spouse ?spouse .
  ?spouse dbo:father ?father .
  ?father dbo:child ?child .
  ?child a dbo:Monarch .
  ?child dbo:parent ?kekuanaoa .
  FILTER (str(?leleiohoku1) = ""Leleiohoku I"")
}
```

This query assumes that the relationships are directly available in DBpedia and uses common properties like `dbo:spouse`, `dbo:father`, `dbo:child`, and `dbo:parent`. The filter ensures we're specifically looking at Leleiohoku I.",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
459,0,train,Give me the governor of Oklahoma.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . },"```sparql
SELECT ?governor WHERE {
  wd:Q1749 dbo:governmentHead ?governor .
  ?governor a dbo:Governor .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
417,11,train,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find Count Ingolf of Rosenborg
  ?countIngolf a dbo:Person ;
               dbp:name ""Count Ingolf of Rosenborg"" .

  # Find his parent(s)
  ?parent dbo:child ?countIngolf .

  # Determine which parent is royalty
  ?parent dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""royalty"") || CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))

  # Retrieve the spouse of that royal parent
  ?parent dbo:spouse ?spouse .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
236,13,train,"Give me the party member of the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?party WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolderOf dbr:Quincy,_Massachusetts ;
          dbo:memberOf ?administration .
  
  ?administration dbo:politicalParty ?party .

  FILTER (isLiteral(?party))
}
```

This query does the following:
- Selects individuals (`?person`) who are politicians and office holders in Quincy, Massachusetts.
- Finds the administration (`?administration`) they were part of.
- Retrieves the political party (`?party`) associated with that administration.",3,6,4,3,1,3,2,20,0,0,269,0,0.0,0
573,6,train,"Give me the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""William J. Phelan""@en .
  
  ?person dbo:residence ?residence .

  ?residence a dbo:Settlement .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
926,15,train,Give me the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  ?neşerekKadın a dbo:Person ;
                foaf:name ""Neşerek Kadın""@en .
  
  ?neşerekKadın dbo:spouse ?spouse .

  ?spouse dbo:parent ?father .
}
```",2,2,3,2,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
606,8,train,Give me the birthplace of the alumnus of University of Pennsylvania.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus ?birthPlace
WHERE {
  ?alumnus dbo:almaMater dbp:University_of_Pennsylvania .
  ?alumnus dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,2,20,0,0,598,0,0.0,0
216,37,train,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of Ognjen Vukojević.",SELECT ?result WHERE { <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coach WHERE {
  # Find the team associated with Ognjen Vukojević
  ?team a dbo:SoccerClub ;
        dbo:member dbr:Ognjen_Vukojević .

  # Ensure the team is also an organization and sports club
  ?team a dbo:Organization, dbo:SportsTeam .

  # Find the coach of this team
  ?coach dbo:managerOf ?team .

  # Ensure the coach is a soccer player, sports manager, and soccer manager
  ?coach a dbo:SoccerPlayer ;
         dbo:sportManagerType dbo:SoccerManager .
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
443,8,train,Give me the landmark at elevation of the award of William Shepherd.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Assuming William Shepherd is linked to a specific award event or location
  dbr:William_Shepherd dbo:awardReceived dbr:Specific_Award_Event .

  # Find the elevation of the award event
  dbr:Specific_Award_Event dbo:elevation ?elevation .

  # Find landmarks at that elevation
  ?landmark dbo:elevation ?elevation .
}
```

**Notes**:
- Replace `dbr:William_Shepherd` and `dbr:Specific_Award_Event` with the actual DBpedia resources for William Shepherd and the specific award event.
- Ensure the property `dbo:elevation` is correctly used; it might need adjustment based on available data in DBpedia.",2,2,3,2,1,2,3,28,0,0,349,0,0.0,0
573,28,train,"Give me the parent of John Quincy Adams and person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?decedentQuincy ?decedentAdmin
WHERE {
  # Parent of John Quincy Adams
  dbr:John_Quincy_Adams dbo:father ?parent .

  # Person decedent at Quincy, Massachusetts
  ?decedentQuincy dbo:deathPlace dbr:Quincy,_Massachusetts ;
                  dbo:deathDate ?dateQuincy .
  
  # Person decedent during Charlie Baker's administration (2015-2023)
  ?decedentAdmin dbo:deathDate ?dateAdmin ;
                 FILTER (?dateAdmin >= ""2015-01-01""^^xsd:date && ?dateAdmin <= ""2023-12-31""^^xsd:date) .
}
```",4,5,5,2,3,3,3,71,0,0,2,0,0.0,0
465,8,train,"Give me the child, that is a royalty, of Anne of Brittany.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Anne of Brittany as subject
  dbr:Anne_of_Brittany dbo:spouse ?parent .

  # Find children who are royalty
  ?parent dbo:child ?child .
  ?child a dbo:Monarch ;
         rdfs:label ?name .
  
  FILTER (lang(?name) = 'en')
}
ORDER BY ?name",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
456,36,train,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of Danielle Spencer (Australian actress).",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandOfBand WHERE {
  # Step 1: Find Alan Doyle's band
  ?alanDoyle a dbo:Person ;
             foaf:name ""Alan Doyle""@en .
  ?alanDoyle dbo:musicalArtist ?dooleysCove .

  # Step 2: Find Danielle Spencer and her spouse
  ?danielleSpencer a dbo:Person ;
                   foaf:name ""Danielle Spencer""@en ;
                   dbo:spouse ?spouse .

  # Step 3: Find the band of Danielle Spencer's spouse
  ?spouse dbo:musicalArtist ?bandOfSpouse .

  # Step 4: Find the musical artist that is a band for this second band
  ?bandOfSpouse dbo:band ?bandOfBand .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
926,19,train,Give me the successor of Mustafa III and father of the father of Abdulaziz.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?fatherOfGrandfather WHERE {
  # Find the successor of Mustafa III
  dbr:Mustafa_III dbo:successionSuccessor dbr:?successor .
  
  # Find Abdulaziz's grandfather and his father
  dbr:Abdulaziz_Ibn_Saud dbo:father dbr:Abdullah_bin_Faisal ;
                        dbo:father dbr:Faisal_bin_Turki .
  dbr:Faisal_bin_Turki dbo:father ?fatherOfGrandfather .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
83,5,train,Who is the governor of Dilma Rousseff?,SELECT ?result WHERE { <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?president WHERE {
  ?dilma dbo:officeHolderOf dbr:President_of_Brazil .
  ?dilma foaf:name ""Dilma Rousseff""@en .
  
  OPTIONAL { 
    ?term dbo:startDate ?start ;
          dbo:endDate ?end ;
          dbo:officeHolder ?president .
    FILTER (?start <= ?end)
  }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
507,12,train,"Give me the director of Entertaining Mr Sloane (film) and professional in Film director, television director.","SELECT ?result WHERE { <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
SELECT ?director WHERE {
  ?film dcterms:title ""Entertaining Mr Sloane""@en .
  ?film dbo:director ?director .
  ?director rdf:type dbo:FilmDirector ;
            dbo:occupation ""Film director"" ;
            dbo:occupation ""Television director"" .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
892,38,train,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of the award of Anna Ishii.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity a dbo:Region ;
          a dbo:Settlement ;
          a dbo:AdministrativeRegion ;
          dbo:country dbr:Italy .

  ?entity dbo:party dbr:Democratic_Party_(Italy) .

  ?landmark dbo:elevation ?elevation .
  ?award dbo:recipient dbr:Anna_Ishii .
  ?award dbo:elevation ?elevation .

  FILTER(?elevation = ?elevation)
}
```

This query attempts to find an entity that matches all the specified criteria. Note that some assumptions are made about how these relationships might be represented in DBpedia, and additional refinement may be necessary based on actual data availability.",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
18,8,train,Give me the professional in the award of Ana María Sánchez de Ríos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?profession 
WHERE {
  ?person rdfs:label ""Ana María Sánchez de Ríos""@en .
  
  ?award dbo:recipient ?person .
  
  OPTIONAL {
    ?person dbo:profession ?profession .
  }
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
47,39,train,"Give me the office of the awardee of the entity, that is an award, in India and office of Bidesh Ranjan Bose.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?awardeeOffice ?bosesOffice
WHERE {
  # Find awards given in India
  ?award dbo:country dbr:India .
  
  # Find awardees of these awards
  ?award dbo:recipient ?person .
  
  # Get offices held by the awardees
  OPTIONAL { ?person dbo:office ?awardeeOffice . }
  
  # Find Bidesh Ranjan Bose and his office
  dbr:Bidesh_Ranjan_Bose dbo:office ?bosesOffice .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
267,10,train,Give me the birth date of the reference to Dan Cathy.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . ?v0 <http://dbpedia.org/ontology/birthDate> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthDate WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Dan Cathy""@en .
  OPTIONAL { ?person dbo:birthday ?birthDate . }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
874,1,train,Give me the band of Robert Hart (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Robert_Hart_(musician)> . },"```sparql
SELECT ?band WHERE {
  wd:Q1234567 dbo:musicArtist <http://dbpedia.org/resource/Category:Musicians> .
  wd:Q1234567 foaf:name ""Robert Hart""@en .
  ?band dbo:member wd:Q1234567 .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
456,38,train,"Give me the band of the band, that is a musical artist, of Dean Brody and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Dean Brody"" .
  
  OPTIONAL { 
    ?person foaf:alias ""The Shadow"" .
  }
  
  ?person dbo:memberOfBand ?band .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
281,2,train,Give me the awardee of Volunteer Decoration.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:wikiPageRedirects dbr:Volunteer_Decoration .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,2,3,28,0,0,12,0,0.0,0
976,0,train,Give me the office of Mustafa Şentop.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  wd:Q1234568 dbo:positionHeld ?office .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Mustafa Şentop. You can find this by searching for his DBpedia page or using a SPARQL query to identify him.",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
865,12,train,Give me the father of Shahla Khatun and father of AK Abdul Momen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?fatherName WHERE {
  VALUES ?person { 
    dbr:Shahla_Khatun 
    dbr:AK_Abdul_Momen
  }
  
  OPTIONAL {
    ?person dbo:father ?father .
    ?father rdfs:label ?fatherName .
    FILTER (lang(?fatherName) = 'en')
  }
}
ORDER BY ?person",2,2,3,1,2,3,3,71,0,3,1,0.0,0.0,0
955,7,train,Give me the band of the writer of Don't Forget Your Roots (album).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?album dbo:artist dbr:Bob_Marley .
  ?album rdfs:label ""Don't Forget Your Roots""@en .
  ?band dbo:leadArtist dbr:Bob_Marley .
}
```

This query does the following:
- It uses `dbo:artist` to link the album to Bob Marley.
- It checks for the specific album title using `rdfs:label`.
- It finds the band where Bob Marley is listed as a lead artist using `dbo:leadArtist`.",2,2,3,2,1,3,2,20,0,0,18,0,0.0,0
456,19,train,Give me the professional in  and spouse of the actor of Pacific Drive.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?professional ?spouse WHERE {
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""Pacific Drive""@en .

  OPTIONAL { ?actor dbo:profession ?professional . }
  OPTIONAL { ?actor dbp:spouse ?spouse . }

  FILTER(LANG(?movie) = 'en')
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
926,0,train,Give me the father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  wd:Q1234 wdt:P22 ?father .
}
```

Note: Replace `wd:Q1234` with the actual DBpedia identifier for Mahmud II. You can find this by searching for ""Mahmud II"" in DBpedia or using a SPARQL endpoint to query for his identifier.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
456,37,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and band of Alan Doyle.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?bandName WHERE {
  # Lamont Cranston's alter ego
  OPTIONAL {
    dbr:Lamont_Cranston dbo:fictionalAlterEgo ?alterEgo .
  }
  
  # Alan Doyle's band
  OPTIONAL {
    dbr:Alan_Doyle dbo:memberOfBand ?band .
    ?band rdfs:label ?bandName .
    FILTER (lang(?bandName) = 'en')
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
433,20,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and associated musical artist of Paul Chambers.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist3 WHERE {
  # Step 1: Find Scott LaFaro's associated musical artist
  ?laFaro dbo:musicalArtist ?artist1 .
  FILTER (str(?laFaro) = ""Scott LaFaro""^^xsd:string)
  
  # Ensure the artist is also a musician
  ?artist1 dbo:occupation dbp:musician .

  # Step 2: Find Paul Chambers' associated musical artist
  ?chambers dbo:musicalArtist ?artist2 .
  FILTER (str(?chambers) = ""Paul Chambers""^^xsd:string)
  
  # Ensure the artist is also a musician
  ?artist2 dbo:occupation dbp:musician .

  # Step 3: Find the associated musical artist of both artists found in steps 1 and 2
  ?artist1 dbo:musicalArtist ?artist3 .
  ?artist2 dbo:musicalArtist ?artist3 .
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
791,23,train,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseOfSpouse WHERE {
  # Find Emperor Takakura
  ?emperor a dbo:Monarch ;
           dbp:name ""Emperor Takakura""@en .
  
  # Find his spouse
  ?emperor dbo:spouse ?firstSpouse .

  # Find the spouse of the first spouse (second spouse)
  ?firstSpouse dbo:spouse ?spouseOfSpouse .

  # Ensure the second spouse is a royalty
  ?spouseOfSpouse a dbo:Monarch .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
933,7,train,"Who is the person born, that is a musical artist, on 1947-04-21?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthDate ""1947-04-21""^^xsd:date .
  ?person dbo:occupation dbr_Musician .
}
```",1,2,2,1,1,3,3,71,0,0,4,0,0.0,0
433,11,train,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Identify Paul Laurence Dunbar Chambers Jr. in DBpedia
  dbr:Paul_Laurence_Dunbar_Chambers_Jr_ (dbo:associatedMusicalArtist) ?artist .
  
  # Ensure the associated artist is a musical artist and an artist
  ?artist a dbo:Musician ;
          a dbo:Artist .
}
```",2,4,3,2,1,3,3,71,0,0,31,0,0.0,0
216,34,train,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and team of Ognjen Vukojević.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/coach> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coach WHERE {
  # Find the coach of Croatia U21
  ?team dbo:coach ?coach .
  
  # Ensure the team is Croatia U21
  VALUES ?team { dbr:Croatia_national_under-21_football_team }
  
  # Ensure the coach is associated with an organization and a soccer club
  ?coach dbo:memberOf ?organization .
  ?organization a dbo:SoccerClub .
  
  # Optionally, filter by Ognjen Vukojević if needed
  FILTER (str(?coach) = ""Ognjen_Vukojević"")
}
```

This query does the following:
- Selects the coach (`?coach`) of the team identified as Croatia U21.
- Ensures that the coach is associated with an organization classified as a soccer club.
- Optionally filters by the specific name of Ognjen Vukojević if you want to ensure it matches exactly.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
124,37,train,"Give me the military force of Battle of Atbara and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleOfAtbaraForces ?eventForces WHERE {
  # Step 1: Identify the awardee of the British South Africa Company Medal
  ?medalAwarded a dbo:Award ;
                dbo:recipient ?awardee .

  FILTER (str(?medalAwarded) = ""British_South_Africa_Company_Medal"")

  # Step 2: Find an event related to this person that is both a military conflict and a societal event
  ?event dbo:participant ?awardee ;
         a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Step 3: Retrieve the military forces involved in the Battle of Atbara
  dbr:Battle_of_Atbara dbo:militaryForce ?battleOfAtbaraForces .

  # Step 4: Retrieve the military forces involved in the identified event
  ?event dbo:militaryForce ?eventForces .
}",4,7,5,3,2,3,3,71,0,0,7,0,0.0,0
573,34,train,"Give me the parent of John Quincy Adams and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?decedentRegion
WHERE {
  # Find John Quincy Adams' parent
  dbr:John_Quincy_Adams dbo:father ?parent .

  # Find Charlie Baker's real name
  dbr:Charlie_Baker_(Australian_footballer) dbo:birthName ?realName .

  # Find a person who was a decedent at an administration that is a region
  ?person dbo:decedentAtAdministration ?administration .
  ?administration rdf:type dbo:Region .
  
  # Ensure the real name matches with the person found
  ?person dbo:birthName ?realName .

  # Return the parent and the decedent region
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
433,9,train,Give me the associated musical artist of Paul Chambers and associated musical artist of Bill Evans.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist (GROUP_CONCAT(?associatedArtist; separator="", "") AS ?associatedArtists)
WHERE {
  VALUES (?person) { 
    dbr:Paul_Chambers 
    dbr:Bill_Evans
  }
  
  ?person dbo:associatedMusicalArtist ?artist .
  OPTIONAL {
    ?artist dbo:associatedMusicalArtist ?associatedArtist .
  }
}
GROUP BY ?artist
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
935,2,train,"Give me the award, that is an award, of Syed Sohail Hussain Naqvi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Syed Sohail Hussain Naqvi""@en .
  ?person dbo:award ?award .
}
```",1,2,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
888,10,train,Give me the award of the commander in 2022 Ukrainian eastern counteroffensive.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?description WHERE {
  # Find resources related to the Ukrainian Eastern Counteroffensive
  ?event dbo:wikiPageRedirects dbr:2022_Ukrainian_offensive_in_the_Donbas .
  
  # Look for awards associated with this event or military operations in general
  OPTIONAL { 
    ?award dbo:relatedEvent ?event ;
           dbo:description ?description .
  }
  
  FILTER (CONTAINS(LCASE(?description), ""commander"") && CONTAINS(LCASE(?description), ""2022""))
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
987,32,train,"Give me the birth place of the actor of All for Free and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

# Part 1: Birthplace of actors from ""All for Free""
SELECT ?actor ?birthPlaceActor WHERE {
    ?movie dbo:title ""All for Free""@en .
    ?movie dbo:starring ?actor .
    ?actor dbo:birthPlace ?birthPlaceActor .
}

UNION

# Part 2: Birthplace of the band associated with Šako Polumenta
SELECT ?band ?birthPlaceBand WHERE {
    ?person dbr:Šako_Polumenta ;
            dbo:member ?band .
    ?band a dbo:MusicalArtist ;
          dbo:birthPlace ?birthPlaceBand .
}",4,6,5,2,2,3,3,71,0,0,4,0,0.0,0
456,24,train,Give me the band of Alan Doyle and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?alterEgo
WHERE {
  # Alan Doyle's band
  OPTIONAL {
    dbr:Alan_Doyle dbo:musicGroupMemberOf ?band .
  }
  
  # The Shadow's alter ego
  OPTIONAL {
    dbr:The_Shadow dbo:aliasName ?alterEgo .
    FILTER(CONTAINS(LCASE(?alterEgo), ""lamont cranston""))
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
965,33,train,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Step 1: Find the politician born on 1854-05-24
  ?politician a dbo:Politician ;
              dbo:birthDate ""1854-05-24""^^xsd:date ;
              dbo:spouse dbr:Prince_Louis_of_Battenberg .

  # Step 2: Identify Prince Louis of Battenberg as the spouse
  ?prince a dbo:Person ;
          dbp:name ""Prince Louis of Battenberg"" ;
          dbo:spouse ?politician .

  # Step 3: Find their children who are royalty
  ?child dbo:parent ?politician, ?prince ;
         a dbo:RoyalFamilyMember .

  # Step 4: Get the parent of that royal child
  ?parent dbo:child ?child .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
987,28,train,"Give me the birth place of Moamer Kasumović and entity in Montenegro and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceKadhafi ?isInMontenegro ?bandName ?birthPlacePolumenta WHERE {
  # Moamer Kadhafi's birthplace
  dbr:Moamer_Kadhafi dbo:birthPlace ?birthPlaceKadhafi .
  
  OPTIONAL {
    ?birthPlaceKadhafi dbo:country dbr:Montenegro .
    BIND(""Yes"" AS ?isInMontenegro)
  }
  UNION
  {
    BIND(""No"" AS ?isInMontenegro)
  }

  # Šako Polumenta's band and birthplace
  OPTIONAL {
    ?band a dbo:Band ;
          dbo:member dbr:Šako_Polumenta .
    ?band dbo:genre ?genre .
    FILTER (CONTAINS(LCASE(?genre), ""music""))
    
    dbr:Šako_Polumenta dbo:birthPlace ?birthPlacePolumenta .
    BIND(REPLACE(STR(?band), ""http://dbpedia.org/resource/"", """") AS ?bandName)
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
18,7,train,"Give me the alumnus of Marymount College, Tarrytown and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus ?profession WHERE {
  ?alumnus dbo:almaMater dbp:Marymount_College_Tarrytown .
  OPTIONAL { ?alumnus dbo:occupation ?profession . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
417,5,train,"Who is the leader, that is a royalty, of Colony of Greenland?",SELECT ?result WHERE { <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?colony rdf:type dbo:Colony .
  ?colony dbo:name ""Greenland"" .
  ?colony dbo:headLeader ?leader .
  
  ?leader rdf:type dbo:Monarch .
  OPTIONAL { ?leader dbo:title ?title . FILTER regex(?title, ""King|Queen"", ""i"") }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
124,14,train,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Herbert Kitchener, 1st Earl Kitchener
  dbr:Herbert_Kitchener_1st_Earl_Kitchener a dbo:MilitaryPerson ;
    dbo:militaryConflict ?conflict .

  # Filter for military conflicts (World War I)
  ?conflict rdf:type dbo:MilitaryConflict ;
            dbo:participatingMilitaryForce ?militaryForce .

  FILTER (?conflict = dbr:World_War_I) .
}
```

This query does the following:
- Identifies Herbert Kitchener as a `dbo:MilitaryPerson`.
- Finds military conflicts (`dbo:MilitaryConflict`) he was involved in.
- Specifically filters for World War I, where his role as a British field marshal is most prominent.
- Retrieves the participating military force in that conflict.",2,4,3,2,1,3,3,71,0,0,1190,0,0.0,0
465,7,train,"Give me the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?child { dbr:Charles_Orlando,_Dauphin_of_France }
  ?child dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
892,36,train,"Give me the entity in Italy and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?regionInItaly ?party
WHERE {
  # Find the political party associated with Andrea Cozzolino
  ?cozzolino dbo:memberOf ?party .
  FILTER (CONTAINS(LCASE(?cozzolino), ""andrea cozzolino"")) .

  # Ensure the party is a political party and an organization
  ?party rdf:type dbo:PoliticalParty ;
         rdf:type dbo:Organization .

  # Find regions in Italy that are settlements, administrative regions, and Italian
  ?regionInItaly rdf:type dbo:Settlement ;
                 rdf:type dbo:AdministrativeRegion ;
                 dbo:country dbr:Italy ;
                 rdfs:label ?regionLabel .
  FILTER (LANG(?regionLabel) = 'it') .

  # Link the party to a region in Italy if applicable
  OPTIONAL { ?party dbo:location ?regionInItaly }
}
```",4,10,5,3,2,3,3,71,0,0,587,0,0.0,0
773,0,train,Give me the spouse of Louis the German.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  wd:Q1117 dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
839,25,train,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of Peter Schorowsky.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?charlieBand ?peterBand WHERE {
  ?charlie dbo:band ?charlieBand .
  ?charlie rdfs:label ""Charlie Huhn""@en .

  ?peter dbo:band ?peterBand .
  ?peter rdfs:label ""Peter Schorowsky""@en .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
933,38,train,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and reference to the birth name of Alan Warner (musician).",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandName ?birthName WHERE {
  # Find the resource for Alan Warner (musician)
  ?alanWarner a dbo:MusicArtist ;
              foaf:name ""Alan Warner"" .

  # Get his birth name
  OPTIONAL { ?alanWarner foaf:name ?birthName . }

  # Find the band he is associated with
  ?alanWarner dbo:bandMemberOf ?band .
  
  # Ensure the band is both a group and an organization
  ?band a dbo:Band ;
        a dbo:MusicalGroup, dbo:Organization .

  # Get the name of the band
  ?band foaf:name ?bandName .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
507,20,train,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and spouse of Anne V. Coates.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director WHERE {
  ?movie a dbo:Film .
  ?movie dbo:starring dbr:Beryl_Reid .
  ?director dbo:directed ?movie .
  ?director dbo:spouse dbr:Anne_V._Coates .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
839,2,train,Give me the band of Matthias Röhr.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . },"```sparql
SELECT ?band WHERE {
  wd:Q1234567 foaf:musicGroup ?band .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Matthias Röhr. You can find this by searching for Matthias Röhr on DBpedia or using a SPARQL query to identify his unique identifier.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
773,9,train,Give me the parent of Carloman of Bavaria and spouse of Louis the German.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?spouse WHERE {
  # Find the parent of Carloman of Bavaria
  { 
    ?carloman a dbo:Person ;
              rdfs:label ""Carloman of Bavaria""@en .
    ?carloman dbo:parent ?parent .
  }
  
  # Find the spouse of Louis the German
  {
    ?louis a dbo:Person ;
           rdfs:label ""Louis the German""@en .
    ?louis dbo:spouse ?spouse .
  }
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
47,32,train,Give me the office of the awardee of Banga Bhushan and office of the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v3 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?administration
WHERE {
  # Identify Jagdeep Dhankhar and his office
  dbr:Jagdeep_Dhankhar dbo:positionHeld ?office .
  
  OPTIONAL {
    ?office dbo:partOfOrganization ?administration .
  }
}
```

This query does the following:
- It selects the `?office` held by Jagdeep Dhankhar.
- It optionally retrieves any `?administration` that the office is part of.",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
373,4,train,"Give me the professional in Singer, songwriter and writer of 2300 Jackson Street (song).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer, songwriter""@en . <http://dbpedia.org/resource/2300_Jackson_Street_(song)> <http://dbpedia.org/property/writer> ?result . }","```sparql
SELECT ?person WHERE {
  ?song dcterms:title ""2300 Jackson Street (song)"" .
  ?song dbo:lyricsBy ?person .
  ?person rdf:type dbo:Singer ;
          dbo:occupation dbo:Songwriter ;
          dbo:occupation dbo:Writer .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
839,7,train,Give me the professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?musician ?name WHERE {
  ?musician rdf:type dbo:Musician .
  ?musician rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,7563,0,0.0,0
773,26,train,"Give me the parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Louis the Pious
  VALUES ?louis { dbr:Louis_the_Pious }

  # Find children of Louis the Pious who are royalty
  ?child dbo:spouse* ?louis .
  ?child a dbo:Monarch .

  # Find successor of this child (assuming direct succession)
  ?successor dbo:predecessorOrRegent ?child .

  # Find parent of the successor
  ?parent dbo:child ?successor .
}
```",3,4,4,3,1,3,3,71,0,0,4,0,0.0,0
892,10,train,Give me the entity in Italy and entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?italyEntity ?reggioEmiliaEntity WHERE {
  ?italyEntity dbo:country dbr:Italy .
  FILTER NOT EXISTS { ?italyEntity dbo:location dbr:Province_of_Reggio_Emilia . }
  
  ?reggioEmiliaEntity dbo:locatedIn dbr:Province_of_Reggio_Emilia .
}
```",2,2,3,1,2,3,3,71,0,0,40,0,0.0,0
216,1,train,Give me the player in Mario Ivanković.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
  wd:Q1234567 wdt:P31 wd:Q3456789; # Assuming Q1234567 is Mario Ivanković's DBpedia ID and Q3456789 is the class for a player in a sport or team.
  wdt:P2002 ?player. # P2002 is the property for ""member of"" which can be used to find players associated with a sports team or club.
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
47,12,train,Give me the office of Ajoy Mukherjee and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?officeName WHERE {
  VALUES ?person { 
    dbr:Ajoy_Mukherjee 
    dbr:Bidesh_Ranjan_Bose
  }
  
  ?person dbo:office ?office .
  ?office rdfs:label ?officeName .
  FILTER (lang(?officeName) = 'en')
}
ORDER BY ?person",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
645,5,train,"Who is the native, that is a president and a politician, of Restoration (Spain)?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:President ;
          a dbo:Politician ;
          dbp:nationality dbr:Spain ;
          dbp:birthPlace ?place .
  
  OPTIONAL { ?place rdfs:label ""Restoration (Spain)""@en . }
  
  ?person foaf:name ?name .
}
ORDER BY ?name
LIMIT 10",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
507,33,train,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of Anne V. Coates.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v3 <http://dbpedia.org/property/starring> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?director WHERE {
  ?person dbo:birthday ""1919-06-17""^^xsd:date .
  ?person dbo:spouse dbr:Anne_V._Coates .
  ?movie dbo:directedBy ?person ;
         a dbo:Film ;
         a dbo:CreativeWork .
  ?director rdfs:label ?name .
  FILTER (lang(?name) = ""en"") .
  BIND(?person AS ?director)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
433,33,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and associated musical artist of Paul Chambers.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonArtist WHERE {
  # Step 1: Find a musical artist associated with Ornette Coleman
  ?artistOrnette dbo:musicalArtistOf dbr:Ornette_Coleman .
  
  # Step 2: From that artist, find another who is both an artist and a musical artist
  ?artistAndMusician dbo:musicalArtistOf ?artistOrnette ;
                    rdf:type dbo:MusicalArtist ;
                    rdf:type dbo:Artist .

  # Step 3: Find a musical artist associated with Paul Chambers
  ?artistPaul dbo:musicalArtistOf dbr:Paul_Chambers .
  
  # Step 4: From that artist, find another who is both an artist and a musical artist
  ?anotherArtistAndMusician dbo:musicalArtistOf ?artistPaul ;
                           rdf:type dbo:MusicalArtist ;
                           rdf:type dbo:Artist .

  # Find common or related entity between the two paths
  FILTER (?artistAndMusician = ?anotherArtistAndMusician)
  
  BIND(?artistAndMusician AS ?commonArtist)
}
```",4,8,5,3,2,3,3,71,0,0,10,0,0.0,0
98,5,train,Give me the parent of the successor of Emperor Nijō.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Emperor_Nijō> <http://dbpedia.org/ontology/successor> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Find Emperor Nijō's successor
  ?successor dbo:predecessor dbr:Emperor_Nijō .
  
  # Step 2: Find the parent of this successor
  ?successor dbo:fatherOrMother ?parent .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
507,26,train,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/director> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?director ?movie WHERE {
  ?person a dbo:Person ;
          dbp:birthday ""1919-06-17""^^xsd:date .
  
  ?person dbo:directed ?movie .

  ?movie rdf:type dbo:Film ;
         rdf:type dbo:CreativeWork .

  ?director dbo:birthDate ?birthDate .
  FILTER (?birthDate = ""1919-06-17""^^xsd:date)
}
```

### Explanation:

- **PREFIX**: Define prefixes for common DBpedia namespaces.
- **SELECT**: Choose the director and movie as output variables.
- **?person**: Represents the person born on June 17, 1919.
- **dbo:Person**: Ensures the resource is a person.
- **dbp:birthday**: Filters by birthdate.
- **dbo:directed**: Links the person to movies they directed.
- **rdf:type**: Ensures the movie is both a `dbo:Film` and a `dbo:CreativeWork`.
- **?director**: Represents the director, ensuring they match the birth date.

This query will return the directors of movies that are classified as both films and creative works, where the director was born on June 17, 1919.",3,5,4,3,1,3,3,71,0,0,11,0,0.0,0
124,9,train,Give me the commander in Mahdist War and military force of Battle of Tamai.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Find the commander in the Mahdist War
  OPTIONAL {
    ?battle dbo:partOf dbr:Mahdist_War .
    ?battle dbo:commander ?commander .
    FILTER(CONTAINS(LCASE(STR(?battle)), ""tamai""))
  }
  
  # Find the military force involved in the Battle of Tamai
  OPTIONAL {
    ?battle dbr:Battle_of_Tamai .
    ?battle dbo:militaryForce ?militaryForce .
  }
}
```

This query uses DBpedia's ontology to find entities related to the Mahdist War and specifically the Battle of Tamai. It looks for commanders associated with battles that are part of the Mahdist War and checks if they include ""Tamai"" in their description, as well as identifying military forces involved in the Battle of Tamai.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
443,11,train,Give me the birthplace of the work of yes.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member ?birthPlace WHERE {
  ?band rdf:type dbo:Band .
  ?band rdfs:label ""Yes""@en .
  ?band dbo:bandMember ?member .
  ?member dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,0,993,0,0.0,0
102,8,train,"Give me the native of the residence, that is English and a settlement, of Peter Finbow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeLanguage WHERE {
  # Find Peter Finbow's residence
  ?person a dbo:Person ;
          foaf:name ""Peter Finbow""@en .
  
  OPTIONAL { 
    ?person dbo:residence ?residence .
  }
  
  # Ensure the residence is a settlement and has English as its native language
  ?residence a dbo:Settlement ;
             dbp:nativeLanguage ?nativeLanguage .

  FILTER (lang(?nativeLanguage) = ""en"" && ?nativeLanguage = ""English"")
}
```

This query does the following:
- Identifies Peter Finbow using his name.
- Finds any residence associated with him.
- Checks if this residence is a settlement and has English as its native language.",2,4,3,2,1,3,2,20,0,0,100,0,0.0,0
917,33,train,"Give me the parent of Albert Kamehameha and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?child WHERE {
    # Step 1: Find Albert Kamehameha's parent
    ?albertKamehameha a dbr:Albert_Kamehameha_III ;
                      dbo:parent ?parent .

    # Step 2: Find Leleiohoku I's spouse
    ?leleiohokuI a dbr:Leleiohoku_I ;
                dbo:spouse ?spouse .

    # Step 3: Identify the father of Leleiohoku I's spouse
    ?spouse dbo:parent ?fatherOfSpouse .

    # Step 4: Find children of this father who are royalty
    ?child dbo:parent ?fatherOfSpouse ;
           a dbo:Monarch .

    # Step 5: Match the parent from step 1 with a child from step 4
    FILTER (?parent = ?child)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
216,14,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:sportManagerOf ?team ;
          dbo:birthDate ""1983-12-20""^^xsd:date ;
          dbo:occupation dbr:Soccer_manager ;
          dbo:occupation dbr:Sports_manager .
  
  OPTIONAL { 
    ?person dbo:managerialCareer ?career .
    ?career dbo:managedTeam ?team .
  }
}
```

### Explanation:

- **PREFIX**: Define prefixes for DBpedia ontology and properties.
- **SELECT ?team**: We are interested in retrieving the team associated with the person.
- **?person a dbo:SoccerPlayer**: The person is identified as a soccer player.
- **dbo:sportManagerOf ?team**: Directly links the person to a team they manage.
- **dbo:birthDate ""1983-12-20""^^xsd:date**: Filters by birthdate.
- **dbo:occupation dbr:Soccer_manager; dbo:Sports_manager**: Ensures the person has occupations as both a soccer manager and sports manager.
- **OPTIONAL { ?person dbo:managerialCareer ?career . ?career dbo:managedTeam ?team }**: Captures any additional team management roles.

This query assumes that DBpedia's data model includes these relationships. Adjustments might be necessary based on the actual schema and available data in DBpedia.",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
917,8,train,Give me the father of Kamehameha IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  wd:Q11188 wdt:P22 ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
773,30,train,"Give me the parent of Carloman of Bavaria and parent of the child, that is a royalty, of Louis the German and spouse of Louis the German.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfCarloman ?parentOfChild
WHERE {
  # Parent of Carloman of Bavaria
  OPTIONAL {
    dbr:Claudius_II_of_Bavaria dbo:child dbr:Carloman_of_Bavaria .
    dbr:Claudius_II_of_Bavaria dbo:spouse ?parentOfCarloman .
  }

  # Child of Louis the German and his spouse
  OPTIONAL {
    dbr:Louis_the_German dbo:child ?royalChild .
    ?royalChild dbo:spouse ?spouse .
    FILTER EXISTS { ?royalChild a dbo:Monarch . }
    
    # Parent of that child (Louis the German or his spouse)
    ?parentOfChild dbo:child ?royalChild .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
130,6,train,Give me the entity in Tennessee and figure known as Vanderbilt Commodores.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Vanderbilt_Commodores> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Tennessee> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Tennessee .
  ?entity rdfs:label ""Vanderbilt Commodores""@en .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
216,31,train,"Give me the player in Mario Ivanković and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/coach> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerInMarioIvankovic ?coachOfCroatiaU21 WHERE {
  # Find Mario Ivanković and his role as a player
  dbr:Mario_Ivanković dbo:position ?playerPosition .
  
  # Find the coach of Croatia U21
  dbr:Croatia_national_under-21_football_team dbo:coach ?coach .
  
  # Ensure the coach is associated with an organization and soccer club
  ?coach dbo:worksFor ?organization .
  FILTER (strstarts(str(?organization), ""http://dbpedia.org/resource/"") && 
          ?organization != dbr:Croatia_national_under-21_football_team)
  
  # Bind variables for output
  BIND(dbr:Mario_Ivanković AS ?playerInMarioIvankovic)
  BIND(?coach AS ?coachOfCroatiaU21)
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
341,4,train,Give me the band member of Beyoncé and writer of In Love & War (Amerie album).,SELECT ?result WHERE { <http://dbpedia.org/resource/In_Love_&_War_(Amerie_album)> <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Beyoncé> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Beyoncé's band members
  ?bandMember dbo:memberOf dbr:Beyoncé.
  
  # Songwriters for Amerie's album ""In Love & War""
  ?song dbo:lyricsBy ?person .
  ?album dbo:song ?song .
  ?album rdfs:label ""In Love & War""@en .

  FILTER(?bandMember = ?person)
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
582,0,train,Give me the reference to Japan.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
SELECT ?reference WHERE {
  wd:Q36 rdfs:label ""Japan""@en .
  OPTIONAL { wd:Q36 wdt:P1435 ?reference . }
}
```",1,1,2,1,1,3,3,71,0,0,15,0,0.0,0
965,8,train,"Give me the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthDate WHERE {
  # Identify Prince George of Battenberg's resource
  VALUES ?princeGeorge { dbr:Prince_George_of_Battenberg }
  
  # Find nobles similar to Prince George of Battenberg
  ?person dbo:nobleTitle ?title .
  FILTER EXISTS { ?person dbp:title ?title . } # Ensure they have a noble title
  
  # Exclude Prince George himself from the results
  FILTER (?person != ?princeGeorge)
  
  # Retrieve birth information
  OPTIONAL { ?person dbo:birthDate ?birthDate }
}
ORDER BY ?birthDate",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
433,30,train,Give me the associated musical artist of Bill Evans and professional in the profession of Bob Marley and associated musical artist of Paul Chambers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find artists associated with Bill Evans
  { 
    ?billEvans dbo:associatedMusicalArtist ?artist .
    FILTER(STRSTARTS(STR(?billEvans), ""http://dbpedia.org/resource/Bill_Evans_(pianist)""))
  }
  
  UNION
  
  # Find artists associated with Bob Marley
  {
    ?bobMarley dbo:associatedMusicalArtist ?artist .
    FILTER(STRSTARTS(STR(?bobMarley), ""http://dbpedia.org/resource/Bob_Marley""))
  }
  
  UNION
  
  # Find artists associated with Paul Chambers
  {
    ?paulChambers dbo:associatedMusicalArtist ?artist .
    FILTER(STRSTARTS(STR(?paulChambers), ""http://dbpedia.org/resource/Paul_Chambers_(bassist)""))
  }
}
```",4,4,5,2,3,3,3,71,0,5,1,0.0,0.0,0
826,18,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and spouse of Anna Magdalena Appel and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?person WHERE {
  ?person dbo:predecessor dbr:Louis_IV,_Grand_Duke_of_Hesse .
  ?person dbo:spouse dbr:Anna_Magdalena_Appel .
  ?person dbo:successor dbr:Louis_II,_Grand_Duke_of_Hesse .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
865,11,train,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native 
WHERE {
  # Step 1: Identify Ram Jaipal Singh Yadav
  dbr:Ram_Jaipal_Singh_Yadav dbo:residence ?residence .

  # Step 2: Check if the residence is a country
  ?residence rdf:type dbo:Country .

  # Step 3: Get the native language or people of that country
  ?residence dbo:nativeLanguage ?native .
}
```",2,3,3,2,1,3,3,71,0,0,1898,0,0.0,0
987,22,train,"Give me the entity in the region, that is a country, of Central European Time and birth place of Dado Polumenta.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  # Find countries in the Central European Time zone
  ?country a dbo:Country ;
           dbo:timeZone dbr:Central_European_Time .

  # Ensure it is also the birthplace of Dado Pršo
  OPTIONAL { 
    dbr:Dado_Pršo dbo:birthPlace ?country .
  }
  
  FILTER EXISTS {
    dbr:Dado_Pršo dbo:birthPlace ?country .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
773,19,train,Give me the parent of Carloman of Bavaria and spouse of the father of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfCarloman ?spouseOfFatherOfCharlesTheFat
WHERE {
  dbr:Carloman_of_Bavaria dbo:fatherOrMother ?parentOfCarloman .
  
  dbr:Charles_the_Fat dbo:father ?fatherOfCharlesTheFat .

  ?fatherOfCharlesTheFat dbo:spouse ?spouseOfFatherOfCharlesTheFat .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
267,11,train,"Give me the coach of the player, that is a soccer club, in Rasoul Khatibi and person born on 1953-03-01.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/coach> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1953-03-01""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?coach WHERE {
  ?person a dbo:SoccerPlayer ;
          foaf:name ""Rasoul Khatibi"" ;
          dbo:birthDate ""1953-03-01""^^xsd:date .
  
  ?person dbo:playsFor ?club .
  ?club a dbo:SoccerClub .

  OPTIONAL { 
    ?playerPosition dbo:coach ?coach .
    ?playerPosition dbo:player ?person .
  }
}
```

This query does the following:
- It selects individuals who are of type `SoccerPlayer` and have the name ""Rasoul Khatibi"" with a birth date of March 1, 1953.
- It checks if this person plays for any soccer club (`dbo:playsFor`).
- It attempts to find the coach associated with the player's position at that club.

Please note:
- The query assumes that DBpedia has structured data in such a way that these relationships are directly accessible. Adjustments might be necessary based on actual data availability and structure.
- The `foaf:name` property is used for names, which may need to be adjusted if the exact match isn't found due to variations in how names are stored.",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
136,5,train,Give me the region coded as the area code of Levenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ?v0 . <http://dbpedia.org/resource/Levenhagen> <http://dbpedia.org/ontology/areaCode> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?place dbo:areaServed dbr:Levenhagen .
  OPTIONAL { ?place dbo:postalCode ?postalCode . }
  OPTIONAL { ?place dbo:telephoneAreaCode ?areaCode . }
  ?location dbo:postalCode ?postalCode ;
            dbo:administrativeRegion ?region .
}
```",2,2,3,2,1,2,2,9,0,0,9,0,0.0,0
456,26,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alias WHERE {
  ?character a dbo:FictionalCharacter .
  ?character rdfs:label ""Lamont Cranston""@en .
  OPTIONAL { ?character dbp:alterEgo ?alias . }
}
```",3,4,4,3,1,3,3,71,0,0,39640,0,0.0,0
582,38,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and figure known as the nickname of Japan national football team.",SELECT ?result WHERE { <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father ?fatherLabel WHERE {
  # Find Masami Nagasawa
  ?masami a dbo:Person ;
          foaf:name ""Masami Nagasawa""@en .
  
  # Identify her father
  ?masami dbo:parent ?father .

  # Ensure the father is an athlete, soccer manager, sports manager, and associated with Japan national football team
  ?father a dbo:Athlete ;
         dbo:sport dbp:Soccer ;
         dbo:occupation dbo:SoccerManager ;
         dbo:occupation dbo:SportsManager .
  
  OPTIONAL { 
    ?team dbo:member ?father .
    ?team foaf:name ""Japan national football team""@en .
  }

  # Get the label for the father
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
433,8,train,Give me the profession of Bob Marley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  wd:Q4867 dbo:occupation ?profession .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
216,12,train,Give me the player in Mario Ivanković and team of Ognjen Vukojević.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?player1Team ?player2Team WHERE {
  ?marioIvankovic a dbo:FootballPlayer ;
                  foaf:name ""Mario Ivanković""@en ;
                  dbp:team ?player1Team .
  
  ?ognjenVukojevic a dbo:FootballPlayer ;
                   foaf:name ""Ognjen Vukojević""@en ;
                   dbp:team ?player2Team .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
933,29,train,Give me the reference to the birth name of Alan Warner (musician) and band of Mike Elliott (saxophonist) and band of The Ramong Sound.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?birthName ?mikeElliottBand ?ramongSoundMember
WHERE {
  # Alan Warner (musician) birth name
  ?alanWarner a dbo:Musician ;
              foaf:name ""Alan Warner"" .
  OPTIONAL { ?alanWarner foaf:name ?birthName . }

  # Mike Elliott (saxophonist) band
  ?mikeElliott a dbo:Saxophonist ;
               foaf:name ""Mike Elliott"" .
  OPTIONAL { ?mikeElliott dbp:band ?mikeElliottBand . }

  # The Ramong Sound members
  ?ramongSound a dbo:MusicalGroup ;
               foaf:name ""The Ramong Sound"" .
  OPTIONAL { ?ramongSoundMember dbo:memberOf ?ramongSound ;
                               foaf:name ?ramongSoundMemberName . }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
170,4,train,Give me the awardee of People's Artist of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . },"```sparql
SELECT ?person WHERE {
  ?award dcterms:isPartOf <http://dbpedia.org/resource/Category:Awards_in_the_Soviet_Union> .
  ?award dbo:recipient ?person .
  ?award rdfs:label ""People's Artist of Russia""@en .
}
```",1,1,2,1,1,2,3,28,0,0,24,0,0.0,0
36,13,train,"Give me the person born in 1971 and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v0 . ?v0 <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film dbo:starring ?actor .
  ?actor dbo:birthYear ""1971""^^xsd:gyear .
  ?film dbo:title ?title .
  ?film dbo:director ?director .
  ?director foaf:name ""Lepa' Bajramović""@en .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
445,14,train,Give me the entity in the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person dbo:name ""George H. Cameron""@en .
  ?person dbo:awardsReceived ?award .
}
```",2,2,3,2,1,3,3,71,0,0,87241,0,0.0,0
459,15,train,"Give me the person born as John Kevin Stitt and governor of the death place, that is a settlement, of Cliff Roquemore.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find John Kevin Stitt's birth name and the state he governs
  ?stitt a dbo:Governor ;
         foaf:name ""John Kevin Stitt"" ;
         dbp:birthName ?birthName ;
         dbp:governorate ?state .

  # Find Cliff Roquemore's death place, which is a settlement
  ?roquemore a dbo:Person ;
             foaf:name ""Cliff Roquemore"" ;
             dbo:deathPlace ?deathPlace .
  
  FILTER (isLiteral(?deathPlace))
  ?deathPlace a dbo:Settlement .

  # Match the state of John Kevin Stitt with the settlement where Cliff Roquemore died
  ?state dbr:*/dbo:location ?deathPlace .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
987,21,train,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and entity in Montenegro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?birthPlace WHERE {
  # Find Šako Polumenta's resource
  ?sako a dbo:Person ;
        foaf:name ""Šako Polumenta""@en .
  
  # Find bands associated with him
  ?sako dbo:memberOfBand ?band .

  # Ensure the band is an artist and a musical artist
  ?band a dbo:Artist, dbo:MusicalArtist .

  # Check if the band has any association with Montenegro
  OPTIONAL { ?band dbp:country dbr:Montenegro . }

  # Retrieve the birthplace of the band
  ?band dbo:birthPlace ?birthPlace .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
216,17,train,Give me the administration of  and party of the awardee of Australian Defence Medal.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> """"@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?administration ?party WHERE {
  ?award dbo:recipient ?person .
  FILTER (str(?award) = ""Australian_Defence_Medal"") .

  OPTIONAL { 
    ?person dbo:officeHeld ?office .
    ?office dbo:holder ?person ;
            dbo:termStart ?start ;
            dbo:termEnd ?end .
    ?administration dbr:Australian_Government .
    ?administration dbo:headOfState ?primeMinister .
    ?primeMinister dbo:holdsOffice ?office .
    BIND(?primeMinister AS ?administration)
  }

  OPTIONAL {
    ?person dbo:politicalParty ?party .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
935,3,train,Give me the awardee of Sitara-i-Imtiaz.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . },"```sparql
SELECT ?person WHERE {
  ?award dcterms:isPartOf <http://dbpedia.org/resource/Category:Awardees_of_the_Sitara-i-Imtiaz> .
  ?award dbo:recipient ?person .
}
```",1,1,2,1,1,3,2,20,0,0,52,0,0.0,0
715,35,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderOfOffice ?commanderInConflict
WHERE {
  # Find Carlos Franco Iribarnegaray's leadership role in an organization
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@en .
  ?office dbo:head ?person ;
          a dbo:GovernmentAgency ; # or dbo:Organization if applicable

  # Find Abd el-Krim's command role in a military conflict
  ?conflict dbo:commander ?commander ;
            a dbo:MilitaryConflict .

  ?commander rdfs:label ""Abd el-Krim""@en .
  
  BIND(?office AS ?leaderOfOffice)
  BIND(?conflict AS ?commanderInConflict)
}
```

This query assumes:
- `dbo:GovernmentAgency` or `dbo:Organization` is the type of office Carlos Franco Iribarnegaray led.
- `dbo:MilitaryConflict` is the type of conflict Abd el-Krim commanded.",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
274,8,train,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Identify Dizzy Gillespie as a musical artist
  dbr:Dizzy_Gillespie dbo:birthName ""John Birks Gillespie"" .
  
  # Find bands or groups he was part of
  OPTIONAL { 
    dbr:Dizzy_Gillespie dbo:musicalArtist <http://dbpedia.org/resource/Band_or_Group> .
    ?bandOrGroup dbo:member ?bandMember .
  }
}
```",2,3,3,2,1,2,3,28,0,0,67,0,0.0,0
98,8,train,Give me the region of the time zone of Lopez Jaena.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?location a dbo:PopulatedPlace ;
            rdfs:label ""Lopez, Jaena""@en .
  
  OPTIONAL { ?location dbo:timeZone ?timezone . }
  
  ?timezone dbo:region ?region .
}
```",2,2,3,2,1,2,3,28,0,0,1874,0,0.0,0
465,6,train,"Give me the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?childLabel WHERE {
  ?person dbo:spouse ?spouse .
  FILTER (str(?spouse) = ""Ferdinand_I,_Holy_Roman_Emperor"") .

  ?person dbo:child ?child .
  
  OPTIONAL { ?child dbp:title ?title . }
  OPTIONAL { ?child dbo:positionHeld ?position . }

  FILTER (
    EXISTS { ?child dbp:title ?title . FILTER (CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""emperor"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess"")) }
    ||
    EXISTS { ?child dbo:positionHeld ?position . FILTER (CONTAINS(LCASE(STR(?position)), ""king"") || CONTAINS(LCASE(STR(?position)), ""queen"") || CONTAINS(LCASE(STR(?position)), ""emperor"") || CONTAINS(LCASE(STR(?position)), ""prince"") || CONTAINS(LCASE(STR(?position)), ""princess"")) }
  )

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,2,2,1,1,3,3,71,0,0,11,0,0.0,0
232,6,train,Give me the claim to fame of the person born as Emily Katherine Jacques.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Emily Katherine Jacques""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame WHERE {
  VALUES ?person { dbr:Kate_Winslet }
  ?person dbo:notableWorks ?works .
  ?works dbo:description ?claimToFame .
}
```",2,2,3,2,1,2,2,9,0,0,2,0,0.0,0
839,21,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of Matthias Röhr.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band
WHERE {
  VALUES ?name { 
    ""Kevin Richard Russell"" 
    ""Matthias Röhr""
  }
  
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
  
  OPTIONAL { ?person dbo:band ?band . }
}
ORDER BY ?person
```

This query does the following:
- Uses `VALUES` to specify the names of interest.
- Matches these names to DBpedia resources using `rdfs:label`.
- Filters results to ensure the label is in English.
- Optionally retrieves the band associated with each person using the `dbo:band` property.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
417,13,train,Give me the child of the father of Frederick IX of Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
  ?frederick ix:father ?father .
  FILTER (str(?frederick) = ""Frederick_IX_of_Denmark"") .

  ?father foaf:child ?child .
}
```

This query does the following:
- It selects individuals (`?child`) who are children of Frederick IX's father.
- `?frederick` is bound to Frederick IX of Denmark using a filter on his name.
- `?father` represents Frederick IX's father, and we find all children (`?child`) of this person.",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
645,27,train,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader WHERE {
  # Find a person native to Restoration, Spain
  ?person dbo:nationality dbr:Spain ;
          dbo:birthPlace dbr:Restoration_(Spain) .

  # Identify the government agency or organization they are associated with
  ?agency dbo:type dbr:Government_agency ; 
          dbo:type dbr:Organization ;
          dbo:head ?leader .
  
  # Link the person to the agency/organization (e.g., through employment)
  ?person dbo:employer ?agency .

}
```

This query assumes:
- The native of Restoration, Spain is linked to a government agency or organization via an `employer` relationship.
- The leader of the agency/organization can be found using the `dbo:head` property.",3,5,4,3,1,3,3,71,0,0,15,0,0.0,0
47,9,train,Give me the office of Suvendu Adhikari and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeName WHERE {
  VALUES ?person { 
    dbr:Suvendu_Adhikari 
    dbr:Bidesh_Ranjan_Bose
  }
  
  ?person dbo:positionHeld ?office .
  ?office rdfs:label ?officeName .
  FILTER (lang(?officeName) = 'en')
}
ORDER BY ?person",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
200,4,train,Give me the reference to Angelcorpse and band member of Order from Chaos.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Angelcorpse""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Order_from_Chaos> . }","```sparql
SELECT ?angelcorpseReference ?orderFromChaosMember WHERE {
  ?band wdt:P31 wd:Q215380; # instance of a musical band
        wdt:P175 wd:Q1119640. # Angelcorpse as a member

  OPTIONAL { 
    ?band wdt:P527 ?member. # members of the band
    ?member rdfs:label ?orderFromChaosMember FILTER (lang(?orderFromChaosMember) = ""en"").
  }

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
443,1,train,Give me the birthplace of Ulf Lundell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Ulf Lundell. You can find this by searching for Ulf Lundell on DBpedia or using a SPARQL endpoint to query his identifier.",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
507,25,train,Give me the director of Entertaining Mr Sloane (film) and professional in the profession of Guy Ferland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director ?association
WHERE {
  # Find the film ""Entertaining Mr Sloane"" and its director
  dbr:Entertaining_Mr_Sloane (dbo:director) ?director .

  # Check if this director has any professional association with Guy Ferland
  OPTIONAL {
    ?director dbo:profession ?association .
    FILTER(CONTAINS(LCASE(?association), ""guy ferland""))
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
326,8,train,"Give me the person decedent at the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Find Adelbert Cronkhite's DBpedia resource
  dbr:Adelbert_Cronkhite a dbo:Person .

  # Find awards associated with him
  OPTIONAL { 
    dbr:Adelbert_Cronkhite dbo:awardReceived ?award .
    
    # Find the decedent related to the award
    ?award dbo:decedentAtAward ?decedent .
    
    # Ensure the decedent has a country of origin that is a recognized country
    ?decedent dbo:nationality ?country .
    FILTER EXISTS { ?country a dbo:Country }
  }
}
```",2,3,3,2,1,3,2,20,0,0,3795,0,0.0,0
216,32,train,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of Croatia national under-21 football team.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?player a dbo:SoccerPlayer .
  ?player dbo:sportsManagerOf ?team1 .
  ?player dbo:coachOf ?team2 .
  
  FILTER EXISTS { 
    ?team1 rdfs:label ""Bosnia and Herzegovina national under-18 football team""@en .
  }
  FILTER EXISTS {
    ?team2 rdfs:label ""Croatia national under-21 football team""@en .
  }

  # Ensure the person is also a soccer manager
  OPTIONAL { 
    ?player dbo:soccerManagerOf ?someTeam .
  }
}
```",4,7,5,2,2,3,3,71,0,0,3,0,0.0,0
124,19,train,"Give me the military force of Battle of Tamai and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Find the Battle of Tamai resource
  VALUES ?battle { dbr:Battle_of_Tamai }

  # Get military forces involved in the battle
  ?battle dbo:militaryConflicts ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?militaryForce .

  # Filter for A Field Battery, Royal Australian Artillery
  FILTER(CONTAINS(LCASE(STR(?militaryForce)), ""a field battery, royal australian artillery""))

  OPTIONAL {
    # Get commanders of the military force
    ?militaryForce dbo:commander ?commander .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
606,9,train,"Give me the nickname of the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://dbpedia.org/property/nickname> ""Barb City""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:nickname dbr:Barb_City .
}
```

This query uses the `dbo:nickname` property to find entities that are nicknamed ""Barb City."" The result will give you the entity associated with this nickname.",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
606,2,train,"Give me the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  ?settlement a dbo:Settlement .
  ?settlement rdfs:label ""Barb City""@en .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
839,27,train,"Give me the band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?musician rdf:type dbo:Musician .
  ?musician dbo:memberOf ?band1 .
  ?band1 dbo:genre ?genre . # Ensures it's a musical band
  ?band1 dbo:memberOf ?band2 .
  ?band2 rdf:type dbo:MusicalArtist .
}
```",3,4,4,3,1,3,3,71,0,0,706,0,0.0,0
715,22,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in Rif War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader WHERE {
  # Find Carlos Franco Iribarne-Garay and his associated office
  ?person a dbo:Person ;
          foaf:name ""Carlos Franco Iribarne-Garay""@en .
  
  # Identify the office he was involved in, which is a government agency and organization
  ?office dbo:employee ?person ;
          a dbo:GovernmentAgency, dbo:Organization .

  # Find the leader of that office
  ?office dbo:leader ?leader .
}
```

This query does the following:
- It identifies Carlos Franco Iribarne-Garay as a person.
- It looks for an office he was associated with, which is both a government agency and an organization.
- It retrieves the leader of that office.",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
865,0,train,Give me the native of British Raj.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?language WHERE {
  dbr:British_Raj dbo:language ?language .
}
```",1,1,2,1,1,3,3,71,0,1,1898,0.0,0.0,0
382,1,train,Give me the landmark at elevation of 100.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""100""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark ?name WHERE {
  ?landmark a dbo:Landmark .
  OPTIONAL { ?landmark rdfs:label ?name . FILTER (lang(?name) = 'en') }
  ?landmark dbp:elevation ?elevation .
  FILTER (?elevation = ""100""^^xsd:integer)
}
```",1,1,2,1,1,3,2,20,0,0,727,0,0.0,0
573,31,train,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedent WHERE {
  # Find Charlie Baker (Australian footballer)
  dbr:Charlie_Baker_(Australian_footballer) dbo:birthName ?realName .
  
  # Get the administration region of Charlie Baker's real name
  ?realName dbo:administrativeTerritory ?adminRegion .

  # Find decedents at this administration region
  ?personDecedent dbo:decedentAt ?adminRegion .

  # Find decedents at Quincy, Massachusetts
  ?personDecedent dbo:decedentAt dbr:Quincy,_Massachusetts .
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
715,16,train,"Give me the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolderOf dbr:President_of_Spain ;
          dbo:presidentDuring dbr:1933_Spanish_general_election .
  
  ?person dbo:party ?force .

  FILTER EXISTS { ?person dbo:mayorOf ?city } # Assuming the person was also a mayor
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
645,36,train,"Give me the commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?leader WHERE {
  # Find the commander of the Battle of Jarama
  ?battle dbo:commander ?commander .
  FILTER(STRSTARTS(STR(?battle), ""http://dbpedia.org/resource/Battle_of_Jarama""))

  # Find a leader who is native to Restoration (Spain)
  ?leader dbo:nationality dbr:Spain ;
          dbo:birthPlace ?place .

  # Ensure the place is from the period of the Spanish Restoration
  ?place dbo:country dbr:Spain .
  FILTER(YEAR(?leaderdbo:birthday) >= 1874 && YEAR(?leaderdbo:deathday) <= 1931)

  # The leader should be associated with a government agency and an organization
  ?office dbo:head ?leader ;
          a ?type .

  FILTER(STRSTARTS(STR(?type), ""http://dbpedia.org/ontology/GovernmentAgency"") ||
         STRSTARTS(STR(?type), ""http://dbpedia.org/ontology/Organization""))
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
935,11,train,Give me the headquarter of Provincial Assembly of Balochistan and death place of the awardee of Sitara-i-Imtiaz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Provincial_Assembly_of_Balochistan> <http://dbpedia.org/ontology/location> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarter ?deathPlace WHERE {
  # Query for the headquarters of the Provincial Assembly of Balochistan
  OPTIONAL {
    ?assembly a dbo:Legislature ;
              dbo:seat ?headquarter .
    FILTER(CONTAINS(LCASE(STR(?assembly)), ""provincial assembly of balochistan""))
  }

  # Query for the death place of an awardee of Sitara-i-Imtiaz
  OPTIONAL {
    ?person dbo:awardReceived dbr:Sitara-e-Imtiaz ;
            dbo:deathPlace ?deathPlace .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
433,21,train,"Give me the professional in Musician and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Paul Laurence Dunbar Chambers Jr.""@en .
  
  OPTIONAL {
    ?person dbo:associatedMusicalArtist ?associatedArtist .
    FILTER EXISTS { ?associatedArtist a dbo:MusicalArtist }
  }
}
```",3,5,4,2,2,3,3,71,0,0,15,0,0.0,0
508,12,train,"Give me the birthplace of the commander, that is Saudi, in Central Plains War and birthplace of Ma Hongkui.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ma_Hongkui> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlaceLabel WHERE {
  {
    # Ibn Saud (King Abdulaziz)
    VALUES ?person { dbr:Ibn_Saud }
    ?person dbo:birthPlace ?birthPlace .
  } UNION {
    # Ma Hongkui
    VALUES ?person { dbr:Ma_Hongkui }
    ?person dbo:birthPlace ?birthPlace .
  }
  SERVICE <http://dbpedia.org/sparql> {
    ?birthPlace rdfs:label ?birthPlaceLabel .
    FILTER (lang(?birthPlaceLabel) = 'en')
  }
}
```",3,4,4,2,2,3,2,20,0,0,3,0,0.0,0
917,20,train,Give me the parent of Albert Kamehameha and child of the father of Keʻelikōlani.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Find Albert Kamehameha and his parent
  ?albertKamehameha a dbr:Albert_Kamehameha_III ;
                   dbo:parent ?parentOfAlb.

  # Find Keʻelikōlani's father
  ?keelikolani a dbr:Keʻelikōlani ;
              dbo:father ?fatherOfKee.

  # Ensure the parent of Albert Kamehameha is also a child of Keʻelikōlani's father
  ?parentOfAlb dbo:child ?individual .
  FILTER (?individual = ?fatherOfKee)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
554,7,train,Give me the leader of the administration of Francisco da Costa Gomes.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?person a dbo:President ;
          foaf:name ""Francisco da Costa Gomes""@en .
  
  OPTIONAL { 
    ?administration dbo:head ?leader .
    ?administration dbo:president ?person .
  }
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
715,5,train,"Who is the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Politician .
  ?person dbo:officeHolderOf ?office .
  ?office dbo:startDate ?start ;
          dbo:endDate ?end .
  
  OPTIONAL { ?person dbo:positionHeld dbr:President_of_Spain . }
  OPTIONAL { ?person dbo:positionHeld dbr:Mayor . }

  FILTER (?start <= ""1933-12-01""^^xsd:date && (?end >= ""1933-01-01""^^xsd:date || NOT EXISTS { ?office dbo:endDate ?end }))
  
  # Filter for involvement in the 1933 Spanish general election
  OPTIONAL {
    ?person dbo:wikiPageRedirects dbr:Spanish_general_election,_1933 .
  }
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
978,1,train,Give me the band member of Chicane (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chicane_(musician)> . },"```sparql
SELECT ?member WHERE {
  wd:Q123456 wdt:P106 wd:Q33999; # Assuming Q123456 is the DBpedia ID for Chicane, and P106 represents ""occupation"" with Q33999 being ""musician""
  wdt:P527 ?member. # P527 represents ""has part/member""
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
124,28,train,"Give me the military force of Battle of Tamai and military force of Battle of Atbara and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battle ?force1 ?force2 ?commander WHERE {
  # Battle of Tamai
  VALUES (?battle) { 
    dbr:Battle_of_Tamai 
  }
  
  OPTIONAL {
    ?battle dbo:participatingMilitaryUnit ?unit .
    ?unit dbo:country ?force1 .
  }

  OPTIONAL {
    ?battle dbo:opposingMilitaryUnit ?opponent .
    ?opponent dbo:country ?force2 .
  }

  # Battle of Atbara
  VALUES (?battle) { 
    dbr:Battle_of_Atbara 
  }
  
  OPTIONAL {
    ?battle dbo:participatingMilitaryUnit ?unit .
    ?unit dbo:country ?force1 .
  }

  OPTIONAL {
    ?battle dbo:opposingMilitaryUnit ?opponent .
    ?opponent dbo:country ?force2 .
  }

  # A Field Battery, Royal Australian Artillery
  VALUES (?unit) { 
    dbr:A_Field_Battery,_Royal_Australian_Artillery 
  }
  
  OPTIONAL {
    ?unit dbo:commander ?commander .
  }
}
ORDER BY ?battle",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
573,36,train,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at Massachusetts.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Find John Quincy Adams
  dbr:John_Quincy_Adams a dbo:Person ;
                        dbo:birthPlace dbr:Massachusetts ;
                        dbo:deathPlace dbr:Massachusetts ;
                        dbo:officeHolderOf ?office ;
                        dbp:parents ?parent .

  # Ensure he was an office holder and politician
  ?office a dbo:PoliticalOffice .
  
  # Check if the parent is also a decedent at Massachusetts
  ?parent dbo:deathPlace dbr:Massachusetts .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
715,33,train,"Give me the commander in Rif War and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rifWarCommander ?mayorForceCommander WHERE {
  # Find Manuel Azaña, who was president in 1933
  ?president a dbo:President ;
             foaf:name ""Manuel Azaña""@en ;
             dbo:electedAs dbr:Spanish_General_Election,_1933 .

  # Find Abd el-Krim as the commander in the Rif War
  ?rifWarCommander a dbo:MilitaryPerson ;
                  foaf:name ""Abd el-Krim""@en ;
                  dbo:commandedMilitaryConflict dbr:Rif_War .

  OPTIONAL {
    # Attempt to find any related mayor and their force commander
    ?mayor a dbo:Mayor ;
           dbo:officeHolderOf ?city ;
           dbo:hasPoliticalAffiliation ?party .
    
    ?mayorForceCommander a dbo:MilitaryPerson ;
                         dbo:commandedMilitaryForce ?force ;
                         dbo:relatedTo ?mayor .

  }
}
```

This query attempts to retrieve:

- The commander in the Rif War, identified as Abd el-Krim.
- A hypothetical commander of a force related to a mayor who is an office holder and politician, though this part may not yield results without more specific data.",4,7,5,3,2,3,3,71,0,0,4,0,0.0,0
212,3,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?professional dbo:fieldOfStudy dbr:Medicine .
}
```",1,1,2,1,1,2,2,9,0,0,39640,0,0.0,0
715,15,train,"Give me the force, that is a military conflict, of the native of Morocco.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual ?militaryForce WHERE {
  ?individual dbo:nationality dbr:Morocco .
  ?individual dbo:militaryConflict ?conflict .
  ?conflict dbo:participatingMilitaryForce ?militaryForce .
}
```",2,3,3,2,1,3,3,71,0,0,15,0,0.0,0
129,15,train,Give me the associated musical artist of Saba (rapper) and professional in the mayor of 1999 West Dunbartonshire Council election.,SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist ?candidate 
WHERE {
  # Find Saba as a musician
  dbr:Saba (dbo:musicArtist) ?artist .
  
  # Find candidates in the 1999 West Dunbartonshire Council election
  ?election dbo:electionDate ?date ;
            dbo:officeHolder ?candidate .
  FILTER(CONTAINS(LANG(?date), ""1999""))
  FILTER(CONTAINS(STR(?election), ""West Dunbartonshire Council""))
}
```",3,3,4,2,2,2,3,28,0,0,7,0,0.0,0
606,12,train,Give me the birthplace of the alumnus of University of Pennsylvania and figure known as Barb City.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Alumnus ;
          dbo:almaMater dbr:University_of_Pennsylvania ;
          foaf:name ""Barbara Corcoran""@en .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
267,2,train,Who is the manager of 2020–21 Tractor S.C. season?,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team a dbo:FootballClub ;
        dbo:currentManager ?manager .
  
  FILTER(CONTAINS(LCASE(STR(?team)), ""tractor s.c.""))
  FILTER(CONTAINS(LCASE(STR(?team)), ""2020–21 season""))
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
933,23,train,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Identify The Ramones and their genre
  dbr:The_Ramones dbo:genre ?genre .
  
  # Find bands associated with the same genre
  ?band dbo:genre ?genre .

  # Ensure the band is not The Ramones themselves
  FILTER (?band != dbr:The_Ramones)
}
```

This query will return bands that share a genre with The Ramones, excluding The Ramones themselves. You can further refine this by adding more specific filters or conditions if needed.",3,5,4,3,1,3,3,71,0,0,30,0,0.0,0
507,3,train,Give me the birth name of Anne V. Coates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:Q123456 wdt:P735 ?birthName .
  FILTER (lang(?birthName) = ""en"")
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Anne V. Coates.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
976,25,train,Give me the office of Meral Akşener and office of the person born as Mehmet Naci Bostancı.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?office
WHERE {
  VALUES ?person { 
    dbr:Meral_Akşener 
    dbr:Mehmet_Naci_Bostancı 
  }
  
  OPTIONAL { ?person dbo:office ?office . }
}
```

This query uses the `VALUES` clause to specify the two individuals, Meral Akşener and Mehmet Naci Bostancı. It then attempts to find any office they hold using the `dbo:office` property.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
791,3,train,Give me the reference to Emperor Takakura.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . }","```sparql
SELECT ?reference WHERE {
  wd:Q12345 rdfs:label ""Emperor Takakura""@en .
  OPTIONAL { wd:Q12345 schema:sameAs ?reference . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
579,11,train,"Give me the native of the residence, that is English and a settlement, of Alan Clyne and person born as Isobel Jane Miller Richard.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/property/birthName> ""Isobel Jane Miller Richard""@en . <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?native WHERE {
  # Find Alan Clyne's residence
  OPTIONAL { 
    ?alan a dbo:Person ;
          foaf:name ""Alan Clyne"" ;
          dbo:residence ?residence1 .
  }
  
  # Find Isobel Jane Miller Richard's residence
  OPTIONAL { 
    ?isobel a dbo:Person ;
            foaf:name ""Isobel Jane Miller Richard"" ;
            dbo:residence ?residence2 .
  }

  # Ensure the residences are settlements in England
  FILTER EXISTS {
    ?residence1 (dbo:country dbr:England ; dbo:settlementType dbp:Settlement) .
  }
  
  FILTER EXISTS {
    ?residence2 (dbo:country dbr:England ; dbo:settlementType dbp:Settlement) .
  }

  # Get the native of these settlements
  OPTIONAL { 
    ?residence1 dbo:native ?native .
  }
  
  OPTIONAL { 
    ?residence2 dbo:native ?native .
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
373,1,train,"Give me the professional in Singer, songwriter.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer, songwriter""@en . }","```sparql
SELECT ?person WHERE {
  ?person dbo:occupation dbr:Singer.
  ?person dbo:occupation dbr:Songwriter.
}
```",1,1,2,1,1,2,2,9,1,103,1542,0.009615384615384616,0.0006480881399870382,0.0012143290831815423
865,3,train,Who is the person decedent at Patna?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:deathPlace dbr:Patna .
}
```",1,1,2,1,1,3,3,71,66,0,0,1.0,1.0,1.0
273,10,train,Give me the alumnus of the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v0 . }","```sparql
SELECT ?alumnus WHERE {
  ?person dbo:almaMater dbr:Università_degli_Studi_di_Torino .
  ?person foaf:name ?alumnus .
}
```",2,2,3,2,1,3,2,20,0,0,141,0,0.0,0
326,14,train,"Give me the person decedent at the award, that is a country, of the awardee of French Legion of Honor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardee ?countryDecedent
WHERE {
  ?award dbo:recipient ?awardee .
  FILTER EXISTS { ?awardee dbo:nationality dbr:France } # Assuming awardees are French nationals
  OPTIONAL { 
    ?award dbo:decedent ?countryDecedent .
    FILTER (STRSTARTS(STR(?countryDecedent), ""http://dbpedia.org/resource/"") && 
            EXISTS { ?countryDecedent a dbo:Country }) 
  }
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`), resources (`dbr`), and properties (`dbp`) to simplify the query.
  
- **SELECT DISTINCT**: We select distinct pairs of awardees and country decedents.

- **?award dbo:recipient ?awardee**: This pattern matches awards with their recipients (awardees).

- **FILTER EXISTS { ?awardee dbo:nationality dbr:France }**: Filters to include only those awardees who are French nationals. Adjust this filter if you need a broader or different nationality.

- **OPTIONAL { ... }**: We use an optional pattern to find awards that have a decedent which is a country.

  - **?award dbo:decedent ?countryDecedent**: Matches the award with its decedent.
  
  - **FILTER (STRSTARTS(STR(?countryDecedent), ""http://dbpedia.org/resource/"") && EXISTS { ?countryDecedent a dbo:Country })**: Ensures that the decedent is a DBpedia resource and specifically a country.

This query will return pairs of awardees and any associated countries as decedents for awards related to the French Legion of Honor. Adjust the filters and patterns based on more specific requirements or additional data available in DBpedia.",3,4,4,3,1,3,2,20,0,0,4699,0,0.0,0
892,1,train,Give me the landmark at elevation of 58.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  ?landmark a dbo:Lighthouse .
  OPTIONAL { ?landmark dbo:elevationAboveSeaLevel ?elevation . }
  FILTER (?elevation = ""58""^^xsd:integer)
}
```

This query assumes that the landmarks are categorized under `dbo:Lighthouse` and have an elevation property `dbo:elevationAboveSeaLevel`. Adjust the class (`a dbo:Lighthouse`) if you're looking for a different type of landmark.",1,1,2,1,1,3,3,71,0,0,258,0,0.0,0
36,4,train,Give me the birth year of Deanne Bray.,SELECT ?result WHERE { <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?result . },"```sparql
SELECT ?birthYear WHERE {
  wd:Q1234568 dbo:birthDate ?date .
  BIND(YEAR(?date) AS ?birthYear)
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Deanne Bray.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
888,6,train,Give me the commander in Southern Ukraine campaign and awardee of Hero of Ukraine.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Hero of Ukraine""@en . <http://dbpedia.org/resource/Southern_Ukraine_campaign> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:award dbr:Hero_of_Ukraine .
  ?person dbo:militaryCommanderOf dbr:Southern_Ukraine_campaign .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
170,13,train,Give me the entity in the work of International Energy Agency and birth place of Era Ziganshina.,SELECT ?result WHERE { <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?birthPlace WHERE {
  # Find entities related to the International Energy Agency
  OPTIONAL {
    ?entity dbo:wikiPageWikiLink dbr:International_Energy_Agency .
    BIND(""IEA Entity"" AS ?label)
  }

  # Find birthplace of Era Ziganshina
  OPTIONAL {
    ?person dbo:birthPlace ?birthPlace .
    FILTER(?person = dbr:Era_Ziganshina) .
    BIND(""Birthplace of Era Ziganshina"" AS ?label)
  }
}
```",3,3,4,2,2,2,3,28,0,585,1,0.0,0.0,0
5,5,train,Give me the award of Coro de la Pontificia Universidad Católica de Puerto Rico.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?entity a dbo:MusicalGroup .
  ?entity rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  OPTIONAL { ?entity dbo:award ?award . }
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
200,5,train,Give me the reference to the name of Angelcorpse.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Angelcorpse> <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?reference WHERE {
  ?band rdf:type dbo:MusicalBand .
  ?band foaf:name ""Angelcorpse"" .
  ?band dbo:wikiPageWikiLink ?reference .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
507,13,train,"Give me the director of the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/director> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?director WHERE {
  ?movie a dbo:Film ;
         a dbo:Work ;
         dbo:starring dbr:Beryl_Reid .
  
  ?movie dbo:director ?director .
}
```

This query does the following:
- Filters for entities (`?movie`) that are both of type `dbo:Film` and `dbo:Work`.
- Ensures Beryl Reid is listed as a starring actor in these movies.
- Retrieves the director associated with each qualifying movie.",2,4,3,2,1,3,3,71,0,0,9,0,0.0,0
955,11,train,Give me the band of the writer of Don't Forget Your Roots (album) and band of Johnny Rioux.,SELECT ?result WHERE { <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Rioux> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writerBand ?johnnyRiouxBand WHERE {
  # Find the writer of ""Don't Forget Your Roots"" album
  ?album dbo:title ""Don't Forget Your Roots""@en .
  ?album dbo:artist ?writer .

  # Get the band associated with this writer
  OPTIONAL { ?writer dbo:band ?writerBand . }

  # Find Johnny Rioux and his band
  ?johnnyRioux dbr:Johnny_Rioux .
  OPTIONAL { ?johnnyRioux dbo:band ?johnnyRiouxBand . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
465,27,train,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Step 1: Identify Charles Orlando, Dauphin of France's parent
  ?charlesOrlando a dbo:Dauphin ;
                  dbo:childOf ?parent .

  FILTER(?charlesOrlando = dbr:Charles_Orland,_Dauphin_of_France)

  # Step 2: Find the child of this parent who is royalty
  ?royaltyChild dbo:childOf ?parent ;
                a dbo:Monarch .

  # Step 3: Determine the successor of this royal child
  ?royaltyChild dbo:succeededBy ?successor .
}",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
507,9,train,Give me the spouse of Anne V. Coates and director of Entertaining Mr Sloane (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?anne a dbo:FilmEditor .
  ?anne foaf:name ""Anne V. Coates""@en .
  
  OPTIONAL { 
    ?anne dbo:spouse ?spouse .
  }
  
  ?film dbo:director ?anne ;
        dbp:title ""Entertaining Mr Sloane""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
826,22,train,Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of Anna Magdalena Appel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  dbr:Friedrich_of_Hesse_and_by_Rhine dbo:parent ?father .
  ?father dbo:predecessor ?predecessor .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
926,38,train,"Give me the child of the father, that is a royalty, of Mustafa III and successor of the child of Ahmed III.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?childOfFather WHERE {
  # Mustafa III's father
  ?mustafaIII dbo:father ?father .
  FILTER(STR(?mustafaIII) = ""Mustafa_III"")

  # Father's child who is a royalty
  ?father dbo:child ?childOfFather .
  ?childOfFather rdf:type dbo:Monarch .

  # Ahmed III's child
  ?ahmedIII dbo:child ?childOfAhmedIII .
  FILTER(STR(?ahmedIII) = ""Ahmed_III"")

  # Successor of Ahmed III's child
  ?childOfAhmedIII dbo:successor ?successor .
  FILTER(?successor = ?childOfFather)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
365,6,train,Give me the person born as Symon Vasylyovych Petliura and spouse of Olha Petliura.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Symon Vasylyovych Petliura""@en . <http://dbpedia.org/resource/Olha_Petliura> <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Symon Vasylyovych Petliura""@en ;
          dbo:birthName ""Symon Vasylyovych Petliura"" .
  
  OPTIONAL { 
    ?person dbo:spouse dbr:Olha_Petliura .
    ?person dbo:spouse ?spouse .
  }
}
```

This query does the following:
- It selects individuals (`?person`) who are of type `dbo:Person`.
- It matches those whose name is ""Symon Vasylyovych Petliura"" and birth name is also ""Symon Vasylyovych Petliura"".
- It optionally retrieves the spouse information, specifically checking if one of the spouses is Olha Petliura (`dbr:Olha_Petliura`), and returns any other spouse details.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
273,8,train,Give me the parent of the alumnus of University of Turin.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus ?parent WHERE {
  ?alumnus dbo:almaMater dbr:University_of_Turin .
  OPTIONAL { ?alumnus dbo:parent ?parent . }
}
```

This query does the following:
- Uses `dbo:almaMater` to find individuals who attended the University of Turin.
- Optionally retrieves their parents using `dbo:parent`.",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
281,6,train,Give me the commander in New Guinea campaign and awardee of Medal bar.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander ?medal WHERE {
  # Find individuals who commanded in the New Guinea campaign
  ?campaign dbo:location dbr:New_Guinea .
  ?campaign dbo:commander ?commander .

  # Ensure the commander was awarded a Medal bar
  ?commander dbp:awards ?award .
  ?award dbo:medalBar true .

  # Filter to ensure we are looking at military campaigns
  ?campaign rdf:type dbo:MilitaryConflict .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
41,1,train,Give me the party of Declan Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  wd:Q1234568 dbo:politicalParty ?party .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Declan Costello. You can find this by searching for Declan Costello on DBpedia or using a SPARQL query to identify his unique identifier.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
554,2,train,Who is the party member of Independent politician?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?politician dbo:politicalParty ?party .
  FILTER NOT EXISTS { ?politician dbo:isIndependent ""true""^^xsd:boolean }
  VALUES ?politician { dbr:Name_of_the_Independent_Politician }
}
```",1,1,2,1,1,3,2,20,0,0,2968,0,0.0,0
926,16,train,Give me the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?result <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?spouse a dbo:Spouse ;
          dbo:spouseOf <http://dbpedia.org/resource/Şermi_Kadın> .
  
  ?child dbo:parent ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
124,38,train,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?kitchenerForce ?rhodesWar
WHERE {
  # Herbert Kitchener, 1st Earl Kitchener
  dbr:Herbert_Kitchener_1st_Earl_Kitchener dbo:militaryConflict ?kitchenerEvent .
  
  # Frank Rhodes (British Army officer)
  dbr:Frank_Rhodes_(British_Army_officer) dbo:militaryConflict ?rhodesEvent .

  # Filter for societal events and military conflicts
  ?kitchenerEvent a dbo:MilitaryConflict ;
                 a dbo:SocietalEvent .
  
  ?rhodesEvent a dbo:MilitaryConflict ;
               a dbo:Event ;
               a dbo:SocietalEvent .

  # Retrieve the military forces involved
  ?kitchenerEvent dbo:participatingMilitaryForce ?kitchenerForce .
  ?rhodesEvent dbo:participatingMilitaryForce ?rhodesWar .
}",4,9,5,2,2,3,3,71,0,0,1085,0,0.0,0
508,10,train,"Give me the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find Hu Yukun
  ?huYukun a dbo:Person ;
           foaf:name ""Hu Yukun""@en .

  # Find wars related to Hu Yukun
  ?war dbo:participant ?huYukun ;
       a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Find commanders of these wars
  ?war dbo:commander ?commander .

  # Filter commanders by nationality (Saudi)
  ?commander dbo:nationality dbr:Saudi_Arabia .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
573,18,train,"Give me the person decedent at Massachusetts and person decedent at Quincy, Massachusetts and parent of John Quincy Adams.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personDecedentMassachusetts ?personDecedentQuincy ?parentJohnQuincyAdams
WHERE {
  # Person decedent at Massachusetts
  ?personDecedentMassachusetts dbo:deathPlace dbr:Massachusetts .
  
  # Person decedent at Quincy, Massachusetts
  ?personDecedentQuincy dbo:deathPlace dbr:Quincy,_Massachusetts .

  # Parent of John Quincy Adams
  dbr:John_Quincy_Adams dbo:parent ?parentJohnQuincyAdams .
}
```",3,3,4,1,3,3,3,71,0,0,2,0,0.0,0
18,6,train,Give me the parent of Liza Huber and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?profession
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Liza Huber""@en .
  
  OPTIONAL { ?person dbo:mother ?parent . }
  OPTIONAL { ?person dbo:father ?parent . }

  OPTIONAL { ?person dbo:occupation ?profession . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
465,39,train,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Step 1: Identify Charles Orlando, Dauphin of France
  ?charlesOrlando a dbo:Dauphin ;
                  foaf:name ""Charles Orlando"" .

  # Step 2: Find his parent
  ?parent dbo:child ?charlesOrlando .

  # Step 3: Find the royal child of this parent
  ?royalChild dbo:child ?parent ;
              a dbo:Monarch .

  # Step 4: Find the successor of this royal child
  ?successor dbo:predecessor ?royalChild .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
839,11,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Kevin Richard Russell"" .
  ?person dbo:member ?band .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
129,4,train,"Give me the actor, that is an organisation, of Dreamville Presents: Revenge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organization WHERE {
  ?work rdfs:label ""Dreamville Presents: Revenge""@en .
  FILTER (lang(?work) = 'en')
  
  ?work dbo:producer ?organization .
  ?organization a dbo:Organization .
}
```

This query does the following:
- Uses `rdfs:label` to find the resource representing ""Dreamville Presents: Revenge.""
- Filters results to ensure the label is in English.
- Looks for an organization (`dbo:Organization`) associated with this work as a producer.",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
18,18,train,"Give me the alumnus of the figure known, that is an educational institution, as Saints and parent of Liza Huber.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . ?result <http://dbpedia.org/ontology/almaMater> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  ?parent dbo:child dbr:Liza_Huber .
  ?parent dbo:almaMater ?institution .
  ?institution rdfs:label ""Saints""@en .
  ?parent foaf:name ?alumnus .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
124,32,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Frank Rhodes and his military involvement
  ?frankRhodes a dbo:MilitaryPerson ;
               foaf:name ""Frank Rhodes"" ;
               dbo:militaryConflict ?conflict1 .

  # A Field Battery, Royal Australian Artillery's military involvement
  ?battery a dbo:Organisation ;
           foaf:name ""A Field Battery, Royal Australian Artillery"" ;
           dbo:militaryConflict ?conflict2 .

  # Ensure the conflicts are the same and involve both entities
  FILTER (?conflict1 = ?conflict2)

  # Retrieve the military force associated with the conflict
  ?conflict1 dbo:participatingMilitaryForce ?militaryForce .
}
```",4,9,5,2,2,3,3,71,0,0,9,0,0.0,0
573,16,train,"Give me the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?result . ?v1 <http://dbpedia.org/property/occupation> ""Politician""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?residence WHERE {
  ?person a dbo:Politician ;
          dbo:nationality dbr:United_States .
  OPTIONAL { ?person dbo:birthPlace ?residence . }
  FILTER (isBlank(?residence) || 
          (dbo:Settlement ?residence))
}
```

### Explanation:

- **PREFIX**: Define prefixes for DBpedia ontology (`dbo`), resources (`dbr`), and properties (`dbp`).
  
- **SELECT DISTINCT**: Choose distinct individuals (`?person`) and their residences (`?residence`).

- **FILTER**: Ensure the residence is either a blank node or classified as a settlement.

- **OPTIONAL**: Use `OPTIONAL` to account for cases where birthplace might be used as residence if no direct residence data is available.

This query assumes that the residence information can sometimes be found in the `dbo:birthPlace` property, which may not always be accurate but serves as a fallback. Adjustments might be needed based on actual DBpedia schema updates or specific requirements.",2,4,3,2,1,3,3,71,0,0,41,0,0.0,0
582,35,train,Give me the figure known as the nickname of Japan national football team and reference to the residence of Hirotaka Sugawara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname ?residence WHERE {
  # Query for the nickname of Japan national football team
  OPTIONAL {
    dbr:Japan_national_football_team dbo:nickname ?nickname .
  }
  
  # Query for the residence of Hirotaka Sugawara
  OPTIONAL {
    dbr:Hirotaka_Sugawara dbo:residencePlace ?residence .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
926,8,train,"Give me the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?father WHERE {
  ?mustafaIII dbo:father ?father .
  FILTER (str(?mustafaIII) = ""Mustafa III"")
  OPTIONAL { ?father rdf:type dbo:Monarch . }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
965,16,train,"Give me the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Politician ;
          dbp:birthday ""1854-05-24""^^xsd:date .
  
  ?person dbo:child ?child .

  ?child a dbo:Royalty .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
129,1,train,Give me the associated musical artist of EarthGang.,SELECT ?result WHERE { <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  wd:Q1105010 wdt:P175 ?artist .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
715,25,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in Spanish Civil War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Find Carlos Franco Iribarne-Garay and his role in the Spanish Civil War
  ?person a dbo:Person ;
          foaf:name ""Carlos Franco Iribarne-Garay""@en ;
          dbo:occupation dbr:Commander_in_the_Spanish_Civil_War .

  # Find the organization or office he was part of
  ?office dbo:member ?person ;
          a dbo:GovernmentAgency, dbo:Organization .

  # Get the leader of that office
  ?office dbo:leader ?leader .
}
```

This query assumes:
- Carlos Franco Iribarne-Garay is linked to the role of ""Commander in the Spanish Civil War.""
- The organization or office he was part of has a `dbo:member` relationship with him.
- The leader of that office can be found using the `dbo:leader` property.",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
465,36,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Ercole II d'Este and his successor
  dbr:Ercole_II_d%27Este ""Duke of Ferrara""@en a dbo:Duke ;
    dbo:successor ?ercoleSuccessor .

  # Charles Orlando, Dauphin of France and his parent
  dbr:Charles_Orlando,_Dauphin_of_France dbo:parent ?charlesParent .

  # Find a child of the parent who is royalty
  ?child dbo:parent ?charlesParent ;
         a dbo:RoyalFamilyMember .

  # Successor of this royal child
  ?child dbo:successor ?successor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
216,22,train,"Give me the player in Igor Bišćan and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?teammate WHERE {
  # Find Igor Bišćan's resource
  VALUES ?igor (dbr:Igor_Bišćan) .

  # Find teams Igor played for
  ?team dbo:player ?igor .
  
  # Find teammates of Igor on those teams
  ?team dbo:player ?teammate .
  
  # Ensure the teammate is not Igor himself
  FILTER (?teammate != ?igor)
  
  # Filter by birthdate and roles
  ?teammate dbp:birthday ""1983-12-20""^^xsd:date ;
            a dbo:SoccerPlayer ;
            a dbo:SportsManager ;
            a dbo:SoccerManager .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
791,8,train,"Give me the child, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?emperor a dbo:Emperor ;
           foaf:name ""Takakura""@en .
  
  ?emperor dbo:child ?child .

  ?child a ?royaltyClass .
  FILTER (
    ?royaltyClass IN (dbo:Monarch, dbo:Noble) ||
    ?royaltyClass rdfs:subClassOf*+ (dbo:Monarch, dbo:Noble)
  )
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
965,15,train,Give me the spouse of the parent of Louise Mountbatten.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Find Louise Mountbatten
  ?louise a dbo:Person ;
          foaf:name ""Louise Mountbatten""@en .

  # Find her parents
  ?parent dbo:child ?louise .
  
  # Find the spouses of those parents
  ?parent dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
47,3,train,"Give me the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?operation dbo:commander ?commander .
  ?commander a dbo:Politician .
  
  FILTER(CONTAINS(LCASE(STR(?operation)), ""operation green hunt""))
}
```

This query assumes:
- There is an entity for Operation Green Hunt with the property `dbo:commander`.
- The commander has a type of `dbo:Politician`.

Note: This query might need adjustments based on actual DBpedia data availability and structure.",1,2,2,1,1,3,3,71,0,0,104,0,0.0,0
926,39,train,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Beyhan Sultan's parent who is a successor of Mustafa III
  dbr:Beyhan_Sultan dbo:parent dbr:Abdul_Hamid_I .
  
  # Abdul Hamid I's children who are royalty
  dbr:Abdul_Hamid_I dbo:child ?child .
  ?child a dbo:Monarch .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
456,23,train,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?spouse WHERE {
  # Find movies where Ross Newton has acted
  ?movie dbo:starring dbr:Ross_Newton .
  
  # Filter for movies that are both a work and a television show
  ?movie rdf:type dbo:Film ;
         dbo:genre dbr:Television_show .

  # Get other actors in these movies
  ?movie dbo:starring ?actor .
  
  FILTER(?actor != dbr:Ross_Newton) # Exclude Ross Newton himself

  OPTIONAL {
    # Find the spouse of each actor
    ?actor dbo:spouse ?spouse .
  }
}
```",3,5,4,3,1,3,3,71,0,0,5,0,0.0,0
826,21,train,"Give me the spouse of the child of Johann Heinrich Appel and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v1 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Find Johann Heinrich Appel's child
  ?child dbo:parent dbr:Johann_Heinrich_Appel .
  
  # Step 2: Determine the spouse of that child
  ?spouse dbo:spouse ?child .

  # Step 3: Find the predecessor of Louis IV, Grand Duke of Hesse
  ?predecessor dbo:successor dbr:Louis_IV,_Grand_Duke_of_Hesse .
  
  # Ensure the spouse is related to the predecessor
  ?spouse dbo:parent ?predecessor .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
329,17,train,"Give me the entity in Northern Ireland and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInNorthernIreland ?regionEntity WHERE {
  # Find entities in Northern Ireland using Western European Time
  ?entityInNorthernIreland a dbo:Country ;
                          dbo:timeZone dbr:Western_European_Time ;
                          dbo:country dbr:Northern_Ireland .

  # Find the region entity that is also a country and uses Western European Time
  ?regionEntity a dbo:Country ;
               dbo:timeZone dbr:Western_European_Time ;
               dbo:part dbr:Northern_Ireland .
}
```

This query does the following:
- Selects entities (`?entityInNorthernIreland`) that are countries in Northern Ireland using Western European Time.
- Selects region entities (`?regionEntity`) that are countries, part of which includes Northern Ireland, and also use Western European Time.",3,4,4,2,2,2,3,28,0,0,531,0,0.0,0
170,0,train,Give me the entity in Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Russia .
}
```",1,1,2,1,1,2,3,28,75,1255,29852,0.05639097744360902,0.0025060981722190663,0.004798925040790863
773,28,train,Give me the spouse of the father of Charles the Fat and parent of Charles the Fat and parent of Carloman of Bavaria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?charlesFat dbo:parent ?father .
  ?carlomanBavaria dbo:parent ?father .
  
  FILTER(?charlesFat = dbpedia:Charles_the_Fat)
  FILTER(?carlomanBavaria = dbpedia:Carloman_of_Bavaria)

  ?father dbo:spouse ?spouse .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
433,3,train,Give me the persona of Paul Chambers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?property ?value
WHERE {
  VALUES ?subject { dbr:Paul_Chambers_(bassist) }
  
  ?subject ?property ?value .
  
  FILTER (
    ?property IN (dbo:birthName, dbo:birthDate, dbo:deathDate, dbo:occupation, dbo:notableWorks, dbo:genre)
  )
}
ORDER BY ?property
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
465,0,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  ?person dbo:predecessor dbr:Ercole_II_d%27Este,_Duke_of_Ferrara .
  ?person dbo:title ""Duke of Ferrara""@en .
  ?person dbp:succeededBy ?successor .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
582,7,train,"Give me the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . },"```sparql
SELECT ?team WHERE {
  wd:Q1234567 wdt:P106 wd:Q33999 .  # Hajime Moriyasu is a football manager (P106)
  wd:Q1234567 wdt:P102 ?team .      # P102 denotes the team managed by the person
  FILTER EXISTS { ?team wdt:P31 wd:Q43229 }  # Filter to ensure the team is an organization (P31)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
926,10,train,Give me the child of Ahmed III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?ahmed3 dbo:spouse ?spouse .
  ?ahmed3 dbo:child ?child .
  
  ?mahmud2 dbo:father ?child .

  FILTER(?ahmed3 = <http://dbpedia.org/resource/Ahmed_III> && ?mahmud2 = <http://dbpedia.org/resource/Mahmud_II>)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
433,4,train,"Give me the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthDate WHERE {
  VALUES ?person { dbr:Paul_Laurence_Dunbar_Chambers_Jr. }
  
  ?person dbo:birthDate ?birthDate .
  ?person a ?type1 .
  ?person a ?type2 .

  FILTER (
    (?type1 = dbo:Musician || ?type1 = dbo:Artist) &&
    (?type2 = dbo:Musician || ?type2 = dbo:Artist)
  )
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
582,2,train,Give me the figure known as --10-19.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?figure ?label WHERE {
  VALUES ?item { dbr:Q123456 } # Replace Q123456 with the actual identifier
  ?item rdfs:label ?label .
  OPTIONAL { ?item dbo:wikiPageRedirects ?redirect . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
645,12,train,Give me the military force of Spanish Civil War and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?leader
WHERE {
  # Find military forces involved in the Spanish Civil War
  ?militaryForce dbo:partOfMilitaryConflict dbr:Spanish_Civil_War .
  
  # Find the leader of the Ministry of the Army (Spain)
  OPTIONAL {
    ?ministry dbo:head dbr:Ministry_of_the_Army_(Spain) ;
              dbo:leader ?leader .
  }
}
```

This query does the following:
- It selects military forces that were part of the Spanish Civil War.
- It attempts to find the leader associated with the Ministry of the Army in Spain.

Note: The actual availability and structure of data in DBpedia might require adjustments to this query, such as using specific properties or resources if they exist differently.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
83,8,train,Give me the party of the governor of Dilma Rousseff.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor ?party WHERE {
  # Identify Dilma Rousseff as a former president of Brazil
  dbr:Dilma_Rousseff dbo:presidentOf dbr:Brazil .

  # Find the governors during her presidency (2011-2016)
  ?governor dbo:termStartYear ?startYear .
  ?governor dbo:termEndYear ?endYear .
  FILTER (?startYear <= 2016 && ?endYear >= 2011) .

  # Get the political party of each governor
  ?governor dbo:party ?party .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
987,36,train,"Give me the birth place of Dado Polumenta and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?country ?sportsEvent WHERE {
  # Find birthplace of Dado Pršo
  dbr:Dado_Pršo dbo:birthPlace ?birthPlace .

  # Find a country in the region of Canicosa de la Sierra
  dbr:Canicosa_de_la_Sierra dbo:locatedIn ?region .
  ?region dbo:country ?country .

  # Find a sports event associated with the time zone of Canicosa de la Sierra
  dbr:Canicosa_de_la_Sierra dbo:timeZone ?timeZone .
  ?sportsEvent dbo:timeZone ?timeZone .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
83,6,train,Give me the ruling party in Fortaleza and party of Alceu Collares.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alceu_Collares> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Fortaleza> <http://dbpedia.org/property/leaderParty> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rulingPartyInFortaleza ?partyOfAlceuCollares
WHERE {
  # Assuming there is a property for the ruling party in Fortaleza
  dbr:Fortaleza dbo:rulingParty ?rulingPartyInFortaleza .
  
  # Alceu Collares and his political party
  dbr:Alceu_Collares dbo:party ?partyOfAlceuCollares .
}
```

This query assumes:
- `dbo:rulingParty` is the property used to denote the ruling party in a city like Fortaleza.
- `dbo:party` is the property linking Alceu Collares to his political party.

Please note that these properties might need adjustment based on the actual DBpedia schema and available data. If these specific properties do not exist, you may need to explore the DBpedia ontology or use more general properties like `dbo:memberOf`.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
495,10,train,Give me the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?child WHERE {
  # Step 1: Get the parent(s) of Princess Pauline of Württemberg
  dbpedia:Princess_Pauline_of_W%C3%BCrttemberg dbo:parent ?parent .

  # Step 2: Find the children of those parents
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
976,4,train,"Who is the leader, that is a politician, of Grand National Assembly of Turkey?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?assembly a dbo:Parliament ;
            rdfs:label ""Grand National Assembly of Turkey""@en .
  
  ?leader dbo:positionHeld ?assembly ;
          dbo:officeHolderOf ?office .

  ?office rdfs:label ?officeLabel .
  
  FILTER(CONTAINS(LCASE(?officeLabel), ""president"") || CONTAINS(LCASE(?officeLabel), ""speaker""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
826,10,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  ?grandDuke a dbo:Monarch ;
             dbo:succession dbr:Louis_IV,_Grand_Duke_of_Hesse .
  ?predecessor a dbo:Monarch ;
               dbo:succession ?grandDuke .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
508,3,train,"Give me the commander, that is a politician, in 1939–1940 Winter Offensive.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find entities related to the Winter War
  ?offensive dbo:partOf dbr:Winter_War .
  
  # Identify commanders involved in the offensive
  ?offensive dbo:commander ?commander .

  # Ensure the commander is also a politician
  ?commander dbo:occupation dbr:Politician .

  FILTER (CONTAINS(LCASE(STR(?offensive)), ""winter war""))
}
```

This query does the following:
- It looks for entities related to the Winter War.
- Identifies commanders involved in that offensive.
- Filters those commanders who also have an occupation as a politician.",1,2,2,1,1,3,2,20,0,0,6,0,0.0,0
791,30,train,"Give me the spouse of Taira no Tokuko and father of the child, that is a royalty, of Emperor Takakura and predecessor of Emperor Antoku.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Taira no Tokuko and her spouse
  dbr:Taira_no_Tokuko dbo:spouse ?spouse .

  # The child of Emperor Takakura who is a royalty (Emperor Antoku)
  dbr:Emperor_Antoku dbo:parent dbr:Emperor_Takakura ;
                     a dbo:Monarch .

  # The spouse should be the father of Emperor Antoku
  ?spouse dbo:child dbr:Emperor_Antoku .

  # The predecessor of Emperor Antoku is also Emperor Takakura
  dbr:Emperor_Antoku dbo:predecessor dbr:Emperor_Takakura .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
976,12,train,Give me the office of Meral Akşener and office of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeName WHERE {
  VALUES ?person { 
    dbr:Meral_Akşener 
    dbr:Naci_Bostancı
  }
  
  ?person dbo:office ?office .
  ?office rdfs:label ?officeName .
  FILTER (lang(?officeName) = 'en')
}
ORDER BY ?person",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
83,12,train,Give me the party of the governor of Dilma Rousseff and ruling party in Fortaleza.,SELECT ?result WHERE { <http://dbpedia.org/resource/Fortaleza> <http://dbpedia.org/property/leaderParty> ?result . <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?dilmaParty ?fortalezaRulingParty WHERE {
  # Dilma Rousseff's political party when she was governor
  dbr:Dilma_Rousseff dbo:governmentRole [
    a dbo:GovernmentRole ;
    dbo:office dbr:Governor_of_Rio_Grande_do_Sul ;
    dbo:startDate ?start ;
    dbo:endDate ?end .
  ] .

  # Political party of Dilma Rousseff
  OPTIONAL {
    dbr:Dilma_Rousseff dbo:politicalParty ?dilmaParty .
  }

  # Ruling party in Fortaleza during her governorship
  OPTIONAL {
    ?fortalezaGovernment a dbo:Government ;
      dbo:country dbr:Brazil ;
      dbo:capital dbr:Fortaleza ;
      dbo:startDate ?startF ;
      dbo:endDate ?endF .

    ?fortalezaGovernment dbo:governmentRole [
      a dbo:GovernmentRole ;
      dbo:party ?fortalezaRulingParty .
    ] .

    FILTER (?start <= ?endF && ?end >= ?startF)
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
976,26,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayorName ?office
WHERE {
  ?mayor a dbo:Mayor ;
         dbo:nationality dbr:Turkey ;
         dbo:politicalParty ?party .
  
  ?party rdfs:label ""Millet İttifakı""@en .

  ?mayor dbp:name ?mayorName ;
         dbo:officeHeld ?office .

  FILTER (lang(?mayorName) = 'tr' || lang(?mayorName) = '')
}
ORDER BY ?mayorName
LIMIT 10",3,9,4,3,1,3,3,71,0,0,3,0,0.0,0
715,31,train,"Give me the commander in the force, that is a military conflict, of the native of Morocco and commander in Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?conflict WHERE {
  ?person dbo:nationality dbr:Morocco .
  ?person dbo:commanderOf ?conflict .
  ?conflict dbo:date ?date .
  FILTER (?date >= ""1936-07-17""^^xsd:date && ?date <= ""1939-04-01""^^xsd:date) .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
445,5,train,Give me the establishment of 1820-03-10.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?entity ?label WHERE {
  ?entity a dbo:Event .
  ?entity dbo:dateEstablished ?date .
  FILTER (xsd:date(?date) = ""1820-03-10""^^xsd:date)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

This query does the following:
- It selects entities that are of type `dbo:Event`.
- It looks for a property `dbo:dateEstablished` with the value ""1820-03-10"".
- It uses a filter to ensure the date matches exactly.
- The `SERVICE wikibase:label` is used to fetch labels in the preferred language.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
917,21,train,"Give me the child of Kekūanāoʻa and parent of the child, that is a royalty, of Kamehameha IV.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?kekuanaoa dbo:child ?person .
  FILTER (str(?kekuanaoa) = ""Kekūanāoʻa"")
  
  ?person dbo:child ?grandchild .
  ?grandchild dbp:royalty ?true .

  OPTIONAL { ?person dbp:royalty ?true . }
}
```

This query will return the person who is a child of Kekūanāoʻa and has at least one royal grandchild, while also being royalty themselves.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
507,0,train,Give me the spouse of Anne V. Coates.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . },"```sparql
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Anne V. Coates.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
987,23,train,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandBirthPlace WHERE {
  # Step 1: Identify Dado Pršo and his band membership
  ?dado a dbo:Person ;
        foaf:name ""Dado Pršo""@en .
  
  ?dado dbo:memberOfBand ?band .

  # Step 2: Determine if the band is both an artist and a musical artist
  ?band a dbo:MusicalArtist, dbo:Artist .

  # Step 3: Retrieve the birthplace of the band
  ?band dbp:birthPlace ?bandBirthPlace .
}
```",3,6,4,3,1,3,3,71,0,0,6,0,0.0,0
382,10,train,"Give me the award of the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES ?person { dbr:Harry_Combes }
  
  # Check for awards related to his role as a coach
  OPTIONAL {
    ?person dbo:coachOf ?team .
    ?person dbo:award ?award .
  }

  # Check for awards related to his role as a college coach
  OPTIONAL {
    ?person dbo:collegeCoachOf ?team .
    ?person dbo:award ?award .
  }
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
273,11,train,Give me the parent of Gianni Agnelli and spouse of the child of Giovanni Agnelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gianni_Agnelli> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent ?spouse WHERE {
  # Gianni Agnelli's parent
  ?gianniAg a dbo:Person ;
           foaf:name ""Gianni Agnelli"" .
  
  ?parent dbo:child ?gianniAg .
  
  # Giovanni Agnelli is the same as Gianni Agnelli in this context
  ?giovanniAg a dbo:Property ;
              foaf:name ""Giovanni Agnelli"" .

  ?giovanniAg dbo:child ?child .
  
  # Spouse of Giovanni Agnelli's child
  ?spouse dbo:spouse ?child .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
365,1,train,Give me the spouse of Olha Petliura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Olha_Petliura> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Olha Petliura. You can find this by searching for her on DBpedia or using a SPARQL query to identify her unique ID.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
926,33,train,Give me the successor of the child of the spouse of Şermi Kadın and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v2 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Şermi Kadın and her spouse
  ?şermikadin a dbo:Spouse;
              dbo:spouse ?spouse.

  # The child of the spouse who is also the father of Mahmud II
  ?child dbo:parent ?spouse;
         dbo:parent dbr:Mahmud_II_of_the_Ottoman_Empire;
         dbo:succ ?successor.
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
102,11,train,Give me the manager of the player in Ellie Roebuck and native of Dewsbury.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Dewsbury> . <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?player a dbo:SoccerPlayer ;
          foaf:name ""Ellie Roebuck""@en ;
          dbo:nationality dbr:United_Kingdom ;
          dbo:birthPlace dbr:Dewsbury .
  
  ?team dbo:captain ?player .
  ?team dbo:manager ?manager .
}
```

This query does the following:
- It selects entities that are of type `SoccerPlayer` with the name ""Ellie Roebuck"" and born in Dewsbury.
- It then finds a team where Ellie is listed as captain (or you might need to adjust this if she's not a captain but just associated with a team).
- Finally, it retrieves the manager of that team.

Note: The query assumes that Ellie Roebuck is directly linked to a team and that her role or association can be found through `dbo:captain`. If her exact role isn't specified as captain, you might need additional information or adjustments based on how DBpedia represents such relationships. Also, ensure the correct identifiers for Dewsbury and any other specific entities are used.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
987,25,train,"Give me the entity in the region, that is a country, of Central European Time and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  # Find countries in the Central European Time zone
  ?country a dbo:Country ;
           dbo:timeZone dbr:Central_European_Time .

  # Ensure it is also the birthplace of Moamer Kasumović (Slobodan Milošević)
  OPTIONAL { 
    dbr:Slobodan_Milošević dbo:birthPlace ?country .
  }

  FILTER EXISTS {
    dbr:Slobodan_Milošević dbo:birthPlace ?country .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
170,5,train,Give me the profession of John Scholey.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  wd:Q123456 wdt:P106 ?occupation .
  ?occupation rdfs:label ?profession .
  FILTER (lang(?profession) = ""en"")
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for John Scholey.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
216,6,train,Give me the party of Campbell Newman and office of Tim Nicholls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party ?office 
WHERE {
  ?newman a dbo:Person ;
          foaf:name ""Campbell Newman""@en .
  ?newman dbo:party ?party .

  ?nicholls a dbo:Person ;
            foaf:name ""Tim Nicholls""@en .
  ?nicholls dbo:position ?office .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
274,5,train,"Who is the actor, that is a musical artist, of Imagine the Sound?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film dbo:starring ?actor .
  ?actor dbo:occupation ?occupation1 .
  ?actor dbo:occupation ?occupation2 .
  
  FILTER(?occupation1 = dbr/Musician OR ?occupation2 = dbr/Musician)
  FILTER(?film = dbr/Imagine_the_Sound)

  # Ensure the actor is both an actor and a musician
  VALUES (?occupation) { (dbr/Actor) (dbr/Musician) }
}
```",1,2,2,1,1,2,3,28,0,0,4,0,0.0,0
495,12,train,Give me the father of the child of Princess Charlotte of Saxe-Hildburghausen and child of Frederick I of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_I_of_Württemberg> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  # Find Princess Charlotte of Saxe-Hildburghausen and Frederick I of Württemberg
  ?princess a dbo:Person ;
            foaf:name ""Princess Charlotte of Saxe-Hildburghausen""@en .
  
  ?frederick a dbo:Property ;
             foaf:name ""Frederick I, Duke of Württemberg""@en .

  # Find their child
  ?child dbo:parent ?princess ;
         dbo:parent ?frederick .

  # The father is Frederick I of Württemberg
  ?father a dbo:Person ;
          foaf:name ""Frederick I, Duke of Württemberg""@en .
  
  # Ensure the child has Frederick as a parent
  ?child dbo:parent ?father .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
433,35,train,"Give me the professional in the profession of Bob Marley and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?associatedArtist WHERE {
  # Bob Marley's profession
  dbr:Bob_Marley dbo:profession ?professional .

  # Paul Laurence Dunbar Chambers Jr.'s birth details and professions
  dbr:Paul_Laurence_Dunbar_Chambers_Jr_ (dbo:birthPlace|dbo:birthDate) ?birthDetail .
  
  # Check if he is a musical artist and an artist
  FILTER EXISTS { dbr:Paul_Laurence_Dunbar_Chambers_Jr_ dbo:profession dbr:Musical_Artist . }
  FILTER EXISTS { dbr:Paul_Laurence_Dunbar_Chambers_Jr_ dbo:profession dbr:Artist . }

  # Find associated musical artists
  ?associatedArtist dbo:associatedMusicalArtist dbr:Paul_Laurence_Dunbar_Chambers_Jr_ .
}
```",4,6,5,2,2,3,3,71,0,0,16,0,0.0,0
382,8,train,Give me the landmark at elevation of the award of Harry Combes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Assuming Harry Combes is linked to a specific award, e.g., Mount Everest related
  ?person dbo:name ""Harry Combes""@en .
  
  # Link the person to an award
  ?person dbo:award ?award .

  # Find the elevation of the award (assuming it's a geographical feature)
  ?award dbo:elevation ?elevation .

  # Find landmarks at this elevation
  ?landmark dbo:elevation ?elevation ;
            rdf:type dbo:Landmark .
}
```

This query assumes:
- Harry Combes is linked to an award that has an elevation property.
- The landmark associated with this elevation can be found using the same elevation value.

Please note, this is a hypothetical example. You would need to adjust the query based on actual data available in DBpedia regarding Harry Combes and his specific award.",2,2,3,2,1,3,2,20,0,0,727,0,0.0,0
507,24,train,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and professional in Film director, television director.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director WHERE {
  ?movie dbo:starring dbr:Beryl_Reid .
  ?movie rdf:type dbo:Film .
  ?movie dbo:directedBy ?director .
  ?director rdf:type dbo:FilmDirector ;
            dbo:profession dbr:Film_director ;
            dbo:profession dbr:Television_director .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
216,14,train,Give me the office of Tim Nicholls and party of the awardee of Australian Defence Medal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?partyAffiliation
WHERE {
  # Find Tim Nicholls and his office
  OPTIONAL {
    dbr:Tim_Nicholls dbo:office ?office .
  }
  
  # Find an awardee of the Australian Defence Medal and their party affiliation
  OPTIONAL {
    ?awardee dbo:award <http://dbpedia.org/resource/Australian_Defence_Medal> ;
            dbo:partyAffiliation ?partyAffiliation .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
892,16,train,Give me the award of the member of E-girls.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?result . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?award WHERE {
  ?member a dbo:MusicalArtist ;
          dbo:bandMemberOf dbr:E-girls .
  OPTIONAL { ?member dbo:award ?award . }
}
```

This query does the following:
- It selects members who are part of E-girls.
- It attempts to find any awards associated with these members.",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
917,27,train,"Give me the child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfFather WHERE {
  # Step 1: Identify Kamehameha III
  ?kamehamehaIII a dbo:Monarch ;
                 foaf:name ""Kamehameha III""@en .

  # Step 2: Find his children who are royalty
  ?child dbr:parent ?kamehamehaIII ;
         a dbo:Monarch .

  # Step 3: Identify the father of each child
  ?father dbr:spouse ?mother ;
          dbr:child ?child .

  # Step 4: Find children of these fathers
  ?childOfFather dbr:parent ?father .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
465,3,train,"Give me the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person dbo:spouse ?spouse .
  ?spouse dbp:name ""Lucrezia Borgia""@en .
  ?person dbp:father ?parent .
  FILTER (str(?person) = str(dbpedia:Ercole_II_d%27Este))
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
865,7,train,Who is the father of Abul Maal Abdul Muhith?,SELECT ?result WHERE { <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?person a dbo:Person ;
          dbp:name ""Abul Maal Abdul Muhith""@en .
  OPTIONAL { ?person dbo:father ?father . }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
445,10,train,Give me the entity in United Kingdom and entity in England.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityUK ?entityEngland WHERE {
  ?entityUK a dbo:Country ;
            rdfs:label ""United Kingdom""@en .
  
  ?entityEngland a dbo:AdministrativeRegion ;
                 dbo:country dbr:United_Kingdom ;
                 rdfs:label ""English""@en .
}
```",2,2,3,1,2,3,3,71,0,0,102,0,0.0,0
839,6,train,Give me the member of Böhse Onkelz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
SELECT ?member WHERE {
  wd:Q1234568 wdt:P127* wd:Q1234569 .
  wd:Q1234569 wdt:P31 wd:Q33999 .
}
```

Note: In the above query, `wd:Q1234568` should be replaced with the actual DBpedia identifier for Böhse Onkelz. You can find this identifier by searching for ""Böhse Onkelz"" in DBpedia or using a SPARQL endpoint to retrieve it.",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
978,10,train,Give me the person born as the name of Chicane (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
SELECT ?person WHERE {
  ?musician rdfs:label ""Chicane""@en .
  ?musician foaf:name ?realName .
  ?person foaf:name ?realName .
  FILTER(LANG(?realName) = 'en')
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
329,7,train,Give me the birthplace of Eric Cross (writer) and entity in Northern Ireland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q1234568 dbo:birthPlace ?birthPlace .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Eric Cross (writer) if it is different. You can find this identifier by searching for Eric Cross on DBpedia or using a SPARQL endpoint to query for his unique identifier.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
445,24,train,Give me the death place of the awardee of Royal Astronomical Society and entity in United Kingdom.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace WHERE {
  ?person dbo:awardReceived dbr:Royal_Astronomical_Society_Award .
  ?person dbo:nationality dbr:United_Kingdom .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```

### Explanation:

- **PREFIX**: We define prefixes for common DBpedia properties and resources.
- **SELECT**: We are interested in the `?deathPlace` of individuals.
- **FILTER Criteria**:
  - `dbo:awardReceived dbr:Royal_Astronomical_Society_Award`: This line filters individuals who have received an award from the Royal Astronomical Society. Note that you might need to adjust this if there are multiple awards or specific ones under this category.
  - `dbo:nationality dbr:United_Kingdom`: Ensures the individual is associated with the United Kingdom.
- **OPTIONAL**: We use `OPTIONAL` for `dbo:deathPlace` because not all individuals may have a recorded death place.

This query assumes that DBpedia has structured data about awards and nationalities in this manner. Adjustments might be necessary based on actual data availability and structure.",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
170,8,train,Give me the entity in the work of International Energy Agency.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?organization rdfs:label ""International Energy Agency""@en.
  ?organization dbo:publication ?work.
}
```",2,2,3,2,1,2,3,28,0,0,29927,0,0.0,0
36,14,train,Give me the person born in the birth year of Deanne Bray and actor of Being Mrs Elliot.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Get Deanne Bray's birth year
  VALUES (?deanneBrayBirthYear) { 
    SELECT ?birthYear WHERE {
      dbr:Deanne_Bray dbo:birthDate ?date .
      BIND(YEAR(?date) AS ?birthYear)
    }
  }

  # Find actors of ""Being Mrs Elliot""
  ?actor dbo:profession dbr:Actor ;
         dbo:birthDate ?actorBirthDate .

  # Filter by birth year
  FILTER (YEAR(?actorBirthDate) = ?deanneBrayBirthYear)

  # Ensure the actor is associated with ""Being Mrs Elliot""
  ?beingMrsElliot dbo:starring ?actor .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
212,0,train,Give me the birthplace of Corp Sayvee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Corp_Sayvee> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Corp Sayvee"" .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
892,20,train,Give me the landmark at elevation of the award of Anna Ishii and entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?elevation WHERE {
  # Find an award associated with Anna Ishii
  ?award dbo:recipient dbr:Anna_Ishii .
  
  # Find a landmark in Italy
  ?landmark dbo:elevation ?elevation ;
            dbo:country dbr:Italy .

  # Link the award to the landmark (hypothetical connection)
  ?award dbo:relatedLandmark ?landmark .
}
```

This query assumes there is a direct or indirect relationship between an award and a landmark, which might not exist in DBpedia. You may need to adjust based on actual data availability.",3,3,4,2,2,3,3,71,0,0,11,0,0.0,0
791,16,train,"Give me the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Find Emperor Go-Shirakawa's children
  ?parent a dbo:Person ;
          dbo:spouseOrPartner ?goShirakawa .
  
  FILTER (STRSTARTS(STR(?goShirakawa), ""dbr:Emperor_Go-Shirakawa""))

  # Find the grandchildren of Emperor Go-Shirakawa
  ?child dbo:parent ?parent ;
         a dbo:Person .

  ?grandchild dbo:parent ?child ;
              a dbo:Person .

  # Ensure the grandchild is both an office holder and royalty
  ?grandchild dbo:officeHolderOf ?office .
  ?grandchild dbo:royalty ?royalty .
}
```",2,4,3,2,1,3,3,71,0,0,4,0,0.0,0
465,22,train,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Anne of Brittany and her children who are royalty
  ?anne a dbo:Person ;
        foaf:name ""Anne of Brittany""@en .
  
  ?child dbo:parent ?anne ;
         dbo:spouse ?ercole ;
         a dbo:Monarch .

  # Ercole II d'Este, Duke of Ferrara and his successor
  ?ercole a dbo:Person ;
          foaf:name ""Ercole II d'Esté""@en .
  
  ?successor dbo:predecessorOrMonarch ?ercole ;
             a dbo:Monarch .

  # Find the child who is also the successor of Ercole II d'Este
  FILTER (?child = ?successor)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
791,31,train,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of Emperor Antoku.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse WHERE {
  # Emperor Takakura and his spouse
  dbr:Takakura_of_Japan dbo:spouse ?takakuraSpouse .

  # Spouse of Takakura's spouse who is royalty
  ?takakuraSpouse dbo:spouse ?spouseOfSpouse .
  
  # Ensure the spouse of the spouse is a royalty (e.g., has a title)
  ?spouseOfSpouse dbo:title ?title .

  # Predecessor of Emperor Antoku
  dbr:Emperor_Antoku dbo:predecessor ?predecessor .
  
  # Linking the predecessor to the spouse of Takakura's spouse
  FILTER(?spouseOfSpouse = ?predecessor)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
236,12,train,Give me the party member of Federalist Party and party member of the administration of James Madison.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Federalist_Party> . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . ?result <http://dbpedia.org/ontology/party> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:partyMemberOf dbr:Federalist_Party .
  ?person dbo:officeHolder dbr:James_Madison#Administration .
}
```",3,3,4,2,2,3,2,20,0,0,19,0,0.0,0
839,17,train,"Give me the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musician ?band 
WHERE {
  ?musician a dbo:MusicArtist .
  ?musician dbo:band ?band .
}
```",2,3,3,2,1,3,3,71,0,0,3643,0,0.0,0
892,37,train,Give me the landmark at elevation of the award of the member of E-girls and entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Step 1: Identify a member of E-girls
  ?member dbo:memberOf dbr:E-girls .
  
  # Step 2: Find an award associated with this member
  ?award dbo:recipient ?member .
  
  # Step 3: Locate a landmark at the elevation related to this award
  ?award dbo:elevation ?elevation .
  ?landmark dbo:elevation ?elevation ;
            dbo:location dbr:Province_of_Reggio_Emilia .
}
```

This query assumes that:
- There is an `memberOf` property linking members to E-girls.
- An `recipient` property links awards to their recipients.
- An `elevation` property exists for both awards and landmarks.
- Landmarks have a `location` property that can be linked to the Province of Reggio Emilia.

Please note that this query is based on assumptions about the data model in DBpedia, which may need adjustments if the actual properties differ. Additionally, the availability of specific data points (like elevation for awards) might not exist in DBpedia, requiring further refinement or alternative approaches.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
329,12,train,Give me the entity in United Kingdom and birthplace of Eric Cross (writer) and entity in Northern Ireland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceUK ?northernIrelandEntity
WHERE {
  dbr:Eric_Cross dbo:birthPlace ?birthPlace.
  
  ?birthPlace dbo:country dbr:United_Kingdom.

  BIND(?birthPlace AS ?birthPlaceUK)

  OPTIONAL {
    ?northernIrelandEntity dbo:wikiPageWikiLink dbr:Northern_Ireland.
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
170,7,train,Give me the entity in Russia and domain of Mayor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?name WHERE {
  ?mayor a dbo:Mayor .
  ?mayor dbo:country dbr:Russia .
  OPTIONAL { ?mayor rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
```",2,2,3,1,2,2,3,28,0,0,99,0,0.0,0
826,19,train,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?spouse WHERE {
  # Find Louis II, Grand Duke of Hesse and his successor
  VALUES ?louis2 { dbr:Ludwig_II,_Grand_Duke_of_Hesse }
  ?louis2 dbo:successor ?successor .

  # Find Johann Heinrich Appel's child
  ?appelChild dbo:parent dbr:Johann_Heinrich_Appel ;
              dbo:spouse ?childSpouse .
  
  # Get the spouse of Johann Heinrich Appel's child
  ?childSpouse a dbo:Person ;
               rdfs:label ?spouseLabel .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
826,36,train,"Give me the spouse of Anna Magdalena Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseOfAnnaMagdalenaAppelSpouse WHERE {
  # Step 1: Find Anna Magdalena Appel's spouse
  ?anna a dbo:Person ;
        foaf:name ""Anna Magdalena Bach""@en .
  ?anna dbo:spouse ?spouseOfAnnaMagdalenaAppel .

  # Step 2: Identify a child of Louis IV, Grand Duke of Hesse
  ?louisIV a dbo:Person ;
           foaf:name ""Louis IV, Grand Duke of Hesse""@en .
  ?child dbo:parent ?louisIV ;
         a dbo:Person .

  # Step 3: Determine the parent of that child (should be Louis IV)
  # Step 4: Find the predecessor of Louis IV
  ?predecessor dbo:successor ?louisIV ;
               a dbo:Person .

  # Step 5: Find the spouse of Anna Magdalena Appel's spouse
  ?spouseOfAnnaMagdalenaAppelSpouse dbo:spouse ?spouseOfAnnaMagdalenaAppel .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
329,1,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:United_Kingdom .
}
```",1,1,2,1,1,2,3,28,87,2691,42912,0.03131749460043196,0.0020233028675085466,0.003801035454485877
917,35,train,"Give me the child of the father of Kamehameha IV and parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Kamehameha IV
  dbr:Kamehameha_IV a dbo:Monarch ;
                    dbo:father ?father .

  # Father of Kamehameha IV
  ?father a dbo:Person ;
          dbo:child ?child .

  # Ensure the child is Kamehameha IV
  FILTER(?child = dbr:Kamehameha_IV)

  # Parent of the child (which is the father)
  ?parent a dbo:Monarch ;
          dbo:child ?child .

  # Ensure the parent is royalty
  FILTER(?parent != ?father) # To ensure we are not selecting the same person twice
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
826,12,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?successor
WHERE {
  # Louis IV, Grand Duke of Hesse
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:predecessor ?predecessor .
  
  # Louis II, Grand Duke of Hesse
  dbr:Louis_II,_Grand_Duke_of_Hesse dbo:successor ?successor .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
715,13,train,Give me the commander in the force of Francisco Largo Caballero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ""Francisco Largo Caballero""@en .
  
  OPTIONAL { 
    ?person dbo:positionHeld ?position .
    ?position dbo:officeHolder ?holder .
    ?holder foaf:name ?commanderName .
    FILTER(CONTAINS(LCASE(?commanderName), ""commander"") || CONTAINS(LCASE(?commanderName), ""leader""))
  }
  
  OPTIONAL {
    ?person dbo:memberOf ?organization .
    ?organization dbo:leader ?leader .
    ?leader foaf:name ?commanderName .
    FILTER(CONTAINS(LCASE(?commanderName), ""commander"") || CONTAINS(LCASE(?commanderName), ""leader""))
  }
}
LIMIT 1",2,2,3,2,1,3,3,71,0,0,28,0,0.0,0
382,14,train,"Give me the landmark at elevation of the award of the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Find Harry Combes and his roles
  ?person a dbo:Person ;
          foaf:name ""Harry Combes"" ;
          dbo:occupation [a dbo:Coach ; 
                          dbo:fieldOfActivity [dbo:isClassifiedBy dbr:College_Sports]] .

  # Find an award associated with him
  ?award dbo:recipient ?person ;
         dbo:elevation ?elevation .

  # Find a landmark at that elevation
  ?landmark dbo:elevation ?elevation .
}
```

This query assumes:
- `dbo:Person` is the class for people.
- `foaf:name` is used to specify the name of the person.
- `dbo:occupation` and `dbo:fieldOfActivity` are used to identify his roles as a coach.
- `dbo:recipient` links an award to its recipient.
- `dbo:elevation` is used to find the elevation associated with both the award and the landmark.",3,5,4,3,1,3,2,20,0,0,727,0,0.0,0
865,16,train,"Who is the child, that is a politician, of the spouse of Syeda Shahar Banu?",SELECT ?result WHERE { <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Find Syeda Shahar Banu
  ?syeda a dbo:Person ;
         foaf:name ""Syeda Shahar Banu""@en .
  
  # Find her spouse
  ?spouse dbo:spouseOrPartner ?syeda .

  # Find the children of that spouse
  ?child dbo:parent ?spouse ;
         a dbo:Person .

  # Filter to find if any child is a politician
  OPTIONAL { ?child dbo:occupation dbp:Politician . }
  
  FILTER EXISTS { ?child dbo:occupation dbp:Politician }
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
170,9,train,Give me the domain of Mayor and birth place of Era Ziganshina.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?domainLabel (GROUP_CONCAT(?birthPlaceLabel; separator="", "") AS ?birthPlaces)
WHERE {
  # Find the domain of ""Mayor""
  OPTIONAL {
    dbr:Mayor rdfs:subClassOf* ?superclass .
    ?superclass rdfs:label ?domainLabel .
    FILTER(LANG(?domainLabel) = 'en')
  }

  # Find the birthplace of ""Era Ziganshina""
  OPTIONAL {
    dbr:Era_Ziganshina dbo:birthPlace ?birthPlace .
    ?birthPlace rdfs:label ?birthPlaceLabel .
    FILTER(LANG(?birthPlaceLabel) = 'en')
  }
}
```",2,2,3,1,2,2,3,28,0,2,1,0.0,0.0,0
606,11,train,"Give me the birthplace of Charles I. Barber and figure known as the nickname of DeKalb, Illinois.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I._Barber> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?nickname
WHERE {
  # Charles I. Barber's birthplace
  OPTIONAL { 
    dbr:Charles_I._Barber dbo:birthPlace ?birthPlace .
  }
  
  # DeKalb, Illinois nickname
  OPTIONAL { 
    dbr:DeKalb,_Illinois dbo:nickname ?nickname .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
715,19,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?abdElKrimCommander ?spanishCivilWarCommander
WHERE {
  # Abd el-Krim and his military conflict commanders
  dbr:Abd_el-Krim a dbo:MilitaryPerson ;
                 dbo:militaryConflict [
                   dbo:commander ?abdElKrimCommander .
                 ] .

  # Commanders of the Spanish Civil War
  dbr:Spanish_Civil_War a dbo:MilitaryConflict ;
                       dbo:commander ?spanishCivilWarCommander .
}
```",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
102,6,train,Give me the native of Dewsbury and manager of Sheffield United W.F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Sheffield_United_W.F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Dewsbury> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Dewsbury .
  ?person dbo:managerOf dbr:Sheffield_United_Women_Football_Club .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
935,8,train,Give me the headquarter of the office of Sanaullah Khan Zehri.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Sanaullah Khan Zehri""@en .
  OPTIONAL { ?person dbo:officeLocation ?office . }
  OPTIONAL { ?office dbo:headquarters ?headquarters . }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
281,13,train,"Give me the awardee of Medal bar and commander in the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?medal WHERE {
  # Find Roy Boehm
  VALUES ?person { dbr:Roy_Boehm }

  # Find wars he commanded
  ?person dbo:militaryConflict ?war .
  
  # Check if he was a commander in the war
  ?commanderRole dbo:roleName ""Commander""@en ;
                 dbo:agent ?person ;
                 dbo:relatedEvent ?war .

  # Check for Medal Bar award
  ?medalAward dbo:recipient ?person ;
              dbo:awardType dbr:Medal_Bars .
  
  FILTER EXISTS { ?commanderRole dbo:roleName ""Commander""@en }
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
839,23,train,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Kevin Russell"" .
  
  OPTIONAL { 
    ?person dbo:associatedBand ?band .
  }
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
976,36,train,Give me the office of the person born as the birth name of Naci Bostancı and office of Mustafa Şentop.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName ?office
WHERE {
  # For Naci Bostancı
  OPTIONAL {
    VALUES (?resource) { dbr:Naci_Bostancı }
    ?resource dbo:birthName ?birthName .
    ?resource dbo:positionHeld ?office .
  }

  # For Mustafa Şentop
  OPTIONAL {
    VALUES (?resource) { dbr:Mustafa_Şentop }
    ?resource dbo:birthName ?birthName .
    ?resource dbo:positionHeld ?office .
  }

  BIND(COALESCE(?resource, ""N/A"") AS ?person)
}
ORDER BY ?person
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
773,20,train,Give me the spouse of Louis the German and parent of the successor of Charles the Bald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?parent
WHERE {
  # Louis the German's spouse
  dbr:Louis_the_German dbo:spouse ?spouse .

  # Charles the Bald's successor (Louis the Stammerer)
  dbr:Charles_the_Bald dbo:succeededBy ?successor .
  
  # Parent of the successor (Louis the Stammerer)
  ?successor dbo:parent ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
874,14,train,"Give me the band of the band member of the band, that is an organisation, of Mark Read (singer).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?result <http://dbpedia.org/ontology/bandMember> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Find Mark Read
  ?markRead a dbo:Singer ;
            foaf:name ""Mark Read""@en .
  
  # Identify bands he is a member of as a singer
  ?membership dbo:member ?markRead ;
              dbo:organization ?band .

  # Ensure the band is an organization
  ?band a dbo:Band ;
        rdf:type dbo:Organization .
}
```",3,4,4,3,1,3,2,20,0,0,5,0,0.0,0
465,34,train,"Give me the successor of Renée of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successorRenée ?successorErc

{
  # Successor of Renée of France
  {
    SELECT ?successorRenée WHERE {
      dbr:Renée_of_France dbo:predecessorOf ?successorRenée .
    }
  }

  # Successor of Ercole II d'Este, Duke of Ferrara
  {
    SELECT ?successorErc WHERE {
      dbr:Ercole_II_d%27Este,_Duke_of_Ferrara dbo:parent ?parent .
      ?child dbo:parent ?parent .
      FILTER(?child = dbr:Ercole_II_d%27Este,_Duke_of_Ferrara)
      ?child dbo:succeededBy ?successorErc .
    }
  }
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
917,31,train,"Give me the child of Kekūanāoʻa and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?parent WHERE {
  # Find Kekūanāoʻa's child
  ?keku dbr:Kekūanāoʻa dbo:child ?child .
  
  # Ensure the parent of that child is royalty
  ?child dbo:parent ?parent .
  ?parent a dbo:Monarch ; 
          dbo:spouse ?mayor .

  # Filter to ensure the mayor is related to the Hawaiian Kingdom
  ?mayor dbo:officeHolder dbr:Hawaiian_Kingdom_Mayor .
}
```

This query assumes:
- `dbo:child` and `dbo:parent` are used for familial relationships.
- `dbo:Monarch` identifies royalty.
- The mayor's role is linked to the Hawaiian Kingdom.",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
978,4,train,Give me the name of Chicane (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
SELECT ?name WHERE {
  wd:Q152580 dbo:name ?name .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
212,1,train,Give me the birthplace of KODA (singer).,SELECT ?result WHERE { <http://dbpedia.org/resource/KODA_(singer)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for KODA (singer). You can find this identifier by searching for Koda Kumi on DBpedia or a similar resource.",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
791,36,train,"Give me the spouse of Taira no Tokuko and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Emperor Antoku and his father
  dbr:Emperor_Antoku dbo:father dbr:Taira_no_Kiyomori .

  # Taira no Kiyomori's spouse (Taira no Tokuko)
  dbr:Taira_no_Kiyomori dbo:spouse dbr:Taira_no_Tokuko .

  # Find the spouse of Taira no Tokuko
  dbr:Taira_no_Tokuko dbo:spouse ?spouse .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
579,10,train,"Give me the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?v0 <http://dbpedia.org/property/birthName> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person a dbo:OfficeHolder ;
          dbo:birthPlace dbr:Edinburgh ;
          dbp:name ?name .
  
  OPTIONAL { 
    ?person foaf:nick ?nick . # In case nicknames are used
  }
  
  ?person foaf:givenName ?firstName ;
          foaf:familyName ?lastName .

  BIND(CONCAT(?firstName, "" "", ?lastName) AS ?birthName)
}
ORDER BY ?name",2,3,3,2,1,3,2,20,0,0,18,0,0.0,0
933,30,train,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of Mike Elliott (saxophonist) and reference to Alan Warner.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?referenceToAlanWarner WHERE {
  # Find the band associated with Alan Warner
  ?alanWarner dbo:musicalArtist dbr:Alan_Warner .
  ?alanWarner dbo:memberOf ?band .

  # Ensure the band is a group, band, and organization
  ?band rdf:type dbo:Band ;
        rdf:type dbo:MusicalGroup ;
        rdf:type dbo:Organization .

  # Find the band associated with Mike Elliott
  ?mikeElliott dbo:musicalArtist dbr:Mike_Elliott .
  ?mikeElliott dbo:memberOf ?band .

  # Get references to Alan Warner
  ?referenceToAlanWarner dbo:wikiPageRedirects ?alanWarner .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
826,4,train,Who is the child of Johann Heinrich Appel?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?partner .
  OPTIONAL { ?person dbo:child ?child . }
  FILTER (?person = dbr:Johann_Heinrich_Appel)
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
158,2,train,Who is the reference to Adelbert Cronkhite?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?property ?hasValue
WHERE {
  VALUES ?resource { dbr:Adelbert_Cronkhite }
  ?resource ?property ?hasValue .
}
```",1,1,2,1,1,3,2,20,0,283,1,0.0,0.0,0
93,1,train,Give me the death place of John Weir Troy.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Weir_Troy> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  wd:Q123456 dbr:death_place ?deathPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for John Weir Troy. You can find this by searching for his name on DBpedia or using a SPARQL query to identify him.",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
216,18,train,Give me the player in Mario Ivanković and team of Ognjen Vukojević and player in Igor Bišćan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player WHERE {
  # Mario Ivanković
  ?coach1 rdfs:label ""Mario Ivanković""@en .
  ?team1 dbo:manager ?coach1 .
  ?player1 dbo:member ?team1 .
  BIND(?player1 AS ?player)

  UNION

  # Ognjen Vukojević
  ?coach2 rdfs:label ""Ognjen Vukojević""@en .
  ?team2 dbo:manager ?coach2 .
  ?player2 dbo:member ?team2 .
  BIND(?player2 AS ?player)

  UNION

  # Igor Bišćan
  ?player3 rdfs:label ""Igor Bišćan""@en .
  ?team3 dbo:member ?player3 .
  BIND(?player3 AS ?player)
}
```

This query does the following:
- Searches for teams managed by Mario Ivanković and retrieves players who are members of those teams.
- Searches for teams managed by Ognjen Vukojević and retrieves players who are members of those teams.
- Directly retrieves Igor Bišćan as a player.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
865,19,train,"Give me the father of AK Abdul Momen and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?nativeCountry
WHERE {
  # Find the father of AK Abdul Momen
  OPTIONAL {
    dbr:AK_Abdul_Momen dbo:father ?father .
  }
  
  # Find the native country of Ram Jaipal Singh Yadav's residence
  OPTIONAL {
    dbr:Ram_Jaipal_Singh_Yadav dbo:nativePlace ?nativePlace .
    ?nativePlace dbo:country ?nativeCountry .
  }
}
```",3,4,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
933,28,train,Give me the band of the band of Alan Warner (musician) and band of The Ramong Sound and reference to Alan Warner.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandAlanWarner ?bandTheRamones ?reference
WHERE {
  # Find Alan Warner as a musician and his associated band
  OPTIONAL {
    ?alanWarner dbr:Alan_Warner_(musician) .
    ?alanWarner dbo:memberOf ?bandAlanWarner .
  }

  # Find the band ""The Ramones""
  ?theRamones dbr:The_Ramones .
  ?theRamones dbo:member ?ramoneMember .

  # Retrieve references related to Alan Warner
  OPTIONAL {
    ?reference dbo:wikiPageRedirects ?alanWarner .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
166,12,train,"Give me the resting place of Gonzalo Queipo de Llano and entity in the territory administered, that is a country, from Madrid.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Gonzalo_Queipo_de_Llano> <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace ?countryAdministeredByMadrid
WHERE {
  # Find the resting place of Gonzalo Queipo de Llano
  OPTIONAL {
    dbr:Gonzalo_Queipo_de_Llano dbo:finalRestingPlace ?restingPlace .
  }
  
  # Find countries administered by Spain (Madrid)
  OPTIONAL {
    ?country dbo:capital dbr:Madrid ;
             a dbo:Country .
    BIND(?country AS ?countryAdministeredByMadrid)
  }
}
```",3,4,4,2,2,3,2,20,0,15,1,0.0,0.0,0
216,16,train,"Give me the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/coach> ?result . },"```sparql
SELECT ?coach WHERE {
  ?player dbr:Džemal_Berberović .
  ?player dbo:playsFor ?club .
  ?club a dbo:SoccerClub ;
        a dbo:SportsOrganization ;
        a dbo:SportsTeam .

  ?player dbo:managedBy ?coach .
  ?coach a dbo:SoccerPlayer ;
         a dbo:SportsManager ;
         a dbo:SoccerManager .
}
```",2,8,3,2,1,3,3,71,0,0,2,0,0.0,0
715,14,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office ?leader WHERE {
  # Find Carlos Franco Iribarnegaray's resource
  VALUES ?carlos { dbr:Carlos_Franco_Iribarnegaray }

  # Find offices associated with him
  ?carlos dbo:positionHeld ?office .

  # Ensure the office is both a government agency and an organization
  ?office rdf:type dbo:GovernmentAgency .
  ?office rdf:type dbo:Organization .

  # Retrieve the leader of such office
  ?office dbo:leader ?leader .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
917,28,train,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of Kekūanāoʻa and child of Kekūanāoʻa.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find Kamehameha IV's child who is royalty
  ?child dbo:spouse|dbo:child dbr:Kamehameha_IV .
  ?child a dbo:Monarch .

  # Ensure this child is also a child of Kekūanāoʻa
  ?child dbo:parent dbr:Kekūanāoʻa .

  # Find the parent of this child
  ?child dbo:parent ?parent .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
274,6,train,Give me the band member of Dizzy Gillespie and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?profession
WHERE {
  # Find Dizzy Gillespie's bands
  ?gillespieBand dbo:member dbr:Dizzy_Gillespie .
  
  # For each band, find its members
  ?gillespieBand dbo:member ?bandMember .

  # Get the profession of each band member
  OPTIONAL { ?bandMember dbo:occupation ?profession . }
}
```",2,2,3,1,2,2,3,28,0,0,8,0,0.0,0
41,5,train,"Who is the work, that is an office holder, of yes?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/author> ""yes""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?person a dbo:OfficeHolder .
  ?person dbo:work ?work .
  FILTER (str(?person) = ""dbr:Yes"") # Replace ""dbr:Yes"" with the actual DBpedia resource for ""yes""
}
```

Replace `""dbr:Yes""` with the correct DBpedia resource identifier for the office holder you are referring to.",1,2,2,1,1,2,3,28,0,0,59,0,0.0,0
773,8,train,"Give me the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Louis the German
  VALUES ?parent { dbr:Louis_the_German }

  # Find children of Louis the German
  ?parent dbo:child ?child .

  # Ensure the child is royalty, typically by checking if they have a monarch title or similar role
  OPTIONAL { ?child dbo:monarchOf ?country . }
  
  FILTER EXISTS { ?child dbo:monarchOf ?country } # Ensures at least one monarchy association exists
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
124,3,train,"Give me the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?result <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  ?reference rdfs:label ""A Battery, Royal Australian Artillery""@en .
  ?reference a dbo:MilitaryUnit ;
             dbo:country dbr:Australia .
}
```

This query does the following:
- Uses `rdfs:label` to match the exact name of the entity.
- Ensures that the entity is classified as a `dbo:MilitaryUnit`.
- Checks that it is associated with Australia using `dbo:country`.",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
791,18,train,Give me the spouse of Taira no Tokuko and father of Emperor Go-Toba and predecessor of Emperor Antoku.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
SELECT ?person WHERE {
  ?person dbo:spouse dbr:Taira_no_Tokuko .
  ?person dbo:child dbr:Emperor_Go-Toba .
  ?person dbo:predecessor dbr:Emperor_Antoku .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
892,14,train,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity WHERE {
  ?entity a dbo:Region .
  ?entity a dbo:Settlement .
  ?entity a dbo:AdministrativeRegion .
  
  ?entity dbo:country dbr:Italy .
  ?entity rdfs:label ?label .
  FILTER (lang(?label) = 'it') .

  OPTIONAL { 
    ?party dbp:country dbr:Italy ;
           dbp:name ""Democratic Party (Italy)""@en .
    ?association dbo:memberParty ?party .
    ?association dbo:administrativeRegion ?entity .
  }
}
```

### Explanation:

- **Prefixes**: We define prefixes for DBpedia ontology (`dbo`), resources (`dbr`), and properties (`dbp`).
  
- **Entity Types**: The query checks if the entity is a `Region`, `Settlement`, and `AdministrativeRegion`.

- **Country Filter**: Ensures the entity is in Italy.

- **Language Filter**: Filters labels to ensure they are in Italian.

- **Political Association**: Uses an optional pattern to associate entities with the Democratic Party in Italy. This part assumes there's a way to link political parties to administrative regions, which might require additional data or assumptions about DBpedia's structure.

This query is designed based on typical DBpedia structures and may need adjustments depending on the exact schema and available data at the time of querying.",2,6,3,2,1,3,3,71,0,0,587,0,0.0,0
124,7,train,Who is the person born on 1850-06-24?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = 1850 && MONTH(?birthDate) = 6 && DAY(?birthDate) = 24)
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
122,0,train,Give me the band member of Lyrics Born.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Lyrics_Born> . },"```sparql
SELECT ?member WHERE {
  wd:Q1234568 dbo:bandMember ?member .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia resource identifier for Lyrics Born. You can find this by searching for ""Lyrics Born"" on DBpedia or using a SPARQL endpoint to query for his resource ID.",1,1,2,1,1,2,2,9,0,0,7,0,0.0,0
158,6,train,Give me the party of Théodore Steeg and entity in France.,SELECT ?result WHERE { <http://dbpedia.org/resource/Théodore_Steeg> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?relatedEntity WHERE {
  # Théodore Steeg resource
  dbr:Théodore_Steeg dbo:politicalParty ?party .
  
  # Find related entities in France
  OPTIONAL { 
    ?party dbo:country dbr:France .
    ?party dbo:member ?relatedEntity .
    FILTER (isLiteral(?relatedEntity) = false)
  }
}
```

This query does the following:
- It selects Théodore Steeg's political party.
- It optionally finds related entities that are members of this party and located in France.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
18,11,train,"Give me the alumnus of the figure known, that is an educational institution, as Saints.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ""Saints""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  ?institution rdf:type dbo:EducationalInstitution .
  ?institution rdfs:label ""Saint Mary's University""@en .
  ?alumnus dbo:almaMater ?institution .
}
```

This query assumes that the institution is known as ""Saint Mary's University"" in English. If you have a different specific institution in mind, replace `""Saint Mary's University""` with the appropriate label.",2,3,3,2,1,2,3,28,0,0,21,0,0.0,0
433,18,train,Give me the associated musical artist of Paul Chambers and associated musical artist of Bill Evans and professional in Musician.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find associated artists of Paul Chambers
  OPTIONAL { 
    dbr:Paul_Chambers dbo:associatedBand ?band1 .
    ?band1 dbo:member ?artist .
  }
  
  # Find associated artists of Bill Evans
  OPTIONAL { 
    dbr:Bill_Evans dbo:associatedBand ?band2 .
    ?band2 dbo:member ?artist .
  }

  FILTER (?artist != dbr:Paul_Chambers && ?artist != dbr:Bill_Evans)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
417,7,train,"Who is the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?alexandrine { dbr:Alexandrine_of_Mecklenburg-Schwerin }
  
  ?alexandrine dbo:parent ?parent .
  OPTIONAL { ?parent dbo:royalty true . }
  FILTER EXISTS { ?parent dbo:royalty true . }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
326,12,train,"Give me the person decedent at the award, that is a country, of Adelbert Cronkhite and resident of Berkshire.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Berkshire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personDecedent WHERE {
  # Find Adelbert Cronkhite
  ?adelbertCronkhite a dbo:Person ;
                    foaf:name ""Adelbert Cronkhite""@en ;
                    dbo:residence dbr:Berkshire .

  # Find the award associated with a country
  ?award dbo:recipient ?adelbertCronkhite ;
         dbo:country ?country .

  # Find the person decedent at the award
  ?personDecedent dbo:deceasedAt ?award .
}
```

This query assumes:
- `foaf:name` is used for names.
- `dbo:residence` indicates where a person resides.
- `dbo:recipient` links an award to its recipient.
- `dbo:country` specifies the country associated with an award.
- `dbo:deceasedAt` connects a person to an event they were deceased at.",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
445,1,train,Give me the death place of Patrick Moore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  wd:Q1059 dbo:placeOfBirth ?birthPlace .
  wd:Q1059 dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
192,6,train,"Give me the child of Mary of Hungary, Queen of Naples and spouse of Clemence of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Clemence_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_of_Hungary,_Queen_of_Naples> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Mary of Hungary, Queen of Naples
  ?mary a dbo:Queen ;
        foaf:name ""Mary of Hungary"" ;
        dbo:spouse dbr:Clemence_of_Austria .

  # Clemence of Austria
  ?clemence a dbo:Spouse ;
            foaf:name ""Clemence of Austria"" .

  # Relationship between Mary and her child
  ?mary dbo:child ?child .
}
```

This query assumes that the individuals are correctly identified in DBpedia with their respective properties. It selects the children (`?child`) of Mary of Hungary, who is linked as a spouse to Clemence of Austria.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
273,4,train,Give me the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . }","```sparql
SELECT ?reference WHERE {
  wd:Q1111 rdfs:label ""Università degli Studi di Torino""@it .
  OPTIONAL { wd:Q1111 schema:isPartOf ?reference . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
773,24,train,Give me the parent of the successor of Charles the Bald and parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successor (GROUP_CONCAT(?parent; separator="", "") AS ?parents)
WHERE {
  # Successors of Charles the Bald
  VALUES (?charles) { 
    dbr:Charles_the_Bald 
  }
  
  ?charles dbo:succeededBy ?successor.
  
  OPTIONAL {
    ?successor dbo:parent ?parent.
  }

  UNION

  # Successors of Charles the Fat
  VALUES (?charles2) { 
    dbr:Charles_the_Fat 
  }
  
  ?charles2 dbo:succeededBy ?successor2.

  BIND(?successor2 AS ?successor)

  OPTIONAL {
    ?successor dbo:parent ?parent.
  }

}
GROUP BY ?successor
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
527,0,train,Give me the actor of The Book Tower.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Book_Tower> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film rdfs:label ""The Book Tower""@en .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,3,2,20,7,0,0,1.0,1.0,1.0
917,5,train,"Who is the spouse, that is a royalty, of Leleiohoku I?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person dbo:spouse ?spouse .
  ?person rdfs:label ""Leleiohoku I""@en .
  FILTER NOT EXISTS { ?spouse dbo:spouse ?other } # Ensures the spouse is not married to anyone else
  OPTIONAL { ?spouse dbo:title ?title . }
  FILTER (CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || 
          CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
573,26,train,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?decedent WHERE {
  ?politician a dbo:Politician ;
             dbo:nationality dbr:United_States .
  
  ?residence dbo:resident ?politician ;
             a dbo:Settlement .

  ?deathEvent dbo:place ?residence ;
              dbo:agent ?decedent ;
              a dbo:Death .
}
```",3,5,4,3,1,3,3,71,0,0,6537,0,0.0,0
773,1,train,Give me the parent of Carloman of Bavaria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentLabel WHERE {
  VALUES ?carloman { dbr:Cadalhoch_of_Bavaria }
  ?carloman dbo:father|dbo:mother ?parent .
  ?parent rdfs:label ?parentLabel .
  FILTER (lang(?parentLabel) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
933,19,train,Give me the reference to Alan Warner and band of the band of Alan Warner (musician).,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:birthName ""Alan Warner"" .
  ?person dbo:associatedBand ?band .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
192,7,train,"Give me the spouse of the spouse, that is a royalty, of Charles Martel of Anjou.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?royalSpouseOfSpouse WHERE {
  # Step 1: Identify Charles Martel of Anjou
  ?charles a dbo:Person ;
           foaf:name ""Charles Martel of Anjou""@en .
  
  # Step 2: Find his spouse(s)
  ?charles dbp:spouse ?spouse .

  # Step 3: Check if the spouse is royalty
  OPTIONAL { ?spouse dbo:title ?title . }
  FILTER (CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") ||
          CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))

  # Step 4: If the spouse is royalty, find their spouse
  ?spouse dbp:spouse ?royalSpouseOfSpouse .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
933,20,train,Give me the reference to the birth name of Alan Warner (musician) and band of Mike Elliott (saxophonist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?band
WHERE {
  # Alan Warner (musician)
  OPTIONAL {
    dbr:Alan_Warner_(musician) dbo:birthName ?birthName .
  }
  
  # Mike Elliott (saxophonist)
  OPTIONAL {
    dbr:Mike_Elliott_(saxophonist) dbo:band ?band .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
582,20,train,"Give me the reference to Japan and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father ?fatherName WHERE {
  # Find Masami Nagasawa's resource in DBpedia
  VALUES ?masamiNagasawa { dbr:Masami_Nagasawa }
  
  # Link to her father
  ?masamiNagasawa dbo:parent ?father .
  
  # Ensure the father is an athlete, soccer manager, and sports manager
  ?father dbo:occupation ?occupation .
  FILTER (
    EXISTS { ?father dbo:occupation dbr:Athlete . }
    && EXISTS { ?father dbo:occupation dbr:Soccer_Manager . }
    && EXISTS { ?father dbo:occupation dbr:Sports_Manager . }
  )
  
  # Ensure the father is from Japan
  ?father dbp:nationality dbr:Japan .
  
  # Get the father's name
  ?father rdfs:label ?fatherName .
  FILTER (LANG(?fatherName) = 'en')
}
ORDER BY ?fatherName",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
417,4,train,"Who is the parent, that is a royalty, of Count Ingolf of Rosenborg?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?count a dbo:Count ;
         dbo:child ?ingolf .
  
  ?ingolf foaf:name ""Ingolf of Rosenborg""@en .

  ?parent dbo:child ?count .
  ?parent rdf:type ?royaltyType .
  
  FILTER (
    ?royaltyType IN (dbo:Monarch, dbo:Nobleman)
  )
}
```

This query does the following:

1. Identifies `?count` as a Count who is a child of `?ingolf`.
2. Matches `?ingolf` to ""Ingolf of Rosenborg"".
3. Finds `?parent` such that they are a parent (child in reverse) of `?count`.
4. Ensures the `?parent` is of a type related to royalty, using classes like `dbo:Monarch` or `dbo:Nobleman`.",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
212,5,train,"Give me the birthplace of the professional, that is a musical artist and an artist, in Singer, rapper, CEO, Facilities and Project Manager.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Singer, rapper, CEO, Facilities and Project Manager""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  VALUES ?person { dbr:Kanye_West }
  ?person dbo:birthPlace ?birthPlace .
}
```

This query assumes that the person you are referring to is Kanye West, who fits the description provided. The `VALUES` clause specifies the resource for Kanye West in DBpedia.",2,4,3,2,1,2,2,9,0,0,1,0,0.0,0
445,36,train,Give me the entity in the award of the commander in Battle of Saint-Mihiel and entity in England.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?award ?englishEntity
WHERE {
  # Find the commander of the Battle of Saint-Mihiel
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Saint-Mihiel""@en .

  # Find awards associated with this commander
  OPTIONAL { ?commander dbo:honoraryTitle ?award . }

  # Find a notable entity related to England
  ?englishEntity dbo:country dbr:England .
}
```",4,4,5,3,2,3,3,71,0,10863,102,0.0,0.0,0
645,2,train,Give me the leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?ministry dbo:country dbr:Spain .
  ?ministry rdfs:label ""Ministry of the Army""@en .
  ?ministry dbo:minister ?leader .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
83,3,train,"Who is the person born, that is an athlete, on 1991-11-19?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ""1991-11-19""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthDate ""1991-11-19""^^xsd:date .
  ?person a dbo:Athlete .
}
```",1,2,2,1,1,2,2,9,30,0,0,1.0,1.0,1.0
98,1,train,Give me the child of Emperor Go-Shirakawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . },"```sparql
SELECT ?child WHERE {
  wd:Q123456 wdt:P40 ?child .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Emperor Go-Shirakawa. You can find this by searching for ""Emperor Go-Shirakawa"" in DBpedia or using a SPARQL query to retrieve his identifier.",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
47,16,train,"Give me the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?awardee WHERE {
  ?award dbo:givenBy dbr:Mantu_Ghosh .
  ?award dbo:recipient ?awardee .
}
```",2,3,3,2,1,3,3,71,0,0,11,0,0.0,0
5,0,train,Give me the birthplace of Gerald Regan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Regan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Gerald Regan. You can find this by searching for Gerald Regan on DBpedia or using a SPARQL endpoint to query for his unique identifier.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
445,22,train,Give me the entity in the award of George H. Cameron and entity in England.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?entityInEngland
WHERE {
  # Find awards associated with George H. Cameron
  ?person dbo:name ""George H. Cameron""@en .
  ?person dbo:awardsReceived ?award .

  # Find entities in England
  ?entityInEngland dbo:country dbr:England ;
                  a ?type .
}
```

This query does the following:
- It looks for a person named George H. Cameron and retrieves any awards they have received.
- It also searches for entities that are associated with England, capturing their type.",3,3,4,2,2,3,3,71,0,0,102,0,0.0,0
445,37,train,Give me the entity in United Kingdom and death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?deathPlace WHERE {
  ?award dbo:date ""1820-03-10""^^xsd:date .
  ?award dbo:recipient ?awardee .
  
  OPTIONAL { ?awardee dbo:birthPlace dbr:United_Kingdom . }
  
  OPTIONAL { ?awardee dbo:deathPlace ?deathPlace . }
}
```

This query does the following:
- Selects awards established on March 10, 1820.
- Retrieves the recipient of such an award (`?awardee`).
- Checks if the awardee has a birthplace in the United Kingdom (optional to ensure some connection).
- Retrieves the death place of the awardee.",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
124,2,train,Give me the military force of Battle of Atbara.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . },"```sparql
SELECT ?militaryForce WHERE {
  wd:Q123456 wdt:P31/wdt:P279* wd:Q11424; # Replace Q123456 with the actual DBpedia ID of Battle of Atbara
  wdt:P1682 ?militaryForce.
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
978,2,train,Give me the award of Michel Claparède.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES ?person { dbr:Micheel_Claparède }
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
102,4,train,"Give me the resident, that is an athlete, of Dewsbury.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?athlete WHERE {
  ?athlete a dbo:Athlete .
  ?athlete dbo:residence dbr:Dewsbury .
}
```

This query does the following:
- Uses `dbo:Athlete` to identify individuals with an athlete occupation.
- Utilizes `dbo:residence` to find those whose residence is Dewsbury.",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
273,5,train,Give me the alumnus of University of Turin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . },"```sparql
SELECT ?alumnus WHERE {
  ?alumnus dbo:almaMater dbr:University_of_Turin .
}
```",1,1,2,1,1,3,2,20,141,0,0,1.0,1.0,1.0
445,39,train,Give me the death place of Patrick Moore and entity in the award of the commander in Battle of Saint-Mihiel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query to get the death place of Patrick Moore
SELECT ?deathPlace WHERE {
  ?person dbo:birthName ""Patrick Moore""@en .
  ?person dbo:deathPlace ?deathPlace .
}
```

```sparql
# Query to find an entity associated with a commander's award in the Battle of Saint-Mihiel
SELECT DISTINCT ?entity WHERE {
  ?battle dbo:name ""Battle of Saint-Mihiel"" .
  ?award dbo:recipient ?person .
  ?person dbo:rank ?rank .
  FILTER EXISTS { ?rank rdfs:label ""Commander""@en }
  ?award dbo:event ?battle .
  ?award dbo:entity ?entity .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
965,5,train,"Give me the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthDate ""1854-05-24""^^xsd:date .
  ?person rdf:type dbo:Politician .
}
```",1,2,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
715,7,train,Who is the reference to Carlos Franco Iribarnegaray?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name ?birthDate ?occupation WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Carlos Franco Iribarnegaray""@en .
  OPTIONAL { ?person foaf:name ?name . }
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
  OPTIONAL { ?person dbo:occupation ?occupation . }
}
```",1,1,2,1,1,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
582,28,train,Give me the player in Kazuaki Nagasawa and reference to the residence of Hirotaka Sugawara and figure known as --10-19.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?residence ?figure
WHERE {
  # Find information about Kazuaki Nagasawa
  ?player a dbo:FootballPlayer ;
          foaf:name ""Kazuaki Nagasawa""@en .
  
  # Find Hirotaka Sugawara's residence
  ?sugawara a dbo:Person ;
            foaf:name ""Hirotaka Sugawara""@en ;
            dbo:residence ?residence .

  # Assuming --10-19 is an identifier for a specific event or entity
  ?figure dbr:Event--10-19 .
}
```

This query assumes:
- Kazuaki Nagasawa and Hirotaka Sugawara are identifiable as individuals in DBpedia.
- `--10-19` refers to a specific resource, possibly an event.

Please adjust the identifiers and predicates based on actual data available in DBpedia. If `--10-19` is not directly usable, you might need additional context or mapping.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
987,37,train,"Give me the entity in Montenegro and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor ?birthPlaceLabel WHERE {
  # Step 1: Find films featuring Emir Hadžihafizbegović
  ?film dbo:starring dbr:Emir_Hadžihafizbegović .
  
  # Step 2: Check if the film is based on a show or vice versa (optional, as DBpedia might not have direct links)
  OPTIONAL { ?film dbo:basedOn ?show . }
  
  # Step 3: Find actors in these films/shows
  ?film dbo:starring ?actor .
  
  # Step 4: Get the birthplace of these actors
  ?actor dbp:birthPlace ?birthPlace .
  
  # Filter for birthplaces in Montenegro
  ?birthPlace dbr:Montenegro .
  
  # Get labels for readability
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
47,36,train,"Give me the office of the awardee of the entity, that is an award, in India and office of Suvendu Adhikari.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?awardee ?officeOfAwardee ?suvenduOffice
WHERE {
  # Find awards given in India and their awardees
  ?award dbo:country dbr:India .
  ?award dbo:recipient ?awardee .

  OPTIONAL {
    ?awardee dbo:holdsPoliticalOffice ?officeOfAwardee .
  }

  # Find the office held by Suvendu Adhikari
  dbr:Suvendu_Adhikari dbo:holdsPoliticalOffice ?suvenduOffice .
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
955,9,train,"Give me the writer of the work, that is a work and an album and a musical work, of Matt Freeman.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v0 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work dbo:composer dbr:Matt_Freeman .
  ?work a ?type1 .
  ?work a ?type2 .
  FILTER (?type1 IN (dbo:Album, dbo:MusicalWork) && ?type2 IN (dbo:Album, dbo:MusicalWork))
}
```",2,5,3,2,1,3,2,20,0,0,31,0,0.0,0
495,2,train,Give me the parent of Princess Catherine of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?person { dbr:Catherine_of_Württemberg }
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
274,11,train,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?associatedArtist WHERE {
  # Find the actor in ""Imagine the Sound""
  ?film dbo:title ""Imagine the Sound"" .
  ?film dbo:starring ?actor .

  # Ensure the actor is also a musical artist
  ?actor dbo:occupation dbr:Musical_artist .

  # Retrieve associated musical artists
  ?actor dbo:associatedMusicalArtist ?associatedArtist .
}
```

This query does the following:
- It identifies films titled ""Imagine the Sound.""
- It finds actors starring in this film.
- It checks if these actors have an occupation as a musical artist.
- Finally, it retrieves any associated musical artists linked to these individuals.",2,3,3,2,1,2,3,28,0,0,36,0,0.0,0
839,24,train,Give me the band of Matthias Röhr and band of the member of Böhse Onkelz.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band
WHERE {
  # Find bands associated with Matthias Röhr
  { 
    ?person rdfs:label ""Matthias Röhr""@en .
    ?person dbo:memberOf ?band .
  }
  
  UNION
  
  # Find members of Böhse Onkelz and their bands
  {
    ?onkelzMember dbo:memberOf <http://dbpedia.org/resource/Böhse_Onkelz> .
    ?onkelzMember dbo:memberOf ?band .
    
    OPTIONAL { 
      ?person rdfs:label ?onkelzMemberLabel .
      FILTER (lang(?onkelzMemberLabel) = ""en"")
    }
  }
}
ORDER BY ?person
LIMIT 100",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
216,11,train,Give me the player in the coach of Croatia national under-21 football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v0 . ?v0 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
  ?team rdf:type dbo:NationalFootballTeam .
  ?team dbp:country dbr:Croatia .
  ?team dbp:category ""Under-21"" .
  ?team dbo:coach ?coach .
  ?coach dbo:employee ?player .
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
892,23,train,Give me the entity in the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession WHERE {
  ?person a dbo:Person ;
          foaf:name ""Enrico Crolla""@en .
  OPTIONAL { ?person dbo:occupation ?profession . }
}
```",3,3,4,3,1,3,3,71,0,0,13092,0,0.0,0
456,39,train,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band2 WHERE {
  # Find Alan Doyle's band
  ?alanDoyleBand dbo:member dbr:Alan_Doyle .
  
  # Find a band that has Alan Doyle's band as its ""band of""
  ?band2 dbo:bandOf ?alanDoyleBand .

  # Ensure the second band is a musical artist and professional in music
  ?band2 rdf:type dbo:MusicalArtist .
  OPTIONAL { ?band2 dbo:genre ?genre . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
865,4,train,"Give me the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX schema: <http://schema.org/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ram Jaipal Singh Yadav""@en .
  
  ?person dbo:residence ?residence .

  FILTER EXISTS { 
    ?residence rdf:type schema:Country .
  }
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
456,16,train,"Give me the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?person dbo:alias ""Lamont Cranston""@en .
  ?person dbo:fictionalCharacter ?alterEgo .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
645,17,train,"Give me the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person dbo:nationality dbr:Spain ;
          dbo:birthPlace dbr:Restoration_(Spain) .
  
  ?office dbo:head ?person ;
          a dbo:GovernmentAgency, dbo:Organization .

}
```

This query does the following:
- It selects individuals (`?person`) who have Spain as their nationality and were born in Restoration (Spain).
- It then finds offices (`?office`) that are both a government agency and an organization, where this person is listed as the head.",2,4,3,2,1,3,3,71,0,0,15,0,0.0,0
129,5,train,Give me the person born as Tahj Malik Chandler.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName WHERE {
  ?person dbo:birthName ""Tahj Malik Chandler"" .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
274,16,train,"Give me the band member of Dizzy Gillespie and associated musical artist of the actor, that is a musical artist, of Imagine the Sound.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?musicalArtist WHERE {
  # Find Dizzy Gillespie's band members
  ?gillespieBand a dbo:Band ;
                 dbo:leadMusician dbr:Dizzy_Gillespie ;
                 dbo:musicians ?bandMember .
  
  # Find the cast of ""Imagine the Sound""
  ?movie dbo:title ""Imagine the Sound"" ;
         dbo:actor ?actor .

  # Check if any actor is a musical artist
  ?actor dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""musician"") || CONTAINS(LCASE(?occupation), ""singer""))

  # Link the musical artist to Dizzy Gillespie's band members
  ?musicalArtist rdfs:label ?actorLabel ;
                dbo:associatedBandMember ?bandMember .

  FILTER(langMatches(lang(?actorLabel), ""EN""))
}
```",3,4,4,2,2,2,3,28,0,0,4,0,0.0,0
791,37,train,"Give me the father of Emperor Go-Toba and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?father WHERE {
  ?goToba dbo:parent ?father .
  ?goToba rdfs:label ""Emperor Go-Toba""@en .
  FILTER NOT EXISTS { ?goToba dbo:child ?x . }
}
```

This query selects the father of Emperor Go-Toba, which is what we determined to be Emperor Tsuchimikado.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
47,25,train,Give me the office of the awardee of Padma Vibhushan and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?office
WHERE {
  # Find individuals who have received the Padma Vibhushan award
  ?person dbo:award dbr:Padma_Vibhushan .
  
  OPTIONAL {
    # Get offices held by these awardees
    ?person dbo:positionHeld ?office .
  }
  
  UNION
  
  # Specifically find Bidesh Ranjan Bose and his office
  {
    ?bose a dbo:Person ;
          rdfs:label ""Bidesh Ranjan Bose""@en .
    
    OPTIONAL {
      ?bose dbo:positionHeld ?office .
    }
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
888,11,train,"Give me the commander in the force, that is a societal event and an event, of Serhiy Kotenko and awardee of Hero of Ukraine.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ""Hero of Ukraine""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find Serhiy Kotenko
  ?serhiyKotenko a dbo:MilitaryPerson ;
                 foaf:name ""Serhiy Kotenko""@en .

  # Identify his commander in the force
  ?serhiyKotenko dbo:commandedBy ?commander .

  # Ensure the commander is associated with both a societal event and an event
  ?commander dbo:associatedWith ?societalEvent .
  ?commander dbo:associatedWith ?event .
  ?societalEvent a dbo:SocietalEvent .
  ?event a dbo:Event .

  # Check if the commander has been awarded Hero of Ukraine
  ?commander dbo:award ""Hero of Ukraine""@en .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
573,32,train,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?phelanResidenceDecedent ?bakerAdminDecedent
WHERE {
  # Find William J. Phelan's residence
  dbr:William_J._Phelan dbo:residencePlace ?phelanSettlement .
  
  # Find the person decedent at that settlement
  ?phelanSettlement dbo:deceasedAt ?phelanResidenceDecedent .

  # Find Charlie Baker's administration region
  dbr:Charlie_Baker dbo:governmentRole ?bakerAdminRole .
  ?bakerAdminRole dbo:administrativeRegion ?bakerRegion .

  # Find the person decedent at that region
  ?bakerRegion dbo:deceasedAt ?bakerAdminDecedent .
}
```",4,6,5,2,2,3,3,71,0,0,4,0,0.0,0
645,20,train,"Give me the commander in Battle of Jarama and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Identify the Battle of Jarama as an event, military conflict, and societal event
  dbr:Battle_of_Jarama a dbo:MilitaryConflict ;
                       a dbo:SocietalEvent ;
                       dbo:commander ?commander .

  # Find the military force associated with Francisco Largo Caballero
  ?militaryForce dbo:commander dbr:Francisco_Largo_Caballero .
  
  # Ensure the commander is related to the Battle of Jarama
  ?commander dbo:participatedInBattle dbr:Battle_of_Jarama .

}
```",3,6,4,2,2,3,3,71,0,0,6,0,0.0,0
773,4,train,Give me the father of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  wd:Q1117 wdt:P22 ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
98,0,train,Give me the region of Philippine Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?timeZone a dbo:TimeZone ;
            rdfs:label ""Philippine Standard Time""@en .
  ?timeZone dbo:country ?country .
  ?country dbo:administrativeRegion ?region .
}
```

This query does the following:
- It searches for entities of type `dbo:TimeZone` with the label ""Philippine Standard Time"".
- It then finds countries associated with this time zone.
- Finally, it retrieves administrative regions (or states) within those countries.",1,1,2,1,1,2,3,28,0,0,1874,0,0.0,0
865,30,train,Give me the father of AK Abdul Momen and native of British Raj and father of the child of Abu Ahmad Abdul Hafiz.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Find AK Abdul Momen's father
  ?momen a dbo:Person ;
         foaf:name ""AK Abdul Momen""@en .
  
  ?momen dbo:parent ?father .

  # Ensure the father was a native of British Raj
  ?father dbo:nationality dbr:British_Raj .

  # Find Abu Ahmad Abdul Hafiz's child and their father
  ?hafiz a dbo:Person ;
         foaf:name ""Abu Ahmad Abdul Hafiz""@en .
  
  ?child dbo:parent ?hafiz ;
         dbo:parent ?father .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
102,1,train,Give me the native of Dewsbury.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Dewsbury> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?language WHERE {
  dbr:Dewsbury dbo:nativeLanguage ?language .
}
```",1,1,2,1,1,3,2,20,0,0,100,0,0.0,0
874,4,train,"Give me the band, that is an organisation, of Mark Read (singer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Singer ;
          foaf:name ""Mark Read"" .
  ?person dbo:memberOf ?band .
  FILTER (isLiteral(?band) = false)
}
```

This query does the following:
- It looks for an entity (`?person`) that is of type `dbo:Singer` and has a name ""Mark Read"".
- It then checks if this person is a member of any band (`?band`).
- The filter ensures that the result is not a literal but an actual resource (i.e., an organization or band).",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
445,23,train,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v0 . ?v2 <http://dbpedia.org/property/residence> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  ?athlete a dbo:Athlete ;
           dbo:nationality dbr:United_Kingdom ;
           dbo:residence ?residence .
  
  OPTIONAL { ?residence dbo:country ?country . }
}",3,5,4,3,1,3,3,71,5,5,3565,0.5,0.0014005602240896359,0.002793296089385475
826,0,train,Give me the spouse of Anna Magdalena Appel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Anna Magdalena Appel. You can find this by searching for her on DBpedia or using a SPARQL query to identify her unique identifier.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
382,6,train,Give me the landmark at elevation of 100 and birthplace of Björn Joppe.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Björn_Joppe> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""100""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?birthplace WHERE {
  # Find landmarks with an elevation of 100 meters
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""100""^^xsd:integer)

  # Find the birthplace of Björn Joppe
  dbr:Björn_Joppe dbo:birthPlace ?birthplace .
}
```

This query does the following:
- It selects landmarks that are classified as a `Lighthouse` (or any other relevant category) with an elevation of exactly 100 meters.
- It retrieves the birthplace of Björn Joppe.

Note: The exact class for landmarks might need adjustment based on DBpedia's ontology, and you may need to refine the query if more specific details are required or available in DBpedia.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
507,27,train,Give me the professional in the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?professional WHERE {
  ?person dbo:birthday ""1966-02-18""^^xsd:date .
  ?person dbo:occupation ?profession .

  ?otherPerson dbo:occupation ?profession .
  ?otherPerson foaf:name ?professional .
  
  FILTER(?person != ?otherPerson)
}
```",3,3,4,3,1,3,3,71,0,0,35603,0,0.0,0
933,34,train,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and band of The Ramong Sound.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band 
WHERE {
  # Find The Ramones
  dbpedia:Ramones a dbo:Band ;
                  dbo:associatedMusicalArtist ?artist .

  # Ensure the artist is both an artist and musical artist
  ?artist a dbo:Musician ;
          dbo:associatedBand ?sub_artist_band .
  
  # Find the band associated with this sub-artist
  ?sub_artist_band a dbo:Band ;
                   dbo:associatedMusicalArtist ?final_artist .

  FILTER(?final_artist != dbpedia:Ramones) # Ensure it's not The Ramones again

  BIND(?sub_artist_band AS ?band)
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
773,31,train,Give me the parent of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Find Carloman of Bavaria's parent
  ?carloman a dbo:Person ;
            dbp:father ?parent .

  FILTER (str(?carloman) = ""Carloman_of_Bavaria"") .

  # Step 2: Find the father of that parent (grandfather)
  ?parent dbp:father ?grandfather .

  # Step 3: Find the spouse of the grandfather
  ?grandfather dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
216,27,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?team WHERE {
  # Find Pavel Vezhinov's death date
  VALUES ?vezhinovDeathDate { 
    SELECT ?deathDate WHERE { 
      dbr:Pavel_Vezhinov dbo:dateOfDeath ?deathDate .
    }
  }

  # Find individuals born on the same day as Pavel Vezhinov's death
  ?person dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = YEAR(?vezhinovDeathDate) && 
          MONTH(?birthDate) = MONTH(?vezhinovDeathDate) &&
          DAY(?birthDate) = DAY(?vezhinovDeathDate))

  # Ensure the person is a sports manager and a soccer player
  ?person dbo:occupation dbr:Sports_manager .
  ?person dbo:occupation dbr:Soccer_player .

  # Retrieve team information for these individuals
  OPTIONAL { 
    ?person dbp:team ?team .
  }
}
ORDER BY ?person",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
888,13,train,"Give me the commander in the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the military force involved in the War in Donbas
  ?militaryForce dbo:partOfEvent dbr:War_in_Donbass_(2014–2022) .
  
  # Identify the commander of this military force
  ?militaryForce dbo:commander ?commander .

  # Ensure the commander is a person
  ?commander rdf:type dbo:Person .
}
```",3,5,4,3,1,3,2,20,0,0,110,0,0.0,0
582,15,train,"Give me the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v1 <http://dbpedia.org/property/residence> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?residence WHERE {
  ?person rdf:type dbo:Scientist .
  ?person foaf:name ""Hirotaka Sugawara""@en .
  ?person dbo:residence ?residence .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
170,16,train,Give me the domain of the profession of John Scholey and entity in Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/leaderTitle> ?v2 . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionDomain ?russianEntity
WHERE {
  # Find John Scholey and his profession
  ?johnScholey a dbo:Person ;
               foaf:name ""John Scholey""@en .
  
  ?johnScholey dbo:occupation ?profession .

  # Get the domain of the profession
  ?profession rdfs:domain ?professionDomain .

  # Find an entity related to Russia
  ?russianEntity dbo:country dbr:Russia .
}
```",3,3,4,2,2,2,3,28,0,0,99,0,0.0,0
987,7,train,"Give me the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?event ?timeZone WHERE {
  ?event a dbo:Sport ;
         dbo:location dbr:Canicosa_de_la_Sierra .
  
  OPTIONAL { 
    ?event dbo:timezone ?timeZone .
  }
}
```

This query does the following:
- It selects events that are of type `dbo:Sport` and located in ""Canicosa de la Sierra"".
- It attempts to retrieve the time zone associated with these sports events using an optional pattern, which allows for cases where the time zone might not be explicitly defined.",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
507,38,train,"Give me the professional in the profession of Guy Ferland and director of the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/director> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director WHERE {
  # Find Guy Ferland's profession
  dbr:Guy_Ferland dbo:profession ?profession .
  
  # Find movies directed by this person that involve Beryl Reid
  ?movie dbo:director ?director ;
         a dbo:Film ;
         dbo:starring dbr:Beryl_Reid .

  # Ensure the movie is also considered a work
  ?movie a dbo:CreativeWork .

  # Match the profession with director
  ?director dbo:profession ?profession .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
129,16,train,Give me the associated musical artist of the person born as Tahj Malik Chandler and professional in .,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person dbo:name ""The Game"" ;
          dbo:birthName ""Tahj Malik Chandler"" .
  ?person dbo:associatedBandOrMusicalArtist ?artist .
}
```",3,3,4,2,2,2,3,28,0,0,7,0,0.0,0
888,1,train,Give me the awardee of Hero of Ukraine.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Hero of Ukraine""@en . }","```sparql
SELECT ?person WHERE {
  ?award dcterms:isPartOf <http://dbpedia.org/resource/Category:Hero_of_Ukraine> .
  ?award dbo:recipient ?person .
}
```",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
582,32,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to the residence of Hirotaka Sugawara.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?residence WHERE {
  # Find Masami Nagasawa's father who is an athlete, soccer manager, and sports manager
  ?nagasawa a dbo:Person ;
            foaf:name ""Masami Nagasawa""@en .
  ?nagasawa dbo:parent ?father .
  
  ?father a dbo:Athlete ;
          dbo:sportTeamRole dbr:Soccer_Manager ;
          dbo:sportManager dbr:Sports_Manager .

  # Find Hirotaka Sugawara's residence
  ?sugawara a dbo:Person ;
            foaf:name ""Hirotaka Sugawara""@en .
  ?sugawara dbo:residenceLocation ?residence .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
773,29,train,Give me the parent of the successor of Charles the Bald and parent of Charles the Fat and spouse of Louis the German.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfSuccessor ?parentOfCharlesTheFat ?spouseOfLouisTheGerman
WHERE {
  # Charles the Bald and his successor
  dbr:Charles_the_Bald dbo:successor ?successor .
  
  # Parent of the successor
  ?successor dbo:parent ?parentOfSuccessor .

  # Charles the Fat and his parent
  dbr:Charles_the_Fat dbo:parent ?parentOfCharlesTheFat .

  # Louis the German and his spouse
  dbr:Louis_the_German dbo:spouse ?spouseOfLouisTheGerman .
}
```",4,4,5,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
826,23,train,Give me the spouse of the child of the father of Anna Magdalena Appel.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Anna Magdalena Appel's father
  dbp:Anna_Magdalena_Bach dbo:father ?father .

  # Step 2: Find the children of this father
  ?child dbo:parent ?father .
  
  # Step 3: Determine the spouses of these children
  ?child dbo:spouse ?spouse .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
465,14,train,"Give me the successor of the child, that is a royalty, of Anne of Brittany.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Anne of Brittany
  dbr:Anne_of_Brittany dbo:child ?child .
  
  # The child must be royalty
  ?child a dbo:Monarch ;
         dbo:spouse ?spouse .

  # Find the successor of that child
  ?child dbo:successor ?successor .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
573,24,train,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and parent of John Quincy Adams.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # William J. Phelan's residence
  ?residence dbo:resident dbr:William_J._Phelan .
  
  # Decedent at the residence
  ?decedent dbo:placeOfDeath ?residence .

  # Parent of John Quincy Adams
  ?parent dbo:child dbr:John_Quincy_Adams .
  
  # The person who is both a decedent and a parent
  FILTER (?decedent = ?parent)
  
  BIND(?decedent AS ?person)
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
933,4,train,Who is the band of Alan Warner (musician)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:instrument ?instrument .
  ?person foaf:name ""Alan Warner""@en .
  OPTIONAL { ?person dbo:member ?band . }
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
826,1,train,"Give me the successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  ?person dbo:predecessor dbr:Louis_II,_Grand_Duke_of_Hesse .
  ?person dbo:title ""Grand Duke of Hesse""@en .
  ?person dbo:succeededBy ?successor .
}
```

This query searches for a person who succeeded Louis II, Grand Duke of Hesse by looking at the `predecessor` property and then finding their successor using the `succeededBy` property.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
166,7,train,Give me the resting place of the military force of Spanish Civil War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?restingPlace WHERE {
  # Find entities related to the Spanish Civil War military forces
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:partOf dbr:Spanish_Civil_War .
  
  OPTIONAL {
    # Look for resting places associated with these military units
    ?militaryForce dbo:hasBurialPlace ?restingPlace .
  }
}
```",2,2,3,2,1,3,2,20,0,0,36,0,0.0,0
874,7,train,"Give me the band of the writer, that is an artist and a musical artist, of Mezzanine (album).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?album dbo:artist dbr:Massive_Attack .
  ?album rdfs:label ""Mezzanine""@en .
  ?band dbo:member dbr:Massive_Attack .
}
```",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
83,3,train,"Give me the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983).","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthplace WHERE {
  # Find Sandro the footballer born in October 1983
  ?sandro a dbo:FootballPlayer ;
          dbp:birthday ""1983-10""^^xsd:gYearMonth ;
          dbp:birthPlace ?birthplace .

  # Ensure birthplace is a town in Brazil
  ?birthplace a dbo:Settlement ;
              dbo:country dbr:Brazil ;
              rdfs:label ?townLabel .
  
  FILTER (lang(?townLabel) = 'en' && regex(str(?townLabel), ""Town""))

  # Check if the town has an associated soccer club
  OPTIONAL {
    ?club dbo:foundedIn ?birthplace ;
          a dbo:SoccerClub .
  }
}
ORDER BY ?birthplace",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
445,30,train,Give me the entity in England and death place of Patrick Moore and entity in the award of George H. Cameron.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?awardEntity
WHERE {
  # Patrick Moore's place of death in England
  OPTIONAL {
    dbr:Patrick_Moore dbo:placeOfBirth ?birthPlace .
    FILTER (CONTAINS(LCASE(STR(?birthPlace)), ""england""))
    dbr:Patrick_Moore dbo:deathPlace ?deathPlace .
  }

  # George H. Cameron's award entity
  OPTIONAL {
    dbr:George_H_Cameron dbo:award ?award .
    ?award dbo:recipient dbr:George_H_Cameron .
    ?award dbo:name ?awardEntity .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
216,36,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in Igor Bišćan.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Find Pavel Vezhinov's death date
  dbr:Pavel_Vezhinov dbo:dateOfDeath ?deathDate .

  # Identify a person who is a sports manager, soccer manager, and soccer player
  ?person a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerCoach .

  # Find the team associated with this person at the time of Pavel Vezhinov's death
  ?team dbp:manager ?person ;
        dbp:player ?person .
  
  # Ensure this person was also a player in Igor Bišćan's team
  ?igorsTeam dbp:player ?person .
  dbr:Igor_Bišćan dbp:playedFor ?igorsTeam .

  # Filter by the time constraint
  FILTER (?deathDate <= ?teamStartDate && ?deathDate >= ?teamEndDate)
}",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
433,1,train,Give me the associated musical artist of Bill Evans.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  wd:Q1234 wdt:P106 wd:Q33999 . # Bill Evans is a musician (P106)
  wd:Q1234 wdt:P175 ?artist .    # Associated musical artist (P175)
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
433,27,train,Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?profession WHERE {
  # Find the album resource
  VALUES ?album { dbr:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall }

  # Get the writers of the album
  ?album dbo:composer ?writer .

  # Get the profession of the writer
  ?writer dbo:occupation ?profession .
}
```",3,3,4,3,1,3,3,71,0,0,51837,0,0.0,0
976,5,train,"Give me the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?reference
WHERE {
  ?entity rdfs:label ""Millet İttifakı""@tr .
  ?entity dbo:type ?type .
  FILTER (
    EXISTS { ?type rdfs:subClassOf* dbo:PoliticalParty . }
    && EXISTS { ?type rdfs:subClassOf* dbo:Organization . }
  )
  OPTIONAL {
    ?reference dbp:reference ?entity .
    ?reference rdfs:label ?label .
    FILTER (lang(?label) = ""tr"")
  }
}
```

This query does the following:
- It selects entities labeled as ""Millet İttifakı"" in Turkish.
- It checks if these entities are of type `PoliticalParty` and `Organization`.
- It optionally retrieves references related to this entity, ensuring they have labels in Turkish.",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
507,2,train,"Give me the professional in Film director, television director.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:occupation dbr:Film_director .
  ?person dbo:occupation dbr:Television_director .
}
```",1,1,2,1,1,3,3,71,4,156,34,0.025,0.10526315789473684,0.04040404040404041
955,3,train,Give me the writer of Don't Forget Your Roots (album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  wd:Q1234568 dbo:album ""Don't Forget Your Roots"" .
  wd:Q1234568 dbo:composer ?writer .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia resource identifier for the album ""Don't Forget Your Roots"". You can find this by searching DBpedia or using a SPARQL endpoint to query for the correct URI.",1,1,2,1,1,3,2,20,0,0,19,0,0.0,0
329,5,train,"Give me the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Robert Bates (loyalist)""@en .
  ?person dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?birthPlace rdf:type ?type1 . }
  FILTER EXISTS { ?birthPlace rdf:type ?type2 . }
  VALUES (?type1 ?type2) {
    (<http://dbpedia.org/ontology/Organisation> <http://www.mediawiki.org/xml/export-0.10/propns#instanceOf>)
    (<http://dbpedia.org/class/yago/YAGO3Citadel4325> <http://dbpedia.org/ontology/Country>)
  }
}
```

This query does the following:
- It looks for a person with the birth name ""Robert Bates (loyalist)"".
- It retrieves the `birthPlace` of this person.
- It checks if the `birthPlace` is both an organization and a country by using RDF types.",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
417,33,train,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and spouse of Princess Caroline-Mathilde of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?leader dbo:positionTitle ""Governor of Greenland""@en .
  ?leader dbo:country dbr:Greenland .
  
  ?father dbo:spouse ?leader .
  
  ?child dbo:parent ?father ;
         a dbo:Monarch ;
         dbp:spouse dbr:Princess_Caroline_Mathilde_of_Denmark .

}
```

This query assumes:
- The leader of the Colony of Greenland is identified by their position title and country.
- The father's relationship to the leader is through marriage (spouse).
- The child is a monarch and married to Princess Caroline-Mathilde.

Please note that historical data might not be fully available or structured in DBpedia, so adjustments may be necessary based on actual data availability.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
582,29,train,"Give me the reference to Japan and figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?fatherName WHERE {
  # Identify Masami Nagasawa and her father
  ?masami a dbo:Person ;
          foaf:name ""Masami Nagasawa""@en ;
          dbo:parent ?father .

  # Filter the father by his roles
  ?father a dbo:Person ;
          foaf:name ?fatherName ;
          (dbo:sportCareer|dbo:occupation) ?role .
  
  FILTER (
    EXISTS { ?role rdf:type dbo:Athlete . } ||
    EXISTS { ?role rdf:type dbo:SoccerManager . } ||
    EXISTS { ?role rdf:type dbo:SportsManager . }
  )

  # Ensure the father is associated with Japan
  OPTIONAL {
    ?father dbo:nationality dbr:Japan .
  }

  FILTER (BOUND(?father))
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
573,33,train,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?decedent WHERE {
  ?politician a dbo:Politician ;
             dbo:nationality dbr:United_States ;
             dbo:residence ?settlement .
  
  FILTER (regex(str(?settlement), ""Massachusetts"", ""i""))

  ?settlement a dbo:Settlement .

  ?deathEvent dbo:place ?settlement ;
              dbo:agent ?decedent .
}
```",4,6,5,3,2,3,3,71,0,0,400,0,0.0,0
888,5,train,Give me the award of Oleksandr Syrskyi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person dbo:birthName ""Oleksandr Syrskyi""@en.
  OPTIONAL { ?person dbo:honoraryTitle ?award. }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
773,17,train,"Give me the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Carloman of Bavaria
  dbr:Carloman_of_Bavaria a dbo:Person ;
    dbo:spouse ?spouse . 

  # Ensure he is an office holder and royalty
  OPTIONAL { dbr:Carloman_of_Bavaria dbo:officeHolderOf ?office . }
  OPTIONAL { dbr:Carloman_of_Bavaria dbo:nationality ?nationality . }

  # Find his children who are royalty
  ?child dbo:parent dbr:Carloman_of_Bavaria ;
    a dbo:Person ;
    dbo:royalty ?isRoyalty .
  
  FILTER(?isRoyalty = true)
}
```

This query does the following:
- Identifies Carloman of Bavaria and checks his roles.
- Finds children linked to him as parents.
- Filters these children to ensure they are royalty.",2,5,3,2,1,3,3,71,0,0,3,0,0.0,0
47,8,train,Give me the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient ?year WHERE {
  ?award a dbo:Award ;
        dbo:name ""Padma Vibhushan"" .
  ?award dbo:recipient ?recipient ;
         dbo:year ?year .
}
```

This query does the following:
- It uses the `dbo:Award` class to identify entities that are awards.
- It filters these entities by their name, specifically looking for ""Padma Vibhushan"".
- It retrieves the recipients (`?recipient`) and the years (`?year`) in which they received the award.",1,1,2,1,1,3,3,71,0,0,86,0,0.0,0
527,14,train,"Give me the author of the work, that is a work and a book, of the host of Hyperland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  # Step 1: Identify the host of Hyperland
  dbr:Hyperland dbo:hostedBy ?host .

  # Step 2: Find works associated with the host that are both a work and a book
  ?work dbo:creator ?host ;
        a dbo:Book ;
        a dbo:CreativeWork .

  # Step 3: Get the author of the work
  ?work dbo:author ?author .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
527,3,train,"Give me the movie, that is a work and English and a television show, with Bernard Bresslaw.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?movie a dbo:Film ;
         dbo:language ""English"" ;
         dbo:starring dbr:Bernard_Bresslaw .
  OPTIONAL { ?movie dbo:workType ?type . FILTER(?type IN (dbr:TelevisionShow, dbr:Work)) }
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
917,30,train,Give me the child of the father of Kamehameha IV and parent of Albert Kamehameha and child of Kekūanāoʻa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Kamehameha IV and his father
  dbr:Kamehameha_IV dbo:father ?father .
  
  # Father is also the parent of Albert Kamehameha
  ?father dbo:child dbr:Albert_Kamehameha .

  # The individual we are looking for is a child of Kekūanāoʻa
  ?individual dbo:parent dbr:Kekūanāoʻa .
  
  # The individual must be the same as the father found above
  FILTER (?father = ?individual)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
443,2,train,Give me the birthplace of Carl Larsson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q1111 dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
791,38,train,"Give me the father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of Emperor Takakura.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Takakura_of_Japan dbo:child ?royalChild .
  
  ?royalChild dbo:predecessor ?predecessor .

  ?predecessor dbo:father ?father .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
47,34,train,"Give me the office of Ajoy Mukherjee and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeAjoyMukherjee ?administrationCommander WHERE {
  # Find Ajoy Mukherjee's office
  dbr:Ajoy_Mukherjee dbo:positionHeld ?officeAjoyMukherjee .
  
  # Find the administration related to Operation Green Hunt
  ?operation dbo:relatedToOperation ""Green Hunt"" .
  ?operation dbo:partOfAdministration ?administrationCommander .
}
```

This query attempts to:

- Retrieve Ajoy Mukherjee's political office.
- Identify any administration linked to an operation named ""Green Hunt.""

Note: The exact properties and resources might need adjustment based on the actual DBpedia schema and available data.",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
130,9,train,"Give me the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/ontology/director> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?film WHERE {
  ?person dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Madison,_Alabama ;
          dbo:occupation dbr:Coach ;
          dbo:occupation dbr:College_coach .
  
  ?film dbo:starring ?person ;
        dbo:genre dbr:Soccer_film ;
        dbo:subject dbr:Soccer_club ;
        dbo:subject dbr:Organization .

}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
839,10,train,Give me the band of Matthias Röhr and band of Kevin Russell (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?matthiasBand ?kevinBand WHERE {
  # Find bands associated with Matthias Röhr
  ?person a dbo:Musician ;
          foaf:name ""Matthias Röhr""@en .
  ?person dbo:musicalArtist ?matthiasBand .

  # Find bands associated with Kevin Russell (musician)
  ?kevinPerson a dbo:Musician ;
               foaf:name ""Kevin Russell""@en .
  ?kevinPerson dbo:musicalArtist ?kevinBand .
}
```

This query uses the `dbo:Musician` class to identify individuals who are musicians and then looks for their associated musical artists using the `dbo:musicalArtist` property. The names ""Matthias Röhr"" and ""Kevin Russell"" are used to filter the correct entities.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
773,7,train,"Give me the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?carloman a dbo:Person ;
            dbp:name ""Carloman of Bavaria"" .
  
  ?carloman dbo:father ?father .

  ?father a ?type .
  
  FILTER (
    (?type = dbo:Monarch || 
     ?type = dbo:Ruler ||
     ?type = dbo:OfficeHolder) &&
    EXISTS { ?father dbp:title ?title . }
  )
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
232,3,train,Give me the person born as Emily Katherine Jacques.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Emily Katherine Jacques""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""emily katherine jacques""))
  OPTIONAL { ?person dbo:birthDate ?birthDate }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
267,8,train,Give me the person born on the birth date of Dan Cathy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthdate WHERE {
  # Get Dan Cathy's birthdate
  VALUES (?danCathy) { dbr:Dan_Cathy }
  
  ?danCathy dbo:birthday ?birthdate .
  
  # Find other people with the same birthdate
  ?person a dbo:Person ;
          dbo:birthday ?sameBirthdate .
  
  FILTER(?sameBirthdate = ?birthdate && ?person != ?danCathy)
}
ORDER BY ?person",2,2,3,2,1,3,2,20,0,0,35,0,0.0,0
124,36,train,"Give me the commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?militaryForce WHERE {
  # Find the person born on June 24, 1850
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  
  # Check if this person was a commander in the Mahdist War
  ?event dbo:participatedIn dbr:Mahdist_War ;
         dbo:commander ?commander .

  # Ensure the commander is the same as the person found by birth date
  FILTER (?person = ?commander)

  # Retrieve the military force commanded by this person
  OPTIONAL { ?commander dbo:militaryService ?militaryForce }
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
926,24,train,Give me the successor of the child of Ahmed III and child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v2 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successor WHERE {
  # Find children of Ahmed III
  ?child dbo:parent dbr:Aḥmed_III .
  
  # Find the successor of each child
  ?child dbo:succeededBy ?successor .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
933,18,train,Give me the reference to Alan Warner and band of The Ramong Sound and band of Mike Elliott (saxophonist).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alanWarner ?band ?mikeElliott WHERE {
  # Find Alan Warner and his associations with bands
  ?alanWarner a dbo:MusicArtist ;
              rdfs:label ""Alan Warner""@en .
  
  OPTIONAL { 
    ?alanWarner dbo:memberOf ?band .
    ?band rdfs:label ?bandLabel .
    FILTER (CONTAINS(LCASE(?bandLabel), ""ramones"") || CONTAINS(LCASE(?bandLabel), ""sound""))
  }
  
  # Find Mike Elliott and his associations with bands
  ?mikeElliott a dbo:MusicArtist ;
               rdfs:label ""Mike Elliott""@en .
  
  OPTIONAL { 
    ?mikeElliott dbo:memberOf ?band .
    FILTER (CONTAINS(LCASE(?bandLabel), ""ramones"") || CONTAINS(LCASE(?bandLabel), ""sound""))
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
965,28,train,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse WHERE {
  # Princess Victoria of Hesse and by Rhine
  dbr:Princess_Victoria_of_Hesse_and_by_Rhine dbo:spouse dbr:Ernest_Louis,_Grand_Duke_of_Hesse .
  
  # Spouse of Ernest Louis, Grand Duke of Hesse (which is Princess Victoria)
  ?spouseOfSpouse dbo:spouse dbr:Ernest_Louis,_Grand_Duke_of_Hesse .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
933,0,train,Give me the band of Mike Elliott (saxophonist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Saxophonist .
  ?person foaf:name ""Mike Elliott"" .
  ?person dbo:memberOfBand ?band .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
554,6,train,Give me the leader of Portuguese Mozambique and leader of Portuguese São Tomé and Príncipe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Portuguese_São_Tomé_and_Príncipe> <http://dbpedia.org/property/leader> ?result . <http://dbpedia.org/resource/Portuguese_Mozambique> <http://dbpedia.org/property/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?leader WHERE {
  VALUES ?entity { 
    dbr:Portuguese_Mozambique 
    dbr:Portuguese_São_Tomé_and_Príncipe
  }
  
  OPTIONAL {
    ?entity dbo:governor ?leader .
  }

  FILTER (lang(?leader) = 'en')
}
ORDER BY ?entity",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
933,25,train,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and reference to Alan Warner.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Find Alan Warner (musician)
  ?alanWarner a dbo:MusicArtist ;
              foaf:name ""Alan Warner"" .

  # Find bands associated with Alan Warner
  ?alanWarner dbo:memberOfBandOrchestra ?band .

  # Ensure the band is both a group and an organization
  ?band a dbo:MusicalGroup, dbo:Organization .
  
  # Optional: Provide reference to Alan Warner
  OPTIONAL { ?alanWarner foaf:name ?name }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
865,14,train,Give me the father of the child of Abu Ahmad Abdul Hafiz.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Step 1: Identify Abu Ahmad Abdul Hafiz
  VALUES ?abuAhmad { dbr:Abu_Ahmad_Abdul_Hafiz }

  # Step 2: Find his children
  ?child dbo:parent ?abuAhmad .

  # Step 3: For each child, find their father
  ?child dbo:father ?father .
}
```

This query assumes that Abu Ahmad Abdul Hafiz is represented in DBpedia as `dbr:Abu_Ahmad_Abdul_Hafiz`. If the resource name differs, you may need to adjust it accordingly.",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
459,6,train,Give me the governor of Oklahoma and governor of Dana Murphy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorName ?state WHERE {
  # Query for the governor of Oklahoma
  {
    ?person a dbo:Governor ;
            dbo:stateOrTerritory dbr:Oklahoma .
    OPTIONAL { ?person foaf:name ?governorName . }
    BIND(""Oklahoma"" AS ?state)
  } UNION
  # Query for Dana Murphy, assuming they might be a governor or notable person
  {
    ?person foaf:name ""Dana Murphy""@en ;
            (dbo:officeHolder|a dbo:Governor) ?office .
    OPTIONAL { ?person foaf:name ?governorName . }
    BIND(""Unknown"" AS ?state)
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
5,9,train,"Give me the person born, that is a politician, as the award of Renata Adler.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Renata Adler and her award
  dbr:Renata_Adler dbo:awardReceived ?award .

  # Find the person who is a politician and born
  ?person dbo:occupation dbr:Politician ;
          dbo:birthPlace ?place .

  # Link the award to the person
  ?award dbo:recipient ?person .
}
```",2,3,3,2,1,3,2,20,0,0,169,0,0.0,0
965,31,train,Give me the parent of Louise Mountbatten and spouse of the spouse of the parent of Louise Mountbatten.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
SELECT ?grandparent ?spouseOfParent ?finalSpouse WHERE {
  ?louise dbo:birthName ""Louise Mountbatten""@en .
  ?louise dbo:parent ?parent .

  ?parent dbo:spouse ?spouseOfParent .

  ?spouseOfParent dbo:spouse ?finalSpouse .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
382,13,train,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerBirthPlace WHERE {
  # Step 1: Identify Lukas Kübler
  dbr:Lukas_Kübler a dbo:SoccerPlayer ;
                   dbo:manager ?manager .

  # Step 2 & 3: Filter managers who are also athletes and sports managers
  ?manager a dbo:Athlete, dbo:SportsManager .

  # Step 4: Retrieve the birthplace of such a manager
  ?manager dbo:birthPlace ?managerBirthPlace .
}
```",3,6,4,3,1,3,2,20,0,0,5,0,0.0,0
5,8,train,Give me the entity in the award of Coro de la Pontificia Universidad Católica de Puerto Rico.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity a dbo:Award .
  ?entity rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""coro de la pontificia universidad católica de puerto rico""))
}
```",2,2,3,2,1,3,2,20,0,0,20990,0,0.0,0
926,3,train,Give me the spouse of Neşerek Kadın.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Neşerek Kadın""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
465,12,train,Give me the successor of Renée of France and spouse of Archduchess Barbara of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  ?renee a dbo:Person ;
         foaf:name ""Renée of France""@en .
  
  ?renee dbo:successor ?successor .

  ?successor dbo:spouse ?barbara .
  ?barbara a dbo:Person ;
           foaf:name ""Barbara of Austria""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
933,11,train,Give me the band of the band of Alan Warner (musician).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Alan Warner"" .
  OPTIONAL { 
    ?person dbo:memberOfBand ?band .
    ?band foaf:name ?bandName .
  }
}
```",2,2,3,2,1,3,3,71,0,0,26,0,0.0,0
965,20,train,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of Prince Louis of Battenberg.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Prince Louis of Battenberg and his spouse
  VALUES ?princeLouis { dbr:Prince_Louis_of_Battenberg }
  ?princeLouis dbo:spouse ?spouse .
  
  # Children of Prince Louis of Battenberg
  ?child dbo:parent ?princeLouis ;
         dbo:parent ?otherParent .

  # Identify the child who is royalty
  ?child a dbo:Monarch ;
         dbo:spouse ?royalSpouse .

  # Find the spouse of this royal child
  FILTER(?royalSpouse = ?spouse)

  # Get the parent of this royal child
  ?parent dbo:child ?child .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
773,27,train,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # Carloman of Bavaria and his father
  ?carloman a dbo:Person ;
            dbp:father ?father .

  FILTER (str(?carloman) = ""Carloman_of_Bavaria"")

  # Father's father (Grandfather)
  ?father a dbo:Person ;
          dbp:father ?grandfather .

  # Grandfather is both an office holder and a royalty
  ?grandfather a dbo:OfficeHolder, dbo:Royalty .

  # Child of grandfather who is a royalty
  ?child a dbo:Person ;
         dbp:parent ?grandfather ;
         a dbo:Royalty .

  # Parent of that child
  ?child dbp:parent ?parent .
}
```",3,6,4,3,1,3,3,71,0,0,2,0,0.0,0
917,7,train,"Who is the child, that is a royalty, of Kamehameha III?",SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbr:Kamehameha_III dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  
  OPTIONAL { ?child dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"")) }
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
216,4,train,Give me the coach of Croatia national under-21 football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?result . },"```sparql
SELECT ?coach WHERE {
  ?team dct:subject dbc:Croatia_national_under-21_football_team .
  ?team dbo:coach ?coach .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
341,3,train,"Give me the work, that is a work and an album, of Serrano.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/property/writer> ""Serrano""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?artist rdfs:label ""Serrano""@en .
  ?album dbo:artist ?artist ;
         a dbo:Album .
  ?album rdfs:label ?work .
}
```",1,3,2,1,1,2,2,9,0,0,7,0,0.0,0
507,17,train,Give me the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?profession 
WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1966 && MONTH(?date) = 2 && DAY(?date) = 18)
  OPTIONAL { ?person dbo:occupation ?profession }
}
```",2,2,3,2,1,3,3,71,5,27,9,0.15625,0.35714285714285715,0.21739130434782608
456,4,train,Give me the actor of Pacific Drive.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?movie dct:subject dbc:Pacific_Drive.
  ?movie dbo:starring ?actor.
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
459,10,train,"Give me the governor of the administration, that is a politician, of Brad Henry.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?result . ?v0 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor WHERE {
  # Find Brad Henry as a politician and his role
  dbr:Brad_Henry dbo:officeHolder [
    a dbo:GovernmentFunction ;
    dbo:positionHeld ""Governor of Oklahoma"" .
  ] .

  # Identify the administration under which he served
  ?administration dbo:governmentHead ?governor ;
                  dbo:member dbr:Brad_Henry .

  # Ensure that the governor is a politician
  ?governor a dbo:Politician .
}
```",2,3,3,2,1,2,3,28,0,0,10,0,0.0,0
130,14,train,"Give me the entity in the administration, that is American, of the award of Živko Ključe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/governor> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administrationEntity WHERE {
  # Find the award associated with Živko Ključe
  ?award dbo:recipient dbr:Živko_Klju%C4%8De .
  
  # Find entities involved in the administration of this award
  ?award dbo:administrator ?administrationEntity .

  # Filter for American entities
  ?administrationEntity dbp:nationality ""American""^^xsd:string .
}
```",3,4,4,3,1,3,2,20,0,0,26076,0,0.0,0
18,10,train,Give me the parent of the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentClass WHERE {
  ?class rdfs:subClassOf* dbo:Actress .
  FILTER NOT EXISTS { ?class rdfs:subClassOf+ dbo:Actress . }
}
```",2,2,3,2,1,2,3,28,0,0,1063,0,0.0,0
715,38,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v2 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader WHERE {
  # Find offices associated with Carlos Franco Iribarnegaray
  ?office1 dbo:member dbr:Carlos_Franco_Iribarnegaray .
  
  # Find offices associated with Francisco Largo Caballero
  ?office2 dbo:member dbr:Francisco_Largo_Caballero .

  # Ensure the office is a government agency or organization
  ?office1 a dbo:GovernmentAgency ;
          rdfs:label ?officeLabel1 .
  
  ?office2 a dbo:GovernmentAgency ;
          rdfs:label ?officeLabel2 .

  # Find common offices
  FILTER (?office1 = ?office2)

  # Get the leader of the office
  ?office1 dbo:leader ?leader .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
935,9,train,"Give me the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:recipient ?awardee .
  ?award dbo:awarder dbr:Sohail_Hussain_Naqvi ;
         dbo:category ?category .
}
```",2,3,3,2,1,3,2,20,0,0,52,0,0.0,0
791,11,train,"Give me the spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?royalSpouse WHERE {
  # Step 1: Identify Emperor Takakura
  dbr:Takakura_of_Japan dbo:spouse ?emperorSpouse .

  # Step 2: Find the spouse of Emperor Takakura
  OPTIONAL { 
    ?emperorSpouse dbo:spouse ?secondLevelSpouse .
    
    # Step 3: Check if this second-level spouse is royalty
    ?secondLevelSpouse a dbo:Monarch ;
                      dbo:country dbr:Japan .

    # Step 4: Return the royal spouse
    BIND(?secondLevelSpouse AS ?royalSpouse)
  }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
978,6,train,Give me the band member of Chicane (musician) and band member of Enya.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Enya> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chicane_(musician)> . },"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?member WHERE {
  VALUES (?artist) { 
    (dbpedia:Chicane_(musician)) 
    (dbpedia:Enya)
  }
  
  ?artist dbp:bandMember ?member .
}
```

This query does the following:
- It uses prefixes for DBpedia properties and ontology.
- It selects individuals (`?member`) who are band members of either Chicane or Enya.
- The `VALUES` clause specifies the two artists of interest, using their respective DBpedia resource URIs.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
216,13,train,Give me the office of the mayor of Ros Bates and party of Campbell Newman.,SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?party
WHERE {
  # Ros Bates' office
  OPTIONAL { 
    dbr:Ros_Bates dbo:positionHeld ?office .
  }
  
  # Campbell Newman's party
  OPTIONAL { 
    dbr:Campbell_Newman dbo:politicalParty ?party .
  }
}
```

This query uses the `dbo:positionHeld` property to find the office held by Ros Bates and the `dbo:politicalParty` property for Campbell Newman's political affiliation. The use of `OPTIONAL` ensures that if one of these properties is not available, it won't prevent the other from being retrieved.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
791,33,train,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and spouse of Taira no Tokuko.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Find Emperor Go-Shirakawa's child
  ?child dbo:parent dbr:Emperor_Go-Shirakawa .

  # Step 2: Find the grandchild of Emperor Go-Shirakawa
  ?grandchild dbo:parent ?child .

  # Step 3: Check if the grandchild is an office holder and royalty, and spouse of Taira no Tokuko
  ?grandchild a dbo:Royalty ;
             dbo:officeHolder true ;
             dbo:spouse dbr:Taira_no_Tokuko .

  # Step 4: Find the predecessor of this grandchild
  ?predecessor dbo:successor ?grandchild .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
433,26,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find Ornette Coleman's associated musical artist who is also an artist
  ?coleman dbo:musicalArtist ?associatedArtist .
  FILTER (?coleman = dbpedia:Ornette_Coleman) .
  
  ?associatedArtist a dbo:MusicalArtist ;
                   dbo:artist ?broaderArtist .

  # Step 2: From this associated artist, find another musical artist who is also an artist
  ?broaderArtist dbo:musicalArtist ?finalArtist .
  FILTER (?finalArtist != ?coleman) .
  
  ?finalArtist a dbo:MusicalArtist ;
               dbo:artist ?finalBroaderArtist .
}
```",3,7,4,3,1,3,3,71,0,0,117,0,0.0,0
606,1,train,Give me the birthplace of Charles I. Barber.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I._Barber> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Charles I. Barber""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
326,3,train,Give me the profession of Susanne Lewis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Susanne_Lewis> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  ?person foaf:name ""Susanne Lewis""@en .
  ?person dbo:occupation ?profession .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
329,10,train,"Give me the entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Western_European_Time .
}
```",2,3,3,2,1,2,3,28,0,8,46363,0.0,0.0,0
645,18,train,Give me the commander in Battle of Jarama and military force of Spanish Civil War and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderJarama ?militaryForceLeader ?ministryOfArmyLeader 
WHERE {
  # Commander in the Battle of Jarama
  ?battle dbo:commander ?commanderJarama .
  FILTER(STRSTARTS(STR(?battle), ""http://dbpedia.org/resource/Battle_of_Jarama""))

  # Military force leader during the Spanish Civil War
  ?civilWarLeader dbo:militaryConflict dbr:Spanish_Civil_War .
  ?civilWarLeader dbo:positionTitle ?militaryForceLeader .

  # Leader of Ministry of the Army (Spain)
  ?ministryLeader dbo:headOfGovernment dbr:Ministry_of_the_Army_(Spain) .
  ?ministryLeader dbo:title ""Minister""^^xsd:string .
  
  OPTIONAL { ?commanderJarama rdfs:label ?commanderLabel . FILTER(LANG(?commanderLabel) = 'en') }
  OPTIONAL { ?militaryForceLeader rdfs:label ?leaderLabel . FILTER(LANG(?leaderLabel) = 'en') }
  OPTIONAL { ?ministryOfArmyLeader rdfs:label ?ministerLabel . FILTER(LANG(?ministerLabel) = 'en') }
}
ORDER BY ?commanderJarama ?militaryForceLeader ?ministryOfArmyLeader
LIMIT 10",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
382,4,train,"Give me the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  VALUES ?person { dbr:Harry_Combes }
  
  # Find references where Harry Combes is a college coach
  OPTIONAL {
    ?reference dbo:coach ?person .
    FILTER EXISTS { ?reference dbo:type dbr:College_coach }
  }

  # Find references where Harry Combes is a coach in general
  OPTIONAL {
    ?reference dbo:coach ?person .
    FILTER NOT EXISTS { ?reference dbo:type dbr:College_coach }
  }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
47,13,train,Give me the office of the awardee of Banga Bhushan.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient ?office 
WHERE {
  ?award dbo:recipient ?recipient .
  ?recipient dbo:office ?office .
  FILTER regex(str(?award), ""Banga Bhushan"", ""i"")
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
955,5,train,"Who is the band member, that is a musical artist and an artist, of Street Dogs?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?band a dbo:Band ;
        dbo:bandMember ?member .
  
  ?member dbo:occupation dbr:Musical_artist ;
          dbo:occupation dbr:Artist .

  FILTER (str(?band) = ""Street Dogs"")
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
917,22,train,Give me the parent of Albert Kamehameha and child of the father of Kamehameha IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Albert Kamehameha's parent
  ?albertKamehameha a dbo:Person ;
                   foaf:name ""Albert Kamehameha""@en .
  
  OPTIONAL { 
    ?parentParent dbr:child dbr:Albert_Kamehameha .
    ?parentParent dbo:spouse ?parent .
  }
  
  # Find Kamehameha IV's father
  ?kamehamehaIV a dbo:Person ;
                foaf:name ""Kamehameha_IV""@en .
  
  OPTIONAL {
    ?father dbr:child dbr:Kamehameha_IV .
    ?father dbo:spouse ?mother .
  }
  
  # Find the child of Kamehameha IV's father
  ?childParent dbr:child ?person ;
               dbo:spouse ?parent .

  FILTER (?albertKamehameha = ?childParent || ?kamehamehaIV = ?childParent)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
917,17,train,"Give me the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?kamehamehaIII a dbo:Monarch ;
                 foaf:name ""Kamehameha III""@en .
  
  ?child dbo:parent ?kamehamehaIII ;
         a dbo:Monarch .

  ?child dbo:father ?father .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
83,6,train,"Give me the player in the person born, that is an athlete, on 1991-11-19.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1991-11-19""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?athlete WHERE {
  ?athlete rdf:type dbo:Athlete .
  ?athlete dbo:birthDate ""1991-11-19""^^xsd:date .
}
```",2,3,3,2,1,2,2,9,0,30,91,0.0,0.0,0
933,21,train,Give me the band of The Ramong Sound and band of the band of Alan Warner (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?ramonesBand ?alanWarnerBand WHERE {
  # Find the band associated with The Ramones
  ?ramones a dbo:MusicalArtist ;
           dbp:bandMember ?member .
  ?member foaf:name ""The Ramones"" .

  OPTIONAL { 
    ?member dbo:associatedBand ?ramonesBand .
  }

  # Find the band associated with Alan Warner (musician)
  ?alanWarner a dbo:Musician ;
              foaf:name ""Alan Warner"" .
  
  OPTIONAL {
    ?alanWarner dbo:bandMember ?alanWarnerMember .
    ?alanWarnerMember dbo:associatedBand ?alanWarnerBand .
  }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
47,35,train,Give me the office of the administration of Jagdeep Dhankhar and office of the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v2 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeJagdeepDhankhar ?officePadmaVibhushanAwardee
WHERE {
  # Office of Jagdeep Dhankhar
  dbr:Jagdeep_Dhankhar dbo:positionHeld ?officeJagdeepDhankhar .
  
  # Awardees of Padma Vibhushan and their offices
  ?awardee dbo:award <http://dbpedia.org/resource/Padma_Vibhushan> ;
          dbo:positionHeld ?officePadmaVibhushanAwardee .
}
```

This query does the following:
- It uses the `dbo:positionHeld` property to find the offices associated with Jagdeep Dhankhar and any awardee of the Padma Vibhushan.
- The resource for Jagdeep Dhankhar is accessed via `dbr:Jagdeep_Dhankhar`.
- For Padma Vibhushan awardees, it uses a generic variable `?awardee` to match any individual who has received this award.",4,4,5,2,2,3,3,71,0,0,6,0,0.0,0
417,15,train,"Who is the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Knud, Hereditary Prince of Denmark
  ?knud a dbo:Person ;
        foaf:name ""Knud, Hereditary Prince of Denmark""@en .
  
  # Step 2: Find his children
  ?child dbo:childOf ?knud .

  # Step 3: For each child, identify their parents
  ?parent dbo:spouse ?child .

  # Step 4: Filter those parents who are royalty
  ?parent a dbo:Monarch .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
129,13,train,Give me the associated musical artist of EarthGang and professional in the mayor of 1999 West Dunbartonshire Council election.,SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?earthGangArtist ?mayor
WHERE {
  # Find associated artists of EarthGang
  dbr:EarthGang dbo:associatedMusicalArtist ?artist .
  ?artist a dbo:MusicArtist ;
          rdfs:label ?earthGangArtist .

  # Find the mayor elected in the 1999 West Dunbartonshire Council election
  OPTIONAL {
    dbr:West_Dunbartonshire_Council_Election,_1999 dbo:electedOfficial ?mayor .
    ?mayor a dbo:Mayor ;
           rdfs:label ?mayorLabel .
  }
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
36,2,train,Give me the person born as Ayo Makun.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?alias WHERE {
  ?person dbo:birthName ""Ayo Makun"" .
  OPTIONAL { ?person foaf:name ?alias . }
}
```

This query does the following:
- It uses the `dbo:birthName` property to find individuals with the birth name ""Ayo Makun"".
- The `OPTIONAL` clause is used to retrieve any aliases (other names) associated with that person, if available.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
773,13,train,Give me the parent of the successor of Charles the Bald.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Step 1: Identify Charles the Bald's successor
  ?successor dbo:predecessor dbr:Charles_the_Bald .
  
  # Step 2: Find the parent of this successor
  ?successor dbo:father|dbo:mother ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
445,38,train,Give me the entity in the award of George H. Cameron and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardEntity ?deathPlace
WHERE {
  # Find the award associated with George H. Cameron
  ?person dbo:givenName ""George"" .
  ?person dbo:familyName ""H. Cameron"" .
  ?person dbo:honoraryTitle ?award .

  # Find awardees of the Royal Astronomical Society
  ?awardee dbo:honoraryTitle dbr:Royal_Astronomical_Society_Award .
  
  # Get the death place of those awardees
  OPTIONAL { ?awardee dbo:deathPlace ?deathPlace }

  # Link the award entity to the Royal Astronomical Society award
  FILTER(?award = dbr:Royal_Astronomical_Society_Award)
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
773,10,train,Give me the parent of Charles the Fat and spouse of Louis the German.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parentOfCharlesTheFat ?spouseOfLouisTheGerman
WHERE {
  # Find Charles the Fat and his parent
  ?charlesTheFat a dbo:Person ;
                 foaf:name ""Charles the Fat""@en .
  ?charlesTheFat dbo:parent ?parentOfCharlesTheFat .

  # Find Louis the German and his spouse
  ?louisTheGerman a dbo:Person ;
                  foaf:name ""Louis the German""@en .
  ?louisTheGerman dbo:spouse ?spouseOfLouisTheGerman .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
715,29,train,Give me the commander in the force of Francisco Largo Caballero and leader of Ministry of the Air (Spain) and commander in Rif War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?ministryLeader ?rifWarCommander WHERE {
  # Francisco Largo Caballero's resource
  VALUES ?franciscoLargoCaballero { dbr:Francisco_Largo_Caballero }

  # Commander of Francisco Largo Caballero
  OPTIONAL {
    ?franciscoLargoCaballero dbo:commanderOf ?commander .
  }
  
  # Leader of Ministry of the Air (Spain)
  OPTIONAL {
    ?ministryLeader dbo:leader ?franciscoLargoCaballero ;
                   rdfs:label ""Ministry of the Air (Spain)""@en .
  }

  # Commander in Rif War
  OPTIONAL {
    ?rifWarCommander dbo:commanderOf ?franciscoLargoCaballero ;
                    dbo:subjectArea dbr:Rif_War .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
976,23,train,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v1 <http://dbpedia.org/ontology/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  # Find Kemal Kılıçdaroğlu
  ?person rdfs:label ""Kemal Kılıçdaroğlu""@en .
  
  # Ensure the person is a politician
  ?person dbo:occupation dbr:Politician .

  # Find organizations he leads
  ?organization dbo:leader ?person ;
                a dbo:Organization .

  # Determine his office in the organization
  ?officePosition dbo:positionHeldBy ?person ;
                  dbo:positionTitle ?office .
  
  FILTER(?office != """")
}
```",3,5,4,3,1,3,3,71,0,0,13,0,0.0,0
826,29,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?spouse WHERE {
  # Louis IV, Grand Duke of Hesse and his predecessor
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:predecessor ?predecessor .

  # Louis I, Grand Duke of Hesse's children who are royalty
  ?child dbo:parent dbr:Louis_I,_Grand_Duke_of_Hesse ;
         a dbo:Monarch .

  # The spouse of the child (who is Anna Magdalena Appel)
  ?child dbo:spouse dbr:Anna_Magdalena_Appel .
  
  # Ensure the spouse is Anna Magdalena Appel
  ?spouse rdfs:label ""Anna Magdalena Appel""@en .

  # Link the predecessor to the spouse
  ?predecessor rdfs:label ?spouseLabel .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
865,39,train,Give me the father of the child of the father of Abul Maal Abdul Muhith and father of AK Abdul Momen.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherOfCommonChild WHERE {
  # Step 1: Find the father of Abul Maal Abdul Muhith
  ?abulMaal dbo:parent ?fatherAbulMaal .
  ?abulMaal dbp:name ""Abul Maal Abdul Muhith""@en .

  # Step 2: Find children of this father (including Abul Maal)
  ?childOfFatherAbulMaal dbo:parent ?fatherAbulMaal .

  # Step 3: Find the father of AK Abdul Momen
  ?ak dbp:parent ?fatherAK .
  ?ak dbp:name ""AK Abdul Momen""@en .

  # Step 4: Identify a common child between these two fathers
  ?commonChild dbo:parent ?fatherAbulMaal ;
               dbo:parent ?fatherAK .

  # Step 5: Find the father of this common child
  ?commonChild dbo:parent ?fatherOfCommonChild .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
442,0,train,Give me the resting place of Allyn K. Capron.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allyn_K._Capron> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?place WHERE {
  wd:Q123456 dbr:resting_place ?place .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Allyn K. Capron.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
124,23,train,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  # Find wars involving 'A' Battery, Royal Australian Artillery
  ?battery a dbo:MilitaryUnit ;
           dbo:militaryConflict ?war .
  
  FILTER (str(?battery) = ""A_Battery,_Royal_Australian_Artillery"")

  # Ensure the war is both a societal event and military conflict
  ?war a dbo:War .

  # Find the commander of the war
  ?war dbo:commander ?commander .
}
```",3,8,4,3,1,3,3,71,0,0,109,0,0.0,0
236,0,train,Give me the party member of Federalist Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Federalist_Party> . },"```sparql
SELECT ?member WHERE {
  ?party dcterms:subject dbc:Federalist_Party.
  ?party dbo:member ?member.
}
```",1,1,2,1,1,3,2,20,0,0,269,0,0.0,0
865,1,train,Give me the father of AK Abdul Momen.,SELECT ?result WHERE { <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  wd:Q1234567 wdt:P22 ?father .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for AK Abdul Momen. You can find this by searching for his name on DBpedia or using a SPARQL endpoint to query for his identifier.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
83,2,train,Who is the person born on 1995-07-07?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1995-07-07""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthday ?birthday .
  FILTER (YEAR(?birthday) = ""1995"" && MONTH(?birthday) = ""7"" && DAY(?birthday) = ""7"")
}
```",1,1,2,1,1,2,2,9,0,0,34,0,0.0,0
579,13,train,"Give me the native of the residence, that is English and a settlement, of the resident of Scotland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?settlement ?nativeLanguage WHERE {
  ?person dbo:nationality dbr:United_Kingdom . # Resident of the UK, which includes Scotland
  ?person dbo:birthPlace dbr:Scotland .       # Specifically born in Scotland

  ?person dbo:residence ?settlement .         # Residence is a settlement
  ?settlement rdf:type dbo:Settlement .        # Ensure it's a settlement
  ?settlement dbo:country dbr:England .       # The settlement must be in England

  ?settlement dbp:nativeLanguage ?nativeLanguage .
  FILTER (str(?nativeLanguage) = ""English"")   # Native language is English
}
```",3,5,4,3,1,3,2,20,0,0,5279,0,0.0,0
645,10,train,Give me the commander in Battle of Jarama and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:commanderOf dbr:Battle_of_Jarama .
  ?person dbo:ministerOf dbr:Ministry_of_the_Army_(Spain) .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
456,5,train,"Give me the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character WHERE {
  ?person dbo:alias dbr:Lamont_Cranston .
  ?person dbo:fictionalCharacter ?character .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
18,1,train,Give me the parent of Liza Huber.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?person rdfs:label ""Liza Huber""@en .
  ?person a dbo:Person .
  ?person dbo:birthPlace ?place .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  OPTIONAL { ?person dbo:children ?child . }
  ?person rdfs:subClassOf+ ?parent .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
459,12,train,Give me the governor of Dana Murphy and governor of Oklahoma and person born as John Kevin Stitt.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorDanaMurphy ?governorOklahoma ?personJohnKevinStitt WHERE {
  # Find Dana Murphy's governor
  OPTIONAL { 
    ?damaMurphy dbo:governedBy ?governorDanaMurphy .
    dbr:Dana_Murphy ?damaMurphy .
  }
  
  # Find the current governor of Oklahoma
  OPTIONAL {
    ?oklahomaGovernor dbo:stateOrTerritory dbr:Oklahoma ;
                      a dbo:Governor .
    BIND(?oklahomaGovernor AS ?governorOklahoma)
  }

  # Find John Kevin Stitt's DBpedia resource
  OPTIONAL {
    ?personJohnKevinStitt dbo:birthName ""John Kevin Stitt""^^xsd:string ;
                          a dbo:Person .
    dbr:John_Stitt ?personJohnKevinStitt .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
36,18,train,Give me the person born as the birth name of Ayo Makun and person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName ?birthYear WHERE {
  # Find Ayo Makun by birth name or alias
  { 
    ?person dbo:birthName ""Ayo Makun""@en .
    OPTIONAL { ?person foaf:name ""Aki"" . }
  } UNION {
    ?person foaf:name ""Aki"" .
    OPTIONAL { ?person dbo:birthName ""Ayo Makun""@en . }
  }

  # Find person born in 1971
  UNION {
    ?person dbo:birthdayYear ?birthYear .
    FILTER (?birthYear = 1971)
  }

  # Optional: Retrieve birth name if available
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
```",3,3,4,2,2,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
281,5,train,Give me the award of Alfred Warden.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alfred Warden""@en .
  OPTIONAL { ?person dbo:award ?award . }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
365,7,train,Give me the person born as the birth name of Symon Petliura.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Symon Petliura""@en .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
715,11,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?conflict a dbo:MilitaryConflict ;
            dbo:participated Abd el-Krim .
  
  OPTIONAL { 
    ?conflict dbo:commander ?commander .
  }
}
```",2,3,3,2,1,3,3,71,0,0,22,0,0.0,0
93,9,train,"Give me the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarter WHERE {
  # Find the headquarters of Clam Cove Pictograph Site
  ?site dbo:headquarters ?hq .
  FILTER (str(?site) = ""Clam_Cove_Pictograph_Site"")

  # Check if this headquarters is a region and a settlement
  ?hq rdf:type dbo:Region ;
      rdf:type dbo:Settlement .

}
```",2,4,3,2,1,3,2,20,0,0,5,0,0.0,0
826,17,train,"Who is the parent of the child of Louis IV, Grand Duke of Hesse?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
SELECT DISTINCT ?parent WHERE {
  # Step 1: Get Louis IV, Grand Duke of Hesse
  ?louis a dbo:Person ;
         foaf:name ""Louis IV, Grand Duke of Hesse""@en .
  
  # Step 2: Find his children
  ?child dbo:spouseOrPartnerOf ?louis ;
         rdf:type dbo:Person .

  # Step 3: For each child, find their parents
  ?parent dbo:spouseOrPartnerOf ?child ;
          rdf:type dbo:Person .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
212,4,train,Give me the birthplace of KODA (singer) and birthplace of Corp Sayvee.,SELECT ?result WHERE { <http://dbpedia.org/resource/KODA_(singer)> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Corp_Sayvee> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlaceLabel WHERE {
  VALUES ?person { 
    dbr:Koda_(singer) 
    dbr:Corp_Sayvee 
  }
  
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

} ORDER BY ?person
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
582,5,train,Give me the child of Kazuaki Nagasawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?person dbo:spouse ?partner .
  FILTER (str(?person) = ""Kazuaki_Nagasawa"").
  
  OPTIONAL { 
    ?partner foaf:children ?child .
  }
}
```

This query assumes that Kazuaki Nagasawa's spouse might have a list of children, which is a common way to find family relationships in DBpedia. It filters for the person named ""Kazuaki_Nagasawa"" and looks for any children associated with his partner.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
453,4,train,Give me the religion of Newfoundland Colony and religion of John Henry Newman.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Henry_Newman> <http://dbpedia.org/ontology/religion> ?result . <http://dbpedia.org/resource/Newfoundland_Colony> <http://dbpedia.org/ontology/religion> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?entity ?religionLabel WHERE {
  VALUES ?entity { 
    dbpedia:Newfoundland_and_Labrador_Colony 
    dbpedia:John_Henry_Newman 
  }
  OPTIONAL { ?entity dbo:religion ?religion . }
  SERVICE <http://dbpedia.org/sparql> {
    ?religion rdfs:label ?religionLabel .
    FILTER (lang(?religionLabel) = 'en')
  }
}
ORDER BY ?entity
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
892,19,train,Give me the landmark at elevation of 58 and entity in the profession of Henri Crolla.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","# Query for landmark at elevation 58
SELECT ?landmark WHERE {
  ?landmark a dbo:Landmark .
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = ""58""^^xsd:integer)
}

UNION

# Query for entities in the profession of Henri Crolla
SELECT ?entity WHERE {
  ?crolla foaf:name ""Henri Crolla""@en .
  ?crolla dbo:occupation ?profession .
  ?entity dbo:occupation ?profession .
  FILTER (?entity != ?crolla)
}",3,3,4,2,2,3,3,71,0,0,11,0,0.0,0
443,7,train,Give me the landmark at elevation of 28 and birthplace of Carl Larsson.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?birthplace WHERE {
  # Find landmarks with an elevation of 28 meters
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ""28""^^xsd:float .
  
  # Find the birthplace of Carl Larsson
  dbr:Carl_Larsson dbo:birthPlace ?birthplace .
}
```

This query does the following:
- It selects landmarks that are classified as a `Lighthouse` (or any other relevant category) with an elevation of exactly 28 meters.
- It retrieves the birthplace of Carl Larsson by linking his DBpedia resource to his birthplace.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
443,12,train,Give me the landmark at elevation of 28 and birthplace of Carl Larsson and birthplace of Ulf Lundell.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark ?birthplaceCarlLarsson ?birthplaceUlfLundell WHERE {
  # Find landmarks at an elevation of 28 meters
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""28""^^xsd:integer)

  # Find the birthplace of Carl Larsson
  dbr:Carl_Larsson dbo:birthPlace ?birthplaceCarlLarsson .

  # Find the birthplace of Ulf Lundell
  dbr:Ulf_Lundell dbo:birthPlace ?birthplaceUlfLundell .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
865,6,train,"Who is the child, that is a politician, of Abu Ahmad Abdul Hafiz?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?person dbo:child ?child .
  ?child rdf:type dbo:Politician .
  
  FILTER(?person = dbpedia:Abu_Ahmad_Abdul_Hafiz)
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
216,9,train,Give me the player in Mario Ivanković and player in Igor Bišćan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find players associated with Mario Ivanković
  OPTIONAL {
    ?mario dbr:Mario_Ivanković .
    ?mario dbo:teamMember ?team1 .
    ?team1 dbo:member ?player .
  }
  
  # Find players associated with Igor Bišćan
  OPTIONAL {
    ?igor dbr:Igor_Bišćan .
    ?igor dbo:teamMember ?team2 .
    ?team2 dbo:member ?player .
  }
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
645,3,train,Who is the commander in Siege of Madrid?,SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event a dbo:MilitaryConflict ;
         dbo:location dbr:Madrid ;
         dbo:participatedIn dbr:Spanish_Civil_War .
  
  OPTIONAL { 
    ?event dbo:commander ?commander .
  }
}
```",1,1,2,1,1,3,3,71,0,0,27,0,0.0,0
507,10,train,"Give me the spouse of Anne V. Coates and professional in Film director, television director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Anne V. Coates in DBpedia
  dbr:Anne_V._Coates dbo:spouse ?spouse .
  
  # Filter for spouses who are film or television directors
  ?spouse a dbo:FilmDirector ;
         a dbo:TelevisionDirector .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
715,1,train,Give me the commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?event dbo:wikiPageWikiLink dbr:Spanish_Civil_War .
  ?event dbo:commander ?commander .
  FILTER (lang(?commanderLabel) = ""es"")
}
```",1,1,2,1,1,3,3,71,0,0,28,0,0.0,0
98,17,train,Give me the entity in Philippines and birth place of the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?entityInPhilippines
WHERE {
  VALUES ?person { dbr:Paolo_Ballesteros }
  
  ?person dbo:birthPlace ?birthPlace .
  
  OPTIONAL {
    ?person dbo:nationality ?nationality .
    FILTER (CONTAINS(LCASE(str(?nationality)), ""philippines""))
    BIND(""Philippines"" AS ?entityInPhilippines)
  }

  UNION

  {
    ?person dbo:country ?country .
    FILTER (CONTAINS(LCASE(str(?country)), ""philippines""))
    BIND(""Philippines"" AS ?entityInPhilippines)
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
329,14,train,"Give me the entity in the region, that is a country, of Western European Time and birthplace of Eric Cross (writer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  # Find countries in the Western European Time zone
  ?timeZone a dbo:TimeZone ;
            dbo:timezoneName ""Western European Time"" .
  
  ?country dbo:timeZone ?timeZone ;
           a dbo:Country .

  # Find Eric Cross's birthplace
  dbr:Eric_Cross dbo:birthPlace ?birthPlace .

  # Ensure the country is the birthplace of Eric Cross
  FILTER (?birthPlace = ?country)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
365,11,train,Give me the person born as the birth name of Symon Petliura and spouse of Olha Petliura.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Olha_Petliura> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Find Symon Petliura's birth name
  dbr:Symon_Petliura dbo:birthName ?birthName .
  
  # Find Olha Petliura and her spouse
  dbr:Olha_Petliura dbo:spouse ?spouse .

  # Match the person with both conditions
  ?person foaf:name ?birthName .
  ?person = ?spouse .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
41,4,train,Who is the person born as David Declan Costello?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthName ""David Declan Costello""@en .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
579,8,train,"Give me the person born as the birth name of Jane Percy, Duchess of Northumberland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Jane Percy""@en .
}
```

This query searches for individuals in DBpedia who have the birth name ""Jane Percy."" The `foaf:name` property is used to match the full name, and we specify the language tag `@en` to ensure it matches English names.",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
508,5,train,"Give me the commander, that is Saudi, in Central Plains War.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war dbo:location dbr:Central_Plains_War .
  ?war dbo:commander ?commander .
  ?commander dbo:nationality dbr:Saudi_Arabia .
}
```

This query does the following:
- It selects entities (`?commander`) that are commanders of a war (`?war`).
- The war is specified to be the ""Central Plains War.""
- The commander's nationality is filtered to be Saudi Arabia.",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
826,34,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Anna Magdalena Appel (Bach)
  ?anna a dbo:Person ;
        foaf:name ""Anna Magdalena Bach""@en .
  
  # Her father
  ?father dbo:spouse ?anna ;
          foaf:name ""Johann Sebastian Bach""@en .

  # A child of Johann Sebastian Bach
  ?child dbo:parent ?father ;
         foaf:name ""Carl Philipp Emanuel Bach""@en .

  # Spouse of Carl Philipp Emanuel Bach
  ?spouse dbo:spouse ?child ;
          foaf:name ""Maria Barbara Bach""@en .

  # Louis IV, Grand Duke of Hesse
  ?louis a dbo:Person ;
         foaf:name ""Louis IV, Grand Duke of Hesse""@en ;
         dbp:predecessor ?predecessor .

}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
443,10,train,"Give me the birthplace of the person born, that is a musical artist and an artist, on 1949-11-20.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:MusicalArtist ;
          a dbo:Artist ;
          dbp:birthday ""1949-11-20""^^xsd:date .
  ?person dbo:birthPlace ?birthPlace .
}
```

This query does the following:
- Uses prefixes for common DBpedia properties and classes.
- Selects the birthplace (`?birthPlace`) of a person (`?person`).
- Ensures the person is both a `MusicalArtist` and an `Artist`.
- Filters by the specific birthday using the `dbp:birthday` property.",2,4,3,2,1,2,3,28,0,0,3,0,0.0,0
170,17,train,Give me the domain of Mayor and birth place of the awardee of People's Artist of Russia.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mayorDomain ?birthPlace WHERE {
  # Find the domain of ""Mayor""
  ?role rdfs:domain ?mayorDomain .
  FILTER (str(?role) = ""dbo:Mayor"") .

  # Find birthplace of People's Artist of Russia awardees
  ?person dbo:honoraryTitle dbr:People%27s_Artist_of_Russia ;
          dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
865,23,train,"Give me the native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  ?person dbo:deathPlace dbr:Patna .
  ?person dbo:residence ?country .
  FILTER (isLiteral(?country) && datatype(?country) = xsd:string)
  ?country dbo:nativeCountry ?native .
}
```

This query does the following:
- Selects a person who died in Patna.
- Checks if their residence is a country.
- Retrieves the native place of that country.",3,4,4,3,1,3,3,71,0,0,1898,0,0.0,0
382,12,train,Give me the landmark at elevation of the award of Harry Combes and birthplace of Björn Joppe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Björn_Joppe> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Find the award received by Harry Combes
  ?award dbo:recipient dbr:Harry_Combes .
  
  # Get the elevation of this award (assuming it's a geographical location)
  ?award dbo:elevation ?elevation .

  # Find the birthplace of Björn Joppe
  ?bjorn dbo:birthPlace ?birthPlace .
  FILTER(?bjorn = dbr:Björn_Joppe) .

  # Get landmarks at this elevation
  ?landmark dbo:elevation ?elevation .
  
  # Ensure the landmark is not the award itself
  FILTER(?landmark != ?award)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
773,34,train,Give me the spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of Charles the Fat.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Step 1: Identify Bernard (son of Charles the Fat)
  ?bernard dbo:childOf ?charlesTheFat .
  
  # Step 2: Find the parent of Bernard
  ?parent dbo:child ?bernard .

  # Step 3: Determine the father of this parent
  ?father dbo:spouse ?parent .
  FILTER (?father != ?parent) # Ensure it's a spouse relationship, not self

  # Step 4: Identify the spouse of this father
  ?father foaf:mbox ?email . # Just to ensure we have a valid person entry
  ?father dbo:spouse ?spouse .
}
```

This query assumes that DBpedia has structured data for these historical figures and their relationships. The `FILTER` clause ensures that the relationship is between two different individuals, not self-referential.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
326,6,train,Give me the professional in the profession of Susanne Lewis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Susanne_Lewis> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  # Find Susanne Lewis's profession
  ?susanneLewis a dbo:Person ;
                foaf:name ""Susanne Lewis""@en .
  ?susanneLewis dbo:occupation ?profession .

  # Find other professionals with the same occupation
  ?person a dbo:Person ;
          foaf:name ?name ;
          dbo:occupation ?profession .
  
  FILTER(?person != ?susanneLewis)
}
ORDER BY ?name",2,2,3,2,1,2,2,9,2061,5634,162,0.26783625730994154,0.9271255060728745,0.41560798548094374
216,38,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  ?person dbo:birthDate ""1983-12-20""^^xsd:date .
  ?person a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerCoach .

  ?person dbo:managerOf dbr:Bosnia_and_Herzegovina_national_under-18_football_team .
  ?person dbo:playerFor ?team .

  FILTER EXISTS { ?person dbo:coachOf dbr:Bosnia_and_Herzegovina_national_under-18_football_team }
}
```",4,10,5,2,2,3,3,71,0,0,1,0,0.0,0
192,9,train,"Give me the spouse, that is a royalty, of the child of Charles II of Naples.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . ?result <http://dbpedia.org/ontology/spouse> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Charles II of Naples
  dbr:Charles_II_of_Naples dbo:child ?child .

  # Find the spouse of each child who is royalty
  ?child dbo:spouse ?spouse .
  ?spouse a dbo:Monarch ; 
          rdfs:label ?spouseLabel .
  
  FILTER (lang(?spouseLabel) = 'en')
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
456,21,train,Give me the spouse of the actor of Pacific Drive and band of Alan Doyle.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?band 
WHERE {
  # Find the actor in ""Pacific Drive""
  ?movie dbo:title ""Pacific Drive""@en .
  ?movie dbo:starring ?actor .

  # Get the spouse of this actor
  ?actor dbo:spouse ?spouse .

  # Find the band associated with Alan Doyle
  dbr:Alan_Doyle dbo:bandMember ?band .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
456,28,train,Give me the band of Alan Doyle and professional in  and spouse of the actor of Pacific Drive.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person dbo:name ""Alan Doyle""@en .
  ?person dbo:memberOfBand ?band .
}
```

This query retrieves the band associated with Alan Doyle. For the second part of your question, more specific information is needed to construct an accurate SPARQL query.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
933,10,train,Give me the band of The Ramong Sound and band of Mike Elliott (saxophonist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandRamones ?bandMikeElliott WHERE {
  # Find bands associated with The Ramones
  OPTIONAL {
    ?ramones dbo:member dbr:The_Ramones .
    ?ramones dbo:name ?bandRamones .
  }
  
  # Find bands associated with Mike Elliott (saxophonist)
  OPTIONAL {
    ?mikeElliott dbo:member dbr:Mike_Elliott_(saxophonist) .
    ?mikeElliott dbo:name ?bandMikeElliott .
  }
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
192,10,train,Give me the child of the parent of Anna of Hungary (Byzantine empress).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
  # Step 1: Find Anna of Hungary's parent
  ?anna dbo:parent ?parent .
  
  FILTER(?anna = dbpedia:Anna_of_Hungary_(Byzantine_empress)) .

  # Step 2: Find the children of that parent
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
98,3,train,Give me the time zone of Lopez Jaena.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timeZone
WHERE {
  dbr:Lopez_Jaena dbo:location dbr:Philippines .
  dbr:Philippines dbo:timeZone ?timeZone .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
508,2,train,"Give me the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Hayao Tada""@en .
  
  ?war a dbo:MilitaryConflict ;
       dbo:participatedIn ?person ;
       a dbo:SocietalEvent, dbo:Event .

}
```

This query does the following:
- It looks for an individual (`?person`) who is of type `dbo:MilitaryPerson` and has the name ""Hayao Tada"".
- It then searches for wars (`?war`) that are classified as both `dbo:MilitaryConflict`, `dbo:SocietalEvent`, and `dbo:Event`.
- The query checks if Hayao Tada participated in these wars.

Please note:
- DBpedia's ontology might not have a direct class like `SocietalEvent` or `Event`. You may need to adjust the classes based on available data.
- Ensure that ""Hayao Tada"" is correctly represented in DBpedia, as names can vary in representation.",1,4,2,1,1,3,2,20,0,0,5,0,0.0,0
645,7,train,Who is the native of Restoration (Spain)?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:birthPlace dbr:Restoration_(Spain) .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
ORDER BY ?name
LIMIT 10",1,1,2,1,1,3,3,71,0,0,217,0,0.0,0
93,14,train,"Give me the death place of the governor of the native, that is a politician, of Seattle.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/property/governor> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?person dbo:nationality dbr:Native_Americans_in_the_United_States ;
          dbo:birthPlace dbr:Seattle,_Washington ;
          dbo:occupation dbr:Politician .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  
  FILTER(CONTAINS(LCASE(STR(?person)), ""chief seattle""))
}
```",3,4,4,3,1,3,2,20,0,0,9,0,0.0,0
987,33,train,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of Dado Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorBirthPlace ?dadoPolumentaBirthPlace WHERE {
  # Find a film with Emir Hadžihafizbegović
  ?film dbo:starring dbr:Emir_Hadžihafizbegović .
  
  # Find actors in that film who are also in a show (TV series)
  ?film dbo:starring ?actor .
  ?show dbo:starring ?actor .
  ?show rdf:type dbo:TelevisionSeries .

  # Get the birthplace of this actor
  ?actor dbp:birthPlace ?actorBirthPlace .

  # Get the birthplace of Dado Polumenta
  dbr:Dado_Polumenta dbp:birthPlace ?dadoPolumentaBirthPlace .
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
826,24,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v2 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?successor
WHERE {
  # Louis IV, Grand Duke of Hesse and his predecessor
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:predecessor ?predecessor .

  # Louis I, Grand Duke of Hesse and his children who are royalty
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:child ?child .
  ?child a dbo:Monarch .

  # Find the successor of that child
  ?child dbo:successor ?successor .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
445,16,train,Who is the awardee of the establishment of 1820-03-10?,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/awards> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?recipient WHERE {
  ?award dbo:established ""1820-03-10""^^xsd:date .
  ?award dbo:recipient ?recipient .
}
```

This query assumes:
- `dbo:established` is the property used for establishment dates.
- `dbo:recipient` links awards to their recipients.

If these assumptions don't hold, you might need to adjust the properties based on DBpedia's schema or explore related properties.",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
417,26,train,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Identify the leader of the Colony of Greenland
  ?leader dbo:positionTitle ""Leader of the Colony of Greenland""@en .
  
  # Step 2: Determine the father of this leader
  ?father dbo:spouse ?leader ;
          a dbo:Person .

  # Step 3: Find the child of that father who is royalty
  ?child dbo:parent ?father ;
         a dbo:RoyalFamilyMember .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
136,3,train,Give me the award of Bret Anthony Johnston.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bret_Anthony_Johnston> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person dbo:birthName ""Bret Anthony Johnston"" .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
200,1,train,Give me the band member of Order from Chaos.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Order_from_Chaos> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?band a dbo:MusicalBand ;
        rdfs:label ""Order from Chaos""@en .
  
  OPTIONAL { 
    ?band dbo:bandMember ?member .
  }
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
987,3,train,"Who is the band, that is an artist, of Dado Polumenta?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:birthName ""Dado Povlovic"" .
  ?person dbo:associatedBand ?band .
  FILTER EXISTS { ?band a dbo:MusicalGroup . }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
36,5,train,Give me the birth name of Ayo Makun.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:Q1234568 foaf:name ""Ayo Makun""@en .
  wd:Q1234568 schema:givenName ?birthName .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia resource identifier for Ayo Makun.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
976,21,train,"Give me the office of Naci Bostancı and office of the leader, that is a politician, of Grand National Assembly of Turkey.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeNaciBostanci ?officeLeaderGNA
WHERE {
  # Find Naci Bostancı's office
  OPTIONAL {
    dbr:Naci_Bostancı dbo:positionHeld ?officeNaciBostanci .
  }
  
  # Find the leader of the Grand National Assembly of Turkey and their office
  OPTIONAL {
    dbr:Grand_National_Assembly_of_Turkey dbo:leader ?leaderGNA .
    ?leaderGNA dbo:positionHeld ?officeLeaderGNA .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
573,17,train,"Who is the author, that is a politician and an office holder, of the work of John Quincy Adams?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?author WHERE {
  # Find works associated with John Quincy Adams
  ?work dbo:author dbr:John_Quincy_Adams .
  
  # Identify the author of these works
  ?work dbo:author ?author .

  # Ensure the author is a politician and an office holder
  ?author rdf:type dbo:Politician ;
          dbo:officeHolder ?office .
}
```

This query does the following:
- It selects distinct authors (`?author`) who have authored works associated with John Quincy Adams.
- It ensures that these authors are classified as politicians (`dbo:Politician`).
- It checks if they hold an office (`dbo:officeHolder`), indicating they are office holders.",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
273,14,train,Give me the parent of the alumnus of the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . ?v0 <http://dbpedia.org/ontology/almaMater> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alumnus ?parentOrganization
WHERE {
  ?alumnus dbo:almaMater dbr:Università_degli_Studi_di_Torino .
  OPTIONAL { ?alumnus dbo:employer ?parentOrganization . }
}
```",3,3,4,3,1,3,2,20,0,1,2,0.0,0.0,0
433,37,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find an associated musical artist of Ornette Coleman
  ?artist1 dbo:associatedMusicalArtistOrCollaborator dbr:Ornette_Coleman .
  
  # Step 2: From that artist, find another associated musical artist who is both an artist and a musician
  ?artist1 dbo:associatedMusicalArtistOrCollaborator ?intermediateArtist .
  ?intermediateArtist rdf:type dbo:Musician .
  ?intermediateArtist rdf:type dbo:Artist .

  # Step 3: From the second artist, find another associated musical artist who is both a musician and an artist
  ?intermediateArtist dbo:associatedMusicalArtistOrCollaborator ?finalArtist .
  ?finalArtist rdf:type dbo:Musician .
  ?finalArtist rdf:type dbo:Artist .
}
```",4,8,5,3,2,3,3,71,0,0,38,0,0.0,0
5,1,train,Give me the entity in Canada.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Canada .
}
```",1,1,2,1,1,3,2,20,18560,0,0,1.0,1.0,1.0
170,6,train,Give me the birth place of Era Ziganshina and entity in Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
SELECT ?birthPlace ?birthPlaceLabel WHERE {
  wd:QXXXXX dbo:birthPlace ?birthPlace .
  ?birthPlace wdt:P31/wdt:P279* wd:Q6256 . # Q6256 is the entity type for a city in Russia
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""en"". }
}
```

Note: Replace `wd:QXXXXX` with the actual DBpedia identifier for Era Ziganshina.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
892,18,train,Give me the entity in Province of Reggio Emilia and landmark at elevation of 58 and entity in Italy.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?name WHERE {
  ?entity a dbo:Place .
  ?entity dbo:location dbr:Province_of_Reggio_Emilia .
  OPTIONAL { ?entity geo:elevation ?elevation . FILTER(?elevation = ""58""^^xsd:float) }
  ?entity dbp:country dbr:Italy .
  ?entity rdfs:label ?name .
  FILTER(LANG(?name) = 'en')
}
```

### Explanation:

- **PREFIX**: We define prefixes for common namespaces used in DBpedia.
- **SELECT**: We select the entity and its name.
- **?entity a dbo:Place**: Ensures that we are querying geographical places.
- **dbo:location dbr:Province_of_Reggio_Emilia**: Filters entities located in the Province of Reggio Emilia.
- **geo:elevation ?elevation . FILTER(?elevation = ""58""^^xsd:float)**: Checks if the elevation is 58 meters. The `OPTIONAL` keyword ensures that even if elevation data is missing, other conditions can still be checked.
- **dbp:country dbr:Italy**: Ensures the entity is in Italy.
- **rdfs:label ?name . FILTER(LANG(?name) = 'en')**: Retrieves the English label of the entity.

This query assumes that DBpedia has structured data for these properties and that elevation data is available. Adjustments might be necessary based on actual data availability and structure in DBpedia.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
579,12,train,"Give me the native of Edinburgh and person born as the birth name of Jane Percy, Duchess of Northumberland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
SELECT ?nativeOfEdinburgh ?birthName
WHERE {
  # Find native of Edinburgh (assuming Sir Walter Scott)
  ?person dbo:nativePlace dbr:Edinburgh .
  ?person rdfs:label ""Sir Walter Scott""@en .

  # Find Jane Percy, Duchess of Northumberland by birth name
  ?duchess foaf:name ""Jane Percy, Duchess of Northumberland""@en ;
           dbp:birthName ?birthName .
  
  FILTER(?birthName = ""Jane Douglas-Hamilton"")
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
459,13,train,"Give me the governor of Dana Murphy and governor of the death place, that is a settlement, of Cliff Roquemore.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorDanaMurphy ?governorDeathPlace
WHERE {
  # Find Dana Murphy's state and its governor
  ?danaMurphy dbo:nationality dbr:United_States .
  ?danaMurphy dbo:stateOrProvince dbr:StateX . # Replace StateX with the actual resource for the state if known

  OPTIONAL { 
    ?governorDanaMurphy dbo:officeHolder dbr:GovernorOfStateX . # Replace GovernorOfStateX with the actual governor's DBpedia page
    ?governorDanaMurphy dbo:positionTitle ""Governor""@en .
  }

  # Find Cliff Roquemore's death place and its state/governor
  ?cliffRoquemore dbo:nationality dbr:United_States .
  ?cliffRoquemore dbo:deathPlace ?deathPlace .

  FILTER (dbo:Settlement ?deathPlace) # Ensure the death place is a settlement

  OPTIONAL {
    ?deathPlace dbo:stateOrProvince dbr:StateY . # Replace StateY with the actual resource for the state if known
    ?governorDeathPlace dbo:officeHolder dbr:GovernorOfStateY . # Replace GovernorOfStateY with the actual governor's DBpedia page
    ?governorDeathPlace dbo:positionTitle ""Governor""@en .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
170,2,train,Give me the domain of Mayor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?class WHERE {
  ?property rdfs:domain ?class .
  FILTER(STRSTARTS(LCASE(?property), LCASE(""mayor"")))
}
```",1,1,2,1,1,2,3,28,0,0,39395,0,0.0,0
773,25,train,"Give me the parent of Carloman of Bavaria and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfCarloman ?royalChild ?parentOfRoyalChild
WHERE {
  dbr:Carloman_of_Bavaria dbo:fatherOrMother ?parentOfCarloman .

  dbr:Louis_the_German dbo:child ?royalChild .
  
  ?royalChild rdf:type dbo:Monarch .

  ?royalChild dbo:fatherOrMother ?parentOfRoyalChild .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
98,11,train,"Give me the entity in the region, that is a country, of Philippine Standard Time.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?timeZone a dbo:TimeZone ;
            dbo:timezoneName ""Philippine Standard Time"" .
  ?region dbo:timeZone ?timeZone ;
          dbo:country ?country .
}
```",2,3,3,2,1,2,3,28,0,0,5332,0,0.0,0
892,22,train,"Give me the entity in Italy and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region ?settlement WHERE {
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          rdfs:label ?regionLabel .
  
  FILTER (lang(?regionLabel) = 'it' && contains(lcase(str(?regionLabel)), ""regione""))

  ?settlement a dbo:Settlement ;
              dbo:locatedInCountry dbr:Italy ;
              dbo:administrativeRegion ?region ;
              rdfs:label ?settlementLabel .
  
  FILTER (lang(?settlementLabel) = 'it' && contains(lcase(str(?settlementLabel)), ""comune""))

  OPTIONAL {
    ?party a dbo:PoliticalParty ;
           dbp:name dbr:Democratic_Party_(Italy) ;
           dbo:member ?person .
    
    ?person dbo:residence ?region .
  }
}
ORDER BY ?region
```

This query does the following:
- Selects regions in Italy that are labeled as ""regione"" in Italian.
- Finds settlements within these regions, ensuring they are labeled as ""comune"".
- Optionally checks for a connection to the Democratic Party through members residing in these regions.",3,7,4,2,2,3,3,71,0,0,587,0,0.0,0
987,12,train,Give me the birth place of Moamer Kasumović and entity in Montenegro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceLabel WHERE {
  VALUES ?person { dbr:Mohamed_Gaddafi }
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER (lang(?birthPlaceLabel) = ""en"")
  
  OPTIONAL {
    ?birthPlace dbo:country dbr:Montenegro .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
216,19,train,Give me the player in the coach of Croatia national under-21 football team and player in Mario Ivanković.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v0 . ?v0 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Find coaches of the Croatia national under-21 football team
  ?coach dbo:team dbr:Croatia_national_under-21_football_team .
  
  # Find players coached by Mario Ivanković
  ?player dbo:coach dbr:Mario_Ivanković .

  # Ensure the player is also associated with a coach of the under-21 team
  ?player dbo:coach ?coach .
}
```",3,3,4,2,2,3,3,71,0,2,3,0.0,0.0,0
166,0,train,Give me the resting place of Gonzalo Queipo de Llano.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gonzalo_Queipo_de_Llano> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace WHERE {
  dbr:Gonzalo_Queipo_de_Llano dbo:placeOfBurial ?burialPlace .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
573,10,train,Give me the person decedent at Massachusetts and parent of John Quincy Adams.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person dbo:spouse ?spouse .
  ?person dbo:child dbr:John_Quincy_Adams .
  ?person dbo:birthPlace dbr:Massachusetts .
  FILTER EXISTS { ?person rdfs:label ""John Adams""@en }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
453,1,train,Give me the religion of John Henry Newman.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Henry_Newman> <http://dbpedia.org/ontology/religion> ?result . },"```sparql
SELECT ?religion WHERE {
  wd:Q1033 dbo:religion ?religion .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
874,11,train,"Give me the band of Robert Hart (musician) and band of the writer, that is an artist and a musical artist, of Mezzanine (album).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Robert_Hart_(musician)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?robertHartsBand ?mezzanineWriter ?writersBand 
WHERE {
  # Robert Hart's band
  ?robertHart a dbo:Musician ;
              foaf:name ""Robert Hart""@en .
  ?robertHart dbo:bandMemberOf ?robertHartsBand .

  # Mezzanine album writer (artist)
  dbr:Mezzanine dbo:creator ?mezzanineWriter .
  
  # Check if the writer is also a musical artist
  OPTIONAL {
    ?mezzanineWriter a dbo:MusicalArtist ;
                     dbo:bandMemberOf ?writersBand .
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
791,35,train,"Give me the father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Identify Emperor Takakura and his spouse
  dbr:Takakura_of_Japan a dbo:Monarch ;
                        dbo:spouse ?spouse .
  
  # Ensure the spouse is royalty
  ?spouse a dbo:RoyalFamilyMember .

  # Find their children who are royalty
  ?child dbo:parent dbr:Takakura_of_Japan ;
         dbo:parent ?spouse ;
         a dbo:RoyalFamilyMember .

  # Get the father of one such child (Emperor Takakura)
  ?father dbo:child ?child .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
124,4,train,"Give me the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?unit a dbo:MilitaryUnit ;
        rdfs:label ""A Field Battery, Royal Australian Artillery""@en .
  
  ?event dbo:participatedIn ?unit ;
         a (dbo:SocietalEvent | dbo:MilitaryConflict) .

  ?event rdfs:label ?war .
}
```",1,3,2,1,1,3,3,71,0,0,6,0,0.0,0
443,4,train,"Who is the person born, that is a musical artist and an artist, on 1949-11-20?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthDate ""1949-11-20""^^xsd:date .
  ?person dbo:occupation dbr:Musical_artist .
  ?person dbo:occupation dbr:Artist .
}
```",1,3,2,1,1,2,3,28,0,0,2,0,0.0,0
158,10,train,"Who is the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15?","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  ?deceased a dbo:Politician ;
            dbo:officeHolderOf ?office ;
            dbo:dateOfBirth ?dob ;
            dbo:dateOfDeath ?dod .
  
  FILTER (YEAR(?dod) = 1945 && MONTH(?dod) = 9 && DAY(?dod) = 15)

  ?successor a dbo:PrimeMinister, dbo:Politician, dbo:OfficeHolder ;
             dbo:predecessor ?deceased .

}",2,7,3,2,1,3,2,20,0,0,1,0,0.0,0
791,32,train,"Give me the predecessor of the child of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  VALUES ?emperorTakakura { dbr:Takakura }

  ?child dbo:parent ?emperorTakakura .
  
  ?predecessor dbo:child ?child .

  ?predecessor rdf:type dbo:Monarch .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
933,15,train,"Who is the band of the band, that is an artist and a musical artist, of The Ramong Sound?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  ?artist a dbo:MusicalArtist ;
          dbo:name ""The Ramones"" .
  ?artist dbo:band ?band .
}
```",2,4,3,2,1,3,3,71,0,0,16,0,0.0,0
892,28,train,Give me the entity in the profession of Henri Crolla and landmark at elevation of 58 and entity in Province of Reggio Emilia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?landmark ?entityInReggioEmilia WHERE {
  # Profession of Henri Crolla
  OPTIONAL { 
    dbr:Henri_Crolla dbo:occupation ?profession .
  }

  # Landmark at elevation of 58 meters
  OPTIONAL {
    ?landmark a dbo:Lighthouse ;
              dbo:elevationAboveSeaLevel ""58""^^xsd:decimal .
  }

  # Entity in Province of Reggio Emilia
  OPTIONAL {
    ?entityInReggioEmilia dbo:locatedIn dbr:Province_of_Reggio_Emilia .
  }
}
```",4,4,5,2,3,3,3,71,0,1,1,0.0,0.0,0
573,21,train,"Give me the parent of John Quincy Adams and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?region
WHERE {
  # Find John Quincy Adams' parent who was an administrator of a region
  ?adamsParent dbo:child dbr:John_Quincy_Adams .
  ?adamsParent dbo:officeHolder ?administration .

  # Ensure the administration is related to a region
  ?administration dbo:administrativeRegion ?region .

  # Find Charlie Baker's administrative region
  ?bakerAdministration dbo:officeHolder dbr:Charlie_Baker .
  ?bakerAdministration dbo:administrativeRegion ?sameRegion .

  FILTER (?region = ?sameRegion)
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
124,6,train,"Give me the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find Frank Rhodes as a British Army officer
  ?frankRhodes a dbo:MilitaryPerson ;
               foaf:name ""Frank Rhodes"" ;
               dbo:nationality dbr:United_Kingdom ;
               dbo:militaryBranch dbr:British_Army .

  # Identify wars he was involved in
  ?war a dbo:War ;
      dbo:participatingMilitaryPersonal ?frankRhodes .
  
  # Ensure the war is also classified as a military conflict and societal event
  ?war rdf:type dbo:MilitaryConflict, dbo:SocietalEvent .
}
```",1,4,2,1,1,3,3,71,0,0,7,0,0.0,0
98,2,train,Give me the entity in Philippines.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?name WHERE {
  ?entity dbo:country dbr:Philippines .
  OPTIONAL { ?entity rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
LIMIT 100
```",1,1,2,1,1,2,3,28,100,100,5214,0.5,0.01881821603312006,0.03627130939426913
965,29,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # George Mountbatten, 2nd Marquess of Milford Haven's parent
  ?george a dbo:Person ;
          dbp:fatherOrMother ?parent .

  # Prince Louis of Battenberg and his spouse
  ?princeLouis a dbo:Person ;
               dbp:spouse ?spouse .
  
  FILTER(?princeLouis = <http://dbpedia.org/resource/Prince_Louis_of_Battenberg>)

  # Check if the parent is also a royalty and spouse of Prince Louis
  ?parent a dbo:RoyalFamilyMember ;
          dbp:spouse ?princeLouis .

  # Ensure the child of Prince Louis is royal
  ?child dbp:fatherOrMother ?princeLouis .
  ?child a dbo:RoyalFamilyMember .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
445,34,train,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in United Kingdom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/location> ?v1 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?athlete dbo:nationality dbr:United_Kingdom ;
           a dbo:Athlete .
  
  ?athlete dbo:residence ?residence .

  ?residence dbo:country dbr:United_Kingdom .

  ?residence dbo:location ?entity .

  FILTER (?entity a dbo:Country)
}
```",4,6,5,3,2,3,3,71,0,0,102,0,0.0,0
274,12,train,Give me the professional in  and band member of Dizzy Gillespie and associated musical artist of Cecil Taylor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalInDizzyGillespie ?bandMemberOfDizzyGillespie ?associatedArtistCecilTaylor
WHERE {
  # Find the professional in and band member of Dizzy Gillespie
  ?dizzyGillespie dbo:profession ?professionalInDizzyGillespie .
  ?dizzyGillespie dbp:member ?bandMemberOfDizzyGillespie .

  FILTER (str(?dizzyGillespie) = ""Dizzy_Gillespie"")

  # Find the associated musical artist of Cecil Taylor
  ?cecilTaylor dbo:associatedMusicalArtist ?associatedArtistCecilTaylor .
  
  FILTER (str(?cecilTaylor) = ""Cecil_Taylor"")
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
124,24,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and military force of Battle of Atbara.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 WHERE {
  # Find the war associated with Frank Rhodes
  ?frankRhodes a dbo:MilitaryPerson ;
               foaf:name ""Frank Rhodes"" ;
               dbo:servedInMilitaryOrganization ?organization .
  
  ?war dbo:participatedIn ?organization ;
       a dbo:MilitaryConflict .

  # Get military forces involved in the war associated with Frank Rhodes
  ?war dbo:militaryForce ?militaryForce1 .

  # Find the Battle of Atbara and its military force
  dbr:Battle_of_Atbara dbo:militaryForce ?militaryForce2 ;
                       a dbo:MilitaryConflict .
}
```",3,6,4,2,2,3,3,71,0,0,7,0,0.0,0
508,11,train,"Give me the birthplace of the commander, that is a politician, in 1939–1940 Winter Offensive and birthplace of Ma Bufang.",SELECT ?result WHERE { <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ma_Bufang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
# Query for Semyon Timoshenko's birthplace
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Semyon_Timoshenko dbo:birthPlace ?birthPlace .
}

# Query for Ma Bufang's birthplace
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Ma_Bufang dbo:birthPlace ?birthPlace .
}
```",3,4,4,2,2,3,2,20,0,0,3,0,0.0,0
965,9,train,Give me the parent of Louise Mountbatten and spouse of Prince Louis of Battenberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?spouse WHERE {
  # Louise Mountbatten details
  ?louise a dbo:Person ;
          dbp:name ""Louise Mountbatten""@en ;
          dbo:parent ?parent .

  # Prince Louis of Battenberg details
  ?prince a dbo:Person ;
          dbp:name ""Prince Louis of Battenberg""@en ;
          dbo:spouse ?spouse .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
495,4,train,Give me the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?princess { dbr:Princess_Pauline_of_Württemberg }
  ?princess dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
978,3,train,"Who is the professional, that is a musical artist and an artist, in ?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person dbo:occupation dbp:musicalArtist .
  ?person dbo:occupation dbp:artist .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
```",1,3,2,1,1,3,2,20,0,0,8677,0,0.0,0
365,9,train,"Give me the birth name of the commander, that is an office holder, in Ukrainian–Soviet War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation dbr:Commander_in_the_Ukrainian_Soviet_War .
  ?person dbo:officeHolderOf dbr:Ukraine .
  ?person foaf:name ""Symon Petliura""@en .
  ?person foaf:mbox ?email . # To ensure we are querying a specific person
  OPTIONAL { ?person foaf:givenName ?birthName }
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
892,32,train,Give me the entity in the profession of Henri Crolla and landmark at elevation of the award of Anna Ishii.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession (SAMPLE(?landmark) AS ?landmarkAtElevation)
WHERE {
  # Part 1: Profession of Henri Crolla
  OPTIONAL {
    dbr:Henri_Crolla dbo:occupation ?profession .
  }

  # Part 2: Elevation of Award Received by Anna Ishii
  OPTIONAL {
    dbr:Anna_Ishii dbo:award ?award .
    ?award dbo:elevation ?elevation .
    
    # Find a landmark at the same elevation
    ?landmark dbo:elevation ?sameElevation .
    FILTER(?elevation = ?sameElevation)
  }
}
```

This query uses optional patterns to ensure that if either part of the question cannot be answered (due to missing data), it will still return whatever information is available. The `SAMPLE` function is used to select one landmark at random in case there are multiple landmarks at the same elevation.",4,4,5,2,2,3,3,71,0,0,11,0,0.0,0
456,17,train,"Give me the band, that is a musical artist, of the band of Alan Doyle.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:member ?band .
  ?band a dbo:MusicalArtist .
  ?person foaf:name ""Alan Doyle""@en .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
216,26,train,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/coach> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coach ?club
WHERE {
  # Džemal Berberović as a player
  dbr:Džemal_Berberović dbo:playerFor ?team .
  
  # The team is an organization, sports club, and soccer club
  ?team rdf:type dbo:SportsClub ;
        rdf:type dbo:SoccerClub .

  # Coach of the team who is also a player, sports manager, and soccer manager
  ?team dbo:coach ?coach .
  ?coach rdf:type dbo:SoccerPlayer ;
         rdf:type dbo:SportsManager ;
         rdf:type dbo:SoccerManager .
  
  # Return the coach and club (team)
  BIND(?team AS ?club)
}
```",3,9,4,3,1,3,3,71,0,0,24,0,0.0,0
645,14,train,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Find Camilo Menéndez Tolosa
  ?person a dbo:Person ;
          foaf:name ""Camilo Menéndez Tolosa"" .

  # Find the office he is associated with
  ?office dbo:member ?person ;
          a (dbo:GovernmentAgency | dbo:Organization) .

  # Retrieve the leader of that office
  ?office dbo:leader ?leader .
}
```

This query does the following:
- Searches for a person named ""Camilo Menéndez Tolosa"".
- Identifies any government agency or organization (`dbo:GovernmentAgency` or `dbo:Organization`) where he is a member.
- Retrieves the leader of that office.",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
98,13,train,Give me the birth place of Paolo Ballesteros and region of the time zone of Lopez Jaena.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?region
WHERE {
  # Get birthplace of Paolo Ballesteros
  dbr:Paolo_Ballesteros dbo:birthPlace ?birthPlace .

  # Get time zone for Lopez Jaena and then find the region associated with that time zone
  dbr:Lopez_Jaena dbo:timeZone ?timeZone .
  ?timeZone dbo:region ?region .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
216,8,train,Give me the office of the mayor of Ros Bates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person dbo:office ?office .
  ?person foaf:name ""Ros Bates""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",2,2,3,2,1,2,3,28,0,0,30,0,0.0,0
579,2,train,Give me the resident of Scotland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?resident WHERE {
  ?resident dbo:birthPlace dbr:Scotland .
  FILTER NOT EXISTS { ?resident dbo:deathPlace ?place }
}
```",1,1,2,1,1,3,2,20,17,1518,18,0.011074918566775244,0.4857142857142857,0.021656050955414015
645,30,train,"Give me the military force of Spanish Civil War and commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?commander ?leader
WHERE {
  # Military forces in the Spanish Civil War
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:partOfMilitaryConflict dbr:Spanish_Civil_War .

  OPTIONAL {
    # Commander of the Battle of Jarama
    ?battle dbo:commander ?commander .
    FILTER (str(?battle) = ""Battle_of_Jarama"")
  }

  OPTIONAL {
    # Leader of an office or government agency associated with Camilo Menéndez Tolosa
    ?office a dbo:GovernmentAgency ;
            dbo:leader ?leader .
    ?camilo dbo:occupation ?office .
    FILTER (str(?camilo) = ""Camilo_Menéndez_Tolosa"")
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
554,14,train,"Give me the leader of the birth place of the band, that is an artist, of Rita Redshoes.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader WHERE {
  # Step 1: Find the band associated with Rita Redshoes
  ?band dbo:associatedBand dbr:Rita_Redshoes .

  # Step 2: Get the birthplace of this band
  ?band dbp:birthPlace ?birthPlace .

  # Step 3: Find a notable leader or figure in this place
  ?leader dbo:notableFor ?notableThing .
  ?notableThing dbo:location dbr:?birthPlace .
  
  # Filter to ensure the leader is an artist (optional, depending on DBpedia data)
  ?leader rdf:type dbo:Artist .
}
```",3,4,4,3,1,3,2,20,0,0,3,0,0.0,0
606,6,train,Give me the figure known as Barb City and birthplace of Charles I. Barber.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . <http://dbpedia.org/resource/Charles_I._Barber> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?barbCity WHERE {
  ?person a dbo:Person ;
          foaf:name ""Charles I. Barber""@en ;
          dbo:birthPlace ?barbCity .
  
  FILTER (str(?barbCity) = str(dbr:Barb_City))
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
933,26,train,Give me the reference to the birth name of the professional in Musician.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?musician ?givenName ?familyName WHERE {
  ?musician a dbo:MusicArtist .
  OPTIONAL { ?musician foaf:givenName ?givenName . }
  OPTIONAL { ?musician foaf:familyName ?familyName . }
}
```",3,3,4,3,1,3,3,71,0,0,364,0,0.0,0
166,11,train,Give me the entity in Spain and resting place of the military force of Spanish Civil War.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?restingPlace WHERE {
  ?entity a dbo:MilitaryUnit ;
          dbo:country dbr:Spain ;
          dbo:member ?person .
  
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  
  FILTER (CONTAINS(LCASE(?entity), ""civil war""))
}
ORDER BY ?entity
LIMIT 10",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
508,8,train,"Give me the birthplace of the commander, that is Saudi, in Central Plains War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:nationality dbr:Saudi_Arabia .
  ?person dbo:occupation dbr:Military_officer .
  ?person dbo:wikiPageDisambiguates ?disambiguation .
  ?disambiguation rdfs:label ""Central Plains War""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
267,1,train,Give me the person born on 1953-03-01.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1953-03-01""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthday ?birthday .
  FILTER (YEAR(?birthday) = ""1953"" && MONTH(?birthday) = ""03"" && DAY(?birthday) = ""01"")
}
```",1,1,2,1,1,3,2,20,0,0,35,0,0.0,0
892,26,train,Give me the landmark at elevation of the award of the member of E-girls.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Find members of E-girls
  ?member dbo:memberOf dbr:E-girls .
  
  # Find awards received by these members
  ?award dbo:recipient ?member .
  
  # Assume there's a property linking an award to elevation (hypothetical)
  ?award dbo:elevation ?elevation .
  
  # Find landmarks at this elevation
  ?landmark dbo:elevation ?elevation .
}
```

This query assumes the existence of certain properties (`memberOf`, `recipient`, `elevation`) which may need adjustment based on actual DBpedia schema. The concept of ""elevation"" linked to awards is hypothetical and might not directly exist in DBpedia, so this query serves as a conceptual framework.",3,3,4,3,1,3,3,71,0,0,258,0,0.0,0
130,11,train,"Give me the entity in Tennessee and figure known as the film, that is a soccer club and an organisation, of Candice Storey Lee.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . ?v2 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Tennessee> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?entity a dbo:SoccerClub ;
          dbo:location dbr:Tennessee ;
          dbo:director ?director .
  
  OPTIONAL { ?entity dbo:filmTitle ?film . }
  OPTIONAL { ?entity dbo:organizationType ?orgType . }

  ?director foaf:name ""Candice Storey Lee"" .

  FILTER EXISTS { ?entity dbo:filmTitle ?film } .
  FILTER EXISTS { ?entity dbo:organizationType ?orgType } .
}
```

This query does the following:
- Selects entities that are soccer clubs located in Tennessee.
- Checks if these entities have a director named Candice Storey Lee.
- Ensures the entity is also associated with a film title and an organization type.

Note: The exact properties like `dbo:filmTitle` or `dbo:organizationType` might need adjustment based on DBpedia's schema, as they are hypothetical in this context. You may need to refine these based on actual available properties in DBpedia.",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
791,29,train,Give me the father of Emperor Go-Toba and predecessor of the child of Emperor Takakura and spouse of Taira no Tokuko.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Find Emperor Go-Toba and his father
  dbr:Emperor_Go-Toba dbo:father ?father .
  
  # Find Emperor Takakura's child with Taira no Tokuko (Emperor Antoku)
  ?child dbo:parent dbr:Taira_no_Tokuko ;
         dbo:parent ?father .

  # Ensure the predecessor of this child is the same as Go-Toba's father
  ?predecessor dbo:succeededBy ?child .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
976,7,train,Give me the birth name of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:Q1234568 foaf:name ""Naci Bostancı""@en .
  OPTIONAL { wd:Q1234568 schema:birthName ?birthName . }
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia resource identifier for Naci Bostancı if it is known. You can find this by searching DBpedia or using a SPARQL endpoint to query for entities named ""Naci Bostancı"".",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
976,38,train,"Give me the office of the person born as Mehmet Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person a dbo:Politician ;
          dbo:birthName ""Mehmet Naci Bostancı"" ;
          dbo:nationality dbr:Turkey .
  
  OPTIONAL { ?person dbo:memberOfParty dbr:Nation_Alliance_(Turkey) . }
  
  ?office dbo:heldBy ?person ;
          a dbo:PoliticalOffice .

  FILTER EXISTS {
    ?office dbp:name ?name .
    FILTER (CONTAINS(LCASE(?name), ""mayor"") || CONTAINS(LCASE(?name), ""politician""))
  }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
645,13,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Identify Francisco Largo Caballero's DBpedia resource
  VALUES ?franciscoLargoCaballero { dbr:Francisco_Largo_Caballero }

  # Find events, military conflicts, and societal events associated with him
  ?event dbo:agent ?franciscoLargoCaballero .
  
  OPTIONAL {
    ?event a ?eventType .
    FILTER (
      ?eventType IN (dbr:Event, dbr:Military_Conflict, dbr:Societal_Event)
    )
  }

  # Look for military forces involved in these events
  ?event dbo:participatedInMilitaryConflict ?militaryConflict .
  ?militaryConflict dbo:militaryForce ?militaryForce .

}
```",2,5,3,2,1,3,3,71,0,0,514,0,0.0,0
976,27,train,Give me the office of the person born as the birth name of Naci Bostancı.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  # Step 1: Get the birth name of Naci Bostancı
  dbr:Naci_Bostancı dbo:birthName ?birthName .

  # Step 2: Find individuals with that birth name
  ?person dbp:birthName ?birthName .
  
  # Step 3: Check if they hold an office
  OPTIONAL { ?person dbo:office ?office . }
}
```

This query does the following:
- Retrieves the birth name of Naci Bostancı.
- Searches for any individuals with that same birth name.
- Checks if those individuals have an associated office.",3,3,4,3,1,3,3,71,0,0,4,0,0.0,0
365,0,train,Give me the person born as Symon Vasylyovych Petliura.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Symon Vasylyovych Petliura""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthName WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
  OPTIONAL { ?person dbo:birthName ?birthName . FILTER (lang(?birthName) = 'und' || lang(?birthName) = 'uk') }
  FILTER regex(?birthName, ""Symon Vasylyovych Petliura"", ""i"")
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
216,8,train,"Give me the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:SoccerManager ;
          a dbo:SportsAgent ;
          a dbo:SoccerPlayer .
  ?person dbo:birthDate ""1983-12-20""^^xsd:date .
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
329,18,train,"Give me the entity in United Kingdom and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthplace WHERE {
  # Find Robert Bates (loyalist)
  ?robert a dbo:Person ;
          rdfs:label ""Robert Bates (loyalist)""@en .
  
  # Get his birthplace
  ?robert dbo:birthPlace ?birthplace .

  # Ensure the birthplace is in the United Kingdom
  ?birthplace dbo:country dbr:United_Kingdom .

  # Check if the birthplace is both an organization and a country
  ?birthplace rdf:type dbo:Organisation ;
              rdf:type dbo:Country .
}
```",3,5,4,2,2,2,3,28,0,0,531,0,0.0,0
329,6,train,Give me the entity in United Kingdom and birthplace of Eric Cross (writer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Writer ;
          foaf:name ""Eric Cross"" ;
          dbo:birthPlace ?birthPlace .
  
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_Kingdom .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
826,6,train,"Who is the child, that is a royalty, of Louis I, Grand Duke of Hesse?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?title WHERE {
  # Define Louis I, Grand Duke of Hesse
  VALUES ?parent { dbr:Ludwig_I,_Grand_Duke_of_Hesse }

  # Find children who are royalty
  ?child dbo:parent ?parent .
  ?child dbo:title ?title .

  # Filter for royal titles (this is a simplification; you might need to refine the list)
  FILTER (
    str(?title) CONTAINS ""King"" ||
    str(?title) CONTAINS ""Queen"" ||
    str(?title) CONTAINS ""Prince"" ||
    str(?title) CONTAINS ""Princess"" ||
    str(?title) CONTAINS ""Duke"" ||
    str(?title) CONTAINS ""Grand Duke""
  )
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
459,17,train,"Give me the governor of the administration, that is a politician, of Brad Henry and person born as John Kevin Stitt.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/governor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor WHERE {
  # Brad Henry was Governor of Oklahoma
  dbr:Brad_Henry dbo:governmentRole dbr:Governor_of_Oklahoma .
  
  # Kevin Stitt is the current Governor of Oklahoma
  dbr:Kevin_Stitt dbo:governmentRole dbr:Governor_of_Oklahoma .

  # Find the governor who succeeded Brad Henry and preceded Kevin Stitt
  ?governor dbo:successor dbr:Brad_Henry .
  ?governor dbo:predecessor dbr:Kevin_Stitt .
}
```

This query assumes that DBpedia has structured data about governors, their roles, and the succession of these roles. It looks for a governor who succeeded Brad Henry and preceded Kevin Stitt.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
417,3,train,"Who is the child of Knud, Hereditary Prince of Denmark?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  db:Knud_Hereditary_Prince_of_Denmark dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
839,32,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of Böhse Onkelz.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person1Band ?person2Name ?person2Band 
WHERE {
  # Find Kevin Richard Russell and his band
  ?kevin a dbo:MusicalArtist ;
         foaf:name ""Kevin Richard Russell"" .
  ?kevin dbo:bandMemberOf ?person1Band .

  # Find a member of Böhse Onkelz and their band
  ?boehseOnkelz a dbo:Band ;
                foaf:name ""Böhse Onkelz"" .
  ?member dbo:bandMemberOf ?boehseOnkelz ;
          foaf:name ?person2Name .
  OPTIONAL { ?member dbo:bandMemberOf ?person2Band . }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
36,3,train,"Give me the claim to fame, that is a film, of Lepacious Bose.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?person dbo:birthName ""Leopold Anthony Bose""@en .
  ?person dbo:profession dbr:Actor .
  ?film dbo:starring ?person .
  FILTER (LANG(?film) = 'en')
}
ORDER BY DESC(COUNT(?film))
LIMIT 1
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
965,26,train,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?politician a dbo:Politician ;
              dbo:birthDate ""1854-05-24""^^xsd:date ;
              dbo:child ?royalChild .
  
  ?royalChild a dbo:Monarch ; # or another appropriate class for royalty
              dbo:parent ?parent .

  FILTER EXISTS { ?politician rdf:type dbo:Politician }
  FILTER EXISTS { ?royalChild rdf:type dbo:Monarch } # or another appropriate class for royalty
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
955,8,train,"Give me the band of the band member, that is a musical artist and an artist, of Street Dogs.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Find members of Street Dogs
  ?member dbo:musicalArtist dbr:Street_Dogs .
  
  # Ensure the member is also recognized as an artist
  ?member a dbo:MusicalArtist ;
          a dbo:Artist .

  # Find other bands that this member is part of
  ?member dbo:musicalArtist ?band .
  
  FILTER(?band != dbr:Street_Dogs)
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
445,13,train,Give me the death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  ?person dbo:awardReceived dbr:Royal_Astronomical_Society .
  ?person dbo:deathPlace ?deathPlace .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
933,22,train,"Give me the band of Mike Elliott (saxophonist) and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mikeBand ?alanBand ?organization WHERE {
  # Find Mike Elliott and his band
  ?mike a dbo:Saxophonist ;
        foaf:name ""Mike Elliott"" ;
        dbp:band ?mikeBand .

  # Find Alan Warner and his band
  ?alan a dbo:Musician ;
        foaf:name ""Alan Warner"" ;
        dbp:band ?alanBand .

  # Ensure the band of Alan Warner is also an organization
  ?alanBand a dbo:MusicalGroup, dbo:Organization .
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
267,6,train,Give me the person born on 1953-03-01 and coach of Iran national football team.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1953-03-01""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Iran_national_football_team> <http://dbpedia.org/ontology/coach> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1953 && MONTH(?date) = 3 && DAY(?date) = 1)
  ?person dbo:coachTeam <http://dbpedia.org/resource/Iran_national_football_team> .
  OPTIONAL { ?person foaf:name ?name }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
582,33,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to Japan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Find Kazuaki Nagasawa's child
  ?child dbo:parent dbr:Kazuaki_Nagasawa .
  
  # Determine the father of this child who is an athlete, soccer manager, and sports manager
  ?father dbo:spouse ?mother . 
  ?mother dbo:child ?child .
  ?father a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .

  # Ensure there's a reference to Japan
  OPTIONAL { ?father dbp:nationality dbr:Japan }
  
  BIND(?father AS ?player)
}
```

This query does the following:
- Identifies Kazuaki Nagasawa's child using the `dbo:parent` property.
- Finds the father of this child who is an athlete, soccer manager, and sports manager by checking their types (`a dbo:Athlete`, etc.).
- Optionally checks for a reference to Japan through nationality.",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
273,1,train,Give me the parent of Gianni Agnelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gianni_Agnelli> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person dbp:name ""Gianni Agnelli""@en .
  ?person dbo:spouse ?spouse .
  OPTIONAL { ?spouse dbo:child ?child . }
  FILTER(?child = ?person)
  ?spouse dbo:child ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
976,20,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of Mustafa Şentop.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayor ?office WHERE {
  ?mayor a dbo:Mayor ;
         dbo:nationality dbr:Turkey ;
         dbo:politicalParty dbr:Nation_Alliance_(Turkey) .
  
  OPTIONAL { ?mayor dbo:occupation dbr:Politician . }
  OPTIONAL { ?mayor dbo:occupation dbr:Office_holder . }

  ?officeHolder a dbo:SpeakerOfTheGrandNationalAssembly ;
               dbp:name ""Mustafa Şentop"" .

  FILTER EXISTS {
    ?mayor dbo:office ?similarOffice .
    ?similarOffice rdfs:label ?officeLabel .
    FILTER(CONTAINS(LCASE(?officeLabel), LCASE(""speaker of the grand national assembly"")))
  }

  BIND(CONCAT(""Mayor "", STR(?mayor)) AS ?office)
}
ORDER BY ?mayor
LIMIT 1",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
326,10,train,"Give me the award, that is a country, of the awardee of French Legion of Honor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/awards> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardCountry
WHERE {
  # Find individuals who have received the French Legion of Honor
  ?person dbo:recipientOf dbr:French_Legion_of_Honor .
  
  # Check if these individuals have received any awards that are countries
  ?person dbo:recipientOf ?award .
  ?award a dbo:Award ;
         rdfs:label ?awardLabel .

  # Filter to find only those awards which are also countries
  OPTIONAL { ?award dbr:Category:Countries . }
  
  FILTER (CONTAINS(LCASE(?awardLabel), ""country""))
}
```

This query does the following:
- It selects individuals (`?person`) who have received the French Legion of Honor.
- For each such individual, it checks if they have received any other awards (`?award`).
- It filters these awards to find those that are categorized as countries or have a label containing ""country"".",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
554,1,train,Give me the leader of Portuguese Mozambique.,SELECT ?result WHERE { <http://dbpedia.org/resource/Portuguese_Mozambique> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?position WHERE {
  ?governor a dbo:Governor ;
            dbo:country dbr:Mozambique ;
            dbo:officeHolder ?leader .
  
  OPTIONAL { 
    ?leader dbo:occupation ?position .
  }
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
715,0,train,Give me the commander in Rif War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war dbo:location dbr:Rif_(region) .
  ?war dbo:participatedInMilitaryConflict ?conflict .
  ?conflict dbo:commander ?commander .
  FILTER(CONTAINS(LCASE(STR(?commander)), ""abd el-krim""))
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
382,9,train,"Give me the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Identify Lukas Kübler as a player
  dbr:Lukas_Kübler dbo:playerForTeam dbr:* .
  
  # Find the manager related to Lukas Kübler's team or directly
  ?team dbo:manager ?manager .

  # Ensure the manager is also an athlete and sports manager
  ?manager rdf:type dbo:SoccerManager ;
           rdf:type dbo:Athlete ;
           rdf:type dbo:SportsManager .
}
```

This query does the following:
- Identifies Lukas Kübler as a player for any team.
- Finds the manager associated with that team.
- Ensures the manager is of type Soccer Manager, Athlete, and Sports Manager.",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
417,1,train,Give me the child of Christian X of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . },"```sparql
SELECT ?child WHERE {
  wd:Q1196 wdt:P40 ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
456,15,train,"Give me the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Ross Newton as an actor in a work
  dbr:Ross_Newton dbo:role ?work .
  
  # The work is both a movie and a television show
  ?work rdf:type dbo:Film ;
        rdf:type dbo:TelevisionShow .

  # Find other actors in the same work
  ?work dbo:starring ?actor .
  
  FILTER(?actor != dbr:Ross_Newton)
}
```",2,4,3,2,1,3,3,71,0,0,29,0,0.0,0
917,15,train,"Who is the child, that is a royalty, of the mayor of Hawaiian Kingdom?",SELECT ?result WHERE { <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?mayor dbo:position ""Mayor""@en .
  ?mayor dbo:country dbr:Hawaiian_Kingdom .
  ?mayor dbo:child ?child .
  
  ?child a dbo:Monarch ;
         dbo:parent ?mayor .
}
```",2,3,3,2,1,3,3,71,0,0,8,0,0.0,0
579,7,train,"Give me the native of the residence, that is English and a settlement, of Alan Clyne.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeLanguage WHERE {
  # Find Alan Clyne's resource
  ?alanClyne a dbo:Person ;
             foaf:name ""Alan Clyne""@en .

  # Find his residence
  ?alanClyne dbo:residence ?residence .

  # Ensure the residence is a settlement and its native language is English
  ?residence a dbo:Settlement .
  ?residence dbp:nativeLanguage dbr:English_language .

  # Get the native language of the residence
  ?residence dbp:nativeLanguage ?nativeLanguage .
}
```",2,4,3,2,1,3,2,20,0,0,1711,0,0.0,0
216,20,train,"Give me the player in Igor Bišćan and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerRole ?coachRole WHERE {
  # Find Igor Bišćan
  VALUES ?igorBišćan { dbr:Igor_Bišćan }

  # Player role as a soccer player
  OPTIONAL {
    ?igorBišćan dbo:role ?playerRole .
    FILTER (strstarts(str(?playerRole), ""http://dbpedia.org/ontology/SoccerPlayer""))
  }
  
  # Coach roles as sports manager and soccer manager
  OPTIONAL {
    ?igorBišćan dbo:role ?coachRole .
    FILTER (
      strstarts(str(?coachRole), ""http://dbpedia.org/ontology/SportsManager"") ||
      strstarts(str(?coachRole), ""http://dbpedia.org/ontology/SoccerManager"")
    )
  }

  # Specific team involvement
  OPTIONAL {
    ?igorBišćan dbo:team dbr:Bosnia_and_Herzegovina_national_under-18_football_team .
  }
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
216,9,train,Give me the administration of  and party of Campbell Newman.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/property/leader> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?party 
WHERE {
  VALUES ?newman { dbr:Campbell_Newman }
  
  OPTIONAL {
    ?newman dbo:positionHeld ?position .
    ?position dbo:officeHolder ?holder .
    ?holder rdfs:label ?administration .
    FILTER (lang(?administration) = 'en')
  }

  OPTIONAL {
    ?newman dbo:partyAffiliation ?affiliation .
    ?affiliation rdfs:label ?party .
    FILTER (lang(?party) = 'en')
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
445,8,train,Give me the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""George H. Cameron""@en .
  OPTIONAL { ?person dbo:award ?award . }
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
892,21,train,Give me the entity in the profession of Henri Crolla and entity in Province of Reggio Emilia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/country> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?entityInReggioEmilia WHERE {
  # Find Henri Crolla's profession
  dbr:Henri_Crolla dbo:occupation ?profession .

  # Find an entity in the Province of Reggio Emilia
  ?entityInReggioEmilia dbo:locatedIn dbr:Province_of_Reggio_Emilia .
}
```",3,3,4,2,2,3,3,71,0,0,40,0,0.0,0
236,10,train,"Give me the administration of the reference, that is an office holder and a politician, to James Madison.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeHolder ?officeName WHERE {
  ?officeHolder a dbo:OfficeHolder .
  ?officeHolder dbo:holdsPoliticalOffice ?politicalOffice .
  ?politicalOffice dbo:president dbr:James_Madison ;
                  dbo:startDate ?startDate ;
                  dbo:endDate ?endDate .
  FILTER (?startDate <= ""1817-03-04""^^xsd:date && 
          ?endDate >= ""1809-03-04""^^xsd:date)
}
```

This query does the following:
- Selects individuals (`?officeHolder`) who are office holders.
- Checks if they held a political office (`dbo:holdsPoliticalOffice`) during James Madison's presidency.
- Filters offices based on their start and end dates to ensure they overlap with Madison's term from March 4, 1809, to March 4, 1817.",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
465,24,train,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of Renée of France.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find children of Ferdinand I, Holy Roman Emperor who are royalty
  ?child dbo:parent dbr:Ferdinand_I,_Holy_Roman_Emperor .
  ?child a dbo:Monarch .

  # Ensure the child succeeded Renée of France (assuming this means they were in line or related to her successor role)
  ?child dbo:succeededBy dbr:Renée_of_France .

  # Find spouse of that child
  ?child dbo:spouse ?spouse .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
976,15,train,"Who is the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Find the administration led by Kemal Kılıçdaroğlu
  dbr:Kemal_Kılıçdaroğlu dbo:positionHeld ?administration .
  
  # Find the leader of this administration
  ?administration dbo:leader ?leader .

  # Ensure the leader is a politician
  ?leader rdf:type dbo:Politician .
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
417,38,train,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of the father of Frederick IX of Denmark.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild WHERE {
  # Frederick Francis III and his children
  ?frederickFrancisIII a dbo:Person ;
                      foaf:name ""Frederick Francis III""@en ;
                      dbp:spouse ?spouse .
  
  ?child1 dbo:parent ?frederickFrancisIII .

  # Christian X of Denmark (father of Frederick IX)
  ?christianX a dbo:Person ;
              foaf:name ""Christian X""@en ;
              dbp:spouse ?spouse2 .

  ?child2 dbo:parent ?christianX .
  
  # The child of the child who is royalty
  ?childOfChild dbo:parent ?child1 ;
                dbo:parent ?child2 ;
                a dbo:Monarch .
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
456,18,train,Give me the spouse of Danielle Spencer (Australian actress) and professional in  and band of Alan Doyle.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?band 
WHERE {
  # Find Danielle Spencer and her spouse
  ?danielle a dbo:Actor ;
           foaf:name ""Danielle Spencer"" ;
           dbp:nationality dbc:Australian_Actors .
  
  OPTIONAL { ?danielle dbo:spouse ?spouse . }
  
  # Find Alan Doyle and his band
  ?alan a dbo:Musician ;
        foaf:name ""Alan Doyle"" .
  
  OPTIONAL { ?alan dbo:musicalBand ?band . }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
417,29,train,Give me the spouse of Princess Caroline-Mathilde of Denmark and child of the father of Frederick IX of Denmark and child of Alexandrine of Mecklenburg-Schwerin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Frederick IX's parents
  dbr:Frederick_IX_of_Denmark dbo:parent dbr:Christian_X_of_Denmark .
  dbr:Frederick_IX_of_Denmark dbo:parent dbr:Alexandrine_of_Mecklenburg-Schwerin .

  # Princess Caroline-Mathilde's spouse
  dbr:Princess_Caroline-Mathilde_of_Denmark dbo:spouse ?spouse .
}
```",4,4,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
98,9,train,Give me the birth place of Paolo Ballesteros and entity in Philippines.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace ?entityInPhilippines WHERE {
  wd:Q1234568 wdt:P19 ?birthPlace .
  OPTIONAL { 
    ?birthPlace wdt:P31/wdt:P279* wd:Q159786 . # Q159786 is the entity for ""city"" in DBpedia
  }
  FILTER (lang(?entityInPhilippines) = 'en')
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
465,9,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  dbr:Ercole_II_d%27Este,_Duke_of_Ferrara dbo:successor ?successor .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
274,2,train,Give me the associated musical artist of Cecil Taylor.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  wd:Q12345 wdt:P106 wd:Q33999 .
  OPTIONAL { wd:Q12345 wdt:P175 ?artist . }
}
```

Note: In the above query, `wd:Q12345` should be replaced with the actual DBpedia identifier for Cecil Taylor. You can find this by searching for Cecil Taylor on DBpedia or using a SPARQL endpoint to retrieve his unique identifier.",1,1,2,1,1,2,3,28,0,0,14,0,0.0,0
965,0,train,Give me the spouse of Prince Louis of Battenberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"```sparql
SELECT ?spouse WHERE {
  wd:Q11188 wdt:P26 ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
987,38,train,"Give me the birth place of the actor of All for Free and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?birthPlace WHERE {
  # Find the actor from ""All for Free""
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""All for Free""@en .

  # Get the birthplace of the actor
  ?actor dbp:birthPlace ?birthPlace .

  # Ensure the birthplace is a country in the CET region
  ?birthPlace rdf:type dbo:Country .
  ?birthPlace dbo:timeZone dbr:Central_European_Time .
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
459,3,train,"Give me the death place, that is a settlement, of Cliff Roquemore.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?person dbo:birthName ""Cliff Roquemore""@en .
  ?person dbo:deathPlace ?deathPlace .
  FILTER (isBlank(?deathPlace) || ?deathPlace a dbo:Settlement)
}
```",1,2,2,1,1,2,3,28,0,0,2,0,0.0,0
465,16,train,"Give me the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Elizabeth of Austria
  ?elizabeth a dbo:Person ;
             foaf:name ""Elizabeth of Austria"" ;
             dbo:birthYear ?birthYear .

  FILTER(?birthYear >= 1526 && ?birthYear <= 1545)

  # Identify her parent
  ?parent dbo:child ?elizabeth .

  # Find the children of that parent who are royalty
  ?parent dbo:child ?child .
  ?child a dbo:Monarch ;
         foaf:name ?name .
}
```",2,3,3,2,1,3,3,71,0,0,11,0,0.0,0
433,25,train,Give me the associated musical artist of Bill Evans and professional in the profession of Bob Marley.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Bill Evans and his associated artists
  VALUES ?billEvans { dbr:Bill_Evans }
  ?billEvans dbo:associatedMusicalArtist ?artist .

  # Bob Marley and his professional connections
  VALUES ?bobMarley { dbr:Bob_Marley }
  ?bobMarley dbo:profession ?profession .
  
  # Find a common artist/profession link
  ?artist dbo:profession ?profession .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
888,8,train,Give me the awardee of the award of Oleksandr Syrskyi.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person dbo:birthName ""Oleksandr Syrskyi""@en .
  ?person dbo:honoraryTitle ?award .
}
```

This query assumes that Oleksandr Syrskyi's DBpedia resource has a `dbo:birthName` property set to his name and uses the `dbo:honoraryTitle` property to find any awards associated with him.",2,2,3,2,1,3,2,20,0,0,14,0,0.0,0
645,6,train,"Give me the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  # Find events related to Francisco Largo Caballero
  ?event dbo:wikiPageRedirects dbr:Francisco_Largo_Caballero .
  
  # Ensure the event is a military conflict
  ?event rdf:type dbo:MilitaryConflict .

  # Ensure the event is also considered a societal event
  ?event rdf:type dbo:SocietalEvent .

  # Optionally, check if it can be related to 'force' in some context
  OPTIONAL { 
    ?event dbo:wikiPageWikiLink dbr:Force_(disambiguation) .
  }
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
329,13,train,Give me the entity in United Kingdom and birthplace of the author of The Tailor and Ansty.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?birthPlace WHERE {
  ?book dbo:author dbr:George_MacDonald .
  ?book rdfs:label ""The Tailor and Ansty""@en .
  
  OPTIONAL { ?author dbo:birthPlace ?birthPlace . }
  FILTER (lang(?bookLabel) = 'en')
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
18,12,train,"Give me the professional in  and alumnus of Marymount College, Tarrytown and parent of Liza Huber.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  ?alumnus dbp:almaMater <http://dbpedia.org/resource/Marymount_College_(Tarrytown,_New_York)> .
  ?parent dbo:child <http://dbpedia.org/resource/Liza_Huber> .
  FILTER (?alumnus = ?parent)
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
865,13,train,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  # Find Abu Ahmad Abdul Hafiz
  ?person a dbo:Person ;
          foaf:name ""Abu Ahmad Abdul Hafiz""@en .
  
  # Find his children who are politicians
  ?child dbo:parent ?person ;
         a dbo:Politician .

  # Get the father of that child
  ?father dbo:spouse ?mother ;
          dbo:child ?child .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
459,1,train,Give me the governor of Dana Murphy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor WHERE {
  ?person a dbo:Person ;
          foaf:name ""Dana Murphy""@en .
  OPTIONAL { ?person dbo:stateGovernor ?governor . }
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
839,9,train,Give me the band of Peter Schorowsky and band of Kevin Russell (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?bandName WHERE {
  VALUES ?person { 
    dbr:Peter_Schorowsky 
    dbr:Kevin_Russell_(musician)
  }
  
  ?person dbo:musicalArtistIn ?band .
  ?band rdfs:label ?bandName .
  FILTER (lang(?bandName) = 'en')
}
ORDER BY ?person
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
5,10,train,"Give me the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?award WHERE {
  # Find Rubén Colón Tarrats' resource
  ?ruben a dbo:Person ;
         foaf:name ""Rubén Colón Tarrats""@en .
  
  # Find the band associated with him
  ?ruben dbo:musicalArtist ?band .

  # Ensure it's a band (or musical group)
  ?band a dbo:Band .

  # Get awards for the band
  ?band dbo:award ?award .
}
```",2,3,3,2,1,3,2,20,0,0,7,0,0.0,0
507,39,train,Give me the professional in the profession of the person born on 1966-02-18 and director of Entertaining Mr Sloane (film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  ?director a dbo:FilmDirector ;
            dbo:birthDate ""1966-02-18""^^xsd:date ;
            dbo:directed dbr:Entertaining_Mr_Sloane .
  
  ?director dbo:profession ?profession .

  ?person dbo:profession ?profession ;
          dbo:name ?professionalName .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
965,11,train,Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseOfSpouse WHERE {
  ?princess dbo:spouse ?firstSpouse .
  ?firstSpouse dbo:spouse ?spouseOfSpouse .

  FILTER (str(?princess) = ""Princess Victoria of Hesse and by Rhine""^^xsd:string)
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
433,19,train,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and associated musical artist of Bill Evans.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist WHERE {
  # Find associated artists for Paul Laurence Dunbar Chambers Jr.
  {
    ?chambers a dbo:Musician ;
              foaf:name ""Paul Chambers"" .
    ?chambers dbo:associatedMusicalArtist ?artist .
  }
  
  UNION
  
  # Find associated artists for Bill Evans
  {
    ?evans a dbo:Musician ;
           foaf:name ""Bill Evans"" .
    ?evans dbo:associatedMusicalArtist ?artist .
  }
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
98,6,train,Give me the birth place of Paolo Ballesteros and region of Philippine Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceLabel ?regionLabel
WHERE {
  # Find Paolo Ballesteros' birthplace
  dbr:Paolo_Ballesteros dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .

  # Find the region associated with Philippine Standard Time
  dbr:Philippine_Standard_Time dbo:timeZoneRegion ?region .
  ?region rdfs:label ?regionLabel .

  FILTER (lang(?birthPlaceLabel) = 'en')
  FILTER (lang(?regionLabel) = 'en')
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
267,0,train,Give me the coach of Iran national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Iran_national_football_team> <http://dbpedia.org/ontology/coach> ?result . },"```sparql
SELECT ?coach WHERE {
  wd:Q1343 wdt:P39 ?coach .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
166,14,train,"Give me the entity in the territory administered, that is a country, from the reference to Madrid.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?territory dbo:country dbr:Spain .
  ?territory rdfs:label ""Madrid""@en .
  ?territory dbo:administrativeTerritory ?entity .
}
```

This query does the following:
- It selects entities (`?entity`) that are part of an administrative territory.
- It specifies that this territory is associated with Spain (`dbo:country dbr:Spain`).
- It identifies the territory by its label, ""Madrid"" in English (`rdfs:label ""Madrid""@en`).
- It retrieves the entity that is administratively under this territory (`dbo:administrativeTerritory ?entity`).",3,4,4,3,1,3,2,20,0,0,12023,0,0.0,0
443,0,train,Give me the landmark at elevation of 28.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  ?landmark a dbo:Lighthouse .
  ?landmark dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""28""^^xsd:integer)
}
```

This query assumes that the landmarks are categorized under `dbo:Lighthouse` and have an elevation property `dbo:elevationAboveSeaLevel`. Adjust the class (`a dbo:Lighthouse`) if you're looking for a different type of landmark.",1,1,2,1,1,2,3,28,0,0,349,0,0.0,0
791,7,train,"Give me the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?emperor rdf:type dbo:Emperor ;
           dbp:name ""Antoku"" .
  
  ?emperor dbo:father ?father .

  ?father rdf:type dbo:Person ;
          (dbo:royalty|dbo:officeHolder) ?role .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
495,13,train,Give me the child of the father of the parent of Princess Catherine of Württemberg.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  # Step 1: Identify Princess Catherine of Württemberg
  ?princess a dbo:Person ;
           rdfs:label ""Princess Catherine of Württemberg""@en .

  # Step 2: Find her parent (mother or father)
  ?parent dbo:child ?princess .
  
  # Step 3: Find the father of that parent
  ?grandparent dbo:spouse ?parent ;
               a dbo:Person ;
               dbp:gender ""male""^^xsd:string .

  # Step 4: Find the child of that father
  ?grandparent dbo:child ?child .
}
```

This query assumes:
- Princess Catherine has a direct parent-child relationship in DBpedia.
- The gender property is used to identify male individuals as fathers.
- Relationships are straightforward and available in DBpedia.",3,3,4,3,1,3,2,20,0,0,8,0,0.0,0
926,14,train,"Give me the child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Mustafa III
  dbr:Mustafa_III dbo:fatherOf ?parent.
  
  # Find his children who are royalty
  ?parent dbo:child ?child .
  ?child a dbo:Monarch .
}
```",2,3,3,2,1,3,3,71,0,0,11,0,0.0,0
236,6,train,Give me the party member of Democratic-Republican Party and party member of Federalist Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Federalist_Party> . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic-Republican_Party> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party WHERE {
  VALUES ?party { 
    dbr:Democratic-Republican_Party 
    dbr:Federalist_Party 
  }
  
  ?person dbo:politicalParty ?party .
  FILTER (lang(?personLabel) = 'en')
}
ORDER BY ?party
```

This query does the following:
- It uses `PREFIX` to define common namespaces for DBpedia ontology (`dbo`) and resources (`dbr`).
- The `SELECT` statement retrieves individuals (`?person`) and their associated political parties (`?party`).
- The `VALUES` clause specifies the two political parties of interest: Democratic-Republican Party and Federalist Party.
- It filters results to ensure that person labels are in English using `FILTER (lang(?personLabel) = 'en')`.
- Results are ordered by party for clarity.",2,2,3,1,2,3,2,20,0,0,18,0,0.0,0
98,6,train,Give me the child of the child of Emperor Toba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Emperor_Toba> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Find Emperor Toba's child
  ?child dbo:parent dbr:Toba_(emperor) .
  
  # Find the grandchild (child of the child)
  ?grandchild dbo:parent ?child .
}
```",2,2,3,2,1,2,2,9,0,0,3,0,0.0,0
965,36,train,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person dbo:nobleTitle dbr:Marquess_of_Milford_Haven ;
          foaf:name ""Louis Mountbatten"" ;
          dbp:birthName ""Louis Francis Albert Victor Nicholas""@en .
  
  OPTIONAL { ?person dbo:spouse ?spouse . }
  
  ?person dbo:parent ?parent .
}
```

This query looks for a person with the noble title of Marquess of Milford Haven, whose birth name is Louis Francis Albert Victor Nicholas. It then retrieves the parent of this individual.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
965,7,train,"Give me the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?result . }","```sparql
SELECT ?birthName WHERE {
  wd:Q123456 wdt:P735 ?person . # George Mountbatten, 2nd Marquess of Milford Haven's DBpedia ID is Q123456 (replace with the correct one)
  ?person wdt:P1476 ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
417,31,train,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of Christian X of Denmark.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Knud, Hereditary Prince of Denmark
  ?knud a dbo:Person ;
        foaf:name ""Knud, Hereditary Prince of Denmark""@en .

  # Step 2: Find his child who is also a child of Christian X of Denmark
  ?child dbo:parent ?knud ;
         dbo:parent ?christianX .
  
  ?christianX a dbo:Person ;
              foaf:name ""Christian X of Denmark""@en .

  # Step 3: Determine the parent of this child (who must be royalty)
  ?royalParent dbo:child ?child ;
               a dbo:Monarch .

  # Step 4: Retrieve the spouse of this royal parent
  ?royalParent dbp:spouse ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
926,21,train,Give me the father of the father of Abdulaziz and child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  # Find Abdulaziz's father
  ?abdulaziz dbo:parent ?fatherAbdulaziz .
  
  # Find Abdulaziz's grandfather (father's father)
  ?fatherAbdulaziz dbo:parent ?grandfather .

  # Ensure the grandfather is also a child of Ahmed III
  ?ahmedIII dbp:child ?grandfather .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
926,25,train,"Give me the child of the father, that is a royalty, of Mustafa III and successor of Mustafa III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Mustafa III resource
  dbr:Mustafa_III dbo:fatherOf ?child .
  
  # Ensure the child is royalty
  ?child a dbo:Monarch ;
         dbo:successorOf dbr:Mustafa_III .

}
```

This query does the following:
- It starts by identifying Mustafa III using `dbr:Mustafa_III`.
- It uses the property `dbo:fatherOf` to find his children.
- It filters these children to ensure they are of type `dbo:Monarch`, indicating royalty.
- Finally, it checks that the child succeeded Mustafa III using `dbo:successorOf`.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
433,24,train,"Give me the professional in Musician and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedMusician ?artist 
WHERE {
  # Scott LaFaro as a musician
  dbr:Scott_LaFaro dbo:profession dbr:Musician .

  # Musicians associated with Scott LaFaro
  ?bandMember dbo:memberOf ?group .
  ?group dbo:member dbr:Scott_LaFaro .
  ?bandMember rdf:type dbr:Musician .
  
  # Associated artists of the musicians
  ?bandMember dbo:associatedMusicalArtist ?artist .

  # Filter for artists who are both an artist and a musical artist
  ?artist rdf:type dbr:Artist ;
          rdf:type dbr:MusicalArtist .
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
5,13,train,"Give me the birthplace of the person born, that is a politician, as the award of Renata Adler.",SELECT ?result WHERE { <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Find Renata Adler and her award
  ?renataAdler a dbo:Person ;
              foaf:name ""Renata Adler""@en .
  
  ?award dbo:recipient ?renataAdler ;
         dbo:recipientCategory ?category .

  # Find the recipient of the same award who is a politician
  ?politician dbo:recipient ?award ;
              dbo:occupation dbr:Politician ;
              dbo:birthPlace ?birthPlace .

}
```

This query assumes that DBpedia has structured data about Renata Adler, her awards, and the recipients of those awards. It also assumes that the occupation of a politician is categorized under `dbr:Politician`.",3,4,4,3,1,3,2,20,0,0,222,0,0.0,0
417,18,train,Give me the spouse of Princess Caroline-Mathilde of Denmark and child of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?princess a dbo:Person ;
           dbo:spouse ?spouse .
  
  FILTER (
    EXISTS { ?princess rdfs:label ""Princess Caroline-Mathilde of Denmark""@en }
    && EXISTS { ?princess dbo:childOf dbr:Alexandrine_of_Mecklenburg-Schwerin }
    && EXISTS { ?princess dbo:childOf dbr:Christian_X_of_Denmark }
  )
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
102,10,train,"Give me the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?residence WHERE {
  ?athlete a dbo:Athlete ;
           dbo:nationality dbr:United_Kingdom ;
           dbo:birthPlace dbr:Dewsbury .
  
  ?athlete dbo:currentResidence ?residence .

  ?residence a dbo:Settlement ;
             dbo:country dbr:England .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
281,12,train,Give me the awardee of Volunteer Decoration and commander in New Guinea campaign and awardee of Medal bar.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name WHERE {
  ?person dbo:honoraryTitle dbr:Volunteer_Decoration .
  ?person dbo:militaryAward dbr:Medal_bar .
  ?person dbo:commanderOfCampaign dbr:New_Guinea_campaign .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
ORDER BY ?name
```

### Explanation:
- **PREFIX**: Defines common prefixes for DBpedia resources.
- **SELECT DISTINCT**: Ensures unique individuals are returned.
- **?person**: Represents the individual we're querying about.
- **dbo:honoraryTitle, dbo:militaryAward, dbo:commanderOfCampaign**: These properties are hypothetical and should be replaced with actual DBpedia properties that represent these roles or awards if they exist differently.
- **dbr:Volunteer_Decoration, dbr:Medal_bar, dbr:New_Guinea_campaign**: These are placeholders for the specific resources in DBpedia. You may need to adjust them based on how these entities are actually represented.
- **rdfs:label**: Used to get the name of the person.
- **FILTER (LANG(?name) = 'en')**: Ensures that only English labels are returned.

This query assumes certain properties and resource identifiers, which might need adjustment based on actual DBpedia schema. You may need to explore DBpedia or use tools like DBpedia Spotlight to find exact property URIs.",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
83,9,train,"Give me the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlace WHERE {
  # Find sports managers of Kedah FA
  ?person dbo:memberOf dbr:Kedah_FA ;
          a dbo:SportsManager ;
          dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a town in Brazil
  ?birthPlace a dbo:Town ;
              dbp:country dbr:Brazil .

  # Check if the birthplace is associated with a soccer club
  ?birthPlace dbo:sportTeam dbr:Soccer_Club .
}
```

This query does the following:
- Selects individuals who are sports managers (`dbo:SportsManager`) of Kedah FA.
- Filters their birthplaces to ensure they are towns in Brazil.
- Checks if these places are associated with a soccer club.

Note: The exact class and property URIs might need adjustments based on DBpedia's current schema, as it can evolve over time. Additionally, the specific resource for ""Soccer Club"" should be replaced with an actual DBpedia resource representing a soccer club if available.",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
826,9,train,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  ?person dbo:predecessor dbr:Louis_II,_Grand_Duke_of_Hesse .
  ?person dbo:title ""Grand Duke of Hesse""@en .
  ?person dbo:succesor ?successor .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
281,4,train,"Give me the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  # Resource for Lawrence Moore Cosgrave
  dbr:Lawrence_Moore_Cosgrave dbo:award ?award .

  # Filter awards related to military conflicts
  ?award a dbo:MilitaryConflict .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
987,5,train,"Give me the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT ?film WHERE {
  ?film dbo:starringEmirHadžihafizbegović dbp:name ""Emir Hadžihafizbegović""@en .
  ?film rdf:type dbo:Film .
}
```",1,2,2,1,1,3,3,71,0,0,15,0,0.0,0
965,17,train,"Give me the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName
WHERE {
  dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven 
    dbo:nobleTitle ?title .
  
  OPTIONAL { 
    dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven 
      foaf:name ?birthName .
  }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
773,21,train,Give me the spouse of the father of Charles the Fat and parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?charles dbp:father ?father .
  ?father dbo:spouse ?spouse .
  FILTER (str(?charles) = ""Charles_the_Fat"")
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
839,3,train,Give me the persona of Kevin Russell (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
SELECT ?person ?name ?birthDate ?birthPlace ?occupation WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Kevin Russell""@en .
  OPTIONAL { ?person foaf:name ?name . }
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  OPTIONAL { ?person dbo:occupation ?occupation . }
}
```",1,1,2,1,1,3,3,71,0,5,1,0.0,0.0,0
281,14,train,"Give me the awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave and commander in New Guinea campaign.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?role 
WHERE {
  # Find Lawrence Moore Cosgrave
  ?person a dbo:Person ;
          foaf:name ""Lawrence Moore Cosgrave""@en .
  
  # Find the award related to a military conflict
  ?person dbo:honoraryAward ?award .
  ?award dbo:type dbr:Military_Conflict_Award .

  # Check his role in the New Guinea campaign
  ?person dbo:role ?role ;
          dbo:campaign dbr:New_Guinea_Campaign .
  
  FILTER(?role = ""Commander"")
}
```

This query does the following:
- Identifies Lawrence Moore Cosgrave as a person.
- Retrieves any honorary awards he received that are of type military conflict award.
- Checks his role in the New Guinea campaign, specifically looking for the role of ""Commander"".",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
926,11,train,Give me the father of the father of Abdulaziz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  ?abdulaziz dbo:father ?father .
  FILTER(STR(?abdulaziz) = ""Abdulaziz_Al_Saud"")
  
  ?father dbo:father ?grandfather .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
826,28,train,"Give me the spouse of the child of Johann Heinrich Appel and predecessor of Louis IV, Grand Duke of Hesse and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Johann Heinrich Appel's child
  ?child dbo:parent dbr:Johann_Heinrich_Appel .
  
  # Find the spouse of this child
  ?spouse dbo:spouse ?child .

  # Ensure the spouse is a predecessor of Louis IV and successor of Louis II, Grand Duke of Hesse
  ?spouse dbo:predecessor dbr:Louis_IV,_Grand_Duke_of_Hesse .
  ?spouse dbo:successor dbr:Louis_II,_Grand_Duke_of_Hesse .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
365,8,train,"Give me the spouse of the native, that is a politician, of Poltava Governorate.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person dbo:nationality dbr:Ukrainian; 
          dbo:birthPlace dbr:Poltava_Governorate;
          dbo:occupation dbr:Politician.
  
  OPTIONAL { ?person dbo:spouse ?spouse. }
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
