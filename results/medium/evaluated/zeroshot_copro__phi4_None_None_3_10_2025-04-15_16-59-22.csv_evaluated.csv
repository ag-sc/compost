id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
465,68,test,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v7 . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Anne of Brittany's child who is royalty
  ?anneChild dbo:parent dbr:Anne_of_Brittany ;
            a dbo:Monarch .

  # Ercole II d'Este's parent and their child
  ?ercoleParent dbo:child dbr:Ercole_II_d%27Este_Duke_of_Ferrara .
  ?ercoleChild dbo:parent ?ercoleParent .

  # Elizabeth of Austria's parent and their child who is royalty
  ?elizabethParent dbo:child dbr:Elizabeth_of_Austria_(1526%E2%80%931545) ;
                   a dbo:Monarch .
  ?elizabethRoyaltyChild dbo:parent ?elizabethParent ;
                         a dbo:Monarch .

  # Successor of Anne's child
  ?anneSuccessor dbo:predecessor ?anneChild .

  # Successor of Ercole's parent's child
  ?ercoleSuccessor dbo:predecessor ?ercoleChild .

  # Spouse of Elizabeth's royalty child
  ?spouse a dbo:Spouse ;
          dbo:spouse ?elizabethRoyaltyChild .

  # Final successor we are interested in
  ?finalSuccessor dbo:predecessor ?anneSuccessor .
  ?finalSuccessor dbo:predecessor ?ercoleSuccessor .
  ?finalSuccessor dbo:spouse ?spouse .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
417,64,test,"Give me the child of Christian X of Denmark and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChristianX ?spouseOfParent ?royaltyChildOfKnud ?grandchild ?parentOfAlexandrine WHERE {
  # Christian X of Denmark's child
  ?childOfChristianX dbo:father dbr:Christian_X_of_Denmark .
  
  # Spouse of Christian X (parent)
  ?spouseOfParent dbo:spouse dbr:Christian_X_of_Denmark .

  # Child of Knud, Hereditary Prince of Denmark
  ?royaltyChildOfKnud dbo:father dbr:Knud,_Hereditary_Prince_of_Denmark .
  
  # Ensure the child is royalty
  FILTER EXISTS { ?royaltyChildOfKnud a dbo:Monarch . }

  # Child of the child (grandchild) that is royalty
  ?grandchild dbo:parent ?royaltyChildOfKnud .

  # Ensure grandchild is royalty
  FILTER EXISTS { ?grandchild a dbo:Monarch . }

  # Parent that is royalty of Alexandrine of Mecklenburg-Schwerin
  ?parentOfAlexandrine dbo:spouse dbr:Alexandrine_of_Mecklenburg-Schwerin .
  
  # Ensure parent is royalty
  FILTER EXISTS { ?parentOfAlexandrine a dbo:Monarch . }

  # Linking the grandchild to the parent of Alexandrine
  ?grandchild dbp:parent ?parentOfAlexandrine .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
917,67,test,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and parent of Albert Kamehameha and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child
WHERE {
  # Kamehameha III's child who is royalty
  ?kamehamehaIIIChild dbo:parent dbr:Kamehameha_III ;
                     a dbo:Royal .

  # Father of the child (royalty) of Kamehameha III
  ?fatherOfChild dbo:child ?kamehamehaIIIChild .
  
  # Child of the father of the child (royalty) of Kamehameha III
  ?child dbo:parent ?fatherOfChild .

  # Parent of Albert Kamehameha
  ?albertParent dbo:child dbr:Albert_Kamehameha ;
                a dbo:Royal .
  
  # Ensure the child is also a parent of Albert Kamehameha
  FILTER (?child = ?albertParent)

  # Leleiohoku I's spouse who is royalty
  ?leleiohokuSpouse dbo:spouse dbr:Leleiohoku_I ;
                   a dbo:Royal .

  # Father of the spouse (royalty) of Leleiohoku I
  ?fatherOfSpouse dbo:child ?leleiohokuSpouse .
  
  # Child of the father of the spouse (royalty) of Leleiohoku I
  FILTER (?child = ?fatherOfSpouse)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
5,18,test,"Give me the entity in the award of Coro de la Pontificia Universidad Católica de Puerto Rico and birthplace of the person born, that is a politician, as the award of Renata Adler.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person dbo:award dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  ?person dbo:profession dbr:Politician .
  ?person dbo:award dbr:Renata_Adler .
  ?person dbo:birthPlace ?birthPlace .
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
459,26,test,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore and governor of Dana Murphy and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?governorRoquemore ?governorMurphy ?personKevinStitt
WHERE {
  # Cliff Roquemore's death place and governor
  dbr:Cliff_Roquemore dbo:deathPlace ?deathPlaceRoquemore .
  ?deathPlaceRoquemore a dbo:Settlement .
  ?deathPlaceRoquemore dbo:governor ?governorRoquemore .

  # Dana Murphy's death place and governor
  dbr:Dana_Murphy dbo:deathPlace ?deathPlaceMurphy .
  ?deathPlaceMurphy a dbo:Settlement .
  ?deathPlaceMurphy dbo:governor ?governorMurphy .

  # Kevin Stitt's birth name
  dbr:Kevin_Stitt dbp:birthName ?birthNameStitt .
  
  # Person with the same birth name as Kevin Stitt
  ?personKevinStitt dbp:birthName ?birthNameStitt .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
329,27,test,"Give me the entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist) and entity in the region, that is a country, of Western European Time and birthplace of Eric Cross (writer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthplaceRobertBates ?regionWesternEuropeanTime ?birthplaceEricCross
WHERE {
  # Robert Bates (loyalist)
  dbr:Robert_Bates_(loyalist) dbo:birthPlace ?birthplaceRobertBates .
  FILTER EXISTS { ?birthplaceRobertBates a dbo:Organisation . }
  FILTER EXISTS { ?birthplaceRobertBates a dbo:Country . }

  # Western European Time
  dbr:Western_European_Time dbo:region ?regionWesternEuropeanTime .
  FILTER EXISTS { ?regionWesternEuropeanTime a dbo:Country . }

  # Eric Cross (writer)
  dbr:Eric_Cross_(writer) dbo:birthPlace ?birthplaceEricCross .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
47,56,test,"Give me the office of the administration of Jagdeep Dhankhar and office of Bidesh Ranjan Bose and office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeJagdeep ?officeBidesh ?awardOffice
WHERE {
  # Office of the administration of Jagdeep Dhankhar
  OPTIONAL {
    dbr:Jagdeep_Dhankhar dbo:positionHeld ?position .
    ?position dbo:office ?officeJagdeep .
  }

  # Office of Bidesh Ranjan Bose
  OPTIONAL {
    dbr:Bidesh_Ranjan_Bose dbo:office ?officeBidesh .
  }
  
  # Office of the awardee of an award in India
  OPTIONAL {
    ?award dbo:country dbr:India ;
           dbo:recipient ?awardee .
    ?awardee dbo:office ?awardOffice .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
865,68,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry
WHERE {
  # Syeda Shahar Banu's spouse
  ?spouse a dbo:Spouse;
          dbo:spouse dbr:Syeda_Shahar_Banu.

  # The child of the spouse who is a politician
  ?politician dbo:childOf ?spouse;
              a dbo:Politician.

  # Abu Ahmad Abdul Hafiz's father
  ?abuChild dbo:childOf ?fatherAbu.
  ?fatherAbu dbo:child dbr:Abu_Ahmad_Abdul_Hafiz.

  # The person decedent at Patna, who is the father of the politician
  ?decedent dbo:placeOfBirth ?patna;
            dbo:deathPlace dbr:Patna;
            dbo:childOf ?politicianFather.
  
  # Linking the father of the politician to the decedent
  ?politicianFather dbo:father ?decedent.

  # Get the native country (residence) of the decedent
  ?decedent dbo:nativeCountry ?nativeCountry.
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
865,67,test,"Give me the father of the child of the father of Abul Maal Abdul Muhith and native of British Raj and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?fatherName
WHERE {
  # Abul Maal Abdul Muhith's father
  ?abulMaal dbo:father ?fatherAbulMaal .
  
  # Father of the child (sibling) of Abul Maal Abdul Muhith
  ?childSibling foaf:siblingOf ?abulMaal ;
                dbo:father ?fatherChildSibling .

  # Ensure father is native of British Raj
  ?fatherChildSibling dbo:nationality dbr:British_Raj .

  # Spouse of Syeda Shahar Banu
  ?syedaShaharBanu foaf:mbox <mailto:syedashaharbano@gmail.com> .
  ?spouseSyeda foaf:mbox ?syedaShaharBanu ;
               dbo:spouse ?syedaShaharBanu .

  # Child of the spouse who is a politician
  ?childPolitician dbo:parent ?spouseSyeda ;
                   dbo:occupation dbr:Politician .

  # The father we are looking for is the same person in both contexts
  FILTER (?fatherAbulMaal = ?fatherChildSibling)
  
  # Return the name of the father
  ?fatherChildSibling foaf:name ?fatherName .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
965,69,test,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseBirthName
WHERE {
  # Parent of Louise Mountbatten
  ?parent dbo:child dbr:Louise_Mountbatten .

  # Spouse of the spouse of this parent
  ?spouseOfSpouse foaf:mariage ?marriage .
  ?marriage dbo:spouse ?parent ;
            dbo:spouse ?spouse .

  # This person is a noble and shares birth name with George Mountbatten, 2nd Marquess of Milford Haven
  ?spouse dbo:nobleTitle ?title ;
          foaf:name ?name .
  ?georgeMountbatten dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven ;
                     foaf:name ?name .

  # One of their children is Prince Louis of Battenberg
  ?spouse dbo:child dbr:Prince_Louis_of_Battenberg .
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
839,69,test,"Give me the band of the member of Böhse Onkelz and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v7 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandOfBohseOnkelzMember ?bandOfKevinRussell ?bandOfMusician
WHERE {
  # Böhse Onkelz member's band
  ?member dbo:member dbr:Böhse_Onkelz .
  ?member dbo:band ?bandOfBohseOnkelzMember .

  # Kevin Russell (musician) and his band
  ?kevin foaf:name ""Kevin Russell"" ;
         a dbo:MusicalArtist ;
         dbo:band ?bandOfKevinRussell .

  # Band of the professional in Music
  ?musician a dbo:Musician .
  ?musician dbo:band ?bandOfMusician .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
573,57,test,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Find the author of ""Exchequer Standards""
  ?author dbo:work ?exchequerStandards .
  ?exchequerStandards rdfs:label ""Exchequer Standards""@en .

  # Ensure the author is a politician and office holder
  ?author rdf:type dbo:Politician ;
          dbo:officeHolder ?office .

  # Find the parent of this author who is also a politician and office holder
  ?parent dbo:child ?author .
  ?parent rdf:type dbo:Politician ;
          dbo:officeHolder ?parentOffice .

  # Ensure the person (author) is deceased at a settlement
  ?deceasedAt rdfs:label ?settlementLabel .
  ?deceasedAt rdf:type dbo:Settlement .
  ?author dbp:placeOfDeath ?deceasedAt .

  # Find the professional who is American and associated with ""Politician""
  ?professional rdf:type dbo:Professional ;
                dbo:nationality dbr:United_States ;
                dbo:field dbr:Politician .

  # Ensure this professional's place of death is in Massachusetts
  ?deathPlace rdfs:label ?massachusettsLabel .
  ?deathPlace rdf:type dbo:Settlement .
  ?professional dbp:placeOfDeath ?deathPlace .
  FILTER(CONTAINS(LCASE(?massachusettsLabel), ""massachusetts""))
}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
839,56,test,"Give me the band of the band, that is a musical artist, of the professional in Musician and band of the person born, that is a musical artist, as Kevin Richard Russell and band of Peter Schorowsky.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?kevinBand ?peterBand
WHERE {
  # Kevin Richard Russell's band
  dbr:Kevin_Richard_Russell dbo:musicalArtist ?kevinBand .
  
  # Peter Schorowsky's band
  dbr:Peter_Schorowsky dbo:musicalArtist ?peterBand .

  # Ensure both are musical artists
  ?kevinBand a dbo:MusicalArtist .
  ?peterBand a dbo:MusicalArtist .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
965,59,test,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouseOfSpouseOfParent
WHERE {
  # Louise Mountbatten's parent
  ?parent dbo:child dbr:Louise_Mountbatten .

  # Spouse of Louise Mountbatten's parent
  ?spouseOfParent dbo:spouse ?parent ;
                 dbo:spouse ?otherSpouse .

  # Child of the spouse who is royalty
  ?royalChild dbo:parent ?spouseOfParent ;
              a dbo:RoyalFamilyMember .

  # Parent of this royal child
  ?spouseOfSpouseOfParent dbo:child ?royalChild .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
987,65,test,"Give me the entity in the region, that is a country, of Central European Time and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/property/starring> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country
WHERE {
  # Country in Central European Time region
  ?region rdfs:label ""Central European Time""@en .
  ?country dbo:timeZone ?tz .
  ?tz rdfs:label ?timezoneLabel .
  FILTER(CONTAINS(LCASE(?timezoneLabel), ""cet""))

  # Actor's birthplace linked to a film with Emir Hadžihafizbegović
  ?film dbo:starring dbr:Emir_Hadžihafizbegović .
  ?actor dbo:birthPlace ?country ;
         dbo:actedIn ?film .

  # Band's birthplace linked to an artist with Šako Polumenta
  ?band a dbo:Band ;
        dbo:member dbr:Šako_Polumenta ;
        dbo:originCountry ?country .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
791,70,test,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v7 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v7 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor
WHERE {
    # Step 1: Emperor Go-Shirakawa's grandchild who is an office holder and royalty
    ?goChild dbo:childOf dbr:Emperor_Go-Shirakawa .
    ?grandchild dbo:childOf ?goChild .
    ?officeHolder dbo:predecessorOf ?grandchild .
    ?officeHolder a dbo:OfficeHolder, dbo:Royalty .

    # Step 2: Emperor Antoku's father who is royalty and an office holder
    ?antokuFather dbo:father dbr:Emperor_Antoku .
    ?antokuFather a dbo:Royalty, dbo:OfficeHolder .

    # Step 3: Child of Antoku's father who is royalty
    ?childOfAntokuFather dbo:childOf ?antokuFather .
    ?childOfAntokuFather a dbo:Royalty .

    # Step 4: Spouse relationships
    ?spouseOfTakakura dbo:spouse dbr:Emperor_Takakura .
    ?spouseOfTakakura a dbo:Royalty .
    
    ?spouseOfChildOfAntokuFather dbo:spouse ?childOfAntokuFather .

    # Final connection
    FILTER (?officeHolder = ?spouseOfChildOfAntokuFather)
    FILTER (?predecessor = ?goChild)
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
18,27,test,"Give me the professional in  and alumnus of the figure known, that is an educational institution, as Saints and parent of the professional in Actress.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?almaMater ?childActress
WHERE {
  ?professional dbo:almaMater dbr:Saints .
  ?professional dbo:spouseOrPartner ?parentRelation .
  ?parentRelation dbo:child ?childActress .
  ?childActress rdf:type dbo:Actor .
}
```

This query does the following:
- Selects the professional, their alma mater (Saints), and their child who is an actress.
- Matches professionals whose alma mater is ""Saints"".
- Ensures that this professional has a relationship indicating they are a parent of someone in the field of Acting.",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
773,63,test,"Give me the parent of the successor of Charles the Bald and spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v6 . ?v4 <http://dbpedia.org/property/father> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity
WHERE {
    # Step 1: Successor of Charles the Bald
    ?successor dbo:predecessor dbr:Charles_the_Bald .
    
    # Step 2: Parent of the successor
    ?parent dbo:child ?successor .

    # Step 3: Bernard (son of Charles the Fat)
    ?bernard dbo:father dbr:Charles_the_Fat ;
             a dbo:Person .

    # Step 4: Father of Bernard's parent
    ?bernhardsParent dbo:child ?bernard .
    ?fathersFather dbo:child ?bernhardsParent .

    # Step 5: Spouse of this father
    ?spouse dbo:spouse ?fathersFather ;
            a dbo:Person .

    # Step 6: Child of Louis the German who is royalty
    ?royalChild dbo:parent dbr:Louis_the_German ;
                a dbo:RoyalFamilyMember .

    # Step 7: Parent of this royal child
    ?commonEntity dbo:child ?royalChild .

    # Find common entity between parent of successor and parent of royal child
    FILTER (?spouse = ?commonEntity)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
236,18,test,"Give me the party member of the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts and party member of the administration of James Madison.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/party> ?v3 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person
WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolder true ;
          dbo:birthPlace dbr:Quincy,_Massachusetts .

  ?administration dbo:president dbr:James_Madison ;
                  dbo:member ?person .
  
  FILTER (YEAR(?administrationStartDate) >= 1809 && YEAR(?administrationEndDate) <= 1817)
}
```",5,8,6,3,2,3,2,20,0,0,19,0,0.0,0
645,60,test,"Give me the commander in the force of the commander in Siege of Madrid and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?agencyLeader WHERE {
  # Find the commander of the Siege of Madrid
  ?siege dbo:eventParticipant ?participant .
  ?participant dbo:positionHeld ?commanderRole .
  ?commanderRole rdfs:label ""Commander""@en .

  # Ensure this commander led a government agency or organization
  OPTIONAL {
    ?commander dbo:headOf ?agencyLeader .
    ?agencyLeader rdf:type/(dbo:GovernmentAgency|dbo:Organization) .
  }

  # Connect to a native of Spain during the Restoration period
  ?native dbo:nationality dbr:Spain ;
          dbo:birthPlace ?place ;
          dbo:birthDate ?date .

  FILTER (YEAR(?date) >= 1874 && YEAR(?date) <= 1931) # Approximate dates for Spanish Restoration

  # Link the commander to this native
  ?commander dbo:nationality dbr:Spain .
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
442,8,test,Give me the resting place of Allyn K. Capron and resting place of the actor of This Side of Heaven.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allyn_K._Capron> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/This_Side_of_Heaven> <http://dbpedia.org/ontology/starring> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?allynRestingPlace ?actorName ?actorRestingPlace WHERE {
  # Allyn K. Capron's resting place
  OPTIONAL {
    dbr:Allyn_K._Capron dbo:deathPlace ?allynRestingPlace .
  }
  
  # Actor of ""This Side of Heaven""
  OPTIONAL {
    dbr:This_Side_of_Heaven dbo:actor ?actorResource .
    ?actorResource rdfs:label ?actorName .
    FILTER (LANG(?actorName) = 'en')
    
    # Actor's resting place
    OPTIONAL {
      ?actorResource dbo:deathPlace ?actorRestingPlace .
    }
  }
}
```

### Explanation:
- **PREFIX**: Defines common prefixes for DBpedia resources and ontology.
- **SELECT**: Retrieves the variables `?allynRestingPlace`, `?actorName`, and `?actorRestingPlace`.
- **OPTIONAL**: Used to handle cases where data might not be available (e.g., if an actor or resting place is missing).
- **FILTER**: Ensures that labels are in English.

This query will return the resting places of Allyn K. Capron and the actor from ""This Side of Heaven"" if such information exists in DBpedia.",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
216,61,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v5 . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team
WHERE {
  # Find Pavel Vezhinov's death date
  dbr:Pavel_Vezhinov dbo:dateOfDeath ?deathDate .

  # Find a person who is a sports manager, soccer manager, and soccer player
  ?person a dbo:SportsManager ;
          a dbo:FootballManager ;
          a dbo:FootballPlayer ;
          dbo:birthDate ?birthDate .

  # Match the birthdate with Pavel Vezhinov's death date
  FILTER (?birthDate = ?deathDate)

  # Find Džemal Berberović and his team association
  dbr:Džemal_Berberović a dbo:SoccerPlayer ;
                        a dbo:SportsManager ;
                        a dbo:FootballManager .

  # Find the team associated with Džemal Berberović
  ?team a dbo:Organization ;
        a dbo:SportsClub ;
        a dbo:FootballClub ;
        dbo:player ?džemal .

  # Ensure the player is Džemal Berberović
  FILTER (?džemal = dbr:Džemal_Berberović)

  # Link the person to the team through Džemal Berberović's role as a coach
  ?person dbo:coachOf ?team .
}",6,15,7,3,2,3,3,71,0,0,1,0,0.0,0
365,18,test,"Give me the person born as the birth name of the commander, that is an office holder, in Ukrainian–Soviet War and spouse of the native, that is a politician, of Poltava Governorate.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName ?spouse
WHERE {
  ?person a dbo:Person ;
          dbo:birthName ?birthName ;
          dbo:officeHolder true ;
          dbo:commanderInWar dbr:Ukrainian–Soviet_War .

  ?spouse dbo:nativePlace dbr:Poltava_Governorate ;
         dbo:occupation dbp:Politician ;
         dbo:spouse ?person .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
965,62,test,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of the parent of Louise Mountbatten and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfGeorge
WHERE {
  # George Mountbatten, 2nd Marquess of Milford Haven
  dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven dbo:spouse ?spouse1 .
  
  # Parent of George Mountbatten
  ?parentOfGeorge dbo:child dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven .

  # Spouse of the spouse of the parent of Louise Mountbatten
  dbr:Louise_Mountbatten dbo:parent ?parentOfLouise .
  ?spouse2 dbo:spouse ?parentOfLouise .
  ?spouse1 dbo:spouse ?spouse2 .

  # Person born on 1854-05-24 who is a politician and royalty
  ?politician dbo:birthday ""1854-05-24""^^xsd:date ;
              rdf:type dbo:Politician ;
              dbo:child ?royaltyChild .
  
  # Parent of the child that is royalty
  ?parentOfRoyaltyChild dbo:child ?royaltyChild .
  ?parentOfRoyaltyChild rdf:type dbo:RoyalFamily .

  # Linking the parent of George to the above chain
  ?parentOfGeorge = ?parentOfRoyaltyChild .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
573,59,test,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://dbpedia.org/property/governor> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person1 ?person2
WHERE {
  # Charlie Baker (Australian footballer) and his real name
  dbr:Charlie_Baker_(Australian_footballer) dbo:realName ?realName .
  
  # Person decedent at an administration that is a region related to the real name
  ?administration dbo:type dbr:Region ;
                  dbo:decedentAt ?person1 .
  FILTER (?realName IN (dbo:associatedWith ?administration))
  
  # Professional in Politician who is American and their residence
  ?professional dbp:nationality dbr:United_States ;
                dbo:profession dbr:Politician .
  ?residence dbo:type dbr:Settlement ;
             dbo:decedentAt ?person2 .
  FILTER (?professional IN (dbo:associatedWith ?residence))
}
```",6,9,7,3,2,3,3,71,0,0,400,0,0.0,0
839,61,test,"Give me the band of the member of the band, that is a band and a group, of Peter Schorowsky and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band1 ?band2
WHERE {
  # Find Peter Schorowsky's band that is both a ""band"" and a ""group""
  ?member dbo:member dbr:Peter_Schorowsky .
  ?member dbo:band ?band1 .
  ?band1 rdf:type dbo:Band .
  ?band1 rdf:type dbo:Group .

  # Find the band associated with a professional musician
  ?musician rdf:type dbo:MusicalArtist .
  ?musician dbo:profession dbr:Musician .
  ?musician dbo:band ?band2 .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
987,71,test,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v8 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v7 . ?v8 <http://dbpedia.org/property/timeZone> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlaceOfBand
WHERE {
  # Emir Hadžihafizbegović's film role
  dbr:Emir_Hadžihafizbegović dbo:actorInFilm ?film .
  
  # Film associated with a country
  ?film dbo:set dbp:country ?country .

  # Country's time zone linked to a sports event in Canicosa de la Sierra
  ?country dbo:timeZone ?timezone .
  ?sportsEvent dbo:location dbr:Canicosa_de_la_Sierra ;
               dbo:timeZone ?timezone .

  # Band related to Dado Povolny and its birthplace
  dbr:Dado_Povolny dbo:memberOfBand ?band .
  ?band a dbo:MusicalArtist, dbo:Artist ;
        dbp:birthPlace ?birthPlaceOfBand .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
326,20,test,"Give me the resident of the birthplace, that is a state and British, of the professional in Writer and person decedent at the award, that is a country, of the awardee of French Legion of Honor.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> ""Writer""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v4 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?resident
WHERE {
  ?writer a dbo:Writer ;
          dbo:deathPlace ?award .
  
  ?award dbo:country dbr:France ;
         dbo:honor ""Legion of Honor"" .

  ?writer dbo:birthPlace ?birthPlace .
  
  ?birthPlace a dbo:State ;
              dbp:country dbr:United_Kingdom .

  ?resident dbo:residence ?birthPlace .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
839,68,test,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/bandMember> ?v7 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandCharlieHuhn ?bandPeterSchorowsky ?bandKevinRussell
WHERE {
  # Band associated with Charlie Huhn
  ?charlieHuhn a dbo:MusicalArtist ;
               dbo:member ?bandCharlieHuhn .
  
  FILTER EXISTS { ?bandCharlieHuhn a dbo:Band } .

  # Band associated with Peter Schorowsky
  ?peterSchorowsky a dbo:Person ;
                   dbo:memberOf ?bandPeterSchorowsky .
  
  FILTER EXISTS { 
    ?bandPeterSchorowsky a dbo:Band ;
                         dbo:type dbr:MusicalGroup } .

  # Band associated with Kevin Russell (persona of a musical artist)
  ?kevinRussell a dbo:Person ;
                foaf:name ""Kevin Russell"" ;
                dbo:birthPlace ?place .
  
  ?musicalArtist a dbo:MusicalArtist ;
                 dbo:alias ?kevinRussell .

  ?musicalArtist dbo:band ?bandKevinRussell .
  
  FILTER EXISTS { ?bandKevinRussell a dbo:Band } .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
433,65,test,"Give me the professional in the profession of Bob Marley and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professionalInProfessionOfBobMarley ?associatedMusicalArtistOfPaulChambers ?finalAssociatedArtist
WHERE {
  # Bob Marley's profession
  dbr:Bob_Marley dbo:profession ?bobMarleyProfession .
  
  # Paul Laurence Dunbar Chambers Jr.'s birth and professions
  dbr:Paul_Laurence_Dunbar_Chambers_Jr. dbo:birthPlace ?placeOfBirth .
  FILTER EXISTS { ?placeOfBirth a dbo:Place . }
  dbr:Paul_Laurence_Dunbar_Chambers_Jr. dbo:profession ?chambersProfession1 .
  FILTER (str(?chambersProfession1) = ""musical artist"")
  dbr:Paul_Laurence_Dunbar_Chambers_Jr. dbo:profession ?chambersProfession2 .
  FILTER (str(?chambersProfession2) = ""artist"")

  # Associated musical artists of Paul Chambers
  ?associatedArtistOfChambers dbo:associatedMusicalArtist dbr:Paul_Laurence_Dunbar_Chambers_Jr. ;
                               dbo:profession ?associatedArtistProfession1 .
  FILTER (str(?associatedArtistProfession1) = ""artist"")
  ?associatedArtistOfChambers dbo:profession ?associatedArtistProfession2 .
  FILTER (str(?associatedArtistProfession2) = ""musical artist"")

  # Associated musical artists of the above, who are also associated with Ornette Coleman
  ?finalAssociatedArtist dbo:associatedMusicalArtist ?associatedArtistOfChambers ;
                         dbo:associatedMusicalArtist dbr:Ornette_Coleman .
}
```",7,13,8,3,3,3,3,71,0,0,4,0,0.0,0
773,62,test,"Give me the spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the successor of the child, that is a royalty, of Louis the Pious and parent of Charles the Fat.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
    # Step 1: Identify Bernard (son of Charles the Fat)
    ?bernard dbo:father dbr:Charles_the_Fat .
    
    # Step 2: Find Father of Bernard's Parent (Bernard's Grandparent)
    ?grandparent dbo:child ?bernard .
    
    # Step 3: Spouse of Bernard's Grandparent
    ?spouse dbo:spouse ?grandparent .
    
    # Step 4: Successor of Louis the Pious' Child who is royalty
    ?louisChild dbo:father dbr:Louis_the_Pious .
    ?successor dbo:predecessor ?louisChild ;
               a dbo:Monarch .
    
    # Step 5: Parent of Charles the Fat and also parent of the successor
    ?parent dbo:child dbr:Charles_the_Fat ;
            dbo:child ?successor .
    
    # Ensure the spouse is related to this parent
    ?spouse dbo:spouse ?parent .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
166,19,test,"Give me the entity in the territory administered, that is a country, from the reference to Madrid and resting place of the military force of Spanish Civil War.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?v4 <http://dbpedia.org/ontology/capital> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  # Find entities related to Madrid
  ?entity dbo:location dbr:Madrid .
  
  # Identify resting places of military forces from the Spanish Civil War
  ?militaryForce dbo:restingPlace ?entity .
  ?militaryForce dbo:partOfMilitaryConflict dbr:Spanish_Civil_War .

  # Determine territories administered by these entities that are countries
  ?entity dbo:administers ?territory .
  ?territory a dbo:Country .
  
  BIND(?territory AS ?country)
}
```",5,6,6,3,2,3,2,20,0,0,4,0,0.0,0
582,71,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/property/nickname> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/property/nickname> ?v8 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?teamNickname ?playerName ?scientistResidence
WHERE {
  # Hajime Moriyasu's team and its nickname
  dbr:Hajime_Moriyasu dbo:managerOf ?team .
  OPTIONAL { ?team dbo:nickname ?teamNickname . }

  # Kazuaki Nagasawa's father who is an athlete, soccer manager, and sports manager
  dbr:Kazuaki_Nagasawa dbo:father ?father .
  FILTER (dbo:Athlete IN (rdf:type/rdf:first) && 
          dbo:SoccerManager IN (rdf:type/rdf:first) &&
          dbo:SportsManager IN (rdf:type/rdf:first))
  
  # Kazuaki Nagasawa's child who is a player
  dbr:Kazuaki_Nagasawa dbo:child ?player .
  FILTER (dbo:Player IN (rdf:type/rdf:first))

  # Hirotaka Sugawara's reference to the scientist and their residence
  dbr:Hirotaka_Sugawara dbo:reference ?scientist .
  OPTIONAL { ?scientist dbo:residenceLocation ?scientistResidence . }
  
  # Linking player to Kazuaki Nagasawa's father
  ?player dbo:father ?father .

}",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
433,63,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and professional in the profession of Bob Marley.",SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtistOfPaul ?associatedArtistOfScott ?artistWithBobMarley
WHERE {
  # Find Paul Chambers and his associated musical artist
  dbr:Paul_Chambers a dbo:Musician ;
                   dbo:associatedBandOrMusicalGroup ?band1 .
  
  ?band1 dbo:member ?associatedArtistOfPaul .

  # Ensure the associated artist is both an artist and a musician
  ?associatedArtistOfPaul a dbo:Artist, dbo:Musician .

  # Find Scott LaFaro and his associated musical artist who is also an artist
  dbr:Scott_LaFaro a dbo:Musician ;
                   dbo:associatedBandOrMusicalGroup ?band2 .
  
  ?band2 dbo:member ?associatedArtistOfScott .

  ?associatedArtistOfScott a dbo:Artist, dbo:Musician .

  # Ensure this artist is professionally connected to Bob Marley
  ?associatedArtistOfScott dbo:profession dbr:Bob_Marley .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
715,62,test,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in the force, that is a military conflict, of the native of Morocco and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?mayor ?conflict ?ministry
WHERE {
  ?person a dbo:OfficeHolder ;
          a dbo:Politician ;
          a dbo:President ;
          dbo:commanderInForce ?mayor .
  
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 1933)
  ?person dbo:officeHolderOf ?election .

  ?conflict a dbo:MilitaryConflict ;
           dbo:location dbr:Morocco .
  ?person dbo:commanderInForce ?conflict .

  ?ministry a dbo:Ministry ;
            dbo:minister ?person .
  FILTER (str(?ministry) = ""Ministry of the Air (Spain)"")
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
47,57,test,"Give me the office of the awardee of Padma Vibhushan and office of Suvendu Adhikari and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?padmaVibhushanOffice ?suvenduAdhikariOffice ?mantuGhoshAwardAwardeeOffice
WHERE {
  # Office of the awardee of Padma Vibhushan
  ?person dbo:award dbr:Padma_Vibhushan .
  ?person dbo:office ?padmaVibhushanOffice .

  # Office of Suvendu Adhikari
  dbr:Suvendu_Adhikari dbo:office ?suvenduAdhikariOffice .

  # Awardee of the award received by Mantu Ghosh
  dbr:Mantu_Ghosh dbo:award ?mantuGhoshAward .
  ?awardee dbo:award ?mantuGhoshAward .
  ?awardee dbo:office ?mantuGhoshAwardAwardeeOffice .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
433,58,test,"Give me the associated musical artist of Paul Chambers and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find Paul Chambers' associated musical artist
  ?paulChambers a dbo:Musician ;
                foaf:name ""Paul Chambers"" .
  
  ?associatedWithPaulChambers dbo:associatedMusicalArtist ?artist1 .

  # Step 2: Identify the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  dbr:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall dbo:writer ?writer .
  
  # Step 3: Find associated musical artist of the writer
  ?associatedWithWriter dbo:associatedMusicalArtist ?artist2 .

  # Step 4: Find Scott LaFaro's associated musical artist
  ?scottLaFaro a dbo:Musician ;
               foaf:name ""Scott LaFaro"" .
  
  ?associatedWithScottLaFaro dbo:associatedMusicalArtist ?artist3 .

  # Step 5: Identify an artist who is both a musical artist and associated with Scott LaFaro's associated artist
  ?artist2 dbo:associatedMusicalArtist ?artist4 ;
           a dbo:Musician .
  
  FILTER (?artist1 = ?artist2 && ?artist3 = ?artist4)
  
  # Final result
  BIND(?artist4 AS ?finalArtist)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
987,56,test,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and birth place of Moamer Kasumović and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v4 . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/timeZone> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandBirthPlace ?kasumovicBirthPlace ?countryInRegion
WHERE {
  # Find the band associated with Šako Polumenta
  ?band a dbo:Band ;
        dbo:artist ?sakoPolumenta .
  
  ?sakoPolumenta foaf:name ""Šako Polumenta"" .

  # Get the birthplace of the band (assuming it's an artist)
  OPTIONAL { ?band dbo:birthPlace ?bandBirthPlace . }

  # Find Moamer Kasumović and his birthplace
  ?kasumovic a dbo:MusicalArtist ;
             foaf:name ""Moamer Kasumović"" .
  
  ?kasumovic dbo:birthPlace ?kasumovicBirthPlace .

  # Identify the time zone of Canicosa de la Sierra
  ?canicosa dbr:Canicosa_de_la_Sierra dbo:timeZone ?timeZone .

  # Find a sports event in that time zone
  ?sportsEvent dbo:location ?canicosa ;
               a dbo:SportsEvent .
  
  # Get the region of the time zone and find a country in that region
  ?region dbo:country ?countryInRegion .
  ?timeZone dbo:region ?region .

}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
445,70,test,"Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the residence, that is a country, of Anna Sharkey and entity in the award of the commander in Battle of Saint-Mihiel.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/awards> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?deathPlace ?countryOfResidence ?awardEntity
WHERE {
  # Find the awardee of an establishment dated 1820-03-10
  ?establishment dbo:date ""1820-03-10""^^xsd:date ;
                 dbo:awardee ?awardee .
  
  # Get the death place of this awardee
  ?awardee dbo:deathPlace ?deathPlace .

  # Find Anna Sharkey's country of residence
  dbr:Anna_Sharkey dbo:residenceLocation ?residence ;
                   dbp:countryOfResidence ?countryOfResidence .
  
  # Determine the commander in the Battle of Saint-Mihiel and their award
  ?battle dbo:commander ?commander ;
          rdfs:label ""Battle of Saint-Mihiel""@en .
  ?commander dbo:award ?awardEntity .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
465,66,test,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Alfonso I d'Este's child
  ?alfonsoChild dbo:parent dbr:Alfonso_I_d%27Este ;
               dbo:succesor ?successor1 .

  # Ferdinand I's royal child who is spouse of Alfonso I d'Este's child
  ?ferdinandChild dbo:parent dbr:Ferdinand_I,_Holy_Roman_Emperor ;
                  a dbo:Royalty ;
                  dbo:spouse ?alfonsoChild ;
                  dbo:succesor ?successor2 .

  # Charles Orlando, Dauphin of France's parent
  ?charlesParent dbo:child dbr:Charles_Orlando_Dauphin_of_France .

  # Successor of the child of Charles Orlando's parent
  ?charlesChild dbo:parent ?charlesParent ;
                dbo:succesor ?successor3 .

  # Ensure the successor is the same for both paths
  FILTER (?successor1 = ?successor2 && ?successor2 = ?successor3)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
98,28,test,"Give me the birth place of the person born as Paolo Elito M. Ballesteros IV and region of the time zone of Lopez Jaena and entity in the region, that is a country, of Philippine Standard Time.","SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v5 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?v5 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace ?region ?country
WHERE {
  # Find Paolo Elito M. Ballesteros IV's birthplace
  OPTIONAL {
    ?person a dbo:Person ;
            foaf:name ""Paolo Elito M. Ballesteros IV"" ;
            dbo:birthPlace ?birthPlace .
  }

  # Determine the region of Lopez Jaena's time zone
  ?lorenzoJaenaLocation a dbo:PopulatedPlace ;
                        dbo:location ?region .

  # Find a country in the region of Philippine Standard Time
  ?country a dbo:Country ;
           dbo:timeZone dbr:Philippine_Standard_Time ;
           dbo:locatedIn ?region .
}
```

This query attempts to:
- Retrieve the birthplace of Paolo Elito M. Ballesteros IV.
- Identify the region associated with Lopez Jaena's location.
- Find a country within the region where Philippine Standard Time is observed.

Note that this query assumes certain properties and relationships are available in DBpedia or similar datasets, such as `foaf:name` for names and `dbo:timeZone` for time zones. Adjustments may be necessary based on actual data availability.",6,7,7,2,3,2,3,28,0,0,2,0,0.0,0
47,68,test,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of the award, that is an award, of Mantu Ghosh and office of the awardee of Padma Vibhushan.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office1 ?office2 ?office3
WHERE {
  # Office of the administration of the commander in Operation Green Hunt
  ?operation dbr:Operation_Green_Hunt .
  ?commander dbo:participatedIn ?operation .
  ?commander dbo:occupation ?politicianRole .
  ?politicianRole dbo:positionHeld ?office1 .

  # Office of the awardee of Mantu Ghosh's award
  dbr:Mantu_Ghosh dbo:awardReceived ?award .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:occupation ?role .
  ?role dbo:positionHeld ?office2 .

  # Office of the awardee of Padma Vibhushan
  ?padmaVibhushanAward dbr:Padma_Vibhushan .
  ?padmaVibhushanAward dbo:recipient ?awardeePadma .
  ?awardeePadma dbo:occupation ?rolePadma .
  ?rolePadma dbo:positionHeld ?office3 .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
582,70,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to the residence of Hirotaka Sugawara.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find Kazuaki Nagasawa's child
  ?child dbo:parent dbr:Kazuaki_Nagasawa .
  
  # Find Hajime Moriyasu's team nickname
  ?team dbo:manager dbr:Hajime_Moriyasu ;
        dbo:nickname ?nickname .

  # Find Hirotaka Sugawara's residence
  ?sugawara dbo:residence ?residence .

  # The father who is an athlete, soccer manager, and sports manager
  ?father a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager ;
          dbo:child ?player .
  
  # Ensure the player is related to Kazuaki Nagasawa's child
  ?player dbo:parent ?child .

  # Ensure the father has a connection to Hajime Moriyasu's team nickname
  ?father dbo:nickname ?nickname .

  # Ensure the father has a connection to Hirotaka Sugawara's residence
  ?father dbo:residence ?residence .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
274,24,test,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound and professional in the designer of Tetris Classic.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v2 . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find actor associated with Imagine the Sound
  ?actor dbo:associatedWith dbr:Imagine_the_Sound .
  
  # Ensure this actor is also a musical artist
  ?actor rdf:type dbo:MusicalArtist .

  # Find designer of Tetris Classic
  ?tetrisDesigner dbo:designed dbr:Tetris_Classic .

  # Establish professional link between the actor and the designer
  ?actor dbo:professionalConnection ?tetrisDesigner .
}
```",4,5,5,2,2,2,3,28,0,0,6,0,0.0,0
582,63,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as the nickname of Japan national football team.","SELECT ?result WHERE { <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?player ?residence ?nickname
WHERE {
  # Find the player who is the father of Masami Nagasawa and has multiple roles
  ?player dbo:spouse dbr:Masami_Nagasawa ;
          a dbo:Athlete, dbo:SoccerManager, dbo:SportsManager .

  # Reference to the residence of a scientist related to Hirotaka Sugawara
  OPTIONAL {
    ?scientist foaf:name ""Hirotaka Sugawara""@en .
    ?scientist dbo:residenceLocation ?residence .
  }

  # Figure known as the nickname of Japan national football team
  ?nickname dbo:nickname dbr:Japan_national_football_team .

}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
98,24,test,"Give me the birth place of the person born as Paolo Elito M. Ballesteros IV and entity in the region, that is a country, of Philippine Standard Time.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?country
WHERE {
  ?person rdfs:label ""Paolo Elito M. Ballesteros IV""@en .
  ?person dbo:birthPlace ?birthPlace .

  OPTIONAL {
    ?birthPlace dbo:country ?country .
    FILTER (lang(?countryLabel) = 'en' && str(?countryLabel) = ""Philippines"")
  }
}
```

### Explanation:

- **PREFIX**: Define prefixes for DBpedia ontology and resources.
- **SELECT**: Choose variables `?birthPlace` and `?country`.
- **WHERE Clause**:
  - Identify the person using their label.
  - Retrieve the birthplace of this person.
  - Use an OPTIONAL clause to link the birthplace to a country, filtering by ""Philippines"" in English.

This query will return the birthplace and confirm if it is within the Philippines, aligning with the requirement for Philippine Standard Time.",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
839,71,test,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician and band of the member of the band, that is a band and a group, of Peter Schorowsky.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v8 . ?v7 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?kevinRussellBand ?bandOfKevinRussellBand ?peterSchorowskyBand
WHERE {
  # Kevin Russell's band
  dbr:Kevin_Russell (dbo:musicalArtist) ?kevinRussellBand .
  
  OPTIONAL {
    ?kevinRussellBand dbo:band ?bandOfKevinRussellBand .
  }
  
  # Peter Schorowsky's band
  ?peterSchorowskyMembership dbo:member dbr:Peter_Schorowsky ;
                              dbo:group ?peterSchorowskyBand .
  
  FILTER (isLiteral(?kevinRussellBand) && isLiteral(?bandOfKevinRussellBand))
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
456,58,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of The Shadow and spouse of Danielle Spencer (Australian actress).",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandOfBand ?musicalArtist
WHERE {
  # Alan Doyle's band
  dbr:Alan_Doyle dbo:memberOf ?band .
  
  # The band has an alter ego ""The Shadow""
  ?band dbo:alterEgoName dbp:The_Shadow .

  # Find the spouse of a member of this band who is Danielle Spencer
  ?member dbo:spouse dbr:Danielle_Spencer_(Australian_actress) .
  
  # Ensure the member is part of the same band
  ?member dbo:memberOf ?band .

  # The band's associated musical artist
  ?band dbo:musicalArtist ?musicalArtist .

  # Assign the band to a variable for clarity
  BIND(?band AS ?bandOfBand)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
445,67,test,Give me the entity in England and entity in the award of the commander in Battle of Saint-Mihiel and death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInEngland ?awardeeCommander ?deathPlace
WHERE {
  # Entity in England
  ?entityInEngland dbo:country dbr:United_Kingdom .

  # Awardee commander in Battle of Saint-Mihiel
  ?battle dbr:Battle_of_Saint-Mihiel .
  ?battle dbo:commander ?awardeeCommander .
  
  # Death place of the awardee associated with establishment on 1820-03-10
  ?establishment dbp:date ""1820-03-10""^^xsd:date ;
                 dbo:foundedBy|dbo:founder ?awardeeCommander .
  ?awardeeCommander dbo:deathPlace ?deathPlace .

}
```

This query does the following:
- Selects entities related to England.
- Identifies commanders awarded in the Battle of Saint-Mihiel.
- Finds the death place of an awardee associated with an establishment on March 10, 1820.",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
41,25,test,"Give me the party of Enda Kenny and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election and party of the person born as David Declan Costello.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?kennyParty ?electionLeaderParty ?costelloParty
WHERE {
  # Enda Kenny's party
  OPTIONAL {
    dbr:Enda_Kenny dbo:party ?kennyParty .
  }

  # Leader of the 2005 Castlereagh Borough Council election and their party
  OPTIONAL {
    ?leader a dbo:Politician ;
            dbo:officeHolderOf ?election ;
            dbo:party ?electionLeaderParty .
    FILTER (STRSTARTS(STR(?election), ""Castlereagh_Borough_Council_2005""))
  }

  # David Declan Costello's party
  OPTIONAL {
    dbr:David_Declan_Costello dbo:party ?costelloParty .
  }
}
```

This query does the following:
- Uses `OPTIONAL` clauses to ensure that if any of the parties are not found, it doesn't prevent other results from being returned.
- Searches for Enda Kenny's party affiliation using his DBpedia resource.
- Identifies a politician who was an office holder in the 2005 Castlereagh Borough Council election and retrieves their party.
- Finds David Declan Costello's party affiliation.",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
826,57,test,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor
WHERE {
  # Prince Friedrich of Hesse and by Rhine
  dbr:Friedrich_of_Hesse_and_by_Rhine dbo:spouse dbr:Anna_Magdalena_Appel .
  
  # Parent of Prince Friedrich
  ?parent dbo:child dbr:Friedrich_of_Hesse_and_by_Rhine .
  
  # Predecessor of the parent
  ?predecessor dbo:successor ?parent .

  # Louis I and his successor
  dbr:Louis_I dbo:succeededBy ?succeedingRoyalty .
  
  # Child of the succeeding royalty
  ?child dbo:child ?succeedingRoyalty .
  
  # Successor of this child
  ?finalSuccessor dbo:successor ?child .

  FILTER (?predecessor != ?finalSuccessor)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
965,64,test,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of Louise Mountbatten and spouse of the spouse of the parent of Louise Mountbatten.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent
WHERE {
  ?george a dbo:Person ;
          foaf:name ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  
  ?parent dbo:nobleTitle ?title ; # Ensure the parent is a noble
          dbo:child ?george .

  ?louise a dbo:Person ;
          foaf:name ""Louise Mountbatten""@en .
  
  ?parent dbo:child ?louise .

  ?otherParent dbo:spouse ?parent ;
               dbo:child ?louise .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
192,20,test,"Give me the child of the child of the parent of Anna of Hungary (Byzantine empress) and spouse of the spouse, that is a royalty, of the child of Charles II of Naples.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?finalPerson WHERE {
  # Step 1: Find Anna of Hungary (Byzantine empress)
  ?anna a dbo:Empress ;
        foaf:name ""Anna of Hungary"" .

  # Step 2: Find her parent
  ?parent dbo:child ?anna .

  # Step 3: Find the child of this parent
  ?grandchild dbo:child ?parent .

  # Step 4: Find the spouse of this grandchild
  ?spouse1 dbp:spouse ?grandchild .

  # Step 5: Identify Charles II of Naples and his child
  ?charles a dbo:Monarch ;
           foaf:name ""Charles II of Naples"" .
  ?childOfCharles dbo:child ?charles .

  # Step 6: Find the spouse of this child
  ?spouse2 dbp:spouse ?childOfCharles .

  # Step 7: Find the spouse of that spouse
  ?finalSpouse dbp:spouse ?spouse2 .

  # Ensure the final person is royalty
  ?finalPerson dbp:spouse ?finalSpouse ;
               a dbo:Monarch .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
865,62,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of Shahla Khatun and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfResidence
WHERE {
  ?person dbo:deathPlace dbr:Patna .
  ?person dbo:child dbr:Shahla_Khatun .
  ?person dbo:child ?politicianChild .
  ?politicianChild a dbo:Politician ;
                  dbo:spouse dbr:Syeda_Shahar_Banu .
  ?residence dbo:nativeOf ?nativeOfResidence .
  ?person dbo:residence ?residence .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
417,56,test,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of Christian X of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild
WHERE {
  # Parent of Alexandrine of Mecklenburg-Schwerin
  ?parent1 dbo:spouse ?alexandrineParentSpouse .
  
  # Spouse of parent of Count Ingolf of Rosenborg
  ?parent2 dbp:spouse ?ingolfParentSpouse .

  # Common entity is a child of Christian X of Denmark
  ?commonChild dbo:child ?christianX .
  ?christianX rdfs:label ""Christian X""@en .

  # Match the spouse relationships
  ?alexandrineParentSpouse rdfs:label ?spouseLabel1 .
  ?ingolfParentSpouse rdfs:label ?spouseLabel2 .
  
  FILTER (?spouseLabel1 = ?spouseLabel2)

  # Find child of the common entity who is royalty
  ?commonChild dbo:child ?childOfCommon .
  ?childOfCommon a dbo:Monarch .

  # Find grandchild (child of the child)
  ?childOfCommon dbo:child ?grandchild .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
47,70,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of the award, that is an award, of Mantu Ghosh and office of the administration of Jagdeep Dhankhar.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v7 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeOfAwardee ?awardMantuGhoshOffice ?jagdeepDhankharOffice
WHERE {
  # Office of the awardee of awards in India
  ?award dbo:country dbr:India .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:office ?officeOfAwardee .

  OPTIONAL {
    # Office of the awardee of awards associated with Mantu Ghosh
    ?awardMantuGhosh dbo:recipient dbr:Mantu_Ghosh .
    ?awardMantuGhosh dbo:recipient ?mantuRecipient .
    ?mantuRecipient dbo:office ?awardMantuGhoshOffice .
  }

  OPTIONAL {
    # Office of the administration of Jagdeep Dhankhar
    dbr:Jagdeep_Dhankhar dbo:office ?jagdeepDhankharOffice .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
508,18,test,"Give me the birthplace of the commander, that is Saudi, in Central Plains War and birthplace of the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceCentralPlainsWar ?birthPlaceHayaoTadaWar
WHERE {
  # Commander in the Central Plains War who is Saudi
  ?commanderCentralPlainsWar a dbo:MilitaryPerson ;
                            dbo:nationality dbr:Saudi_Arabia ;
                            dbo:placeOfBirth ?birthPlaceCentralPlainsWar ;
                            dbo:participatedInBattleOrConflict dbr:Central_Plains_War .

  # Commander in a war related to Hayao Tada who is also a politician
  ?commanderHayaoTadaWar a dbo:MilitaryPerson, dbo:Politician ;
                         dbo:placeOfBirth ?birthPlaceHayaoTadaWar ;
                         dbo:participatedInBattleOrConflict ?war .

  # The war must be both a military conflict and societal event related to Hayao Tada
  ?war a dbo:MilitaryConflict, dbo:SocietalEvent ;
      dbo:relatedTo dbr:Hayao_Tada .
}
```",5,10,6,3,2,3,2,20,0,0,3,0,0.0,0
892,60,test,"Give me the entity in the profession of the true self of Enrico Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . ?v4 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?profession ?administration
WHERE {
  # Enrico Crolla's profession
  dbr:Enrico_Crolla dbo:occupation ?person .
  ?person dbo:occupationCategory ?profession .

  # Andrea Cozzolino's political party
  dbr:Andrea_Cozzolino dbo:memberOfParty ?party .
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Italy .

  # Administration entity conditions
  ?administration a dbo:Region, dbo:Settlement, dbo:AdministrativeRegion ;
                  dbo:country dbr:Italy .
  
  OPTIONAL { ?party dbo:administrativeRegion ?administration }
}
```",6,12,7,3,2,3,3,71,0,0,587,0,0.0,0
917,71,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of the child, that is a royalty, of Kamehameha III and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v7 . ?result <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Mayor of Hawaiian Kingdom and their child who is royalty
  ?mayor a dbo:Mayor ;
         dbo:child ?royalChild1 .
  
  FILTER EXISTS { ?royalChild1 a dbo:Royalty } .

  # Kamehameha III and the father of his royal child
  dbr:Kamehameha_III a dbo:Person ;
                     dbo:child ?royalChild2 ;
                     dbo:father ?fatherOfRoyalChild .
  
  FILTER EXISTS { ?royalChild2 a dbo:Royalty } .

  # Leleiohoku I and the spouse's father who is royalty
  dbr:Leleiohoku_I a dbo:Person ;
                   dbo:spouse ?spouse .
  
  ?spouse dbo:father ?fatherOfSpouse .
  
  FILTER EXISTS { ?fatherOfSpouse a dbo:Royalty } .

  # The child must be the same in all contexts
  VALUES ?royalChild1 { ?royalChild2 }
  VALUES ?royalChild2 { ?royalChild1 }

  # Parent of the identified royal child
  ?royalChild1 dbo:parent ?parent .
}
```",9,12,10,3,3,3,3,71,0,0,2,0,0.0,0
976,57,test,"Give me the office of the person born as Mehmet Naci Bostancı and office of Mustafa Şentop and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v1 <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?officeBostanci ?officeSentop ?mayorOffice ?politicalParty
WHERE {
  # Office of Mehmet Naci Bostancı
  OPTIONAL { 
    dbr:Mehmet_Naci_Bostancı dbo:positionHeld ?officeBostanci .
  }

  # Office of Mustafa Şentop
  OPTIONAL { 
    dbr:Mustafa_Şentop dbo:positionHeld ?officeSentop .
  }
  
  # Office of a mayor who is a politician, office holder, and Turkish
  OPTIONAL {
    ?mayor a dbo:Mayor ;
           dbo:nationality dbr:Turkey ;
           dbo:occupation dbr:Politician ;
           dbo:positionHeld ?mayorOffice .
  }

  # Reference to an organization that is a political party, Turkish, and related to Millet İttifakı
  OPTIONAL {
    ?politicalParty a dbo:PoliticalParty ;
                    dbo:nationality dbr:Turkey ;
                    dbp:reference dbr:Millet_İttifakı .
  }
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
773,68,test,"Give me the spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the successor of the child, that is a royalty, of Louis the Pious and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse
WHERE {
  # Identify Bernard (son of Charles the Fat)
  ?bernard dbo:father dbc:Charles_the_Fat ;
           a dbo:Person .

  # Find parent of Bernard
  ?parent_of_bernard dbo:child ?bernard .

  # Find father of the parent of Bernard
  ?father_of_parent dbp:spouse ?spouse ;
                   dbo:child ?parent_of_bernard .

  # Identify Louis the Pious and his child (successor)
  ?louis_pious dbo:child ?successor_child ;
               a dbo:Person ;
               rdfs:label ""Louis the Pious""@en .
  
  # Ensure successor is royalty
  ?successor_child a dbo:Monarch .

  # Identify Louis the German and his child
  ?louis_german dbo:child ?child_of_louis_german ;
                a dbo:Person ;
                rdfs:label ""Louis the German""@en .
  
  # Ensure child of Louis the German is royalty
  ?child_of_louis_german a dbo:Monarch .

  # Find parent of the successor's child (which should be the same as father_of_parent)
  ?parent_of_successor_child dbo:child ?successor_child ;
                             dbp:spouse ?spouse .
  
  FILTER(?father_of_parent = ?parent_of_successor_child)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
839,63,test,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the member of Böhse Onkelz.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?charlieBand ?kevinBand ?boMemberBand WHERE {
  # Charlie Huhn's band
  OPTIONAL {
    ?charlie a dbo:MusicalArtist ;
             foaf:name ""Charlie Huhn"" .
    ?charlie dbo:band ?charlieBand .
  }

  # Kevin Russell's persona and his band
  OPTIONAL {
    ?kevin a dbo:MusicalArtist ;
           foaf:name ""Kevin Russell (musician)"" .
    ?kevin dbo:band ?kevinBand .
  }
  
  # Böhse Onkelz member and their band
  OPTIONAL {
    ?boMember dbo:memberOf dbr:Böhse_Onkelz ;
              a dbo:MusicalArtist .
    ?boMember dbo:band ?boMemberBand .
  }
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
83,19,test,"Give me the party of the governor of the commander, that is a politician, in Central African Republic Civil War and ruling party in the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983).","SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?party
WHERE {
  # Find Sandro's birthplace
  dbr:Sandro_(footballer,_born_October_1983) dbo:nationality dbr:Brazil ;
      dbo:birthPlace ?town .

  # Ensure the town is also a soccer club
  ?town rdf:type dbo:Town ;
        dbo:sportTeam ?soccerClub .
  
  # Find the ruling party in that town
  ?rulingParty dbp:rulingPartyIn ?town .

  # Find the governor related to the Central African Republic Civil War
  ?governor dbo:officeHolder dbr:Central_African_Republic_Civil_War ;
           dbo:partyAffiliation ?party .

  # Ensure the politician is associated with this governor
  ?politician dbo:affiliatedWithParty ?party ;
              dbo:associatedGovernor ?governor .
  
  # Bind the ruling party to the result
  BIND(?rulingParty AS ?party)
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
917,60,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Mayor of Hawaiian Kingdom and their royal child
  ?mayor a dbo:Mayor ;
         dbo:country dbr:Hawaiian_Kingdom .
  
  ?royalChild1 dbo:childOf ?mayor ;
               a dbo:Royalty .

  # Kamehameha III's father and his royal child
  dbr:Kamehameha_III dbo:father ?kamehamehaFather .
  
  ?royalChild2 dbo:childOf ?kamehamehaFather ;
               a dbo:Royalty .

  # Common royal child
  FILTER (?royalChild1 = ?royalChild2)

  # Parent of the common royal child
  ?parent dbo:child ?royalChild1 .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
443,27,test,"Give me the birthplace of the work of yes and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and landmark at elevation of 28.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v2 <http://dbpedia.org/property/author> ""yes""@en . ?v3 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlacePerson ?workBirthPlace ?landmark
WHERE {
  # Find the person born on November 20, 1949, who is a musical artist and part of Yes
  ?person dbo:birthDate ""1949-11-20""^^xsd:date ;
          rdf:type dbo:MusicalArtist ;
          dbo:member dbr:Yes .

  # Get the birthplace of this person
  ?person dbp:birthPlace ?birthPlacePerson .

  # Get the work (musical group Yes) and its associated place
  OPTIONAL {
    dbr:Yes dbo:locationCreated ?workBirthPlace .
  }

  # Find a landmark at an elevation of 28 meters
  ?landmark dbo:elevation ""28""^^xsd:decimal ;
            rdf:type dbo:Lighthouse .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
459,25,test,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore and person born as John Kevin Stitt and governor of the administration, that is a politician, of Brad Henry.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . ?v4 <http://dbpedia.org/property/governor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?governorOfDeathPlace ?governorOfAdministration
WHERE {
  # Cliff Roquemore's death place
  ?cliffRoquemore dbo:deathPlace ?deathPlace .
  FILTER (rdf:type(?deathPlace, dbp:Settlement)) .

  # John Kevin Stitt's birthplace
  ?johnKevinStitt dbo:birthPlace ?birthPlace .

  # Brad Henry's administration
  ?bradHenry dbo:officeHolder ?administration .
  FILTER (rdf:type(?governorOfAdministration, dbo:Politician)) .

  # Find governor of the death place
  ?deathPlace dbo:governor ?governorOfDeathPlace .

  # Find governor of the administration
  ?administration dbo:governor ?governorOfAdministration .
  
  # Identify entities by their names
  VALUES ?cliffRoquemore { <http://dbpedia.org/resource/Cliff_Roquemore> }
  VALUES ?johnKevinStitt { <http://dbpedia.org/resource/John_Kevin_Stitt> }
  VALUES ?bradHenry { <http://dbpedia.org/resource/Brad_Henry> }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
892,66,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of Henri Crolla and landmark at elevation of the award of Anna Ishii.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v0 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v6 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/elevation> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX yago: <http://dbpedia.org/class/yago/>

SELECT DISTINCT ?entity
WHERE {
  # Entity in administration that is Italian, a region, and an administrative region
  ?entity dcterms:isPartOf <http://dbpedia.org/resource/Italy> .
  ?entity rdf:type yago:Region108069 ;
          rdf:type yago:AdministrativeRegion .

  # Party of Andrea Cozzolino that is a political party and organization
  ?party rdf:type yago:PoliticalParty, owl:Thing .
  ?andrea dbo:memberOf ?party .
  ?andrea foaf:name ""Andrea Cozzolino""@en .

  # Profession of Henri Crolla
  ?henri dbo:profession ?profession .
  ?henri foaf:name ""Henri Crolla""@en .

  # Landmark at elevation and award of Anna Ishii
  ?landmark rdf:type dbo:Lighthouse ;
            dbo:elevation ?elevation .
  
  ?award dbo:recipient ?anna .
  ?anna foaf:name ""Anna Ishii""@en .
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
892,64,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of the true self of Enrico Crolla and landmark at elevation of 58.","SELECT ?result WHERE { <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInAdministration
WHERE {
  # Entity in administration that is Italian, a region, a settlement, and an administrative region
  ?entityInAdministration dbo:country dbr:Italy ;
                         rdf:type/(dbo:Region|dbo:Settlement|dbo:AdministrativeRegion) .

  # Party of Andrea Cozzolino that is a political party and organization
  ?party dbo:member dbr:Andrea_Cozzolino ;
         rdf:type/(dbo:PoliticalParty|dbo:Organization) .
  
  # Link the entity in administration to the party
  ?entityInAdministration dbo:governingParty ?party .

  # Profession of Enrico Crolla's true self
  ?enricoCrolla dbp:trueSelf ?trueSelf ;
                dbo:profession ?profession .
  ?entityInAdministration dbo:member ?profession .

  # Landmark at elevation 58
  ?landmark dbo:elevation ""58""^^xsd:decimal ;
            rdf:type dbo:Lighthouse .
  
  # Link the entity in administration to the landmark
  ?entityInAdministration dbo:contains ?landmark .
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
573,63,test,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/governor> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?personDecedent
WHERE {
  # Charlie Baker's real name and its administration region
  dbr:Charlie_Baker_(Australian_footballer) dbo:realName ?charlieRealName .
  
  # Administration region where the person decedent died
  ?administrationRegion a dbo:AdministrativeRegion ;
                       dbp:name ?charlieRealName .
  
  # Person who died at this administration region
  ?personDecedent dbo:placeOfDeath ?administrationRegion .

  # Parent of an author who is a politician and office holder related to Exchequer Standards
  ?author dbo:parent ?personDecedent ;
          dbo:occupation dbr:Politician ;
          dbo:officeHolder true .
  
  ?exchequerStandards dbo:author ?author .
  
  # Person decedent at the residence of William J. Phelan
  dbr:William_J._Phelan dbo:residence ?settlementResidence .
  
  ?personDecedent dbo:placeOfDeath ?settlementResidence .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
433,69,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist
WHERE {
  # Find the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  dbr:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall dbo:writer ?writer .

  # Find the associated musical artist of this writer
  ?writer dbo:associatedMusicalArtist ?associatedWriterArtist .

  # Scott LaFaro's associated musical artist who is also an artist and a musical artist
  dbr:Scott_LaFaro dbo:associatedMusicalArtist ?scottAssociatedArtist .
  FILTER (dbo:musicalArtist ?scottAssociatedArtist && dbo:artist ?scottAssociatedArtist) .

  # Find the person born as a musical artist and an artist, associated with Paul Chambers
  dbr:Paul_Chambers dbo:associatedMusicalArtist ?paulChambersAssociated .
  FILTER (dbo:musicalArtist ?paulChambersAssociated && dbo:artist ?paulChambersAssociated) .

  # The final association we are looking for
  ?paulChambersAssociated = ?associatedWriterArtist .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
933,66,test,"Give me the band of the band of Alan Warner (musician) and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of Alan Warner (musician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alanWarnerBirthName ?alanWarnerBand ?otherMusician ?otherMusicianBand
WHERE {
  # Find Alan Warner's birth name
  dbr:Alan_Warner_(musician) dbo:birthName ?alanWarnerBirthName .

  # Find the band associated with Alan Warner
  OPTIONAL { 
    dbr:Alan_Warner_(musician) dbo:band ?alanWarnerBand .
  }

  # Find a musician born on 1947-04-21
  ?otherMusician a dbo:MusicalArtist ;
                dbp:birthday ""1947-04-21""^^xsd:date .

  # Ensure the band of this musician is classified as a group, band, and organization
  OPTIONAL {
    ?otherMusician dbo:band ?otherMusicianBand .
    ?otherMusicianBand a dbo:MusicalGroup ;
                      a dbo:Band ;
                      a dbo:Organization .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
507,64,test,Give me the spouse of the person born as the birth name of Anne V. Coates and director of Entertaining Mr Sloane (film) and professional in the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse
WHERE {
  # Identify Anne V. Coates by her birth name and directorship
  ?anne a dbo:FilmDirector ;
        foaf:name ""Anne V. Coates"" ;
        dbo:directed dbr:Entertaining_Mr_Sloane .

  # Find the person born on 1966-02-18 and their profession
  ?person dbo:birthday ""1966-02-18""^^xsd:date ;
          dbo:profession ?profession .

  # Match the person with Anne V. Coates' criteria
  ?matchedPerson foaf:name ?anneName ;
                 dbo:directed dbr:Entertaining_Mr_Sloane ;
                 dbo:birthName ?anneBirthName .

  FILTER (?anneName = ""Anne V. Coates"" && ?anneBirthName = ?anneBirthName)

  # Find the spouse of this matched person
  ?matchedPerson foaf:mbox ?spouseEmail .
  ?spouse foaf:mbox ?spouseEmail ;
          dbo:spouse ?matchedPerson .

}
```

### Explanation:

- **PREFIX**: Define prefixes for common namespaces.
- **SELECT**: We are interested in the spouse (`?spouse`).
- **WHERE**:
  - Identify Anne V. Coates using her name and directorship of ""Entertaining Mr Sloane.""
  - Find a person born on 1966-02-18 and their profession.
  - Match this person with Anne V. Coates' criteria (birth name and directorship).
  - Use the `foaf:mbox` property to find the spouse via email, assuming it's available.

This query assumes that the necessary properties are present in DBpedia for these individuals. Adjustments may be needed based on actual data availability.",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
93,18,test,"Give me the death place of the governor of Bob Bartlett and capital of the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?capital
WHERE {
  # Bob Bartlett's death place
  dbr:Bob_Bartlett dbo:placeOfBirth ?birthPlace .
  OPTIONAL { dbr:Bob_Bartlett dbo:deathPlace ?deathPlace . }

  # Clam Cove Pictograph Site is in Nunavut
  dbr:Clam_Cove_Pictograph_Site dbo:locatedInRegion dbr:Nunavut .

  # Capital of Nunavut
  dbr:Nunavut dbo:capital ?capital .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
443,28,test,"Give me the landmark at elevation of the award of William Shepherd and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and birthplace of the work of yes.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/author> ""yes""@en . ?result <http://dbpedia.org/ontology/elevation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark ?birthplace ?work
WHERE {
  # William Shepherd's award and its landmark
  ?award dbo:recipient dbr:William_Shepherd .
  ?award dbo:location ?landmark .
  
  # Person born on 1949-11-20 who is a musical artist and an artist
  ?person dbp:dateOfBirth ""1949-11-20""^^xsd:date ;
          dbo:birthPlace ?birthplace ;
          rdf:type/(dbo:MusicalArtist|dbo:Artist) ?type .
  
  # Work associated with Yes
  ?yesWork dbo:artist dbr:Yes ;
           dbo:work ?work .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
826,61,test,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v1 <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Louis I (Grand Duke of Hesse)
  dbr:Louis_I,_Grand_Duke_of_Hesse a dbo:Monarch ;
    dbo:child ?royalty1 .

  # Royalty who is the successor and reference to Louis I
  ?royalty1 a dbo:RoyalFamilyMember ;
            dbo:successor ?referenceRoyalty .

  # Reference royalty must be a predecessor of parent of child of Louis IV
  ?referenceRoyalty a dbo:RoyalFamilyMember ;
                    dbo:predecessor ?parentOfChild .

  dbr:Louis_IV,_Grand_Duke_of_Hesse a dbo:Monarch ;
    dbo:child ?childOfLouisIV .
  
  ?parentOfChild dbo:child ?childOfLouisIV .

  # The successor of the royalty (reference) we are interested in
  ?referenceRoyalty dbo:successor ?successor .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
373,9,test,"Give me the writer of the work, that is a single and a musical work and a work and a soundtrack, of  and professional in the profession of Beto Guedes.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> """"@en . <http://dbpedia.org/resource/Beto_Guedes> <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer
WHERE {
  ?work a dbo:SinglesAlbum ;
        a dbo:MusicalWork ;
        a dbo:Soundtrack ;
        dbo:composer ?writer .
  
  FILTER (?writer = dbr:Beto_Guedes)
}
```

This query does the following:
- Selects distinct writers (`?writer`) of works that are classified as singles, musical works, and soundtracks.
- Ensures that Beto Guedes is the composer or writer of these works.",4,8,5,2,2,2,2,9,0,0,78,0,0.0,0
826,67,test,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v6 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor
WHERE {
  # Louis IV, Grand Duke of Hesse and his child
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:child ?child .

  # Parent of the child (Louis IV's spouse)
  ?parent dbo:spouse ?child .
  
  # Predecessor of the parent
  ?predecessor dbo:successor ?parent .

  # Successor of the child
  ?successor dbo:predecessor ?child .

  # Ensure all are royalty
  FILTER (?predecessor != ?child && ?predecessor != ?parent && ?predecessor != ?successor)
  FILTER EXISTS { ?predecessor a dbo:Monarch . }
  
  # Reference to Louis I and spouse of Anna Magdalena Appel
  OPTIONAL {
    ?reference dbo:spouse dbr:Anna_Magdalena_Appel .
    ?reference dbo:successor dbr:Louis_I_of_Hesse_Darmstadt .
  }

  FILTER EXISTS { ?reference a dbo:Monarch . }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
933,67,test,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of Mike Elliott (saxophonist).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthday ""1947-04-21""^^xsd:date ;
          dbo:birthName ?birthName .
  
  ?band a dbo:Band, dbo:Organization, dbo:Group ;
        dbo:member ?person ;
        dbo:member dbr:Mike_Elliott_(saxophonist) .

}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
124,64,test,"Give me the military force of Battle of Tamai and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?battleForce ?personSocietalEvent ?personMilitaryConflict ?war ?referenceOrganization ?referenceUnit
WHERE {
  # Battle of Tamai military force
  ?battle dbp:name ""Battle of Tamai""@en .
  ?battle dbp:participatedIn ?battleForce .

  # Person born on 1850-06-24
  ?person dbo:birthDate ?birthDate ;
          dbo:commanderOf ?war .
  FILTER (YEAR(?birthDate) = 1850 && MONTH(?birthDate) = 6 && DAY(?birthDate) = 24)

  # Societal event and military conflict for the person
  OPTIONAL { ?person dbp:societalEvent ?personSocietalEvent }
  OPTIONAL { ?person dbp:militaryConflict ?personMilitaryConflict }

  # War as a societal event and military conflict
  ?war dbo:partOf ?societalEvent ;
       dbo:partOf ?militaryConflict .
  FILTER (isLiteral(?societalEvent) && isLiteral(?militaryConflict))

  # Reference to 'A' Battery, Royal Australian Artillery
  ?reference dbp:name ""'A' Battery, Royal Australian Artillery""@en ;
             dbo:organization ?referenceOrganization ;
             dbo:militaryUnit ?referenceUnit .
  FILTER (dbo:country(?referenceOrganization) = dbc:Australia)

}",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
773,64,test,"Give me the spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of Carloman of Bavaria and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse
WHERE {
  # Step 1: Identify Bernard (son of Charles the Fat)
  ?bernard dbo:father dbr:Charles_the_Fat .
  
  # Step 2: Find Bernard's Parent
  ?parent dbo:child ?bernard .

  # Step 3: Determine Spouse of Bernard's Grandparent
  ?grandparent dbo:spouse ?spouse .

  # Step 4: Identify Carloman of Bavaria's Parent
  ?carlomanParent dbo:child dbr:Carloman_of_Bavaria .

  # Step 5: Common Parent between Bernard and Carloman of Bavaria
  FILTER (?parent = ?carlomanParent)

  # Step 6: Child of This Common Parent who is royalty
  ?royaltyChild dbo:parent ?parent .
  ?royaltyChild a dbo:Monarch .

  # Step 7: Father of This Child, ensuring he is both an office holder and royalty
  ?father dbo:child ?royaltyChild .
  ?father a dbo:OfficeHolder .
  ?father a dbo:Monarch .

  # Step 8: Spouse of This Father
  ?father dbo:spouse ?spouse .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
47,60,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/governor> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?award ?awardeeOffice ?politician ?adminOffice
WHERE {
  # Find awards given in India and their awardees
  ?award dbo:country dbr:India .
  ?award dbo:recipient ?awardee .
  
  OPTIONAL {
    ?awardee dbo:office ?awardeeOffice .
  }
  
  # Find politicians involved in Operation Green Hunt
  ?politician dbo:occupation dbp:Politician ;
              dbo:participatedIn dbr:Operation_Green_Hunt .
  
  OPTIONAL {
    ?politician dbo:administrativePost ?adminOffice .
  }
}
```",6,8,7,3,2,3,3,71,0,0,33,0,0.0,0
839,60,test,"Give me the band of the band, that is a musical artist, of the professional in Musician and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalBand
WHERE {
  # Kevin Russell as a musician
  dbr:Kevin_Russell dbo:profession dbr:Musician .
  
  # Kevin Russell's birth details (assuming he is also a musical artist)
  OPTIONAL { 
    dbr:Kevin_Russell dbo:birthPlace ?birthPlace .
  }
  
  # Band associated with Kevin Russell
  OPTIONAL {
    dbr:Kevin_Russell dbo:band ?intermediateBand .
    
    # Ensure the band is a musical artist
    ?intermediateBand rdf:type dbo:MusicalArtist .
    
    # Find the band of this intermediate band
    ?intermediateBand dbo:band ?finalBand .
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
216,65,test,"Give me the player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/coach> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player ?team
WHERE {
  ?player a dbo:SoccerPlayer ;
          dbo:birthDate ?birthDate ;
          dbo:managerOfTeam dbr:Croatia_national_under-21_football_team ;
          dbo:member dbr:Džemal_Berberović .
  
  ?player dbo:sportManager true ;
          dbo:soccerManager true .

  FILTER (YEAR(?birthDate) = 1983 && MONTH(?birthDate) = 12 && DAY(?birthDate) = 20)

  OPTIONAL {
    ?team dbo:member ?player .
  }
}",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
417,59,test,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse
WHERE {
  # Knud, Hereditary Prince of Denmark
  ?knud a dbo:Person ;
        foaf:name ""Knud, Hereditary Prince of Denmark"" .

  # Child of Knud
  ?childOfKnud dbo:parent ?knud ;
               a dbo:Person .

  # Parent of the child who is royalty
  ?royalParent dbo:parent ?childOfKnud ;
               a dbo:RoyalFamilyMember .

  # Spouse of this royal parent
  ?spouse dbo:spouse ?royalParent .

  # Leader of Colony of Greenland
  ?leaderOfGreenland a dbo:Person ;
                     foaf:name ""Leader of Colony of Greenland"" .

  # Father of the leader who is royalty
  ?fatherOfLeader dbo:parent ?leaderOfGreenland ;
                  a dbo:RoyalFamilyMember .

  # Ensure the child is also a child of this father
  ?childOfKnud dbo:parent ?fatherOfLeader .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
933,58,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of Alan Warner (musician) and band of Mike Elliott (saxophonist).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandName ?alanWarnerBirthName ?mikeElliottBandName
WHERE {
  # Find the person born on 1947-04-21 who is a musical artist
  ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
          rdf:type dbo:MusicalArtist .

  # Find the band associated with this person, which is both a group and an organization
  ?band dbo:member ?person ;
        rdf:type dbo:Band , dbo:Organization ;
        rdfs:label ?bandName .

  # Reference to Alan Warner's birth name
  dbr:Alan_Warner dbp:birthName ?alanWarnerBirthName .

  # Find the band of Mike Elliott (saxophonist)
  dbr:Mike_Elliott dbo:instrument dbr:Saxophone ;
                   dbo:member ?mikeElliottBand .
  ?mikeElliottBand rdfs:label ?mikeElliottBandName .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
955,20,test,"Give me the band of the writer of the work, that is a work and an album and a musical work, of Matt Freeman and band of the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfMattFreeman ?work ?referenceBand
WHERE {
  # Find Matt Freeman and his band
  ?mattFreeman a dbo:MusicalArtist ;
              foaf:name ""Matt Freeman"" .
  
  ?bandMemberMembership dbo:member ?mattFreeman ;
                       dbo:musicalGroup ?bandOfMattFreeman .

  # Find works that are both albums and musical works by this band
  ?work dbo:albumOfMusicBrainz ?albumID ;
        dbo:work ?musicalWorkID .
  
  FILTER EXISTS { ?albumID a dbo:Album . }
  FILTER EXISTS { ?musicalWorkID a dbo:MusicalWork . }

  # Find reference bands related to Street Dogs
  ?referenceBand a dbo:Band, dbo:Group, dbo:Organisation ;
                 dbo:reference dbr:Street_Dogs .
}",6,14,7,3,2,3,2,20,0,0,1,0,0.0,0
892,69,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of the true self of Enrico Crolla and landmark at elevation of the award of Anna Ishii.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/elevation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity
WHERE {
  # Entity in administration
  ?entity dbo:country dbr:Italy .
  ?entity dbo:type ?type .
  FILTER(?type IN (dbr:Region_of_Italy, dbr:Settlement)) .
  ?entity dbo:administrativeRegion ?adminRegion .

  # Party of Andrea Cozzolino
  ?party dbo:memberAndreaCozzolino ?entity .
  FILTER(?party rdf:type dbr:Political_party) .
  FILTER(?party rdf:type dbr:Organization) .

  # Profession of Enrico Crolla's true self
  ?profession dbo:occupationEnricoCrolla ?entity .

  # Landmark at elevation of Anna Ishii's award
  ?landmark dbo:elevation ?elevation .
  ?award dbo:elevation ?sameElevation .
  FILTER(?elevation = ?sameElevation) .
  ?award dbo:recipientAnnaIshii ?entity .
}",8,14,9,3,3,3,3,71,0,0,2,0,0.0,0
582,66,test,"Give me the reference to the residence of Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?residence ?father ?nickname
WHERE {
  # Hirotaka Sugawara's residence
  OPTIONAL { 
    dbr:Hirotaka_Sugawara dbo:residence ?residence .
  }

  # Father of Masami Nagasawa who is an athlete, soccer manager, and sports manager
  OPTIONAL {
    ?father dbo:child dbr:Masami_Nagasawa ;
            a dbo:Athlete ;
            a dbo:SoccerManager ;
            a dbo:SportsManager .
  }
  
  # Nickname of the team managed by Hajime Moriyasu
  OPTIONAL {
    ?team dbo:manager dbr:Hajime_Moriyasu ;
          dbo:nickname ?nickname .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
433,56,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of Bill Evans.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Paul Laurence Dunbar Chambers Jr. associated with Bill Evans
  dbr:Paul_Laurence_Dunbar_Chambers_Jr_ (dbo:associatedMusicalArtist) ?billEvans .

  # Writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  dbr:""Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall"" dbo:writer ?writer .
  
  # Profession of the writer
  ?writer dbo:profession ?profession .

  # Find artists born as a musical artist and an artist
  ?artist a dbo:MusicalArtist ;
          a dbo:Artist ;
          dbo:birthPlace ?birthPlace .

  # Match profession with the writer's profession
  ?artist dbo:profession ?profession .

  # Associated with Bill Evans
  ?artist (dbo:associatedBand | dbo:associatedPerformer) ?billEvans .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
582,62,test,"Give me the figure known as --10-19 and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v6 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?residence ?fatherName ?fatherProfession
WHERE {
  # Find Hirotaka Sugawara's residence
  ?sugawara a dbo:Scientist ;
            foaf:name ""Hirotaka Sugawara"" .
  
  OPTIONAL { 
    ?sugawara foaf:based_near ?residence .
  }
  
  # Find Kazuaki Nagasawa's father
  ?nagasawa a dbo:Person ;
            foaf:name ""Kazuaki Nagasawa"" ;
            dbo:father ?father .

  ?father a dbo:Athlete, dbo:SoccerManager, dbo:SportsManager ;
          foaf:name ?fatherName .
  
  OPTIONAL {
    ?father dbo:profession ?fatherProfession .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
917,65,test,"Give me the child of the father of Kamehameha IV and parent of the child, that is a royalty, of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v1 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfFather ?parentOfChild ?spouseChild
WHERE {
  # Kamehameha IV's father
  dbr:Kamehameha_IV dbo:father dbr:Kamehameha_III .

  # Child of Kamehameha III (which is Kamehameha IV)
  dbr:Kamehameha_IV dbo:childOf dbr:Kamehameha_III .
  
  # Parent of the child of Kamehameha IV (which is Kamehameha IV himself)
  ?parentOfChild dbo:parent dbr:Kamehameha_IV .
  FILTER (?parentOfChild = dbr:Kamehameha_IV)

  # Spouse of Leleiohoku I
  dbr:Leleiohoku_I dbo:spouse ?spouse .

  # Child of the father of the spouse of Leleiohoku I
  ?fatherOfSpouse dbo:child ?spouse .
  ?childOfFather dbo:childOf ?fatherOfSpouse .

  # Ensure all are royalty
  FILTER (dbo:RoyalFamilyMember(?parentOfChild) && 
          dbo:RoyalFamilyMember(?childOfFather) &&
          dbo:RoyalFamilyMember(?spouseChild))
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
47,69,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of Banga Bhushan and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/office> ?result . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v7 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://dbpedia.org/property/governor> ?v4 . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?award ?awardeeOffice ?bangaBhushanAwardeeOffice ?operationGreenHuntAdminOffice
WHERE {
  # Awards given in India and their awardees' offices
  ?award dbo:country dbr:India .
  ?award dbo:recipient ?person .
  OPTIONAL { ?person dbp:office ?awardeeOffice . }
  
  # Banga Bhushan award and its awardee's office
  dbr:Banga_Bhushan_Award dbo:recipient ?bangaBhushanAwardee .
  OPTIONAL { ?bangaBhushanAwardee dbp:office ?bangaBhushanAwardeeOffice . }
  
  # Politician involved in Operation Green Hunt and their administrative office
  ?operationGreenHuntEvent dbo:participant ?politician .
  FILTER (CONTAINS(LCASE(?operationGreenHuntEvent), ""operation green hunt""))
  FILTER (?politician a dbo:Politician)
  OPTIONAL { ?politician dbp:office ?operationGreenHuntAdminOffice . }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
527,20,test,"Give me the actor of the movie, that is a work and English and a television show, with the professional in Actor and author of the work, that is a work and a book, of the host of Hyperland.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://dbpedia.org/property/author> ?v4 . ?v1 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:language ""English"" ;
         dbo:genre dbr:Television_show .
  
  ?actor dbo:profession dbr:Actor ;
         dbo:actedIn ?movie .

  ?book a dbo:Book ;
        dbo:author ?actor .

  ?host rdfs:label ""Hyperland""@en ;
        dbo:hostedBy ?person .

  ?person dbo:occupation dbr:Author .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
5,19,test,"Give me the birthplace of the person born, that is a politician, as  and entity in the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> """"@en . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthplace
WHERE {
  # Find Rubén Colón Tarrats and ensure he is a politician
  dbr:Rub%C3%A9n_Col%C3%B3n_Tarrats dbo:occupation dbr:Politician ;
                                     dbp:birthPlace ?birthplace .

  OPTIONAL {
    # Find an award associated with a band linked to Rubén Colón Tarrats
    ?award dbo:recipient ?band .
    ?band rdf:type dbo:Band .
    ?rubenAwardedBy ?award .
    ?rubenAwardedBy dbp:awardedTo dbr:Rub%C3%A9n_Col%C3%B3n_Tarrats .
  }
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
865,66,test,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v6 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nativePlace
WHERE {
  # Ram Jaipal Singh Yadav's residence country
  ?ramResidence a dbo:Country ;
                dbo:nativeOf ?nativePlace .
  
  # Abu Ahmad Abdul Hafiz's child who is a politician
  ?abuChild foaf:parent ?abuFather ;
            a dbo:Politician .

  # Abul Maal Abdul Muhith's father and grandfather
  ?maalParent foaf:child ?maal .
  ?maalGrandfather foaf:child ?maalParent .

  # Linking the entities through their relationships
  ?ramResidence foaf:parent ?abuFather .
  ?abuFather foaf:parent ?maalGrandfather .

  FILTER (isLiteral(?nativePlace))
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
917,56,test,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of Kekūanāoʻa and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Kamehameha IV's royal child who is also a child of Kekūanāoʻa
  ?child dbo:parent dbr:Kamehameha_IV ;
         dbo:royalty ""true""^^xsd:boolean ;
         dbo:parent dbr:Ke_kuaana_o_`Akea .

  # This child's father is the same as Kamehameha III's royal child's father
  ?childF dbo:parent ?father .
  ?k3Child dbo:parent ?father ;
           dbo:royalty ""true""^^xsd:boolean .
  ?k3Child dbo:parent dbr:Kamehameha_III .

}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
645,69,test,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and commander in the force of the commander in Siege of Madrid.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/office> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  # Francisco Largo Caballero's military force
  ?force a dbo:MilitaryConflict ;
         dbo:eventType ?eventType1, ?eventType2, ?eventType3 .
  
  FILTER(?eventType1 = dbo:SocietalEvent && 
         ?eventType2 = dbo:War && 
         ?eventType3 = dbo:Event)

  # Francisco Largo Caballero's association with the force
  dbr:Franco_Largo_Caballero dbo:militaryForce ?force .

  # Office as a government agency and organization
  ?office a dbo:GovernmentAgency, dbo:Organization ;
          dbo:leader dbr:Franco_Largo_Caballero .
  
  # Native of Restoration (Spain)
  dbr:Franco_Largo_Caballero dbo:nativePlace dbr:Restoration_(Spain) .

  # Commander in the Siege of Madrid
  ?siege a dbo:MilitaryConflict ;
         dbo:commander dbr:Franco_Largo_Caballero .
  
  FILTER(?siege = dbr:Siege_of_Madrid)

  # Linking military force with the siege
  ?force dbo:partOf ?siege .

}",8,13,9,3,3,3,3,71,0,0,2,0,0.0,0
933,65,test,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of the band of Alan Warner (musician).",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName ?bandName
WHERE {
  # Find Alan Warner (musician)
  ?person a dbo:MusicArtist ;
          foaf:name ""Alan Warner"" ;
          foaf:nick ""Alan Warner"" .

  # Get his birth name
  OPTIONAL { ?person foaf:name ?birthName . }

  # Find bands he is associated with
  ?band a dbo:Band, dbo:MusicalGroup, dbo:Organization ;
        dbo:member ?person .
  
  # Get band names
  OPTIONAL { ?band foaf:name ?bandName . }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
933,56,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to Alan Warner and band of the band of Alan Warner (musician).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v4 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandOfBand ?personName WHERE {
  # Find the person born on April 21, 1947
  ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
          a dbo:MusicalArtist .

  # Get Alan Warner's band
  dbr:Alan_Warner_Musician dbo:band ?alanWarnerBand .
  
  # Find the band of the person and check if it is also an organization
  ?person dbo:band ?bandOfPerson ;
          rdfs:label ?personName .

  OPTIONAL {
    ?bandOfPerson a dbo:Organization .
  }

  # Check if this band is related to Alan Warner's band
  ?alanWarnerBand dbo:band ?bandOfBand .

  FILTER (?bandOfPerson = ?alanWarnerBand)
}
ORDER BY ?personName",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
18,26,test,"Give me the alumnus of the figure known, that is an educational institution, as Saints and professional in the award of Ana María Sánchez de Ríos and parent of Liza Huber.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alumnus WHERE {
  ?institution a dbo:EducationalInstitution ;
               rdfs:label ""Saints""@en .
  
  ?alumnus dbo:almaMater ?institution ;
           dbo:award ?award ;
           foaf:parentOf dbr:Liza_Huber .

  ?award dbo:recipient dbr:Ana_María_Sánchez_de_Ríos .
}
```

4. **Explanation of the Query:**
   - We use `PREFIX` to define common namespaces for DBpedia.
   - The `SELECT` clause specifies that we want to retrieve the alumnus.
   - In the `WHERE` clause:
     - We identify an institution labeled ""Saints.""
     - We find an alumnus of this institution who has received an award related to Ana María Sánchez de Ríos and is a parent of Liza Huber.

5. **Validation:**
   - The query checks for the educational institution, the award connection, and the familial relationship as specified in the question.",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
933,61,test,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName ?bandName
WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1947-04-21""^^xsd:date ;
          foaf:name ?birthName .
  
  ?person dbo:memberOfBand ?band .

  ?band a dbo:Band, dbo:Group, dbo:Organization ;
        foaf:name ?bandName .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
839,70,test,"Give me the band of the band, that is a musical artist, of the professional in Musician and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of the person born, that is a musical artist, as Kevin Richard Russell.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  # Peter Schorowsky is a member of a band
  ?person1 dbr:Peter_Schorowsky .
  ?person1 dbo:memberOfBand ?band .

  # Kevin Richard Russell (born as Kevin Richard Russell) is a musical artist in a band
  ?person2 dbr:Kevin_Richard_Russell .
  ?person2 dbo:birthName ""Kevin Richard Russell""^^xsd:string .
  ?person2 dbo:memberOfBand ?band .

  # Ensure the entity is a band or group
  ?band rdf:type/(dbo:Band|dbo:MusicalGroup) .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
826,69,test,"Give me the spouse of the child of the father of Anna Magdalena Appel and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/property/father> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse
WHERE {
  # Anna Magdalena Bach's father and her child
  ?father dbo:child ?annaMagdalenaBach .
  ?annaMagdalenaBach dbp:spouse ?husband .
  
  # Spouse of the child of Anna Magdalena Bach's father
  ?fatherChild dbo:parent ?father .
  ?fatherChild dbp:spouse ?spouse .

  # Louis I, Grand Duke of Hesse and his successor who is royalty
  ?louisI dbp:successor ?successor .
  ?successor a dbo:Monarch .
  
  # Ensure the successor is also a child of Anna Magdalena Bach's father
  FILTER (?spouse = ?successor)

  # Louis IV, Grand Duke of Hesse and his predecessor
  ?louisIV dbp:predecessor ?predecessor .

  # Predecessor must be parent of Louis IV's child
  ?childOfLouisIV dbo:parent ?louisIV .
  ?predecessor dbo:child ?childOfLouisIV .
  
  # Ensure the predecessor is also the spouse we are looking for
  FILTER (?spouse = ?predecessor)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
216,71,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.","SELECT ?result WHERE { ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/coach> ?v2 . ?v8 <http://dbpedia.org/ontology/birthDate> ?v7 . ?result <http://dbpedia.org/ontology/coach> ?v8 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://dbpedia.org/ontology/coach> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?team
WHERE {
  ?person a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerManager .
  
  ?person dbo:birthDate ?birthDate .

  ?deathEvent dbo:date ?deathDate .
  FILTER (?birthDate = ?deathDate)
  ?deathEvent dbo:subject dbr:Pavel_Vezhinov .

  ?team a dbo:Organization ;
        a dbo:SoccerClub .

  ?coachTeam a dbo:Coach ;
             dbo:coachedTeam ?team ;
             dbo:playerInTeam dbr:Croatia_U21 .

  ?berberovic a dbo:SoccerPlayer ;
              a dbo:SportsManager ;
              a dbo:SoccerManager .
  
  ?berberovic dbo:playerInTeam ?team .
}
```",9,20,10,3,3,3,3,71,0,0,1,0,0.0,0
216,25,test,Give me the office of the mayor of Ros Bates and administration of  and party of the awardee of Australian Defence Medal.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . ?result <http://dbpedia.org/property/leader> """"@en . ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mayorOffice ?administration ?party WHERE {
  # Ros Bates as Mayor
  OPTIONAL {
    dbr:Ros_Bates dbo:office ?mayorOffice .
  }

  # Awardee of Australian Defence Medal
  OPTIONAL {
    ?awardee dbo:award ?medal .
    ?medal rdfs:label ""Australian Defence Medal""@en .
    
    # Administration during which the award was given
    OPTIONAL {
      ?administration dbo:primeMinister ?pm .
      ?pm dbo:termStart ?startYear .
      ?awardee dbo:dateOfBirth ?dob .
      
      FILTER (?dob < ?startYear)  # Assuming the awardee received the medal while they were alive during that administration
      
      BIND(?administration AS ?administration)
    }
    
    # Political party of the awardee
    OPTIONAL {
      ?awardee dbo:partyAffiliation ?party .
      BIND(?party AS ?party)
    }
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
926,57,test,"Give me the father of Mahmud II and child of the father, that is a royalty, of Mustafa III and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?mahmudIIFather ?royalChild ?şermiSpouseChild ?successor
WHERE {
  # Mahmud II's father
  dbp:fatherOf :Mahmud_II a dbo:Person ;
                dbp:name ?mahmudIIFather .

  # Mustafa III's father (same as Mahmud II's father)
  dbp:fatherOf :Mustafa_III a dbo:Person ;
                dbp:name ?mustafaFather .
  
  FILTER (?mahmudIIFather = ?mustafaFather)

  # Royal child of Mustafa III's father
  ?royalChild dbo:parent ?mustafaFather ;
              dbo:occupation dbr:Monarch .

  # Şermi Kadın's spouse and their child
  dbp:spouseOf :Şermi_Kadın a dbo:Person ;
               dbp:name ?şermiSpouse .
  
  ?şermiSpouseChild dbo:parent ?şermiSpouse .

  # Successor of Şermi Kadın's spouse's child
  ?successor dbo:succeededBy ?şermiSpouseChild .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
507,68,test,"Give me the spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of Guy Ferland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v7 <http://dbpedia.org/ontology/director> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v7 <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseName
WHERE {
  # Find Anne V. Coates by her birth name and director role
  dbr:Anne_V._Coates dbo:birthName ?birthName .
  
  # Identify a movie directed by Anne V. Coates that is both a ""movie"" and a ""work""
  ?movie dbo:director dbr:Anne_V._Coates ;
         rdf:type dbo:Film ;
         rdf:type dbo:CreativeWork .

  # Find the spouse of Anne V. Coates
  dbr:Anne_V._Coates foaf:mbox ?spouseEmail .
  ?spouse foaf:mbox ?spouseEmail ;
          foaf:name ?spouseName .

  OPTIONAL {
    # Additional condition for a person born on 1919-06-17 with profession similar to Guy Ferland
    ?person dbo:birthDate ""1919-06-17""^^xsd:date ;
            dbo:profession dbr:Guy_Ferland .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
495,18,test,Give me the child of the father of the parent of Princess Catherine of Württemberg and father of the child of Princess Charlotte of Saxe-Hildburghausen.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  # Find the parent of Princess Catherine
  ?parent dbo:spouse ?catherine .
  ?catherine rdfs:label ""Princess Catherine of Württemberg""@en .

  # Find the father of that parent (grandfather)
  ?grandfather dbo:spouse ?parent .

  # Find a child of Princess Charlotte
  ?child dbp:mother ?charlotte .
  ?charlotte rdfs:label ""Princess Charlotte of Saxe-Hildburghausen""@en .

  # The father of the child must be the same as the grandfather
  ?grandfather dbo:spouse ?parent2 .
  ?parent2 dbp:child ?child .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
433,57,test,"Give me the professional in the profession of Bob Marley and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and associated musical artist of Paul Chambers.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional ?associatedArtist ?finalArtist
WHERE {
  # Bob Marley's profession
  dbr:Bob_Marley dbo:profession ?profession .
  
  # Professional in the same profession as Bob Marley
  ?professional dbo:profession ?profession .

  # Associated musical artist of this professional who is also an artist and a musical artist
  ?associatedArtist dbo:associatedMusicalArtist ?professional ;
                   rdf:type dbo:Musician ;
                   dbo:genre ?genre .
  
  # Ensure the associated artist is linked to Ornette Coleman
  dbr:Ornette_Coleman dbo:associatedMusicalArtist ?associatedArtist ;
                      rdf:type dbo:Musician .

  # Associated musical artist of Paul Chambers
  ?finalArtist dbo:associatedMusicalArtist dbr:Paul_Chambers .
}
```",6,10,7,3,3,3,3,71,0,0,4,0,0.0,0
445,60,test,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?countryInResidence ?awardEntity
WHERE {
  # Part 1: Athlete from Great Britain and their country of residence
  ?athlete a dbo:Athlete ;
           dbo:nationality dbr:United_Kingdom ;
           dbo:residence ?residence .
  
  FILTER EXISTS { ?residence a dbo:Country }
  BIND(?residence AS ?countryInResidence)

  # Part 2: Commander in the Battle of Saint-Mihiel and their awards
  ?battle dbr:Battle_of_Saint-Mihiel ;
         dbo:commander ?commander .
  
  ?commander dbo:award ?award .
  BIND(?award AS ?awardEntity)
}
```",6,8,7,3,2,3,3,71,0,0,102,0,0.0,0
124,62,test,"Give me the military force of Battle of Atbara and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?commander ?organisation ?awardee
WHERE {
  # Battle of Atbara military force and commander
  dbr:Battle_of_Atbara dbo:militaryCommander ?commander .
  dbr:Battle_of_Atbara dbo:militaryForce ?militaryForce .

  # Reference to Australian organisation and military unit
  ?organisation a dbo:MilitaryUnit ;
                dbo:country dbr:Australia ;
                dbo:member ?battery .
  ?battery rdfs:label 'A Battery, Royal Australian Artillery'@en .

  # Military force of the war (event, conflict, societal event)
  ?war a dbo:MilitaryConflict, dbo:SocietalEvent ;
       dbo:militaryForce ?militaryForce .

  # Awardee of British South Africa Company Medal
  ?awardee dbo:award dbr:British_South_Africa_Company_Medal .
  
  # Linking the war to the awardee
  ?war dbo:participant ?awardee .
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
773,59,test,"Give me the parent of the successor of the child, that is a royalty, of Louis the Pious and spouse of the father of the parent of Bernard (son of Charles the Fat).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/ontology/successor> ?v5 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
    # Step 1: Louis the Pious's child who is royalty
    ?child dbo:parent dbr:Louis_the_Pious ;
           a dbo:Monarch .

    # Step 2: Successor of that royal child
    ?successor dbo:predecessor ?child .

    # Step 3: Parent of this successor
    ?parent dbo:child ?successor .

    # Step 4: Father of the parent from step 3
    ?father dbo:child ?parent .

    # Step 5: Spouse of that father
    ?spouse dbo:spouse ?father .
    
    # Additional condition to ensure we are dealing with Bernard (son of Charles the Fat)
    ?bernard dbo:parent dbr:Charles_the_Fat ;
             rdfs:label ""Bernard""@en .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
47,64,test,"Give me the office of Bidesh Ranjan Bose and office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> ?v3 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bideshOffice ?commanderAdmin ?awardeeOffice
WHERE {
  # Bidesh Ranjan Bose's office
  dbr:Bidesh_Ranjan_Bose dbo:office ?bideshOffice .

  # Commander in Operation Green Hunt who is a politician and their administration
  ?operationGreenHunt dbo:commander ?commander .
  ?commander rdf:type dbo:Politician .
  ?commander dbo:administration ?commanderAdmin .
  
  FILTER(CONTAINS(LCASE(?operationGreenHunt), ""operation green hunt""))

  # Awardee of an award in India
  ?award dbo:country dbr:India .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:office ?awardeeOffice .
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
865,63,test,"Give me the father of the child of Abu Ahmad Abdul Hafiz and native of the residence, that is a country, of the person decedent at Patna and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father ?politician
WHERE {
  # Abu Ahmad Abdul Hafiz and his child
  dbr:Abu_Ahmad_Abdul_Hafiz dbo:child ?child .
  
  # Decedent at Patna and their native country
  ?decedent dbo:placeOfDeath dbr:Patna ;
           dbo:nativePlace ?nativeCountry .

  # Match the native country with Abu Ahmad Abdul Hafiz's residence or related context
  OPTIONAL { 
    dbr:Abu_Ahmad_Abdul_Hafiz dbo:nationality ?nationality .
    FILTER(?nativeCountry = ?nationality)
  }

  # Politician who is a father of one of Abu Ahmad Abdul Hafiz's children
  ?politician dbo:child ?child ;
             a dbo:Politician .

  # Ensure the politician matches the criteria
  FILTER(?father = dbr:Abu_Ahmad_Abdul_Hafiz)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
715,67,test,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in Rif War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/property/office> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander
WHERE {
  ?officeHolder a dbo:OfficeHolder ;
               dbo:positionHeld ?mayorship ;
               dbo:politicalParty ?party ;
               dbo:presidentOf dbr:Spain_1933_general_election .

  ?governmentAgency a dbo:GovernmentAgency, dbo:Organization ;
                    dbo:leader ?commander .

  ?commander dbo:officeHolder ?officeHolder ;
             dbo:politician ?officeHolder ;
             dbo:president ?officeHolder ;
             dbo:participatedIn dbr:Rif_War .

  FILTER EXISTS { 
    ?rifWarParticipant dbo:name ""Carlos Franco Iribarnegaray"" .
    ?rifWarParticipant dbo:commander ?commander .
  }
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
98,9,test,Give me the parent of the successor of Emperor Nijō and child of the child of Emperor Toba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Nijō> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Emperor_Toba> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonEntity
WHERE {
  # Step 1: Find the successor of Emperor Nijō
  ?successor dbo:predecessor dbr:Emperor_Nijō .
  
  # Step 2: Find the parent of this successor
  ?parent dbo:child ?successor .

  # Step 3: Identify a child of Emperor Toba
  ?tobaChild dbo:childOf dbr:Emperor_Toba .

  # Step 4: Find the child of that child (grandchild of Emperor Toba)
  ?grandchild dbo:parent ?tobaChild .

  # Step 5: Match the parent from step 2 with the grandchild from step 4
  FILTER (?parent = ?grandchild)

  BIND(?parent AS ?commonEntity)
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
18,28,test,"Give me the parent of the professional in Actress and alumnus of the figure known, that is an educational institution, as Saints and professional in the award of Ana María Sánchez de Ríos.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v5 . ?v5 <http://dbpedia.org/property/nickname> ""Saints""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentInstitution WHERE {
  ?actress a dbo:Actress ;
           dbo:almaMater ?institution .
  
  ?institution dbo:parentOrganization ?parentInstitution .

  FILTER EXISTS { 
    ?actress foaf:name ""Ana María Sánchez de Ríos""@en
  }
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
554,18,test,Give me the leader of the birth place of The Legendary Tigerman and leader of the administration of the party member of Independent politician.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?result . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceLeader ?adminLeader
WHERE {
  # Find The Legendary Tigerman's birthplace
  dbr:The_Legendary_Tigerman dbo:birthPlace ?birthPlace .

  # Get the leader of the birth place (assuming it could be a city or country)
  OPTIONAL { 
    ?birthPlace dbo:mayor ?mayor .
    ?mayor rdfs:label ?birthPlaceLeader .
  }
  
  OPTIONAL {
    ?birthPlace dbo:governmentHead ?govHead .
    ?govHead rdfs:label ?birthPlaceLeader .
  }

  # Find an Independent politician
  ?independentPolitician a dbo:Independent_Politician ;
                        dbo:memberOfParty ?party .

  FILTER NOT EXISTS { ?party a dbo:Political_Party } .

  # Get the leader of their administration (assuming it could be a role or position)
  OPTIONAL {
    ?independentPolitician dbo:positionHeld ?position .
    ?position rdfs:label ?adminLeader .
  }
}
```",5,5,6,3,2,3,2,20,0,0,3,0,0.0,0
341,8,test,"Give me the writer of the work, that is a work and an album, of Serrano and band member of Beyoncé.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Beyoncé> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> ""Serrano""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writerName
WHERE {
  ?work dbo:album dbr:Beyoncé .
  ?work dbo:creator ?writer .
  ?writer foaf:name ""Serrano"" .
  
  OPTIONAL { 
    ?bandMember dbo:memberOfBand dbr:Beyoncé .
    ?bandMember dbo:associatedWithWork ?work .
  }
}
```

This query does the following:
- Selects distinct writers (`?writerName`) of a work that is an album by Beyoncé.
- Ensures Serrano is identified as one of the creators (`dbo:creator`).
- Optionally checks if there's a band member associated with this work.",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
965,66,test,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  # George Mountbatten, 2nd Marquess of Milford Haven's birth name
  dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven dbo:birthName ?birthName .
  
  # Parent who is a noble
  ?parent dbo:nobleTitle ?title ;
          dbo:child ?georgeMountbatten ;
          rdfs:label ?parentLabel .

  # Ensure the parent has a child who is royalty (child of Prince Louis of Battenberg)
  ?royalChild dbo:childOf dbr:Prince_Louis_of_Battenberg .
  
  # Spouse connection to Princess Victoria of Hesse and by Rhine
  ?spouse dbo:spouse ?parent ;
          dbo:spouse dbr:Princess_Victoria_of_Hesse_and_by_Rhine .

  # Bind the parent's name as the result
  BIND(CONCAT(?parentLabel, "" ("", STR(?title), "")"") AS ?parentName)

  FILTER (?georgeMountbatten = ?birthName)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
130,20,test,"Give me the figure known as the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama and entity in the administration, that is American, of the award of Živko Ključe.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v2 <http://dbpedia.org/ontology/director> ?v1 . <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/governor> ?v4 . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?figure
WHERE {
  ?figure a dbo:SoccerClub ;
          a dbo:Organisation .
  
  ?native dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Madison,_Alabama ;
          dbo:occupation dbr:Coolie ;
          dbo:occupation dbr:College_coach .

  ?figure dbo:coach ?native .

  ?award dbo:administrator ?native .
  ?award dbo:name ""Živko Ključe"" .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
216,70,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v7 . ?result <http://dbpedia.org/ontology/coach> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player WHERE {
  ?player a dbo:SoccerPlayer ;
          dbo:sportsManagerOf ?organisation ;
          dbo:coachOf ?team .
  
  ?organisation a dbo:SportsClub, dbo:SoccerClub .

  ?team dbr:Croatia_national_under-21_football_team .

  ?player dbo:birthDate ?birthDate .
  ?vezhinov dbo:dateOfDeath ?deathDate .
  FILTER (?birthDate < ?deathDate)

  ?džemalBerberović dbo:playerInCoach ?player ;
                   a dbo:SoccerPlayer, dbo:SportsManager, dbo:SoccerManager .

  ?džemalBerberović dbr:Džemal_Berberović .
  ?vezhinov dbr:Pavel_Vezhinov .
}
```",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
926,67,test,"Give me the father of Mahmud II and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfMahmudII ?childOfFather ?royaltyParentBeyhanSultan ?successorChildSpouseShermiKadin
WHERE {
  # Mahmud II's father
  dbr:Mahmud_II dbo:father ?fatherOfMahmudII .
  
  # Child of Mahmud II's father who is royalty
  OPTIONAL { 
    ?childOfFather dbo:parent ?fatherOfMahmudII ;
                   a dbo:Monarch .
  }
  
  # Beyhan Sultan's parent who is royalty
  dbr:Beyhan_Sultan dbo:mother dbr:Mustafa_III ;
                    dbo:parent ?royaltyParentBeyhanSultan .
  FILTER (?royaltyParentBeyhanSultan != dbr:Mustafa_III) 
  OPTIONAL { 
    ?royaltyParentBeyhanSultan a dbo:Monarch .
  }
  
  # Şermi Kadın's spouse and their child
  dbr:Shermi_Kadin dbo:spouse ?spouseShermiKadin ;
                   dbo:child ?childSpouseShermiKadin .
  
  # Successor of the child of Şermi Kadın's spouse
  OPTIONAL {
    ?successorChildSpouseShermiKadin dbo:predecessor ?childSpouseShermiKadin ;
                                     a dbo:Monarch .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
124,57,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
  # Find the military force involved in a war that is an event, military conflict, and societal event
  ?war dbo:type dbr:Military_conflict ;
       dbo:eventCategory dbr:Societal_event ;
       dbo:participatingMilitaryUnit ?militaryForce .

  # Ensure this military force is associated with an awardee of the British South Africa Company Medal
  ?awardee dbo:awardReceived dbr:British_South_Africa_Company_Medal ;
          dbo:militaryService ?militaryForce .

  # Ensure this military force was commanded by someone in the Mahdist War
  ?commander dbo:commandedMilitaryUnit ?militaryForce ;
             dbo:participatedIn dbr:Mahdist_War .

  # Ensure this military force is linked to Herbert Kitchener, 1st Earl Kitchener
  ?kitchenerEvent dbo:type dbr:Societal_event ;
                  dbo:militaryConflict dbr:Military_conflict ;
                  dbo:involvedMilitaryUnit ?militaryForce .
  
  ?kitchenerEvent dbo:personInvolved dbr:Herbert_Kitchener,_1st_Earl_Kitchener .

}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
865,56,test,"Give me the father of AK Abdul Momen and native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?fatherAKAbdulMomen ?nativeCountryRJYResidence ?grandfatherAMAM

WHERE {
  # Father of AK Abdul Momen
  ?akAbdulMomen dbo:birthName ""AK Abdul Momen""@en .
  ?akAbdulMomen dbo:father ?fatherAKAbdulMomen .

  # Native country of Ram Jaipal Singh Yadav's residence
  ?rJYResidence foaf:name ""Ram Jaipal Singh Yadav""@en .
  ?rJYResidence dbo:nativePlace ?nativeCountryRJYResidence .

  # Grandfather of Abul Maal Abdul Muhith
  ?amAMBirthName dbo:birthName ""Abul Maal Abdul Muhith""@en .
  ?amAMBirthName dbo:father ?fatherAMAM .
  ?fatherAMAM dbo:father ?grandfatherAMAM .
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
495,20,test,Give me the child of the father of the parent of Princess Catherine of Württemberg and father of the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?v4 . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  # Grandparent of Princess Catherine of Württemberg
  ?grandparentCatherine dbo:spouse ?parentCatherine .
  ?parentCatherine dbo:child ?catherine .
  
  # Grandparent of Princess Pauline of Württemberg
  ?grandparentPauline dbo:spouse ?parentPauline .
  ?parentPauline dbo:child ?pauline .

  FILTER(?pauline = dbpedia:Princess_Pauline_of_W%C3%BCrttemberg)

  # Common parent (father) of these grandparents' children
  ?commonParent dbo:spouse ?catherine .
  ?commonParent dbo:spouse ?parentPauline .

  # Child of the common parent
  ?commonParent dbo:child ?child .
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
445,56,test,"Give me the entity in the award of the commander in Battle of Saint-Mihiel and death place of Patrick Moore and entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardEntity ?deathPlace ?residenceCountry
WHERE {
  # Commander in Battle of Saint-Mihiel and their award
  ?battle dbr:Battle_of_Saint-Mihiel ;
          dbo:commander ?commander .
  OPTIONAL { 
    ?commander dbo:awardsReceived ?award .
    ?award rdfs:label ?awardEntity .
  }

  # Death place of Patrick Moore
  dbr:Patrick_Moore dbo:deathPlace ?deathPlace .

  # Residence country of Anna Sharkey
  dbr:Anna_Sharkey dbo:residenceLocation ?residence ;
                   dbo:residenceLocationCountry ?residenceCountry .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
273,20,test,Give me the spouse of the child of the child of Edoardo Agnelli (1831-1871) and parent of the alumnus of the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v5 <http://dbpedia.org/ontology/almaMater> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse ?parentAlumnus WHERE {
  # Step 1: Identify Edoardo Agnelli (1831-1871)
  ?edoardo a dbo:Person ;
           foaf:name ""Edoardo Agnelli"" ;
           dbp:birthYear ""1831""^^xsd:gYear ;
           dbp:deathYear ""1871""^^xsd:gYear .

  # Step 2: Find his child
  ?child dbo:parent ?edoardo .
  
  # Step 3: Find the grandchild
  ?grandchild dbo:parent ?child .

  # Step 4: Determine the spouse of the grandchild
  ?spouse dbo:spouse ?grandchild .

  # Step 5: Check if the spouse has a parent who is an alumnus of Università degli Studi di Torino
  ?parentAlumnus dbo:almaMater <http://dbpedia.org/resource/Universit%C3%A0_degli_Studi_di_Torino> ;
                 dbo:child ?spouse .
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
865,61,test,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?fatherOfPolitician WHERE {
  # Syeda Shahar Banu's spouse
  ?spouse a dbo:Spouse ;
          foaf:partner ?syedaShaharBanu .
  
  # Child of the spouse who is a politician
  ?child dbo:parent ?spouse ;
         a dbo:Politician .

  # Father of this child (which is also the spouse)
  ?fatherOfPolitician foaf:parent ?child .

  # Abul Maal Abdul Muhith's father
  ?abulMaalAbdulMuhith dbo:parent ?fatherOfAbulMaal .
  
  # Children of Abul Maal Abdul Muhith's father
  ?childOfFatherOfAbulMaal dbo:parent ?fatherOfAbulMaal .

  FILTER (?child = ?childOfFatherOfAbulMaal)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
965,70,test,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  ?politician dbo:birthday ""1854-05-24""^^xsd:date ;
              a dbo:Politician .
  
  ?child dbo:parent ?politician ;
         a dbo:Royalty .

  ?nobleParent dbo:birthName dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven ;
               dbo:spouse ?spouse1 .

  ?spouse1 dbo:spouse ?spouse2 .
  
  ?child dbo:parent ?nobleParent .

  ?spouse2 dbo:spouse dbr:Princess_Victoria_of_Hesse_and_by_Rhine .

  ?nobleParent dbo:parent ?parent .
}
```

5. **Validate Completeness and Precision:**
   - Ensure all relationships are correctly mapped.
   - Verify that the query captures the nested relationships and conditions specified in the question.",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
978,19,test,"Give me the band member of the person born as the name of Chicane (musician) and band member of the professional, that is a musical artist and an artist, in .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?band
WHERE {
  # Chicane's birth name
  dbr:Chicane dbo:birthName ?chicanesBirthName .

  # Find people with the same birth name as Chicane
  ?person dbo:birthName ?chicanesBirthName .
  
  # Ensure they are band members of some group
  ?bandMemberRelation a dbo:BandMembership ;
                     dbo:band ?band ;
                     dbo:musicalArtist ?person .

  # Ensure they are recognized as musical artists and artists
  ?person a dbo:MusicalArtist ;
          a dbo:Artist .
}
```

4. **Optimize Query Logic:** 
   - The query is structured to first identify Chicane's birth name, then find individuals with the same birth name.
   - It checks for band membership and ensures the person is both a musical artist and an artist.

5. **Validate Completeness and Precision:**
   - The query captures all aspects of your question by ensuring the person has the same birth name as Chicane, is a band member, and is recognized in both artistic fields.",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
124,67,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?militaryForce
WHERE {
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  
  ?person dbo:militaryCommanderOf dbr:Mahdist_War .
  ?person dbo:awardReceived dbr:British_South_Africa_Company_Medal .

  ?war dbo:type dbr:Military_Conflict ;
       dbo:type dbr:Societal_Event ;
       dbo:eventParticipant ?militaryForce .

  ?militaryForce dbo:militaryConflict ?forceWar .
  ?forceWar dbo:type dbr:Military_Conflict ;
            dbo:type dbr:Societal_Event .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
645,64,test,"Give me the commander in the force of the commander in Siege of Madrid and military force of Spanish Civil War and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/office> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderInForce ?militaryForce ?leader ?office
WHERE {
  # Commander during the Siege of Madrid
  ?siege dbr:Siege_of_Madrid dbo:commander ?commander .
  
  # Commander in the force of the commander
  ?force dbo:commander ?commanderInForce .
  FILTER(?siege = ?force) .

  # Military force involved in the Spanish Civil War
  ?civilWar dbr:Spanish_Civil_War dbo:military_force ?militaryForce .
  FILTER(?force = ?civilWar) .

  # Leader of an office that is a government agency and organization
  ?leader dbo:office ?office .
  ?office rdf:type dbo:GovernmentAgency ;
          dbo:organization ?organization .
  
  # Native of Restoration (Spain)
  ?native dbo:nationality dbr:Spain ;
          dbo:era dbr:Restoration_(Spain) .
  ?leader dbo:native_of_country ?native .

}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
976,58,test,"Give me the office of Mustafa Şentop and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?officeMustafaŞentop ?officeMayor ?officeNaciBostancı
WHERE {
  # Mustafa Şentop's office and affiliation with Nation Alliance (Turkey)
  dbr:Mustafa_Şentop dbo:positionHeld ?officeMustafaŞentop .
  OPTIONAL { ?officeMustafaŞentop dbp:party dbr:Nation_Alliance_(Turkey) . }
  
  # Mayor's office and affiliation with Nation Alliance (Turkey)
  ?mayor a dbo:Mayor ;
         dbo:positionHeld ?officeMayor .
  OPTIONAL { ?officeMayor dbp:party dbr:Nation_Alliance_(Turkey) . }

  # Naci Bostancı's birth name and office
  dbr:Naci_Bostancı dbp:birthName ""Naci Bostancı""@en ;
                    dbo:positionHeld ?officeNaciBostancı .
  
  # Ensure all are politicians, office holders, and Turkish
  FILTER (EXISTS { ?mayor a dbo:Politician . } &&
          EXISTS { dbr:Naci_Bostancı a dbo:Politician . } &&
          EXISTS { dbr:Mustafa_Şentop a dbo:Politician . })
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
892,71,test,"Give me the landmark at elevation of the award of the member of E-girls and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of the true self of Enrico Crolla.","SELECT ?result WHERE { ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v8 <http://dbpedia.org/property/leaderParty> ?v7 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v7 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v8 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?landmark ?elevation ?region ?party ?profession
WHERE {
  # Member of E-girls
  ?member dbo:memberOf dbr:E-girls .
  
  # Award related to the member and its elevation
  ?award dbo:recipient ?member ;
         dbo:elevation ?elevation .
  ?landmark dbo:elevation ?elevation .

  # Italian region, settlement, or administrative region in administration
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          (dbo:settlement|dbo:administrativeRegion) ?adminEntity .
  
  # Political party associated with Andrea Cozzolino
  ?party a dbo:PoliticalParty ;
         dbo:member dbr:Andrea_Cozzolino .

  # Profession of Enrico Crolla's true self
  ?enrico dbp:trueSelf ?trueSelf .
  ?trueSelf dbo:profession ?profession .
}
```",9,15,10,3,3,3,3,71,0,0,2,0,0.0,0
445,57,test,Give me the entity in England and entity in the award of George H. Cameron and death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInEngland ?awardEntity ?deathPlace
WHERE {
    # Entity in England
    ?entityInEngland dbo:country dbr:England .
    
    # Entity related to an award of George H. Cameron
    ?awardEntity dbo:recipient dbr:George_H._Cameron ;
                 dbo:awardee ?person .

    # Death place of the awardee linked to establishment date 1820-03-10
    ?establishment dbo:dateEstablished ""1820-03-10""^^xsd:date .
    ?deathPlace dbo:placeOfBirth ?person .
    
    OPTIONAL {
        ?awardEntity dbo:awardedBy ?establishment .
    }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
382,18,test,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler and landmark at elevation of the award of Harry Combes.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  # Find Lukas Kübler and his manager
  ?player a dbo:SoccerPlayer ;
          foaf:name ""Lukas Kübler"" ;
          dbo:manager ?manager .

  # Ensure the manager is also an athlete and sports manager
  ?manager a dbo:Athlete, dbo:SportsManager .

  # Get the birthplace of the manager
  ?manager dbo:birthPlace ?birthPlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
865,70,test,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child of the father of Abul Maal Abdul Muhith and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?native
WHERE {
  # Ram Jaipal Singh Yadav's residence and its native
  wd:Q1234567 dbo:residence ?country .
  ?country dbo:nativePlace ?native .

  # Abul Maal Abdul Muhith's father's child (Abul Maal Abdul Muhith himself)
  wd:Q2345678 dbo:child ?fatherOfMuhith .
  ?fatherOfMuhith dbo:child wd:Q2345678 .

  # Syeda Shahar Banu's spouse's child who is a politician
  wd:Q3456789 dbo:spouse ?spouse .
  ?spouse dbo:child ?politicianChild .
  ?politicianChild rdf:type dbo:Politician .
}
```

**Explanation:**
- `wd:Q1234567` represents Ram Jaipal Singh Yadav.
- `wd:Q2345678` represents Abul Maal Abdul Muhith.
- `wd:Q3456789` represents Syeda Shahar Banu.
- The query retrieves the native of the country where Ram Jaipal Singh Yadav resides, ensuring all relationships are correctly mapped.",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
433,70,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalArtist
WHERE {
  # Step 1: Find Paul Laurence Dunbar Chambers Jr.'s associated musical artist who is also an artist and musician.
  dbr:Paul_Laurence_Dunbar_Chambers_Jr_ (dbo:associatedMusicalArtist) ?chambersArtist .
  
  FILTER EXISTS { ?chambersArtist dbo:occupation dbr:Musician . }
  FILTER EXISTS { ?chambersArtist dbo:occupation dbr:Artist . }

  # Step 2: Find the writer of ""Slowhand at 70 – Live at the Royal Albert Hall"" and their profession.
  dbr:""Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall"" dbo:writer ?slowhandWriter .
  
  # Step 3: Find the associated musical artist of this writer who is also an artist and musician.
  ?slowhandWriter (dbo:associatedMusicalArtist) ?slowhandArtist .
  
  FILTER EXISTS { ?slowhandArtist dbo:occupation dbr:Musician . }
  FILTER EXISTS { ?slowhandArtist dbo:occupation dbr:Artist . }

  # Step 4: Find the associated musical artist of Ornette Coleman who is also a musician and an artist.
  dbr:Ornette_Coleman (dbo:associatedMusicalArtist) ?colemanArtist .
  
  FILTER EXISTS { ?colemanArtist dbo:occupation dbr:Musician . }
  FILTER EXISTS { ?colemanArtist dbo:occupation dbr:Artist . }

  # Step 5: Find the final associated musical artist.
  ?slowhandArtist (dbo:associatedMusicalArtist) ?finalArtist .
}",8,14,9,3,3,3,3,71,0,0,4,0,0.0,0
645,58,test,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in Battle of Jarama.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader
WHERE {
  # Francisco Largo Caballero is a native of Restoration (Spain)
  dbr:Francisco_Largo_Caballero dbo:nationality dbr:Restoration_(Spain) .

  # Battle of Jarama as an event, military conflict, and societal event
  dbr:Battle_of_Jarama rdf:type dbo:MilitaryConflict ;
                       rdf:type dbo:SocietalEvent .

  # Francisco Largo Caballero was a commander in the Battle of Jarama
  ?battleCommander dbo:commanderIn dbr:Battle_of_Jarama .
  ?battleCommander rdfs:label ""Francisco Largo Caballero""@en .

  # The office is a government agency and organization linked to Francisco Largo Caballero
  ?office rdf:type dbo:GovernmentAgency, dbo:Organization ;
          dbo:leader ?leader ;
          dbo:member dbr:Francisco_Largo_Caballero .

  # Ensure the leader is distinct
  FILTER(?leader != dbr:Francisco_Largo_Caballero)
}",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
158,20,test,"Give me the entity in the award, that is a country, of the reference to Adelbert Cronkhite and party of the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v5 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/successor> ?v5 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country
WHERE {
  # Find Adelbert Cronkhite and his death date
  ?person a dbo:Person ;
          dbp:name ""Adelbert Cronkhite""@en ;
          dbo:dateOfDeath ?deathDate .
  
  FILTER (YEAR(?deathDate) = 1945 && MONTH(?deathDate) = 9 && DAY(?deathDate) = 15)
  
  # Ensure he was an office holder and politician
  ?person dbo:occupation [ a dbo:OfficeHolder, dbo:Politician ] .

  # Find the award related to him
  ?award dbo:recipient ?person ;
         dbo:country ?country .
  
  # Find his successor who is a prime minister, office holder, and politician
  ?successor dbo:predecessor ?person ;
             a dbo:PrimeMinister, dbo:OfficeHolder, dbo:Politician ;
             dbp:party ?party .
}",6,12,7,3,2,3,2,20,0,0,1,0,0.0,0
36,26,test,"Give me the person born in 1971 and person born as the birth name of Ayo Makun and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person1971 ?ayoMakunBirthName ?lepaiousBoseFilm ?actor
WHERE {
  # Person born in 1971
  ?person1971 dbo:birthYear ""1971""^^xsd:gYear .
  
  # Ayo Makun's birth name
  dbr:Ayo_Makun dbp:birthName ?ayoMakunBirthName .

  # Lepacious Bose's claim to fame (a film)
  dbr:Lepacious_Bose dbo:film ?lepaiousBoseFilm .
  
  # Actor of the film associated with Lepacious Bose
  ?actor dbo:film ?lepaiousBoseFilm .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
933,60,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfBand
WHERE {
  # Step 1: Find the person born on 1947-04-21 who is a musical artist
  ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
          rdf:type dbo:MusicalArtist .

  # Step 2: Find the band of this person that is both a group and an organization
  ?band dbo:member ?person ;
        rdf:type dbo:Band, dbo:Organization .

  # Step 3: Find the band's band that is also an artist and a musical artist
  ?bandOfBand dbo:band ?band ;
              rdf:type dbo:Artist, dbo:MusicalArtist .

  # Step 4: Connect to The Ramones Sound
  ?bandOfBand dbo:band dbr:The_Ramones_Sound .
}
```",6,12,7,3,2,3,3,71,0,0,4,0,0.0,0
926,69,test,"Give me the father of the father of the spouse of Neşerek Kadın and successor of the child of Ahmed III and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfGrandfather
WHERE {
  # Neşerek Kadın and her spouse
  ?neşerek a dbo:Spouse ;
            dbo:spouse ?spouse .

  # Father of the spouse
  ?spouse dbo:parent ?fatherOfSpouse .

  # Grandfather (Father of the father)
  ?fatherOfSpouse dbo:parent ?fatherOfGrandfather .

  # Ahmed III and his child
  dbr:Ahmed_III dbo:child ?ahmedChild .

  # Successor of Ahmed's child
  ?ahmedChild dbo:successor ?successor .

  # Mustafa III and Beyhan Sultan
  dbr:Beyhan_Sultan dbo:parent ?beyhanParent ;
                    a dbo:RoyalFamilyMember .

  # Parent of Beyhan Sultan who is royalty
  ?beyhanParent a dbo:RoyalFamilyMember ;
                dbo:parent ?royalGrandfather .
  
  # Intersection condition
  FILTER (?fatherOfGrandfather = ?successor && ?fatherOfGrandfather = ?royalGrandfather)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
987,57,test,"Give me the entity in the region, that is a country, of Central European Time and birth place of Dado Polumenta and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country
WHERE {
  # Find countries in the Central European Time zone
  ?country dbo:timeZone dbr:Central_European_Time .

  # Dado Polumenta's birthplace
  dbr:Dado_Polumenta dbp:birthPlace ?polumentaBirthPlace .
  
  # Emir Hadžihafizbegović's films and their actors
  ?film dbo:starring dbr:Emir_Hadžihafizbegović ;
        dbo:actor ?actor .

  ?actor dbp:birthPlace ?actorBirthPlace .

  # Match birthplaces to the country in CET
  FILTER (?polumentaBirthPlace = ?actorBirthPlace)
  
  # Ensure both birthplaces are in the same country
  ?polumentaBirthPlace dbo:country ?country .
  ?actorBirthPlace dbo:country ?country .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
41,28,test,"Give me the party of the person born as David Declan Costello and party of the work, that is an office holder, of yes and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> ""yes""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?costelloParty ?officeHolderParty ?leaderParty
WHERE {
  # David Declan Costello's party
  dbr:David_Declan_Costello dbo:party ?costelloParty .

  # Office holder associated with ""yes"" and their party
  ?officeHolder dbo:affiliation ?affiliation .
  FILTER(CONTAINS(LCASE(?affiliation), ""yes"")) .
  ?officeHolder dbo:party ?officeHolderParty .

  # Leader who is a politician and office holder in the 2005 Castlereagh Borough Council election
  ?leader dbo:position ?position .
  ?position dbo:election dbr:2005_Castlereagh_Borough_Council_election .
  FILTER(CONTAINS(LCASE(?leader), ""politician"") && CONTAINS(LCASE(?leader), ""office holder"")) .
  ?leader dbo:party ?leaderParty .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
892,70,test,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and landmark at elevation of the award of the member of E-girls.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?result <http://dbpedia.org/ontology/elevation> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v6 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/province> ?v0 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?profession ?party ?region ?settlement ?landmark WHERE {
  # Henri Crolla's profession
  OPTIONAL { 
    dbr:Henri_Crolla dbo:occupation ?profession .
  }

  # Andrea Cozzolino's party
  OPTIONAL {
    dbr:Andrea_Cozzolino dbo:partyAffiliation ?party .
    FILTER (isBlank(?party) || ?party != """")
  }
  
  # Italian region that is also a settlement and administrative region of the party
  OPTIONAL {
    ?region a dbo:Region ;
            dbp:country dbr:Italy ;
            dbo:settlement ?settlement ;
            dbo:administrativeRegion ?adminRegion .
    FILTER (?party = ?adminRegion)
  }

  # Landmark at elevation related to an award of an E-girls member
  OPTIONAL {
    ?member a dbo:Egirl ;
            dbo:award ?award .
    ?award dbo:elevation ?elevation .
    ?landmark dbo:elevation ?elevation ;
              a dbo:Landscape .
  }
}
```",8,14,9,3,3,3,3,71,0,1,2,0.0,0.0,0
445,66,test,"Give me the death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of Anna Sharkey and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?residenceCountry ?award
WHERE {
  # Awardee of Royal Astronomical Society and their death place
  ?awardee dbo:award dbr:Royal_Astronomical_Society .
  ?awardee dbo:deathPlace ?deathPlace .

  # Anna Sharkey's residence country
  dbr:Anna_Sharkey dbo:residenceCountry ?residenceCountry .

  # Commander in Battle of Saint-Mihiel and their award
  ?commander dbo:participatedInBattle dbr:Battle_of_Saint-Mihiel .
  ?commander dbo:award ?award .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
445,62,test,"Give me the entity in United Kingdom and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and death place of the awardee of the establishment of 1820-03-10.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?ukEntity ?residenceCountry ?deathPlace
WHERE {
  # Entity in United Kingdom
  ?ukEntity dbo:country dbr:United_Kingdom .

  # Athlete from Great Britain and their residence country
  ?athlete dbo:nationality dbr:Great_Britain ;
           dbo:residence ?residence .
  ?residence rdf:type dbo:Country ;
             rdfs:label ?residenceLabel .

  # Establishment on a specific date
  ?establishment dbp:date ""1820-03-10""^^xsd:date ;
                 dbo:awardee ?awardee .

  # Death place of the awardee
  ?awardee dbo:deathPlace ?deathPlace .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
507,59,test,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of the person born as the birth name of Anne V. Coates.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/director> ?result . ?v5 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?directorName
WHERE {
  # Find the person born on 1919-06-17
  ?person dbo:birthday ""1919-06-17""^^xsd:date .
  
  # Find Anne V. Coates and her birth name
  ?anne foaf:name ""Anne V. Coates""@en ;
        foaf:birthName ?birthName .

  # Find the spouse of the person born on 1919-06-17
  ?person dbo:spouse ?anne .
  
  # Find a movie that is both a movie and a work
  ?movie rdf:type dbo:Film, dbo:Work ;
         dbo:director ?director .

  # Get the director's name
  ?director foaf:name ?directorName .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
326,9,test,"Give me the person decedent at the region coded, that is a settlement, as 442/760 and professional in the profession of Susanne Lewis.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Susanne_Lewis> <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/areaCode> ""442/760"" . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedentName WHERE {
  ?person dbo:deathPlace ?region .
  ?region rdfs:label ?regionLabel .
  FILTER(CONTAINS(LCASE(?regionLabel), ""442/760"") && CONTAINS(LCASE(?regionLabel), ""settlement"")) .

  ?person dbo:profession dbr:Susanne_Lewis .
  
  ?person foaf:name ?decedentName .
}
```

### Explanation:
- **PREFIXes:** Define common prefixes for DBpedia ontology and resources.
- **SELECT Clause:** We are interested in the name of the decedent (`?decedentName`).
- **WHERE Clause:**
  - `?person dbo:deathPlace ?region`: Links a person to their death place (region).
  - `?region rdfs:label ?regionLabel`: Retrieves the label of the region.
  - `FILTER(...)`: Ensures the region's label contains ""442/760"" and is classified as a settlement.
  - `?person dbo:profession dbr:Susanne_Lewis`: Links the person to the profession of Susanne Lewis.
  - `?person foaf:name ?decedentName`: Retrieves the name of the decedent.

This query assumes that DBpedia has structured data linking persons to their death places and professions, which may require adjustments based on actual schema details in DBpedia.",4,5,5,2,2,2,2,9,0,0,6,0,0.0,0
200,8,test,Give me the band member of the band of Revenge (Canadian band) and reference to Angelcorpse.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Revenge_(Canadian_band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Angelcorpse""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?member ?reference
WHERE {
  # Find band members of Revenge (Canadian band)
  { 
    ?band rdf:type dbo:Band .
    ?band rdfs:label ""Revenge (Canadian band)""@en .
    ?band dbo:bandMember ?member .
    ?member rdf:type dbo:MusicArtist .
  }
  
  OPTIONAL {
    # Find references or connections to Angelcorpse
    ?band dbp:reference ?reference .
    FILTER(CONTAINS(LCASE(?reference), ""angelcorpse""))
  }
}
ORDER BY ?member",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
124,66,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?commander ?militaryForce
WHERE {
  # Frank Rhodes and his military force in a war
  ?frankRhodes dbo:nationality dbr:United_Kingdom ;
               dbo:occupation dbr:Military_officer ;
               dbo:birthDate ?birthDate1 .
  FILTER (YEAR(?birthDate1) = 1850 && MONTH(?birthDate1) = 6 && DAY(?birthDate1) = 24)
  
  ?frankRhodes dbo:militaryConflict ?war .
  ?war a dbo:Military_conflict ;
       a dbo:Societal_event .

  # A Field Battery, Royal Australian Artillery and its commander in the same war
  dbr:A_Field_Battery,_Royal_Australian_Artillery dbo:partOfMilitaryForce ?militaryForce1 ;
                                                   dbo:militaryConflict ?war .
  
  ?commander dbo:nationality dbr:United_Kingdom ;
             dbo:occupation dbr:Military_officer ;
             dbo:militaryConflict ?war .
  FILTER (?frankRhodes != ?commander)

  # The military force of the person born on 1850-06-24
  ?person dbo:birthDate ?birthDate2 .
  FILTER (YEAR(?birthDate2) = 1850 && MONTH(?birthDate2) = 6 && DAY(?birthDate2) = 24)
  
  ?person dbo:militaryConflict ?war ;
          dbo:militaryForce ?militaryForce .

  # Ensure the military force is a societal event and a military conflict
  ?militaryForce1 a dbo:Military_conflict ;
                  a dbo:Societal_event .
  ?militaryForce a dbo:Military_conflict ;
                 a dbo:Societal_event .
}",7,14,8,3,3,3,3,71,0,0,9,0,0.0,0
791,64,test,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of Emperor Antoku.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfChild
WHERE {
  # Emperor Antoku and his predecessor
  dbr:Emperor_Antoku dbo:predecessor ?predecessor .
  
  # Father of Emperor Antoku who is a royalty and an office holder
  ?fatherAntoku dbo:child dbr:Emperor_Antoku ;
               a dbo:Monarch ;
               dbo:officeHolder ?office .

  # Spouse of the spouse of Emperor Takakura who is a royalty
  dbr:Takakura dbo:spouse ?spouseTakakura .
  ?spouseOfSpouse dbo:spouse ?spouseTakakura ;
                  a dbo:Monarch .

  # The child in question
  ?child dbo:parent ?fatherAntoku ;
         dbo:parent ?predecessor .

  # Father of the child who is royalty
  ?fatherOfChild dbo:child ?child ;
                 a dbo:Monarch .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
170,28,test,Give me the entity in the work of International Energy Agency and birth place of the awardee of People's Artist of Russia and domain of the profession of John Scholey.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?ieaEntity ?birthPlace ?professionDomain
WHERE {
  # Entity in the work of International Energy Agency
  ?ieaEntity dbo:organization dbr:International_Energy_Agency .
  
  # Birthplace of the awardee of People's Artist of Russia
  ?person dbo:honorificTitle dbr:People%27s_Artist_of_Russia ;
          dbo:birthPlace ?birthPlace .

  # Domain of the profession of John Scholey
  ?johnSchol dbr:John_Scholey ;
             dbo:profession ?profession .
  ?profession dbo:fieldOfActivity ?professionDomain .
}",6,6,7,2,3,2,3,28,0,0,3,0,0.0,0
715,64,test,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force, that is a military conflict, of the native of Morocco and commander in Spanish Civil War.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leaderName
WHERE {
  # Find ""The Office"" as a government agency and organization
  dbr:The_Office dbo:type/dbo:GovernmentAgency .
  dbr:The_Office dbo:type/dbo:Organization .

  # Identify the leader of ""The Office""
  ?officeLeader dbo:positionTitle ?title ;
                dbo:leaderOf dbr:The_Office .
  FILTER(CONTAINS(LCASE(?title), ""leader"") || CONTAINS(LCASE(?title), ""head""))

  # Find Carlos Franco Iribarnegaray's role in a military conflict
  dbr:Carlos_Franco_Iribarnegaray dbo:commanderIn ?conflict .

  # Identify the conflict involving a Moroccan native during the Spanish Civil War
  ?moroccanNative dbo:nationality dbr:Morocco .
  ?moroccanNative dbo:commanderIn ?conflict .
  FILTER(CONTAINS(LCASE(?conflict), ""spanish civil war""))

  # Link Carlos Franco Iribarnegaray to the leader of ""The Office""
  ?officeLeader foaf:name ?leaderName ;
                dbo:commanderIn ?conflict .

}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
935,19,test,"Give me the headquarter of the office of the native of Balochistan, Pakistan and death place of the awardee of Sitara-i-Imtiaz.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/location> ?result . ?v0 <http://dbpedia.org/property/office> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?headquarter ?deathPlace

{
  # Find the headquarter of the office of natives from Balochistan, Pakistan
  {
    SELECT DISTINCT ?native ?office ?headquarter
    WHERE {
      ?native dbo:nationality dbr:Balochistan_Pakistan .
      ?office dbo:employee ?native ;
              dbo:location ?headquarter .
    }
  }

  # Find the death place of awardees of Sitara-i-Imtiaz
  {
    SELECT DISTINCT ?awardee ?deathPlace
    WHERE {
      ?awardee dbo:honoraryTitle dbr:Sitara_i_Imtiaz ;
               dbo:deathPlace ?deathPlace .
    }
  }

}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
102,18,test,"Give me the native of the residence, that is English and a settlement, of Peter Finbow and manager of the player in the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/team> ?v2 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeOfResidence
WHERE {
  # Peter Finbow's residence that is English and a settlement
  ?residence dbo:nativePlace ?nativeOfResidence .
  ?residence rdf:type dbo:Settlement .
  ?residence dbo:country dbr:England .

  # Peter Finbow manages a player
  ?player dbp:manager dbr:Peter_Finbow .

  # The player is a member of the England women's national football team
  ?player dbo:nationalTeam dbr:England_women%27s_national_football_team .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
554,20,test,"Give me the leader of the birth place of the band, that is an artist, of Rita Redshoes and leader of the administration of the party member of Independent politician.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . ?v2 <http://dbpedia.org/property/leader> ?result . ?v5 <http://dbpedia.org/property/leader> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?leader
WHERE {
  # Rita Redshoes and her band
  dbr:Rita_Redshoes a dbo:MusicArtist ;
                    dbo:associatedBand ?band .

  # Leader of the birthplace of the band's artist (Rita Redshoes)
  ?band dbo:originPlace ?birthPlace .
  ?birthPlace dbo:mayor ?leader .
  
  # Ensure the leader is an artist
  ?leader a dbo:Artist .

  # Leader of the administration of a party member who is an independent politician
  ?partyMember dbo:memberOfParty ?politicalParty ;
               dbp:independentPolitician true .
  ?administration dbo:head ?leader .
  ?politicalParty dbo:hasLeader ?administration .
  
  FILTER (?leader != dbr:Rita_Redshoes) # Ensure it's not Rita Redshoes herself
}
```",6,7,7,3,2,3,2,20,0,0,3,0,0.0,0
433,62,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in Musician.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalArtist1 ?finalArtist2
WHERE {
  # Step 1: Find associated musical artist of Paul Chambers
  ?chambers dbo:associatedMusicalArtist ?artist1 .
  FILTER EXISTS { ?artist1 a dbo:MusicalArtist . }
  FILTER EXISTS { ?artist1 a dbo:Artist . }

  # Step 2: Find associated musical artist of the first artist
  ?artist1 dbo:associatedMusicalArtist ?finalArtist1 .
  FILTER EXISTS { ?finalArtist1 a dbo:MusicalArtist . }
  FILTER EXISTS { ?finalArtist1 a dbo:Artist . }

  # Step 3: Find associated musical artist of Ornette Coleman
  ?coleman dbo:associatedMusicalArtist ?artist2 .
  FILTER EXISTS { ?artist2 a dbo:MusicalArtist . }
  FILTER EXISTS { ?artist2 a dbo:Artist . }

  # Step 4: Find associated musical artist of the second artist
  ?artist2 dbo:associatedMusicalArtist ?finalArtist2 .
  FILTER EXISTS { ?finalArtist2 a dbo:MusicalArtist . }
  FILTER EXISTS { ?finalArtist2 a dbo:Artist . }

  # Bind Paul Chambers and Ornette Coleman to their respective DBpedia resources
  VALUES ?chambers { <http://dbpedia.org/resource/Paul_Chambers> }
  VALUES ?coleman { <http://dbpedia.org/resource/Ornette_Coleman> }
}",7,13,8,3,3,3,3,71,2,94,1,0.020833333333333332,0.6666666666666666,0.0404040404040404
365,20,test,"Give me the spouse of the native, that is a politician, of the reference to Полтавская губерния and person born as the birth name of the commander, that is an office holder, in Ukrainian–Soviet War.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find native politician of Полтавская губерния
  ?politician dbo:nativePlace dbr:Полтавская_губерния ;
              a dbo:Politician .
  
  # Find commander in Ukrainian–Soviet War who is an office holder
  ?commander dbo:occupation dbr:Ukrainian–Soviet_War ;
             dbo:officeHolder true ;
             dbp:birthdayName ?birthName .

  # Match the birth name of the commander with a person's birth name
  ?person dbp:birthdayName ?birthName .
  
  # Find spouse of the native politician
  ?politician dbo:spouse ?spouse .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
645,62,test,"Give me the commander in the force of the commander in Siege of Madrid and leader of Ministry of the Army (Spain) and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander
WHERE {
  # Siege of Madrid event
  ?siegeEvent a dbo:MilitaryConflict ;
              dbo:location dbr:Madrid ;
              dbo:commander ?commander1 .

  # Commander in the force of the commander in Siege of Madrid
  ?force1 dbo:commander ?commander1 .
  ?force2 dbo:commander ?commander .

  # Leader of Ministry of the Army (Spain)
  ?ministry dbr:Ministry_of_the_Army_(Spain) ;
            dbo:leader ?commander .

  # Military conflict and societal event
  ?event a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Native president and politician during Restoration (Spain)
  ?president dbp:nationality dbr:Spain ;
             dbo:office dbr:President_of_Spain ;
             dbo:politicalParty ?party .
  ?restorationPeriod dbo:country dbr:Spain ;
                     dbo:leader ?president .

  # Linking the commander to the societal event and native president
  ?commander dbp:nationality dbr:Spain ;
             dbo:birthPlace ?place .
  ?place dbo:locatedIn dbr:Spain .

  FILTER (?siegeEvent = ?event)
}",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
527,18,test,"Give me the author of the work, that is a work and a book, of Tom Baker and actor of the movie, that is a work and English and a television show, with the professional in Actor.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?v1 <http://dbpedia.org/property/occupation> ""Actor""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author
WHERE {
  # Find a book authored by Tom Baker
  ?book dbo:author dbr:Tom_Baker .
  
  # Ensure the book is also part of a work that is an English television show involving an actor
  ?work dbo:genre dbr:Television_show ;
        rdfs:label ?label ;
        dbo:language dbr:English .

  ?actor dbo:profession dbr:Actor .
  ?movie dbo:starring ?actor ;
         rdf:type dbo:Film ;
         dbo:inLanguage dbr:English .

  # Link the book to the work
  ?book dbo:workExample ?work .

  FILTER (CONTAINS(LCASE(?label), ""television show""))
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
124,61,test,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2
WHERE {
  # Find the person born on 1850-06-24
  ?person dbo:birthDate ""1850-06-24""^^xsd:date ;
          dbo:militaryService ?militaryForce1 .
  
  # Ensure military force is linked to a societal event and a military conflict
  ?militaryForce1 dbo:category dbr:Military_conflict ;
                  dbo:category dbr:Societal_event .

  # Find the awardee of the British South Africa Company Medal
  ?awardee dbp:award ""British South Africa Company Medal"" ;
           dbo:militaryService ?militaryForce2 .
  
  # Ensure the war is an event, a military conflict, and a societal event
  ?war dbo:category dbr:Military_conflict ;
       dbo:category dbr:Societal_event ;
       dbo:category dbr:Event ;
       dbp:participant ?awardee .

}
```",6,11,7,3,2,3,3,71,0,0,1085,0,0.0,0
124,70,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?militaryForce
WHERE {
  ?person dbo:birthday ""1850-06-24""^^xsd:date .
  
  ?medalAwarding dbo:recipient ?person ;
                 a dbo:Award .

  ?medalAwarding dbo:name dbr:British_South_Africa_Company_Medal .

  ?war1 dbo:eventType ?eventType1 ;
        dbo:militaryForce ?militaryForce ;
        a dbo:MilitaryConflict, dbo:SocietalEvent .

  ?person dbo:commanderInWar ?war2 .
  
  ?war2 dbo:eventType ?eventType2 ;
        dbo:militaryForce ?militaryForce ;
        a dbo:MilitaryConflict, dbo:SocietalEvent .

  ?artilleryUnit dbo:militaryForce ?militaryForce ;
                 a dbo:AustralianArtilleryBattery .

  FILTER(?eventType1 = dbo:MilitaryConflict && ?eventType1 = dbo:SocietalEvent)
  FILTER(?eventType2 = dbo:MilitaryConflict && ?eventType2 = dbo:SocietalEvent)
}
```",8,15,9,3,3,3,3,71,0,0,9,0,0.0,0
976,69,test,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v6 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v4 <http://dbpedia.org/ontology/leader> ?v2 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/property/office> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?kemalOffice ?nationAllianceMayorOffice ?naciBostanciOffice
WHERE {
  # Kemal Kılıçdaroğlu's administration office
  dbr:Kemal_Kılıçdaroğlu dbo:leaderOf ?administration .
  ?administration a dbo:Organisation .
  ?administration dbo:officeHolder ?kemalOffice .

  # Nation Alliance (Turkey)'s mayor office
  dbr:Nation_Alliance_(Turkey) dbo:mayor ?mayor .
  ?mayor dbp:nationality ""Turkish""^^xsd:string .
  ?mayor a dbo:Politician ;
         dbo:officeHolder ?nationAllianceMayorOffice .

  # Naci Bostancı's office
  dbr:Naci_Bostancı dbo:birthName ""Naci Bostancı"" .
  dbr:Naci_Bostancı dbo:officeHolder ?naciBostanciOffice .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
645,65,test,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader
WHERE {
  # Find the office associated with Camilo Menéndez Tolosa
  ?office dbo:employee dbr:Camilo_Menéndez_Tolosa .
  
  # Ensure the office is a government agency and an organization
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .

  # Find the leader of this office
  ?office dbo:leader ?leader .

  # Identify the military force involved in an event that is both a military conflict and societal event
  ?event dbo:participatedIn ?militaryForce .
  ?event rdf:type dbo:MilitaryConflict ;
         rdf:type dbo:SocietalEvent .

  # Find the native who was president during Restoration (Spain) and commanded Carlos Asensio Cabanillas
  ?native dbo:nationality dbr:Spain ;
          dbo:presidentDuring dbr:Restoration_(Spain) .
  ?native dbo:commanderOf dbr:Carlos_Asensio_Cabanillas .

  # Link the military force to the native
  ?militaryForce dbo:commandedBy ?native .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
987,64,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of Moamer Kasumović and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country
WHERE {
  # Find the time zone of Canicosa de la Sierra and its associated sports event
  ?canicosa dbo:timeZone ?timezone .
  ?sportsEvent dbo:location ?canicosa ;
               a dbo:SportsEvent .

  # Find Moamer Kasumović's birthplace
  dbr:Radovan_Karadžić dbo:birthPlace ?moamerBirthPlace .

  # Find the band of Dado Pršo and its birthplace
  dbr:Dado_Pršo dbo:band ?planetOfZeus .
  ?planetOfZeus a dbo:Band, dbo:MusicalArtist ;
                dbp:origin ?bandOrigin .

  # Ensure the country is in the region of the time zone's sports event
  ?timezone dbo:country ?country .
  
  # Filter to ensure all conditions are met
  FILTER (?moamerBirthPlace = ?bandOrigin)
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
573,61,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?decedent WHERE {
  # John Quincy Adams' work
  ?work dbo:author dbr:John_Quincy_Adams .
  
  # Author of the work who is a politician and office holder
  ?work dbo:author ?author .
  ?author rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Professional (parent of the author) who is an American politician
  ?professional dbo:child ?author ;
                rdf:type dbo:Politician ;
                dbp:nationality dbr:United_States .
  
  # Residence of the professional that is a settlement
  ?residence dbo:resident ?professional ;
             rdf:type dbo:Settlement .

  # Person decedent at the residence
  ?decedent dbo:placeOfDeath ?residence .
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
573,67,test,"Give me the person decedent at Massachusetts and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?parentName ?officeHeld
WHERE {
  # John Quincy Adams and his parent
  dbr:John_Quincy_Adams dbo:parent ?parent .
  
  # Parent details
  ?parent a dbo:Person ;
          dbp:name ?parentName ;
          dbo:deathPlace dbr:Massachusetts ;
          dbo:occupation ?officeHeld .

  FILTER EXISTS { ?officeHeld rdf:type dbo:PoliticalOffice } # Ensure office is political

  OPTIONAL {
    ?professional dbo:nationality dbr:United_States ;
                  dbo:profession dbp:Politician .
    
    ?parent dbo:residence ?settlement .
    ?settlement a dbo:Settlement .

    FILTER EXISTS { ?professional dbo:residence ?settlement }
  }
}",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
216,63,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?personName
WHERE {
  ?person a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerManager ;
          dbo:birthDate ?birthDate .

  FILTER (YEAR(?birthDate) = 1983 && MONTH(?birthDate) = 12 && DAY(?birthDate) = 20)

  ?team dbr:Bosnia_and_Herzegovina_national_under-18_football_team ;
        dbo:coach ?person .
  
  ?club a dbo:SoccerClub, dbo:Organization ;
        dbo:playerInTeam ?person .

  ?croatiaU21 dbr:Croatia_U21 ;
              dbo:coach ?club .

}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
582,67,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to Japan.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?result <http://dbpedia.org/property/nickname> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/father> ?v6 . ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?teamNickname WHERE {
  # Hajime Moriyasu's team
  ?team a dbo:SportsTeam ;
        dbo:manager dbr:Hajime_Moriyasu ;
        dbp:nickname ?teamNickname .

  # Kazuaki Nagasawa's father
  ?father a dbo:Athlete, dbo:SoccerManager, dbo:SportsManager ;
          dbo:child dbr:Kazuaki_Nagasawa .

  # Child of Kazuaki Nagasawa who is a player in the team
  ?player dbo:child dbr:Kazuaki_Nagasawa ;
          dbo:playsFor ?team .

  # Reference to Japan
  ?team dbo:nationality dbr:Japan .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
459,28,test,"Give me the governor of the administration, that is a politician, of Brad Henry and governor of the death place, that is a settlement, of Cliff Roquemore and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?governor ?deathPlace ?birthName
WHERE {
  # Brad Henry's governor who is a politician
  ?bradHenry dbo:governor ?governor .
  FILTER (?governor rdf:type dbo:Politician) .

  # Cliff Roquemore's death place which is a settlement
  ?cliffRoquemore dbo:deathPlace ?deathPlace .
  FILTER (?deathPlace rdf:type dbo:Settlement) .

  # Kevin Stitt's birth name
  ?kevinStitt foaf:name ?birthName .
  
  # Bind entities to their respective DBpedia resources
  VALUES ?bradHenry { <http://dbpedia.org/resource/Brad_Henry> }
  VALUES ?cliffRoquemore { <http://dbpedia.org/resource/Cliff_Roquemore> }
  VALUES ?kevinStitt { <http://dbpedia.org/resource/Kevin_Stitt> }

  # Ensure the governor is the same for both Brad Henry and the death place of Cliff Roquemore
  FILTER (?governor = ?deathPlace)
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
445,63,test,"Give me the entity in the award of George H. Cameron and death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?result <http://dbpedia.org/ontology/location> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardEntity ?deathPlace ?countryResidence
WHERE {
  # Part 1: George H. Cameron's award
  dbr:George_H._Cameron dbo:award ?awardEntity .

  # Part 2: Death place of the awardee of Royal Astronomical Society
  ?awardee dbo:award dbr:Royal_Astronomical_Society .
  ?awardee dbo:deathPlace ?deathPlace .

  # Part 3: Country residence of an athlete from Great Britain
  ?athlete dbo:nationality dbr:Great_Britain ;
           dbo:residence ?residence .
  ?residence a dbo:Country ;
             rdfs:label ?countryResidence .
}
```",7,9,8,3,3,3,3,71,1,17,0,0.05555555555555555,1.0,0.10526315789473684
892,63,test,"Give me the entity in the profession of the true self of Enrico Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of the award of Anna Ishii.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/province> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?profession ?region ?landmark
WHERE {
  # Enrico Crolla's profession
  dbr:Enrico_Crolla dbo:occupation ?profession .

  # Italian region that is an administrative region and settlement linked to Democratic Party (Italy)
  ?region a dbo:AdministrativeRegion ;
          dbp:country ""Italy""@en ;
          dbo:settlement ?settlement .
  ?party dbo:member ?person .
  FILTER (?party = dbr:Democratic_Party_(Italy))
  OPTIONAL { ?person dbo:nationality dbr:Italy }

  # Landmark at elevation of Anna Ishii's award
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ?elevation .
  ?award dbo:recipient dbr:Anna_Ishii ;
         dbo:elevation ?sameElevation .
  FILTER (?elevation = ?sameElevation)
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
445,58,test,Give me the entity in England and entity in the award of the commander in Battle of Saint-Mihiel and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInEngland ?commanderAwardEntity ?deathPlace
WHERE {
  # Entity in England
  ?entityInEngland dbo:location dbr:England .

  # Commander award in Battle of Saint-Mihiel
  ?commanderAwardEntity dbo:rank ""Commander"" ;
                        dbo:participatedInBattle dbr:Battle_of_Saint-Mihiel .

  # Death place of awardee of Royal Astronomical Society
  ?awardee dbp:memberOf dbr:Royal_Astronomical_Society .
  ?awardee dbo:deathPlace ?deathPlace .
  
  FILTER(?commanderAwardEntity = ?awardee)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
773,60,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfRoyalChild
WHERE {
  # Step 1: Identify Carloman of Bavaria's father who is an office holder and royalty
  dbr:Carloman_of_Bavaria dbo:father ?carlomansFather .
  
  FILTER EXISTS { ?carlomansFather a dbo:Royalty . }
  FILTER EXISTS { ?carlomansFather a dbo:OfficeHolder . }

  # Step 2: Find the spouse of this father
  ?carlomansFather dbo:spouse ?fatherSpouse .

  # Step 3: Trace back to Bernard (son of Charles the Fat)
  dbr:Charles_the_Fat dbo:child ?bernard .
  
  FILTER (?bernard = dbr:Bernard_of_Saxony) . # Assuming Bernard is Bernard of Saxony

  ?bernard dbo:parent ?bernhardsParent .

  ?bernhardsParent dbo:parent ?grandparentOfBernard .

  # Step 4: Identify the child of this grandparent who is a royalty
  ?grandparentOfBernard dbo:child ?royalChild .
  
  FILTER EXISTS { ?royalChild a dbo:Royalty . }

  # Find the parent of this royal child
  ?royalChild dbo:parent ?parentOfRoyalChild .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
216,62,test,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of Ognjen Vukojević.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/coach> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player WHERE {
  # Find players who are coaches of organizations that are soccer clubs and related to Croatia U21
  ?coach rdf:type dbo:SoccerPlayer .
  ?coach dbo:coach ?org1 .
  ?org1 rdf:type dbo:SoccerClub ;
        dbp:relatedTo <http://dbpedia.org/resource/Croatia_national_under-21_football_team> .

  # Find players who are coaches of players associated with organizations that are sports clubs, soccer clubs, and linked to Džemal Berberović and Ognjen Vukojević
  ?coach rdf:type dbo:SoccerPlayer ;
         dbo:player ?org2 .
  ?org2 rdf:type dbo:SportsClub , dbo:SoccerClub ;
        dbp:relatedTo <http://dbpedia.org/resource/Džemal_Berberović> ,
                      <http://dbpedia.org/resource/Ognjen_Vukojević> .

  # Ensure the player is both a soccer player and a sports manager
  ?coach rdf:type dbo:SportsManager , dbo:SoccerManager .
  
  BIND(?coach AS ?player)
}",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
136,8,test,Give me the region coded as 03834 and landmark at elevation of the award of Bret Anthony Johnston.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ""03834"" . ?result <http://dbpedia.org/ontology/elevation> ?v2 . <http://dbpedia.org/resource/Bret_Anthony_Johnston> <http://dbpedia.org/property/awards> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?regionCode ?landmark ?elevation WHERE {
  # Find Bret Anthony Johnston's awards
  ?award dbo:author dbr:Bret_Anthony_Johnston .
  
  # Find the region with code ""03834""
  ?region dbp:postalCode ""03834"" ;
          rdfs:label ?regionLabel .

  # Link the award to a landmark and its elevation
  OPTIONAL {
    ?award dbo:location ?landmark .
    ?landmark dbo:elevation ?elevation .
  }
  
  # Ensure the region is related to the landmark
  ?landmark dbp:locatedIn ?region .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
826,70,test,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor
WHERE {
  # Louis IV, Grand Duke of Hesse and his child
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:child ?child .
  
  # Parent of the child (likely Louis IV himself)
  ?parent dbo:child ?child .
  
  # Predecessor of the parent (Louis IV)
  ?predecessor dbo:successor ?parent .

  # Successor of the child
  ?successor dbo:predecessor ?child .

  # Reference to Louis I and a royalty related to him
  dbr:Louis_I_of_Hesse_and_by_Rhine dbo:spouse ?royalty .
  
  # Spouse of Johann Heinrich Appel's child
  dbr:Johann_Heinrich_Appel dbo:child ?appelChild .
  ?spouse dbo:spouse ?appelChild .

  FILTER (?predecessor != ?successor)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
41,27,test,"Give me the party of Mark Durkan and party of the work, that is an office holder, of yes and party of the person born as David Declan Costello.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?markParty ?davidParty
WHERE {
  # Mark Durkan's party
  { 
    ?mark a dbo:Person ;
          foaf:name ""Mark Durkan"" ;
          dbp:party ?markParty .
  }
  
  # David Declan Costello's party and office holder status
  { 
    ?david a dbo:Person ;
           foaf:name ""David Declan Costello"" ;
           dbp:party ?davidParty ;
           dbo:officeHolder ?office .
  }
}
```

This query does the following:
- Selects the political parties (`?markParty` and `?davidParty`) of Mark Durkan and David Declan Costello.
- Ensures that David Declan Costello is an office holder by checking for a non-empty `dbo:officeHolder`.",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
839,59,test,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?kevinRussellBand ?peterSchorowskyBand
WHERE {
  # Find Kevin Russell's band
  ?kevinRussell a dbo:MusicalArtist ;
                foaf:name ""Kevin Russell"" .
  ?kevinRussellBand dbo:bandMember ?kevinRussell .

  # Find Peter Schorowsky's band, ensuring it is both a band and a group
  ?peterSchorowsky a dbo:Musician ;
                   foaf:name ""Peter Schorowsky"" .
  ?peterSchorowskyBand dbo:bandMember ?peterSchorowsky ;
                       rdf:type dbo:Band ;
                       dbo:groupType dbo:MusicalGroup .

}
```

This query does the following:
- Uses `dbo:MusicalArtist` to identify Kevin Russell as a musical artist and finds his band.
- Uses `dbo:Musician` to identify Peter Schorowsky, ensuring that the band he is part of is both a `dbo:Band` and a `dbo:MusicalGroup`.",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
715,65,test,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leaderOfOffice ?commanderInForce ?militaryConflict
WHERE {
  # Find the office associated with Carlos Franco Iribarnegaray
  ?office dbo:type/dbo:subClassOf* dbo:GovernmentAgency ;
          dbo:type/dbo:subClassOf* dbo:Organization ;
          dbo:leader ?leaderOfOffice .
  ?carlos dbr:Carlos_Franco_Iribarnegaray ;
          dbo:worksFor ?office .

  # Find the commander (mayor) from 1933 Spanish general election
  ?election dbr:Spanish_general_election,_1933 ;
            dbo:winner ?commanderInForce .
  ?commanderInForce a dbo:OfficeHolder, dbo:Politician, dbo:President .

  # Find the military conflict involving Abd el-Krim
  ?conflict dbo:type/dbo:MilitaryConflict ;
            dbo:commander ?abdElKrim .
  ?abdElKrim dbr:Abd_el-Krim .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
456,70,test,"Give me the spouse of the actor of Pacific Drive and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and band of the band, that is a musical artist, of the band of Alan Doyle.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?alterEgo ?bandArtist WHERE {
  # Actor of Pacific Drive
  ?actor dbo:workIn dbr:Pacific_Drive .
  
  # Spouse of the actor
  ?actor dbo:spouse ?spouse .

  # Alter ego related to Lamont Cranston
  ?fictionalCharacter dbo:alterEgo ?alterEgo ;
                     rdfs:label ""Lamont Cranston""@en .
  
  # Band associated with Alan Doyle
  ?band dbo:member dbr:Alan_Doyle ;
        dbo:genre ?bandArtist .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
417,71,test,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v7 . ?result <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse
WHERE {
  # Knud, Hereditary Prince of Denmark
  ?knud a dbo:Person ;
        dbp:child ?child1 .
  
  # Child of Knud
  ?child1 a dbo:Person ;
          dbp:parent ?parent1 .

  # Parent is royalty
  ?parent1 a dbo:RoyalFamilyMember .

  # Spouse of the parent
  ?parent1 dbo:spouse ?spouse .

  # Alexandrine of Mecklenburg-Schwerin
  ?alexandrine a dbo:Person ;
               dbp:child ?child2 .
  
  # Child of Alexandrine's royal parent
  ?child2 a dbo:Person ;
          dbp:parent ?parent2 .
  
  # Parent is royalty
  ?parent2 a dbo:RoyalFamilyMember .

  # Child of the child
  ?child2 dbp:child ?grandchild .

  # Leader (royalty) of Colony of Greenland
  ?leader a dbo:Person ;
          dbp:position ""Leader of Colony of Greenland""^^xsd:string .
  
  # Father of the leader
  ?leader dbp:father ?father .

  # Ensure all entities are royalty where applicable
  FILTER (?parent1 != ?parent2) 
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
443,25,test,"Give me the birthplace of Carl Larsson and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and landmark at elevation of the award of William Shepherd.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v2 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?carlLarssonBirthplace 
               ?person1949Birthplace 
               ?landmarkAtElevation

WHERE {
  # Birthplace of Carl Larsson
  dbr:C._L.__Carl_Larsson dbo:birthPlace ?carlLarssonBirthplace .

  # Person born on 1949-11-20 who is both a musical artist and an artist
  ?person dbp:birthday ""1949-11-20""^^xsd:date ;
          dbo:musicArtist true ;
          dbo:artist true .
  ?person dbo:birthPlace ?person1949Birthplace .

  # Award received by William Shepherd and its elevation
  dbr:William_Shepherd dbo:award ?award .
  ?award dbp:elevation ?elevation .

  # Landmark at the same elevation as the award
  ?landmark dbo:elevation ?elevation ;
            a dbo:Lighthouse .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
645,56,test,"Give me the military force of Spanish Civil War and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?militaryForce ?leaderName
WHERE {
  # Military force of the Spanish Civil War
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:partOf dbr:Spanish_Civil_War .

  # Leader of an office that is both a government agency and an organization
  ?office a dbo:GovernmentAgency, dbo:Organization .
  ?leader dbp:headOf ?office ;
          foaf:name ?leaderName .

  # Native of Restoration (Spain)
  ?native dbo:nationality dbr:Spain ;
          dbo:birthPlace dbr:Restoration_(Spain) .

  # Commander in the force of Carlos Asensio Cabanillas
  ?commander dbp:commanded ?militaryForce ;
             foaf:name ""Carlos Asensio Cabanillas"" .
  
  # Linking leader and native
  ?leader dbo:nationality ?native .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
433,66,test,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional (GROUP_CONCAT(?associatedArtist; separator="", "") AS ?associatedArtists)
WHERE {
  # Find the writer of the album ""Slowhand at 70 – Live at the Royal Albert Hall""
  ?album dbo:writer ?writer .
  FILTER(STRSTARTS(STR(?album), STR(dbr:Slowhand_at_70_-_Live_at_the_Royal_Albert_Hall)))

  # Get the professional role of the writer
  ?writer dbo:profession ?professional .

  # Find associated musical artists for Paul Laurence Dunbar Chambers Jr.
  OPTIONAL {
    dbr:Paul_Laurence_Dunbar_Chambers_Jr_ (dbo:associatedMusicalArtist) ?associatedArtist .
    FILTER(STRSTARTS(STR(?associatedArtist), STR(dbr:)) && 
           ((?associatedArtist dbo:occupation ?occupation . 
             FILTER((CONTAINS(LCASE(?occupation), ""artist"") || CONTAINS(LCASE(?occupation), ""musical artist""))))))
  }

  # Find associated musical artists for Scott LaFaro
  OPTIONAL {
    dbr:Scott_LaFaro (dbo:associatedMusicalArtist) ?anotherAssociatedArtist .
    FILTER(STRSTARTS(STR(?anotherAssociatedArtist), STR(dbr:)) && 
           ((?anotherAssociatedArtist dbo:occupation ?anotherOccupation . 
             FILTER((CONTAINS(LCASE(?anotherOccupation), ""artist"") || CONTAINS(LCASE(?anotherOccupation), ""musical artist""))))))
  }

  # Combine associated artists from both musicians
  BIND(CONCAT(STR(?associatedArtist), STR(?anotherAssociatedArtist)) AS ?combinedArtists)
}
GROUP BY ?professional",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
456,63,test,"Give me the professional in the alter ego of The Shadow and band of the band, that is a musical artist, of Dean Brody and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?spouse
WHERE {
  # The alter ego of ""The Shadow"" is Lamont Cranston
  dbr:Lamont_Cranston a dbo:Character .

  # Dean Brody's band
  dbr:Dean_Brody_and_His_Band a dbo:Band ;
    dbo:bandMember ?professional .
  
  # Ross Newton as an actor in movies and TV shows
  dbr:Ross_Newton a dbo:Actor ;
    dbo:spouse ?spouse .

  # Ensure the professional is a musical artist
  ?professional a dbo:MusicalArtist .

  # Ensure the spouse has worked in both movies and TV shows
  ?spouse dbo:film ?work .
  ?spouse dbo:televisionSeries ?tvShow .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
200,9,test,Give me the band member of the band of Revenge (Canadian band) and reference to the name of Angelcorpse.,SELECT ?result WHERE { <http://dbpedia.org/resource/Revenge_(Canadian_band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Angelcorpse> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName ?angelcorpseName
WHERE {
  # Find band members of Revenge
  dbr:Revenge dbo:bandMember ?member .
  ?member rdfs:label ?memberName .

  # Get the name of Angelcorpse
  dbr:Angelcorpse rdfs:label ?angelcorpseName .

  FILTER (lang(?memberName) = 'en')
  FILTER (lang(?angelcorpseName) = 'en')
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
417,70,test,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and child of the father of the leader, that is a royalty, of Colony of Greenland and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Alexandrine of Mecklenburg-Schwerin's child
  ?alexChild dbo:parent dbr:Aleksandra_of_Mecklenburg-Schwerin .
  
  # Child of that child who is royalty
  ?childOfChild dbo:parent ?alexChild .
  ?childOfChild a dbo:Monarch .

  # Leader of Colony of Greenland's parent (royalty)
  ?greenlandLeader dbo:leader dbr:Colony_of_Greenland .
  ?greenlandParent dbo:parent ?greenlandLeader .
  ?greenlandParent a dbo:Monarch .

  # Spouse of the parent of Count Ingolf of Rosenborg
  ?countIngolfParent dbo:child dbr:Count_Ingolf_of_Rosenborg .
  ?spouseOfParent dbo:spouse ?countIngolfParent .
  
  # Ensure the child of Alexandrine's child is also the spouse of the parent of Count Ingolf
  FILTER (?childOfChild = ?spouseOfParent)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
507,67,test,"Give me the spouse of Anne V. Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of the person born on 1966-02-18.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://dbpedia.org/ontology/director> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?director ?movie ?profession
WHERE {
  # Anne V. Coates' spouse
  dbr:Anne_V._Coates dbo:spouse ?spouse .

  # Director of a movie that is both a ""movie"" and a ""work""
  ?movie a dbo:Film ;
         dbo:director ?director .
  
  # Person born on 1919-06-17
  ?person1 dbp:birthday ""1919-06-17""^^xsd:date .

  # Profession of the person born on 1966-02-18
  ?person2 dbp:birthday ""1966-02-18""^^xsd:date ;
           dbo:profession ?profession .
  
  # Linking conditions (assuming some logical connection is needed)
  FILTER(?spouse = ?director) 
  FILTER(?movie = ?work) 
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
465,60,test,"Give me the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonSuccessor
WHERE {
  # Ercole II d'Este part
  ?ercole2Parent dbo:child dbr:Ercole_II_d%27Este.
  ?ercole2Child dbo:parent ?ercole2Parent.
  ?ercole2Successor dbo:successorOf ?ercole2Child.

  # Charles Orlando, Dauphin of France part
  ?charlesParent dbo:child dbr:Charles_Orlando,_Dauphin_of_France.
  ?charlesChild dbo:parent ?charlesParent.
  ?charlesSuccessor dbo:successorOf ?charlesChild.
  
  # Ensure the successor is a royalty
  ?charlesSuccessor rdf:type dbo:Monarch.

  # Find common successor
  FILTER (?ercole2Successor = ?charlesSuccessor)
  BIND(?ercole2Successor AS ?commonSuccessor)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
495,19,test,Give me the child of the father of William I of Württemberg and father of the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Find William I of Württemberg and his father
  dbr:William_I_of_W%C3%BCrttemberg dbo:father ?williamFather .

  # Find Princess Pauline of Württemberg and her parent (mother)
  dbr:Pauline_of_W%C3%BCrttemberg dbo:parent ?paulineParent .

  # The child of the father of William I
  ?child dbo:father ?williamFather .

  # Ensure this person is also a father to the child of Pauline's parent
  ?paulineChild dbo:parent ?paulineParent .
  ?child dbo:father ?paulineChild .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
865,71,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v8 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v7 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v8 <http://dbpedia.org/property/father> ?v7 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry
WHERE {
  # Syeda Shahar Banu's spouse
  dbr:Syeda_Shahar_Banu dbo:spouse ?spouse .

  # The child of the spouse, who is a politician
  ?child dbo:parent ?spouse ;
         a dbo:Politician .

  # The father of this child
  ?father dbo:child ?child .

  # Abul Maal Abdul Muhith's father
  dbr:Abul_Maal_Abdul_Muhith dbo:father ?abulMaalFather .

  # The father of the politician child is also the decedent at Patna
  ?decedent dbo:deathPlace dbr:Patna ;
            dbo:child ?child ;
            dbo:nativeCountry ?nativeCountry .
  
  # Ensure the decedent is the same as the father of the politician child
  FILTER (?father = ?decedent)

  # The decedent is also related to Abul Maal Abdul Muhith's lineage
  ?abulMaalFather dbo:child ?someChild .
  ?someChild dbo:parent ?decedent .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
892,57,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and entity in Italy and landmark at elevation of the award of the member of E-girls.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity
WHERE {
  ?entity a dbo:Region ;
          a dbo:Settlement ;
          a dbo:AdministrativeRegion ;
          dbo:country dbr:Italy ;
          dbo:party dbr:Democratic_Party_(Italy) .
  
  OPTIONAL { ?entity dbo:elevation ?elevation . }
  
  OPTIONAL { 
    ?award dbp:recipient ?member .
    ?member rdf:type dbo:MusicalArtist ;
            dbo:band dbr:E-girls .
    ?entity dbo:awards ?award .
  }

  FILTER EXISTS {
    ?landmark a dbo:Lighthouse ;
              dbo:elevation ?elevation ;
              dbo:location ?entity .
  }
}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
433,61,test,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional ?associatedArtist1 ?associatedArtist2
WHERE {
  # Find the writer of the album ""Slowhand at 70 – Live at the Royal Albert Hall""
  dbr:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall dbo:writer ?writer .
  
  # Ensure the writer has a profession as a musician
  ?writer dbo:profession dbr:Musical_artist .

  # Find associated musical artists of this writer
  ?writer dbo:associatedMusicalArtist ?associatedArtist1 .

  # Find another artist who is both an artist and a musical artist, and is associated with Ornette Coleman
  ?associatedArtist2 dbo:associatedMusicalArtist dbr:Ornette_Coleman .
  ?associatedArtist2 rdf:type dbo:MusicalArtist .
  ?associatedArtist2 rdf:type dbo:Artist .

  # Ensure the professional is an artist and a musical artist
  ?professional rdf:type dbo:MusicalArtist .
  ?professional rdf:type dbo:Artist .
  
  # Link the professional to the associated artist of the writer
  ?professional dbo:associatedMusicalArtist ?associatedArtist1 .
}
```",6,10,7,3,2,3,3,71,0,0,46,0,0.0,0
281,24,test,"Give me the awardee of the award of Alfred Warden and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?wardenAwardee ?cosgraveAward
WHERE {
  # Find the award associated with Alfred Warden and its awardee
  ?award1 dbo:recipient dbr:Alfred_Warden .
  ?award1 dbo:awardee ?wardenAwardee .

  # Find the military conflict-related award associated with Lawrence Moore Cosgrave and its awardee
  ?award2 dbo:recipient dbr:Larry_Moore_Cosgrave .
  ?award2 a dbo:MilitaryConflictAward .  # Assuming there's an ontology class for military conflict awards
  ?award2 dbo:awardee ?cosgraveAward .
}
```

This query assumes:
- `dbo:recipient` is the predicate linking individuals to their awards.
- `dbo:awardee` is the predicate used to find who received the award.
- There exists a class `dbo:MilitaryConflictAward` for military conflict-related awards. If this specific class does not exist, you may need to adjust based on available ontology classes or properties.",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
579,19,test,"Give me the native of the residence, that is English and a settlement, of Alan Clyne and person born as the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeOfResidence ?personBirthName
WHERE {
  # Alan Clyne's residence
  dbr:Alan_Clyne dbo:residence ?residence .
  
  # Native of the residence that is English and a settlement
  ?residence dbo:nativeOf ?nativeOfResidence ;
             rdf:type dbo:Settlement ;
             dbo:country dbr:England .

  # Person born with the same birth name as this native
  ?person dbp:birthName ?nativeBirthName ;
          dbp:birthPlace dbr:Edinburgh .
  
  # This person is an office holder
  ?person rdf:type dbo:OfficeHolder .

  # Linking the birth names
  ?nativeOfResidence dbp:birthName ?nativeBirthName .

}
```",5,8,6,3,2,3,2,20,0,0,18,0,0.0,0
442,9,test,"Give me the resting place of the actor of This Side of Heaven and resting place of the work of Roosevelt, Theodore.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/This_Side_of_Heaven> <http://dbpedia.org/ontology/starring> ?v3 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/author> ""Roosevelt, Theodore""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorRestingPlaceLabel ?workRestingPlaceLabel WHERE {
  # Find the actor of ""This Side of Heaven""
  ?movie dbo:title ""This Side of Heaven""@en .
  ?movie dbo:starring ?actor .

  # Get the resting place of that actor
  OPTIONAL { 
    ?actor dbo:deathPlace ?actorDeathPlace .
    ?actorDeathPlace rdfs:label ?actorRestingPlaceLabel .
    FILTER(LANG(?actorRestingPlaceLabel) = ""en"")
  }

  # Find a work by Theodore Roosevelt and its resting place
  ?work dbo:author dbr:Theodore_Roosevelt .
  
  OPTIONAL {
    ?work dbo:location ?workLocation .
    ?workLocation rdfs:label ?workRestingPlaceLabel .
    FILTER(LANG(?workRestingPlaceLabel) = ""en"")
  }
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
41,24,test,"Give me the party of the person born as David Declan Costello and party of the work, that is an office holder, of yes.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyOfPerson ?partyOfWork
WHERE {
  # Find David Declan Costello's political party
  dbr:David_Declan_Costello dbo:politicalParty ?partyOfPerson .

  OPTIONAL {
    # Check if he holds an office and find the associated work's political party
    ?officeHolder a dbo:OfficeHolder ;
                 dbo:person dbr:David_Declan_Costello .
    
    ?work dbo:officeHolder ?officeHolder ;
          dbo:politicalParty ?partyOfWork .
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
465,61,test,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Charles Orlando, Dauphin of France
  ?charlesOrlando a dbo:Dauphin ;
                  dbo:parent ?parentOfCharles .

  # Elizabeth of Austria (1526–1545)
  ?elizabeth dbr:Elizabeth_of_Austria_(1526-1545) ;
             dbo:parent ?parentOfElizabeth .

  # Child of the parent of Charles Orlando who is royalty
  ?child1 dbo:spouse ?charlesOrlando ;
         a dbo:RoyalFamilyMember ;
         dbo:parent ?parentOfCharles .

  # Spouse of the child, that is a royalty, of the parent of Elizabeth of Austria
  ?child2 dbo:spouse ?parentOfElizabeth ;
          a dbo:RoyalFamilyMember ;
          dbo:parent ?parentOfElizabeth .

  # Successor relationship
  ?child1 dbo:succ ?successor .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
166,18,test,"Give me the entity in the territory administered, that is a country, from Madrid and resting place of the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country
WHERE {
  # Madrid's territory administered
  ?territory dbo:administrativeTerritory dbr:Madrid .
  
  # The country in the territory
  ?territory dbo:country ?country .
  FILTER (dbo:Country(?country)) .

  # Event related to Manuel Hedilla
  ?event dbo:participantManuelHedilla true ;
         a dbo:SocietalEvent, dbo:MilitaryConflict .

  # Resting place of the military force involved in the event
  ?militaryForce dbo:event ?event .
  ?militaryForce dbo:restingPlace ?country .
}
```",5,9,6,3,2,3,2,20,0,0,4,0,0.0,0
582,61,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/father> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?teamNickname
WHERE {
  # Find the team associated with Hajime Moriyasu
  ?team dbo:manager dbr:Hajime_Moriyasu .
  
  # Get the nickname of this team
  ?team dbo:nickname ?teamNickname .

  # Identify Kazuaki Nagasawa's father who is an athlete, soccer manager, sports manager, and player for the team
  ?father dbo:child dbr:Kazuaki_Nagasawa ;
          a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager ;
          dbo:playsForTeam ?team .

}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
216,56,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach of Croatia national under-21 football team and player in Mario Ivanković.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team
WHERE {
  # Find the death date of Pavel Vezhinov
  ?vezhinov dbo:dateOfDeath ?deathDate .
  
  # Person born on the same day as Pavel Vezhinov's death
  ?person dbp:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = YEAR(?deathDate) && MONTH(?birthDate) = MONTH(?deathDate) && DAY(?birthDate) = DAY(?deathDate))
  
  # Person is a sports manager, soccer manager, and soccer player
  ?person dbo:occupation dbr:Sports_manager .
  ?person dbo:occupation dbr:Soccer_manager .
  ?person dbo:occupation dbr:Soccer_player .

  # Connection to Mario Ivanković as coach of the Croatia national under-21 football team
  ?team dbp:coach dbr:Mario_Ivanković ;
        dbo:member ?player .
  
  # The person is a player in this team
  ?player foaf:name ?personName .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
433,60,test,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer ?associatedArtist
WHERE {
  # Eric Clapton and the album
  dbr:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall dbo:artist dbr:Eric_Claptom .

  # Writer of the album
  ?album dbo:writer ?writer .
  
  # Ensure writer's profession is a writer
  ?writer dbo:profession dbr:Writer .

  # Associated musical artist who is also an artist, specifically Paul Chambers
  ?writer dbp:associatedMusicalArtist ?associatedArtist .
  FILTER (?associatedArtist = dbr:Paul_Chambers) .
  
  # Ensure the associated artist is both a musical artist and an artist
  ?associatedArtist dbo:occupation dbr:Musical_artist ;
                   dbo:occupation dbr:Artist .
}
```",6,8,7,3,2,3,3,71,0,0,16,0,0.0,0
715,71,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v7 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v8 <http://dbpedia.org/ontology/leader> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/property/office> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  ?conflict dbo:commander ?commander .
  ?commander dbo:nationality dbr:Morocco .

  ?officeHolder dbo:positionTitle ""President""@en ;
                dbo:election dbr:1933_Spanish_general_election .
  ?force dbo:commander ?commander .
  ?force dbo:leader ?officeHolder .

  ?reference dbo:refersTo dbr:Carlos_Franco_Iribarnegaray .
  ?reference dbo:relatedEntity ?commander .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
433,71,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://dbpedia.org/property/occupation> ?v8 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v8 . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist
WHERE {
  # Step 1: Find Paul Chambers' associated musical artist who is also an artist and born as such.
  dbr:Paul_Chambers a dbo:MusicalArtist ;
                    dbo:associatedMusicalArtist ?artist1 .
  
  FILTER (?artist1 != dbr:Paul_Chambers)
  ?artist1 a dbo:Artist, dbo:MusicalArtist .

  # Step 2: Find the writer of ""Slowhand at 70 – Live at the Royal Albert Hall"" (Eric Clapton).
  dbr:""Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall"" dbo:writer ?clapton .
  
  # Step 3: Find Eric Clapton's associated musical artist who is also an artist.
  ?clapton a dbo:MusicalArtist ;
           dbo:associatedMusicalArtist ?artist2 .

  FILTER (?artist2 != ?clapton)
  ?artist2 a dbo:Artist, dbo:MusicalArtist .

  # Step 4: Find Ornette Coleman's associated musical artist who is also an artist.
  dbr:Ornette_Coleman a dbo:MusicalArtist ;
                      dbo:associatedMusicalArtist ?artist3 .
  
  FILTER (?artist3 != dbr:Ornette_Coleman)
  ?artist3 a dbo:Artist, dbo:MusicalArtist .

  # Step 5: Ensure the final artist is associated with all previous artists.
  ?artist1 dbo:associatedMusicalArtist ?finalArtist ;
          a dbo:Artist, dbo:MusicalArtist .
  
  ?artist2 dbo:associatedMusicalArtist ?finalArtist ;
           a dbo:Artist, dbo:MusicalArtist .

  ?artist3 dbo:associatedMusicalArtist ?finalArtist ;
           a dbo:Artist, dbo:MusicalArtist .
}",9,15,10,3,3,3,3,71,0,0,4,0,0.0,0
987,58,test,"Give me the birth place of Dado Polumenta and birth place of the actor of All for Free and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v0 <http://dbpedia.org/property/timeZone> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlaceDadoPratelli ?actorBirthPlace ?countryInTimeZone
WHERE {
  # Birthplace of Dado Pratelli
  dbr:Dado_Pratelli dbo:birthPlace ?birthPlaceDadoPratelli .

  # Actor in ""All for Free"" and their birthplace
  ?movie dbp:title ""All for Free""@en .
  ?movie dbo:starring ?actor .
  ?actor dbo:birthPlace ?actorBirthPlace .

  # Time zone of Canicosa de la Sierra
  dbr:Canicosa_de_la_Sierra dbo:timeZone ?timeZone .

  # Sports event in the time zone
  ?event dbo:location ?place .
  ?place dbo:timeZone ?timeZone .

  # Country corresponding to the region of the time zone
  ?country dbp:timeZone ?timeZone ;
           a dbo:Country .
  BIND(?country AS ?countryInTimeZone)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
606,19,test,"Give me the figure known as the nickname of DeKalb, Illinois and birthplace of the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?v2 . ?v0 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname ?birthPlace
WHERE {
  # Find the nickname of DeKalb, Illinois
  dbr:DeKalb,_Illinois dbo:nickname ?nickname .

  # Find an alumnus from DeKalb who attended University of Pennsylvania
  ?alumnus dbo:placeOfBirth dbr:DeKalb,_Illinois ;
           dbo:almaMater dbr:University_of_Pennsylvania .

  # Get the birthplace of that alumnus
  ?alumnus dbo:placeOfBirth ?birthPlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
507,58,test,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and spouse of Anne V. Coates and professional in the profession of the person born on 1966-02-18.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/director> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?directorName
WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Beryl_Reid .

  ?movie dbo:director ?director .
  
  ?director foaf:name ?directorName ;
            dbo:spouse dbr:Anne_V._Coates .

  ?person dbo:birthday ""1966-02-18""^^xsd:date ;
          dbo:occupation ?profession .

  ?director dbo:occupation ?sameProfession .

  FILTER (?sameProfession = ?profession)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
417,58,test,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and child of the father of Frederick IX of Denmark and spouse of Princess Caroline-Mathilde of Denmark.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?childOfChild
WHERE {
  # Alexandrine's parent who is royalty
  ?parent dbo:spouse|dbo:child ?alexandrine .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .

  # Child of Alexandrine's parent who is royalty
  ?royalChild dbo:child ?parent .
  ?royalChild a dbo:Monarch .

  # Father of Frederick IX
  ?frederickFather dbo:spouse|dbo:child ?frederickIX .
  ?frederickIX rdfs:label ""Frederick IX of Denmark""@en .

  # Spouse of Princess Caroline-Mathilde
  ?carolineSpouse dbo:spouse ?princessCarolineMathilde .
  ?princessCarolineMathilde rdfs:label ""Princess Caroline-Mathilde of Denmark""@en .

  # Child of the royal child who is royalty and connected to Frederick IX's father and Princess Caroline-Mathilde
  ?childOfChild dbo:child ?royalChild .
  ?childOfChild a dbo:Monarch .
  
  OPTIONAL {
    ?childOfChild dbo:spouse|dbo:child ?frederickFather .
  }
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
865,57,test,"Give me the native of British Raj and father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v4 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfBritishRaj
WHERE {
  # Syeda Shahar Banu's spouse and their child
  ?spouse a dbo:Spouse;
          dbo:spouse dbr:Syeda_Shahar_Banu.
  
  ?child1 dbo:parent ?spouse.

  # Abu Ahmad Abdul Hafiz's child
  ?hafizChild dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz.

  # The politician who is a parent to one of these children
  ?politician dbo:parent ?child1;
              dbo:parent ?hafizChild.
  
  # The native of British Raj who is the father of this politician
  ?nativeOfBritishRaj dbo:nativePlace dbr:British_Raj;
                      dbo:child ?politician.

}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
933,71,test,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName
WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ?birthDate ;
          dbo:bandMember ?band .
  
  ?band rdfs:label ""The Ramones""@en .

  FILTER (YEAR(?birthDate) = 1947 && MONTH(?birthDate) = 4 && DAY(?birthDate) = 21)

  OPTIONAL { ?person foaf:name ?birthName }
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
826,58,test,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?result <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor
WHERE {
  # Louis IV, Grand Duke of Hesse and his child
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:child ?child .
  
  # Anna Magdalena Appel as spouse
  ?child dbo:spouse dbr:Anna_Magdalena_Appel .

  # Parent of the child (Louis IV)
  ?parent dbo:child ?child .
  
  # Predecessor of the parent
  ?predecessor dbo:successorOf ?parent .

  # Louis I, Grand Duke of Hesse and his child
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:child ?child2 .

  # Successor of the child of Louis I
  ?successor dbo:predecessorOf ?child2 .
  
  # Ensure the predecessor is a royalty
  ?predecessor rdf:type dbo:Monarch .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
976,67,test,"Give me the office of the person born as the birth name of Naci Bostancı and office of Mustafa Şentop and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?naciOffice ?mustafaOffice ?mayorOffice ?organization
WHERE {
  # Naci Bostancı's birth name and office
  dbr:Naci_Bostancı dbo:birthName ?birthName .
  OPTIONAL { ?person dbp:name ?birthName . }
  OPTIONAL { ?person dbo:office ?naciOffice . }

  # Mustafa Şentop's office
  dbr:Mustafa_Şentop dbo:office ?mustafaOffice .

  # Politician who is a mayor, Turkish, and associated with Millet İttifakı
  OPTIONAL {
    ?mayor dbo:nationality dbr:Turkey ;
           dbo:occupation dbr:Mayor ;
           dbo:memberOf ?organization .
    FILTER (?organization = dbr:Millet_İttifakı)
    ?mayor dbo:office ?mayorOffice .
  }
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
445,59,test,"Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace ?countryOfResidence
WHERE {
  # Find the awardee related to an establishment on 1820-03-10
  ?award dbo:dateEstablished ""1820-03-10""^^xsd:date .
  
  # Get the awardee of this award
  ?awardee dbo:recipientOf ?award .

  # Get the death place of the awardee
  ?awardee dbo:deathPlace ?deathPlace .

  # Find an athlete who is a resident of Great Britain
  ?athlete dbo:nationality dbr:United_Kingdom ;
           a dbo:Athlete .

  # Get the country of residence for this athlete
  ?athlete dbp:residenceCountry ?countryOfResidence .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
888,18,test,"Give me the awardee of the award of Oleksandr Syrskyi and commander in the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?event WHERE {
  # Oleksandr Syrskyi's awards
  dbr:Oleksandr_Syrskyi dbo:awardee ?award .
  
  # Oleksandr Syrskyi as a commander in the military force during War in Donbas
  dbr:Oleksandr_Syrskyi dbo:position ?commanderRole .
  ?commanderRole dbo:relatedEvent ?event .

  # Filter events related to the War in Donbas (2014–2022)
  FILTER (
    EXISTS { ?event dbo:dateStart ?startDate . }
    && 
    EXISTS { ?event dbo:dateEnd ?endDate . }
    &&
    (?startDate >= ""2014-01-01""^^xsd:dateTime || ?endDate <= ""2022-12-31""^^xsd:dateTime)
  )
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
443,24,test,"Give me the birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and birthplace of the work of yes.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/author> ""yes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlacePerson ?work ?birthPlaceWork
WHERE {
  # Find the person born on November 20, 1949 who is both a musical artist and an artist
  ?person dbo:birthDate ""1949-11-20""^^xsd:date ;
          rdf:type dbo:MusicalArtist , dbo:Artist ;
          dbp:birthPlace ?birthPlacePerson .

  # Find works associated with the band Yes
  dbr:Yes dbo:work ?work .
  
  OPTIONAL {
    ?work dbp:birthPlace ?birthPlaceWork .
  }
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
341,9,test,"Give me the band member of the awardee of List of awards and nominations received by Beyoncé and writer of the work, that is a work and an album, of Serrano.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Beyoncé> . ?v3 <http://dbpedia.org/property/writer> ""Serrano""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Beyoncé's awards and band members
  ?award dbr:Beyoncé ;
         dbo:recipient ?beyonceAwardWork .
  
  OPTIONAL {
    ?beyonceAwardWork dbo:musicalArtist ?bandMember .
  }
  
  # Serrano's work that is also an album
  ?serranoWork dbr:Serrano ;
               a dbo:Album, dbo:CreativeWork ;
               dbo:author ?serrano .

  FILTER(?serrano = <http://dbpedia.org/resource/Serrano_(musician)>)
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
465,64,test,"Give me the spouse of Archduchess Barbara of Austria and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse ?successor
WHERE {
  # Spouse of Archduchess Barbara of Austria
  ?barbara a dbo:Archduchess ;
           dbp:spouse ?spouse .

  # Parent of Ercole II d'Este
  ?ercole2 a dbo:Duke ;
           dbp:fatherOrGuardian ?parentErcole .

  # Child of the parent of Ercole II d'Este
  ?childErcole dbo:childOf ?parentErcole .

  # Successor of the child of the parent of Ercole II d'Este
  ?successorErcole dbo:predecessorOrSuccessorOf ?childErcole ;
                  a dbo:Royalty .

  # Parent of Charles Orlando, Dauphin of France
  ?charlesOrlando a dbo:Dauphin ;
                  dbp:fatherOrGuardian ?parentCharles .

  # Child of the parent of Charles Orlando
  ?childCharles dbo:childOf ?parentCharles .

  # Successor of the child of the parent of Charles Orlando
  ?successorCharles dbo:predecessorOrSuccessorOf ?childCharles ;
                    a dbo:Royalty .

  # Ensure the successor is the same entity in both contexts
  FILTER (?successorErcole = ?successorCharles)
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
926,62,test,Give me the father of the father of the spouse of Neşerek Kadın and child of Ahmed III and successor of the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherOfFatherOfSpouse
WHERE {
  # Spouse of Neşerek Kadın
  ?spouseOfNeserek a dbo:Person ;
                  dbo:spouse ?neserekKadin .

  # Father of the spouse of Neşerek Kadın
  ?fatherOfSpouse a dbo:Person ;
                 dbo:child ?spouseOfNeserek .
  
  # Father of the father of the spouse of Neşerek Kadın
  ?fatherOfFatherOfSpouse a dbo:Person ;
                         dbo:child ?fatherOfSpouse .

  # Child of Ahmed III
  ?childOfAhmedIII a dbo:Person ;
                  dbo:parent ?ahmedIII .
  
  # Spouse of Şermi Kadın
  ?spouseOfSermiKadin a dbo:Person ;
                     dbo:spouse ?sermiKadin .

  # Child of the spouse of Şermi Kadın
  ?childOfSpouseOfSermiKadin a dbo:Person ;
                            dbo:parent ?spouseOfSermiKadin .
  
  # Successor of the child of the spouse of Şermi Kadın
  ?successor a dbo:Person ;
             dbo:predecessor ?childOfSpouseOfSermiKadin .

  # Ensure the father of the father of the spouse of Neşerek Kadın is also the successor
  FILTER (?fatherOfFatherOfSpouse = ?successor)
}
```",7,7,8,3,3,3,3,71,0,12,1,0.0,0.0,0
83,8,test,"Give me the player in Greg Boehme and player in the person born, that is an athlete, on 1991-11-19.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Greg_Boehme> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1991-11-19""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?player
WHERE {
  # Pattern for Greg Boehme as a player
  { 
    ?gregBoehme dbo:player ?player .
    ?gregBoehme rdfs:label ""Greg Boehme""@en .
  }
  
  UNION
  
  # Pattern for an athlete born on 1991-11-19
  {
    ?person dbo:birthDate ""1991-11-19""^^xsd:date ;
            rdf:type dbo:Athlete ;
            dbo:player ?player .
  }
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
102,19,test,"Give me the native of the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury and manager of the player in Ellie Roebuck.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native
WHERE {
  ?athlete dbo:nationality dbr:England ;
           dbo:birthPlace dbr:Dewsbury .
  
  ?manager dbo:employee ?athlete ;
           dbo:employee dbr:E_Roebuck .

  ?residence dbo:nativeCountry dbr:England ;
             a dbo:Settlement .

  ?athlete dbo:currentResidence ?residence .

  ?native dbo:birthPlace ?residence .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
273,19,test,Give me the parent of the alumnus of the reference to Università degli Studi di Torino and spouse of the child of Giovanni Agnelli.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Find alumni of Università degli Studi di Torino
  ?alumnus dbo:almaMater dbr:Universit%C3%A0_degli_Studi_di_Torino .

  # Find children of Giovanni Agnelli
  ?child dbo:father dbr:Giovanni_Agnelli .
  
  # Find spouses of those children
  ?spouse dbo:spouse ?child .

  # Ensure the alumnus is also a spouse of one of Giovanni Agnelli's children
  FILTER (?alumnus = ?spouse)

  # Find parent of this spouse
  ?parent dbo:child ?spouse .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
874,18,test,"Give me the band of the band member of The Jones Gang and band of the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberBand ?writerBand
WHERE {
  # The Jones Gang member who is also a writer
  ?member dbo:memberOf dbr:The_Jones_Gang .
  
  OPTIONAL {
    ?member dbo:memberOf ?bandMemberBand .
  }
  
  # This member is also a writer of some work involving Horace Andy
  ?work dbo:writer ?member ;
        dbo:artist dbr:Horace_Andy .
  
  FILTER (dbo:Artist dbr:Horace_Andy && dbo:MusicalArtist dbr:Horace_Andy)
  
  # The writer is also associated with another band
  OPTIONAL {
    ?member dbo:memberOf ?writerBand .
  }
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
456,59,test,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Ross_Newton ;
         dbo:genre ?genre .
  
  FILTER EXISTS { ?movie dbo:workType dbr:Television_Show }
  FILTER EXISTS { ?movie dbo:workType dbr:Work }

  ?character dbo:alterEgo dbr:Lamont_Cranston .

  ?actor dbo:role ?character ;
         dbo:spouse ?spouse .
  
  FILTER (?actor = dbr:Ross_Newton)
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
329,28,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist) and birthplace of the author of The Tailor and Ansty.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v5 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?countryInRegion ?organizationCountry ?authorBirthplace
WHERE {
  # Country in the region of Western European Time
  ?region dbo:timeZone dbr:Western_European_Time .
  ?countryInRegion dbo:locatedIn ?region ;
                   a dbo:Country .

  # Organization that is also a country and birthplace of Robert Bates (loyalist)
  ?organizationCountry a dbo:Organization, dbo:Country ;
                       dbp:birthPlace dbr:Robert_Bates_(loyalist) .

  # Author of ""The Tailor and Ansty"" and their birthplace
  dbr:The_Tailor_and_Ansty dbo:author ?author .
  ?author dbo:birthPlace ?authorBirthplace .
}",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
892,67,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and landmark at elevation of the award of the member of E-girls and entity in Italy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v1 <http://dbpedia.org/property/awards> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity
WHERE {
  ?entity a dbo:Region ;
          a dbo:Settlement ;
          a dbo:AdministrativeRegion ;
          dbo:country dbr:Italy .
  
  ?party a dbo:PoliticalParty, dbo:Organization ;
         dbo:member dbr:Andrea_Cozzolino .

  ?administration dbo:region ?entity ;
                  dbo:politicalParty ?party .

  OPTIONAL {
    ?landmark dbo:elevation ?elevation ;
              dbo:locatedIn ?entity .
  }

  OPTIONAL {
    ?award dbo:recipient ?member ;
           dbo:relatedTo dbr:E-girls .
    
    ?member dbo:nationality dbr:Italy ;
            dbo:residence ?entity .
  }
}",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
582,68,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as the nickname of Japan national football team.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/property/residence> ?v4 . ?v5 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player ?scientist ?nickname
WHERE {
  # Find Kazuaki Nagasawa's child and their father who is an athlete, soccer manager, and sports manager
  ?child dbo:parent dbr:Kazuaki_Nagasawa .
  ?father dbo:child ?child ;
          a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .

  # Find the scientist related to Hirotaka Sugawara
  ?scientist dbo:relatedTo dbr:Hirotaka_Sugawara ;
             a dbo:Scientist .

  # Find the nickname for the Japan national football team
  ?nickname dbo:nickname dbr:Japan_national_football_team .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
445,68,test,"Give me the entity in the award of George H. Cameron and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and death place of the awardee of the establishment of 1820-03-10.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/location> ?v4 . ?v5 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardEntity ?countryResidence ?deathPlace
WHERE {
  # George H. Cameron's award
  ?cameron a dbo:AwardRecipient ;
           dbo:recipient ""George H. Cameron""^^xsd:string .
  ?awardEntity dbo:recipient ?cameron .

  # Athlete from Great Britain and their country of residence
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:residence ?countryResidence .
  FILTER (isLiteral(?countryResidence) && datatype(?countryResidence) = xsd:string)

  # Establishment date and awardee's death place
  ?establishment dbp:date ""1820-03-10""^^xsd:date ;
                 dbo:awardee ?awardee .
  ?awardee dbo:deathPlace ?deathPlace .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
573,66,test,"Give me the person decedent at the administration, that is a region, of Charlie Baker and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedent
WHERE {
  # Charlie Baker's administration is a region where the person was decedent
  ?administration dbr:Charlie_Baker#officeHolderRegion .
  ?administration dbo:type dbr:Administrative_territorial_entity .

  ?personDecedent dbo:decedentAt ?administration .

  # The author of John Quincy Adams' work is a politician and office holder
  ?work dbo:author ?author .
  ?author dbo:occupation dbr:Politician ;
          dbo:officeHolder ?office .

  # The person decedent is the parent of this author
  ?personDecedent dbo:parentOf ?author .

  # William J. Phelan's residence is a settlement where the person was also decedent
  ?residence dbr:William_J._Phelan#residence .
  ?residence dbo:type dbr:Settlement .

  ?personDecedent dbo:decedentAt ?residence .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
773,57,test,"Give me the spouse of Louis the German and parent of the child, that is a royalty, of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?child ?successor ?parentOfSuccessor
WHERE {
  # Louis the German and his spouse
  dbr:Louis_the_German dbo:spouse ?spouse .
  
  # Child of Louis the German who is royalty
  ?child dbo:parent dbr:Louis_the_German ;
         dbo:parent ?spouse ;
         a dbo:Monarch .

  # Successor of this child who is royalty
  ?successor dbo:parent ?child ;
             a dbo:Monarch .

  # Parent of the successor
  ?parentOfSuccessor dbo:parent ?successor .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
373,8,test,Give me the professional in the profession of Beto Guedes and writer of 2300 Jackson Street (song).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/2300_Jackson_Street_(song)> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Beto_Guedes> <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional
WHERE {
  # Find Beto Guedes' profession
  dbr:Beto_Guedes dbo:profession ?profession .
  
  # Find the writer of ""2300 Jackson Street""
  dbr:""2300_Jackson_Street_(song)"" dbo:lyricist ?writer .

  # Match if both are the same person
  FILTER (?profession = ?writer)
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
554,19,test,"Give me the leader of the administration of Francisco da Costa Gomes and leader of the birth place of the band, that is an artist, of Rita Redshoes.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?leaderOfCostaGomesAdministration ?leaderOfBirthPlaceRitaRedshoes
WHERE {
  # Leader of the administration of Francisco da Costa Gomes
  dbr:Francisco_da_Costa_Gomes dbo:presidentOf dbr:Portugal .
  OPTIONAL { 
    ?administration dbo:headLeader ?leaderOfCostaGomesAdministration .
    FILTER EXISTS { ?administration dbo:country dbr:Portugal }
  }

  # Leader of the birth place of Rita Redshoes
  dbr:Rita_Redshoes dbo:birthPlace ?birthPlace .
  OPTIONAL {
    ?birthPlace dbo:mayor ?leaderOfBirthPlaceRitaRedshoes .
  }
  
  # Ensure Rita Redshoes is an artist
  FILTER EXISTS { dbr:Rita_Redshoes a dbo:Artist }
}
```",5,6,6,3,2,3,2,20,0,0,3,0,0.0,0
216,68,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://dbpedia.org/ontology/coach> ?v4 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/coach> ?v7 . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?playerInCoach
WHERE {
  # Find Džemal Berberović and his associated team
  dbr:Džemal_Berberović a dbo:SoccerPlayer ;
                        dbo:sportTeam dbr:Croatia_U21 .

  # Identify the player in the coach who is also a soccer player, sports manager, and soccer manager
  ?playerInCoach a dbo:SoccerPlayer, dbo:SportsManager, dbo:SoccerManager ;
                 dbo:coachOf ?team .

  # The team must be an organization that is a sports club and a soccer club
  ?team a dbo:Organization, dbo:SportsClub, dbo:SoccerClub .

  # Find the person born on December 20, 1983, who is also a sports manager, soccer manager, and soccer player
  ?person a dbo:SportsManager, dbo:SoccerManager, dbo:SoccerPlayer ;
          dbo:birthDate ""1983-12-20""^^xsd:date .

  # This person must be part of the team associated with Džemal Berberović
  ?team dbo:member ?person .
}
```",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
36,24,test,Give me the person born in the birth year of Deanne Bray and person born as the birth name of Ayo Makun.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person1 ?person2
WHERE {
  # Get Deanne Bray's birth year
  dbr:Deanne_Bray dbo:birthYear ?birthYearBray .

  # Find a person born in the same year as Deanne Bray
  ?person1 dbo:birthYear ?birthYearBray .
  
  # Get Ayo Makun's birth name
  dbr:Ayo_Makun dbo:birthName ?birthNameMakun .

  # Find a person whose birth name is the same as Ayo Makun's
  ?person2 dbo:birthName ?birthNameMakun .
}
```",4,4,5,2,2,2,3,28,1,2610,0,0.00038299502106472615,1.0,0.0007656967840735068
826,62,test,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of the child of the father of Anna Magdalena Appel and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Louis I of Hesse
  ?louisI dbo:spouse ?child1 .
  
  # Child of Anna Magdalena Appel's father (Johann Sebastian Bach)
  ?bachFamilyMember dbo:parent dbr:Anna_Magdalena_Bach ;
                   dbo:spouse ?child2 .

  # Predecessor of Louis IV, Grand Duke of Hesse
  ?predecessor dbo:successor dbr:Louis_IV,_Grand_Duke_of_Hesse .
  
  # The person we are interested in is the spouse and predecessor
  ?child1 = ?child2 ;
           = ?predecessor .

  # Find the successor who is a royalty
  ?successor dbo:predecessor ?child1 ;
             a dbo:Monarch .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
129,24,test,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and associated musical artist of the person born as Tahj Malik Chandler.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?dreamvilleArtist ?lilUziVertArtist
WHERE {
  # Find the organization associated with ""Dreamville Presents: Revenge""
  ?event rdfs:label ""Dreamville Presents: Revenge""@en .
  ?event dbo:associatedMusicalArtist ?dreamvilleArtist .

  # Find the musical artist associated with Lil Uzi Vert (Tahj Malik Chandler)
  dbr:Lil_Uzi_Vert dbo:birthName ""Tahj Malik Chandler"" .
  dbr:Lil_Uzi_Vert dbo:associatedMusicalArtist ?lilUziVertArtist .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
865,59,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry
WHERE {
  # Syeda Shahar Banu's spouse
  dbr:Syeda_Shahar_Banu dbo:spouse ?spouse .

  # The child of the spouse who is a politician
  ?child dbo:parent ?spouse ;
         rdf:type dbo:Politician .

  # The father of this child (the spouse) who died in Patna
  ?spouse dbo:deathPlace dbr:Patna ;
          dbo:residence ?residence .

  # Get the native country of the residence
  ?residence dbp:nativeCountry ?nativeCountry .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
445,71,test,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and death place of the awardee of the establishment of 1820-03-10 and entity in the award of the commander in Battle of Saint-Mihiel.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v7 <http://dbpedia.org/property/awards> ?v8 . ?v5 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/location> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?residenceCountry ?deathPlace ?awardEntity
WHERE {
  # Part 1: Entity in the residence (country) of an athlete from Great Britain
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:residenceLocation ?residence .
  ?residence dbp:countryName ?residenceCountry .

  # Part 2: Death place of the awardee of the establishment on 1820-03-10
  ?establishment dbo:dateEstablished ""1820-03-10""^^xsd:date ;
                 dbo:awardee ?awardee .
  ?awardee dbo:deathPlace ?deathPlace .

  # Part 3: Entity in the award of the commander in Battle of Saint-Mihiel
  ?battle dbr:Battle_of_Saint-Mihiel ;
          dbo:commander ?commander .
  ?award dbo:recipient ?commander ;
         dbo:entity ?awardEntity .
}",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
965,63,test,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and parent of the person born, that is a noble, as Prince George of Battenberg and spouse of the spouse of the parent of Louise Mountbatten.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse
WHERE {
  # Prince Louis of Battenberg's child who is royalty
  ?child dbo:parent dbr:Prince_Louis_of_Battenberg .
  ?child a dbo:RoyalFamilyMember .

  # This child's parent (who is also the parent of Prince George of Battenberg)
  ?parent dbo:child ?child .
  ?parent dbo:child dbr:Prince_George_of_Battenberg .
  
  # Parent of Louise Mountbatten
  ?louiseParent dbo:child dbr:Louise_Mountbatten .

  # Spouse of the parent of Louise Mountbatten
  ?spouse dbo:spouse ?louiseParent .

  # Ensure the person is noble
  FILTER EXISTS { ?parent a dbo:Noble }
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
606,18,test,"Give me the figure known as the nickname of the figure known, that is a settlement, as Barb City and birthplace of the alumnus of University of Pennsylvania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . ?v1 <http://dbpedia.org/property/nickname> ""Barb City""@en . ?v1 <http://dbpedia.org/property/nickname> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?cityName WHERE {
  ?city a dbo:Settlement ;
        dbp:nickname ""Barb City"" ;
        rdfs:label ?cityName .
  
  OPTIONAL { 
    ?person dbo:birthPlace ?city ;
            dbo:almaMater dbr:University_of_Pennsylvania .
  }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
791,61,test,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v5 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor
WHERE {
  # Step 1: Identify Emperor Go-Shirakawa's child and grandchild
  ?goChild dbo:parent dbr:Emperor_Go-Shirakawa .
  ?goGrandchild dbo:parent ?goChild .

  # Step 2: Find the predecessor of the grandchild if they are an office holder and royalty
  ?predecessor dbo:succeededBy ?goGrandchild .
  ?predecessor a dbo:OfficeHolder ;
               a dbo:Royalty .

  # Step 3: Identify Emperor Antoku's father, who is a royalty and an office holder
  ?antokuFather dbo:parent dbr:Emperor_Antoku .
  ?antokuFather a dbo:Royalty ;
                a dbo:OfficeHolder .

  # Step 4: Find the child of this person (Antoku's grandfather), who is a royalty
  ?antokuGrandchild dbo:parent ?antokuFather .
  ?antokuGrandchild a dbo:Royalty .

  # Step 5: Identify the father of this grandchild
  ?fatherOfGrandchild dbo:parent ?antokuGrandchild .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
987,61,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v0 <http://dbpedia.org/property/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country
WHERE {
  ?sportsEvent dbo:location dbr:Canicosa_de_la_Sierra .
  ?timeZone dbo:sportingEvent ?sportsEvent .
  ?region dbo:timezone ?timeZone .
  ?country dbo:partOfRegion ?region .

  ?film dbp:starring [dbo:actor dbr:Emir_Hadžihafizbegović] .
  ?actor dbo:birthPlace ?country .
  ?film dbo:starring ?actor .
}
```",6,9,7,3,2,3,3,71,0,0,18,0,0.0,0
5,20,test,"Give me the birthplace of the person born, that is a politician, as the award of Renata Adler and entity in the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v5 . <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Politician ;
          dbo:awardReceivedBy dbr:Renata_Adler .
  
  ?band dbo:awardRecipient dbr:Rubén_Colón_Tarrats .
  ?person dbo:associatedBand ?band .

  ?person dbo:birthPlace ?birthPlace .
}
```",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
445,65,test,"Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the residence, that is a country, of Anna Sharkey and entity in the award of George H. Cameron.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v4 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?countryOfResidence ?awardEntity
WHERE {
  # Find the awardee of an establishment dated 1820-03-10
  ?establishment dbo:date ""1820-03-10""^^xsd:date ;
                 dbo:awardee ?awardee .
  
  # Get the death place of this awardee
  ?awardee dbo:deathPlace ?deathPlace .

  # Find Anna Sharkey's country of residence
  dbr:Anna_Sharkey dbo:residenceLocation ?countryOfResidence ;
                   a dbo:Country .

  # Find George H. Cameron's award entity
  dbr:George_H_Cameron dbo:award ?awardEntity .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
826,60,test,"Give me the spouse of the child of the father of Anna Magdalena Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Anna Magdalena Appel and her father
  dbr:Anna_Magdalena_Bach a dbo:Person ;
                          dbo:father ?fatherOfAnna .

  # Child of the father (could be Anna or another sibling)
  ?child dbo:parent ?fatherOfAnna .

  # Spouse of this child
  ?spouse dbo:spouse ?child .

  # Louis IV, Grand Duke of Hesse and his child
  dbr:Louis_IV,_Grand_Duke_of_Hesse a dbo:Person ;
                                     dbo:child ?childOfLouisIV .

  # Parent of Louis IV's child (likely Louis IV or spouse)
  ?parent dbo:child ?childOfLouisIV .
  
  # Predecessor of this parent
  ?predecessor dbo:successor ?parent .

  FILTER (?spouse != ?predecessor) # Ensure the spouse is not the predecessor itself
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
926,68,test,"Give me the child of the father, that is a royalty, of Mustafa III and successor of the child of the spouse of Şermi Kadın and father of the father of the spouse of Neşerek Kadın.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v6 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfMustafaIII
WHERE {
  # Mustafa III's child who is royalty
  ?mustafaIII dbr:Mustafa_III .
  ?mustafaIIIChild dbo:child ?mustafaIII .
  ?mustafaIIIChild dbo:title ?royalTitle .
  
  FILTER EXISTS { ?royalTitle rdfs:label ?title . FILTER regex(?title, ""King|Queen|Sultan"", ""i"") }

  # Spouse of Şermi Kadın and their child
  ?sermiKadin dbr:Şermi_Kadın .
  ?spouseOfSermi dbo:spouse ?sermiKadin .
  ?childOfSpouse dbo:child ?spouseOfSermi .

  # Successor of the child of Şermi Kadın's spouse
  ?successor dbo:succeededBy ?childOfSpouse .

  # Neşerek Kadın's spouse and their father's father
  ?neserekKadin dbr:Neşerek_Kadın .
  ?spouseOfNeserek dbo:spouse ?neserekKadin .
  ?fatherOfSpouseOfNeserek dbo:child ?spouseOfNeserek .
  ?grandFatherOfSpouseOfNeserek dbo:child ?fatherOfSpouseOfNeserek .

  # Match the successor with Mustafa III's child
  FILTER (?successor = ?mustafaIIIChild)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
773,71,test,"Give me the parent of the successor of the child, that is a royalty, of Louis the Pious and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat).",SELECT ?result WHERE { <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v7 . ?v8 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/successor> ?v5 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v4 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfSuccessor
WHERE {
  # Louis the Pious and his child who is royalty
  ?child1 dbo:spouse* dbr:Louis_the_Pious .
  ?child1 a dbo:Monarch .
  
  # Successor of Louis the Pious's child
  ?successor dbo:predecessorOrRegent ?child1 .
  
  # Parent of the successor
  ?parentOfSuccessor dbo:spouse* ?successor .

  # Carloman of Bavaria and his father who is an office holder and royalty
  ?father dbr:Carloman_of_Bavaria dbo:father .
  ?father a dbo:Monarch ;
          dbo:officeHolder ?office .

  # Child of Carloman's father who is royalty
  ?child2 dbo:spouse* ?father .
  ?child2 a dbo:Monarch .

  # Parent of the child of Carloman's father
  ?parentOfChild2 dbo:spouse* ?child2 .

  # Bernard (son of Charles the Fat) and his parent
  dbr:Bernard_of_Swabia dbo:father dbr:Charles_the_Fat .
  ?parentOfBernard dbo:spouse* dbr:Charles_the_Fat .

  # Spouse of Bernard's grandparent
  ?grandparent dbo:spouse* ?parentOfBernard .
  ?spouseOfGrandparent dbo:spouse* ?grandparent .

  FILTER (?parentOfSuccessor = ?parentOfChild2)
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
236,20,test,"Give me the party member of the administration of the reference, that is an office holder and a politician, to James Madison and party member of the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v4 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/party> ?v2 . ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyMemberOfMadison ?organizationOfDcedent
WHERE {
  # James Madison's details
  dbr:James_Madison a dbo:Politician ;
                    dbo:officeHolderOf dbr:Administration_of_James_Madison .

  # Party member of James Madison's administration
  ?person dbo:partyMemberOf dbr:Administration_of_James_Madison .
  FILTER (?person != dbr:James_Madison) .
  ?person a dbo:Politician ;
          dbo:officeHolderOf ?administration .
  BIND(?person AS ?partyMemberOfMadison)

  # Decedent politician who died in Quincy, Massachusetts
  ?decedent a dbo:Politician ;
            dbo:officeHolderOf ?adminDcedent ;
            dbo:deathPlace dbr:Quincy,_Massachusetts .

  # Organization that was a party member of the decedent's administration
  ?organization dbo:partyMemberOf ?adminDcedent .
  FILTER (?organization != ?decedent) .
  BIND(?organization AS ?organizationOfDcedent)
}",6,11,7,3,2,3,2,20,0,0,19,0,0.0,0
417,61,test,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalChild
WHERE {
  # Step 1: Leader of Colony of Greenland
  ?leader dbo:country dbr:Greenland .
  
  # Step 2: Father of the leader
  ?father dbo:child ?leader .
  
  # Step 3: Child of this father who is royalty
  ?royalChild dbo:parent ?father .
  FILTER EXISTS { ?royalChild a dbo:Monarch . }
  
  # Step 4: Alexandrine of Mecklenburg-Schwerin's parent who is royalty
  dbr:Aleksandra_of_Mecklenburg-Schwerin dbo:childOf ?parentAlexandrine .
  FILTER EXISTS { ?parentAlexandrine a dbo:Monarch . }
  
  # Step 5: Child of this parent who is royalty
  ?royalChild2 dbo:parent ?parentAlexandrine .
  FILTER EXISTS { ?royalChild2 a dbo:Monarch . }
  
  # Step 6: Child of the previously identified royal child
  ?finalChild dbo:parent ?royalChild2 .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
976,62,test,"Give me the office of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v4 <http://dbpedia.org/ontology/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/office> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?naciOffice ?mayorOffice ?politicalParty ?leaderOffice
WHERE {
  # Naci Bostancı's office
  dbr:Naci_Bostancı dbo:office ?naciOffice .

  # Mayor who is a politician, office holder, and Turkish
  ?mayor a dbo:Mayor ;
         rdfs:label ?mayorLabel ;
         dbo:nationality dbr:Turkey .
  FILTER (LANG(?mayorLabel) = 'tr' && CONTAINS(LCASE(?mayorLabel), ""siyasetçi"") && CONTAINS(LCASE(?mayorLabel), ""hükümet görevlisi""))
  ?mayor dbo:office ?mayorOffice .

  # Reference organization that is a political party and Turkish
  ?politicalParty a dbo:PoliticalParty ;
                  rdfs:label ?partyLabel ;
                  dbo:nationality dbr:Turkey .
  FILTER (LANG(?partyLabel) = 'tr' && CONTAINS(LCASE(?partyLabel), ""millet ittifakı""))
  OPTIONAL { ?politicalParty dbo:member ?leader . }

  # Office of the leader who is a politician
  ?leader a dbo:Politician ;
          rdfs:label ?leaderLabel .
  FILTER (LANG(?leaderLabel) = 'tr')
  ?leader dbo:office ?leaderOffice .

  # Administration organization of Kemal Kılıçdaroğlu
  dbr:Kemal_Kılıçdaroğlu dbo:positionHeld ?administration ;
                         rdfs:label ?adminLabel .
  FILTER (LANG(?adminLabel) = 'tr' && CONTAINS(LCASE(?adminLabel), ""idare""))
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
645,57,test,"Give me the commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?leader ?militaryForce ?native
WHERE {
  # Battle of Jarama and its commander
  ?battle a dbo:MilitaryConflict ;
          rdfs:label ""Battle of Jarama""@en .
  
  ?battle dbo:commander ?commander .

  # Camilo Menéndez Tolosa's office
  ?office dbo:leader ?leader ;
          a dbo:GovernmentAgency, dbo:Organization ;
          dbo:employee dbr:Camilo_Menéndez_Tolosa .

  # Military force involved in the Battle of Jarama
  ?battle dbo:militaryForce ?militaryForce .

  # Native president and politician from Restoration (Spain)
  ?native a dbo:President, dbo:Politician ;
          dbo:nationality dbr:Spain ;
          dbo:era dbr:Restoration_(Spain) .
}",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
892,65,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of the award of the member of E-girls and entity in the profession of Henri Crolla.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity
WHERE {
  ?entity a dbo:Region ;
          a dbo:Settlement ;
          a dbo:AdministrativeRegion ;
          dbo:nationality dbr:Italy .

  ?entity dbo:partOf dbr:Democratic_Party_(Italy) .
  
  OPTIONAL { 
    ?landmark dbo:elevation ?elevation .
    ?landmark dbo:location ?entity .
  }
  
  OPTIONAL {
    ?award dbp:recipient ?member .
    ?member a dbo:Member ;
            dbo:memberOf dbr:E-girls .
    ?award dbo:awardedTo ?entity .
  }

  OPTIONAL {
    ?profession dbo:person dbr:Henri_Crolla .
    ?profession dbo:field ?entity .
  }
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
83,20,test,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA and party of the governor of the commander, that is a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leaderParty> ?result . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?rulingParty
WHERE {
  # Step 1: Identify the sports manager who is a member of Kedah FA
  ?sportsManager dbo:memberOf dbr:Kedah_FA ;
                 rdf:type dbo:SportsManager .

  # Step 2: Find their birthplace, which must be a town and Brazilian with a soccer club
  ?birthPlace dbo:nationality dbr:Brazil ;
             dbo:isPartOf ?town ;
             dbo:hasSoccerClub ?soccerClub .
  FILTER (dbo:type(?town) = dbo:Town)

  # Step 3: Link the sports manager to their birthplace
  ?sportsManager dbp:birthPlace ?birthPlace .

  # Step 4: Find the ruling party in that town
  ?rulingParty dbo:governingBody ?town .

  # Step 5: Identify the governor associated with this ruling party
  ?governor dbo:party ?rulingParty ;
           dbo:officeHolder ?town .

  # Step 6: Determine the commander involved in the Central African Republic Civil War who is a politician and their party
  ?commander rdf:type dbo:Politician ;
             dbo:involvedIn dbr:Central_African_Republic_Civil_War .
  ?partyOfCommander dbo:member ?commander .

  # Link governor's party to commander's party (assuming they are the same)
  FILTER (?rulingParty = ?partyOfCommander)
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
715,68,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  ?conflict dbo:militaryConflictCommander ?commander .
  
  ?commander dbo:nationality ?morocco .
  FILTER (STRSTARTS(STR(?morocco), ""Morocco"")) .

  ?office dbo:leader ?commander ;
          a dbo:GovernmentAgency, dbo:Organization .

  ?carlos dbp:leaderOf ?office ;
          foaf:name ""Carlos Franco Iribarnegaray""@en .
  
  ?mayor dbo:militaryConflictCommander ?commander ;
         dbo:presidentDuring ?election ;
         dbo:officeHolder ?office ;
         a dbo:Politician .

  ?election dbp:electionDate ?date ;
            dbp:electionName ""1933 Spanish general election""@en .
  
  FILTER (YEAR(?date) = 1933)
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
839,64,test,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of Peter Schorowsky and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?kevinRussellBand ?peterSchorowskyBand ?bandOfBand
WHERE {
  # Kevin Russell's band
  dbr:Kevin_Russell (dbo:associatedBand) ?kevinRussellBand .
  
  # Peter Schorowsky's band
  dbr:Peter_Schorowsky (dbo:associatedBand) ?peterSchorowskyBand .

  # Band of a musical artist who is a professional musician
  ?band dbo:genre ?genre .
  FILTER EXISTS { ?band dbo:musicalArtist true . }
  FILTER EXISTS { ?band dbo:professionalMusician true . }
  ?band (dbo:associatedBand) ?bandOfBand .
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
582,57,test,"Give me the reference to Japan and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and figure known as the nickname of Japan national football team.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherReference ?playerInFather WHERE {
  # Kazuaki Nagasawa's child
  ?child dbo:mother dbr:Kazuaki_Nagasawa .
  
  # Father of the child
  ?child dbo:father ?father .

  # Father is an athlete, soccer manager, and sports manager
  ?father a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .

  # Father's reference
  ?father dbp:reference ?fatherReference .

  # Player in father (assuming this means the father himself as a player)
  ?father dbp:playerIn ?playerInFather .

  # Association with Japan as a nickname related to the national football team
  OPTIONAL {
    ?nickname dbo:nationality dbr:Japan ;
              dbo:sportTeam dbr:Japan_national_football_team .
    ?father dbp:nickname ?nickname .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
791,67,test,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of Taira no Tokuko and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v6 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfChild
WHERE {
  # Emperor Antoku and Taira no Tokuko
  dbr:Emperor_Antoku dbo:spouse dbr:Taira_no_Tokuko .
  
  # Father of the child who is royalty
  ?child dbo:parent ?fatherOfChild ;
         a dbo:Royalty .

  # Child of the father who is both royalty and an office holder
  ?fatherOfChild dbo:parent ?grandFather ;
                 a dbo:Royalty, dbo:OfficeHolder .
  
  # Predecessor of the grandchild who is both an office holder and royalty
  ?grandChild dbo:parent ?child ;
              a dbo:OfficeHolder, dbo:Royalty .

  ?predecessor dbo:succeededBy ?grandChild ;
               a dbo:OfficeHolder, dbo:Royalty .
  
  # Child of Emperor Go-Shirakawa who is both an office holder and royalty
  dbr:Emperor_Go-Shirakawa dbo:child ?childOfGoShirakawa .
  ?childOfGoShirakawa a dbo:OfficeHolder, dbo:Royalty .

  # Linking the predecessor to the child of Emperor Go-Shirakawa
  ?predecessor = ?fatherOfChild .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
933,62,test,"Give me the reference to the birth name of the professional in Musician and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and band of The Ramong Sound.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musician ?birthName
WHERE {
  # Identify the band ""The Ramones""
  dbr:The_Ramones a dbo:Band .

  # Find musicians associated with this band
  ?bandMember dbo:memberOf dbr:The_Ramones .
  
  # Ensure they are musicians/artists
  ?bandMember a dbo:MusicalArtist ;
              foaf:name ?musician .

  # Retrieve their birth names
  OPTIONAL { ?bandMember foaf:givenName ?birthGivenName . }
  OPTIONAL { ?bandMember foaf:surname ?birthSurname . }

  BIND(CONCAT(?birthGivenName, "" "", ?birthSurname) AS ?birthName)
}
ORDER BY ?musician",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
573,69,test,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v7 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v7 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?personDecedentAtAdministration ?realNameCharlieBaker ?authorParentPolitician
WHERE {
  # Real name of Charlie Baker (Australian footballer)
  dbr:Charlie_Baker_(Australian_footballer) dbo:birthName ?realNameCharlieBaker .

  # Author related to John Quincy Adams
  ?work dbo:author ?author .
  ?work dbp:title ""John_Quincy_Adams"" .

  # Politician/office holder parent of the author
  ?author dbo:parent ?politicianParent .
  ?politicianParent a dbo:Politician ;
                   dbo:officeHolder true .

  # Person decedent at the administration (region) of Charlie Baker's real name
  ?realNameCharlieBaker dbo:administrativeRegion ?administrationRegion .
  ?personDecedentAtAdministration dbo:deceasedAt ?administrationRegion .

  # Residence of William J. Phelan
  dbr:William_J._Phelan dbo:residence ?settlementResidence .
  ?personDecedentAtSettlement dbo:deceasedAt ?settlementResidence .

  # Ensure the person is decedent at both locations
  FILTER (?personDecedentAtAdministration = ?personDecedentAtSettlement)
}
```",8,12,9,3,3,3,3,71,0,0,2,0,0.0,0
978,18,test,"Give me the band member of the professional, that is a musical artist and an artist, in the award of Michel Claparède and band member of the person born as Nicholas Bracegirdle.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember
WHERE {
  # Find a professional who is both a musical artist and an artist
  ?professional dbo:type dbr:MusicalArtist ;
                dbo:type dbr:Artist .

  # This person must be a band member of the award Michel Claparède
  ?professional dbo:award dbr:Michel_Claparède .

  # Also, this person must be a band member of Nicholas Bracegirdle
  ?bracegirdle dbp:birthName ""Nicholas Bracegirdle"" .
  ?bracegirdle dbo:type dbr:Person .
  
  ?professional dbo:bandMemberOf ?bracegirdle .

  # The variable we are interested in is the band member common to both conditions
  BIND(?professional AS ?bandMember)
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
433,67,test,"Give me the associated musical artist of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.",SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find the associated musical artist of Paul Chambers
  ?paulChambers a dbr:Paul_Chambers ;
                dbo:musicalArtist ?firstAssociatedArtist .

  # Step 2: Find the associated musical artist of the first associated artist
  ?firstAssociatedArtist dbo:musicalArtist ?secondAssociatedArtist .

  # Step 3: Ensure secondAssociatedArtist is both an artist and a musical artist
  ?secondAssociatedArtist a dbr:MusicalArtist ;
                         dbo:artist ?finalArtist .

  # Step 4: Find the associated musical artist of Ornette Coleman
  ?ornetteColeman a dbr:Ornette_Coleman ;
                  dbo:musicalArtist ?orneColemanAssociatedArtist .

  # Step 5: Ensure orneColemanAssociatedArtist is both an artist and a musical artist
  ?orneColemanAssociatedArtist a dbr:MusicalArtist ;
                               dbo:artist ?finalArtist .

  # Step 6: Find the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  ?slowhandAlbum dbr:""Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall"" ;
                 dbo:writer ?albumWriter .

  # Step 7: Ensure finalArtist is professional in the same profession as the album writer
  ?finalArtist dbo:profession ?sameProfession .
  ?albumWriter dbo:profession ?sameProfession .
}
```",7,11,8,3,3,3,3,71,0,0,4,0,0.0,0
456,68,test,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and band of the band, that is a musical artist, of Dean Brody and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v5 <http://dbpedia.org/property/starring> ?v4 . ?v5 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  ?movie a dbo:Film ;
         dbo:genre ?workGenre .
  
  FILTER (?workGenre IN (dbr:Work, dbr:TelevisionShow))
  
  ?movie dbo:starring ?actor .
  ?actor foaf:name ""Ross Newton"" .

  ?band dbo:member ?musicalArtist .
  ?musicalArtist foaf:name ""Dean Brody"" .
  
  ?movie dbo:hasBand ?band .

  ?fictionalCharacter dbo:alterEgo ?alterEgo .
  ?alterEgo foaf:name ""Lamont Cranston"" .
  ?fictionalCharacter dbo:professionalIn ?profession .
  ?profession dbr:Radio ;
              dbr:Film ;
              dbr:Television .

  ?actor dbo:spouse ?spouse .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
826,71,test,"Give me the spouse of the child of the father of Anna Magdalena Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v7 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v7 <http://dbpedia.org/ontology/parent> ?v8 . ?result <http://dbpedia.org/ontology/successor> ?v8 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse
WHERE {
  # Anna Magdalena Bach's father and his children
  dbr:Anna_Magdalena_Bach dbo:father ?father .
  ?father dbo:child ?child .

  # Spouse of the child
  ?child dbo:spouse ?spouse .

  # Louis I of Hesse and his successor in royalty
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:successor ?successor .
  FILTER (dbo:royalty(?successor)) .

  # Predecessor related to Louis IV's lineage
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:child ?grandChild .
  ?parent dbo:parent ?grandChild .
  ?predecessor dbo:predecessor ?parent .

  # Ensure the successor is royalty and matches the spouse
  FILTER (?spouse = ?successor)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
935,18,test,"Give me the death place of the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi and headquarter of the office of Sanaullah Khan Zehri.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://dbpedia.org/ontology/location> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?headquarters
WHERE {
  # Find the award associated with Syed Sohail Hussain Naqvi
  dbr:Syed_Sohail_Hussain_Naqvi dbo:award dbr:Award1 .
  
  # Find an awardee of that award and their death place
  ?awardee dbo:award dbr:Award1 .
  OPTIONAL { ?awardee dbo:deathPlace ?deathPlace . }
  
  # Find the office related to Sanaullah Khan Zehri and its headquarters
  dbr:Sanaullah_Khan_Zehri dbo:office dbr:Office1 .
  ?office dbo:headquarters ?headquarters .
}
```

Note:
- Replace `dbr:Award1` and `dbr:Office1` with the actual DBpedia resources for the award and office if known.
- This query assumes that the relationships are directly available in DBpedia. Adjustments may be needed based on actual data availability.",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
773,67,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of the successor of the child, that is a royalty, of Louis the Pious and spouse of Louis the German.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://dbpedia.org/ontology/successor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Carloman of Bavaria's father who is an office holder and royalty
  ?carlomanFather a dbo:Monarch ;
                  dbo:officeHolder true ;
                  dbo:child dbr:Carloman_of_Bavaria .

  # Child of Carloman's father who is royalty
  ?child1 dbo:parent ?carlomanFather ;
         a dbo:Monarch .

  # Louis the Pious' child who is royalty
  ?louisChild dbo:parent dbr:Louis_the_Pious ;
             a dbo:Monarch .

  # Successor of Louis the Pious' child (child1's parent)
  ?successorParent dbo:succeededBy ?louisChild .

  # Parent of the successor, who is also the spouse of Louis the German
  ?parent dbo:spouse dbr:Louis_the_German ;
          dbo:parent ?successorParent .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
926,58,test,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of Mahmud II and successor of the child of Ahmed III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Beyhan Sultan's father is Mustafa III
  dbr:Beyhan_Sultan dbo:father dbr:Mustafa_III .

  # Mahmud II is a child of Beyhan Sultan
  dbr:Mahmud_II dbo:mother dbr:Beyhan_Sultan .
  
  # Mustafa III's son who is royalty and parent of Mahmud II
  ?mustafasSon dbo:father dbr:Mustafa_III ;
              rdf:type dbo:Monarch ;
              dbo:child dbr:Mahmud_II .

  # Ahmed III's child
  ?ahmedChild dbo:sonOf dbr:Ahmed_III .
  
  # Successor of Ahmed III's child
  ?successor dbo:predecessor ?ahmedChild ;
             rdf:type dbo:Monarch .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
826,66,test,"Give me the spouse of the child of Johann Heinrich Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v6 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Johann Heinrich Appel's child
  ?appelChild dbo:childOf dbr:Johann_Heinrich_Appel .
  
  # Spouse of Johann Heinrich Appel's child
  ?spouse dbo:spouse ?appelChild .

  # Louis IV, Grand Duke of Hesse's child and their parent
  ?louisIVChild dbo:childOf dbr:Louis_IV,_Grand_Duke_of_Hesse .
  ?parent dbp:child ?louisIVChild .

  # Predecessor of the parent of Louis IV's child
  ?predecessor dbo:successor ?parent .

  # Louis I, Grand Duke of Hesse's child and their successor that is royalty
  ?louisIChild dbo:childOf dbr:Louis_I,_Grand_Duke_of_Hesse .
  ?successor dbo:predecessor ?louisIChild .
  
  FILTER (dbo:royalty ?successor) .

  # Ensure the spouse matches all conditions
  FILTER (?spouse = ?predecessor)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
353,8,test,"Give me the entity in the country of Moskovsky City District, Nizhny Novgorod and alma mater of Daniil Yegorov.","SELECT ?result WHERE { <http://dbpedia.org/resource/Moskovsky_City_District,_Nizhny_Novgorod> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Daniil_Yegorov> <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?almaMater dbo:alumni ?person .
  ?person foaf:name ""Daniil Yegorov"" .
  
  ?entity dbo:location dbr:Moskovsky_City_District_Nizhny_Novgorod .
  FILTER(?almaMater = ?entity)
}
```

This query does the following:
- Selects entities (`?entity`) that are both located in Moskovsky City District, Nizhny Novgorod and are the alma mater of Daniil Yegorov.
- Uses `dbo:alumni` to find institutions where Daniil Yegorov studied.
- Matches the location using `dbo:location`.",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
826,65,test,"Give me the spouse of the child of Johann Heinrich Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of the parent of Prince Friedrich of Hesse and by Rhine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v6 <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?successor ?predecessor
WHERE {
  # Johann Heinrich Appel's child and their spouse
  ?child dbo:parent dbr:Johann_Heinrich_Appel .
  ?spouse dbo:spouse ?child .

  # Successor of the spouse who is royalty
  ?successor dbo:succeededBy ?spouse .
  FILTER EXISTS { ?successor a dbo:Monarch } .

  # Reference to Louis I
  ?reference dbo:monarch dbr:Louis_I_of_Hesse_and_by_Rhine .
  FILTER (?successor = ?reference) .

  # Predecessor of the parent of Prince Friedrich of Hesse and by Rhine
  ?parent dbo:child dbr:Friedrich_Prince_of_Hesse_and_by_Rhine .
  ?predecessor dbo:succeededBy ?parent .
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
158,19,test,"Give me the entity in the award, that is a country, of Adelbert Cronkhite and party of the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?country
WHERE {
  # Adelbert Cronkhite's award and country
  ?award dbo:recipient dbr:Adelbert_Cronkhite .
  ?award dbo:country ?country .

  # Successor who is a prime minister, office holder, and politician
  ?successor dbo:predecessor dbr:Adelbert_Cronkhite ;
             a dbo:PrimeMinister ;
             a dbo:OfficeHolder ;
             a dbo:Politician .

  # Deceased person who was an office holder and politician on 1945-09-15
  ?deceased dbo:dateOfDeath ""1945-09-15""^^xsd:date ;
            a dbo:OfficeHolder ;
            a dbo:Politician .
  
  # The successor is the party of the deceased
  ?successor dbo:party ?deceased .
}
```",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
36,25,test,"Give me the person born in the birth year of Deanne Bray and person born as Ayo Makun and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person1 ?person2 ?actor
WHERE {
  # Get Deanne Bray's birth year
  ?deanneBray a dbo:Person ;
              foaf:name ""Deanne Bray""@en ;
              dbo:birthYear ?birthYearDeanneBray .

  # Get Ayo Makun's birth year
  ?ayoMakun a dbo:Person ;
            foaf:name ""Ayo Makun""@en ;
            dbo:birthYear ?birthYearAyoMakun .

  # Find people born in Deanne Bray's birth year
  ?person1 a dbo:Person ;
           dbo:birthYear ?birthYearDeanneBray .

  # Find people born in Ayo Makun's birth year
  ?person2 a dbo:Person ;
           dbo:birthYear ?birthYearAyoMakun .

  # Get Lepacious Bose's claim to fame (film)
  ?lepaciousBose a dbo:Person ;
                 foaf:name ""Lepacious Bose""@en ;
                 dbo:claimToFame ?film .

  # Find actor with the same claim to fame
  ?actor a dbo:Actor ;
         dbo:claimToFame ?film .
}",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
987,62,test,"Give me the entity in Montenegro and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandBirthPlace ?actorBirthPlace
WHERE {
  # Find the band associated with Dado Polumenta
  ?band dbo:member ?member .
  ?member foaf:name ""Dado Polumenta""@en .

  # Ensure the band has members who are artists and musical artists
  ?band dbo:genre ?genre .
  FILTER EXISTS { ?genre rdfs:label ?label . FILTER(CONTAINS(LCASE(?label), ""artist"")) }
  FILTER EXISTS { ?member dbo:occupation ?occupation . FILTER(CONTAINS(LCASE(STR(?occupation)), ""musical artist"")) }

  # Get the birthplace of the band
  ?band dbp:birthPlace ?bandBirthPlace .
  
  # Ensure the birthplace is in Montenegro
  ?bandBirthPlace dbo:country dbr:Montenegro .

  # Find a film featuring Emir Hadžihafizbegović
  ?film dbo:starring dbr:Emir_Hadžihafizbegović .
  
  # Get an actor from that film
  ?actor dbo:starringInFilm ?film .
  
  # Get the birthplace of the actor
  ?actor dbp:birthPlace ?actorBirthPlace .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
445,69,test,"Give me the death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?result <http://dbpedia.org/ontology/location> ?v3 . ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?deathPlace ?country ?awardEntity
WHERE {
  # Awardee of the Royal Astronomical Society and their death place
  ?awardee dbo:awardReceived dbr:Royal_Astronomical_Society .
  ?awardee dbo:deathPlace ?deathPlace .

  # Athlete resident in Great Britain and their country of residence
  ?athlete dbo:nationality dbr:United_Kingdom .
  ?athlete dbo:residence ?residence .
  ?residence dbp:countryName ?country .

  # Commander involved in the Battle of Saint-Mihiel and associated award entity
  ?commander dbo:participatedInBattle dbr:Battle_of_Saint-Mihiel .
  ?commander dbo:awardReceived ?award .
  ?award dbo:entity ?awardEntity .
}",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
926,70,test,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v6 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity
WHERE {
    # Step 1: Father of the father of Abdulaziz
    ?abdulazizFather dbo:father dbr:Abdulaziz_of_Saudi_Arabia .
    ?grandfather dbo:father ?abdulazizFather .

    # Step 2: Child of the father (royalty) of the parent (royalty) of Beyhan Sultan
    ?beyhanParent dbo:parent dbr:Beyhan_Sultan .
    FILTER(STRSTARTS(LCASE(?beyhanParent), ""http://dbpedia.org/resource/"")) .
    ?beyhanGrandfather dbo:father ?beyhanParent .
    FILTER(STRSTARTS(LCASE(?beyhanGrandfather), ""http://dbpedia.org/resource/"")) .
    ?royalChild dbo:childOf ?beyhanGrandfather .

    # Step 3: Successor of the child of the spouse of Şermi Kadın
    ?sermiSpouse dbo:spouse dbr:Şermi_Kadın .
    ?childOfSpouse dbo:childOf ?sermiSpouse .
    ?successor dbo:successor ?childOfSpouse .

    # Find common entity that satisfies all conditions
    FILTER(?grandfather = ?royalChild)
    FILTER(?royalChild = ?commonEntity)
    FILTER(?commonEntity = ?successor)
}",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
978,20,test,"Give me the band member of the professional, that is a musical artist and an artist, in the award of Michel Claparède and band member of the person born as the name of Chicane (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember
WHERE {
  ?person a dbo:MusicalArtist ;
          a dbo:Artist ;
          dbo:award dbr:Mic_hel_Cl_aparède_Award .
  
  ?chicane dbo:birthName ""Chicane"" ;
           dbo:member ?bandMember .

  ?person dbo:bandMember ?bandMember .
}
```",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
791,60,test,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfChild
WHERE {
  # Emperor Antoku and his father
  dbr:Emperor_Antoku dbo:father ?antokuFather .
  
  # Ensure the father is a royalty and an office holder
  ?antokuFather rdf:type dbo:Monarch .
  ?antokuFather dbo:officeHolderOf ?someOffice .

  # Emperor Takakura's spouse
  dbr:Emperor_Takakura dbo:spouse ?takakuraSpouse .
  
  # Ensure the spouse is a royalty
  ?takakuraSpouse rdf:type dbo:Monarch .

  # The child of Antoku's father (who is also a royalty)
  ?antokuFather dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .

  # The spouse of Takakura's spouse
  ?takakuraSpouse dbo:spouse ?secondSpouse .

  # Ensure the second spouse is a royalty
  ?secondSpouse rdf:type dbo:Monarch .

  # The father of the child who fits all criteria
  ?royalChild dbo:father ?fatherOfChild .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
456,66,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of the actor of Pacific Drive and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfBand
WHERE {
  # Find Alan Doyle's band
  ?alanDoyle a dbo:MusicalArtist ;
             foaf:name ""Alan Doyle""@en .
  
  ?alanDoyle dbo:memberOf ?dooleysCoveBand .

  # Find the actor in Pacific Drive and their spouse
  ?pacificDriveFilm dbo:title ""Pacific Drive""@en .
  ?actorInPacificDrive dbo:starring ?pacificDriveFilm ;
                       foaf:name ?actorName .
  
  ?spouse a dbo:Spouse ;
          dbo:spouseOf ?actorInPacificDrive .

  # Find the professional known as The Shadow
  ?theShadow a dbo:Person ;
             foaf:name ""The Shadow""@en ;
             dbo:profession ?profession .

  # Connect all parts to find the band of the band
  ?bandOfBand dbo:member ?spouse .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
917,62,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of Kekūanāoʻa and child of the father of the spouse, that is a royalty, of Leleiohoku I.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Mayor of Hawaiian Kingdom and their child who is royalty
  ?mayor dbo:positionTitle ""Mayor""@en;
         dbo:child ?child1.
  
  # Child of Kekūanāoʻa
  ?kekuanaoa dbr:Kekūanāoʻa;
             dbo:child ?child2.

  FILTER (?child1 = ?child2)

  # Spouse of Leleiohoku I who is royalty
  ?lelei dbr:Leleiohoku_I;
         dbo:spouse ?spouse.
  
  ?spouse a dbo:RoyalFamilyMember.

  # Father of the spouse
  ?father dbo:child ?spouse.

  # Child of this father who is royalty
  ?father dbo:child ?child3.
  
  ?child3 a dbo:RoyalFamilyMember.

  # Parent of this child
  ?parent dbo:child ?child3.
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
507,70,test,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of the person born on 1966-02-18 and spouse of the person born as Anne Voase Coates.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v7 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v7 <http://dbpedia.org/property/starring> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?director WHERE {
  # Person born on 1919-06-17
  ?person1 dbo:birthday ""1919-06-17""^^xsd:date .
  
  # Person born on 1966-02-18 and their profession
  ?person2 dbo:birthday ""1966-02-18""^^xsd:date .
  ?profession dbp:professional dbr:Person2 .

  # Anne Voase Coates and her spouse
  ?anne a dbo:Person ;
        dbo:spouse ?spouse .

  # The director of the movie that is both a movie and a work
  ?movie a dbo:Film, dbo:CreativeWork .
  ?movie dbo:director ?director .

  # Linking all conditions together
  ?person1 dbp:profession ?profession .
  ?spouse = ?person2 .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
212,8,test,Give me the birthplace of the professional in  and birthplace of Corp Sayvee.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Corp_Sayvee> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalBirthplace ?corpSayveeBirthplace
WHERE {
  # Assuming Corp Sayvee is a person or entity in DBpedia
  OPTIONAL {
    ?corpSayvee dbr:Corp_Sayvee .
    ?corpSayvee dbo:birthPlace ?corpSayveeBirthplace .
  }
  
  # Placeholder for the unspecified professional's birthplace
  # This part requires more context to be filled accurately
  OPTIONAL {
    ?professional a dbo:Person .
    ?professional dbo:birthPlace ?professionalBirthplace .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
329,25,test,"Give me the entity in the region, that is a country, of Western European Time and birthplace of the author of The Tailor and Ansty and entity in Northern Ireland.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v4 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country ?birthplace ?entityInNI
WHERE {
  # Find countries in the Western European Time zone
  ?country a dbo:Country ;
           dbo:timeZone dbr:Western_European_Time .

  # Find birthplace of George Moore, author of ""The Tailor and Ansty""
  dbr:George_Moore dbo:birthPlace ?birthplace .

  # Find entities in Northern Ireland
  ?entityInNI a dbo:AdministrativeRegion ;
              dbp:country dbr:Northern_Ireland .
}",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
826,56,test,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of Louis II, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor
WHERE {
  # Louis IV, Grand Duke of Hesse and his child
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:child ?childOfLouisIV .
  
  # Parent of the child (which is Louis IV)
  ?parentOfChild dbo:child ?childOfLouisIV .
  FILTER(?parentOfChild = dbr:Louis_IV,_Grand_Duke_of_Hesse)

  # Predecessor of Louis IV
  ?predecessor dbo:successor ?parentOfChild .

  # Louis II, Grand Duke of Hesse and his successor (which is Louis III)
  dbr:Louis_II,_Grand_Duke_of_Hesse dbo:successor ?successorOfLouisII .
  FILTER(?successorOfLouisII = dbr:Louis_III,_Grand_Duke_of_Hesse)

  # Johann Heinrich Appel and his child
  dbr:Johann_Heinrich_Appel dbo:child ?childOfAppel .

  # Spouse of the child of Johann Heinrich Appel
  ?spouse dbo:spouse ?childOfAppel .
  
  # Ensure predecessor is also successor of Louis II and spouse of Appel's child
  FILTER(?predecessor = ?successorOfLouisII)
  FILTER(?predecessor = ?spouse)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
93,19,test,"Give me the death place of the governor of the native, that is a politician, of Seattle and capital of the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace
WHERE {
  ?governor a dbo:Politician ;
            dbo:governmentRole [
              a dbo:Government ;
              dbo:capital dbr:Seattle ;
              dbo:headquarterRegion ?region .
            ] ;
            dbo:placeOfBirth ?birthPlace ;
            dbo:deathPlace ?deathPlace .

  ?park dbo:headquarters ?region .
  
  FILTER EXISTS { ?park a dbo:NationalPark ; rdfs:label ""Lake Clark National Park and Preserve""@en . }
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
865,58,test,"Give me the father of the child of the father of Abul Maal Abdul Muhith and native of British Raj and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfPolitician
WHERE {
  # Step 1: Find the father of Abul Maal Abdul Muhith
  ?abulMaal dbo:father ?fatherAbulMaal .
  
  # Step 2: Ensure this father is a native of British Raj
  ?fatherAbulMaal dbo:nationality dbr:British_Raj .

  # Step 3: Find the children of Abu Ahmad Abdul Hafiz
  ?abuAhmad dbo:child ?childAbuAhmad .
  
  # Step 4: Ensure this child is a politician
  ?childAbuAhmad rdf:type dbo:Politician .
  
  # Step 5: Identify the father of this politician child
  ?childAbuAhmad dbo:father ?fatherOfPolitician .

  # Linking step 1 and step 5 through commonality in family tree
  FILTER(?abulMaal = ?childAbuAhmad)
}
```",6,7,7,3,3,3,3,71,0,1,1,0.0,0.0,0
976,70,test,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the person born as the birth name of Naci Bostancı and office of the leader, that is a politician, of Grand National Assembly of Turkey.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?v6 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v6 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v3 . ?v6 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?mayorOffice ?referenceOrg ?naciBostanciOffice ?leaderOffice
WHERE {
  # Mayor's office of a Turkish politician
  ?politician dbo:nationality dbr:Turkey ;
              rdf:type dbo:Politician .
  ?officeHolder dbo:positionHeld ?mayorOffice ;
                dbo:agent ?politician .
  
  # Reference organization that is a political party and Turkish, related to Millet İttifakı
  ?referenceOrg rdf:type dbo:Organization , dbo:PoliticalParty ;
                dbo:nationality dbr:Turkey ;
                dbp:relatedTo dbr:Millet_İttifakı .
  
  # Office held by Naci Bostancı
  ?naciBostanci dbo:birthName ""Naci Bostancı""^^xsd:string ;
               dbo:nationality dbr:Turkey ;
               dbo:officeHeld ?naciBostanciOffice .

  # Leader's office of the Grand National Assembly of Turkey
  ?leader rdf:type dbo:Politician ;
          dbo:positionHeld ?leaderOffice .
  ?assembly dbo:name ""Grand National Assembly of Turkey"" ;
            dbo:leader ?leader .
}",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
976,60,test,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v4 <http://dbpedia.org/ontology/leader> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?kemalOffice ?naciOffice
WHERE {
  # Kemal Kılıçdaroğlu's office as a leader of an administration
  OPTIONAL {
    ?administration dbo:leader dbr:Kemal_Kılıçdaroğlu .
    ?administration dbo:office ?kemalOffice .
  }

  # Naci Bostancı's birth name and corresponding office
  OPTIONAL {
    ?naciBostanci dbp:birthName ""Naci Bostancı"" .
    ?naciBostanci dbo:office ?naciOffice .
  }
}
```",6,8,7,3,2,3,3,71,0,12,1,0.0,0.0,0
507,65,test,"Give me the spouse of the person born as Anne Voase Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of Guy Ferland.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName
WHERE {
  # Anne Voase Coates details
  dbr:Anne_Voase_Coates a dbo:FilmDirector ;
                        foaf:name ""Anne Voase Coates""@en ;
                        dbo:birthDate ?birthDate1 .

  # Movie directed by Anne Voase Coates
  ?movie dbo:director dbr:Anne_Voase_Coates ;
         rdf:type dbo:Film, dbo:Work .

  # Spouse of Anne Voase Coates
  dbr:Anne_Voase_Coates foaf:mbox ?spouseEmail .
  ?spouse foaf:mbox ?spouseEmail ;
          foaf:name ?spouseName .

  # Person born on 1919-06-17 with a professional link to Guy Ferland
  ?person dbo:birthDate ""1919-06-17""^^xsd:date ;
          dbo:profession dbr:Guy_Ferland .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
453,9,test,"Give me the religion of the birth place, that is a country, of William Denning and religion of the author, that is a cardinal and a cleric, of Apologia Pro Vita Sua.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cardinal>. <http://dbpedia.org/resource/William_Denning> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Apologia_Pro_Vita_Sua> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://dbpedia.org/ontology/religion> ?result . ?v3 <http://dbpedia.org/ontology/religion> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?denningReligion ?authorReligion
WHERE {
  # Find William Denning's birthplace and its religion
  dbr:William_Denning dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .
  ?birthPlace dbo:religion ?denningReligion .

  # Find the author of ""Apologia Pro Vita Sua"" who is a cardinal and cleric, and their religion
  dbr:Apologia_Pro_Vita_Sua dbo:author ?author .
  ?author rdf:type dbo:Cardinal .
  ?author rdf:type dbo:Cleric .
  ?author dbo:religion ?authorReligion .
}
```",4,7,5,2,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
507,71,test,"Give me the professional in the profession of the person born on 1966-02-18 and spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ?v8 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v7 <http://dbpedia.org/property/occupation> ?v8 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/property/starring> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional WHERE {
  # Person born on 1966-02-18
  ?person1 dbo:birthday ""1966-02-18""^^xsd:date .
  
  # Anne V. Coates (birth name)
  ?anne foaf:name ""Anne V. Coates""@en .
  
  # Spouse of Anne V. Coates
  ?anne dbo:spouse ?spouse .

  # Person born on 1919-06-17
  ?person2 dbo:birthday ""1919-06-17""^^xsd:date .

  # Movie directed by the spouse of Anne V. Coates involving both persons
  ?movie dbo:director ?spouse ;
         dbo:starring ?person1, ?person2 .
  
  # Profession of the person born on 1966-02-18
  ?person1 dbo:profession ?professional .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
41,26,test,"Give me the party of the work, that is an office holder, of yes and party of Declan Costello and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/author> ""yes""@en . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?party
WHERE {
  # Party of a work that is an office holder
  ?work dbo:officeHolder ?officeHolder .
  ?officeHolder dbo:politicalParty ?party .

  # Party of Declan Costello
  dbr:Declan_Costello dbo:politicalParty ?costelloParty .
  
  # Leader who was both a politician and an office holder in the 2005 Castlereagh Borough Council election
  ?leader dbo:electedDuring <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> ;
          dbo:politicalParty ?leaderParty ;
          rdf:type dbo:Politician, dbo:OfficeHolder .

  # Ensure the party is common among all conditions
  FILTER (?party = ?costelloParty && ?party = ?leaderParty)
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
47,61,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office1 ?office2
WHERE {
  # Find awards in India and their awardees' offices
  {
    ?award dbo:country dbr:India .
    ?award dbo:recipient ?person .
    ?person dbo:office ?office1 .
  }
  
  UNION
  
  # Find awards associated with Mantu Ghosh and their awardees' offices
  {
    ?award dbo:recipient dbr:Mantu_Ghosh .
    ?award dbo:recipient ?person .
    ?person dbo:office ?office2 .
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
987,63,test,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and entity in the region, that is a country, of Central European Time and birth place of the actor of All for Free.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandBirthPlace ?actorBirthPlace
WHERE {
  # Dado Pršo and Zabranjento Pušenje
  dbr:Dado_Pršo dbo:memberOf dbr:Zabranjeno_Pušenje .
  
  # Zabranjento Pušenje is an artist and musical artist
  dbr:Zabranjeno_Pušenje a dbo:MusicalArtist ;
                        a dbo:Artist .

  # Birthplace of the band
  OPTIONAL { dbr:Zabranjeno_Pušenje dbp:birthPlace ?bandBirthPlace . }

  # Central European Time countries
  VALUES ?country (dbr:Germany dbr:Austria dbr:Czech_Republic dbr:Slovakia dbr:Poland)

  # Entity in the region that is a country and related to Zabranjento Pušenje
  OPTIONAL {
    ?entity dbo:locationCountry ?country .
    ?entity dbo:memberOf dbr:Zabranjeno_Pušenje .
  }

  # Actor from ""All for Free""
  ?actor dbo:film dbr:All_for_Free .

  # Birthplace of the actor
  OPTIONAL { ?actor dbp:birthPlace ?actorBirthPlace . }
}",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
216,24,test,Give me the administration of the designer of Woolfe: The Red Hood Diaries and party of the awardee of Australian Defence Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?designerAdministration ?awardeeParty
WHERE {
  # Find the designer of ""Woolfe: The Red Hood Diaries""
  ?game dbo:title ""Woolfe: The Red Hood Diaries""@en .
  ?game dbo:creator ?designer .

  # Get the administration (country) of the designer
  ?designer dbo:nationality ?nationality .
  ?nationality dbo:countryName ?designerAdministration .

  OPTIONAL {
    # Find an awardee of the Australian Defence Medal
    ?awardee dbo:award ""Australian Defence Medal""@en .
    
    # Get the party affiliation of the awardee
    ?awardee dbo:memberOf ?party .
    ?party rdfs:label ?awardeeParty .
  }
}
```

This query does the following:
- Identifies the designer of ""Woolfe: The Red Hood Diaries"" and retrieves their nationality to determine their administration.
- Optionally finds an awardee of the Australian Defence Medal and retrieves their party affiliation.",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
124,71,test,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/ontology/battle> ?v8 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander
WHERE {
  ?war a dbo:MilitaryConflict ;
       a dbo:SocietalEvent .

  ?organisation dbo:nationality dbr:Australia ;
                a dbo:MilitaryUnit .

  ?battery dbr:'A_Battery,_Royal_Australian_Artillery' ;
           dbo:partOf ?organisation .

  ?person dbo:dateOfBirth ""1850-06-24""^^xsd:date ;
          dbo:militaryForce ?war .

  ?medalAwarded dbp:awardee ?person ;
                dbr:'British_South_Africa_Company_Medal' .

  ?commander dbo:commanderOf ?war .
}
```",9,19,10,3,3,3,3,71,0,0,9,0,0.0,0
935,20,test,"Give me the headquarter of the office of the native of Balochistan, Pakistan and death place of the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/location> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/property/office> ?v5 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?headquarter ?deathPlace
WHERE {
  # Find Syed Sohail Hussain Naqvi's native place and related office headquarter
  dbr:Syed_Sohail_Hussain_Naqvi dbo:nativePlace dbr:Balochistan .
  
  # Get the headquarters of an office in Balochistan
  ?office dbo:location dbr:Balochistan ;
          dbo:headquarters ?headquarter .

  OPTIONAL {
    # Find awards received by Syed Sohail Hussain Naqvi
    dbr:Syed_Sohail_Hussain_Naqvi dbo:awardReceived ?award .
    
    # Get the awardee of that award and their death place
    ?award dbo:awardee ?person .
    ?person dbo:deathPlace ?deathPlace .
  }
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
122,9,test,"Give me the band of the reference, that is a musical artist and an artist, to Gift of Gab and band member of the band of Gift of Gab (rapper).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Gift of Gab""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band WHERE {
  # Gift of Gab is a member of a band
  ?giftOfGab dbo:bandMember ?band .
  
  # Filter to ensure the subject is Gift of Gab (rapper)
  ?giftOfGab rdfs:label ""Gift of Gab""@en .

  # The band must be both a musical artist and an artist
  ?band a dbo:MusicalArtist ;
        a dbo:Artist .
}
```",4,6,5,2,2,2,2,9,0,0,3,0,0.0,0
987,66,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of Šako Polumenta and birth place of the actor of All for Free.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/timeZone> ?v5 . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country
WHERE {
  # Find the sports event associated with Canicosa de la Sierra's time zone
  ?timeZone a dbo:TimeZone ;
            dbo:sportEvent dbr:Canicosa_de_la_Sierra .

  # Find the region of this time zone
  ?region dbo:timeZone ?timeZone .

  # Find the country in this region
  ?country dbo:partOfRegion ?region .
  
  # Find the birthplace of Šako Polumenta (band)
  dbr:Šako_Polumenta dbo:birthPlace ?birthPlaceBand .

  # Find the actor from ""All for Free"" and their birthplace
  ?actor dbo:film dbr:All_for_Free ;
         dbo:birthPlace ?birthPlaceActor .

  # Ensure both birthplaces are the same as the country found
  FILTER (?birthPlaceBand = ?country && ?birthPlaceActor = ?country)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
976,68,test,"Give me the office of the person born as Mehmet Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v6 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v6 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/ontology/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?mehmetOffice ?kemalOffice ?mayorOffice
WHERE {
  # Mehmet Naci Bostancı's office
  dbr:Mehmet_Naci_Bostancı dbo:office ?mehmetOffice .
  
  # Kemal Kılıçdaroğlu's leadership role in an organization
  dbr:Kemal_Kılıçdaroğlu dbo:leaderOf ?organization .
  ?organization a dbo:Organization .

  # The mayor of Millet İttifakı
  OPTIONAL {
    ?mayor dbp:officeHolder ""Mayor""@en ;
           dbo:nationality dbr:Turkey ;
           dbo:memberOf dbr:Millet_İttifakı .
    ?mayorOffice dbo:office ?mayor .
    FILTER (EXISTS { ?mayor dbo:politicalParty ?party . ?party a dbo:PoliticalParty ; dbp:country dbr:Turkey } )
  }
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
508,19,test,"Give me the birthplace of the commander, that is a politician, in 1939–1940 Winter Offensive and birthplace of the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthplace1 ?birthplace2 WHERE {
  # Find the commander in the 1939–1940 Winter Offensive who is also a politician
  ?commander1 dbo:occupation dbr:Politician ;
             dbo:commandedMilitaryOperation dbr:Winter_Offensive_1939-40 .
  
  # Get the birthplace of this commander
  ?commander1 dbo:birthPlace ?birthplace1 .

  # Find Hu Yukun's military conflict that is both a military and societal event
  ?conflict dbo:type dbr:Military_conflict ;
           dbo:societalEvent true ;
           dbo:relatedTo dbr:Hu_Yukun .
  
  # Identify the Saudi commander in this conflict
  ?commander2 dbo:nationality dbr:Saudi_Arabia ;
              dbo:commandedMilitaryOperation ?conflict .

  # Get the birthplace of this Saudi commander
  ?commander2 dbo:birthPlace ?birthplace2 .
}
```",5,9,6,3,2,3,2,20,0,0,3,0,0.0,0
507,63,test,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and professional in the profession of Guy Ferland and spouse of the person born as the birth name of Anne V. Coates.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://dbpedia.org/ontology/director> ?result . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?directorName
WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Beryl_Reid ;
         dbo:director ?director .
  
  ?director foaf:name ?directorName .

  ?profession dbr:Guy_Ferland ;
             dbo:fieldOfActivity ?movie .

  ?spouse dbo:spouse ?person .
  ?person foaf:name ""Anne V. Coates""@en .

  FILTER EXISTS { ?movie a dbo:CreativeWork }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
645,67,test,"Give me the commander in Battle of Jarama and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Identify the native of Restoration (Spain) who is a president and politician
  ?president dbo:nationality dbr:Spain ;
             dbo:officeHeld ?office ;
             rdf:type dbo:Politician .

  # The office led by this person should be a government agency and organization
  ?office dbo:typeOfOrganization dbr:Government_Agency ;
          dbo:typeOfOrganization dbr:Organization .

  # Find the commander in the Battle of Jarama
  ?battle dbr:Battle_of_Jarama ;
         dbo:commander ?commander .

  # Identify the military force involved, which is an event, military conflict, and societal event
  ?militaryForce dbo:participatedIn ?battle ;
                 rdf:type dbo:MilitaryConflict ;
                 rdf:type dbo:SocietalEvent ;
                 rdf:type dbo:Event .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
507,60,test,Give me the spouse of the person born as the birth name of Anne V. Coates and professional in the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Find Anne V. Coates' birth name
  dbr:Anne_V._Coates dbo:birthName ?birthName .

  # Step 2: Find the profession of a person born on 1966-02-18
  ?person dbp:dateOfBirth ""1966-02-18""^^xsd:date ;
          dbo:profession ?profession .

  # Step 3: Find someone with Anne V. Coates' birth name and the identified profession
  ?individual dbo:birthName ?birthName ;
              dbo:profession ?profession .

  # Step 4: Get the spouse of this individual
  ?individual dbo:spouse ?spouse .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
645,66,test,"Give me the commander in the force of Carlos Asensio Cabanillas and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/ontology/battle> ?v6 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Carlos Asensio Cabanillas' military force
  ?force dbo:member dbr:Carlos_Asensio_Cabanillas .
  
  # Francisco Largo Caballero's event that is a military conflict and societal event
  ?event dbo:type dbr:Military_Conflict ;
         dbo:type dbr:Societal_Event ;
         dbo:participant dbr:Franco_Largo_Caballero .

  # Commander of the force who also leads an organization in Restoration, Spain
  ?force dbo:commander ?commander .
  
  ?organization dbo:head ?commander ;
                a dbo:Government_Agency ;
                dbo:location dbr:Restoration_(Spain) .

}
```",7,12,8,3,3,3,3,71,0,0,2,0,0.0,0
465,59,test,"Give me the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
    # Step 1: Identify Ercole II d'Este's parent
    dbr:Ercole_II_d%27Este,_Duke_of_Ferrara dbo:parent dbr:ParentOfErcoleIIdEste.

    # Step 2: Find the child of Ercole II d'Este's parent
    dbr:ParentOfErcoleIIdEste dbo:child ?childOfParentOfErcoleII.

    # Step 3: Determine this child's spouse who is royalty
    ?childOfParentOfErcoleII dbo:spouse ?royalSpouse .
    FILTER EXISTS { ?royalSpouse a dbo:Monarch } .

    # Step 4: Identify the parent of this royal spouse
    ?royalSpouse dbo:parent ?parentOfRoyalSpouse.

    # Step 5: Find Elizabeth of Austria's parent
    dbr:Elizabeth_of_Austria_(1526–1545) dbo:parent ?parentOfElizabeth.

    # Ensure the parent of the royal spouse is the same as Elizabeth's parent
    FILTER (?parentOfRoyalSpouse = ?parentOfElizabeth)

    # Step 6: Find the successor of the child identified in step 3
    ?childOfParentOfErcoleII dbo:successor ?successor .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
917,63,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of Kamehameha IV and child of the father of Keʻelikōlani.",SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Mayor of Hawaiian Kingdom and their royalty child
  ?mayor a dbo:Mayor ;
         dbo:residence dbr:Hawaiian_Kingdom .
  
  ?royaltyChild dbo:childOf ?mayor ;
                a dbo:Royalty .

  # Parent of the royalty child
  ?parent dbo:parentOf ?royaltyChild .

  # Kamehameha IV's father and his children
  ?kamehamehaIVFather a dbo:Person ;
                     dbo:child dbr:Kamehameha_IV .
  
  FILTER (?royaltyChild = ?kamehamehaIVChild)
  ?kamehamehaIVChild dbo:childOf ?kamehamehaIVFather .

  # Keʻelikōlani's father and his children
  ?keelikolanifather a dbo:Person ;
                    dbo:child dbr:Keʻelikōlani .
  
  FILTER (?royaltyChild = ?keelikolanichild)
  ?keelikolanichild dbo:childOf ?keelikolanifather .
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
917,69,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of the child, that is a royalty, of Kamehameha III and child of the father of Keʻelikōlani.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Mayor of Hawaiian Kingdom's child who is royalty
  ?mayorChild dbo:childOf dbr:Mayor_of_the_Hawaiian_Kingdom ;
              a dbo:RoyalPerson .

  # Kamehameha III's father's child who is royalty
  ?kamehamehaIIIFather dbo:childOf ?kamehamehaII .
  ?kamehamehaIIIChild dbo:childOf ?kamehamehaIIIFather ;
                     a dbo:RoyalPerson .

  # Keʻelikōlani's father
  ?keelikoLaneFather dbo:childOf ?someParent .

  # The child that fits all criteria
  ?targetChild dbo:childOf ?mayorChild ;
               dbo:childOf ?kamehamehaIIIChild ;
               dbo:childOf ?keelikoLaneFather .

  # Find the parent of this target child
  ?parent dbo:child ?targetChild .
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
573,64,test,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/governor> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Find John Quincy Adams' work and its author
  ?work dbo:author ?author .
  FILTER (str(?work) = ""John_Quincy_Adams"")

  # Ensure the author is a politician and office holder
  ?author dbo:occupation dbr:Politician ;
          dbo:officeHolder ?office .

  # Check decedent at Quincy, Massachusetts
  ?author dbp:placeOfDeath dbr:Quincy,_Massachusetts .

  # Find Charlie Baker's real name and its administration region
  dbr:Charlie_Baker_(Australian_footballer) foaf:name ?realName .
  ?adminRegion dbo:administrativeRegion ?realName .

  # Ensure the author is a decedent at this administration region
  ?author dbp:placeOfDeath ?adminRegion .

  # Get the parent of the author
  ?parent dbo:child ?author .
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
645,59,test,"Give me the commander in the force of the commander in Siege of Madrid and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?militaryForce ?president
WHERE {
  # Siege of Madrid as a military conflict
  dbr:Siege_of_Madrid dbo:militaryConflictOf ?conflictEvent .
  
  # Commander in charge during the Siege of Madrid
  ?conflictEvent dbo:commander ?commander .
  
  # Military force associated with the commander
  ?commander dbo:commanderOf ?militaryForce .

  # Societal event linked to the military conflict
  ?conflictEvent a dbo:SocietalEvent .

  # President and politician from Restoration (Spain)
  ?president dbo:nationality dbr:Spain ;
             dbo:positionHeld dbr:President_of_Spain ;
             dbo:politicalParty ?party .
  
  # Filter for the Restoration period
  FILTER (?president dbo:termStart >= ""1874-11-29""^^xsd:date && 
          ?president dbo:termEnd <= ""1931-04-14""^^xsd:date)

  # Ensure the president is native to Spain
  ?president dbo:nativeCountry dbr:Spain .
}
```",6,11,7,3,2,3,3,71,0,0,53,0,0.0,0
839,58,test,"Give me the band of the band, that is a musical artist, of the professional in Musician and band of the member of Böhse Onkelz and band of Kevin Russell (musician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v5 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandOfBand
WHERE {
  # Find Böhse Onkelz band members
  ?boMember dbo:memberOfBand <http://dbpedia.org/resource/Böhse_Onkelz> .
  
  # Find Kevin Russell's band
  ?kevinRussell dbp:musicalArtist <http://dbpedia.org/resource/Kevin_Russell_(musician)> ;
                dbo:band ?kevinsBand .

  # Find the band of the Böhse Onkelz member that is a musical artist
  ?boMember dbo:band ?bandOfBoMember .
  
  # Ensure the band is also a musical artist
  ?bandOfBoMember dbp:musicalArtist ?musicalArtist .

  # Find the band of this band (the band of the band)
  ?bandOfBand dbo:band ?bandOfBoMember .

  FILTER(?kevinsBand != ?bandOfBand) # Ensure it's not Kevin Russell's own band
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
965,57,test,"Give me the spouse of Prince Louis of Battenberg and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v4 <http://dbpedia.org/property/father> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName
WHERE {
  # Prince Louis of Battenberg and his spouse
  dbr:Prince_Louis_of_Battenberg dbo:spouse ?spouse .
  
  # Spouse is a parent of a child that is royalty
  ?spouse dbo:child ?royaltyChild .
  ?royaltyChild rdf:type dbo:Monarch .

  # Spouse is born as a politician on 1854-05-24
  ?spouse dbp:dateOfBirth ""1854-05-24""^^xsd:date ;
          rdf:type dbo:Politician .

  # Spouse is a parent of Prince George of Battenberg
  ?spouse dbo:child dbr:Prince_George_of_Battenberg .
  
  # Get the spouse's name
  ?spouse rdfs:label ?spouseName .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
445,64,test,"Give me the death place of Patrick Moore and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?residenceCountry ?award 
WHERE {
  # Patrick Moore's death place
  dbr:Patrick_Moore dbo:deathPlace ?deathPlace .

  # Athlete from Great Britain and their residence country
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:residence ?residence .
  ?residence dbo:countryName ?residenceCountry .

  # Commander in Battle of Saint-Mihiel and their award
  ?battle dbo:name ""Battle of Saint-Mihiel"" ;
          dbo:commander ?commander .
  ?commander dbo:award ?award .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
573,60,test,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/property/governor> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedentAtAdministration
WHERE {
  # Find Charlie Baker (Australian footballer) and his real name
  dbr:Charlie_Baker_(Australian_footballer) dbo:realName ?charlieBakerRealName .
  
  # Find the region associated with this real name
  ?region dbo:decedentAtAdministration ?decedentAtAdministration .
  ?region dbo:name ?charlieBakerRealName .

  # Find an author who is a politician and office holder
  ?author dbo:occupation dbr:Politician ;
          dbo:officeHolder ?officeHolder .
  
  # Link the author to John Quincy Adams' work
  ?work dbo:author ?author ;
        dbo:wikiPageRedirects dbr:John_Quincy_Adams .

}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
926,61,test,"Give me the successor of the child of the spouse of Şermi Kadın and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successor
WHERE {
  # Beyhan Sultan as a daughter of Mustafa III
  dbr:Beyhan_Sultan dbo:parent dbr:Mustafa_III .

  # Beyhan Sultan's parent who is royalty
  ?royalParent dbo:child dbr:Beyhan_Sultan .
  ?royalParent rdf:type dbo:Monarch .

  # Child of Beyhan Sultan's royal parent
  ?childOfRoyalParent dbo:parent ?royalParent .

  # Şermi Kadın and her spouse
  dbr:Şermi_Kadın dbo:spouse ?spouseOfSermiKadin .

  # Child of Şermi Kadın's spouse
  ?childOfSpouse dbo:parent ?spouseOfSermiKadin .

  # Successor of the child (intersection of both children)
  ?successor dbo:predecessor ?child .
  ?child rdf:type dbo:Monarch .
  FILTER (?child = ?childOfRoyalParent || ?child = ?childOfSpouse)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
582,60,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?result <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?teamNickname ?residence
WHERE {
  # Find the team associated with Hajime Moriyasu and its nickname
  ?hajime dbo:manager dbr:Hajime_Moriyasu .
  ?hajime dbo:teamName ?team .
  ?team dbo:nickname ?teamNickname .

  # Find Hirotaka Sugawara's residence
  ?hirotaka a dbo:Scientist ;
            foaf:name ""Hirotaka Sugawara""^^xsd:string .
  ?hirotaka dbo:residenceLocation ?residence .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
459,27,test,"Give me the governor of the administration, that is a politician, of Brad Henry and governor of Oklahoma and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?governorOfHenry ?stittBirthName
WHERE {
  # Brad Henry's governorship
  dbr:Brad_Henry dbo:governmentRole ?role .
  ?role dbo:officeHolder ?governorOfHenry .

  # Kevin Stitt as a politician and governor of Oklahoma
  dbr:Kevin_Stitt dbo:birthName ?stittBirthName ;
                  rdf:type dbo:Politician ;
                  dbo:governmentRole ?stittRole .
  ?stittRole dbo:officeHolder dbr:Kevin_Stitt ;
             dbo:office dbr:Governor_of_Oklahoma .

}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
965,56,test,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of Louise Mountbatten and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse
WHERE {
  # Princess Victoria of Hesse and by Rhine
  dbr:Princess_Victoria_of_Hesse_and_by_Rhine dbo:spouse ?firstSpouse .

  # First spouse's spouse (which is Princess Victoria herself)
  ?firstSpouse dbo:spouse ?secondSpouse .
  
  # Parent of Louise Mountbatten
  ?secondSpouse dbo:child dbr:Louise_Mountbatten .

  # Person born as a noble with the birth name George Mountbatten, 2nd Marquess of Milford Haven
  ?secondSpouse dbo:birthName ""George Mountbatten"" .
  ?secondSpouse dbo:title dbr:2nd_Marquess_of_Milford_Haven .

  # Return the spouse of the spouse (which is Princess Victoria)
  BIND(?secondSpouse AS ?spouseOfSpouse)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
773,66,test,"Give me the parent of the successor of Charles the Bald and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of Charles the Fat.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v6 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfSuccessor ?parentOfChild ?spouseOfFatherOfCharlesTheFat
WHERE {
  # Successor of Charles the Bald
  ?successor dbo:succeededBy dbr:Charles_the_Bald .
  
  # Parent of the successor
  ?successor dbo:child ?parentOfSuccessor .

  # Father of Carloman of Bavaria who is an office holder and royalty
  ?father dbo:officeHolder true ;
          a dbo:Monarch ;
          dbo:child dbr:Carloman_of_Bavaria .
  
  # Child of this father that is royalty
  ?child dbo:parent ?father ;
         a dbo:Monarch .

  # Parent of this child
  ?child dbo:parent ?parentOfChild .

  # Father of Charles the Fat
  ?fatherOfCharlesTheFat dbo:child dbr:Charles_the_Fat .
  
  # Spouse of the father of Charles the Fat
  ?spouseOfFatherOfCharlesTheFat dbo:spouseOrPartner ?fatherOfCharlesTheFat .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
216,69,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v7 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://dbpedia.org/ontology/coach> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v3 <http://dbpedia.org/ontology/team> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?team
WHERE {
  ?person a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerManager ;
          dbo:birthDate ?birthDate .

  ?person dbo:coachOf dbr:Bosnia_and_Herzegovina_national_under-18_football_team .

  ?organization a dbo:Organization, dbo:SoccerClub .
  ?organization dbo:reference dbr:Croatia_U21 .

  ?playerInCoach dbo:playerInCoach ?organization .
  ?playerInCoach a dbo:SoccerPlayer ;
                 a dbo:SportsManager ;
                 a dbo:SoccerManager .

  ?person dbo:deathDate ?deathDateVezhinov .
  FILTER (?birthDate < ?deathDateVezhinov)

  ?team dbo:member ?person .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
465,62,test,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Renée of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Parent of Elizabeth of Austria
  ?parent dbo:child dbr:Elizabeth_of_Austria_(1526–1545) .
  
  # Successor of Renée of France
  ?successor dbo:succeededBy dbr:Renée_of_France .

  # Child of the parent of Ercole II d'Este
  ?parent2 dbo:child dbr:Ercole_II_d%27Este,_Duke_of_Ferrara .
  ?child dbo:parent ?parent2 .

  # The child we are interested in is royalty and connected through these relationships
  ?royalChild dbo:parent ?parent ;
              a dbo:RoyalFamilyMember ;
              dbo:succeededBy ?successor ;
              dbo:succeededBy ?child .

  # Find the spouse of this royal child
  ?royalChild dbo:spouse ?spouse .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
216,64,test,"Give me the player in Mario Ivanković and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player ?team ?birthDate ?deathDate ?coachOrganization
WHERE {
  # Mario Ivanković and his team
  dbr:Mario_Ivanković dbo:memberOfTeam ?team .

  # Person with multiple roles
  ?person a dbo:SoccerPlayer ;
          dbo:sportManager ?managerRole ;
          dbo:birthDate ?birthDate .
  
  FILTER EXISTS { ?person dbo:occupation dbp:SoccerManager }
  FILTER EXISTS { ?person dbo:occupation dbp:SportsManager }

  # Connection to Pavel Vezhinov's death
  dbr:Pavel_Vezhinov dbo:dateOfDeath ?deathDate .

  # Coach of an organization that is a soccer club related to Croatia U21
  ?coachOrganization a dbo:SportsClub ;
                    dbo:coach ?person .
  
  FILTER EXISTS { ?coachOrganization dbp:name ""Croatia national under-21 football team"" }
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
933,70,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of the professional in Musician and band of the band of Alan Warner (musician).","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/property/birthName> ?v6 . ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandName ?birthName ?professionalRole
WHERE {
  # Step 1: Identify the person born on 1947-04-21 who is a musical artist.
  ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
          rdf:type dbo:MusicalArtist .

  # Step 2: Find the band associated with this person that is both a group and an organization.
  ?band dbo:member ?person ;
        rdf:type dbo:Band, dbo:Organization, dbo:Group .
  
  # Get the name of the band
  ?band rdfs:label ?bandName .

  # Step 3: Retrieve Alan Warner's birth name and professional role in music.
  dbr:Alan_Warner_(musician) dbo:birthName ?birthName ;
                             dbo:profession ?professionalRole .
  
  # Ensure the person is associated with Alan Warner's band
  ?band dbo:member dbr:Alan_Warner_(musician) .

}
ORDER BY ?bandName",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
573,68,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of the author, that is a politician and an office holder, of Exchequer Standards.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v7 . ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?personDecedentAtResidence ?personDecedentAtAdministration
WHERE {
  # Charlie Baker (Australian footballer)
  dbr:Charlie_Baker_(Australian_footballer) dbo:realName ?charlieBakerRealName .

  # Parent of the author who is a politician and office holder of Exchequer Standards
  ?author dbo:profession dbp:Politician ;
          dbo:officeHolderOf ?exchequerStandards .
  ?parent dbo:child ?author .
  
  # American professional in Politician
  ?americanProfessional dbo:nationality dbr:United_States_of_America ;
                       dbo:profession dbp:Politician .

  # Settlement where the American professional resides
  ?settlement a dbo:Settlement ;
              dbo:resident ?americanProfessional .
  ?personDecedentAtResidence dbo:decedentAt ?settlement .

  # Region associated with the administration of the person decedent
  ?region a dbo:Region ;
          dbo:administrationOf ?charlieBakerRealName .
  ?personDecedentAtAdministration dbo:decedentAt ?region .

}",8,13,9,3,3,3,3,71,0,0,2,0,0.0,0
645,68,test,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and commander in the force of the commander in Siege of Madrid.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
  # Identify Restoration (Spain) as an event, military conflict, and societal event
  dbr:Restoration_(Spain) a dbo:Event ;
    dbo:relatedEvent ?event1 .
  
  FILTER (?event1 IN (dbo:MilitaryConflict, dbo:SocietalEvent))
  
  # Find the native who is both a president and politician of Restoration (Spain)
  ?native dbo:nationality dbr:Spain ;
          dbo:officeHolderOf ?restorationOffice ;
          rdf:type dbo:President ;
          rdf:type dbo:Politician .
  
  ?restorationOffice dbo:relatedEvent dbr:Restoration_(Spain) .

  # Determine the leader of an office that is both a government agency and organization, associated with Camilo Menéndez Tolosa
  ?office dbo:leader ?camiloMenendezTolosa ;
          rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .
  
  dbr:Camilo_Menéndez_Tolosa dbo:leaderOf ?office .

  # Locate the military force involved in Siege of Madrid
  ?siegeEvent a dbo:MilitaryConflict ;
              dbo:participatedInMilitaryForce ?militaryForce ;
              rdfs:label ""Siege of Madrid""@en .
  
  # Commander in the military force during Siege of Madrid
  ?commander dbo:commanded ?militaryForce ;
             dbo:commandedDuring ?siegeEvent .

  # Ensure commander is related to Camilo Menéndez Tolosa
  ?commander dbo:leaderOf ?office .
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
465,70,test,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v7 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successor
WHERE {
  # Alfonso I d'Este's child and spouse who is royalty
  ?childAlfonso dbo:parent dbr:Alfonso_I_d%27Este ;
               dbo:spouse ?spouseAlfonso .
  FILTER (dbo:royalty ?spouseAlfonso) .
  
  # Successor of the spouse
  ?successorAlfonso dbo:predecessor ?spouseAlfonso .

  # Elizabeth of Austria's parent and child who is royalty
  ?parentElizabeth dbo:child dbr:Elizabeth_of_Austria_(1526%E2%80%931545) .
  ?childElizabeth dbo:parent ?parentElizabeth ;
                  dbo:royalty true .
  
  # Successor of the child
  ?successorElizabeth dbo:predecessor ?childElizabeth .

  # Charles Orlando's parent and child who is royalty
  ?parentCharlesOrlando dbo:child dbr:Charles_Orlando,_Dauphin_of_France ;
                        dbo:royalty true .
  
  # Successor of the child
  ?successorCharlesOrlando dbo:predecessor ?parentCharlesOrlando .

  # Find common successor
  FILTER (?successorAlfonso = ?successorElizabeth && ?successorAlfonso = ?successorCharlesOrlando)
}",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
965,58,test,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Prince Louis of Battenberg's child who is royalty
  ?child dbo:spouse dbr:Prince_Louis_of_Battenberg ;
         a dbo:RoyalFamilyMember .

  # Parent of the royal child
  ?parent dbo:child ?child .

  # George Mountbatten, 2nd Marquess of Milford Haven by birth name and noble status
  ?george dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven ;
          dbo:birthName ?birthName ;
          a dbo:Noble .

  # George Mountbatten is the spouse of Prince Louis of Battenberg
  ?george dbo:spouse dbr:Prince_Louis_of_Battenberg .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
47,59,test,"Give me the office of the awardee of the award, that is an award, of Mantu Ghosh and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> ?v3 . ?v2 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeOffice ?commanderAdminOffice
WHERE {
  # Find Mantu Ghosh's award and the office of its awardee
  ?award dbo:recipient dbr:Mantu_Ghosh .
  ?award dbo:office ?awardeeOffice .

  # Find the commander in Operation Green Hunt who is a politician
  ?commander dbo:occupation dbr:Politician ;
             dbo:participatedInOperation dbr:Operation_Green_Hunt .
  
  # Find the office of the administration of this commander
  ?commander dbo:office ?commanderAdminOffice .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
791,58,test,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of Taira no Tokuko and predecessor of the child of Emperor Takakura.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfChild
WHERE {
  # Emperor Antoku's child (royalty)
  ?child dbo:parent dbr:Emperor_Antoku .
  FILTER EXISTS { ?child a dbo:Monarch . }
  
  # Father of the child is royalty and an office holder
  ?fatherOfChild dbo:spouse ?mother .
  ?fatherOfChild dbo:parent ?child .
  FILTER EXISTS { ?fatherOfChild a dbo:Monarch . }
  FILTER EXISTS { ?officeHolderPosition dbo:positionHolder ?fatherOfChild . }

  # Father is predecessor of child of Emperor Takakura
  ?takakurasChild dbo:parent dbr:Emperor_Takakura .
  ?predecessor dbo:successor ?takakurasChild .
  FILTER (?fatherOfChild = ?predecessor)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,8,test,Give me the artistic movement of Ella Cheever Thayer and claim to fame of the person born as Emily Katherine Jacques.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ella_Cheever_Thayer> <http://dbpedia.org/ontology/movement> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Emily Katherine Jacques""@en . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artisticMovement ?claimToFame
WHERE {
  # Part 1: Artistic Movement of Ella Cheever Thayer
  ?ella a dbo:Artist ;
        foaf:name ""Ella Cheever Thayer""@en .
  OPTIONAL { 
    ?ella dbo:artisticMovement ?artisticMovement .
  }

  # Part 2: Claim to Fame of Emily Katherine Jacques (Coco Chanel)
  ?emily a dbo:Person ;
         foaf:name ""Emily Katherine Jacques""@en ;
         dbp:nickName ""Coco Chanel""@en .
  OPTIONAL {
    ?emily dbo:famousFor ?claimToFame .
  }
}
```

### Explanation

- **Prefixes**: We use `dbo` for DBpedia ontology and `dbp` for properties.
- **SELECT Clause**: Retrieves the artistic movement of Ella Cheever Thayer and the claim to fame of Emily Katherine Jacques.
- **WHERE Clause**:
  - For Ella Cheever Thayer, we match her as an artist and optionally retrieve her artistic movement.
  - For Emily Katherine Jacques (Coco Chanel), we identify her by name and nickname, then optionally fetch what she is famous for.

This query should provide the desired information when executed against a DBpedia dataset.",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
507,61,test,"Give me the professional in the profession of the person born on 1966-02-18 and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?director
WHERE {
  # Find the person born on 1966-02-18 and their profession
  ?person1 dbo:birthday ""1966-02-18""^^xsd:date .
  ?person1 dbo:profession ?profession .

  # Find movies directed by this person
  ?movie dbo:director ?person1 ;
         a dbo:Film ;
         dbo:starring ?person2 .

  # Ensure the movie is also considered a work
  ?movie rdf:type dbo:Work .

  # Find the person born on 1919-06-17
  ?person2 dbo:birthday ""1919-06-17""^^xsd:date .
  
  # Return the director of such movies
  BIND(?person1 AS ?director)
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
365,19,test,"Give me the spouse of the native, that is a politician, of the reference to Полтавская губерния and person born as the birth name of Symon Petliura.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  ?person dbo:nativePlace dbr:Полтавская_губерния .
  ?person dbo:occupation dbr:Politician .
  ?person foaf:name ""Symon Petliura""@en .
  ?person dbo:spouse ?spouse .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
47,66,test,"Give me the office of the awardee of Banga Bhushan and office of the awardee of the entity, that is an award, in India and office of the administration of Jagdeep Dhankhar.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeBangaBhushan ?officeOtherAward ?officeJagdeepDhankhar
WHERE {
  # Office of the awardee of Banga Bhushan
  ?bangaBhushanAwardee dbo:award dbr:Banga_Bhushan.
  ?bangaBhushanAwardee dbo:office ?officeBangaBhushan.

  # Office of the awardee of any award in India
  ?otherAwardAwardee dbo:award ?otherAward.
  ?otherAward dbo:country dbr:India.
  ?otherAwardAwardee dbo:office ?officeOtherAward.

  # Office of Jagdeep Dhankhar
  dbr:Jagdeep_Dhankhar dbo:office ?officeJagdeepDhankhar.
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
987,59,test,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandBirthPlace ?actorBirthPlace
WHERE {
  # Find the band associated with Dado Prljaca
  ?band a dbo:Band ;
        dbo:artist Dado_Prljaca ;
        a dbo:MusicalArtist ;
        dbo:birthPlace ?bandBirthPlace .

  # Find the film/show featuring Emir Hadžihafizbegović and an actor in it
  ?film a dbo:Film ;
        dbo:starringEmir_Hadžihafizbegović true .
  
  ?actor dbo:starring ?film ;
         dbo:birthPlace ?actorBirthPlace .
}
```",6,10,7,3,2,3,3,71,0,0,4,0,0.0,0
582,64,test,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and player in Kazuaki Nagasawa.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence ?teamNickname ?player
WHERE {
  # Hirotaka Sugawara's residence
  OPTIONAL {
    dbr:Hirotaka_Sugawara dbo:residence ?residence .
  }

  # Hajime Moriyasu's team nickname
  OPTIONAL {
    dbr:Hajime_Moriyasu dbo:team ?team .
    ?team dbo:nickname ?teamNickname .
  }

  # Kazuaki Nagasawa as a player
  OPTIONAL {
    dbr:Kazuaki_Nagasawa dbo:playerInTeam ?player .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
459,24,test,"Give me the governor of the administration, that is a politician, of Brad Henry and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/governor> ?result . ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor WHERE {
  # Find Brad Henry's administration
  ?administration dbo:governmentHead dbr:Brad_Henry .
  
  # Find Kevin Stitt's birth name
  dbr:Kevin_Stitt dbo:birthName ?birthName .

  # Identify the governor of the administration who is a politician and matches the birth name
  ?governor dbo:governmentHead ?administration ;
           rdf:type dbo:Politician ;
           foaf:name ?name .
  
  FILTER (?name = ?birthName)
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
645,70,test,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v1 <http://dbpedia.org/property/office> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  ?militaryForce a dbo:MilitaryConflict ;
                 a dbo:SocietalEvent ;
                 dbo:event ?event .

  ?native a dbo:President ;
          a dbo:Politician ;
          dbo:nationality dbr:Spain ;
          dbo:leaderOf ?office ;
          dbo:commanderIn ?militaryForce .

  ?office a dbo:GovernmentAgency ;
          a dbo:Organization .

  ?militaryForce dbo:commander ?commander .
  ?commander rdfs:label ""Carlos Asensio Cabanillas""@en .

  FILTER (regex(?native, ""Restoration"", ""i""))
}
```",8,15,9,3,3,3,3,71,0,0,2,0,0.0,0
987,70,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/timeZone> ?v5 . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country
WHERE {
  # Time zone and sports event in Canicosa de la Sierra
  ?sportsEvent dbo:location dbr:Canicosa_de_la_Sierra .
  ?timeZone dbo:sportingEvent ?sportsEvent .
  
  # Country in the region of the time zone
  ?country dbo:region ?timeZoneRegion .
  ?timeZone dbo:region ?timeZoneRegion .

  # Birthplace of actor from a film with Emir Hadžihafizbegović
  ?film dbp:starring dbr:Emir_Hadžihafizbegović .
  ?actor dbo:birthPlace ?country .
  ?actor dbo:actedIn ?film .

  # Birthplace of band associated with Šako Polumenta
  ?band a dbo:Band ; 
        dbo:member dbr:Šako_Polumenta ;
        dbo:birthPlace ?country .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
917,58,test,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and child of the father of Keʻelikōlani and parent of Albert Kamehameha.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Step 1: Find the father of a child of Kamehameha III
  ?childOfKamehamehaIII dbo:parent dbr:Kamehameha_III .
  
  # Step 2: Identify the father of this child
  ?fatherOfChild dbo:child ?childOfKamehamehaIII .

  # Step 3: Find the child of this father who is royalty and also a child of Keʻelikōlani's father
  ?royalChild dbo:parent ?fatherOfChild .
  ?royalChild rdf:type dbo:Monarch .  # Assuming royalty means being a monarch

  # Step 4: Ensure this person is a child of Keʻelikōlani's father
  ?childOfKeelikolaniFather dbo:parent ?keelikolanisFather .
  ?royalChild dbo:parent ?childOfKeelikolaniFather .

  # Step 5: Ensure this person is a parent of Albert Kamehameha
  ?royalChild dbo:child dbr:Albert_Kamehameha .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
36,28,test,"Give me the actor of the claim to fame, that is a film, of Lepacious Bose and person born in the birth year of Deanne Bray and person born as the birth name of Ayo Makun.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthYear> ?v3 . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v1 . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v3 . ?v1 <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName WHERE {
  # Find Lepa Bose's claim-to-fame film
  dbr:Lepa_Bose dbo:claimToFame ?film .
  
  # Find actors of the film
  ?film dbo:starring ?actor .

  # Get Deanne Bray's birth year
  dbr:Deanne_Bray dbp:birthdayYear ?deanneBirthYear .

  # Match actor's birth year with Deanne Bray's birth year
  ?actor dbp:birthdayYear ?actorBirthYear .
  FILTER (?actorBirthYear = ?deanneBirthYear)

  # Ensure the actor's birth name is Ayo Makun
  ?actor rdfs:label ""Ayo Makun""@en .

  # Return the actor's name
  ?actor rdfs:label ?actorName .
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
606,20,test,"Give me the birthplace of the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers and figure known as the nickname of the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> ?v4 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/property/nickname> ""Barb City""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus ?birthPlace WHERE {
  ?alumnus dbo:almaMater dbr:University_of_Pennsylvania .
  ?alumnus dbo:birthPlace ?birthPlace .

  OPTIONAL { 
    ?pittsburgh dbo:wikiPageRedirects dbr:Pittsburgh,_Pennsylvania .
    ?alumnus dbo:residence ?pittsburgh .
  }
}
```

This query does the following:
- Selects alumni of the University of Pennsylvania.
- Retrieves their birthplace.
- Optionally checks if they have a residence connection to Pittsburgh, Pennsylvania.",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
47,67,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of the award, that is an award, of Mantu Ghosh and office of Suvendu Adhikari.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeOfAwardee
WHERE {
  # Office of awardee for awards given in India
  {
    ?award dbo:country dbr:India .
    ?award dbo:recipient ?person .
    ?person dbo:office ?officeOfAwardee .
  }
  
  UNION
  
  # Office of the awardee of Mantu Ghosh's award
  {
    ?award dbo:recipient dbr:Mantu_Ghosh .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:office ?officeOfAwardee .
  }

  UNION

  # Office of Suvendu Adhikari
  {
    dbr:Suvendu_Adhikari dbo:office ?officeOfAwardee .
  }
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
573,65,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at the administration, that is a region, of Charlie Baker and parent of the author, that is a politician and an office holder, of Exchequer Standards.","SELECT ?result WHERE { <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v4 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?personDecedent
WHERE {
  ?professional a dbo:Politician ;
                dbp:nationality ""American""@en .
  
  ?residence a dbo:Settlement ;
             dbo:resident ?professional .

  ?administration a dbo:Region ;
                  dbo:administrator ?charlieBaker .

  ?charlieBaker dbr:Charlie_Baker .

  ?personDecedent dbo:decedentAtResidence ?residence .
  
  ?author dbp:parent ?personDecedent ;
          a dbo:Politician, dbo:OfficeHolder ;
          dbo:office ""Exchequer Standards""@en .

}
```",7,12,8,3,3,3,3,71,0,0,2,0,0.0,0
965,61,test,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  ?politician dbo:birthday ""1854-05-24""^^xsd:date ;
              a dbo:Politician ;
              dbo:child ?royalChild .

  ?royalChild a dbo:Royalty ;
              dbp:birthName ""George Mountbatten, 2nd Marquess of Milford Haven"" ;
              dbo:parent ?parent .

  ?noble dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven ;
         a dbo:Noble .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
465,63,test,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor
WHERE {
  # Anne of Brittany's child who is royalty
  ?anneChild dbo:parent dbr:Anne_of_Brittany ;
            a dbo:Monarch .

  # Successor of Anne of Brittany's royal child
  ?anneSuccessor dbo:predecessorOrRegent ?anneChild .

  # Ercole II d'Este's parent (his father)
  ?ercoleFather dbo:child dbr:Ercole_II_d%27Este_Duke_of_Ferrara .

  # Successor of the child of Ercole II d'Este's parent
  ?ercoleSuccessor dbo:predecessorOrRegent ?ercoleChild .
  ?ercoleChild dbo:parent ?ercoleFather .

  # Ferdinand I's child who is royalty
  ?ferdinandChild dbo:child dbr:Ferdinand_I,_Holy_Roman_Emperor ;
                  a dbo:Monarch .

  # Spouse of Ferdinand I's royal child
  ?spouse dbp:spouse ?ferdinandChild .

  # Find the common successor
  FILTER (?anneSuccessor = ?ercoleSuccessor)
  BIND(?anneSuccessor AS ?successor)

  OPTIONAL {
    ?successor dbp:spouse ?spouse .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
791,71,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v2 <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouseOfSpouse
WHERE {
  # Emperor Takakura and his spouse's spouse who is royalty
  ?emperorTakakura dbo:spouse ?spouse1 .
  ?spouse1 dbo:spouse ?spouse2 .
  FILTER (dbo:RoyalFamilyMember(?spouse2)) .

  # Predecessor of the child of the child of Emperor Go-Shirakawa who is an office holder and royalty
  ?emperorGoShirakawa dbo:child ?child1 .
  ?child1 dbo:child ?child2 .
  FILTER (dbo:OfficeHolder(?child2) && dbo:RoyalFamilyMember(?child2)) .
  ?predecessor dbo:predecessorOf ?child2 .

  # Father of the child who is royalty, whose father is a royalty and office holder, of Emperor Antoku
  ?emperorAntoku dbo:father ?father1 .
  FILTER (dbo:RoyalFamilyMember(?father1) && dbo:OfficeHolder(?father1)) .
  ?father1 dbo:child ?child3 .
  FILTER (dbo:RoyalFamilyMember(?child3)) .

  # Linking the conditions
  ?spouse2 = ?predecessor .
  ?predecessor = ?father1 .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
98,25,test,Give me the birth place of the person born as Paolo Elito M. Ballesteros IV and entity in Philippines and region of the time zone of Lopez Jaena.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?countryRegion ?timezone
WHERE {
  # Find the birthplace of Paolo Elito M. Ballesteros IV
  ?person dbo:name ""Paolo Elito M. Ballesteros IV""@en .
  ?person dbo:birthPlace ?birthPlace .

  # Ensure the person is associated with the Philippines
  ?person dbo:country dbp:Philippines .

  # Find the region of the time zone for Lopez Jaena
  ?location rdfs:label ""Lopez, Misamis Occidental""@en .
  ?location geo:timezone ?timezone .
  
  # Get the region associated with this timezone
  ?timezone dbo:region ?countryRegion .
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
839,67,test,"Give me the band of the member of the band, that is a band and a group, of Peter Schorowsky and band of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/ontology/bandMember> ?v6 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfPeter ?bandOfKevin ?bandOfBand
WHERE {
  # Peter Schorowsky's band
  ?person1 dbr:Peter_Schorowsky .
  ?person1 dbo:member ?bandOfPeter .

  # Kevin Russell's band
  ?person2 dbr:Kevin_Russell_(musician) .
  ?person2 dbo:member ?bandOfKevin .

  # Ensure the bands are both ""bands"" and ""groups""
  ?bandOfPeter a dbo:Band ;
               a dbo:MusicalGroup .
  ?bandOfKevin a dbo:Band ;
               a dbo:MusicalGroup .

  # Find a band of the band that is a musical artist
  ?bandOfBand dbo:member ?bandOfKevin .
  ?bandOfBand a dbo:Band ;
              a dbo:MusicalArtist .

  FILTER(?bandOfPeter != ?bandOfKevin)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
826,64,test,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?spouse ?predecessor
WHERE {
  # Louis II, Grand Duke of Hesse and his successor
  dbr:Louis_II,_Grand_Duke_of_Hesse dbo:successor ?successor .

  # Anna Magdalena Appel's father
  dbr:Anna_Magdalena_Appel dbo:father ?father .
  
  # Spouse of the child of Anna Magdalena Appel's father
  ?child dbo:parent ?father ;
         dbo:spouse ?spouse .

  # Louis IV, Grand Duke of Hesse and his child's parent
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:child ?child2 .
  ?parent dbo:child ?child2 .
  
  # Predecessor of the parent of Louis IV's child
  ?predecessor dbo:successor ?parent .

  # Ensure all variables are connected to find a common entity
  FILTER (?successor = ?spouse && ?spouse = ?predecessor)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
216,58,test,"Give me the player in Igor Bišćan and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player ?team
WHERE {
  # Igor Bišćan and his team
  dbr:Igor_Bišćan dbo:playsFor ?team .

  # Person with multiple roles born in the same team as Igor Bišćan
  ?person dbo:birthPlace ?team .
  ?person rdf:type dbo:SoccerPlayer .
  ?person rdf:type dbo:SportsManager .
  ?person rdf:type dbo:SoccerCoach .

  # Connection to Pavel Vezhinov's death
  ?deathEvent dbo:agent ?person ;
              dbo:subject dbr:Pavel_Vezhinov .

  # Person is a coach of Bosnia and Herzegovina national under-18 football team
  ?person dbo:coachOf dbr:Bosnia_and_Herzegovina_national_under-18_football_team .
  
  # Ensure the person is also a soccer player, sports manager, and soccer manager
  ?person rdf:type dbo:SoccerPlayer ;
          rdf:type dbo:SportsManager ;
          rdf:type dbo:SoccerCoach .

}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
773,56,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of Charles the Fat and parent of Carloman of Bavaria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfChild
WHERE {
  # Carloman of Bavaria's father who is an office holder and royalty
  ?father a dbo:Monarch ;
          dbo:spouse ?spouse ;
          dbo:child ?carloman .
  
  ?carloman rdfs:label ""Carloman of Bavaria""@en .

  ?father dbo:officeHolder true ;
          rdf:type dbo:Monarch .

  # Spouse of Charles the Fat's father
  ?charlesFather a dbo:Monarch ;
                 dbo:child ?charlesFat .
  
  ?charlesFat rdfs:label ""Charles the Fat""@en .

  ?spouse dbp:spouseOf ?charlesFather .

  # Parent of Carloman of Bavaria
  ?parentOfChild dbo:child ?royaltyChild .
  ?royaltyChild rdf:type dbo:Monarch ;
                dbo:parent ?father .

}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
124,69,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v7 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
  # Frank Rhodes and the war he commanded
  ?frankRhodes a dbo:MilitaryPerson ;
               foaf:name ""Frank Rhodes"" ;
               dbo:commanderOf ?war .
  
  # The war is both a military conflict and societal event
  ?war a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Reference to 'A' Battery, Royal Australian Artillery
  ?referenceOrganization a dbo:MilitaryUnit, dbo:Organisation ;
                        foaf:name ""A Battery, Royal Australian Artillery"" ;
                        dbo:militaryForce ?militaryForce .
  
  # The reference is Australian
  ?referenceOrganization dbo:nationality dbr:Australia .

  # Person born on 1850-06-24 and the military force they were part of
  ?person a dbo:MilitaryPerson ;
         dbo:birthDate ""1850-06-24""^^xsd:date ;
         dbo:militaryForce ?militaryForce2 .
  
  # The military force is both a societal event and a military conflict
  ?militaryForce2 a dbo:SocietalEvent, dbo:MilitaryConflict .

  # Ensure the same military force is involved in all contexts
  FILTER (?militaryForce = ?militaryForce2)
}
```",8,18,9,3,3,3,3,71,0,0,9,0,0.0,0
715,60,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  ?conflict dbo:commander ?commander .
  ?commander dbo:nativeOf dbr:Morocco .
  
  OPTIONAL { 
    ?office dbo:leader ?commander ;
            a dbo:GovernmentAgency, dbo:Organization .
  }
  
  FILTER EXISTS { ?reference dbo:refersTo ?commander . }
  FILTER (?reference = dbr:C_Franco_Iribarnegaray)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
433,59,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?finalArtist
WHERE {
  # Step 1: Find Paul Chambers and his associated musical artist
  ?person1 a dbo:MusicalArtist ;
           dbo:birthName ""Paul Chambers"" .
  
  ?associatedArtist1 dbo:musicalArtist ?person1 ;
                     a dbo:Artist, dbo:MusicalArtist .

  # Step 2: Find the associated musical artist of the first associated artist
  ?associatedArtist2 dbo:musicalArtist ?associatedArtist1 ;
                    a dbo:Artist, dbo:MusicalArtist .

  # Step 3: Find the final associated musical artist
  ?finalArtist dbo:musicalArtist ?associatedArtist2 ;
               a dbo:Artist, dbo:MusicalArtist .
  
  # Ensure Ornette Coleman is connected in some way (e.g., through associations)
  ?person2 a dbo:MusicalArtist ;
           dbp:name ""Ornette Coleman"" .

  ?associatedArtist3 dbo:musicalArtist ?person2 ;
                     a dbo:Artist, dbo:MusicalArtist .
  
  FILTER(?finalArtist = ?associatedArtist3)
}
```",6,12,7,3,2,3,3,71,0,0,10,0,0.0,0
791,62,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and father of Emperor Go-Toba and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse
WHERE {
  # Emperor Takakura's spouse (who is also father of Go-Toba)
  dbr:Takakura_of_Japan dbo:spouse ?empressTakakura .
  
  # Empress Takakura's spouse (Emperor Takakura) and his child, Emperor Go-Toba
  ?empressTakakura dbo:child dbr:Go_Toba .

  # Find the grandchild of Emperor Go-Shirakawa who is an office holder and royalty
  dbr:Go_Shirakawa dbo:child ?goShirakawaChild .
  ?goShirakawaChild dbo:child ?grandchild .
  
  # Ensure the grandchild is both a royalty and an office holder
  ?grandchild rdf:type dbo:Monarch ;
              dbo:officeHolder true .

  # Find predecessor of this grandchild who is also royalty
  ?predecessor dbo:successor ?grandchild .
  ?predecessor rdf:type dbo:Monarch .

  # The spouse of the predecessor (who is a royalty)
  ?predecessor dbo:spouse ?spouseOfSpouse .
  FILTER (?spouseOfSpouse rdf:type dbo:Monarch)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
166,20,test,"Give me the entity in the territory administered, that is a country, from the reference to Madrid and resting place of the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/ontology/capital> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  # Reference to Madrid
  ?event dbo:location dbr:Madrid .
  
  # Event is a societal event and military conflict
  ?event rdf:type dbo:SocietalEvent ;
         rdf:type dbo:MilitaryConflict .

  # Resting place of the military force related to Manuel Hedilla
  ?militaryForce dbo:commanderManuelHedilla true ;
                 dbo:restingPlace ?location .
  
  # Event associated with the military force
  ?event dbo:militaryForce ?militaryForce .

  # Entity in the territory administered that is a country
  ?country dbo:administersTerritory ?territory .
  ?territory dbo:containsLocation ?location .

  FILTER (?country rdf:type dbo:Country)
}
```",6,10,7,3,2,3,2,20,0,0,4,0,0.0,0
917,66,test,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of the father of the child, that is a royalty, of Kamehameha III and child of the father of Keʻelikōlani.",SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Kamehameha IV's child who is royalty
  ?child1 dbo:spouse|dbo:child dbr:Kamehameha_IV .
  FILTER EXISTS { ?child1 a dbo:Monarch . }

  # This child must be the child of the father of Kamehameha III's child (who is royalty)
  ?father3 dbo:child ?child2 .
  ?child2 dbo:spouse|dbo:child dbr:Kamehameha_III .
  FILTER EXISTS { ?child2 a dbo:Monarch . }
  
  # The same child must be the child of the father of Keʻelikōlani
  ?father4 dbo:child dbr:Keʻelikōlani .

  # Linking all conditions to find the common child
  FILTER (?child1 = ?child2)
  
  # Finding the parent of this identified child
  ?parent dbo:spouse|dbo:child ?child1 .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
508,20,test,"Give me the birthplace of the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun and birthplace of the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthplaceHuCommander ?birthplaceHayaoCommander
WHERE {
  # Hu Yukun's commander who is Saudi and involved in a war (military conflict and societal event)
  ?huWar dbo:commander ?huCommander .
  ?huCommander dbo:nationality dbr:Saudi_Arabia .
  ?huCommander dbo:birthPlace ?birthplaceHuCommander .

  # Hayao Tada's commander who is a politician and involved in a war (military conflict, societal event, and an event)
  ?hayaoWar dbo:commander ?hayaoCommander .
  ?hayaoCommander rdf:type dbo:Politician .
  ?hayaoCommander dbo:birthPlace ?birthplaceHayaoCommander .

  # Ensure the wars are characterized as military conflicts and societal events
  ?huWar rdf:type dbo:MilitaryConflict ;
         dbo:socialEvent true .
  
  ?hayaoWar rdf:type dbo:MilitaryConflict ;
            dbo:socialEvent true ;
            rdf:type dbo:Event .
}
```",6,13,7,3,2,3,2,20,0,0,3,0,0.0,0
158,18,test,"Give me the entity in the award, that is a country, of the reference to Adelbert Cronkhite and party of the successor, that is a prime minister and an office holder and a politician, of André Tardieu.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  # Find the award associated with Adelbert Cronkhite and its country
  ?award dbo:recipient dbr:Adelbert_Cronkhite .
  ?award dbo:country ?country .

  # Find André Tardieu's successor who is a prime minister, office holder, and politician
  ?tardieuSuccessor dbo:successorOf dbr:André_Tardieu ;
                   rdf:type dbo:PrimeMinister ;
                   rdf:type dbo:OfficeHolder ;
                   rdf:type dbo:Politician .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
926,71,test,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of the father of the spouse of Neşerek Kadın and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v8 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v7 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfMustafaIII
WHERE {
  # Beyhan Sultan's parent
  dbr:Beyhan_Sultan dbo:parent dbr:Mustafa_III .

  # Neşerek Kadın's spouse and their lineage
  ?neşerekSpouse dbo:spouse dbr:Neşerek_Kadın .
  ?fatherOfFather dbo:child ?neşerekSpouse .
  ?grandfatherOfNeşerekSpouse dbo:parent ?fatherOfFather .
  
  # Şermi Kadın's spouse and their child
  ?şermiSpouse dbo:spouse dbr:Şermi_Kadın .
  ?childOfŞermiSpouse dbo:parent ?şermiSpouse .

  # Successor of the child of Şermi Kadın's spouse
  ?successor dbo:succeededBy ?childOfŞermiSpouse .

  # Mustafa III is a royalty
  dbr:Mustafa_III a dbo:Monarch .

  # The father of Neşerek Kadın's spouse's father's father must be a royalty
  ?grandfatherOfNeşerekSpouse dbo:parent ?royalParent .
  ?royalParent a dbo:Monarch .

  # Find the child of Mustafa III who is a royalty and matches the criteria
  dbr:Mustafa_III dbo:child ?childOfMustafaIII .
  ?childOfMustafaIII a dbo:Monarch .
  
  FILTER (?grandfatherOfNeşerekSpouse = ?successor)
}",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
715,57,test,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in Rif War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander
WHERE {
  ?commander a dbo:Politician ;
             dbo:officeHolderOf ?mayorOffice ;
             dbo:presidentDuring ?electionEvent ;
             dbo:commanderInWar ?rifWar .

  ?mayorOffice dbo:leader ?leader ;
               a (dbo:GovernmentAgency | dbo:Organization) .

  ?electionEvent dbp:date ""1933""^^xsd:gYear ;
                 rdfs:label ?electionLabel .
  
  FILTER(CONTAINS(LCASE(?electionLabel), ""spanish general election"")).

  ?rifWar rdfs:label ?warLabel .
  FILTER(CONTAINS(LCASE(?warLabel), ""riff war"") || CONTAINS(LCASE(?warLabel), ""rif war"")).

  ?leader rdfs:label ?officeLeaderLabel ;
          dbo:member ?carlosFranco .

  ?carlosFranco rdfs:label ""Carlos Franco Iribarnegaray""@en .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
579,18,test,"Give me the native of the residence, that is English and a settlement, of the resident of Scotland and person born as the birth name of Jane Percy, Duchess of Northumberland.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeOfResidence
WHERE {
  # Jane Percy, Duchess of Northumberland's birth name
  dbr:Jane_Percy,_Duchess_of_Northumberland dbo:birthName ?birthName .

  # Person born with that name who is a resident of Scotland
  ?person dbp:birthName ?birthName .
  ?person dbo:residence ?residence .
  ?residence dbo:country dbr:Scotland .

  # The residence must be English and a settlement
  ?residence dbo:country dbr:England ;
             rdf:type dbo:Settlement .

  # Get the native of this residence
  ?residence dbo:nativeOf ?nativeOfResidence .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
527,19,test,"Give me the actor of the movie, that is a work and English and a television show, with Bernard Bresslaw and author of the work, that is a work and a book, of the host of Hyperland.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v0 . ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?actor ?author
WHERE {
  ?movie a dbo:Film ;
         dbo:language ""English"" ;
         dbo:starring dbr:Bernard_Bresslaw .
  
  ?movie dbo:workExample ?work .
  ?work rdfs:label ?title .

  ?book a dbo:Book ;
        dbo:author ?author .
  
  ?host dbo:presented dbr:Hyperland .
  ?book dbo:author ?hostAuthor .
  FILTER (?author = ?hostAuthor)

}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
892,58,test,"Give me the entity in Italy and landmark at elevation of the award of Anna Ishii and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?award ?landmark ?elevation ?region ?party
WHERE {
  # Anna Ishii's award
  dbr:Anna_Ishii dbo:award ?award .

  # Landmark in Italy at a specific elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation ;
            dbo:country dbr:Italy .
  
  FILTER(?elevation > 0) # Assuming we want landmarks above sea level

  # Entity in administration that is Italian, a region, a settlement, and an administrative region
  ?region a dbo:Region , dbo:Settlement , dbo:AdministrativeRegion ;
          dbo:country dbr:Italy .

  # Political party of Andrea Cozzolino
  dbr:Andrea_Cozzolino dbo:party ?party .
  
  FILTER(?party a dbo:PoliticalParty)
}
```",6,12,7,3,3,3,3,71,0,0,2,0,0.0,0
917,64,test,"Give me the child of Kekūanāoʻa and child of the father of the child, that is a royalty, of Kamehameha III and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v4 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfKekuanaoa ?grandChildRoyalty ?childOfKamehamehaIII ?mayor ?royalChildOfMayor
WHERE {
  # Kekūanāoʻa's child
  ?childOfKekuanaoa dbo:spouse|dbo:child dbr:Kekūanāoʻa .
  
  # Grandchild of Kekūanāoʻa who is royalty
  ?grandChildRoyalty dbo:parent ?childOfKekuanaoa ;
                    a dbo:Monarch .

  # Child of Kamehameha III who is royalty
  ?childOfKamehamehaIII dbo:spouse|dbo:child dbr:Kamehameha_III ;
                       a dbo:Monarch .

  # Mayor of the Hawaiian Kingdom and their royal child
  ?mayor rdfs:label ""Mayor""@en .
  ?royalChildOfMayor dbo:parent ?mayor ;
                     a dbo:Monarch .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
129,25,test,"Give me the associated musical artist of Saba (rapper) and associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and professional in the mayor of 1999 West Dunbartonshire Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?sabaArtist ?actorOrganization ?mayorProfessional
WHERE {
  # Find Saba's associated musical artist
  dbr:Saba (dbo:musicalArtist) ?sabaArtist .

  # Find the actor who is an organization in ""Dreamville Presents: Revenge""
  ?dreamvilleEvent dbo:actor ?actor .
  ?actor rdf:type dbo:Organization .
  FILTER(CONTAINS(LCASE(?dreamvilleEvent), 'dreamville presents: revenge')) .

  # Find the associated musical artist of this actor
  ?actor (dbo:musicalArtist) ?actorOrganization .

  # Identify the mayor from the 1999 West Dunbartonshire Council election
  ?mayor dbo:electedAsMayorOf dbr:West_Dunbartonshire_Council .
  FILTER(YEAR(?mayorElectionDate) = 1999) .
  
  # Find the professional role of this mayor
  ?mayor dbo:profession ?mayorProfessional .
}",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
892,59,test,Give me the entity in the profession of the true self of Enrico Crolla and landmark at elevation of the award of the member of E-girls.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/elevation> ?v4 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?profession ?landmark
WHERE {
  # Enrico Crolla's profession
  dbr:Enrico_Crolla dbo:profession ?profession .

  # E-girls member who received an award
  ?member dbo:memberOf dbr:E-girls ;
          dbo:award ?award .

  # Get the elevation of the award (assuming awards have a location with elevation)
  ?awardLocation dbo:elevation ?elevation .
  
  # Find a landmark at that elevation
  ?landmark dbo:elevation ?elevation .
}
```",6,6,7,3,2,3,3,71,0,0,11,0,0.0,0
417,69,test,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the father of Frederick IX of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/property/father> ?v7 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseName
WHERE {
  # Frederick IX of Denmark and his father
  dbr:Frederick_IX_of_Denmark dbo:father dbr:Cristian_X_of_Denmark .

  # Knud, Hereditary Prince of Denmark's child who is also a child of Cristian X
  ?child dbo:parent dbr:Knud,_Hereditary_Prince_of_Denmark .
  ?child dbo:parent dbr:Cristian_X_of_Denmark .
  
  # Ensure the child is royalty
  ?child rdf:type dbo:Monarch .

  # Parent of this child who is a royalty
  ?royalParent dbo:spouse ?spouse .
  ?royalParent dbo:parent ?child .
  ?royalParent rdf:type dbo:Monarch .

  # Alexandrine of Mecklenburg-Schwerin's parent and their child
  dbr:Alexandrine_of_Mecklenburg-Schwerin dbo:parent ?alexParent .
  ?alexChild dbo:parent ?alexParent .
  ?alexChild rdf:type dbo:Monarch .

  # Ensure the royal parent is also a child of Alexandrine's parent
  ?royalParent dbo:parent ?alexChild .

  # Get spouse name
  ?spouse rdfs:label ?spouseName .
  
  FILTER (lang(?spouseName) = 'en')
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
892,62,test,Give me the entity in the profession of the true self of Enrico Crolla and entity in Province of Reggio Emilia and landmark at elevation of the award of the member of E-girls.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v5 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?profession ?reggioEntity ?landmark
WHERE {
  # Enrico Crolla's profession
  dbr:Enrico_Crolla dbo:occupation ?profession .

  # Entity in Province of Reggio Emilia
  ?reggioEntity dbo:locatedIn dbr:Province_of_Reggio_Emilia .

  # Award elevation for a member of E-girls
  ?member dbo:memberOf dbr:E-girls .
  ?award dbo:recipient ?member ;
         dbo:elevation ?elevation .

  # Landmark at the same elevation as the award
  ?landmark dbo:elevation ?elevation .
}
```

This query does the following:
- Retrieves Enrico Crolla's profession.
- Finds an entity located in the Province of Reggio Emilia.
- Identifies a landmark that is at the same elevation as an award received by a member of E-girls.",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
791,56,test,"Give me the predecessor of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor ?finalPerson
WHERE {
  # Step 1: Find Emperor Antoku's predecessor
  ?antoku dbo:succession dbr:Emperor_Antoku .
  ?antoku dbo:predecessor ?predecessor .

  # Step 2: Find spouse of the spouse (royalty) of Emperor Takakura
  dbr:Emperor_Takakura dbo:spouse ?takakuraSpouse .
  ?takakuraSpouse dbo:spouse ?secondSpouse .
  FILTER EXISTS { ?secondSpouse a dbo:Monarch } .

  # Step 3: Find father of the child (royalty) of the father (royalty and office holder) of Emperor Antoku
  ?antokuFather dbo:succession dbr:Emperor_Antoku .
  FILTER EXISTS { ?antokuFather a dbo:Monarch } .
  FILTER EXISTS { ?antokuFather dbo:officeHolder ?office } .

  ?child dbo:parent ?antokuFather .
  FILTER EXISTS { ?child a dbo:Monarch } .

  ?finalPerson dbo:parent ?child .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
839,57,test,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of Kevin Russell (musician) and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandCharlieHuhn ?bandKevinRussell ?bandPeterSchorowsky
WHERE {
  # Find Charlie Huhn's band that is a musical artist
  ?charlieHuhn dbo:associatedBand ?bandCharlieHuhn .
  ?bandCharlieHuhn rdf:type dbo:MusicalArtist .

  # Find Kevin Russell's band
  ?kevinRussell dbo:associatedBand ?bandKevinRussell .

  # Find Peter Schorowsky's band that is both a band and a group
  ?peterSchorowsky dbo:memberOf ?bandPeterSchorowsky .
  ?bandPeterSchorowsky rdf:type dbo:Band ;
                       rdf:type dbo:Group .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
865,65,test,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfResidenceCountry
WHERE {
  # Ram Jaipal Singh Yadav's residence country and native
  dbr:Ram_Jaipal_Singh_Yadav dbo:residenceLocation ?residence.
  ?residence dbo:country ?residenceCountry.
  ?residenceCountry dbo:native ?nativeOfResidenceCountry.

  # Syeda Shahar Banu's spouse's child who is a politician
  dbr:Syeda_Sharbanoo dbo:spouse ?spouse.
  ?spouse dbo:child ?childPolitician.
  FILTER (dbo:politician ?childPolitician).

  # Father of the child (politician) of Syeda Shahar Banu's spouse
  ?childPolitician dbo:father ?fatherOfChildPolitician.

  # Abu Ahmad Abdul Hafiz's father
  dbr:Abu_Ahmad_Abdul_Hafiz dbo:father ?fatherOfAbuAhmad.
  
  # Ensure the native of the residence country is the same as both fathers
  FILTER (?nativeOfResidenceCountry = ?fatherOfChildPolitician && ?nativeOfResidenceCountry = ?fatherOfAbuAhmad)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
917,57,test,"Give me the parent of Albert Kamehameha and child of the father of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/ontology/parent> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?individual
WHERE {
  # Albert Kamehameha's parent
  ?albertParent dbo:child dbr:Albert_Kamehameha .
  
  # Kamehameha IV's father's child
  ?kamehamehaIVFather dbo:child ?kamehamehaIV .
  ?kamehamehaIVFatherChild dbo:parent ?kamehamehaIVFather .

  # Spouse of Leleiohoku I's father's child
  ?leleiohokuIFather dbo:spouse ?leleiohokuISpouse .
  ?leleiohokuISpouseParent dbo:child ?leleiohokuISpouse .
  
  # The individual must be royalty and satisfy all conditions
  ?individual dbo:parent ?albertParent ;
              dbo:parent ?kamehamehaIVFatherChild ;
              dbo:parent ?leleiohokuISpouseParent ;
              a dbo:Monarch .

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
353,9,test,"Give me the entity in the country of Moskovsky City District, Nizhny Novgorod and alma mater of the awardee of Medal of the Order ""For Merit to the Fatherland"".","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Moskovsky_City_District,_Nizhny_Novgorod> <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_the_Order_%22For_Merit_to_the_Fatherland%22> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater
WHERE {
  # Find Moskovsky City District in Nizhny Novgorod
  ?moscowDistrict a dbo:CityDistrict ;
                 dbo:country dbr:Nizhny_Novgorod .

  # Find awardees of the Medal of the Order ""For Merit to the Fatherland""
  ?person dbo:award dbr:Medal_of_the_Order_""For_Merit_to_the_Fatherland"" .
  
  # Ensure the person is associated with Moskovsky City District
  ?person dbo:residence ?moscowDistrict .

  # Get the alma mater of the awardee
  ?person dbo:almaMater ?almaMater .
}
```",4,4,5,2,2,2,2,9,0,0,5,0,0.0,0
507,62,test,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of the person born as the birth name of Anne V. Coates and professional in Film director, television director.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/property/starring> ?v0 . ?v6 <http://dbpedia.org/ontology/director> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?director WHERE {
  # Find the person born on 1919-06-17
  ?person dbo:birthday ""1919-06-17""^^xsd:date .
  
  # Find Anne V. Coates and her birth name
  dbr:Anne_V._Coates foaf:name ?anneBirthName .
  
  # Find the spouse of the person born in 1919 who is a film and television director
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ?anneBirthName .
  ?spouse dbo:occupation dbr:Film_director ;
          dbo:occupation dbr:Television_director .

  # Find the movie that involves both the person born in 1919 and their spouse
  ?movie dbo:director ?spouse ;
         a dbo:Film, dbo:Work .
  
  # Ensure the director of this movie is returned
  ?movie dbo:director ?director .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
976,61,test,"Give me the office of the person born as the birth name of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthNameOffice ?mayorOffice ?party
WHERE {
  # Find Naci Bostancı's birth name and his office
  dbr:Naci_Bostancı dbo:birthName ?birthName .
  
  OPTIONAL {
    ?person dbp:name ?birthName ;
            dbo:officeHeld ?birthNameOffice ;
            dbo:nationality dbr:Turkey ;
            rdf:type dbo:Politician .
  }
  
  # Find the office of a Turkish politician who is also an office holder
  ?politician dbp:office ?mayorOffice ;
              dbo:nationality dbr:Turkey ;
              rdf:type dbo:Politician, dbo:OfficeHolder .

  # Find the political party associated with Millet İttifakı
  ?party dbo:member ?politician ;
         dbo:country dbr:Turkey ;
         rdf:type dbo:PoliticalParty .
  
  FILTER EXISTS { ?party dbp:reference dbr:Millet_İttifakı }
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
926,56,test,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of Mustafa III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonAncestor
WHERE {
  # Abdulaziz's father's father
  ?abdulaziz dbo:father ?abdulazizFather .
  ?abdulazizFather dbo:father ?grandfatherAbdulaziz .

  # Beyhan Sultan's parent (Mustafa III) and his successor who is royalty
  ?beyhanSultan dbp:parent ?mustafaIII .
  ?mustafaIII dbo:succeededBy ?successor .
  FILTER EXISTS { ?successor a dbo:Monarch } 

  # Find the common ancestor
  VALUES (?commonAncestor) {
    (?grandfatherAbdulaziz)
    (?successor)
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
987,68,test,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?v6 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandBirthPlace ?actorBirthPlace ?country
WHERE {
  # Step 1: Find the band associated with Dado Prljaca
  ?band dbo:member dbr:Dado_Prljaca ;
        a dbo:Band, dbo:MusicalArtist .

  # Step 2: Get the birthplace of this band
  ?band dbp:birthPlace ?bandBirthPlace .

  # Step 3: Find films featuring Emir Hadžihafizbegović
  ?film dbo:starring dbr:Emir_Hadžihafizbegović ;
        a dbo:Film .

  # Step 4: Get the actor in this film and their birthplace
  ?actor dbo:starringInFilm ?film ;
         dbp:birthPlace ?actorBirthPlace .

  # Step 5: Find countries in the Central European Time region
  ?country dbo:timeZone dbr:Central_European_Time .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
326,18,test,"Give me the resident of the birthplace, that is a state and British, of the professional in Writer and person decedent at the award, that is a country, of Adelbert Cronkhite.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> ""Writer""@en . ?result <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?resident
WHERE {
  # Adelbert Cronkhite's details
  dbr:Adelbert_Cronkhite a dbo:Writer ;
                        dbo:deathPlace ?deceasedLocation ;
                        dbo:birthPlace ?birthState .

  # Ensure the birthplace is in the UK
  ?birthState dbp:country dbr:United_Kingdom .

  # Find an award related to Adelbert Cronkhite located in a country
  ?award dbo:recipient dbr:Adelbert_Cronkhite ;
         dbo:location ?awardCountry .
  
  # Ensure the award's location is indeed a country
  ?awardCountry a dbo:Country .

  # Find the resident of the birthplace (state)
  ?birthState dbo:resident ?resident .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
417,67,test,"Give me the spouse of Princess Caroline-Mathilde of Denmark and child of the father of the leader, that is a royalty, of Colony of Greenland and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?child
WHERE {
  # Princess Caroline-Mathilde of Denmark and her spouse
  dbr:Princess_Caroline-Mathilde_of_Denmark dbo:spouse ?spouse .
  
  # Leader of the Colony of Greenland (historically a Danish monarch)
  ?leader dbo:country dbr:Greenland ;
          dbo:parent ?fatherLeader .

  # Child of the father of the leader
  ?child dbo:parent ?fatherLeader .
  
  # Ensure all are royalty
  FILTER EXISTS { ?spouse dbo:royaltyStatus ""Royal"" }
  FILTER EXISTS { ?child dbo:royaltyStatus ""Royal"" }

  # Alexandrine of Mecklenburg-Schwerin and her parent-child relationships
  dbr:Aleksandrine_of_Mecklenburg-Schwerin dbo:parent ?parentAlex .
  ?grandChild dbo:parent ?parentAlex .

  # Ensure the grandchild is royalty
  FILTER EXISTS { ?grandChild dbo:royaltyStatus ""Royal"" }

  # Linking child to grandchild through parent
  ?child dbo:parent ?grandChild .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
170,27,test,Give me the entity in Russia and birth place of the awardee of People's Artist of Russia and domain of the profession of John Scholey.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardee ?birthPlace ?scholeyDomain
WHERE {
  # Find awardees of People's Artist of Russia and their birthplace
  ?awardee dbo:honoraryTitle dbr:People%27s_Artist_of_Russia .
  ?awardee dbo:birthPlace ?birthPlace .
  FILTER (lang(?birthPlace) = 'en' && regex(str(?birthPlace), ""Russia""))

  # Find John Scholey's domain of profession
  dbr:John_Scholey dbo:fieldOfActivity ?scholeyDomain .
}
```",5,5,6,2,3,2,3,28,0,0,3,0,0.0,0
456,69,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of The Shadow and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandName
WHERE {
  # Alan Doyle's band
  ?alanDoyle dbo:memberOf ?band .
  
  # Band is a musical artist
  ?band rdf:type dbo:MusicalArtist .

  # Band has an alter ego ""The Shadow""
  ?band dbp:alterEgo dbr:The_Shadow .

  # Spouse of the actor in a movie/TV show with Ross Newton
  ?actor dbo:spouse ?spouse .
  ?movie dbo:starring ?actor ;
         dbo:starring dbr:Ross_Newton .
  
  # The spouse is associated with the band
  ?band dbp:member ?spouse .

  # Ensure the movie/TV show is both a work and a television show
  ?movie rdf:type dbo:Film ;
         rdf:type dbo:TelevisionShow .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
47,62,test,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of the award, that is an award, of Mantu Ghosh and office of Ajoy Mukherjee.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://dbpedia.org/property/governor> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeGreenHunt ?awardOffice ?mukherjeeOffice
WHERE {
  # Office of the commander in Operation Green Hunt
  ?operation dcterms:title ""Operation Green Hunt""@en .
  ?commander dbo:role ?operation ;
             dbo:positionHeld ?officeGreenHunt .

  # Office of the awardee of an award received by Mantu Ghosh
  ?award dbo:recipient dbr:Mantu_Ghosh ;
         dbo:awardee ?awardee .
  ?awardee dbo:positionHeld ?awardOffice .

  # Office held by Ajoy Mukherjee
  dbr:Ajoy_Mukherjee dbo:positionHeld ?mukherjeeOffice .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
47,71,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of the award, that is an award, of Mantu Ghosh and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v8 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v4 . ?v8 <http://dbpedia.org/property/awards> ?v7 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardOffice1 ?awardeeOffice2 ?adminOffice3
WHERE {
  # Office of the awardee of an award in India
  {
    ?award dbo:country dbr:India .
    ?award dbo:recipient ?awardee .
    OPTIONAL { ?awardee dbo:office ?awardOffice1 }
  }

  UNION

  # Office of the awardee of Mantu Ghosh's awards
  {
    ?award dbo:recipient dbr:Mantu_Ghosh .
    ?award dbo:recipient ?awardee .
    OPTIONAL { ?awardee dbo:office ?awardeeOffice2 }
  }

  UNION

  # Office of administration of a politician commander in Operation Green Hunt
  {
    ?operation dbp:name ""Operation Green Hunt"" ;
               dbo:commander ?politician .
    FILTER (dbo:Politician(?politician))
    OPTIONAL { ?politician dbo:office ?adminOffice3 }
  }
}",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
124,68,test,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v5 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?kitchenerForce ?awardeeWarForce
WHERE {
  # Herbert Kitchener's military force
  dbr:Herbert_Kitchener_1st_Earl_Kitchener dbo:militaryConflict ?kitchenerEvent .
  ?kitchenerEvent a dbo:MilitaryConflict ;
                  a dbo:SocietalEvent .

  # Awardee of British South Africa Company Medal and their war
  ?awardee dbo:awardReceived dbr:British_South_Africa_Company_Medal .
  ?awardeeWarEvent dbo:militaryConflict ?awardeeWar .
  ?awardeeWar a dbo:MilitaryConflict ;
             a dbo:SocietalEvent .
  ?awardee dbo:commanderIn ?awardeeWar .

  # Reference to 'A' Battery, Royal Australian Artillery
  dbr:A_Battery,_Royal_Australian_Artillery dbo:reference ?australianReference .
  ?australianReference a dbo:MilitaryUnit ;
                      a dbo:Organisation ;
                      dbo:nationality dbr:Australia .

  # Connect the military forces
  ?kitchenerEvent dbo:militaryForce ?kitchenerForce .
  ?awardeeWar dbo:militaryForce ?awardeeWarForce .
}
```",8,18,9,3,3,3,3,71,0,0,9,0,0.0,0
826,63,test,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result
WHERE {
  # Prince Friedrich of Hesse and by Rhine's parent
  ?friedrich a dbr:Friedrich_of_Hesse_and_by_Rhine ;
             dbo:parent ?parentFriedrich .

  # Predecessor of the parent of Prince Friedrich
  ?predecessor dbo:succesor ?parentFriedrich .

  # Louis I, Grand Duke of Hesse's child who is royalty
  ?louis a dbr:Louis_I,_Grand_Duke_of_Hesse ;
         dbo:child ?royalChild .
  FILTER EXISTS { ?royalChild a dbo:RoyalFamilyMember } 

  # Successor of the royal child
  ?successor dbo:succesor ?royalChild .

  # Anna Magdalena Appel's father and his child
  ?anna a dbr:Anna_Magdalena_Appel ;
        dbo:father ?fatherAnna .
  ?childFather a dbo:childOf ?fatherAnna .

  # Spouse of the child of Anna Magdalena Appel's father
  ?spouse dbo:spouse ?childFather .

  # Result is the intersection of all conditions
  FILTER (?predecessor = ?successor && ?successor = ?spouse)
  BIND(?successor AS ?result)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
715,61,test,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderName
WHERE {
  # Carlos Franco Iribarnegaray's office
  dbr:Carlos_Franco_Iribarnegaray dbo:office ?office .
  
  # Office is a government agency and organization
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .

  # Leader of the office
  ?office dbo:leader ?leader .
  ?leader rdfs:label ?leaderName .

  # Mayor who is commander in force for this leader
  ?mayor dbo:commanderInForce ?leader .
  
  # Mayor is an office holder, politician, and president from 1933 Spanish general election
  ?mayor rdf:type dbo:OfficeHolder ;
         rdf:type dbo:Politician ;
         dbo:electedAs dbr:President_of_Spain ;
         dbo:election dbr:Spanish_general_election,_1933 .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
136,9,test,Give me the region coded as the area code of Levenhagen and landmark at elevation of the award of Bret Anthony Johnston.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ?v1 . <http://dbpedia.org/resource/Bret_Anthony_Johnston> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Levenhagen> <http://dbpedia.org/ontology/areaCode> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?landmark
WHERE {
  # Find Levenhagen's area code (assuming it relates to a postal code or region)
  dbr:Levenhagen dbo:postalCode ?areaCode .
  
  # Find Bret Anthony Johnston's award
  dbr:Bret_Anthony_Johnston dbo:award ?award .

  # Assuming the award has an elevation property (this is hypothetical)
  ?award dbo:elevation ?elevation .

  # Find a landmark with the same elevation as the award
  ?landmark dbo:elevation ?sameElevation .
  
  FILTER (?elevation = ?sameElevation)

  # Get the region corresponding to Levenhagen's area code
  ?areaCode dbo:region ?region .
}
```

This query assumes certain properties and relationships that might not exist in DBpedia. Adjustments may be needed based on actual data availability.",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
329,26,test,"Give me the entity in United Kingdom and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist) and birthplace of the author of The Tailor and Ansty.",SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?robertBatesOrg ?robertBatesCountry ?authorBirthPlace
WHERE {
  # Robert Bates (loyalist) details
  dbr:Robert_Bates_(loyalist) dbo:birthPlace ?batesBirthPlace .
  
  OPTIONAL { 
    ?batesOrg dbo:country dbr:United_Kingdom ;
              dbo:organisation ?robertBatesOrg .
    FILTER (?batesOrg != dbr:Robert_Bates_(loyalist)) # Ensure it's an organisation
  }
  
  OPTIONAL {
    ?batesCountry dbo:country ?robertBatesCountry .
    FILTER(?batesCountry = dbr:United_Kingdom) # Ensure the country is UK
  }

  # Author of ""The Tailor and Ansty"" details
  dbr:The_Tailor_and_Ansty dbo:author ?author .
  ?author dbo:birthPlace ?authorBirthPlace .
}",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
216,57,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in Igor Bišćan.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v5 . <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?teamName
WHERE {
  ?person dbo:birthDate ""1983-12-20""^^xsd:date .
  ?person rdf:type dbo:SportsManager ;
          rdf:type dbo:SoccerManager ;
          rdf:type dbo:SoccerPlayer .

  ?coachship dbo:player dbr:Džemal_Berberović ;
             dbo:team ?team ;
             dbo:coach ?person .

  ?team rdf:type dbo:SportsClub ;
        rdf:type dbo:SoccerClub ;
        rdfs:label ?teamName .

  ?membership2 dbo:player dbr:Igor_Bišćan ;
               dbo:team ?team .
}
```",6,15,7,3,3,3,3,71,0,0,1,0,0.0,0
987,60,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/timeZone> ?v5 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  # Find the time zone in Canicosa de la Sierra linked to a sports event
  ?sportsEvent dbo:location dbr:Canicosa_de_la_Sierra .
  ?sportsEvent dbo:timeZone ?timeZone .

  # Find the region associated with this time zone
  ?region dbp:timezone ?timeZone .
  
  # Determine the country within this region
  ?country dbo:part ?region .
  FILTER (dbo:Country(?country)).

  # Locate the band associated with Dado Prato and find its birthplace
  dbr:Dado_Prato dbo:bandMember ?band .
  ?band a dbo:Band ;
        dbp:birthPlace ?birthPlace .

  # Ensure the band is an artist and musical artist
  FILTER (dbo:Artist(?band) && dbo:MusicalArtist(?band))
}
```",6,11,7,3,2,3,3,71,0,0,2,0,0.0,0
976,63,test,"Give me the office of the person born as Mehmet Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/leader> ?v1 . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v5 . ?v0 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v5 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeBostanci ?officeLeaderKilicdaroglu ?officeMayorNationAlliance
WHERE {
  # Office of Mehmet Naci Bostancı
  dbr:Mehmet_Naci_Bostancı dbo:office ?officeBostanci .

  # Leader of the administration of Kemal Kılıçdaroğlu
  dbr:Kemal_Kılıçdaroğlu dbo:leaderOf ?administration .
  ?administration dbo:administrator ?officeLeaderKilicdaroglu .

  # Mayor of Nation Alliance (Turkey)
  {
    SELECT DISTINCT ?mayorOffice WHERE {
      dbr:Nation_Alliance_(Turkey) dbo:head ?mayor .
      ?mayor a dbo:Politician ;
             dbo:officeHolder ?mayorOffice ;
             dbo:nationality dbr:Turkey .
    }
  } UNION {
    SELECT DISTINCT ?mayorOffice WHERE {
      dbr:Nation_Alliance_(Turkey) dbo:head ?mayor .
      ?mayor a dbo:Mayor ;
             dbo:officeHolder ?mayorOffice ;
             dbo:nationality dbr:Turkey .
    }
  }
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
976,64,test,"Give me the office of Meral Akşener and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/leader> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?officeMeralAkşener ?officeLeaderKemalKılıçdaroğlu ?officeNaciBostancı
WHERE {
  # Office of Meral Akşener
  ?meralAkşener a dbo:Politician ;
                dbp:office ?officeMeralAkşener .

  # Leader of the administration (organization) of Kemal Kılıçdaroğlu
  ?kemalKılıçdaroğlu a dbo:Politician ;
                    dbo:leader ?administration .
  ?administration a dbo:Organization ;
                  dbp:office ?officeLeaderKemalKılıçdaroğlu .

  # Office of the person born as Naci Bostancı
  ?naciBostancı foaf:name ""Naci Bostancı""@en ;
                dbp:birthName ""Naci Bostancı"" ;
                dbp:office ?officeNaciBostancı .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
18,24,test,"Give me the alumnus of the figure known, that is an educational institution, as Saints and parent of the professional in Actress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?alumnus
WHERE {
  ?institution a dbo:EducationalInstitution ;
               rdfs:label ""Saints""@en .
  
  ?alumnus dbo:almaMater ?institution ;
           dbo:spouseOrPartner ?parentRole .

  ?child foaf:parent ?parentRole ;
         dbo:occupation dbr:Actress .

}
```

### Explanation:
- **PREFIXes:** Define common prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT ?alumnus:** We want to find distinct alumni who meet the criteria.
- **?institution a dbo:EducationalInstitution; rdfs:label ""Saints""@en:** Identifies the institution known as ""Saints.""
- **?alumnus dbo:almaMater ?institution:** Links the alumnus to the institution.
- **?alumnus dbo:spouseOrPartner ?parentRole:** Assumes a relationship that connects the alumnus to their child's parent role.
- **?child foaf:parent ?parentRole; dbo:occupation dbr:Actress:** Ensures the child is an actress and links them to the parent.

This query assumes certain relationships and may need adjustments based on actual data availability in DBpedia. Adjustments might include refining how parental roles are represented or ensuring the occupation of ""actress"" is correctly identified.",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
281,28,test,"Give me the awardee of the award of Alfred Warden and commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v5 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee
WHERE {
  # Awardee of Alfred Warden's award
  ?award dbo:recipient ?awardee .
  ?award dbo:givenBy dbr:Alfred_Warden .

  # Awardee was a commander in a war (military conflict)
  ?awardee dbo:militaryCommanderOf ?conflict .
  ?conflict rdf:type dbo:MilitaryConflict .

  # Connection to Roy Boehm through a military conflict
  ?event dbo:participant ?awardee ;
         dbo:participant dbr:Roy_Boehm .
  ?event rdf:type dbo:MilitaryConflict .

  # Awardee of Lawrence Moore Cosgrave's award related to a military conflict
  ?award2 dbo:recipient ?awardee .
  ?award2 dbo:givenBy dbr:Larry_Moore_Cosgrave .
  ?conflict2 dbo:relatedTo ?award2 .
  ?conflict2 rdf:type dbo:MilitaryConflict .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
382,20,test,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler and landmark at elevation of the award of the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?v4 <http://dbpedia.org/property/awards> ?v5 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerBirthplace
WHERE {
  ?manager a dbo:SoccerManager ;
           dbo:sport (dbr:Athletics ; dbr:Sports_management) ;
           dbo:player ?lukasKuebler .
  
  ?award dbo:recipient ?manager ;
         dbo:awardedBy ?landmark .

  ?landmark geo:elevation ?elevation .
  
  ?award dbo:reference ?harryCombes .
  ?harryCombes a (dbo:CollegeCoach ; dbo:Coach) .

  ?lukasKuebler rdfs:label ""Lukas Kübler""@en .

  ?manager dbo:birthPlace ?birthPlace .
  BIND(STR(?birthPlace) AS ?managerBirthplace)
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
267,20,test,"Give me the coach of the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season and person born on the birth date of the reference to Dan Cathy.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthDate> ?v5 . ?result <http://dbpedia.org/ontology/birthDate> ?v5 . ?v1 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://dbpedia.org/ontology/coach> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?coach WHERE {
  # Get Dan Cathy's birthdate
  dbr:Dan_Cathy dbo:birthday ?danCathyBirthDate .

  # Find the coach of a player who is a soccer club and was manager in 2020–21 Tractor S.C. season
  ?player dbo:team ?soccerClub .
  ?soccerClub dbo:managerDuringSeason ?coach .
  ?season dbp:name ""2020–21"" ;
          dbp:club dbr:Tractor_S.C. .

  # Ensure the coach's birthdate matches Dan Cathy's birthdate
  ?coach dbo:birthday ?coachBirthDate .
  
  FILTER (?coachBirthDate = ?danCathyBirthDate)
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
865,69,test,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of the child of the father of Abul Maal Abdul Muhith and native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v7 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfPoliticianChild ?fatherOfAbulMaalChild ?nativeCountry
WHERE {
  # Abu Ahmad Abdul Hafiz's child who is a politician
  ?child1 dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz .
  ?child1 rdf:type dbo:Politician .

  # Father of the above child
  ?fatherOfPoliticianChild dbo:child ?child1 .

  # Abul Maal Abdul Muhith's father and his child
  ?abulMaalFather dbo:parent dbr:Abul_Maal_Abdul_Muhith .
  ?abulMaalChild dbo:parent ?abulMaalFather .

  # Father of the above child
  ?fatherOfAbulMaalChild dbo:child ?abulMaalChild .

  # Person decedent at Patna and their native country
  ?person dbr:Patna dbo:placeOfBirth ?nativeCountry .
  FILTER (dbo:COUNTRY(?nativeCountry)) .

  # Ensure the father of the politician's child is also the father of Abul Maal Abdul Muhith's child
  FILTER (?fatherOfPoliticianChild = ?fatherOfAbulMaalChild)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
573,58,test,"Give me the person decedent at Massachusetts and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person
WHERE {
  # Person is a decedent at Massachusetts
  ?person dbo:deathPlace dbr:Massachusetts .
  
  # Person is the parent of John Quincy Adams
  ?parentOfRelation dbp:child dbr:John_Quincy_Adams ;
                    dbp:parent ?person .

  # Person is a politician and office holder
  ?person dbo:occupation dbr:Politician ;
          dbo:officeHolder true .

  # Person is also a decedent at the residence of William J. Phelan
  ?residence dbp:settlement true .
  ?phelanResidence dbp:residence ?residence ;
                   dbp:resident dbr:William_J._Phelan .
  ?person dbo:deathPlace ?residence .

}",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
507,56,test,Give me the spouse of the person born as Anne Voase Coates and professional in the profession of the person born on 1966-02-18 and director of Entertaining Mr Sloane (film).,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName WHERE {
  # Find Anne Voase Coates and her spouse
  ?anne a dbo:Person ;
        foaf:name ""Anne Voase Coates""@en ;
        dbo:birthName ""Anne Voase Coates"" .
  
  ?anne dbo:spouse ?spouse .

  # Get the profession of the director born on 1966-02-18
  ?director a dbo:Person ;
            dbo:birthDate ""1966-02-18""^^xsd:date ;
            dbo:directed dbr:Entertaining_Mr_Sloane ;
            dbo:occupation ?profession .

  # Match the spouse's profession with the director's profession
  ?spouse dbo:occupation ?sameProfession .
  
  FILTER (?sameProfession = ?profession)

  # Return the spouse's name
  ?spouse foaf:name ?spouseName .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
216,59,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?playerInCoach WHERE {
  ?playerInCoach a dbo:SoccerPlayer ;
                 a dbo:SportsManager ;
                 a dbo:SoccerManager .

  ?coachRole dbo:player ?playerInCoach .
  ?coachRole dbo:coachedBy dbr:Džemal_Berberović .

  ?organisation a dbo:Organization ;
                a dbo:SportsClub ;
                a dbo:SoccerClub .

  ?playerInCoach dbo:memberOf ?organisation .

  OPTIONAL {
    ?reference a dbo:Organization ;
               a dbo:SoccerClub .
    ?reference dbo:coachOf dbr:Croatia_U21 .
    ?coachRole dbo:coachedBy ?reference .
  }
}
```",6,14,7,3,2,3,3,71,0,0,3,0,0.0,0
582,69,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v7 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/ontology/team> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?teamNickname ?residence WHERE {
  # Hajime Moriyasu's team nickname
  ?hajimeMoriyasu a dbo:SoccerManager ;
                  dbo:managedTeam ?team .
  ?team dbo:nickname ?teamNickname .

  # Scientist referencing Hirotaka Sugawara and their residence
  ?scientist dbo:reference dbr:Hirotaka_Sugawara ;
             dbo:residenceLocation ?residence .

  # Masami Nagasawa's father as an athlete, soccer manager, and sports manager
  ?masamiNagasawa dbo:father ?father .
  ?father a dbo:Athlete , dbo:SoccerManager , dbo:SportsManager .
}",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
443,26,test,Give me the landmark at elevation of the award of William Shepherd and birthplace of the work of yes and birthplace of Ulf Lundell.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> ""yes""@en . ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark WHERE {
  # Find the award associated with William Shepherd and its elevation
  ?award dbo:recipient dbr:William_Shepherd .
  ?award dbo:elevation ?elevation .

  # Find a landmark at that elevation
  ?landmark dbo:elevation ?elevation .

  # Find the work by Yes and its birthplace
  ?work dbo:creator dbr:Yes .
  ?work dbo:birthPlace ?yesBirthplace .

  # Find Ulf Lundell's birthplace
  dbr:Ulf_Lundell dbo:birthPlace ?ulfLundellBirthplace .

  # Ensure the landmark is related to both Yes and Ulf Lundell's birthplaces
  FILTER (?yesBirthplace = ?ulfLundellBirthplace)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
892,61,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and landmark at elevation of the award of the member of E-girls.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity
WHERE {
  ?entity a dbo:Region ;
          a dbo:Settlement ;
          a dbo:AdministrativeRegion ;
          dbo:country dbr:Italy .

  ?party a dbo:PoliticalParty, dbo:Organization ;
         dbo:member dbr:Andrea_Cozzolino .
  
  ?administration dbo:hasMember ?entity ;
                  dbo:hasParty ?party .

  ?landmark dbo:elevation ?elevation .
  ?award dbo:recipient ?member .
  ?member a dbo:E-girls_member .
  FILTER (?elevation = ?awardElevation)

  OPTIONAL { ?entity dbo:hasLandmark ?landmark }
}
```",6,12,7,3,2,3,3,71,0,0,2,0,0.0,0
933,64,test,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to Alan Warner and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfTheBand
WHERE {
  # The Ramones and their band
  dbr:The_Ramones a dbo:MusicalArtist ;
                  dbo:bandMember ?member .
  
  ?member dbo:associatedBand ?band1 .
  FILTER (?band1 != dbr:The_Ramones)
  
  ?band1 a dbo:MusicalArtist, dbo:Artist .

  # Alan Warner and his band
  OPTIONAL {
    ?band1 dbo:reference ?alanWarner .
    ?alanWarner rdfs:label ""Alan Warner""@en .
    
    ?alanWarner dbo:associatedBand ?band2 .
    FILTER (?band2 != ?band1)
    
    ?band2 a dbo:Group, dbo:MusicalArtist, dbo:Organization .

    # Person born on 1947-04-21
    OPTIONAL {
      ?band2 dbo:member ?person .
      ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
              a dbo:MusicalArtist .
    }
  }

  # Return the band of the band
  ?band1 dbo:associatedBand ?bandOfTheBand .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
888,19,test,"Give me the commander in the force, that is a societal event and an event, of Serhiy Kotenko and awardee of the award of the commander in 2022 Ukrainian eastern counteroffensive.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . ?v0 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commanderRole ?event ?award
WHERE {
  # Identify Serhiy Kotenko and his role as a commander in an event
  ?person dbo:name ""Serhiy Kotenko""@en .
  ?person dbo:role ?commanderRole .
  
  # Link the commander role to a societal event
  ?commanderRole dbo:relatedEvent ?event .

  # Identify the award related to the 2022 Ukrainian eastern counteroffensive
  ?award dbo:dateReceived ?date .
  ?award dbo:recipient ?person .
  FILTER (YEAR(?date) = 2022)
  
  # Ensure the event is related to the Ukrainian eastern counteroffensive
  ?event dbp:title ?title .
  FILTER CONTAINS(LCASE(?title), ""ukrainian eastern counteroffensive"")
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
791,65,test,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?predecessor
WHERE {
  # Emperor Go-Shirakawa's child
  ?child1 dbo:spouse* db:Emperor_Go-Shirakawa .
  
  # Child of that child who is an office holder and royalty
  ?grandchild dbo:parent ?child1 ;
              a dbo:OfficeHolder, dbo:Royalty .

  # Predecessor of the grandchild
  ?predecessor dbo:successor ?grandchild .

  # Emperor Takakura's child who is royalty
  ?child2 dbo:spouse* db:Emperor_Takakura .
  
  # Father of that child, who is a royalty
  ?father dbo:parent ?child2 ;
          a dbo:Royalty .

  # Spouse relationship through Emperor Takakura
  ?spouse1 dbo:spouse ?spouse2 .
  ?spouse2 dbo:spouse* db:Emperor_Takakura .

  # Linking the predecessor to the father of Emperor Takakura's child
  FILTER (?predecessor = ?father)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
965,68,test,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . ?v6 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfRoyalty
WHERE {
  # Louise Mountbatten's parent
  dbr:Louise_Mountbatten dbo:parent ?louiseParent .

  # Spouse of Louise Mountbatten's parent
  ?spouseOfLouiseParent dbp:spouse ?louiseParent .
  
  # Politician born on 1854-05-24
  ?politician dbp:birthday ""1854-05-24""^^xsd:date ;
              dbo:occupation dbr:Politician .

  # Child of the politician who is royalty
  ?childOfPolitician dbo:parent ?politician ;
                    dbo:royalty true .
  
  # Spouse of the child's parent (which is the politician)
  ?spouseOfChildParent dbp:spouse ?politician .

  # Parent of Prince George of Battenberg
  dbr:Prince_George_of_Battenberg dbo:birthName ""Prince George of Battenberg"" ;
                                 dbo:parent ?princeGeorgeParent .
  
  # The parent we are looking for is the spouse of the child's parent and also the parent of Prince George
  ?spouseOfChildParent = ?parentOfRoyalty .
  ?parentOfRoyalty = ?princeGeorgeParent .
}
```",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
865,64,test,"Give me the father of the child of the father of Abul Maal Abdul Muhith and native of the residence, that is a country, of the person decedent at Patna and father of AK Abdul Momen.",SELECT ?result WHERE { <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v6 . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfChild
WHERE {
  # Abul Maal Abdul Muhith's father
  ?abulMaalMuhith a dbo:Person ;
                  dbo:father ?fatherOfAbulMaal .

  # Sibling of Abul Maal Abdul Muhith (child of his father)
  ?sibling a dbo:Person ;
           dbo:father ?fatherOfAbulMaal ;
           rdfs:label ?siblingLabel .
  
  # AK Abdul Momen's father
  ?akAbdulMomen a dbo:Person ;
                dbo:father ?fatherOfAK .

  # Person who decedent at Patna
  ?decedent a dbo:Person ;
            dbo:placeOfBirth ?patnaResidence ;
            dbo:deathPlace dbr:Patna .

  # Native of the residence (country) of the person who decedent at Patna
  ?fatherOfAK dbo:nationality ?nativeCountry .
  FILTER (?nativeCountry = ?patnaResidence)

  # Father of AK Abdul Momen should be the father of the sibling of Abul Maal Abdul Muhith
  FILTER (?fatherOfAK = ?fatherOfChild)
  
  BIND(?fatherOfAK AS ?fatherOfChild)
}
ORDER BY ?siblingLabel",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
715,59,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander
WHERE {
  # Find a commander in a military conflict involving a native of Morocco
  ?conflict dbo:commander ?commander .
  ?native dbo:nationality dbr:Morocco ;
          dbo:militaryConflict ?conflict .

  # Ensure the same person is also a commander related to an office holder who was a politician and president in 1933 Spanish general election
  ?officeHolder dbp:position ""President"" ;
               dbo:electionDate ?electionDate .
  FILTER(YEAR(?electionDate) = 1933)
  ?commander2 dbo:commander ?officeHolder .

  # Ensure the same person is involved in both roles
  FILTER(?commander = ?commander2)

  # Additional filters to ensure office holder is a politician
  ?officeHolder rdf:type dbr:Politician .
}
```",6,10,7,3,2,3,3,71,0,0,4,0,0.0,0
122,8,test,"Give me the band of the reference, that is a musical artist and an artist, to Gift of Gab and band member of Lyrics Born.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Gift of Gab""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Lyrics_Born> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band
WHERE {
  ?giftOfGab dbo:member ?band .
  ?lyricsBorn dbo:member ?band .

  FILTER(?giftOfGab = dbpedia:Gift_of_Gab)
  FILTER(?lyricsBorn = dbpedia:Lyrics_Born)

  ?band a dbo:MusicalArtist ;
        a dbo:Artist .
}
```

### Explanation

- **PREFIX**: Define prefixes for common DBpedia properties.
- **SELECT DISTINCT ?band**: Retrieve distinct bands that meet the criteria.
- **WHERE**:
  - `?giftOfGab dbo:member ?band .`: Gift of Gab is a member of the band.
  - `?lyricsBorn dbo:member ?band .`: Lyrics Born is also a member of the same band.
  - **FILTER**: Ensure that the individuals are specifically Gift of Gab and Lyrics Born using their DBpedia URIs.
  - `?band a dbo:MusicalArtist ; a dbo:Artist .`: The band must be both a musical artist and an artist.

This query will return the band that includes both artists as members, fulfilling the conditions specified in your question.",3,5,4,2,2,2,2,9,0,0,2,0,0.0,0
976,56,test,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as the birth name of Naci Bostancı and office of Meral Akşener.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeLeader ?officeNaciBostanci ?officeMeralAksener
WHERE {
  # Office of the leader of the Grand National Assembly of Turkey
  ?leader a dbo:Politician ;
          dbo:positionHeld ?officeLeader .
  ?officeLeader dbo:organization dbr:Grand_National_Assembly_of_Turkey .

  # Office of Naci Bostancı (using birth name)
  ?naciBostanci a dbo:Politician ;
                foaf:name ""Naci Bostancı""@en ;
                dbo:positionHeld ?officeNaciBostanci .
  
  # Office of Meral Akşener
  ?meralAksener a dbo:Politician ;
                foaf:name ""Meral Akşener""@en ;
                dbo:positionHeld ?officeMeralAksener .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
507,66,test,"Give me the professional in the profession of the person born on 1966-02-18 and spouse of the person born as Anne Voase Coates and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/director> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v1 <http://dbpedia.org/property/occupation> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional (SAMPLE(?movie) AS ?movieTitle)
WHERE {
  # Person born on 1966-02-18
  ?person1 dbo:birthday ""1966-02-18""^^xsd:date .
  
  # Anne Voase Coates and her spouse
  dbr:Anne_Voase_Coates dbo:spouse ?anneSpouse .

  # Profession of the person born on 1966-02-18
  ?person1 dbo:profession ?professional .

  # Director of a movie with Beryl Reid
  ?movie dbo:director ?director .
  ?movie dbo:starring dbr:Beryl_Reid .
  
  # Linking director to spouse of Anne Voase Coates
  ?anneSpouse = ?director .
  
  # Ensuring the person born on 1966-02-18 is related to the director
  ?person1 dbp:spouse ?anneSpouse .
}
GROUP BY ?professional",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
98,26,test,"Give me the entity in the region, that is a country, of Philippine Standard Time and birth place of Paolo Ballesteros and region of the time zone of Lopez Jaena.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  # Philippine Standard Time country
  OPTIONAL { 
    dbr:Philippine_Standard_Time dbo:timeZoneIn dbr:Philippines .
    BIND(dbr:Philippines AS ?country)
  }
  
  # Paolo Ballesteros's birthplace
  OPTIONAL {
    dbr:Paolo_Ballesteros dbo:birthPlace ?birthPlace .
    ?birthPlace dbo:country ?country .
  }

  # Lopez Jaena's time zone region
  OPTIONAL {
    dbr:Lopez_Jaena dbo:timeZoneIn ?timeZone .
    ?timeZone dbo:region ?region .
    ?region dbo:country ?country .
  }
}
```",5,6,6,2,3,2,3,28,0,1,2,0.0,0.0,0
465,56,test,"Give me the successor of the child of Alfonso I d'Este and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successorOfChild1 ?successorOfChild2
WHERE {
  # Alfonso I d'Este's child and their successor who is royalty
  ?childAlfonso dbo:parent dbr:Alfonso_I_d%27Este ;
               dbo:succesor ?successorOfChild1 .
  FILTER (dbo:royalty ?successorOfChild1) .

  # Charles Orlando, Dauphin of France's parent and their spouse
  ?charlesOrlando dbo:parent ?parentCharlesOrlando ;
                  rdfs:label ""Charles Orlando""@en .
  ?parentCharlesOrlando dbo:spouse dbr:Archduchess_Barbara_of_Austria .

  # Successor of the child (who is royalty) of Charles Orlando's parent
  ?childParentCharlesOrlando dbo:parent ?parentCharlesOrlando ;
                             dbo:succesor ?successorOfChild2 .
  FILTER (dbo:royalty ?successorOfChild2) .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
273,18,test,Give me the spouse of the child of the child of Edoardo Agnelli (1831-1871) and parent of the alumnus of University of Turin.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Edoardo Agnelli (1831-1871)
  ?edoardo a dbo:Person ;
           foaf:name ""Edoardo Agnelli"" ;
           dbo:birthYear ?birthYear .
  FILTER (?birthYear = 1831)

  # Step 2: Find his child
  ?child dbo:parent ?edoardo .

  # Step 3: Find the grandchild
  ?grandchild dbo:parent ?child .

  # Step 4: Determine the spouse of the grandchild
  ?spouse dbo:spouse ?grandchild .

  # Step 5: Check if the spouse has a parent who is an alumnus of the University of Turin
  ?almaMater dbp:alumni ?parentSpouse .
  ?parentSpouse dbo:spouse ?spouse ;
                dbo:almaMater ?universityOfTurin .
  FILTER (str(?universityOfTurin) = ""University of Turin"")
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
124,59,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  ?war a dbo:Event ;
       dbo:type/dbo:subClassOf* dbo:MilitaryConflict ;
       dbo:type/dbo:subClassOf* dbo:SocietalEvent .

  ?person dbo:award dbr_British_South_Africa_Company_Medal ;
          dbo:commanderIn ?war .

  ?reference a dbo:Organization ;
             dbo:militaryUnit dbr_A_Battery,_Royal_Australian_Artillery ;
             dbo:nationality dbr_Australia .

  ?war dbo:militaryForce ?militaryForce .
}
```",6,14,7,3,2,3,3,71,0,0,10,0,0.0,0
791,68,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v7 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse
WHERE {
  # Emperor Takakura and his spouse
  dbr:Takakura_Emperor dbo:spouse ?empressTakakura .
  
  # Child of Emperor Takakura who is royalty
  ?child dbo:parent dbr:Takakura_Emperor ;
         a dbo:Monarch .

  # Predecessor of the child's child, who holds an office and is royalty
  ?grandChild dbo:parent ?child ;
              a dbo:Monarch .
  
  ?predecessor dbo:succeededBy ?grandChild ;
               a dbo:Monarch ;
               dbo:officeHolder true .

  # Spouse of the spouse (who is royalty)
  ?empressTakakura dbo:spouse ?spouseOfSpouse .
  ?spouseOfSpouse a dbo:Monarch .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
976,71,test,"Give me the office of the person born as the birth name of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v8 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/property/leader> ?v5 . ?v2 <http://dbpedia.org/property/office> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthNameOffice ?mayorOffice ?partyOffice ?leaderOffice
WHERE {
  # Naci Bostancı's birth name and office
  dbr:Naci_Bostancı dbo:birthName ?person .
  ?person dbo:nationality dbr:Turkey ;
          dbo:officeHeld ?birthNameOffice .

  # Office of the mayor who is a politician and Turkish
  ?mayor dbo:nationality dbr:Turkey ;
         dbo:occupation dbr:Politician ;
         dbo:officeHeld ?mayorOffice .
  FILTER(?person = ?mayor)

  # Reference to an organization and political party in Turkey associated with Millet İttifakı
  ?party a dbo:PoliticalParty, dbo:Organization ;
         dbo:nationality dbr:Turkey ;
         dbp:associatedWith dbr:Millet_İttifakı .
  ?party dbo:officeHeld ?partyOffice .

  # Office of the leader (politician) of an administration associated with Kemal Kılıçdaroğlu
  dbr:Kemal_Kılıçdaroğlu dbo:nationality dbr:Turkey ;
                        dbo:occupation dbr:Politician ;
                        dbo:officeHeld ?leaderOffice .
  ?administration a dbo:Organization ;
                  dbo:leader dbr:Kemal_Kılıçdaroğlu .
}
```",9,17,10,3,3,3,3,71,0,0,1,0,0.0,0
582,65,test,"Give me the figure known as the nickname of Japan national football team and reference to the residence of Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nickname ?residence ?fatherRole ?childName
WHERE {
  # Nickname of Japan national football team
  dbr:Japan_national_football_team dbo:nickname ?nickname .

  # Residence of Hirotaka Sugawara
  dbr:Hirotaka_Sugawara dbo:residenceLocation ?residence .

  # Kazuaki Nagasawa's father roles
  OPTIONAL {
    ?father a dbo:Athlete ;
           a dbo:SoccerManager ;
           a dbo:SportsManager .
    ?father dbo:child dbr:Kazuaki_Nagasawa .
  }

  # Child of Kazuaki Nagasawa
  OPTIONAL {
    ?child dbo:parent dbr:Kazuaki_Nagasawa .
    ?child rdfs:label ?childName .
    FILTER (lang(?childName) = ""en"")
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
216,66,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:SoccerPlayer .
  ?person a dbo:SportsManager .
  ?person a dbo:SoccerManager .

  # Bosnia and Herzegovina national under-18 football team
  ?team1 dbr:Bosnia_and_Herzegovina_national_under-18_football_team ;
         dbo:player ?person ;
         dbo:coach ?person .

  # Croatia national under-21 football team
  ?team2 dbr:Croatia_national_under-21_football_team ;
         dbo:player ?person ;
         dbo:coach ?person .

  # Birth before Pavel Vezhinov's death
  ?person dbp:birthDate ?birth .
  ?vezhinov dbp:deathDate ?death .
  FILTER (?birth < ?death)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
281,27,test,"Give me the awardee of the award of Alfred Warden and commander in New Guinea campaign and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?wardenAwardee ?cosgraveAwardee WHERE {
  # Alfred Warden's award and its awardee
  ?award1 dbo:recipient ?wardenAwardee .
  ?award1 dbo:name ""Alfred Warden"" .

  OPTIONAL {
    ?wardenAwardee dbo:participatedInMilitaryConflict ?newGuineaCampaign .
    ?newGuineaCampaign dbo:name ""New Guinea campaign"" .
  }

  # Lawrence Moore Cosgrave's award related to a military conflict and its awardee
  ?award2 dbo:recipient ?cosgraveAwardee .
  ?award2 dbo:name ""Lawrence Moore Cosgrave"" .

  OPTIONAL {
    ?militaryConflict dbo:awardedTo ?cosgraveAwardee .
    ?militaryConflict rdf:type dbo:MilitaryConflict .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
236,19,test,"Give me the party member of the administration of the reference, that is an office holder and a politician, to James Madison and party member of the administration, that is an organisation, of John Adams.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/party> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?madisonPartyMember ?adamsPartyOrg
WHERE {
  # James Madison's administration party member who is an office holder and a politician
  ?madisonAdministration dbo:president dbr:James_Madison .
  ?madisonAdministration dbo:member ?madisonPartyMember .
  ?madisonPartyMember rdf:type dbo:OfficeHolder ;
                     rdf:type dbo:Politician .

  # John Adams' administration party member organization
  ?adamsAdministration dbo:president dbr:John_Adams .
  ?adamsAdministration dbo:partyOrganization ?adamsPartyOrg .
}
```",5,8,6,3,2,3,2,20,0,0,19,0,0.0,0
826,59,test,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Louis I and his reference (a royalty)
  dbr:Louis_I_of_Bavaria a dbo:Monarch ;
    dbo:spouse ?spouse .

  # Spouse of the child of Johann Sebastian Bach's father
  dbr:Johann_Sebastian_Bach dbo:father ?baptistBach .
  ?baptistBach dbo:child ?childOfBaptist .
  ?childOfBaptist dbo:spouse ?spouse .

  # The child of the spouse who is a royalty
  ?spouse dbo:child ?royaltyChild .

  # Successor of this royalty child
  ?royaltyChild dbo:successor ?successor .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
170,26,test,Give me the entity in the work of International Energy Agency and birth place of Era Ziganshina and domain of the profession of John Scholey.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v1 . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInIEAWork ?birthPlaceEraZiganshina ?professionDomainJohnScholey
WHERE {
  # Entity in the work of International Energy Agency
  OPTIONAL {
    ?iea dbo:work ?entityInIEAWork .
    FILTER(CONTAINS(LCASE(STR(?iea)), ""international energy agency""))
  }

  # Birthplace of Era Ziganshina
  OPTIONAL {
    dbr:Era_Ziganshina dbo:birthPlace ?birthPlaceEraZiganshina .
  }
  
  # Domain of the profession of John Scholey
  OPTIONAL {
    dbr:John_Scholey dbo:profession ?profession .
    ?profession dbo:fieldOfStudy ?professionDomainJohnScholey .
  }
}
```",5,5,6,2,3,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
456,65,test,"Give me the spouse of the actor of Pacific Drive and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and band of the band, that is a musical artist, of Dean Brody.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?alterEgo ?band
WHERE {
  # Actor of Pacific Drive
  ?actor dbo:workIn dbr:Pacific_Drive .
  
  # Spouse of the actor
  ?actor dbo:spouse ?spouse .

  # Alter ego of Lamont Cranston (The Shadow)
  dbr:Lamont_Cranston dbo:fictionalAlterEgo ?alterEgo ;
                      rdf:type dbo:FictionalCharacter .

  # Band of Dean Brody
  dbr:Dean_Brody dbo:band ?band .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
791,63,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of Emperor Takakura.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v3 <http://dbpedia.org/ontology/spouse> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouseOfSpouse
WHERE {
  # Step 1: Identify Emperor Takakura
  dbr:Takakura_of_Japan a dbo:Monarch ;
                        dbo:child ?child .

  # Step 2: Find his child who is royalty and predecessor
  ?child a dbo:Monarch ;
         dbo:predecessor ?predecessor .

  # Step 3: Determine the spouse of this child
  ?child dbo:spouse ?spouse .

  # Step 4: Identify the spouse's spouse who is royalty
  ?spouse dbo:spouse ?spouseOfSpouse .
  
  FILTER (?spouseOfSpouse != dbr:Takakura_of_Japan) # Ensure it's not Takakura himself

  # Ensure all involved are royalty
  FILTER (?child a dbo:Monarch && ?predecessor a dbo:Monarch && ?spouse a dbo:Monarch && ?spouseOfSpouse a dbo:Monarch)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
417,63,test,"Give me the child of the father of Frederick IX of Denmark and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?childOfFather ?spouse ?royaltyChildKnud ?royaltyGrandchildMecklenburg
WHERE {
  # Frederick IX of Denmark's father and his child
  ?frederickIX dbo:father ?fatherFrederickIX .
  ?fatherFrederickIX dbo:child ?childOfFather .

  # Spouse of the parent (father) of the child of Frederick IX's father
  ?fatherFrederickIX dbp:spouse ?spouse .

  # Child of Knud, Hereditary Prince of Denmark
  ?knud dbp:child ?royaltyChildKnud .
  
  # Child of the child of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin
  ?frederickFrancisIII dbo:child ?childFrederickFrancisIII .
  ?childFrederickFrancisIII dbo:child ?royaltyGrandchildMecklenburg .

  # Ensure all are royalty
  ?childOfFather a dbo:Monarch ;
                dbp:title ?titleChildOfFather .
  ?spouse a dbo:Monarch ;
          dbp:title ?titleSpouse .
  ?royaltyChildKnud a dbo:Monarch ;
                    dbp:title ?titleRoyaltyChildKnud .
  ?royaltyGrandchildMecklenburg a dbo:Monarch ;
                                dbp:title ?titleRoyaltyGrandchildMecklenburg .

  # Bind the final result
  BIND(?spouse AS ?result)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
124,63,test,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  ?war a dbo:MilitaryConflict ;
       a dbo:SocietalEvent .
  
  ?battery dbr:A_Battery,_Royal_Australian_Artillery ;
           dbo:nationality dbr:Australia ;
           dbo:militaryUnitOf ?force .

  ?force dbo:participatedIn ?war .
  
  ?frank dbr:Frank_Rhodes_(British_Army_officer) ;
         dbo:militaryForce ?force1 .
  
  ?kitchener dbr:Herbert_Kitchener,_1st_Earl_Kitchener ;
             dbo:militaryForce ?force2 .

  ?force1 dbo:participatedIn ?war .
  ?force2 dbo:participatedIn ?war .

  ?commander dbo:commanded ?force .
}
```",7,17,8,3,3,3,3,71,0,0,9,0,0.0,0
456,62,test,"Give me the band of Alan Doyle and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://dbpedia.org/property/starring> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?fictionalCharacter ?spouse ?movieOrShow
WHERE {
  # Alan Doyle's band
  dbr:Alan_Doyle dbo:memberOf ?band .

  # Lamont Cranston as a fictional character
  dbr:Lamont_Cranston dbo:fictionalWork dbr:The_Shadow .
  
  # Ross Newton's work in movies or TV shows
  dbr:Ross_Newton dbo:spouse ?spouse .
  ?movieOrShow dbo:starring ?spouse ;
              (dbo:genre/dbo:subClassOf* dbr:Film OR dbo:genre/dbo:subClassOf* dbr:Television_Show) .

  # Linking the fictional character to a movie or TV show
  OPTIONAL { 
    ?movieOrShow dbo:fictionalWork dbr:Lamont_Cranston .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
417,68,test,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v4 <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName
WHERE {
  # Knud, Hereditary Prince of Denmark
  ?knud a dbo:Person ;
        dbp:name ""Knud, Hereditary Prince of Denmark""@en .
  
  # Child of Knud
  ?child1 dbo:parent ?knud ;
          a dbo:Person .

  # Spouse of the child who is royalty
  ?spouse1 dbo:spouse ?child1 ;
           a dbo:RoyalFamilyMember .

  # Frederick Francis III, Grand Duke of Mecklenburg-Schwerin
  ?frederick a dbo:Person ;
             dbp:name ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin""@en .
  
  # Child of the child of Frederick who is royalty
  ?child2 dbo:parent ?grandChild1 ;
          a dbo:RoyalFamilyMember .

  ?grandChild1 dbo:parent ?frederick ;
               a dbo:Person .

  # Leader of Colony of Greenland who is royalty
  ?leader a dbo:Person ;
          dbp:position ""Leader""@en ;
          dbo:country ""Colony of Greenland"" ;
          a dbo:RoyalFamilyMember .
  
  # Father of the leader
  ?father1 dbo:child ?leader .

  # Connect all parts together
  ?spouse1 = ?parentOfChild2 .
  ?parentOfChild2 dbo:parent ?child2 .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
839,65,test,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of the band, that is a musical artist, of Charlie Huhn.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/bandMember> ?v6 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?kevinBand ?peterBand ?charlieBand
WHERE {
  # Kevin Richard Russell's band
  ?kevinArtist a dbo:MusicalArtist ;
               foaf:name ""Kevin Richard Russell""@en .
  ?kevinArtist dbo:musicalArtist ?kevinBand .

  # Peter Schorowsky's band (both a band and a group)
  ?peterMember a dbo:Person ;
               foaf:name ""Peter Schorowsky""@en .
  ?peterMember dbo:bandMember ?peterBand .
  ?peterBand a dbo:Band, dbo:Group .

  # Charlie Huhn's band
  ?charlieArtist a dbo:MusicalArtist ;
                 foaf:name ""Charlie Huhn""@en .
  ?charlieArtist dbo:musicalArtist ?charlieBand .
}",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
124,65,test,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForceKitchener ?militaryConflictAFieldBattery ?militaryForceMedalAwardee
WHERE {
  # Herbert Kitchener's military forces and conflicts
  dbr:Herbert_Kitchener_1st_Earl_Kitchener dbo:militaryCommanderOf ?forceKitchener .
  ?forceKitchener a dbo:MilitaryConflict ;
                  dbo:socialEvent ?societalEventKitchener .

  # A Field Battery, Royal Australian Artillery's war involvement
  dbr:A_Field_Battery_Royal_Australian_Artillery dbo:militaryForceOf ?warAFieldBattery .
  ?warAFieldBattery a dbo:MilitaryConflict ;
                    dbo:socialEvent ?societalEventAFieldBattery .

  # Awardee of British South Africa Company Medal's military force
  ?medalAwardee dbo:recipientOf dbr:British_South_Africa_Company_Medal .
  ?medalAwardee dbo:militaryForceOf ?militaryForceMedalAwardee .
  ?militaryConflictMedalAwardee a dbo:MilitaryConflict ;
                               dbo:socialEvent ?societalEventMedalAwardee .

  # Ensure all are societal events and military conflicts
  FILTER (?societalEventKitchener != '' && ?societalEventAFieldBattery != '' && ?societalEventMedalAwardee != '')
}
```",7,14,8,3,3,3,3,71,0,0,9,0,0.0,0
715,58,test,"Give me the commander in the force of Francisco Largo Caballero and commander in Rif War and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?rifWarCommander ?officeLeader
WHERE {
  # Commander in the force of Francisco Largo Caballero
  ?force dbo:commander ?commander .
  ?force dbo:leader dbr:Franco_Largo_Caballero .

  # Commander in Rif War
  ?rifWar dbo:commander ?rifWarCommander .
  ?rifWar rdfs:label ""Rif War""@en .

  # Leader of an office (government agency and organization)
  ?office dbo:leader ?officeLeader ;
          a dbo:GovernmentAgency ;
          a dbo:Organization .

  # Reference to Carlos Franco Iribarnegaray
  FILTER (?commander = dbr:C_Franco_Iribarnegaray || 
          ?rifWarCommander = dbr:C_Franco_Iribarnegaray ||
          ?officeLeader = dbr:C_Franco_Iribarnegaray)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
212,9,test,"Give me the birthplace of the professional, that is a musical artist and an artist, in Singer, rapper, CEO, Facilities and Project Manager and birthplace of the professional in .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/occupation> ""Singer, rapper, CEO, Facilities and Project Manager""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?birthPlace WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:singer true .
  ?person dbo:rapper true .
  ?person dbo:CEO true .
  ?person dbo:FacilitiesAndProjectManager true .
  
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
791,66,test,"Give me the spouse of the spouse, that is a royalty, of Emperor Takakura and predecessor of the child of Emperor Takakura and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v6 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalSpouse
WHERE {
  # Step 1: Find Emperor Takakura's spouse
  ?emperorTakakura a dbo:Monarch ;
                   foaf:surname ""Takakura"" .
  
  ?spouseOfEmperorTakakura dbo:spouse ?emperorTakakura .

  # Step 2: Find the spouse of that spouse who is royalty
  ?royalSpouse dbo:spouse ?spouseOfEmperorTakakura ;
               a dbo:Monarch .
  
  # Step 3: Predecessor of the child of Emperor Takakura and father of the child
  ?childOfEmperorTakakura dbo:parent ?emperorTakakura ;
                         dbo:predecessor ?predecessor .

  ?fatherOfChild dbo:parent ?childOfEmperorTakakura .
  
  # Step 4: Father of the child who is royalty and an office holder, of Emperor Antoku
  ?antoku a dbo:Monarch ;
          foaf:surname ""Antoku"" .
  
  ?officeHolderParent dbo:parent ?childOfAntoku ;
                      a dbo:Monarch ;
                      dbo:officeHolder ?office .

  # Step 5: Combine these relationships to find the final answer
  ?finalSpouse dbo:spouse ?royalSpouse .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
507,69,test,"Give me the professional in the profession of the person born on 1966-02-18 and spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v7 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional
WHERE {
  # Find the person born on 1966-02-18
  ?person1 dbp:birthday ""1966-02-18""^^xsd:date .
  
  # Find Anne V. Coates by birth name
  ?anne dbr:Anne_V._Coates ;
        dbo:birthName ""Anne V. Coates""@en .

  # Find the spouse of the person born on 1966-02-18
  ?person1 dbp:spouse ?spouse .
  
  # Ensure the spouse has a profession
  ?spouse dbo:profession ?professional .

  # Find movies directed by Anne V. Coates featuring Beryl Reid
  ?movie dbo:director ?anne ;
         dbo:starring dbr:Beryl_Reid ;
         rdf:type dbo:Film ;
         rdf:type dbo:CreativeWork .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
417,62,test,"Give me the child of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfAlexandrine ?spouseOfParent ?knudsChild ?leaderFather
WHERE {
  # Alexandrine of Mecklenburg-Schwerin's child and spouse who is royalty
  ?alexandrine dbo:child ?childOfAlexandrine .
  ?alexandrine dbp:name ""Alexandrine of Mecklenburg-Schwerin"" .

  ?spouseOfParent dbo:spouse ?alexandrine ;
                  a dbo:Monarch .

  # Knud, Hereditary Prince of Denmark's child
  ?knud dbo:child ?knudsChild .
  ?knud dbp:name ""Knud, Hereditary Prince of Denmark"" .

  # Leader of Colony of Greenland and their father who is royalty
  ?leader dbo:positionTitle ""Leader of the Colony of Greenland"" ;
          dbo:father ?leaderFather .
  
  ?leaderFather a dbo:Monarch .
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
926,59,test,Give me the father of the father of the spouse of Neşerek Kadın and successor of the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandfather
WHERE {
  # Neşerek Kadın's spouse
  ?spouse1 dbo:spouse* <http://dbpedia.org/resource/Neşerek_Kadın> .
  
  # Father of the father (grandfather) of Neşerek Kadın's spouse
  ?father1 dbo:child ?spouse1 .
  ?grandfather dbo:child ?father1 .

  # Şermi Kadın's spouse
  ?spouse2 dbo:spouse* <http://dbpedia.org/resource/Şermi_Kadın> .

  # Child of Şermi Kadın's spouse
  ?child dbo:parent ?spouse2 .
  
  # Successor of the child
  ?successor dbo:predecessor ?child .

  # Linking grandfather and successor
  ?grandfather dbp:succeededBy ?successor .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
36,27,test,Give me the actor of Being Mrs Elliot and person born in the birth year of Deanne Bray and person born as the birth name of Ayo Makun.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor ?personBornInYear ?personWithBirthName
WHERE {
  # Actor of ""Being Mrs Elliot""
  ?movie dbo:title ""Being Mrs Elliot""@en .
  ?movie dbo:starring ?actor .

  # Deanne Bray's birth year
  dbr:Deanne_Bray dbo:birthday ?deanneBrayBirthday .
  BIND(YEAR(?deanneBrayBirthday) AS ?birthYear)

  # People born in the same year as Deanne Bray
  ?personBornInYear dbo:birthday ?birthday .
  FILTER(YEAR(?birthday) = ?birthYear)

  # Ayo Makun's birth name
  dbr:Ayo_Makun dbp:birthName ?ayoMakunBirthName .

  # People born with the same name as Ayo Makun's birth name
  ?personWithBirthName dbo:birthName ?ayoMakunBirthName .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
926,60,test,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of the father of the spouse of Neşerek Kadın.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child
WHERE {
  # Beyhan Sultan and her parent Mustafa III
  dbr:Beyhan_Sultan a dbo:Person ;
    dbo:parent dbr:Mustafa_III .

  # Check if Mustafa III is royalty
  OPTIONAL { dbr:Mustafa_III dbo:royaltyStatus ?mustafaRoyalty . }

  # Neşerek Kadın and her spouse
  ?nefernekadın a dbo:Person ;
    dbo:spouse ?spouse .

  # Find the father of Neşerek Kadın's spouse
  ?spouse dbo:parent ?fatherOfSpouse .

  # Find the father of the father of Neşerek Kadın's spouse
  ?fatherOfSpouse dbo:parent ?grandFatherOfSpouse .

  # Check if this ancestor is royalty
  OPTIONAL { ?grandFatherOfSpouse dbo:royaltyStatus ?ancestorRoyalty . }

  # Find a child who is also royalty
  ?grandFatherOfSpouse dbo:child ?child .
  OPTIONAL { ?child dbo:royaltyStatus ?childRoyalty . }
  
  FILTER (?mustafaRoyalty = ""Royal"" && ?ancestorRoyalty = ""Royal"" && ?childRoyalty = ""Royal"")
}",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
124,56,test,"Give me the military force of Battle of Tamai and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?tamaiForce ?conflictForce
WHERE {
  # Military force of the Battle of Tamai
  OPTIONAL {
    dbr:Battle_of_Tamai dbo:militaryConflicts [
      a dbo:MilitaryConflict ;
      dbo:participatingMilitaryUnit ?tamaiForce .
    ] .
  }

  # Person born on 1850-06-24
  ?person dbp:birthday ""1850-06-24""^^xsd:date .

  # Societal event and military conflict involving the person
  OPTIONAL {
    ?conflict dbo:commander ?person ;
              a dbo:MilitaryConflict, dbo:SocietalEvent .
    
    # War related to A Field Battery, Royal Australian Artillery
    ?conflict dbo:participatingMilitaryUnit dbr:A_Field_Battery,_Royal_Australian_Artillery .

    # Military force of the conflict
    ?conflict dbo:participatingMilitaryUnit ?conflictForce .
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
874,20,test,"Give me the band of the band member of the band, that is an organisation, of Mark Read (singer) and band of the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMarkRead ?bandHoraceAndy
WHERE {
  # Find Mark Read's band that is an organization
  ?markRead a dbo:Singer ;
            dbo:member ?bandMember .
  ?bandMember dbo:band ?bandMarkRead .
  FILTER (EXISTS { ?bandMarkRead a dbo:Organization }).

  # Find Horace Andy's work and ensure he is both an artist and a musical artist
  ?horaceAndy a dbo:Singer ;
              dbo:artist ?work .
  ?work a dbo:Work .
  ?horaceAndy a dbo:Artist, dbo:MusicalArtist .

  # Find the band associated with Horace Andy's work
  ?bandHoraceAndy dbo:member ?horaceAndy .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
124,60,test,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  # Find the person born on 1850-06-24
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  
  # Identify wars that are societal events and military conflicts
  ?war a dbo:War ;
       rdfs:label ?warLabel .

  FILTER CONTAINS(LCASE(?warLabel), ""societal event"") &&
        CONTAINS(LCASE(?warLabel), ""military conflict"")

  # Find the commander associated with the war, 'A' Battery, and is Australian
  ?commander dbo:commanded ?unit .
  ?unit a dbo:MilitaryUnit ;
        dbp:name ""A Battery, Royal Australian Artillery"" ;
        dbo:country dbr:Australia .

  # Link the person to the commander through the military force involved in the war
  ?person dbo:militaryForce ?force .
  ?force dbo:commander ?commander ;
         dbo:participatedIn ?war .
}
```",6,13,7,3,2,3,3,71,0,0,9,0,0.0,0
456,60,test,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and band of the band, that is a musical artist, of the band of Alan Doyle.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Ross_Newton ;
         rdf:type dbo:TelevisionShow .
  
  ?band dbo:member dbr:Alan_Doyle ;
        dbo:bandMember ?musicalArtist .

  ?musicalArtist rdf:type dbo:MusicalArtist .

  ?movie dbo:work ?work .
  ?work dbo:associatedBand ?band .

  ?actor dbo:starringIn ?movie .
  ?actor dbo:spouse ?spouse .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
917,61,test,"Give me the child of the father of the spouse, that is a royalty, of Leleiohoku I and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfLeleiohokuI ?childOfKamehamehaIII
WHERE {
  # Leleiohoku I's spouse and their father
  dbr:Leleiohoku_I dbo:spouse ?spouse .
  ?fatherOfSpouse dbo:parent ?spouse .
  
  # Child of the father of Leleiohoku I's spouse that is a royalty
  ?childOfFatherOfSpouse dbo:parent ?fatherOfSpouse ;
                        a dbo:Monarch .
  FILTER (?childOfFatherOfSpouse != ?spouse) # Ensure it's not the spouse itself

  # Kamehameha III's child and their father
  dbr:Kamehameha_III dbo:child ?childOfKamehamehaIII ;
                     dbo:parent ?fatherOfChild .
  
  # Child of the father of Kamehameha III's child that is a royalty
  ?grandchildOfFatherOfChild dbo:parent ?fatherOfChild ;
                            a dbo:Monarch .
  FILTER (?grandchildOfFatherOfChild != ?childOfKamehamehaIII) # Ensure it's not the direct child itself

  # Match the two children we are interested in
  BIND(?childOfFatherOfSpouse AS ?childOfLeleiohokuI)
  BIND(?grandchildOfFatherOfChild AS ?childOfKamehamehaIII)
}",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
417,65,test,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?result <http://dbpedia.org/property/father> ?v6 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?childOfFather ?royalChildFFIII ?spouseParentIngolf
WHERE {
  # Leader of Colony of Greenland and their father
  ?leader dbo:country dbr:Greenland .
  ?father dbo:child ?leader .
  
  # Child of that father who is royalty
  ?childOfFather dbo:parent ?father .
  FILTER EXISTS { ?childOfFather dbo:royalty true . }
  
  # Frederick Francis III and his royal children
  ?ffIII dbp:name ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin""@en .
  ?royalChildFFIII dbo:parent ?ffIII .
  FILTER EXISTS { ?royalChildFFIII dbo:royalty true . }
  
  # Count Ingolf of Rosenborg and their parent's spouse
  ?ingolf dbp:name ""Count Ingolf of Rosenborg""@en .
  ?parentIngolf dbo:child ?ingolf .
  ?spouseParentIngolf dbo:spouse ?parentIngolf .
  FILTER EXISTS { ?spouseParentIngolf dbo:royalty true . }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
47,58,test,"Give me the office of the awardee of the entity, that is an award, in India and office of Suvendu Adhikari and office of the awardee of Banga Bhushan.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeOfAwardee ?officeOfSuvenduAdhikari ?officeOfBangaBhushanAwardee
WHERE {
  # Office of the awardee of an award in India
  {
    ?award dbo:country dbr:India .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:occupation ?officeOfAwardee .
  }
  
  UNION
  
  # Office of Suvendu Adhikari
  {
    dbr:Suvendu_Adhikari dbo:occupation ?officeOfSuvenduAdhikari .
  }
  
  UNION
  
  # Office of the awardee of Banga Bhushan
  {
    dbr:Banga_Bhushan_Award dbo:recipient ?bangaBhushanAwardee .
    ?bangaBhushanAwardee dbo:occupation ?officeOfBangaBhushanAwardee .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
170,24,test,Give me the birth place of the awardee of People's Artist of Russia and domain of the profession of John Scholey.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?result <http://dbpedia.org/ontology/leaderTitle> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlace ?professionDomain
WHERE {
  # Find the birthplace of awardees of ""People's Artist of Russia""
  ?person dbo:honoraryTitle dbr:People%27s_Artist_of_Russia .
  ?person dbo:birthPlace ?birthPlace .

  OPTIONAL {
    # Find the domain of profession for John Scholey
    dbr:John_Scholey dbo:profession ?profession .
    ?profession dbp:fieldOfActivity ?professionDomain .
  }
}
```

This query does the following:
- It selects distinct birthplaces (`?birthPlace`) of individuals who have been awarded ""People's Artist of Russia.""
- It optionally retrieves the domain of profession (`?professionDomain`) for John Scholey, if available.",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
465,69,test,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Ferdinand I's children who are royalty
  ?child1 dbo:parent dbr:Ferdinand_I,_Holy_Roman_Emperor .
  ?child1 a dbo:Monarch .

  # Parent of Charles Orlando, Dauphin of France
  ?parentCharlesOrlando dbo:child dbr:Charles_Orlando_Dauphin_of_France .
  
  # Successor of the child that is royalty of Ferdinand I's parent (Ferdinand I)
  ?successorChild1 dbo:succeededBy ?child1 .

  # Child of the parent of Ercole II d'Este
  ?parentErcoleII dbo:child dbr:Alfonso_I_d'_Este .
  ?child2 dbo:parent ?parentErcoleII .
  
  # Successor of the child of the parent of Ercole II d'Este
  ?successorChild2 dbo:succeededBy ?child2 .

  # Spouse of the successor (from Ferdinand I's lineage)
  ?successorChild1 dbo:spouse ?spouse .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
791,69,test,"Give me the predecessor of the child of Emperor Takakura and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v7 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor
WHERE {
  # Step 1: Identify Emperor Takakura's child and predecessor of that child
  ?child dbo:parent dbr:Emperor_Takakura .
  ?predecessor dbo:successor ?child .

  # Step 2: Identify Emperor Antoku's father who is royalty and an office holder
  ?antokuChild dbo:parent ?fatherAntoku .
  ?fatherAntoku rdf:type dbo:Monarch .
  ?fatherAntoku dbo:officeHolder true .

  # Ensure the father of Emperor Antoku is also a child of someone (royalty)
  ?fatherAntoku dbo:child ?antoku .

  # Step 3: Identify spouse of the spouse of Emperor Takakura's reference
  ?spouse1 dbo:spouse dbr:Emperor_Takakura .
  ?spouse2 dbo:spouse ?spouse1 .

  FILTER (?spouse2 rdf:type dbo:Monarch)

  # Linking all parts together
  OPTIONAL {
    ?fatherAntoku dbo:spouse ?spouse1 .
  }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
453,8,test,"Give me the religion of the author, that is a cardinal and a cleric, of Apologia Pro Vita Sua and religion of Newfoundland Colony.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/religion> ?result . <http://dbpedia.org/resource/Apologia_Pro_Vita_Sua> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Newfoundland_Colony> <http://dbpedia.org/ontology/religion> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cardinal>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?newmanReligion ?newfoundlandReligion
WHERE {
  # Find John Henry Newman's religion as a cardinal and cleric
  dbr:John_Henry_Newman dbo:religion ?newmanReligion .
  
  OPTIONAL {
    dbr:John_Henry_Newman dbo:title ""Cardinal""@en .
    FILTER EXISTS { ?newmanReligion rdfs:label ?label . FILTER(CONTAINS(LCASE(?label), ""catholic"")) }
  }

  OPTIONAL {
    dbr:John_Henry_Newman dbo:title ""Cleric""@en .
    FILTER EXISTS { ?newmanReligion rdfs:label ?label . FILTER(CONTAINS(LCASE(?label), ""catholic"")) }
  }

  # Find the religion of Newfoundland Colony
  dbr:Newfoundland_Colony dbo:religion ?newfoundlandReligion .
}
```",3,5,4,2,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
965,71,test,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of the parent of Louise Mountbatten and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v7 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v8 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parentNoble
WHERE {
  # George Mountbatten, 2nd Marquess of Milford Haven
  ?georgeMountbatten dbo:birthName ""George Mountbatten""@en .
  
  # Noble parent of George Mountbatten
  ?nobleParent dbo:child ?georgeMountbatten ;
              a dbo:Noble .

  # Spouse of the noble parent
  ?spouse dbr:Louise_Mountbatten dbo:parent ?nobleParent .

  # Parent of Louise Mountbatten
  ?louiseParent dbo:child dbr:Louise_Mountbatten .

  # Child of the noble parent who is royalty
  ?royaltyChild dbo:parent ?nobleParent ;
                a dbo:Royalty .

  # Politician born on 1854-05-24
  ?politician dbo:birthday ""1854-05-24""^^xsd:date ;
              a dbo:Politician .
  
  # Linking royalty child to the politician
  ?royaltyChild dbo:child ?politician .
  
  # Return the noble parent
  BIND(?nobleParent AS ?parentNoble)
}
```",9,12,10,3,3,3,3,71,0,0,2,0,0.0,0
281,26,test,"Give me the awardee of the award of Alfred Warden and commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of Medal bar.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name WHERE {
  ?person dbo:award dbr:Alfred_Warden_Award .
  ?person dbo:commanderOf ?war .
  ?war a dbo:MilitaryConflict .
  ?person dbo:awardee dbr:Medal_bar .
  
  OPTIONAL { 
    ?relation dbo:relatedTo dbr:Roy_Boehm .
    ?relation dbo:subject ?person .
  }
  
  ?person rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
933,57,test,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and reference to the birth name of the professional in Musician and band of Mike Elliott (saxophonist).",SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandName ?mikeBirthName
WHERE {
  # Find the band associated with Alan Warner
  ?band a dbo:Band ;
        dbo:musicalArtist ?alanWarner .
  
  ?alanWarner foaf:name ""Alan Warner"" .

  # Ensure the band is also an organization
  ?band a dbo:Organization .

  # Get Mike Elliott's birth name
  ?mikeElliott foaf:name ?mikeBirthName ;
               dbo:musicalArtist ?band .
  
  ?mikeElliott foaf:name ""Mike Elliott"" .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
417,57,test,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and spouse of Princess Caroline-Mathilde of Denmark and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Frederick Francis III and his spouse
  dbr:Frederick_Francis_III_of_Mecklenburg-Schwerin dbo:spouse dbr:Princess_Caroline-Mathilde_of_Denmark .
  
  # His child
  ?child dbo:parent dbr:Frederick_Francis_III_of_Mecklenburg-Schwerin ;
         a dbo:Person .

  # Child's child who is royalty
  ?grandChild dbo:parent ?child ;
              a dbo:RoyalFamilyMember .

  # Leader of the Colony of Greenland and their father
  ?leader dbo:position dbr:Leader_of_the_Colony_of_Greenland .
  ?father dbo:parent ?leader .

  # The child of the leader's father who is royalty
  ?childOfFather dbo:parent ?father ;
                 a dbo:RoyalFamilyMember .

  # Find the intersection where grandChild and childOfFather are the same person
  FILTER (?grandChild = ?childOfFather)
  
  BIND(?grandChild AS ?childOfChild)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
933,68,test,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to the birth name of the professional in Musician.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v6 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandName ?artistBandName ?birthName
WHERE {
  # Find the band associated with Alan Warner
  ?band a dbo:MusicalGroup ;
        dbo:member dbr:Alan_Warner_(musician) .
  
  FILTER EXISTS { ?band a dbo:Organization . }
  FILTER EXISTS { ?band a dbo:Band . }

  # Get the name of this band
  ?band dbp:name ?bandName .

  OPTIONAL {
    # Find the band of this band that is an artist and musical artist related to ""The Ramong Sound""
    ?artistBand a dbo:MusicalArtist, dbo:Artist ;
                dbo:associatedBand ?band .
    
    FILTER EXISTS { ?artistBand dbr:The_Ramong_Sound . }
    
    # Get the name of this artist band
    ?artistBand dbp:name ?artistBandName .
  }

  OPTIONAL {
    # Find the birth name of Alan Warner
    dbr:Alan_Warner_(musician) dbo:birthName ?birthName .
  }
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
456,64,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of the actor of the movie, that is a work and a television show, with Ross Newton and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandOfSpouse
WHERE {
  # Alan Doyle's band
  dbr:Alan_Doyle dbo:musicalArtist dbr:GreatBigSea .
  
  # Band member who is also an actor
  ?actor dbo:member dbr:GreatBigSea ;
         a dbo:Actor .

  # Actor's spouse
  ?spouse dbo:spouse ?actor .

  # Work that is both a movie and TV show with Ross Newton
  ?work dbo:starring dbr:Ross_Newton ;
        a dbo:Film , dbo:TelevisionShow .

  # Spouse's band
  ?spouse dbo:musicalArtist ?bandOfSpouse .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
329,24,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?countryInRegion ?organisationCountryBirthplace
WHERE {
  # Find a country in the region of Western European Time
  ?region dbo:timeZone dbr:Western_European_Time .
  ?countryInRegion dbo:locatedIn ?region ;
                   rdf:type dbo:Country .

  # Find an organization that is also a country and is the birthplace of Robert Bates (loyalist)
  ?organisationCountryBirthplace rdf:type dbo:Organisation, dbo:Country ;
                                 dbp:birthPlace dbr:Robert_Bates_(loyalist) .
}
```",4,7,5,2,2,2,3,28,0,0,531,0,0.0,0
456,71,test,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  ?movie a dbo:Work ;
         a dbo:TelevisionShow .
  
  ?actor dbo:actorIn ?movie ;
         foaf:name ""Ross Newton"" .

  ?band dbo:member ?musicalArtist1, ?musicalArtist2 .
  
  ?musicalArtist1 dbo:memberOfBand ?band ;
                  dbo:spouse ?fictionalCharacter .
  
  ?musicalArtist2 foaf:name ""Alan Doyle"" .
  
  ?fictionalCharacter dbo:alterEgo ?reference .
  ?reference foaf:name ""Lamont Cranston (radio, film and television)"" .

  ?actor dbo:spouse ?spouse .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
326,8,test,"Give me the person decedent at Rancho Mirage, California and professional in the profession of Susanne Lewis.","SELECT ?result WHERE { <http://dbpedia.org/resource/Susanne_Lewis> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Rancho_Mirage,_California> . ?result <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace ?profession
WHERE {
  ?person a dbo:Person .
  
  # Filter for death place
  OPTIONAL { 
    ?person dbo:placeOfBirth ?birthPlace .
    ?person dbo:deathPlace ?deathPlace .
    FILTER (CONTAINS(LCASE(?deathPlace), ""rancho mirage, california""))
  }
  
  # Filter for professional association with Susanne Lewis
  OPTIONAL {
    ?person dbo:profession ?profession .
    ?susanne a dbo:Person ;
             dbo:profession ?susProfession .
    FILTER (?susanne = dbr:Susanne_Lewis)
    FILTER (?profession = ?susProfession)
  }
  
  # Ensure both conditions are met
  FILTER (BOUND(?deathPlace) && BOUND(?profession))
}
ORDER BY ?person",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
645,71,test,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in the force of the commander in Siege of Madrid and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/leader> ?result . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v7 <http://dbpedia.org/property/office> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
  ?militaryForce a dbo:MilitaryConflict ;
                 a dbo:Event ;
                 a dbo:SocietalEvent .

  ?native dbo:presidentOf dbr:Restoration_(Spain) ;
          dbo:politician dbr:Restoration_(Spain) .

  ?native dbo:commanderIn ?siege .
  ?siege rdfs:label ""Siege of Madrid""@en .

  ?office a dbo:GovernmentAgency ;
          a dbo:Organization .

  ?native dbo:leaderOf ?office .

  ?militaryForce dbo:force ?native .
}
```",9,16,10,3,3,3,3,71,0,0,2,0,0.0,0
465,65,test,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor
WHERE {
  # Anne of Brittany's royal child and their successor
  ?anneChild dbo:parent dbr:Anne_of_Brittany ;
            a dbo:RoyalFamilyMember .
  ?anneSuccessor dbo:predecessorOrMonarch ?anneChild .

  # Alfonso I d'Este's child and their successor
  ?alfonsoChild dbo:parent dbr:Alfonso_I_d%27Este ;
               a dbo:RoyalFamilyMember .
  ?alfonsoSuccessor dbo:predecessorOrMonarch ?alfonsoChild .

  # Elizabeth of Austria's parent and their royal child
  ?elizabethParent dbo:child dbr:Elizabeth_of_Austria_(1526–1545) .
  ?royaltyChild dbo:parent ?elizabethParent ;
                a dbo:RoyalFamilyMember .

  # Spouse of the royalty child of Elizabeth of Austria's parent
  ?spouse dbp:spouse ?royaltyChild .

  # Find the successor that matches all conditions
  FILTER (?anneSuccessor = ?alfonsoSuccessor && ?alfonsoSuccessor = ?spouse)
  BIND(?anneSuccessor AS ?successor)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
130,18,test,"Give me the figure known as the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama and entity in the administration, that is American, of .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v2 <http://dbpedia.org/ontology/director> ?v1 . ?v3 <http://dbpedia.org/property/governor> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?figure
WHERE {
  ?figure a dbo:Film .
  ?figure a dbo:SoccerClub .

  ?native dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Madison,_Alabama ;
          dbo:occupation dbr:Coolie ; # Assuming 'Coolie' is used for coach in DBpedia
          dbo:collegeCoach ?true .

  ?figure dbo:director ?native .
  
  OPTIONAL {
    ?admin a dbo:Government ;
           dbo:member ?figure .
    ?admin dbo:nationality dbr:United_States .
  }
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
839,62,test,"Give me the band of Matthias Röhr and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v0 <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band1 ?band2
WHERE {
  # Matthias Röhr's band
  dbr:Matthias_Röhr dbo:memberOf ?band1 .

  # Person born as a musical artist and persona of Kevin Russell (musician)
  ?person dbo:birthPlace ?place .
  ?personaKevinRussell dbo:alias ?person .
  FILTER EXISTS { ?personaKevinRussell rdfs:label ""Kevin Russell (musician)""@en }
  
  # Band of Peter Schorowsky's member
  dbr:Peter_Schorowsky dbo:memberOf ?band3 .
  ?member dbo:memberOf ?band3 ;
          dbo:memberOf ?band2 .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
216,26,test,Give me the party of Campbell Newman and office of the mayor of Ros Bates and administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?newmanParty ?batesOffice ?designerAdministration
WHERE {
  # Campbell Newman's political party
  dbr:Campbell_Newman dbo:party ?newmanParty .

  # Ros Bates' office as mayor
  dbr:Ros_Bates dbo:office ?batesOffice .
  
  # Designer of ""Woolfe: The Red Hood Diaries"" and their administration
  OPTIONAL {
    dbr:Woolfe:_The_Red_Hood_Diaries dbo:designer ?designer .
    ?designer dbo:administration ?designerAdministration .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
773,61,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild
WHERE {
  # Carloman of Bavaria's father who is an office holder and royalty
  dbr:Carloman_of_Bavaria dbo:father ?father .
  ?father a dbo:Monarch ;
          dbo:officeHolder ?office .

  # Child of this father who is royalty
  ?father dbo:child ?child .
  ?child a dbo:Monarch .

  # Parent of the child (i.e., the father)
  ?parentOfChild = ?father .

  OPTIONAL {
    # Successor of the child if they are royalty
    ?child dbo:successor ?successor .
    ?successor a dbo:Monarch .
    
    # Parent of the successor
    ?successor dbo:father ?parentOfSuccessor .
  }
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
445,61,test,Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the award of the commander in Battle of Saint-Mihiel.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace
WHERE {
  # Find the organization established on 1820-03-10
  ?organization dbo:foundingDate ""1820-03-10""^^xsd:date .
  
  # Find the awardee of this organization
  ?awardee dbo:award ?organization .

  # Find the entity awarded for being a commander in the Battle of Saint-Mihiel
  ?battleAward dbp:recipient ?entity .
  ?entity dbo:role ""Commander"" ;
          dbo:participatedInBattle dbr:Battle_of_Saint-Mihiel .

  # Ensure the awardee and entity are the same person
  FILTER (?awardee = ?entity)

  # Get the death place of this individual
  ?entity dbo:deathPlace ?deathPlace .
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
129,28,test,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and professional in the mayor of 1999 West Dunbartonshire Council election and associated musical artist of the person born as Tahj Malik Chandler.","SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?musicalArtist1 ?roleInElection ?person ?musicalArtist2
WHERE {
  # Find the actor associated with ""Dreamville Presents: Revenge""
  ?event dbo:eventType dbr:Dreamville_Presents:_Revenge .
  ?event dbo:performer ?actor .

  # Find the musical artist that is an organization linked to this actor
  ?actor dbo:musicalArtist ?musicalArtist1 .
  FILTER (isBlank(?musicalArtist1) && ?musicalArtist1 a dbo:Organization)

  # Determine the professional role of this musical artist in the 1999 West Dunbartonshire Council election
  OPTIONAL {
    ?musicalArtist1 dbo:profession ?roleInElection .
    ?election dbr:West_Dunbartonshire_Council_election,_1999 .
    FILTER (CONTAINS(LCASE(?roleInElection), ""mayor""))
  }

  # Identify the person born as Tahj Malik Chandler
  ?person foaf:name ""Tahj Malik Chandler""@en .

  # Find their associated musical artist
  ?person dbo:musicalArtist ?musicalArtist2 .
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
465,67,test,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Charles Orlando, Dauphin of France
  dbr:Charles_Orlando,_Dauphin_of_France dbo:parent ?charlesParent .

  # Elizabeth of Austria (1526–1545)
  dbr:Elizabeth_of_Austria_(1526–1545) dbo:parent ?elizabethParent .
  
  # Ercole II d'Este, Duke of Ferrara
  dbr:Ercole_II_d%27Este dbo:succeededBy ?ercoleSuccessor .

  # Find the child who is royalty and spouse of another royal child
  ?child1 dbo:spouse ?child2 .
  ?child1 dbo:parent ?elizabethParent .
  ?child2 dbo:parent ?charlesParent .
  
  FILTER (dbo:IsRoyalty(?child1) && dbo:IsRoyalty(?child2)) .

  # Find the successor of Ercole II d'Este
  ?ercoleSuccessor dbo:succeededBy ?successor .
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
965,65,test,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  # Prince George of Battenberg and his parent who is a noble
  dbr:Prince_George_of_Battenberg dbo:childOf ?parent .
  
  # The parent must be a noble
  ?parent dbo:nationality ?nobleNationality .

  # Find the child of this parent who is royalty
  ?parent dbo:child ?royaltyChild .
  ?royaltyChild rdf:type dbo:Monarch .

  # Politician born on 1854-05-24
  ?politician dbp:birthday ""1854-05-24""^^xsd:date ;
              rdf:type dbo:Politician .

  # Spouse of the politician
  ?spouse dbp:spouse ?politician .
  
  # Spouse of Princess Victoria of Hesse and by Rhine
  dbr:Princess_Victoria_of_Hesse_and_by_Rhine dbp:spouse ?princessSpouse .

  # The spouse of the politician must be the same as the spouse of Princess Victoria
  ?spouse = ?princessSpouse .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
274,26,test,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie and associated musical artist of the actor, that is a musical artist, of Imagine the Sound and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember ?actorAssociatedArtist
WHERE {
  # Find John Birks Gillespie and his band members
  ?gillespie a dbo:MusicalArtist ;
             foaf:name ""John Birks Gillespie""@en .
  
  OPTIONAL {
    ?bandMembership dbo:member ?bandMember .
    ?bandMembership dbo:musicalArtist ?gillespie .
  }
  
  # Find the actor associated with ""Imagine the Sound"" who is a musical artist
  ?actor a dbo:Actor ;
         dbp:associatedBand ""Imagine the Sound""@en ;
         a dbo:MusicalArtist .

  OPTIONAL {
    ?actorMusicArtist dbo:musicalArtist ?actor .
    ?actorMusicArtist dbo:member ?actorAssociatedArtist .
  }
}
```",5,7,6,2,3,2,3,28,0,0,3,0,0.0,0
465,71,test,"Give me the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v7 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalEntity
WHERE {
  # Ercole II d'Este relationships
  dbr:Ercole_II_d%27Este_Duke_of_Ferrara dbo:parent ?ercoleParent .
  
  ?ercoleChild dbo:childOf ?ercoleParent .
  ?ercoleSuccessor dbo:successorOf ?ercoleChild .

  # Charles Orlando, Dauphin of France relationships
  dbr:Charles_Orlando_Dauphin_of_France dbo:parent ?charlesParent .
  
  ?charlesRoyalChild dbo:childOf ?charlesParent ;
                    a dbo:Monarch .
                    
  ?spouse dbo:spouse ?charlesRoyalChild .

  # Elizabeth of Austria relationships
  dbr:Elizabeth_of_Austria_(1526–1545) dbo:parent ?elizabethParent .
  
  ?elizabethRoyalChild dbo:childOf ?elizabethParent ;
                       a dbo:Monarch .

  # Final entity as described in the question
  FILTER (?ercoleSuccessor = ?spouse)
  BIND(?spouse AS ?finalEntity)
}",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
976,59,test,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?leaderOffice ?mayorOffice
WHERE {
  # Kemal Kılıçdaroğlu's administration and leader's office
  ?administration dbo:leader ?leader .
  ?leader dbo:office ?leaderOffice .
  FILTER (CONTAINS(LANG(?leader), ""tr"")) .

  # Administration is associated with Kemal Kılıçdaroğlu
  ?administration dbp:head dbr:Kemal_Kılıçdaroğlu .

  # Millet İttifakı as a political party and organization
  ?party rdf:type dbo:PoliticalParty .
  ?party rdfs:label ""Millet İttifakı""@tr .
  
  # Mayor of the city associated with Millet İttifakı
  ?city dbp:governingBody ?party .
  ?mayor dbo:office ?mayorOffice .
  FILTER (CONTAINS(LANG(?mayor), ""tr"")) .

  # Ensure mayor is an office holder and politician
  ?mayor rdf:type dbo:Politician ;
         dbo:officeHolder ?mayorOffice .
}
```",6,14,7,3,2,3,3,71,0,0,3,0,0.0,0
926,66,test,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of the child of Ahmed III.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandfather ?royalChild ?successor
WHERE {
  # Abdulaziz's father and grandfather
  ?abdulaziz dbo:father ?father .
  ?father dbo:father ?grandfather .

  # Beyhan Sultan's parent (Mustafa III) and his royal child
  ?mustafaIII dbp:surname ""Ottoman"" .  # Mustafa III is an Ottoman royalty
  ?beyhanSultan dbo:parent ?mustafaIII .
  ?royalChild dbo:parent ?mustafaIII .
  
  # Ahmed III's child and successor
  ?ahmedIII dbp:surname ""Ottoman"" .  # Ahmed III is an Ottoman royalty
  ?childOfAhmed dbo:parent ?ahmedIII .
  ?successor dbo:predecessor ?childOfAhmed .

  FILTER (?royalChild != ?beyhanSultan)  # Ensure Beyhan Sultan herself isn't counted as her own child

  # Conditions for royalty and successor
  FILTER EXISTS { ?mustafaIII dbo:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }
  FILTER EXISTS { ?ahmedIII dbo:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
773,69,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the successor of Charles the Bald.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v7 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Carloman of Bavaria's father who is an office holder and royalty
  ?father dbo:child dbr:Claudius_of_Bavaria ;
          a dbo:Royalty, dbo:OfficeHolder .

  # Child of this father who is royalty
  ?child dbo:parent ?father ;
         a dbo:Royalty .

  # Parent of the child (spouse of Carloman's grandfather)
  ?grandfather dbo:child dbr:Charles_the_Fat .
  ?grandmother dbo:spouse ?grandfather .
  ?parent dbo:spouse ?grandfather .

  # Parent of Charles the Bald's successor
  ?successor dbo:predecessor dbr:Charles_the_Bald ;
             dbo:parent ?parent .

  FILTER (?child = ?royaltyChild)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
281,25,test,"Give me the awardee of Volunteer Decoration and commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?commanderEvent ?cosgraveAwardEvent
WHERE {
  # Roy Boehm's award and commander event
  ?boehmAward a dbo:Award ;
              dbo:recipient dbr:Roy_Boehm .
  FILTER EXISTS { ?boehmAward rdfs:label ""Volunteer Decoration""@en }
  
  ?boehmCommanderEvent dbo:commander dbr:Roy_Boehm ;
                       a dbo:MilitaryConflict .

  # Lawrence Moore Cosgrave's award event
  ?cosgraveAward a dbo:Award ;
                 dbo:recipient dbr:Larry_Moore_Cosgrave .
  ?cosgraveAwardEvent dbo:event ?cosgraveAward ;
                     a dbo:MilitaryConflict .

  # Find common awardees who are commanders in military conflicts
  ?awardee a dbo:Person ;
           dbo:award ?boehmAward ;
           dbo:militaryCommanderOf ?commanderEvent .
  
  FILTER EXISTS { ?commanderEvent a dbo:MilitaryConflict }
  
  OPTIONAL {
    ?awardee dbo:award ?cosgraveAward .
  }

}
ORDER BY ?awardee
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
130,19,test,"Give me the figure known as the film, that is a soccer club and an organisation, of Candice Storey Lee and entity in the administration, that is American, of the award of Živko Ključe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v4 . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?filmClubOrg ?award
WHERE {
  # Candice Storey Lee's association with a film, soccer club, and organization
  ?filmClubOrg dbo:director dbr:Candice_Storey_Lee .
  OPTIONAL { ?filmClubOrg dbo:sportTeam dbr:Soccer_Club . }
  OPTIONAL { ?filmClubOrg dbo:organizationType dbp:Film ; dbp:Soccer_Club . }

  # Živko Ključe's administrative role in an award
  ?award dbo:administrator dbr:Živko_Ključe .
  
  # Ensure both entities are American
  FILTER EXISTS { ?filmClubOrg dbo:country dbr:United_States . }
  FILTER EXISTS { ?award dbo:country dbr:United_States . }
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
773,70,test,"Give me the spouse of the father of Charles the Fat and parent of the successor of the child, that is a royalty, of Louis the Pious and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?v7 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Charles the Fat's father
  ?charlesFat dbo:father dbr:Charles_the_Fat .
  
  # Spouse of Charles the Fat's father
  ?charlesFatFathersSpouse dbo:spouse ?charlesFat .

  # Louis the Pious' child who is royalty
  ?louisPiousChild dbo:child dbr:Louis_the_Pious ;
                  a dbo:Monarch .
  
  # Successor of Louis the Pious' child
  ?successor dbo:predecessor ?louisPiousChild .

  # Parent of the successor
  ?parentOfSuccessor dbo:child ?successor .

  # Carloman of Bavaria's father who is both an office holder and royalty
  ?carlomanFather dbo:father dbr:Carloman_of_Bavaria ;
                  a dbo:Monarch, dbo:OfficeHolder .
  
  # Child (royalty) of this father
  ?childOfCarlomanFather dbo:child ?carlomanFather ;
                        a dbo:Monarch .

  # Ensure the spouse is also a parent of this child
  ?charlesFatFathersSpouse dbo:parent ?childOfCarlomanFather .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
47,63,test,"Give me the office of the awardee of Padma Vibhushan and office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of Banga Bhushan.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?v4 . ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?padmaOffice ?greenHuntOffice ?bangaOffice
WHERE {
  # Padma Vibhushan awardee's office
  ?person dbo:award dbr:Padma_Vibhushan .
  ?person dbo:office ?padmaOffice .

  # Politician involved in Operation Green Hunt and their office
  ?politician dbo:occupation dbr:Politician ;
              dbo:participatedInOperation dbr:Operation_Green_Hunt .
  ?politician dbo:office ?greenHuntOffice .

  # Banga Bhushan awardee's office
  ?person2 dbo:award dbr:Banga_Bhushan .
  ?person2 dbo:office ?bangaOffice .
}
```

### Explanation:
- **PREFIX:** Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT:** Ensure unique results for each office type.
- **WHERE Clause:**
  - Match individuals with the Padma Vibhushan award and their offices.
  - Identify politicians involved in Operation Green Hunt and their offices.
  - Find individuals awarded Banga Bhushan and their offices.

This query assumes that DBpedia has structured data linking awards, occupations, operations, and offices. Adjustments may be needed based on the actual schema and available properties in DBpedia.",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
965,67,test,"Give me the spouse of Prince Louis of Battenberg and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v5 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName ?birthName
WHERE {
  # Prince Louis of Battenberg's spouse
  dbr:Prince_Louis_of_Battenberg dbo:spouse ?spouse .

  # George Mountbatten, 2nd Marquess of Milford Haven
  ?parent dbo:child ?georgeMountbatten .
  ?georgeMountbatten a dbo:Noble ;
                     dbp:birthday ""George_Mountbatten,_2nd_Marquess_of_Milford_Haven"" .

  # Parent's birth name
  ?parent rdfs:label ?birthName .

  # Child of George Mountbatten who is royalty
  ?georgeMountbatten dbo:child ?royaltyChild .
  ?royaltyChild a dbo:Royalty .

  # Politician born on May 24, 1854
  ?politician a dbo:Politician ;
              dbp:birthday ""1854-05-24""^^xsd:date .

  # Linking the politician to the royalty child
  ?royaltyChild dbo:child ?politician .
  
  # Get spouse's name
  ?spouse rdfs:label ?spouseName .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
216,60,test,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/coach> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player WHERE {
  ?coach dbo:team dbr:Croatia_national_under-21_football_team .
  ?organisation a dbo:SoccerClub ;
                dbo:reference ?ref .
  ?coach dbo:organization ?organisation .

  ?person dbp:sportManager true ;
          dbp:soccerPlayer true ;
          dbp:soccerManager true ;
          dbo:birthPlace ?team .
  
  ?player dbo:playedForTeam ?team ;
          dbo:coachedBy ?coach .

  OPTIONAL { 
    ?deathEvent dbo:agent dbr:Pavel_Vezhinov ;
                dbo:date ?deathDate .
    FILTER (?deathDate <= ""2023-10-01""^^xsd:date) # Assuming current date for the query
  }
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
645,63,test,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and commander in the force of the commander in Siege of Madrid and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader
WHERE {
  # Camilo Menéndez Tolosa and his office
  dbr:Camilo_Menéndez_Tolosa dbo:officeLeader ?office .
  
  # The office is a government agency and an organization
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .

  # Francisco Largo Caballero's role in the Siege of Madrid
  dbr:Francisco_Largo_Caballero dbo:militaryCommanderIn ?siege .
  
  # The siege is a military conflict and societal event
  ?siege rdf:type dbo:MilitaryConflict ;
         rdf:type dbo:SocietalEvent .

  # Linking the office leader to the commander in the force
  ?officeLeader dbo:commanderIn ?force .
  ?force dbo:militaryForceOf ?siege .

  # The leader of the office is also a commander in the force
  ?leader = ?officeLeader .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
267,19,test,"Give me the coach of the player, that is a soccer club, in Rasoul Khatibi and person born on the birth date of the reference to Dan Cathy.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://dbpedia.org/ontology/coach> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthDate> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . ?v0 <http://dbpedia.org/ontology/birthDate> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?coachName WHERE {
  # Find Rasoul Khatibi's soccer club
  dbr:Rasoul_Khatibi dbo:playsFor ?soccerClub .
  
  # Get the coach of that soccer club
  ?soccerClub dbo:coach ?coach .

  # Retrieve the birth date of Dan Cathy
  dbr:Dan_Cathy dbp:birthday ?danCathyBirthDate .

  # Ensure the coach's birth date matches Dan Cathy's birth date
  ?coach dbp:birthday ?birthDate .
  FILTER (?birthDate = ?danCathyBirthDate)

  # Get the name of the coach
  ?coach rdfs:label ?coachName .
  
  # Filter to ensure we get English labels only
  FILTER (lang(?coachName) = 'en')
}",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
417,60,test,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild
WHERE {
  # Parent 1 and their spouse
  ?parent1 a dbo:Monarch ;
           foaf:name ""Alexandrine of Mecklenburg-Schwerin""@en .
  
  ?spouse a dbo:Spouse ;
          dbo:spouse ?parent1 .

  # Child of Parent 1 (Child 1)
  ?child1 dbo:childOf ?parent1 ;
         dbo:childOf ?spouse ;
         a dbo:Monarch .

  # Parent of Child 1 who is royalty
  ?grandParent a dbo:Monarch ;
               dbo:childOf ?parent1 ;
               dbo:childOf ?spouse .

  # Child of Grand Parent (Child of Child)
  ?childOfChild dbo:childOf ?grandParent ;
                a dbo:Monarch .
  
  # Child 2
  ?child2 dbo:childOf dbp:knudHereditaryPrinceDenmark ;
          a dbo:Monarch .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
892,68,test,"Give me the landmark at elevation of the award of the member of E-girls and entity in the profession of the true self of Enrico Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/awards> ?v6 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/province> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?landmark WHERE {
  # Find a member of E-girls and their award
  ?member dbo:memberOf dbr:E-girls .
  ?award dbo:recipient ?member .
  
  # Find the elevation of the landmark associated with this award
  ?landmark dbo:elevation ?elevation .
  ?award dbo:location ?landmark .

  # Find Enrico Crolla's profession
  dbr:Enrico_Crolla dbo:occupation ?profession .

  # Find an entity in administration related to Democratic Party (Italy)
  ?entity dbp:party dbr:Democratic_Party_(Italy) .
  
  # Ensure the entity is Italian, a region, a settlement, and an administrative region
  ?entity rdf:type dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:settlementType dbo:Settlement ;
          dbo:administrativeRegion true .

  # Link the landmark to this entity
  ?landmark dbo:locatedIn ?entity .
}
```",8,12,9,3,3,3,3,71,0,0,2,0,0.0,0
933,63,test,"Give me the reference to the birth name of Alan Warner (musician) and band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthName ?band ?group ?artist
WHERE {
  # Alan Warner's birth name
  dbr:Alan_Warner_(musician) dbo:birthName ?birthName .

  # Band associated with Alan Warner
  OPTIONAL { 
    dbr:Alan_Warner_(musician) dbo:member ?band .
    FILTER (isBlank(?band)) .
  }

  # Group, band, and organization related to Alan Warner
  OPTIONAL {
    ?band a dbo:Band ;
          a dbo:MusicalGroup ;
          a dbo:Organization .
  }

  # Artist and musical artist related to The Ramones
  dbr:The_Ramones dbo:member ?artist .
  FILTER (?artist != dbr:Alan_Warner_(musician)) .
  OPTIONAL {
    ?artist a dbo:Artist ;
            a dbo:MusicalArtist .
  }
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
382,19,test,"Give me the landmark at elevation of the award of the reference, that is a college coach and a coach, to Harry Combes and birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark ?birthplace
WHERE {
  # Find the award related to Harry Combes and its landmark at elevation
  ?award dbo:recipient dbr:Harry_Combes .
  ?award dbo:location ?landmark .
  FILTER EXISTS { ?landmark a dbo:Lighthouse } # Assuming landmarks are lighthouses for elevation context

  # Find the manager of Bonner SC with multiple roles
  ?manager dbo:position dbr:Bonn_SC_Manager ;
           a dbo:SoccerManager, dbo:Athlete, dbo:SportsManager .

  # Get the birthplace of this manager
  ?manager dbo:birthPlace ?birthplace .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
865,60,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v1 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace
WHERE {
  # Step 1: Identify Abul Maal Abdul Muhith's father
  ?abulMaal a dbo:Person ;
            foaf:parent ?father .

  # Step 2: Identify the grandfather (father of Abul Maal's father)
  ?father foaf:parent ?grandfather .

  # Step 3: Find the child of this grandfather
  ?grandfather foaf:child ?child .

  # Step 4: Determine the decedent at Patna who is a parent of this child
  ?decedent dbo:deathPlace dbr:Patna ;
           foaf:parent ?child .

  # Step 5: Find the residence country and native place of this decedent
  ?decedent dbo:residenceCountry ?country .
  ?decedent dbo:nativePlace ?nativePlace .
  
  FILTER(?country != dbr:Unknown) # Ensure it's a known country
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
465,58,test,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse
WHERE {
  # Ferdinand I, Holy Roman Emperor's children who are royalty
  ?child1 dbo:parent dbr:Ferdinand_I,_Holy_Roman_Emperor .
  ?child1 a dbo:Monarch .

  # Ercole II d'Este's successor
  ?successor dbp:succeededBy dbr:Ercole_II_d%27Este .

  # Charles Orlando, Dauphin of France's parent and their royal child
  ?parent dbp:child dbr:Charles_Orlando .
  ?royalChild dbo:parent ?parent .
  ?royalChild a dbo:Monarch .

  # Find the spouse of the specified child
  ?child1 dbo:spouse ?spouse .

  FILTER (?successor = ?child1)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
582,58,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to Japan and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/property/nickname> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father ?teamNickname
WHERE {
  # Find Masami Nagasawa's father
  dbr:Masami_Nagasawa dbo:parent ?father .

  # Ensure the father is an athlete, soccer manager, and sports manager
  ?father a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .

  # Connect the father to Japan
  ?father dbp:nationality dbr:Japan .

  # Find Hajime Moriyasu's team nickname
  dbr:Hajime_Moriyasu dbo:team ?team .
  ?team dbp:commonName ?teamNickname .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
715,56,test,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in Spanish Civil War and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?abdElKrimCommander ?spanishCivilWarCommander ?officeLeader
WHERE {
  # Abd el-Krim's commander in a military conflict
  ?abdElKrimMilitaryConflict dbo:commander ?abdElKrimCommander .
  dbr:Abd_el-Krim dbo:militaryConflict ?abdElKrimMilitaryConflict .

  # Commander in the Spanish Civil War
  ?spanishCivilWar dbo:commander ?spanishCivilWarCommander .
  FILTER (CONTAINS(LCASE(?spanishCivilWar.label), ""civil war"") && CONTAINS(LCASE(?spanishCivilWar.label), ""spain""))

  # Leader of an office that is a government agency and organization related to Carlos Franco Iribarnegaray
  ?office dbo:leader ?officeLeader .
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .
  ?office dbo:reference dbr:Carlos_Franco_Iribarnegaray .

}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
433,64,test,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of Bill Evans and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional
WHERE {
  # Eric Clapton is the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  dbr:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall dbo:writer dbr:Eric_Claptom .

  # Find musical artists associated with Bill Evans
  ?billEvansArtist dbo:associatedMusicalArtist dbr:Bill_Evans .
  
  # Find musical artists associated with Paul Chambers
  ?paulChambersArtist dbo:associatedMusicalArtist dbr:Paul_Chambers .

  # The professional must be a musician and an artist, and also associated with both Bill Evans and Paul Chambers
  ?professional dbo:profession dbr:Musician ;
                dbo:profession dbr:Artist ;
                rdfs:label ?name .
  
  FILTER(CONTAINS(LCASE(?name), ""musician"") && CONTAINS(LCASE(?name), ""artist""))

  # The professional must be associated with both Bill Evans and Paul Chambers
  ?professional dbo:associatedMusicalArtist ?billEvansArtist ;
                dbo:associatedMusicalArtist ?paulChambersArtist .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
573,70,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v1 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?result <http://dbpedia.org/ontology/deathPlace> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?personDecedent
WHERE {
  # Person decedent at a residence that is a settlement
  ?residence dbo:type dbr:Settlement .
  ?personDecedent dbo:deceasedAt ?residence .

  # Professional in Politician and American
  ?personDecedent dbo:nationality dbr:United_States .
  ?personDecedent dbo:profession dbr:Politician .

  # Parent of an author who is a politician and office holder, related to John Quincy Adams' work
  ?author dbo:parent ?personDecedent ;
          dbo:occupation dbr:Politician ;
          dbo:officeHolder true .
  ?work dbo:author ?author ;
        dbo:subject dbr:John_Quincy_Adams .

  # Person decedent at an administration that is a region, related to Charlie Baker
  ?administration dbo:type dbr:Region .
  ?personDecedent dbo:deceasedAt ?administration .
  ?administration dbo:head dbr:Charlie_Baker .
}
```",8,13,9,3,3,3,3,71,0,0,2,0,0.0,0
102,20,test,"Give me the native of the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury and manager of the player in the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v4 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . ?v1 <http://dbpedia.org/ontology/team> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native
WHERE {
  ?athlete a dbo:Athlete ;
           dbo:nationality dbr:England ;
           dbo:residence ?settlement .
  
  ?settlement a dbo:Settlement ;
              dbo:country dbr:England .

  ?athlete dbo:birthPlace dbr:Dewsbury .

  ?manager a dbo:Person ;
           dbo:occupation dbo:SoccerManager ;
           dbo:employee ?player .

  ?player a dbo:SoccerPlayer ;
          dbo:nationality dbr:England ;
          dbo:team dbr:England_women's_national_football_team .

  ?athlete dbp:alias ?manager .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
192,19,test,"Give me the spouse of the spouse, that is a royalty, of Charles Martel of Anjou and child of the child of the parent of Anna of Hungary (Byzantine empress).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouseOfRoyalChild
WHERE {
  # Step 1: Find Charles Martel of Anjou's spouse
  dbr:Charles_Martel_of_Anjou dbo:spouse ?charlesSpouse .

  # Step 2: Find the child of that spouse
  ?child dbo:parent ?charlesSpouse .
  
  # Step 3: Identify Anna of Hungary's parent
  dbr:Anna_of_Hungary dbo:parent ?annaParent .

  # Step 4: Find the grandchild of Anna's parent (i.e., Anna's child)
  ?grandChild dbo:parent ?annaParent .

  # Step 5: Check if this grandchild is a royalty
  ?grandChild rdf:type dbo:RoyalFamilyMember .
  
  # Step 6: Find the spouse of that royal grandchild
  ?grandChild dbo:spouse ?spouseOfRoyalChild .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
456,57,test,"Give me the spouse of Danielle Spencer (Australian actress) and band of the band, that is a musical artist, of Dean Brody and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?band ?alterEgo
WHERE {
  # Danielle Spencer's spouse
  ?danielle a dbo:Actor ;
            foaf:name ""Danielle Spencer"" ;
            dbo:nationality dbr:Australia .
  OPTIONAL { ?danielle dbo:spouse ?spouse . }

  # Dean Brody's band
  ?dean a dbo:MusicArtist ;
        foaf:name ""Dean Brody"" .
  OPTIONAL {
    ?band a dbo:Band ;
          dbo:musicalArtist ?dean .
    ?band dbo:name ?bandName .
  }

  # Lamont Cranston's alter ego
  ?lamont a dbo:FictionalCharacter ;
           foaf:name ""Lamont Cranston"" ;
           dbo:alterEgo ?alterEgo .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
274,28,test,"Give me the professional in the designer of Tetris Classic and band member of the person born, that is a musical artist, as John Birks Gillespie and associated musical artist of the actor, that is a musical artist, of Imagine the Sound.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?designer ?bandMember ?actor ?associatedArtist
WHERE {
  # Find the designer of Tetris Classic
  ?tetrisDesigner dbo:work ?tetrisWork .
  ?tetrisWork rdfs:label ""Tetris Classic""@en .

  # Get professional name of the designer
  ?tetrisDesigner foaf:name ?designer .

  # Find band members associated with Dizzy Gillespie
  ?gillespie dbr:Dizzy_Gillespie ;
            dbo:bandMember ?bandMember .
  
  # Ensure the band member is a musical artist
  ?bandMember rdf:type dbo:MusicalArtist .

  # Find actors in ""Imagine the Sound"" and their associated musical artists
  ?soundFilm dbp:title ""Imagine the Sound""@en .
  ?actor dbo:actedIn ?soundFilm ;
         foaf:name ?actorName .
  
  ?actor dbo:associatedMusicalArtist ?associatedArtist .
}
```",6,8,7,2,3,2,3,28,0,0,3,0,0.0,0
274,27,test,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound and band member of Dizzy Gillespie and professional in the designer of Tetris Classic.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?musicalArtist
WHERE {
  ?actor a dbo:Actor ;
         dbo:musicalArtist ?musicalArtist .

  ?musicalArtist dbo:associatedBandMemberOf ?dizzyGillespie .
  
  ?dizzyGillespie rdfs:label ""Dizzy Gillespie""@en .

  ?musicalArtist dbp:associatedWithAlbum ?album .
  ?album rdfs:label ""Imagine the Sound""@en .

  ?musicalArtist dbo:professionalConnection ?tetrisDesigner .
  ?tetrisDesigner rdfs:label ?designerLabel .
  
  FILTER(CONTAINS(LCASE(?designerLabel), ""tetris classic""))
}
```",5,6,6,2,3,2,3,28,0,0,3,0,0.0,0
926,65,test,"Give me the successor of the child of the spouse of Şermi Kadın and father of the father of Abdulaziz and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor
WHERE {
  # Spouse of Şermi Kadın
  ?spouse dbp:spouse ?sermiKadin .
  ?sermiKadin rdfs:label ""Şermi Kadın""@en .

  # Child of the spouse (also child of Şermi Kadın)
  ?child dbo:parent ?spouse ;
         dbo:parent ?sermiKadin .

  # Father of the father of Abdulaziz
  ?abdulaziz rdfs:label ""Abdulaziz""@en .
  ?fatherOfFather dbo:child ?abdulaziz .
  ?grandfather dbo:child ?fatherOfFather .

  # Child of the father, that is royalty, of Mustafa III
  ?mustafaIII rdfs:label ""Mustafa III""@en .
  ?royalChild dbo:parent ?mustafaIII ;
              a dbo:RoyalFamilyMember .

  # Find the entity that matches all conditions
  ?entity ?p1 ?child .
  ?entity ?p2 ?grandfather .
  ?entity ?p3 ?royalChild .

  # Successor of this entity
  ?entity dbo:successor ?successor .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
926,64,test,"Give me the successor of Mustafa III and father of the father of the spouse of Neşerek Kadın and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successor
WHERE {
  # Mustafa III and his successor
  dbr:Mustafa_III dbo:successor ?successor .

  # Beyhan Sultan's parent (Mustafa III) is royalty
  dbr:Beyhan_Sultan dbo:parent dbr:Mustafa_III .
  
  # Neşerek Kadın's spouse
  ?neserekKadin dbo:spouse ?spouse .

  # Father of the spouse
  ?spouse dbo:father ?fatherOfSpouse .

  # Child of this father, ensuring they are royalty
  ?childOfFather dbo:parent ?fatherOfSpouse .
  ?childOfFather a dbo:Monarch .

  # The child must be the successor of Mustafa III
  ?successor = ?childOfFather
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
965,60,test,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseBirthName
WHERE {
  # Step 1: Find Louise Mountbatten's parent
  ?parent dbo:child dbr:Louise_Mountbatten .

  # Step 2: Find the spouse of that parent
  ?parent foaf:mbox ?parentEmail .
  ?spouseParent foaf:mbox ?parentEmail .
  
  # Step 3: Find the spouse of that spouse
  ?spouseParent dbo:spouse ?secondSpouse .

  # Step 4: Identify a noble person born from this second spouse
  ?noblePerson dbo:birthName ?birthName ;
              dbo:spouse ?secondSpouse ;
              rdf:type dbo:NoblePerson .
  
  # Step 5: Match the birth name with George Mountbatten, 2nd Marquess of Milford Haven
  FILTER (?birthName = ""George Mountbatten, 2nd Marquess of Milford Haven"")
  
  # Return the birth name as the result
  BIND(?birthName AS ?spouseBirthName)
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
976,66,test,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as the birth name of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).",SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v3 . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v6 . ?v6 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeLeader ?officeNaciBostanci ?officeMayor
WHERE {
  # Office of the leader of Grand National Assembly of Turkey
  ?leader a dbo:Politician ;
          dbo:positionHeld ?assembly .
  ?assembly rdfs:label ""Grand National Assembly of Turkey""@en .
  ?leader dbo:office ?officeLeader .

  # Office of Naci Bostancı (using his birth name)
  dbr:Naci_Bostancı a dbo:Politician ;
                    foaf:name ?birthName .
  FILTER(?birthName = ""Naci Bostancı""@en) 
  OPTIONAL { dbr:Naci_Bostancı dbo:office ?officeNaciBostanci }

  # Office of the mayor who is a politician, office holder, Turkish, and part of Nation Alliance
  ?mayor a dbo:Politician ;
         dbo:officeHolder ?office ;
         foaf:nationality dbr:Turkey .
  ?office rdfs:label ""Mayor""@en .
  OPTIONAL { ?mayor dbo:memberOf ?party }
  FILTER EXISTS {
    ?party rdfs:label ""Nation Alliance (Turkey)""@en
  }
  ?mayor dbo:office ?officeMayor .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
917,70,test,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and parent of the child, that is a royalty, of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v6 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfFather
WHERE {
  # Kamehameha III's child who is royalty
  ?childKIII dbo:parent dbr:Kamehameha_III ;
            a dbo:Monarch .

  # Father of that child (Kamehameha III)
  ?fatherKIII dbo:child ?childKIII .
  
  # Child of Kamehameha III who is royalty
  ?royaltyChildOfFather dbo:parent ?fatherKIII ;
                       a dbo:Monarch .

  # Kamehameha IV's child who is royalty
  ?childKIV dbo:parent dbr:Kamehameha_IV ;
            a dbo:Monarch .

  # Parent of that child who is royalty
  ?royaltyParentOfChild dbo:child ?childKIV ;
                        a dbo:Monarch .

  # Spouse of Leleiohoku I
  ?spouseLelei dbr:Leleiohoku_I dbo:spouse .

  # Father of the spouse who is royalty
  ?fatherSpouse dbo:spouse ?spouseLelei ;
                a dbo:Monarch .
  
  # The child we are interested in
  ?childOfFather dbo:parent ?royaltyParentOfChild ;
                 dbo:parent ?fatherSpouse .
}",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
987,67,test,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of Dado Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> ?v4 . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v1 <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorBirthPlace ?dadoPolumentaBirthPlace
WHERE {
  # Emir Hadžihafizbegović's film/show involvement
  dbr:Emir_Hadžihafizbegović dbo:filmOrTVShow ?show .
  
  # Show is associated with a country/entity in the region of Canicosa de la Sierra
  ?show dbp:setInLocation ?location .
  ?location dbo:country ?country .

  # Country/entity relates to a time zone that corresponds to a sports event
  ?country dbo:timeZone ?timeZone .
  ?timeZone dbo:sportsEvent ?sportsEvent .
  
  # Canicosa de la Sierra is in the region of this country/entity
  dbr:Canicosa_de_la_Sierra dbo:locatedInRegion ?region .
  ?country dbo:administrativeTerritory ?region .

  # Birthplace of Dado Polumenta
  dbr:Dado_Polumenta dbo:birthPlace ?dadoPolumentaBirthPlace .

  # Birthplace of the actor from the show
  ?actor dbo:birthPlace ?actorBirthPlace .
  FILTER(?actor = dbr:Emir_Hadžihafizbegović)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
98,27,test,"Give me the region of Philippine Standard Time and birth place of the person born as Paolo Elito M. Ballesteros IV and entity in the region, that is a country, of Philippine Standard Time.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace ?pstRegion ?country
WHERE {
  # Find the birthplace of Paolo Elito M. Ballesteros IV
  dbr:Paolo_Elito_M._Ballesteros_IV dbo:birthPlace ?birthPlace .

  # Identify the region associated with Philippine Standard Time
  dbr:Philippine_Standard_Time dbo:region ?pstRegion .

  # Find countries within that PST region
  ?country dbo:locatedIn ?pstRegion .
}
```",5,6,6,2,3,2,3,28,0,0,2,0,0.0,0
839,66,test,"Give me the band of the member of Böhse Onkelz and band of the person born, that is a musical artist, as Kevin Richard Russell and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?memberBand ?kevinBand ?musicianBand
WHERE {
  # Find members of Böhse Onkelz and their bands
  ?onkelzMember dbo:band dbr:Böhse_Onkelz .
  OPTIONAL { ?onkelzMember dbo:band ?memberBand . }

  # Find Kevin Richard Russell's band(s)
  ?kevin dbr:Kevin_Richard_Russell ;
         dbo:birthPlace ?place ;
         a dbo:MusicalArtist .
  OPTIONAL { ?kevin dbo:band ?kevinBand . }

  # Find the band of a professional musician
  ?musician a dbo:Musician ;
            dbo:profession dbr:Musician .
  OPTIONAL { ?musician dbo:band ?musicianBand . }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
124,58,test,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in Mahdist War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2
WHERE {
  # Find the person born on 1850-06-24
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  
  # Frank Rhodes' involvement in military conflicts
  dbr:Frank_Rhodes dbo:commanderOf ?conflict .
  ?conflict rdf:type dbo:MilitaryConflict ;
            dbo:participatingMilitaryForce ?militaryForce1 .

  # Mahdist War as a societal event and military conflict
  ?mahdistWar rdf:type dbo:SocietalEvent, dbo:MilitaryConflict ;
              dbo:participatingMilitaryForce ?militaryForce2 .
  
  # Frank Rhodes' role in the Mahdist War
  dbr:Frank_Rhodes dbo:commanderOf ?mahdistWar .

  # Ensure military force is related to both societal events and military conflicts
  FILTER (?conflict != ?mahdistWar)
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
773,65,test,"Give me the parent of the child, that is a royalty, of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious and spouse of the father of Charles the Fat.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> ?v6 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChildOfLouisTheGerman
WHERE {
  # Louis the German's child who is royalty
  ?child1 dbo:spouse* dbr:Louis_the_German .
  ?child1 a dbo:Monarch .

  # Parent of this child (who is royalty)
  ?parentOfChildOfLouisTheGerman dbo:child ?child1 .

  # Louis the Pious's child who is royalty
  ?child2 dbo:spouse* dbr:Louis_the_Pious .
  ?child2 a dbo:Monarch .

  # Successor of this child (who is royalty)
  ?successor dbo:predecessor ?child2 .

  # Parent of the successor
  ?parentOfSuccessor dbo:child ?successor .

  # Father of Charles the Fat
  ?fatherOfCharlesTheFat dbo:child dbr:Charles_the_Fat .

  # Spouse of the father of Charles the Fat
  ?spouseOfFatherOfCharlesTheFat dbo:spouse* ?fatherOfCharlesTheFat .

  # The parent we are looking for is both:
  # - Parent of Louis the German's child who is royalty
  # - Parent of the successor of Louis the Pious's child who is royalty
  # - Spouse of the father of Charles the Fat
  FILTER (?parentOfChildOfLouisTheGerman = ?parentOfSuccessor && 
          ?parentOfChildOfLouisTheGerman = ?spouseOfFatherOfCharlesTheFat)
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
83,18,test,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA and party of the governor of Dilma Rousseff.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?rulingParty
WHERE {
  ?person dbo:memberOfKedahFA true .
  ?person dbo:sportsManager true .
  ?governor dbp:governorOf dbr:Dilma_Rousseff .
  ?governor dbo:party ?person .

  ?person dbo:birthPlace ?town .
  ?town a dbo:Town ;
        dbo:country dbr:Brazil ;
        dbo:soccerClub ?club .

  ?town dbo:rulingParty ?rulingParty .
}
```

### Explanation:

- **Identify the Person:** We look for a person who is a member of Kedah FA, a sports manager, and politically affiliated with Dilma Rousseff's governor.
  
- **Birthplace Characteristics:** The birthplace must be a town in Brazil associated with a soccer club.

- **Ruling Party:** Finally, we query the ruling party in that specific town.",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
826,68,test,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v7 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?result
WHERE {
  # Step 1: Find the parent of Prince Friedrich of Hesse and by Rhine
  ?friedrich a dbo:Person ;
             foaf:name ""Prince Friedrich of Hesse and by Rhine""@en .
  ?parent dbo:child ?friedrich .

  # Step 2: Find the predecessor of this parent
  ?predecessor dbo:succeededBy ?parent .

  # Step 3: Identify a royal reference related to Louis I, find its child who is royalty, and determine the successor
  ?louisI a dbo:Person ;
          foaf:name ""Louis I""@en .
  ?royalReference dbo:relatedTo ?louisI ;
                  a dbo:Royalty .
  ?child dbo:parent ?royalReference ;
         a dbo:Royalty .
  ?successor dbo:succeededBy ?child .

  # Step 4: Locate Anna Magdalena Appel's father, his child, and that child's spouse
  ?annaMagdalenaAppel a dbo:Person ;
                     foaf:name ""Anna Magdalena Appel""@en .
  ?father dbo:spouse ?annaMagdalenaAppel .
  ?childOfFather dbo:parent ?father .
  ?spouse dbo:marrigePartner ?childOfFather .

  # Combine the results
  FILTER (?predecessor = ?successor && ?successor = ?spouse)
  BIND(?successor AS ?result)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
926,63,test,"Give me the child of the father, that is a royalty, of Mustafa III and father of the father of the spouse of Neşerek Kadın and successor of the child of Ahmed III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v5 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfMustafaIII
WHERE {
  # Mustafa III's children who are royalty
  ?mustafaIIIChild dbo:parent dbr:Mustafa_III ;
                  a dbo:Monarch .

  # Father of Neşerek Kadın's spouse
  ?neferkadınSpouse dbo:spouse dbr:Neşerek_Kadın .
  ?fatherOfNeferkadınSpouse dbo:child ?neferkadınSpouse .

  # Ahmed III's child and their successor
  ?ahmedIIIChild dbo:parent dbr:Ayşe_Sultân ;
                a dbo:Monarch .
  ?successor dbo:predecessor ?ahmedIIIChild .

  # Linking all conditions together
  FILTER (?mustafaIIIChild = ?fatherOfNeferkadınSpouse && ?mustafaIIIChild = ?successor)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
216,27,test,Give me the office of Tim Nicholls and party of the awardee of Australian Defence Medal and administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v0 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . ?result <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office ?party ?administration
WHERE {
  # Tim Nicholls' office
  dbr:Tim_Nicholls dbo:positionHeld ?office .

  # Awardee of Australian Defence Medal's party
  ?awardee dbo:awardReceived dbr:Australian_Defence_Medal .
  ?awardee dbo:partyAffiliation ?party .

  # Designer of Woolfe: The Red Hood Diaries' administration
  ?designer dbo:designed dbr:Woolfe:_The_Red_Hood_Diaries .
  ?administration dbo:headOfState ?leader .
  ?designer dbo:workedUnder ?administration .
}
```

This query uses the following logic:

- **Tim Nicholls' Office**: We look for the `positionHeld` property associated with Tim Nicholls.
- **Awardee's Party**: We find individuals who have received the Australian Defence Medal and their political party affiliation.
- **Designer's Administration**: We identify the designer of ""Woolfe: The Red Hood Diaries"" and determine under which administration they worked.",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
456,67,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of Danielle Spencer (Australian actress) and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfAlanDoyle ?spouseBand ?alterEgo
WHERE {
  # Alan Doyle's band
  dbr:Alan_Doyle dbo:memberOf ?bandOfAlanDoyle .
  
  # Danielle Spencer's spouse and their band
  dbr:Danielle_Spencer dbo:spouse ?spouse .
  ?spouse dbo:memberOf ?spouseBand .

  # Lamont Cranston's alter ego
  dbr:Lamont_Cranston dbo:fictionalAlterEgo ?alterEgo .
  
  # Ensure the band of Alan Doyle is a musical artist
  ?bandOfAlanDoyle rdf:type dbo:MusicalArtist .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
170,25,test,Give me the birth place of the awardee of People's Artist of Russia and domain of Mayor and entity in the work of International Energy Agency.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . ?result <http://dbpedia.org/ontology/country> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace ?mayorDomain ?ieaEntity
WHERE {
  # Find the awardee of People's Artist of Russia and their birthplace
  ?person dbo:title ""People's Artist of Russia""@en .
  ?person dbo:birthPlace ?birthPlace .

  # Find the domain associated with a Mayor (assuming it refers to a city or organization)
  ?mayor rdf:type dbr:Mayor .
  ?mayor dbo:city ?mayorDomain .

  # Find an entity related to the work of International Energy Agency
  ?ieaEntity dbo:organization ""International Energy Agency""@en .
}",5,5,6,2,3,2,3,28,0,0,3,0,0.0,0
955,19,test,"Give me the band of the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs and band of the writer of Don't Forget Your Roots (album).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?band
WHERE {
  # Find band members of Street Dogs who are musical artists and artists
  ?bandMember dbo:memberOfBand dbr:Street_Dogs .
  ?bandMember a dbo:MusicalArtist .
  ?bandMember a dbo:Artist .

  # Ensure the band member is also the writer of ""Don't Forget Your Roots""
  ?album dbo:writer ?bandMember ;
         rdfs:label ""Don't Forget Your Roots""@en .
  
  # Get the band associated with this band member
  ?bandMember dbo:memberOfBand ?band .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
216,28,test,Give me the party of the awardee of Australian Defence Medal and office of the mayor of Ros Bates and administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?party ?mayorOffice ?administration
WHERE {
  # Awardee of Australian Defence Medal and their party
  ?awardee dbo:award dbr:Australian_Defence_Medal .
  ?awardee dbo:politicalParty ?party .

  # Ros Bates and her office as mayor
  dbr:Ros_Bates dbo:office ?mayorOffice .
  FILTER (CONTAINS(LCASE(str(?mayorOffice)), ""mayor""))

  # Designer of Woolfe: The Red Hood Diaries and their administration
  ?designer dbo:workProduct dbr:Woolfe:_The_Red_Hood_Diaries .
  ?designer dbo:administration ?administration .
}",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
18,25,test,"Give me the parent of the professional in Actress and alumnus of Marymount College, Tarrytown and professional in the award of Ana María Sánchez de Ríos.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # First entity: Actress and alumnus of Marymount College, Tarrytown
  ?person1 a dbo:Actor ;
           dbo:almaMater dbr:Marymount_College,_Tarrytown ;
           dbo:occupation ""Actress"" .
  
  # Second entity: Professional associated with the award Ana María Sánchez de Ríos
  ?person2 dbo:award dbr:Ana_María_Sánchez_de_Ríos .

  # Both individuals have a parent in common
  ?parent dbo:child ?person1 ;
          dbo:child ?person2 .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
773,58,test,"Give me the spouse of Louis the German and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of the successor of Charles the Bald.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse
WHERE {
  # Louis the German and his spouse
  dbr:Louis_the_German dbo:spouse ?spouse .

  # The spouse must be a parent of a child who is royalty
  ?spouse dbo:child ?child .
  ?child rdf:type dbo:Monarch .

  # Carloman of Bavaria as the father, who is an office holder and royalty
  ?child dbo:father dbr:Carloman_of_Bavaria .
  dbr:Carloman_of_Bavaria rdf:type dbo:Monarch ;
                         dbo:officeHolder ?office .

  # The spouse must also be a parent of the successor of Charles the Bald
  ?spouse dbo:child ?successor .
  ?successor dbo:succeededBy dbr:Charles_the_Bald .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
129,27,test,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and professional in  and associated musical artist of the person born as Tahj Malik Chandler.","SELECT ?result WHERE { <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?dreamvilleArtist ?lilUziVertArtist
WHERE {
  # Find the musical artist associated with Dreamville Presents: Revenge
  ?event dbr:Dreamville_Presents:_Revenge .
  ?event dbo:musicalArtist ?dreamvilleArtist .
  
  FILTER(?dreamvilleArtist a dbo:MusicalGroup) # Ensure it's an organization

  # Find the musical artist associated with Lil Uzi Vert (Tahj Malik Chandler)
  ?person dbr:Lil_Uzi_Vert .
  ?person foaf:name ""Lil Uzi Vert""@en .
  
  ?person dbo:musicalArtist ?lilUziVertArtist .

  FILTER(?lilUziVertArtist a dbo:MusicalGroup) # Ensure it's an organization
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
573,71,test,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).","SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/governor> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v8 . ?v8 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?v7 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # John Quincy Adams' work
  ?work dbo:author dbr:John_Quincy_Adams .
  
  # Author who is a politician and office holder
  ?author dbo:authored ?work ;
          rdf:type dbo:Politician, dbo:OfficeHolder ;
          dbo:parent ?parent .

  # Person decedent at the residence (settlement)
  ?person dbp:deceasedAt ?residence .
  ?residence rdf:type dbo:Settlement .

  # Professional who is American
  ?professional dbo:nationality dbr:United_States ;
                dbo:worksFor ?administration .
  ?administration rdf:type dbo:Region .

  # Administration linked to Charlie Baker's real name
  ?administration dbp:name ?charlieBakerRealName .
  ?charlieBakerRealName rdfs:label ""Charlie Baker""@en .

  # Linking the professional and person decedent
  ?person dbo:profession ?professional .
}
```",9,14,10,3,3,3,3,71,0,0,2,0,0.0,0
791,59,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse
WHERE {
  # Emperor Takakura and his predecessor
  dbr:Takakura_of_Japan dbo:predecessor ?predecessor .
  
  # Child of the predecessor (grandchild of Takakura)
  ?predecessorChild dbo:child ?predecessorGrandchild .
  ?predecessorGrandchild a dbo:Royalty ;
                        dbo:officeHolder true .

  # Emperor Go-Shirakawa and his spouse
  dbr:Go-Shirakawa_of_Japan dbo:spouse ?goShirakawaSpouse .

  # Spouse of the spouse who is royalty
  ?goShirakawaSpouse dbo:spouse ?secondSpouse .
  ?secondSpouse a dbo:Royalty ;
               dbo:spouse ?spouseOfSpouse .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
715,70,test,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v1 <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?abdElKrimCommander ?carlosFrancoOffice ?mayor1933Commander
WHERE {
  # Abd el-Krim's commander in a military conflict
  ?abdElKrim dbr:Abd_el-Krim .
  ?abdElKrim dbo:militaryConflict ?conflict .
  ?commanderInConflict dbo:commander ?abdElKrim ;
                      rdf:type dbo:MilitaryCommander .

  # Carlos Franco Iribarnegaray's office
  ?carlosFranco dbr:Carlos_Franco_Iribarnegaray .
  ?office dbo:head ?carlosFranco ;
          a dbo:GovernmentAgency, dbo:Organization .

  # Mayor from 1933 Spanish general election
  ?mayor1933 dbr:Mayor_of_Spain_in_1933 .
  ?election dbr:Spanish_general_election,_1933 .
  ?mayor1933 dbo:electedDuring ?election ;
             rdf:type dbo:Politician, dbo:OfficeHolder, dbo:President .

  # Commander in the force of the mayor
  ?commanderInForce dbo:commander ?mayor1933 ;
                    rdf:type dbo:MilitaryCommander .
}",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
579,20,test,"Give me the native of the residence, that is English and a settlement, of the resident of Scotland and person born as the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeOfResidence
WHERE {
  ?officeHolder a dbo:OfficeHolder ;
                dbo:birthName ?birthName ;
                dbo:residence ?residence .
  
  ?residence dbo:country dbr:Scotland .

  ?person dbp:nativeName ?birthName ;
          dbo:nationality dbr:England ;
          dbo:settlementType dbr:Settlement .

  ?settlement dbo:nativeName ?nativeOfResidence ;
              dbo:resident ?person .
}
```",6,9,7,3,2,3,2,20,0,0,18,0,0.0,0
47,65,test,"Give me the office of the administration of Jagdeep Dhankhar and office of the awardee of Padma Vibhushan and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v6 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeJagdeep ?officePadmaVibhushan ?awardMantuGhosh ?officeAwardMantuGhosh
WHERE {
  # Office of Jagdeep Dhankhar's administration
  dbr:Jagdeep_Dhankhar dbo:positionHeld ?officeJagdeep .

  # Offices of Padma Vibhushan awardees
  ?person dbo:awardReceived dbr:Padma_Vibhushan .
  ?person dbo:positionHeld ?officePadmaVibhushan .

  # Award and office associated with Mantu Ghosh
  dbr:Mantu_Ghosh dbo:awardReceived ?awardMantuGhosh .
  OPTIONAL { 
    ?awardMantuGhosh dbo:awardee ?personAward .
    ?personAward dbo:positionHeld ?officeAwardMantuGhosh .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
976,65,test,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as Mehmet Naci Bostancı.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v0 <http://dbpedia.org/property/office> ?result . ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mayorOffice ?leaderOffice ?personOffice
WHERE {
  # Mayor who is a politician, office holder, and Turkish
  ?mayor a dbo:Mayor ;
         dbo:nationality dbr:Turkey ;
         dbo:officeHolderOf ?city .
  
  # Reference to Millet İttifakı as an organization and political party
  ?reference a dbo:Organization ;
             dbo:politicalParty dbr:Millet_İttifakı ;
             dbo:nationality dbr:Turkey .

  # Link mayor to the reference
  ?mayor dbo:memberOf ?reference .
  
  # Leader of Grand National Assembly of Turkey
  ?leader a dbo:Politician ;
          dbo:officeHolderOf dbr:Grand_National_Assembly_of_Turkey ;
          dbo:positionTitle ?leaderOffice .

  # Person born as Mehmet Naci Bostancı
  ?person foaf:name ""Mehmet Naci Bostancı"" ;
          dbo:nationality dbr:Turkey ;
          dbo:officeHolderOf ?office .
  
  # Link person to their office
  ?person dbo:birthName ""Mehmet Naci Bostancı"" .

  # Assign offices to variables
  ?mayor dbo:positionTitle ?mayorOffice .
}",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
933,59,test,"Give me the reference to the birth name of the professional in Musician and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?member ?birthName
WHERE {
  ?band dbo:bandMember ?member .
  ?member foaf:name ?name .
  FILTER regex(?name, ""Ramones"", ""i"") .
  OPTIONAL { ?member dbp:birthName ?birthName . }
}
```

This query does the following:
- Selects members of a band (`?band`) who are part of The Ramones.
- Filters to ensure that the member's name includes ""Ramones"".
- Optionally retrieves their birth names if available.",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
917,59,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  # Find the spouse of Leleiohoku I
  ?spouse a dbo:RoyalPerson ;
          dbo:spouse ?leleiohokuI .
  
  # Identify the father of this spouse
  ?father dbo:child ?spouse .

  # Find the child of this father who is royalty
  ?royalChild a dbo:RoyalPerson ;
              dbo:parent ?father .

  # Find the mayor of the Hawaiian Kingdom
  ?mayor dbp:office ""Mayor of the Hawaiian Kingdom"" ;
         dbo:child ?mayorChild .

  # Identify the child of the mayor who is royalty
  ?royalMayorsChild a dbo:RoyalPerson ;
                    dbo:parent ?mayor .

  # Find the parent of this royal child related to the mayor
  ?parent dbo:child ?royalMayorsChild .
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
582,56,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to the residence of Hirotaka Sugawara and player in Kazuaki Nagasawa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?teamNickname ?sugawaraResidence
WHERE {
  # Find the organization (team) associated with Hajime Moriyasu
  ?organization dbo:manager dbr:Hajime_Moriyasu .
  
  # Get the nickname of this team
  ?organization dbo:nickname ?teamNickname .

  # Ensure Kazuaki Nagasawa is a player in the same team
  ?player dbo:playsFor ?organization ;
          rdf:type dbo:FootballPlayer ;
          rdfs:label ""Kazuaki Nagasawa""@en .
  
  # Find Hirotaka Sugawara's residence
  dbr:Hirotaka_Sugawara dbo:residence ?sugawaraResidence .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
715,69,test,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero and commander in the force, that is a military conflict, of the native of Morocco.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader
WHERE {
  # Carlos Franco Iribarnegaray's association with an office
  ?office dbo:employee dbr:Carlos_Franco_Iribarnegaray .
  
  # The office is a government agency and organization
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .

  # Leader of the office
  ?office dbo:leader ?leader .

  # Francisco Largo Caballero as commander in the force related to this office
  ?force dbo:commander dbr:Francisco_Largo_Caballero .
  ?office dbo:relatedForce ?force .

  # Military conflict involving a native of Morocco
  ?conflict dbo:participant ?native ;
            rdf:type dbo:MilitaryConflict .
  ?native dbo:nationality dbr:Morocco .
  
  # Link the military conflict to the force
  ?force dbo:involvedIn ?conflict .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
326,19,test,"Give me the person decedent at the award, that is a country, of the awardee of French Legion of Honor and resident of the birthplace, that is a state and British, of David Jessel.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . ?v0 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?decedentCountry
WHERE {
  # David Jessel's birthplace is a state in Britain
  dbr:David_Jessel dbo:birthPlace ?birthState .
  ?birthState rdf:type dbo:State ;
              dbo:country dbr:United_Kingdom .

  # Awardee of the French Legion of Honor who resides in this British state
  ?awardee dbo:honoraryAward dbr:French_Legion_of_Honor ;
          dbp:residencePlace ?birthState .

  # The award is associated with a country (decedent at the award)
  ?award dbo:country ?decedentCountry .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
465,57,test,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of Anne of Brittany.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Parent of Elizabeth of Austria
  ?parent dbo:child dbr:Elizabeth_of_Austria_(1526–1545) .
  
  # Successor of Ercole II d'Este
  ?successor dbo:predecessor dbr:Ercole_II_d%27Este .

  # Child that is royalty and successor of the child of Anne of Brittany
  ?child1 dbo:parent dbr:Anne_of_Brittany .
  ?child2 dbo:royalty true .
  ?child2 dbo:successor ?child1 .

  # Spouse of the child (royalty) of the parent of Elizabeth of Austria
  ?spouse dbo:spouse ?child2 .
  
  # Ensure the successor is also the successor of Ercole II d'Este
  FILTER (?successor = ?parent)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
987,69,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and birth place of the actor of All for Free.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/timeZone> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity WHERE {
  # Find the country of the time zone for Canicosa de la Sierra
  OPTIONAL { 
    dbr:Canicosa_de_la_Sierra dbo:timeZone ?timezone .
    ?timezone dbo:country ?country .
  }

  # Find bands Dado Pratelli is a member of and their birthplaces
  OPTIONAL {
    dbr:Dado_Pratelli dbo:memberOfBand ?band .
    ?band dbp:birthPlace ?entity .
  }

  # Find actors in ""All for Free"" and their birthplaces
  OPTIONAL {
    dbr:All_for_Free dbo:actor ?actor .
    ?actor dbp:birthPlace ?entity .
  }

  # Ensure the entity is a country
  ?country rdf:type dbo:Country .

  # Filter to ensure all conditions are met
  FILTER(?timezone && ?band && ?actor)
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
955,18,test,"Give me the band of the band member, that is a musical artist and an artist, of Street Dogs and band of the writer of the work, that is a work and an album and a musical work, of Matt Freeman.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberBand ?writerBand
WHERE {
  # Find band members of Street Dogs who are also musical artists
  ?member dbo:memberOf dbr:Street_Dogs .
  FILTER EXISTS { ?member a dbo:MusicalArtist . }

  # Get the band associated with this member
  ?member dbo:band ?bandMemberBand .

  # Find works by Matt Freeman
  ?work dbo:writer dbr:Matt_Freeman ;
        (dbo:album | dbo:musicalWork) .

  # Get the band of the writer of these works
  ?work dbo:writer ?writer .
  ?writer dbo:band ?writerBand .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
715,63,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and commander in the force of Francisco Largo Caballero and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v2 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Native of Morocco who is a commander in the same force as Francisco Largo Caballero
  ?moroccan dbr:Morocco dbo:nativePlace .
  ?conflict dbo:commander ?moroccan ;
            dbo:commander dbr:Francisco_Largo_Caballero .

  # Commander who also leads the office of Carlos Franco Iribarnegaray
  ?office dbo:leader ?commander ;
          dbo:leader dbr:Carlos_Franco_Iribarnegaray .
  
  # Ensure the commander is distinct and fits all criteria
  FILTER(?moroccan != dbr:Francisco_Largo_Caballero && ?commander != dbr:Carlos_Franco_Iribarnegaray)
}
ORDER BY ?commander",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
129,26,test,Give me the associated musical artist of EarthGang and professional in the mayor of 1999 West Dunbartonshire Council election and associated musical artist of the person born as Tahj Malik Chandler.,"SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?artist2 ?mayorArtist
WHERE {
  # EarthGang's associated musical artist
  dbr:EarthGang dbo:associatedMusicalArtist ?artist1 .

  # Mayor of the 1999 West Dunbartonshire Council election
  ?election dbo:electedOffice ?office .
  FILTER (STRSTARTS(STR(?office), ""http://dbpedia.org/resource/Mayor_of_West_Dunbartonshire""))
  ?mayor dbo:holdsPoliticalOffice ?office ;
         dbo:associatedMusicalArtist ?mayorArtist .

  # Person born as Tahj Malik Chandler
  ?person foaf:name ""Tahj Malik Chandler"" .
  ?person dbo:birthName ?name .
  FILTER (STR(?name) = ""Tahj Malik Chandler"")
  ?person dbo:associatedMusicalArtist ?artist2 .
}",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
917,68,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v6 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Mayor of Hawaiian Kingdom
  ?mayor dbo:position ""Mayor""@en .
  
  # Child of the mayor who is royalty
  ?child dbo:childOf ?mayor ;
         a dbo:Royal .

  # Father of Kamehameha IV
  ?kamehamehaIV dbr:Kamehameha_IV ;
                dbo:father ?fatherKamehamehaIV .
  
  # Child of the father of Kamehameha IV
  ?child2 dbo:childOf ?fatherKamehamehaIV .

  # Spouse of Leleiohoku I who is royalty
  ?leleiohokuI dbr:Leleiohoku_I ;
               dbo:spouse ?spouse .
  
  ?spouse a dbo:Royal .

  # Father of the spouse of Leleiohoku I
  ?fatherSpouse dbo:childOf ?spouse .

  # The child must satisfy all conditions
  FILTER (?child = ?child2 && ?child = ?fatherSpouse)

  # Parent of this specific child
  ?parent dbo:parentOf ?child .
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
274,25,test,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie and associated musical artist of Cecil Taylor and professional in the designer of Tetris Classic.","SELECT ?result WHERE { <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Identify Dizzy Gillespie by his birth name
  dbr:Dizzy_Gillespie dbo:birthName ""John Birks Gillespie""@en .

  # Find band members who are also musical artists
  ?bandMember dbo:memberOf dbr:Dizzy_Gillespie .
  ?bandMember a dbo:MusicalArtist .

  # Check association with Cecil Taylor
  ?association dbo:artist dbr:Cecil_Taylor ;
               dbo:associatedBandOrchestra ?bandMember .

  # Verify professional connection to Alexey Pajitnov, designer of Tetris Classic
  ?connection dbo:professional dbr:Aleksandr_Pažitnov .
  ?connection dbo:relatedTo ?bandMember .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
216,67,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in Igor Bišćan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v6 . ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  ?player a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerManager .

  ?player dbo:playsFor ?club .
  ?club a dbo:SportsClub ;
        a dbo:SoccerClub .

  ?coach a dbo:SoccerCoach ;
         dbo:playerInTeam ?player .

  ?džemal dbr:Džemal_Berberović ;
          dbo:teamMember ?player .

  ?pavel dbr:Pavel_Vezhinov ;
         dbo:dateOfDeath ?deathDate .
  FILTER (?deathDate < NOW()) .

  ?igor dbr:Igor_Bišćan ;
        dbo:playsWith ?player .

}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
645,61,test,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v3 <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader
WHERE {
  # Step 1: Identify individuals who are natives of Restoration (Spain) and are presidents or politicians.
  ?person dbo:nationality dbr:Restoration_(Spain);
          a dbo:President|dbo:Politician.

  # Step 2: Find military forces associated with these individuals that are events, military conflicts, and societal events.
  ?militaryForce dbo:participant ?person;
                 a dbo:MilitaryConflict|dbo:SocietalEvent|dbr:Event.

  # Step 3: Locate the office which is both a government agency and an organization related to this military force.
  ?office dbo:relatedTo ?militaryForce;
          a dbo:GovernmentAgency|dbo:Organization.

  # Step 4: Identify the leader of this office.
  ?leader dbo:headOf ?office.
}
```",6,13,7,3,2,3,3,71,0,0,2,0,0.0,0
98,8,test,Give me the child of the child of Emperor Toba and parent of Emperor Rokujō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Toba> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Emperor_Rokujō> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild
WHERE {
  ?emperorToba a dbo:Emperor ;
               dbp:spouse ?parent1 .
  
  ?childOfToba dbo:child ?emperorToba ;
               dbo:child ?grandchild .

  ?grandchild dbp:spouse ?parent2 .

  ?emperorRokujō a dbo:Emperor ;
                 dbo:child ?grandchild .
}
```

This query does the following:
- Identifies Emperor Toba and his child.
- Finds the grandchild of Toba who is also a parent to Emperor Rokujō.",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
507,57,test,"Give me the spouse of Anne V. Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of Guy Ferland.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse ?director
WHERE {
  # Find Anne V. Coates and her spouse
  dbr:Anne_V._Coates dbo:spouse ?spouse .

  # Find the director of a movie that is both a ""movie"" and a ""work""
  ?movie a dbo:Film ;
         dbo:director ?director .
  
  # Ensure the person was born on June 17, 1919
  ?person dbo:birthday ""1919-06-17""^^xsd:date .

  # Ensure professional association with Guy Ferland
  ?person dbo:profession dbr:Guy_Ferland .

  # Link the director to the person born on 1919-06-17 and associated with Guy Ferland
  FILTER (?director = ?person)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
573,62,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of John Quincy Adams.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://dbpedia.org/property/governor> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?personDecedentAtResidence
WHERE {
  # Find Charlie Baker's real name
  dbr:Charlie_Baker_(Australian_footballer) dbo:realName ?charlieBakerRealName .

  # Find John Quincy Adams' parent
  dbr:John_Quincy_Adams dbo:parent ?johnQuincyAdamsParent .

  # Find an American politician
  ?americanPolitician a dbo:Politician ;
                    dbp:nationality ""American""@en .

  # The residence of the American politician should be a settlement
  ?americanPolitician dbo:residence ?settlementResidence .
  ?settlementResidence a dbo:Settlement .

  # Find the decedent at this settlement
  ?settlementResidence dbo:decedentAt ?personDecedentAtResidence .

  # The administration related to the decedent should be a region
  ?personDecedentAtResidence dbo:administration ?regionAdministration .
  ?regionAdministration a dbo:Region .

  # Ensure the real name of Charlie Baker matches with John Quincy Adams' parent
  FILTER (?charlieBakerRealName = ?johnQuincyAdamsParent)
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
573,56,test,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  # John Quincy Adams' work and his parent who is a politician and office holder
  dbr:John_Quincy_Adams dbo:author dbr:Some_Work .
  
  ?work dbo:author dbr:John_Quincy_Adams .
  ?parent dbo:child dbr:John_Quincy_Adams ;
          a dbo:Politician, dbo:OfficeHolder .

  # Person deceased at Quincy, Massachusetts
  ?person dbp:placeOfDeath dbr:Quincy,_Massachusetts ;
          dbo:deathPlace dbr:Quincy,_Massachusetts .
  
  # Person deceased in the administration (region) of Charlie Baker
  dbr:Charlie_Baker dbo:officeHolder dbr:Some_Administration .
  ?person dbo:deathPlace dbr:Some_Administration .

  # Linking the parent to the person who meets all conditions
  ?parent dbo:child ?person .
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
582,59,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player (SAMPLE(?residence) AS ?referenceResidence)
WHERE {
  # Kazuaki Nagasawa's child
  ?child dbo:parent dbr:Kazuaki_Nagasawa .
  
  # The father of this child who is an athlete, soccer manager, and sports manager
  ?father dbo:child ?child ;
          a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .

  # Hirotaka Sugawara as a scientist
  dbr:Hirotaka_Sugawara a dbo:Scientist .
  
  # Reference to the residence of the person related to Hirotaka Sugawara
  OPTIONAL {
    ?relatedPerson dbo:residence ?residence .
    ?relatedPerson dbo:colleague dbr:Hirotaka_Sugawara .
  }
}
GROUP BY ?player",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
433,68,test,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in the profession of Bob Marley and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist
WHERE {
  # Step 1: Find associated musical artist of Ornette Coleman
  ?artist1 dbo:associatedMusicalArtist dbr:Ornette_Coleman .
  FILTER EXISTS { ?artist1 a dbo:MusicalArtist . }
  FILTER EXISTS { ?artist1 a dbo:Artist . }

  # Step 2: Use the result to find another associated musical artist
  ?artist2 dbo:associatedMusicalArtist ?artist1 .
  FILTER EXISTS { ?artist2 a dbo:MusicalArtist . }
  FILTER EXISTS { ?artist2 a dbo:Artist . }

  # Step 3: Find associated musical artist of Bob Marley
  ?artist3 dbo:associatedMusicalArtist dbr:Bob_Marley .
  FILTER EXISTS { ?artist3 a dbo:MusicalArtist . }
  FILTER EXISTS { ?artist3 a dbo:Artist . }

  # Step 4: Use the result to find another associated musical artist
  ?artist4 dbo:associatedMusicalArtist ?artist3 .
  FILTER EXISTS { ?artist4 a dbo:MusicalArtist . }
  FILTER EXISTS { ?artist4 a dbo:Artist . }

  # Step 5: Find associated musical artist of Paul Chambers
  ?person dbr:Paul_Chambers ;
          dbo:birthPlace ?place .
  ?artist5 dbo:associatedMusicalArtist ?person .
  FILTER EXISTS { ?artist5 a dbo:MusicalArtist . }
  FILTER EXISTS { ?artist5 a dbo:Artist . }

  # Step 6: Use the result to find another associated musical artist
  ?finalArtist dbo:associatedMusicalArtist ?artist5 .
  FILTER EXISTS { ?finalArtist a dbo:MusicalArtist . }
  FILTER EXISTS { ?finalArtist a dbo:Artist . }
}",8,14,9,3,3,3,3,71,0,0,4,0,0.0,0
892,56,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of Henri Crolla and landmark at elevation of 58.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity
WHERE {
  ?entity a dbo:Region ;
          a dbo:Settlement ;
          a dbo:AdministrativeRegion ;
          dbo:country dbr:Italy .

  ?party a dbo:PoliticalParty, dbo:Organization ;
         dbo:member dbr:Andrea_Cozzolino .
  
  ?administration dbo:region ?entity ;
                  dbo:politicalParty ?party .

  ?profession dbp:person dbr:Henri_Crolla ;
              dbo:fieldOfActivity ?entity .

  OPTIONAL {
    ?landmark dbo:elevation ""58""^^xsd:float ;
              dbo:locatedIn ?entity .
  }
}",6,12,7,3,3,3,3,71,0,0,2,0,0.0,0
874,19,test,"Give me the band of the band member of the band, that is an organisation, of Mark Read (singer) and band of the writer, that is an artist and a musical artist, of Mezzanine (album).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMarkRead ?bandWriter
WHERE {
  # Find Mark Read's band that is an organization
  ?person rdfs:label ""Mark Read""@en .
  ?person dbo:memberOfBand ?bandMarkRead .
  ?bandMarkRead a dbo:Organization .

  # Find the writer of Mezzanine who is both an artist and a musical artist
  dbr:Mezzanine dbo:writer ?writer .
  ?writer rdfs:label ?writerLabel .
  FILTER (CONTAINS(LCASE(?writerLabel), ""artist"") && CONTAINS(LCASE(?writerLabel), ""musical artist""))
  
  # Find the band of this writer
  ?writer dbo:memberOfBand ?bandWriter .
}",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
267,18,test,"Give me the person born on the birth date of Dan Cathy and coach of the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/coach> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?person WHERE {
  # Step 1: Get Dan Cathy's birth date
  dbr:Dan_Cathy dbo:birthday ?danCathyBirthDate .

  # Step 2: Find a person born on the same date as Dan Cathy
  ?person dbo:birthday ?birthDate .
  FILTER (?birthDate = ?danCathyBirthDate)

  # Step 3: Identify if this person is a manager of a soccer club during the specified season
  OPTIONAL {
    ?managership dbo:agent ?person ;
                 dbo:startDate ?startDate ;
                 dbo:endDate ?endDate ;
                 dbo:team dbr:Tractor_S.C. .
    FILTER (
      xsd:date(?startDate) <= ""2021-05-31""^^xsd:date &&
      (xsd:date(?endDate) >= ""2020-08-01""^^xsd:date || NOT EXISTS { ?managership dbo:endDate ?endDate })
    )
  }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
83,9,test,"Give me the player in the person born on 1995-07-07 and player in the person born, that is an athlete, on 1991-11-19.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ""1991-11-19""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1995-07-07""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player1995 ?athlete1991
WHERE {
  # Find player born on 1995-07-07
  ?player1995 a dbo:Athlete ;
              dbo:birthDate ""1995-07-07""^^xsd:date .
  
  # Find athlete born on 1991-11-19
  ?athlete1991 a dbo:Athlete ;
               dbo:birthDate ""1991-11-19""^^xsd:date .
}
```",4,5,5,2,2,2,2,9,0,60,5,0.0,0.0,0
192,18,test,"Give me the spouse of the spouse, that is a royalty, of the child of Charles II of Naples and child of the child of Stephen V of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?royalSpouse
WHERE {
  # Step 1: Find a child of Charles II of Naples
  ?childOfCharlesII dbo:parent dbr:Charles_II_of_Naples .
  
  # Step 2: Find that child's own child
  ?grandChildOfCharlesII dbo:parent ?childOfCharlesII .

  # Step 3: Find a child of the child of Stephen V of Hungary
  ?childOfGrandchildOfStephenV dbo:parent ?stephenVGrandchild .
  
  # Step 4: Ensure these two individuals are the same person
  ?grandChildOfCharlesII owl:sameAs ?childOfGrandchildOfStephenV .

  # Find the spouse of this individual
  ?individual ?spouseProperty ?spouse .
  FILTER (?individual = ?grandChildOfCharlesII || ?individual = ?childOfGrandchildOfStephenV)

  # Step 6: Identify the spouse's spouse who is royalty
  ?spouse dbo:spouse ?royalSpouse .
  
  # Ensure that the royal spouse has a title indicating royalty
  ?royalSpouse dbo:title ?title .
  FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"")
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
791,57,test,"Give me the spouse of Taira no Tokuko and father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v5 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?predecessor
WHERE {
  # Taira no Tokuko's spouse
  dbr:Taira_no_Tokuko dbo:spouse ?spouse .
  
  # Child of Emperor Takakura who is royalty
  dbr:Emperor_Takakura dbo:child ?emperorAntoku .
  ?emperorAntoku a dbo:Monarch .

  # Predecessor of the child of the child of Emperor Go-Shirakawa
  dbr:Emperor_Go-Shirakawa dbo:child ?goShirakawaChild .
  ?goShirakawaChild dbo:child ?officeHolderRoyalty .
  ?officeHolderRoyalty a dbo:Monarch ;
                      dbo:predecessor ?predecessor .

}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
933,69,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of Alan Warner (musician) and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandName
WHERE {
  # Step 1: Identify the person born on 1947-04-21 with birth name Alan Warner (musician)
  ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
          a dbo:MusicalArtist ;
          dbp:birthday ""1947-04-21"" ;
          foaf:name ?name .
  
  # Ensure the person's birth name is related to Alan Warner (musician)
  ?person rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""alan warner musician""))

  # Step 2: Find a band that this person is part of, which is both a group and an organization
  ?band dbo:member ?person ;
        a dbo:Band, dbo:Organization .

  # Step 3: Find the band of this identified band
  ?secondBand dbo:band ?band .
  
  # Ensure this second band is also recognized as an artist and musical artist related to The Ramones Sound
  ?secondBand a dbo:Artist, dbo:MusicalArtist ;
              foaf:name ?secondBandName .

  FILTER(CONTAINS(LCASE(?secondBandName), ""the ramones sound""))

  # Return the name of the initial band
  ?band foaf:name ?bandName .
}
ORDER BY ?bandName",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
417,66,test,"Give me the child of the father of Frederick IX of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child
WHERE {
  # Frederick IX of Denmark's father and his child (Frederick IX)
  ?father a dbo:Person ;
          dbo:spouse ?mother ;
          dbo:child ?frederickIX .
  
  FILTER(?frederickIX = dbpedia:Frederick_IX_of_Denmark) .

  # Alexandrine of Mecklenburg-Schwerin's royal parent and spouse
  ?alexandrineParent a dbo:Person ;
                    dbo:spouse ?spouse ;
                    dbo:child dbpedia:Alexandrine_of_Mecklenburg-Schwerin .
  
  # Count Ingolf of Rosenborg's royal parent
  ?ingolfParent a dbo:Person ;
                dbo:child dbpedia:Count_Ingolf_of_Rosenborg .

  # The child we are looking for is both:
  # - A child of Frederick IX's father (i.e., Frederick IX himself)
  # - Fits the lineage involving Alexandrine and Count Ingolf
  ?child a dbo:Person ;
         dbo:child ?father ;
         dbo:parent ?alexandrineParent ;
         dbo:spouse ?ingolfParent .

  # Ensure all involved are royalty
  FILTER EXISTS { ?father dbo:royaltyStatus dbpedia:RoyalFamily }
  FILTER EXISTS { ?alexandrineParent dbo:royaltyStatus dbpedia:RoyalFamily }
  FILTER EXISTS { ?ingolfParent dbo:royaltyStatus dbpedia:RoyalFamily }
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
93,20,test,"Give me the death place of the governor of the native, that is a politician, of Seattle and capital of the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace
WHERE {
  # Find the governor of Seattle who is a politician
  ?governor dbo:officeHolderOf dbr:Seattle ;
           a dbo:Politician ;
           dbo:placeOfBirth ?birthPlace .

  # Find the region and settlement for Clam Cove Pictograph Site
  ?site dbo:location dbr:Clam_Cove_Pictograph_Site .
  ?region dbo:headquarters ?settlement .
  ?settlement dbo:isPartOf ?region .

  # Find the capital of this region
  ?capital dbo:country ?region ;
           a dbo:CapitalCity .

  # Get the death place of the governor
  ?governor dbo:deathPlace ?deathPlace .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
456,56,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in  and spouse of the actor of Pacific Drive.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfBand
WHERE {
  # Alan Doyle's band
  dbr:Alan_Doyle dbo:memberOf ?alanDoyleBand .
  
  # Ensure the band is a musical artist
  ?alanDoyleBand rdf:type dbo:MusicalArtist .

  # Find another band related to Alan Doyle's band
  ?alanDoyleBand dbo:band ?bandOfBand .

  # The second band has a professional relationship (generic property)
  ?bandOfBand dbo:profession ?profession .

  # Actor from ""Pacific Drive""
  ?actor dbo:title dbr:Pacific_Drive ;
         dbo:spouse ?spouse .

  # Connect the spouse to the second band
  ?spouse dbo:memberOf ?bandOfBand .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
232,9,test,"Give me the claim to fame of the person born as Emily Katherine Jacques and artistic movement of the person born, that is a writer, on 1849-09-14.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/movement> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Emily Katherine Jacques""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1849-09-14""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?claimToFame ?artisticMovement
WHERE {
  # Claim to fame of Emily Katherine Jacques (Kate Chopin)
  OPTIONAL {
    dbr:Kate_Chopin dbo:notableWork ?claimToFame .
  }
  
  # Artistic movement of the writer born on 1849-09-14
  ?writer a dbo:Writer ;
          dbp:birthday ""1849-09-14""^^xsd:date ;
          dbo:movement ?artisticMovement .

  FILTER (?writer != dbr:Kate_Chopin) # Ensure it's not Kate Chopin again
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
715,66,test,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderInConflict ?leaderOfOffice
WHERE {
  # Abd el-Krim as commander in a military conflict
  ?conflict dbo:commander ?abdElKrim .
  ?abdElKrim dbr:Abd_el-Krim .

  # Carlos Franco Iribarnegaray as leader of an office (government agency/organization)
  ?office dbo:leader ?carlosFranco .
  ?carlosFranco dbr:Carlos_Franco_Iribarnegaray .
  
  # Francisco Largo Caballero as commander in a military conflict
  ?conflict2 dbo:commander ?franciscoLargo .
  ?franciscoLargo dbr:Francisco_Largo_Caballero .

  # Linking the roles to find common commanders or leaders
  OPTIONAL { ?abdElKrim ?p ?carlosFranco . }
  OPTIONAL { ?franciscoLargo ?q ?carlosFranco . }

  BIND(?abdElKrim AS ?commanderInConflict)
  BIND(?carlosFranco AS ?leaderOfOffice)
}
ORDER BY ?commanderInConflict ?leaderOfOffice",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
888,20,test,"Give me the commander in the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022) and awardee of the award of the commander in 2022 Ukrainian eastern counteroffensive.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/property/awards> ?v5 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commanderName
WHERE {
  # Identify the military force involved in War in Donbas (2014–2022)
  dbr:War_in_Donbass_(2014%E2%80%932022) dbo:militaryForceOf ?militaryForce .
  
  # Find a commander associated with this military force
  ?commander dbo:positionHeld ?position ;
            rdfs:label ?commanderName .

  # Ensure the commander is linked to an event related to the military force
  ?event dbo:relatedEvent ?militaryForce ;
         rdf:type dbo:SocietalEvent .
  
  # Link the commander to this event
  ?commander dbo:involvedIn ?event .

  # Find awards received by the commander during the 2022 Ukrainian eastern counteroffensive
  ?award dbo:recipient ?commander ;
         dbo:awardedDuring dbr:2022_Ukrainian_eastern_counteroffensive .
  
  FILTER (CONTAINS(LCASE(?commanderName), ""commander""))
}
ORDER BY ?commanderName",6,8,7,3,2,3,2,20,0,0,4,0,0.0,0
456,61,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  # Alan Doyle and his band
  dbr:Alan_Doyle dbo:memberOf ?doyleBand .
  
  # The doyleBand is also a musical artist (another band)
  ?doyleBand a dbo:MusicalArtist ;
             dbo:bandMember ?musicalArtistBand .

  # Lamont Cranston's alter ego
  dbr:Lamont_Cranston dbo:alterEgo dbr:The_Shadow .
  
  # The Shadow is related to the musical artist band
  dbr:The_Shadow dbo:reference ?musicalArtistBand .
  
  # Ensure we are looking at a band that is also a musical artist
  ?musicalArtistBand a dbo:MusicalArtist .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
459,23,val,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?governor ?personBornAsKevinStitt
WHERE {
  # Find Cliff Roquemore's death place that is a settlement
  dbr:Cliff_Roquemore dbo:deathPlace ?deathPlace .
  
  FILTER EXISTS { ?deathPlace rdf:type dbo:Settlement . }
  
  # Get the governor of that settlement
  ?deathPlace dbo:governor ?governor .

  # Find Kevin Stitt's birth name and corresponding person
  dbr:Kevin_Stitt dbp:birthName ?birthName .
  ?person dbp:birthName ?birthName .
  BIND(?person AS ?personBornAsKevinStitt)
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
773,49,val,"Give me the spouse of the father of Charles the Fat and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
    # Step 1: Identify Charles the Fat's father
    ?charlesFat dbo:father ?father .
    FILTER(STR(?charlesFat) = ""Charles_the_Fat"")

    # Step 2: Find the spouse of Charles the Fat's father
    ?father dbo:spouse ?spouse .

    # Step 3: Identify the child of this spouse who is a royalty
    ?child dbo:parent ?spouse .
    FILTER(STR(?child) = ""Charles_the_Fat"") # Assuming Charles the Fat is the child in question

    # Step 4: Determine the parent of Carloman of Bavaria who is an office holder and a royalty
    ?carlomanParent dbo:parent dbr:Carloman_of_Bavaria .
    FILTER(STR(?carlomanParent) = ""Charles_the_Fat"") # Assuming Charles the Fat is the parent in question

    # Ensure this person is both an office holder and a royalty
    ?carlomanParent rdf:type dbo:Monarch .
    ?carlomanParent rdf:type dbo:OfficeHolder .

}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
18,20,val,"Give me the professional in  and parent of the professional in Actress and alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?child
WHERE {
  ?alumnus dbo:almaMater dbr:Marymount_College_Tarrytown .
  ?alumnus dbo:parent ?child .
  ?child rdf:type dbo:Actress .
  
  FILTER EXISTS { ?alumnus a dbo:Person . }
  BIND(?alumnus AS ?professional)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
443,23,val,Give me the landmark at elevation of the award of William Shepherd and birthplace of the work of yes.,"SELECT ?result WHERE { <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/author> ""yes""@en . ?result <http://dbpedia.org/ontology/elevation> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?landmark ?birthplace
WHERE {
  # Find the award location for William Shepherd
  ?award dbo:recipient dbr:William_Shepherd .
  ?award dbo:location ?awardLocation .

  # Get elevation of the award location and find landmark at that elevation
  ?awardLocation dbp:elevation ?elevation .
  ?landmark dbp:elevation ?elevation .

  # Find the birthplace of Yes's work
  dbr:Yes dbo:work ?yesWork .
  ?yesWork dbo:birthPlace ?birthplace .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
917,49,val,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfFather
WHERE {
  # Kamehameha III and his child who is royalty
  dbr:Kamehameha_III dbo:spouse ?mother .
  ?child dbo:parent dbr:Kamehameha_III ;
         a dbo:Monarch .

  # Father of the child (royalty) of Kamehameha III
  ?father dbo:parent ?child .
  
  # Child of this father
  ?childOfFather dbo:parent ?father .

  # Kamehameha IV and his child who is royalty
  dbr:Kamehameha_IV dbo:spouse ?mother2 .
  ?child2 dbo:parent dbr:Kamehameha_IV ;
          a dbo:Monarch .

  # Parent of the child (royalty) of Kamehameha IV
  ?parentOfChild2 dbo:parent ?child2 .

  # The child of the father must be the parent of the child of Kamehameha IV
  FILTER (?childOfFather = ?parentOfChild2)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
170,23,val,Give me the entity in the work of International Energy Agency and domain of the profession of John Scholey.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?result <http://dbpedia.org/ontology/leaderTitle> ?v1 . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?ieaEntity ?scholeyDomain
WHERE {
  # Find entities related to the work of International Energy Agency
  ?ieaEntity a dbo:Report ;
             dbo:organization dbr:International_Energy_Agency .

  OPTIONAL {
    # Find John Scholey's professional domain
    ?scholey dbo:profession ?profession .
    ?profession dbo:fieldOfStudy ?scholeyDomain .
    FILTER (str(?scholey) = ""John_Scholey"")
  }
}
```

This query does the following:
- Selects entities (`?ieaEntity`) that are reports or similar works associated with the International Energy Agency.
- Optionally finds John Scholey's professional domain (`?scholeyDomain`).

Note: The exact predicates and classes might need adjustment based on the actual DBpedia schema and available data.",4,4,5,2,2,2,3,28,0,0,99,0,0.0,0
645,46,val,"Give me the commander in the force of the commander in Siege of Madrid and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderInForce
WHERE {
  # Siege of Madrid as an event, military conflict, and societal event
  dbr:Siege_of_Madrid dbo:type ?eventType .
  FILTER (?eventType IN (dbr:Military_Conflict, dbr:Societal_Event))

  # Francisco Largo Caballero associated with the Siege of Madrid
  dbr:Francisco_Largo_Caballero dbo:associatedWithEvent dbr:Siege_of_Madrid .

  # Commander in the force during the Siege of Madrid
  ?commanderInForce dbo:commanderOf ?force .
  ?force dbo:involvedIn dbr:Siege_of_Madrid .

  # Force under that commander
  ?subordinateCommander dbo:commanderOf ?subordinateForce .
  ?subordinateForce dbo:partOf ?force .
}
```",5,8,6,3,2,3,3,71,0,0,53,0,0.0,0
715,42,val,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in Spanish Civil War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?abdElKrimCommander ?carlosFrancoCommander ?officeLeader
WHERE {
  # Abd el-Krim's commander in a military conflict
  ?abdElKrimConflict dbo:commander ?abdElKrimCommander .
  dbr:Abd_el-Krim dbo:militaryConflicts ?abdElKrimConflict .

  # Carlos Franco Iribarnegaray's commander role in the Spanish Civil War
  ?spanishCivilWar dbo:commander ?carlosFrancoCommander .
  dbr:Carlos_Franco_Iribarnegaray dbo:militaryConflicts ?spanishCivilWar .
  
  # Carlos Franco Iribarnegaray as leader of an office that is both a government agency and an organization
  ?office dbo:leader ?carlosFrancoCommander ;
          rdf:type dbo:GovernmentAgency, dbo:Organization .
  dbr:Carlos_Franco_Iribarnegaray dbo:headOf ?office .

}",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
839,44,val,"Give me the band of the member of Böhse Onkelz and band of Kevin Russell (musician) and band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v4 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandBöhseOnkelzMember ?bandKevinRussell ?bandCharlieHuhnBand
WHERE {
  # Find members of Böhse Onkelz and their bands
  ?member dbo:memberOf dbr:Böhse_Onkelz .
  ?member dbo:band ?bandBöhseOnkelzMember .

  # Find Kevin Russell's band
  dbr:Kevin_Russell_Musician dbo:band ?bandKevinRussell .

  # Find Charlie Huhn's band and then find another band associated with it
  dbr:Charlie_Huhn dbo:band ?bandCharlieHuhn .
  ?bandCharlieHuhn dbo:musicalArtist ?anotherBand .
  FILTER (?anotherBand != ?bandCharlieHuhn) 
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
41,23,val,"Give me the party of the work, that is an office holder, of yes and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyOfWork ?partyOfLeader
WHERE {
    ?officeHolder dbo:electedDuring dbr:2005_Castlereagh_Borough_Council_election .
    ?officeHolder dbo:politicalParty ?partyOfWork .
    
    OPTIONAL {
        ?leader dbo:isLeaderOf ?officeHolder ;
                a dbo:Politician, dbo:OfficeHolder .
        ?leader dbo:politicalParty ?partyOfLeader .
    }
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
865,41,val,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of Shahla Khatun and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherName
WHERE {
  # Abu Ahmad Abdul Hafiz's child who is a politician
  ?child dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz .
  FILTER EXISTS { ?child rdf:type dbo:Politician . }

  # This child's father, who is also Shahla Khatun's father
  ?father dbo:spouse ?mother .
  ?mother dbo:child ?child .
  ?shahlaMother dbo:child ?child .
  ?shahlaMother dbo:spouse ?father .

  # Ram Jaipal Singh Yadav's country of residence
  dbr:Ram_Jaipal_Singh_Yadav dbo:nativePlace ?country .

  # The father is native to the same country as Ram Jaipal Singh Yadav
  ?father dbo:nativePlace ?country .

  # Return the father's name
  ?father rdfs:label ?fatherName .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
216,54,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in the coach of Croatia national under-21 football team and team of Ognjen Vukojević.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v5 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  ?player a dbo:SoccerPlayer .
  ?player a dbo:SportsManager .
  ?player a dbo:SoccerManager .

  ?organisation a dbo:SportsClub ;
                a dbo:SoccerClub .

  ?player dbo:memberOf ?organisation .

  ?berberovic dbr:Džemal_Berberović ;
             dbo:teamMemberOf dbr:Croatia_national_under-21_football_team .
  ?player dbo:coachOf ?berberovic .

  ?vukojevic dbr:Ognjen_Vukojević .
  ?player dbo:coachOf ?vukojevic .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
129,21,val,Give me the associated musical artist of the person born as Tahj Malik Chandler and associated musical artist of EarthGang and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist1 ?artist2 WHERE {
  # Tahj Malik Chandler (Childish Gambino)
  OPTIONAL { 
    dbr:Tahj_Malik_Chandler dbo:musicalArtist ?artist1 .
  }
  
  # EarthGang
  OPTIONAL { 
    dbr:EarthGang dbo:musicalArtist ?artist2 .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
976,47,val,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?leaderOffice ?mayorOffice
WHERE {
  # Leader of the Grand National Assembly of Turkey
  ?assembly dbr:Grand_National_Assembly_of_Turkey .
  ?assembly dbo:president ?leader .
  ?leader dbo:office ?leaderOffice .

  # Mayor who is a politician, office holder, and Turkish
  ?mayor dbo:nationality dbr:Turkey ;
         dbo:occupation dbp:Politician ;
         dbo:officeHolder ?true .
  ?mayor dbo:office ?mayorOffice .

  # Millet İttifakı as an organization and political party
  ?party dbr:Millet_İttifakı ;
         a dbo:PoliticalParty, dbo:Organization ;
         dbo:nationality dbr:Turkey .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
573,52,val,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and parent of John Quincy Adams and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://dbpedia.org/property/governor> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedent
WHERE {
  # Decedent at the residence of William J. Phelan
  ?residence dbo:decedent ?personDecedent .
  ?residence dbo:settlement true .
  ?residence dbo:resident dbr:William_J._Phelan .

  # Parent of John Quincy Adams
  ?parentChildRelation dbo:child dbr:John_Quincy_Adams .
  ?parentChildRelation dbo:parent ?personDecedent .

  # Decedent at the administration of Charlie Baker (Australian footballer)
  ?administration dbo:decedent ?personDecedent .
  ?administration dbo:region true .
  ?administration dbo:administrator dbr:Charlie_Baker_(Australian_footballer) .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
645,48,val,"Give me the commander in the force of the commander in Siege of Madrid and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the commander involved in the Siege of Madrid
  ?siege dbo:partOf dbr:Siege_of_Madrid .
  ?siege dbo:commander ?commander .

  # Ensure the commander is also a leader of an office that is both a government agency and an organization
  ?office dbo:leader ?commander ;
          rdf:type dbo:GovernmentAgency, dbo:Organization .

  # Link the office to Camilo Menéndez Tolosa
  ?office dbo:member dbr:Camilo_Menéndez_Tolosa .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
926,47,val,Give me the father of the father of Abdulaziz and successor of the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?result
WHERE {
  # Father of the father of Abdulaziz
  ?abdulaziz dbo:father ?father1 .
  ?father1 dbo:father ?grandfather .

  # Spouse of Şermi Kadın and her child's successor
  ?sermiKadin a dbo:Person ;
              dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  ?child dbo:successor ?successor .

  # Find the intersection (common entity) between these two paths
  FILTER (?grandfather = ?successor)
  
  BIND(?grandfather AS ?result)
}
```",5,5,6,3,2,3,3,71,0,1,1,0.0,0.0,0
976,55,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as Mehmet Naci Bostancı and office of the leader, that is a politician, of Grand National Assembly of Turkey.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?officeMayor ?officeBostanci ?officeLeader
WHERE {
  # Office of the mayor from Nation Alliance (Turkey)
  ?mayor a dbo:Politician ;
         dbo:nationality dbr:Turkey ;
         dbo:partyMember dbr:Nation_Alliance_(Turkey) .
  ?mayor dbo:holdsOffice ?officeMayor .

  # Office of Mehmet Naci Bostancı
  dbr:Mehmet_Naci_Bostancı dbo:birthName ""Mehmet Naci Bostancı"" ;
                           dbo:holdsOffice ?officeBostanci .

  # Office of the leader of Grand National Assembly of Turkey
  ?leader a dbo:Politician ;
          dbo:position dbr:Speaker_of_the_Grand_National_Assembly_of_Turkey .
  ?leader dbo:holdsOffice ?officeLeader .
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
839,54,val,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of Matthias Röhr.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v0 <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandKevin ?bandPeter ?bandMatthias
WHERE {
  # Kevin Richard Russell's band
  OPTIONAL {
    ?personKevin a dbo:MusicalArtist ;
                foaf:name ""Kevin Richard Russell"" .
    ?personKevin dbo:memberOfBand ?bandKevin .
    FILTER EXISTS { ?bandKevin a dbo:Band . }
  }

  # Peter Schorowsky's band
  OPTIONAL {
    ?personPeter a dbo:MusicalArtist ;
                 foaf:name ""Peter Schorowsky"" .
    ?bandPeter a dbo:Band, dbo:Group .
    ?personPeter dbo:memberOfBand ?bandPeter .
  }

  # Matthias Röhr's band
  OPTIONAL {
    ?personMatthias a dbo:MusicalArtist ;
                    foaf:name ""Matthias Röhr"" .
    ?personMatthias dbo:memberOf ?bandMatthias .
    FILTER EXISTS { ?bandMatthias a dbo:Band . }
  }
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
445,53,val,"Give me the death place of Patrick Moore and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in the award of George H. Cameron.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?deathPlace ?residenceCountry ?award
WHERE {
  # Patrick Moore's death place
  dbr:Patrick_Moore dbo:placeOfBirth ?deathPlace .

  # Residence of an athlete from Great Britain
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:residenceLocation ?residence .
  ?residence dbp:countryName ?residenceCountry .

  # Award associated with George H. Cameron
  dbr:George_H._Cameron dbo:award ?award .
}
```

This query does the following:
- Retrieves the death place of Patrick Moore.
- Finds a country that is the residence of any athlete from Great Britain.
- Identifies an award associated with George H. Cameron.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
773,54,val,"Give me the spouse of the father of Charles the Fat and parent of Charles the Fat and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/ontology/successor> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Charles the Fat's father
  dbr:Charles_the_Fat dbo:father dbr:FatherOfCharlesTheFat .
  
  # Father of Charles the Fat is also a parent of Charles the Fat
  dbr:FatherOfCharlesTheFat dbo:parent dbr:Charles_the_Fat .

  # Spouse of the father
  dbr:FatherOfCharlesTheFat dbo:spouse ?spouse .

  # Louis the Pious's child and successor
  dbr:Louis_the_Pious dbo:child dbr:ChildOfLouisThePious .
  dbr:ChildOfLouisThePious dbo:succesor dbr:SuccessorOfChild .

  # Successor's parent is royalty
  dbr:SuccessorOfChild dbo:parent ?royaltyParent .
  FILTER (dbr:royaltyParent a dbo:RoyalFamilyMember)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
507,43,val,"Give me the professional in Film director, television director and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of Anne V. Coates.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v4 <http://dbpedia.org/ontology/director> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:FilmDirector .
  ?person a dbo:TelevisionProducer .
  ?person dbo:birthDate ?date .
  ?person foaf:name ?name .
  ?person dbo:spouse dbr:Anne_V._Coates .

  FILTER (YEAR(?date) = 1919 && MONTH(?date) = 6 && DAY(?date) = 17)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
36,22,val,"Give me the actor of the claim to fame, that is a film, of Lepacious Bose and person born in the birth year of Deanne Bray.",SELECT ?result WHERE { <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v0 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthYear> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor
WHERE {
  # Find Lepa Brena's films
  dbr:Lepa_Brena dbo:film dbr:Film1 .
  dbr:Lepa_Brena dbo:film dbr:Film2 .
  
  # Assume Film1 is her claim to fame (this might need more context)
  OPTIONAL { dbr:Film1 dbo:actor ?actor . }
  
  # Find Deanne Bray's birth year
  dbr:Deanne_Bray dbp:birthdayYear ?birthYear .

  # Find people born in the same year as Deanne Bray
  ?person dbp:birthdayYear ?birthYear .
  
  # Ensure we are considering actors of her films
  ?actor dbo:birthPlace ?place .
}
```

This query assumes that `dbr:Film1` is Lepa Brena's claim to fame, which might need additional context or data to determine accurately. Adjustments may be necessary based on the actual dataset and available information.",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
200,7,val,Give me the reference to the name of Angelcorpse and band member of Order from Chaos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Angelcorpse> <http://xmlns.com/foaf/0.1/name> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Order_from_Chaos> . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?angelcorpseRef ?bandMemberName WHERE {
  # Find the reference for Angelcorpse
  ?angelcorpse a dbo:Band ;
               rdfs:label ""Angelcorpse""@en .
  
  OPTIONAL { 
    ?angelcorpse dbo:wikiPageWikiLink dbr:Angelcorpse .
    BIND(dbr:Angelcorpse AS ?angelcorpseRef)
  }
  
  # Find a band member of Order from Chaos
  ?orderFromChaos a dbo:Band ;
                  rdfs:label ""Order from Chaos""@en .
  
  OPTIONAL {
    ?bandMember dbo:bandMember ?orderFromChaos ;
                rdfs:label ?bandMemberName .
    FILTER(lang(?bandMemberName) = 'en')
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
582,46,val,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?residence
WHERE {
  # Find Hirotaka Sugawara's residence
  ?sugawara a dbo:Scientist ;
            foaf:name ""Hirotaka Sugawara"" .
  
  ?sugawara dbo:locationResident ?residence .

  # Find Masami Nagasawa's father who is an athlete, soccer manager, and sports manager
  ?nagasawa a dbo:Person ;
            foaf:name ""Masami Nagasawa"" .
  
  ?father a dbo:Athlete, dbo:SoccerManager, dbo:SportsManager ;
          dbo:child ?nagasawa .

}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
507,55,val,"Give me the spouse of the person born as Anne Voase Coates and professional in the profession of Guy Ferland and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v3 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v5 <http://dbpedia.org/ontology/director> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Anne Voase Coates entity
  dbr:Anne_Voase_Coates a dbo:Person ;
    foaf:name ""Anne Voase Coates"" ;
    dbo:spouse ?spouse .

  OPTIONAL {
    # Movie directed by Anne Voase Coates featuring Beryl Reid
    ?movie dbo:director dbr:Anne_Voase_Coates ;
           dbo:starring dbr:Beryl_Reid .
  }
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
976,54,val,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?leaderOffice ?naciBostanciOffice ?mayorOffice ?organization
WHERE {
  # Leader of the Grand National Assembly of Turkey
  ?assembly dbr:Grand_National_Assembly_of_Turkey ;
            dbo:chairman ?leader .
  ?leader dbo:office ?leaderOffice .

  # Naci Bostancı's office
  ?naciBostanci dbr:Naci_Bostancı ;
                dbo:office ?naciBostanciOffice .

  # Mayor who is a politician, an office holder, and Turkish
  ?mayor dbo:nationality dbr:Turkey ;
         dbo:occupation dbp:Politician ;
         dbo:officeHolder ?true .
  ?mayor dbo:office ?mayorOffice .

  # Organization that is a political party, Turkish, and related to Millet İttifakı
  ?organization dbo:type dbr:Political_party ;
                dbo:nationality dbr:Turkey ;
                dbp:relatedTo dbr:Millet_İttifakı .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
41,21,val,"Give me the party of Declan Costello and party of the work, that is an office holder, of yes and party of Mark Durkan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/author> ""yes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?declanParty ?markParty
WHERE {
  # Declan Costello's party affiliation and office holder status
  dbr:Declan_Costello dbo:party ?declanParty .
  FILTER EXISTS { dbr:Declan_Costello dbo:officeHolder true } .

  # Mark Durkan's party affiliation and office holder status
  dbr:Mark_Durkan dbo:party ?markParty .
  FILTER EXISTS { dbr:Mark_Durkan dbo:officeHolder true } .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
645,55,val,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderOfOffice
WHERE {
  # Camilo Menéndez Tolosa and his office
  dbr:Camilo_Menéndez_Tolosa dbo:office ?office .
  
  # The office is both a government agency and an organization
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .

  # Francisco Largo Caballero and the military force
  dbr:Francisco_Largo_Caballero dbo:militaryForce ?militaryForce .
  
  # The military force is an event, a military conflict, and a societal event
  ?militaryForce rdf:type dbo:Event ;
                 rdf:type dbo:MilitaryConflict ;
                 rdf:type dbo:SocietalEvent .

  # Carlos Asensio Cabanillas as commander in the military force
  dbr:Carlos_Asensio_Cabanillas dbo:commanderInMilitaryForce ?militaryForce .
  
  # The leader of the office is what we want to find
  ?office dbo:leader ?leaderOfOffice .
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
892,50,val,"Give me the landmark at elevation of the award of the member of E-girls and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?landmark ?elevation
WHERE {
  # Find E-girls member who received an award
  ?member dbo:awardReceived ?award .
  
  # Find Italian entity that is a region, settlement, and administrative region of the Democratic Party (Italy)
  ?entity rdf:type dbo:Region ;
          dbo:country dbr:Italy ;
          dbp:administrativeRegion dbr:Democratic_Party_(Italy) .

  # Ensure the entity is also a settlement
  ?entity rdf:type dbo:Settlement .

  # Find landmarks at elevation related to this entity
  ?landmark dbo:elevation ?elevation ;
            dbo:location ?entity .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
645,42,val,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of Spanish Civil War and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader
WHERE {
  # Find the office that is a government agency and organization
  ?office a dbo:GovernmentAgency ;
          a dbo:Organization .

  # Camilo Menéndez Tolosa's leadership role in this office
  ?camilo dbr:Camilo_Menéndez_Tolosa ;
          dbo:leaderOf ?office .

  # Military force during the Spanish Civil War
  ?force dbo:militaryForceDuring ""Spanish Civil War""^^xsd:string .

  # Carlos Asensio Cabanillas's command role in this military force
  ?carlos dbr:Carlos_Asensio_Cabanillas ;
          dbo:commanderIn ?force .
  
  # Link the office to the military force (assuming such a relationship exists)
  ?office dbo:militaryForce ?force .

  # Return the leader of the office
  ?camilo dbo:leaderOf ?office .
}
```

This query attempts to find an entity that is both a government agency and an organization, where Camilo Menéndez Tolosa is the leader. It also looks for a military force during the Spanish Civil War commanded by Carlos Asensio Cabanillas, linking these entities through their roles.",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
987,53,val,"Give me the birth place of Moamer Kasumović and entity in the region, that is a country, of Central European Time and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceMilošević ?countryInCET ?bandBirthPlace
WHERE {
  # Moamer Kasumović's birthplace
  dbr:Slobodan_Milošević dbo:birthPlace ?birthPlaceMilošević .

  # Find a country in the Central European Time region
  ?countryInCET dbo:timeZone dbr:Central_European_Time ;
                rdf:type dbo:Country .

  # Dado Polumenta's birthplace
  dbr:Dado_Polumenta dbo:birthPlace ?bandBirthPlace .
  
  # Ensure the band is a musical artist
  dbr:Dado_Polumenta rdf:type dbo:MusicalArtist .
}
```",6,10,7,3,3,3,3,71,1,98,0,0.010101010101010102,1.0,0.02
865,45,val,Give me the father of AK Abdul Momen and father of the child of the father of Abul Maal Abdul Muhith and native of British Raj.,SELECT ?result WHERE { <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfAKAbdulMomen ?grandfatherChildFather
WHERE {
  # Father of AK Abdul Momen
  dbr:AK_Abdul_Momen dbo:father ?fatherOfAKAbdulMomen .

  # Abul Maal Abdul Muhith's father
  dbr:Abul_Maal_Abdul_Muhith dbo:father ?fatherOfAbulMaal .

  # Child of the father of Abul Maal Abdul Muhith (i.e., his grandfather)
  ?grandfatherChildFather dbo:child ?fatherOfAbulMaal .

  # Native of British Raj
  FILTER EXISTS {
    ?grandfatherChildFather dbo:nativePlace dbr:British_Raj .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
926,42,val,"Give me the child of the father, that is a royalty, of Mustafa III and father of the father of Abdulaziz and successor of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  # Mustafa III entity
  ?mustafaIII a dbo:Monarch ;
              foaf:name ""Mustafa III""@en .

  # Mustafa III's child who is royalty and successor
  ?mustafaIII dbo:successor ?child .
  ?child a dbo:Monarch ; # Ensures the child is royalty

  # The child must be father of Abdulaziz's grandfather
  ?grandfather dbp:fatherOf ?abdulaziz ;
               dbp:fatherOf ?father .
  ?child dbp:fatherOf ?grandfather .

  # Ensure the child is a male (commonly used for royalty)
  ?child dbo:gender dbr:Male .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
456,54,val,"Give me the professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and spouse of the actor of Pacific Drive and band of Alan Doyle.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?spouse
WHERE {
  # The Shadow is the alter ego of Lamont Cranston
  dbr:The_Shadow dbo:alterEgoOf dbr:Lamont_Cranston .

  # Find the professional associated with The Shadow
  dbr:The_Shadow dbo:profession ?professional .

  # Actor from ""Pacific Drive""
  ?actor dbo:title dbr:Pacific_Drive ;
         dbo:spouse ?spouse .

  # Band member of Alan Doyle
  ?bandMember dbo:memberOfBand dbr:GreatBigSea ;
              dbo:name ?spouse .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
933,46,val,"Give me the reference to the birth name of Alan Warner (musician) and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName ?band
WHERE {
  # Find Alan Warner (musician)
  dbr:Alan_Warner_(musician) dbo:birthName ?birthName .
  
  # Ensure he is a member of The Ramones
  OPTIONAL {
    ?memberOf dbo:bandMember ?alanWarner ;
              dbo:name ""The Ramones""@en .
    
    ?alanWarner foaf:name ?band .
  }
}
```

This query does the following:
- Selects Alan Warner's birth name.
- Checks if he is a member of The Ramones and retrieves the band name.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
791,42,val,"Give me the predecessor of Emperor Antoku and father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor
WHERE {
  # Emperor Antoku and his predecessor
  ?antoku dbo:succession dbp:Emperor_Antoku .
  ?predecessor dbo:succession ?antoku .

  # Child of Emperor Takakura who is royalty
  ?takakura dbo:child ?child .
  FILTER (strstarts(str(?child), ""http://dbpedia.org/resource/Category:Japanese_monarchs""))

  # Father of the child
  ?father dbo:child ?child .

  # Spouse of Emperor Takakura who is royalty
  ?spouse dbp:spouseOf ?takakura .
  FILTER (strstarts(str(?spouse), ""http://dbpedia.org/resource/Category:Japanese_monarchs""))

  # Spouse of the spouse
  ?grandSpouse dbp:spouseOf ?spouse .

  # Ensure the predecessor is also the father and grandSpouse
  FILTER (?predecessor = ?father && ?predecessor = ?grandSpouse)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
606,16,val,"Give me the birthplace of the alumnus of University of Pennsylvania and figure known as the nickname of DeKalb, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person dbo:almaMater dbr:University_of_Pennsylvania .
  ?person foaf:nick ?nickname .
  ?place rdfs:label ""DeKalb, Illinois""@en .
  ?place dbo:alsoKnownAs ?nickname .
  ?person dbo:birthPlace ?birthPlace .
}
```

This query does the following:
- Identifies a person who is an alumnus of the University of Pennsylvania.
- Checks if this person has a nickname associated with DeKalb, Illinois.
- Retrieves the birthplace of this individual.",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
216,52,val,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and team of Ognjen Vukojević.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?coachName
WHERE {
  # Coach of Croatia U21
  ?croatiaU21Team a dbo:SoccerClub ;
                  dbo:coach ?coach .
  
  # Coach of Bosnia and Herzegovina national under-18 football team
  ?bosniaUnder18Team a dbo:SoccerClub ;
                     dbo:coach ?coach .

  # Ensure the coach is an organization, soccer club, player, sports manager, and soccer manager
  ?coach a dbo:Organization ;
         a dbo:SoccerClub ;
         a dbo:SoccerPlayer ;
         a dbo:SportsManager ;
         a dbo:SoccerManager .
  
  # Reference to Ognjen Vukojević as part of the team
  ?team dbr:Ognjen_Vukojević dbo:member .

  # Bind coach name for output
  ?coach rdfs:label ?coachName .
  
  FILTER (lang(?coachName) = 'en')
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
888,15,val,"Give me the commander in the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022) and awardee of Hero of Ukraine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""Hero of Ukraine""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commanderName WHERE {
  # Identify the military force involved in War in Donbas
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:partOf dbr:War_in_Donbass_(2014–2022) .

  # Find commanders of this military force who are also societal events and have been awarded Hero of Ukraine
  ?commander dbo:commanderOf ?militaryForce ;
            a dbo:SocietalEvent, dbo:Event ;
            dbp:title ""Hero of Ukraine""^^xsd:string .
  
  # Retrieve the name of the commander
  ?commander foaf:name ?commanderName .
}
```",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
507,51,val,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and professional in the profession of the person born on 1966-02-18.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/director> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?result <http://dbpedia.org/property/occupation> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?director WHERE {
  ?movie a dbo:Film ;
         dbo:genre ?work .
  
  ?castMember dbo:actor ?movie ;
              foaf:name ""Beryl Reid""@en .

  ?person dbo:birthday ""1966-02-18""^^xsd:date ;
          dbo:profession ?profession ;
          dbo:directed ?movie .

  ?movie dbo:director ?director .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
47,40,val,"Give me the office of Bidesh Ranjan Bose and office of the administration of the commander, that is a politician, in Operation Green Hunt and office of Ajoy Mukherjee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeBose ?officeGreenHuntPolitician ?officeMukherjee
WHERE {
  # Office of Bidesh Ranjan Bose
  OPTIONAL { 
    dbr:Bidesh_Ranjan_Bose dbo:positionHeld ?officeBose .
  }
  
  # Office related to Operation Green Hunt (politician)
  OPTIONAL {
    ?politician dbo:occupation dbr:Politician ;
                dbo:memberOf ?organization .
    ?operation dbr:Operation_Green_Hunt ;
               dbo:participatedIn ?organization .
    FILTER EXISTS { ?politician dbo:positionHeld ?officeGreenHuntPolitician }
  }

  # Office of Ajoy Mukherjee
  OPTIONAL {
    dbr:Ajoy_Mukherjee dbo:positionHeld ?officeMukherjee .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
933,47,val,Give me the band of the band of Alan Warner (musician) and reference to the birth name of the professional in Musician.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alanWarnerBand ?bandOfBand ?birthName
WHERE {
  # Find Alan Warner (musician)
  ?alanWarner a dbo:MusicArtist ;
              foaf:name ""Alan Warner"" .

  # Get the band of Alan Warner
  ?alanWarnerBand dbo:member ?alanWarner .
  
  OPTIONAL {
    # Check if this band is part of another band
    ?bandOfBand dbo:member ?alanWarnerBand .
  }
  
  # Retrieve Alan Warner's birth name
  ?alanWarner foaf:name ?birthName .
}
```

This query does the following:
- Identifies Alan Warner as a `MusicArtist`.
- Finds the band(s) he is a member of.
- Optionally checks if this band is part of another band (though this might not always be applicable).
- Retrieves his birth name using the `foaf:name` property.",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
98,20,val,Give me the region of Philippine Standard Time and entity in Philippines and birth place of the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?regionOfPST ?entityInPhilippines ?birthPlace
WHERE {
  # Find the region of Philippine Standard Time
  dbr:Philippine_Standard_Time dbo:timeZoneRegion ?regionOfPST .

  # Find an entity in the Philippines (e.g., a notable person)
  ?entityInPhilippines a dbo:Person ;
                      dbo:country dbr:Philippines .

  # Find Paolo Elito M. Ballesteros IV's birthplace
  OPTIONAL {
    dbr:Paolo_Elito_M._Ballesteros_IV dbo:birthPlace ?birthPlace .
  }
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
281,19,val,"Give me the awardee of Medal bar and awardee of Volunteer Decoration and commander in the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?medalAwardee ?volunteerDecorationAwardee ?commanderEvent WHERE {
  # Find Roy Boehm's DBpedia resource
  VALUES ?royBoehm { dbr:Roy_Boehm }

  # Medal of Honor awardee
  ?royBoehm dbo:award ?medalAward .
  ?medalAward rdf:type dbo:Award .

  # Volunteer Decoration awardee
  ?royBoehm dbo:award ?volunteerDecorationAward .
  ?volunteerDecorationAward rdf:type dbo:Award .

  # Commander in military conflicts
  ?royBoehm dbo:commanderOf ?commanderEvent .
  ?commanderEvent rdf:type dbo:MilitaryConflict .

}
```

### Explanation

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT DISTINCT**: Ensures unique results are returned.
- **VALUES**: Specifies the resource for Roy Boehm.
- **WHERE Clause**:
  - Matches Roy Boehm with awards of type `Award`.
  - Identifies military conflicts where he was a commander.

This query will return distinct instances of awards and events related to Roy Boehm as specified in your question.",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
582,48,val,"Give me the figure known as the nickname of Japan national football team and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname ?residence WHERE {
  # Find the nickname of the Japan national football team
  dbr:Japan_national_football_team dbo:nickname ?nickname .

  # Find a scientist associated with this nickname
  ?scientist dbo:nickName ?nickname .
  
  # Get the residence of that scientist
  ?scientist dbo:residenceLocation ?residence .

  # Optional: Reference to Hirotaka Sugawara (if needed for context)
  OPTIONAL {
    dbr:Hirotaka_Sugawara dbo:relatedTo ?scientist .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
715,44,val,"Give me the commander in the force of Francisco Largo Caballero and commander in Rif War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?commander
WHERE {
  # Commander in the force of Francisco Largo Caballero
  ?force dbo:commander ?commander .
  ?force dbo:leader ?franciscoLargoCaballero .
  
  # Francisco Largo Caballero entity
  ?franciscoLargoCaballero rdfs:label ""Francisco Largo Caballero""@en .

  # Commander in Rif War
  ?rifWar dbo:commander ?commander .
  ?rifWar rdf:type dbo:MilitaryConflict .
  
  # Leader of an office that is a government agency and organization
  ?office dbo:leader ?carlosFrancoIribarnegaray ;
          rdf:type dbo:GovernmentAgency, dbo:Organization .

  # Carlos Franco Iribarnegaray entity
  ?carlosFrancoIribarnegaray rdfs:label ""Carlos Franco Iribarnegaray""@en .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
433,55,val,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and professional in the profession of Bob Marley and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist
WHERE {
  # Step 1: Find Scott LaFaro's associated musical artist
  ?scottLaFaro a dbo:MusicalArtist ;
               dbo:associatedMusicalArtist ?artist1 .

  FILTER (?scottLaFaro = dbr:Scott_LaFaro) .

  # Step 2: Find an artist who is also a musical artist and shares the profession with Bob Marley
  ?artist1 a dbo:Artist, dbo:MusicalArtist ;
           dbo:profession ?profession .
  
  ?bobMarley a dbo:Person ;
             dbo:profession ?profession .

  FILTER (?bobMarley = dbr:Bob_Marley) .

  # Step 3: Find Paul Laurence Dunbar Chambers Jr.'s associated musical artist
  ?paulChambers a dbo:MusicalArtist, dbo:Artist ;
                dbo:associatedMusicalArtist ?artist2 .
  
  FILTER (?paulChambers = dbr:Paul_Laurence_Dunbar_Chambers_Jr.) .

  # Final step: Find the associated musical artist of the artist found in Step 2
  ?artist1 dbo:associatedMusicalArtist ?finalArtist .
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
93,17,val,"Give me the capital of Alaska and death place of the governor of the native, that is a politician, of Seattle.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alaska> <http://dbpedia.org/ontology/capital> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?v0 <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital ?deathPlace
WHERE {
  # Find the capital of Alaska
  dbr:Alaska dbo:capital ?capital .

  # Find a politician who is native to Seattle and served as governor
  ?politician a dbo:Politician ;
              dbo:nativePlace dbr:Seattle ;
              dbo:governorOf ?state .

  # Find the death place of this politician
  ?politician dbo:deathPlace ?deathPlace .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
645,54,val,"Give me the leader of Ministry of the Army (Spain) and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?result <http://dbpedia.org/ontology/battle> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader ?militaryForce ?event ?nativePresident
WHERE {
  # Ministry of the Army (Spain) and its leader
  dbr:Ministry_of_the_Army_(Spain) dbo:head ?leader .
  
  # Military force associated with this leader
  ?leader dbo:militaryCommanderOf ?militaryForce .

  # Event that is a military conflict and societal event
  ?militaryForce dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict ;
         rdf:type dbo:SocietalEvent .

  # Native who is a president and politician during Restoration (Spain)
  ?nativePresident dbo:nationality dbr:Spain ;
                   dbo:presidentOf dbr:Restoration_(Spain) ;
                   rdf:type dbo:Politician .
  
  # Carlos Asensio Cabanillas as a commander in the same force
  dbr:Carlos_Asensio_Cabanillas dbo:militaryCommanderOf ?militaryForce .

  # Ensure the native president is related to the leader
  ?leader dbo:nativeCitizen ?nativePresident .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
645,49,val,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader
WHERE {
  # Carlos Asensio Cabanillas' native place and role as commander
  dbr:Caballero_de_la_Orden_del_Mérito_Militar_Carlos_Asensio_Cabanillas dbo:nativePlace dbr:Restoration_(Spain) .
  dbr:Caballero_de_la_Orden_del_Mérito_Militar_Carlos_Asensio_Cabanillas dbo:commanderInForce ?force .

  # Office is a government agency and an organization
  ?office a dbo:GovernmentAgency ;
          a dbo:Organization .

  # Leadership role in the office
  ?leader dbo:positionHeld ?office .
  
  FILTER(?office = ?officeLeader) # Ensure the same office is considered for leadership

}",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
645,50,val,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader
WHERE {
  # Camilo Menéndez Tolosa's association with an office
  dbr:Camilo_Menéndez_Tolosa dbo:positionHeld ?office .
  
  # The office is a government agency and organization
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .

  # Leader of the office
  ?office dbo:leader ?leader .

  # Military force associated with an event
  ?office dbo:militaryForce ?militaryForce .
  
  ?militaryForce dbo:event ?event .
  
  # Event is a military conflict and societal event
  ?event rdf:type dbo:MilitaryConflict ;
         rdf:type dbo:SocietalEvent .

  # Native who is a president and politician during Restoration (Spain)
  ?native dbo:nationality dbr:Spain ;
          dbo:presidentOf dbr:Restoration_(Spain) .
  
  ?native rdf:type dbo:Politician .
  
  # Linking the native to the military force or event
  ?event dbo:participant ?native .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
933,41,val,Give me the reference to the birth name of Alan Warner (musician) and band of the band of Alan Warner (musician) and band of The Ramong Sound.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alanWarnerBirthName ?alanWarnerBand ?ramonesBand
WHERE {
  # Alan Warner's birth name
  OPTIONAL { 
    dbr:Alan_Warner_(musician) dbo:birthName ?alanWarnerBirthName .
  }
  
  # Band associated with Alan Warner
  OPTIONAL {
    dbr:Alan_Warner_(musician) dbo:band ?alanWarnerBand .
  }

  # Band associated with The Ramones
  OPTIONAL {
    dbr:The_Ramones dbo:band ?ramonesBand .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
5,16,val,"Give me the entity in the award of Coro de la Pontificia Universidad Católica de Puerto Rico and birthplace of the person born, that is a politician, as .","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/birthName> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  ?person dbo:award dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  ?person dbo:occupation dbr:Politician .
  ?person dbp:birthPlace ?birthPlace .
}
```",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
129,22,val,"Give me the professional in the mayor of 1999 West Dunbartonshire Council election and associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge.",SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mayorProfession ?musicalArtist WHERE {
  # Find the mayor elected in 1999 for West Dunbartonshire Council and their profession
  ?mayor dbo:electedAsMayorOf dbr:West_Dunbartonshire_Council ;
         dbo:termStart ?startYear .
  FILTER(YEAR(?startYear) = 1999)
  
  # Get the mayor's profession
  ?mayor dbo:profession ?mayorProfession .

  # Find Dreamville Presents: Revenge as an organization and its associated musical artist
  dbr:Dreamville_Presents:_Revenge a dbo:MusicalArtist ;
     dbo:associatedActor ?actor .
  
  # Link the actor to another musical artist
  ?actor dbo:profession ?musicalArtist .
}
```",4,5,5,2,2,2,3,28,0,0,3,0,0.0,0
465,50,val,"Give me the successor of the child, that is a royalty, of Anne of Brittany and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Anne of Brittany's child who is royalty
  ?anneChild a dbo:Monarch ;
             dbo:parent dbr:Anne_of_Brittany .

  # Spouse of Anne of Brittany's child
  ?spouse1 dbo:spouse ?anneChild .

  # Parent of Elizabeth of Austria and their royal child
  ?elizabethParent dbo:child dbr:Elizabeth_of_Austria_(1526–1545) .
  ?royalChild a dbo:Monarch ;
              dbo:parent ?elizabethParent ;
              dbo:spouse ?anneChild .

  # Successor is the spouse of Anne's child who is also married to Elizabeth's parent's royal child
  ?successor dbo:spouse ?royalChild .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
353,7,val,"Give me the alma mater of the awardee of Medal of the Order ""For Merit to the Fatherland"" and entity in Russia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_the_Order_%22For_Merit_to_the_Fatherland%22> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater
WHERE {
  ?person dbo:award dbr:Medal_of_the_Order_""For_Merit_to_the_Fatherland"" .
  ?person dbo:nationality dbr:Russia .
  ?education dbo:student ?person .
  ?education dbo:almaMater ?almaMater .
}
```

### Explanation

- **PREFIX**: Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT ?almaMater**: We want to retrieve distinct alma maters.
- **WHERE Clause**:
  - `?person dbo:award dbr:Medal_of_the_Order_""For_Merit_to_the_Fatherland""`: Matches individuals who have received the medal.
  - `?person dbo:nationality dbr:Russia`: Ensures the individual is associated with Russia.
  - `?education dbo:student ?person`: Links educational records to the person.
  - `?education dbo:almaMater ?almaMater`: Retrieves the alma mater of the person.

This query should effectively retrieve the alma mater of individuals who meet the specified criteria.",3,3,4,2,2,2,2,9,0,0,5,0,0.0,0
874,15,val,"Give me the band of Robert Hart (musician) and band of the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Robert_Hart_(musician)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?v0 <http://dbpedia.org/property/writer> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?robertHartBand ?writerBand
WHERE {
  # Find Robert Hart's band
  dbr:Robert_Hart_(musician) dbo:musicalArtist ?robertHartBand .

  # Find the writer who is both an artist and a musical artist
  ?writer a dbo:Writer ;
          dbo:musicalArtist ?writerBand ;
          dbo:work ?horaceAndyWork .

  # Ensure the work is also associated with Horace Andy
  ?horaceAndyWork dbo:artist dbr:Horace_Andy .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
892,53,val,"Give me the entity in the profession of the true self of Enrico Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of 58.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/province> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?profession ?region ?landmark
WHERE {
  # Enrico Crolla's profession
  OPTIONAL {
    dbr:Enrico_Crolla dbo:occupation ?profession .
  }

  # Italian region related to Democratic Party (Italy)
  OPTIONAL {
    ?party dbp:country dbr:Italy ;
           dbp:politicalGroup dbr:Democratic_Party_(Italy) .
    ?region a dbo:AdministrativeRegion, dbo:Settlement ;
            dbo:country dbr:Italy ;
            dbo:governingBody ?party .
  }

  # Landmark at elevation of 58
  OPTIONAL {
    ?landmark a dbo:Lighthouse ;
              dbo:elevation ""58""^^xsd:float .
  }
}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
865,44,val,"Give me the native of British Raj and father of the child of Abu Ahmad Abdul Hafiz and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person
WHERE {
  ?person dbo:nativePlace dbr:British_Raj .
  
  ?child1 dbo:parent ?person ;
          dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz .

  ?child2 dbo:parent ?person ;
          a dbo:Politician .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
573,44,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at Massachusetts.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  # Find the author of ""Exchequer Standards""
  ?author dbo:work dbr:Exchequer_Standards .
  
  # The parent must be a politician and an office holder
  ?author dbo:parent ?parent .
  ?parent rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # The author should have died at William J. Phelan's residence, which is a settlement
  ?residencePhelan dbp:decedent ?author ;
                   rdf:type dbo:Settlement .
  ?residencePhelan dbp:resident dbr:William_J._Phelan .

  # The author should also be a decedent in Massachusetts
  ?massachusetts dbp:decedent ?author .
  ?massachusetts rdfs:label ""Massachusetts""@en .
}
```",5,8,6,2,3,3,3,71,0,0,2,0,0.0,0
582,44,val,"Give me the figure known as the nickname of Japan national football team and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname ?fatherName WHERE {
  # Find the nickname of the Japan national football team
  dbr:Japan_national_football_team dbo:nickname ?nickname .

  # Find a player who is a father of Masami Nagasawa and has specific roles
  ?player dbp:spouse ?mother .
  ?mother dbp:child dbr:Masami_Nagasawa .
  
  ?player rdf:type dbo:Athlete ;
          dbo:sportTeam dbr:Japan_national_football_team ;
          dbo:occupation dbo:SoccerManager ;
          dbo:occupation dbo:SportsManager .

  # Bind the player's name to a variable
  ?player rdfs:label ?fatherName .
  
  FILTER (lang(?fatherName) = 'en')
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
645,53,val,"Give me the military force of Spanish Civil War and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and commander in the force of the commander in Siege of Madrid.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?leader ?commanderInSiege
WHERE {
  # Spanish Civil War military forces
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:partOf dbr:Spanish_Civil_War .

  OPTIONAL {
    # Leaders of offices related to Camilo Menéndez Tolosa
    ?office dbo:leader ?leader ;
            dbo:member ?camiloMenendezTolosa .
    ?camiloMenendezTolosa rdfs:label ""Camilo Menéndez Tolosa""@en .
  }

  OPTIONAL {
    # Commanders in the Siege of Madrid
    ?siegeEvent dbo:commander ?commanderInSiege ;
                dbo:event dbr:Siege_of_Madrid .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
965,53,val,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as Prince George of Battenberg and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouseOfSpouse
WHERE {
  # Louise Mountbatten and her parent
  ?louise dbo:parent ?parent .
  VALUES ?louise { <http://dbpedia.org/resource/Louise_Mountbatten> } .

  # Parent's spouse (first spouse)
  ?parent dbo:spouse ?firstSpouse .

  # First spouse's spouse (second spouse, which is the parent of Louise Mountbatten again)
  ?firstSpouse dbo:spouse ?secondSpouse .
  
  # Second spouse's spouse (third spouse, who we are interested in)
  ?secondSpouse dbo:spouse ?spouseOfSpouse .

  # Conditions for the third spouse
  ?spouseOfSpouse dbo:nobleTitle ?nobleTitle .
  FILTER EXISTS { ?nobleTitle dbp:title ""Noble"" } .

  # The person born as Prince George of Battenberg
  ?princeGeorge dbo:birthName ""Prince George of Battenberg""@en .
  ?spouseOfSpouse dbo:parent ?princeGeorge .

  # Ensure the third spouse is also a parent of Louise Mountbatten
  ?spouseOfSpouse dbo:child ?louise .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
917,44,val,Give me the child of the father of Keʻelikōlani and parent of Albert Kamehameha and child of the father of Kamehameha IV.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Keʻelikōlani's father
  ?keeliko_father dbo:child dbr:Keʻelikōlani .
  
  # Kamehameha IV's father
  ?kamehameha_iv_father dbo:child dbr:Kamehameha_IV .

  # The person we are looking for is the child of Keʻelikōlani's father
  ?person dbo:parent ?keeliko_father .
  
  # The same person is a parent of Albert Kamehameha
  ?person dbo:child dbr:Albert_Kamehameha .

  # And also the child of Kamehameha IV's father
  ?person dbo:parent ?kamehameha_iv_father .
}",5,5,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
507,54,val,"Give me the professional in Film director, television director and spouse of the person born as Anne Voase Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://dbpedia.org/ontology/director> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse ?movie
WHERE {
  # Anne Voase Coates details
  dbr:Anne_Voase_Coates a dbo:Person ;
    foaf:birthday ""1919-06-17""^^xsd:date ;
    dbo:spouse ?spouse .

  # Spouse's professions and movies directed
  ?spouse a dbo:FilmDirector, dbo:TelevisionDirector ;
          dbo:directed ?movie .
  
  # Ensure the movie is both a work and a movie
  ?movie a dbo:Movie, dbo:Work .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
933,53,val,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to Alan Warner and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfTheRamones ?alanWarnerBand
WHERE {
  # Find the band associated with The Ramones
  dbr:The_Ramones dbo:band ?bandOfTheRamones .
  
  # Ensure this band is both an artist and a musical artist
  ?bandOfTheRamones rdf:type dbo:MusicalArtist ;
                   rdf:type dbo:Artist .

  # Find Alan Warner's band
  OPTIONAL {
    dbr:Alan_Warner_(musician) dbo:band ?alanWarnerBand .
    
    # Ensure this band is a group, a band, and an organization
    ?alanWarnerBand rdf:type dbo:MusicalGroup ;
                    rdf:type dbo:Band ;
                    rdf:type dbo:Organization .
  }
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
47,43,val,"Give me the office of Ajoy Mukherjee and office of the awardee of the award, that is an award, of Mantu Ghosh and office of Suvendu Adhikari.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeAjoyMukherjee ?officeAwardRecipient ?officeSuvenduAdhikari
WHERE {
  # Office of Ajoy Mukherjee
  dbr:Ajoy_Mukherjee dbo:office ?officeAjoyMukherjee .

  # Award received by Mantu Ghosh and its awardee's office
  OPTIONAL {
    dbr:Mantu_Ghosh dbo:awardReceived ?award .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:office ?officeAwardRecipient .
  }

  # Office of Suvendu Adhikari
  dbr:Suvendu_Adhikari dbo:office ?officeSuvenduAdhikari .
}
```

This query retrieves:
- The office held by Ajoy Mukherjee.
- The office of the awardee of any award received by Mantu Ghosh (if available).
- The office held by Suvendu Adhikari.",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
236,17,val,"Give me the party member of Federalist Party and party member of the administration of the reference, that is an office holder and a politician, to James Madison.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Federalist_Party> . ?v0 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?v3 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?federalistPartyMember ?administrationOfficeHolder
WHERE {
  # James Madison as a reference point
  dbr:James_Madison dbo:partyMemberOf dbr:Federalist_Party .
  
  # Federalist Party members
  ?federalistPartyMember dbo:partyMemberOf dbr:Federalist_Party .

  # Administration office holders who are politicians
  ?administrationOfficeHolder dbo:officeHolderOf ?administration ;
                             a dbo:Politician .

  # Ensure the administration is related to James Madison's time or context
  ?administration dbo:president dbr:James_Madison .
}
```",4,6,5,3,2,3,2,20,0,0,19,0,0.0,0
917,41,val,"Give me the child of Kekūanāoʻa and child of the father of Keʻelikōlani and parent of the child, that is a royalty, of Kamehameha IV.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual
WHERE {
  # Kekūanāoʻa and his child
  dbr:Kekūanāoʻa dbo:child ?kekuanaoaChild .

  # Keʻelikōlani's father is Kekūanāoʻa, so her child is also a child of Kekūanāoʻa
  dbr:Keʻelikōlani dbo:father dbr:Kekūanāoʻa .
  
  # Kamehameha IV's children and their parents who are royalty
  dbr:Kamehameha_IV dbo:child ?kamehamehaChild .
  ?kamehamehaChild dbo:parent ?parent .

  # Ensure the parent is of royal status
  ?parent a dbo:Monarch ;
          rdfs:label ?label .
  
  FILTER CONTAINS(LCASE(?label), ""royalty"")

  # The individual we are looking for must be both a child of Kekūanāoʻa and a parent of Kamehameha IV's child
  VALUES (?individual) { ?kekuanaoaChild }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
917,48,val,"Give me the child of the father of Kamehameha IV and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child1 ?child2
WHERE {
  # Kamehameha IV's father and child (Kamehameha V)
  dbr:King_Kamehameha_IV dbo:father ?father .
  ?father dbo:child ?child1 .
  
  # Mayor of the Hawaiian Kingdom and their royal child
  ?mayor dbo:position ""Mayor""@en ;
         dbo:country dbr:Hawaiian_Kingdom .
  ?mayor dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .

  # Ensure both children are royalty
  FILTER (?child1 = dbr:King_Kamehameha_V)
  FILTER (?royalChild != ?child1) # To ensure distinct results

  BIND(?royalChild AS ?child2)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
839,53,val,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the band, that is a musical artist, of Charlie Huhn and band of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?band1 ?band2
WHERE {
  # Kevin Russell's band(s)
  {
    VALUES ?person { dbr:Kevin_Russell_(musician) }
    OPTIONAL {
      ?person dbo:memberOf ?band1 .
      ?band1 a dbo:Band .
    }
    OPTIONAL {
      ?band1 dbo:memberOf ?band2 .
      ?band2 a dbo:Band .
    }
  }

  # Charlie Huhn's band(s)
  {
    VALUES ?person { dbr:Charlie_Huhn }
    OPTIONAL {
      ?person dbo:memberOf ?band1 .
      ?band1 a dbo:Band .
    }
    OPTIONAL {
      ?band1 dbo:memberOf ?band2 .
      ?band2 a dbo:Band .
    }
  }

  # Peter Schorowsky's band(s)
  {
    VALUES ?person { dbr:Peter_Schorowsky }
    OPTIONAL {
      ?person dbo:memberOf ?band1 .
      ?band1 a dbo:Band .
    }
    OPTIONAL {
      ?band1 dbo:memberOf ?band2 .
      ?band2 a dbo:Band .
    }
  }
}
ORDER BY ?person
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
606,15,val,"Give me the birthplace of Charles I. Barber and figure known as the nickname of the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Charles_I._Barber> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/nickname> ""Barb City""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace ?nickname
WHERE {
  # Find Charles I. Barber's birthplace
  ?charles a dbo:Person ;
           foaf:name ""Charles I. Barber""@en ;
           dbo:birthPlace ?birthPlace .

  OPTIONAL {
    # Look for any nickname or related figure known as ""Barb City""
    ?relatedFigure a dbo:Settlement ;
                  foaf:nick ?nickname .
    FILTER (CONTAINS(LCASE(?nickname), ""barb city""))
    
    # Assuming there might be a connection between Charles I. Barber and the settlement
    ?charles dbo:associatedWith ?relatedFigure .
  }
}
```",4,5,5,3,2,3,2,20,1,0,0,1.0,1.0,1.0
933,51,val,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of Alan Warner (musician).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName ?birthName
WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1947-04-21""^^xsd:date ;
          dbp:birthday ""1947-04-21""^^xsd:date ;
          foaf:name ""Alan Warner (musician)""@en .
  
  ?band dbo:member ?person ;
        a dbo:Band, dbo:Organization .

  ?person foaf:name ?birthName .

  ?band rdfs:label ?bandName .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
192,17,val,Give me the child of the child of the parent of Anna of Hungary (Byzantine empress) and spouse of Clemence of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . <http://dbpedia.org/resource/Clemence_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild
WHERE {
  # Anna of Hungary (Byzantine empress)
  ?anna a dbo:Empress ;
        foaf:name ""Anna of Hungary"" ;
        dbo:parent ?parent .

  # Child of Anna's parent
  ?parentChild dbo:child ?intermediateEntity .

  # Clemence of Austria and her spouse
  ?clemence a dbo:Person ;
            foaf:name ""Clemence of Austria"" ;
            dbo:spouse ?spouse .

  # Find the child of both intermediateEntity and spouse
  ?childOfChild dbo:parent ?intermediateEntity .
  ?childOfChild dbo:parent ?spouse .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
465,46,val,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Ferdinand I, Holy Roman Emperor and his royal child
  dbr:Ferdinand_I,_Holy_Roman_Emperor dbo:child ?royalChild .
  
  # Ensure the child is royalty
  ?royalChild a dbo:Monarch .

  # Ercole II d'Este and his parent Alfonso I d'Este
  dbr:Ercole_II_d%27Este,_Duke_of_Ferrara dbo:parent ?alfonsoI .
  
  # Successor of the child of Alfonso I d'Este
  ?alfonsoIChild dbo:childOf ?alfonsoI .
  ?royalChild dbo:succeededBy ?alfonsoIChild .

  # Spouse of the royal child
  ?royalChild dbo:spouse ?spouse .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
917,40,val,"Give me the child of Kekūanāoʻa and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of Kekūanāoʻa.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?parent
WHERE {
  # Kekūanāoʻa and their child who is royalty
  dbr:Kekūanāoʻa dbo:child ?child .
  
  # Ensure the child is royalty
  ?child a dbo:RoyalFamilyMember .

  # The royal child has a parent-child relationship with another individual (the mayor)
  ?child dbo:parent ?parent .
  
  # This parent must be related to the mayor of the Hawaiian Kingdom
  ?mayor dbo:position dbr:Mayor_of_the_Hawaiian_Kingdom ;
         dbo:parent ?child .

}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
839,51,val,"Give me the band of the member of Böhse Onkelz and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?memberBand ?relatedBand
WHERE {
  # Find a member of Böhse Onkelz
  ?member dbo:bandMemberOf dbr:Böhse_Onkelz .
  
  # Find the band associated with this member
  ?member dbo:band ?memberBand .

  # Find another band that is a musical artist related to the member's band
  ?relatedBand dbo:musicalArtist ?memberBand .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
865,43,val,"Give me the native of British Raj and father of Shahla Khatun and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  ?father dbo:nativePlace dbr:British_Raj .
  
  ?shahla dbo:parent ?father ;
          foaf:name ""Shahla Khatun"" .

  ?spouse foaf:name ""Syeda Shahar Banu"" .
  ?politician dbo:spouse ?spouse ;
              dbo:childOf ?father ;
              a dbo:Politician .

}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
976,53,val,"Give me the office of the person born as Mehmet Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of Meral Akşener.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v0 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?officeBostancı ?officeKılıçdaroğluLeader ?officeAkşener
WHERE {
  # Find the office of Mehmet Naci Bostancı
  ?bostancı dbo:birthName ""Mehmet Naci Bostancı""@en .
  ?bostancı dbo:office ?officeBostancı .

  # Find the leader of Kemal Kılıçdaroğlu's administration and their office
  ?kılıçdaroğlu foaf:name ""Kemal Kılıçdaroğlu""@en .
  ?organization dbo:leader ?kılıçdaroğlu .
  ?kılıçdaroğlu dbo:office ?officeKılıçdaroğluLeader .

  # Find the office of Meral Akşener
  ?akşener foaf:name ""Meral Akşener""@en .
  ?akşener dbo:office ?officeAkşener .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
926,54,val,Give me the successor of the child of the spouse of Şermi Kadın and father of the father of Abdulaziz and child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Şermi Kadın's spouse
  ?spouse dbo:spouse dbr:Şermi_Kadın .
  
  # Child of Şermi Kadın's spouse
  ?child dbo:parent ?spouse .

  # Father of Abdulaziz's father (Abdulaziz's grandfather)
  ?abdulazizFather dbo:fatherOf dbr:Abdülaziz_I_of_the_Ottoman_Empire .
  ?grandfather dbo:fatherOf ?abdulazizFather .

  # Child of Ahmed III
  ?ahmedChild dbo:child dbr:Aḥmed_III .

  # Find the intersection (common entity) among these relationships
  FILTER (?child = ?grandfather && ?child = ?ahmedChild)

  # Successor of the identified child
  ?successor dbo:predecessorOrMonarch ?child .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
715,49,val,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/office> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?officeLeader
WHERE {
  # Abd el-Krim as commander in a military conflict
  ?conflict dbo:commander ?commander .
  ?commander rdfs:label ""Abd el-Krim""@en .

  # Carlos Franco Iribarnegaray's reference to an office
  ?office dbo:leader ?officeLeader .
  ?office rdfs:label ?officeLabel .
  
  # Linking the office to Carlos Franco Iribarnegaray
  ?person dbo:referenceTo ?office .
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@en .

  FILTER (regex(?officeLabel, ""government agency|organization"", ""i""))
}
```

This query attempts to find:
- The commander of a military conflict involving Abd el-Krim.
- The leader of an office that Carlos Franco Iribarnegaray is associated with, where the office is either a government agency or organization.",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
645,52,val,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in the force of the commander in Siege of Madrid and leader of Ministry of the Army (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
  # Francisco Largo Caballero as leader of the Ministry of the Army (Spain)
  dbr:Francisco_Largo_Caballero dbo:leaderOf dbr:Ministry_of_the_Army_(Spain) .

  # Siege of Madrid and its commander
  ?siege a dbo:MilitaryConflict ;
        dbo:event dbr:Siege_of_Madrid .
  ?siege dbo:commander ?commander .

  # Francisco Largo Caballero as commander in the Siege of Madrid
  FILTER(?commander = dbr:Francisco_Largo_Caballero) .

  # Military force associated with an event that is a military conflict and societal event
  ?militaryForce dbo:event ?event .
  ?event a dbo:MilitaryConflict ;
         a dbo:SocietalEvent .

  # Ensure the military force is related to Francisco Largo Caballero's roles
  OPTIONAL { ?militaryForce dbo:commander dbr:Francisco_Largo_Caballero . }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
978,16,val,"Give me the band member of the person born as Nicholas Bracegirdle and band member of the professional, that is a musical artist and an artist, in .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember
WHERE {
  # Find Nicholas Bracegirdle and his band members
  ?person a dbo:Person ;
          foaf:name ""Nicholas Bracegirdle""@en ;
          dbo:bandMember ?bandMember .

  # Ensure the band member is also a professional musical artist and an artist
  ?bandMember a dbo:MusicalArtist, dbo:Artist .
}
```",4,6,5,2,2,3,2,20,0,0,2,0,0.0,0
926,52,val,Give me the child of Ahmed III and successor of the child of Ahmed III and father of the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor
WHERE {
  # Step 1: Find Ahmed III's child
  ?child dbo:parent dbr:Ahmed_III .

  # Step 2: Find the successor of Ahmed III's child
  ?successor dbo:succeededBy ?child .

  # Step 3: Identify Neşerek Kadın's spouse and their father
  dbr:Neşerek_Kadın dbp:spouse ?spouse .
  ?spouse dbo:father ?grandFather .

  # Step 4: Find the father of the grandFather (i.e., great-grandfather)
  ?greatGrandFather dbo:child ?grandFather .

  # Ensure the successor is also the great-grandfather
  FILTER (?successor = ?greatGrandFather)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
273,17,val,Give me the spouse of Edoardo Agnelli (industrialist) and parent of the alumnus of the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Edoardo_Agnelli_(industrialist)> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Find Edoardo Agnelli's spouse
  ?edoardo dbo:spouse ?spouse .
  
  FILTER(?edoardo = dbpedia:Edoardo_Agnelli_(industrialist)) .

  # Find an alumnus of Università degli Studi di Torino
  ?alumnus dbo:almaMater dbpedia:Universit%C3%A0_degli_Studi_di_Torino .
  
  # Ensure the spouse is also a parent of the alumnus
  ?spouse dbo:child ?alumnus .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
976,40,val,"Give me the office of Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of Meral Akşener.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?naciOffice ?kemalLeaderOffice ?meralOffice
WHERE {
  # Office of Naci Bostancı
  OPTIONAL { 
    dbr:Naci_Bostancı dbo:office ?naciOffice .
  }
  
  # Leader (politician) of the administration (organization) of Kemal Kılıçdaroğlu
  OPTIONAL {
    dbr:Kemal_Kılıçdaroğlu dbo:leader ?kemalLeader .
    ?kemalLeader a dbo:Politician ;
                 dbo:office ?kemalLeaderOffice .
  }
  
  # Office of Meral Akşener
  OPTIONAL {
    dbr:Meral_Akşener dbo:office ?meralOffice .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
917,51,val,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and child of the father of Keʻelikōlani.",SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Kamehameha III's child who is royalty
  ?child dbo:parent dbr:Kamehameha_III ;
         dbo:royalty true .

  # Keʻelikōlani's father and his child
  dbr:Keʻelikōlani dbo:parent ?father .
  ?father dbo:child ?commonChild .

  FILTER (?child = ?commonChild)
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
935,15,val,"Give me the headquarter of Provincial Assembly of Balochistan and death place of the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Provincial_Assembly_of_Balochistan> <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?headquarters ?deathPlace
WHERE {
  # Find headquarters of Provincial Assembly of Balochistan
  dbr:Provincial_Assembly_of_Balochistan dbo:location ?headquarters .

  # Find an award received by Syed Sohail Hussain Naqvi
  OPTIONAL {
    dbr:Syed_Sohail_Hussain_Naqvi dbo:awardReceived ?award .
    
    # Find the awardee of that award and their death place
    ?award dbo:recipient ?awardee .
    ?awardee dbo:deathPlace ?deathPlace .
  }
}
```",4,5,5,3,2,3,2,20,1,0,0,1.0,1.0,1.0
507,49,val,Give me the spouse of the person born as Anne Voase Coates and professional in the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName WHERE {
  # Anne Voase Coates details
  dbr:Anne_Voase_Coates a dbo:Person ;
                        foaf:name ""Anne Voase Coates""@en ;
                        dbo:birthName ?birthName .

  # Person born on February 18, 1966
  ?person a dbo:Person ;
          dbp:birthday ""1966-02-18""^^xsd:date ;
          dbo:occupation ?profession .

  # Spouse of Anne Voase Coates
  dbr:Anne_Voase_Coates dbo:spouse ?spouse .
  
  # Ensure the spouse shares the same profession as the person born on 1966-02-18
  ?spouse a dbo:Person ;
          foaf:name ?spouseName ;
          dbo:occupation ?profession .

}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
976,51,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayorOffice
WHERE {
  # Identify the person Naci Bostancı by birth name
  ?person a dbo:Person ;
          foaf:name ""Naci Bostancı""@en ;
          dbo:nationality dbr:Turkey .

  # Ensure this person is a politician and an office holder
  ?person dbo:occupation dbr:Politician ;
          dbo:officeHolder true .

  # Check affiliation with Nation Alliance (Turkey)
  ?person dbo:memberOfParty dbr:Nation_Alliance_(Turkey) .

  # Retrieve the office of the mayor held by this person
  ?person dbo:holdsPoliticalOffice ?mayorOffice .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
917,50,val,"Give me the child of the father of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonChild
WHERE {
  # Father of Kamehameha IV
  ?fatherKamehamehaIV dbo:child ?kamehamehaIV .
  ?kamehamehaIV rdfs:label ""Kamehameha IV""@en .

  # Child of the father of Kamehameha IV
  ?fatherKamehamehaIV dbo:child ?commonChild .

  # Spouse of Leleiohoku I
  ?spouseLeleiohokuI dbp:spouse ?leleiohokuI .
  ?leleiohokuI rdfs:label ""Leleiohoku I""@en .

  # Father of the spouse of Leleiohoku I
  ?fatherSpouseLeleiohokuI dbo:child ?spouseLeleiohokuI .

  # Child of the father of the spouse of Leleiohoku I
  ?fatherSpouseLeleiohokuI dbo:child ?commonChild .

  # Ensure the common child is royalty
  ?commonChild a dbo:Monarch .
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
329,21,val,"Give me the entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist) and entity in United Kingdom and birthplace of Eric Cross (writer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?batesBirthplace ?crossUKEntity
WHERE {
  # Robert Bates' birthplace that is both an organization and a country
  dbr:Robert_Bates_(loyalist) dbo:birthPlace ?batesBirthplace .
  
  FILTER (
    EXISTS { ?batesBirthplace rdf:type dbo:Organisation . }
    && EXISTS { ?batesBirthplace rdf:type dbo:Country . }
  )
  
  # Eric Cross's birthplace related to the United Kingdom
  dbr:Eric_Cross_(writer) dbo:birthPlace ?crossBirthplace .
  
  OPTIONAL {
    ?crossUKEntity dbo:country dbr:United_Kingdom .
    FILTER (?crossBirthplace = ?crossUKEntity)
  }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
36,23,val,"Give me the actor of the claim to fame, that is a film, of Lepacious Bose and person born as the birth name of Ayo Makun.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor
WHERE {
  # Lepa Bose's claim to fame film
  ?filmLepa dbo:starring dbr:Lepa_Bose .
  
  # Ayo Makun's (AbdulRasheed Bello) claim to fame film
  ?filmAyo dbo:starring dbr:Ayo_Makun ;
           rdfs:label ?filmLabel .

  FILTER(CONTAINS(LCASE(?filmLabel), ""claim to fame""))

  # Find the common film
  VALUES ?commonFilm { ?filmLepa ?filmAyo }
  
  # Get actors of the common film
  ?commonFilm dbo:starring ?actor .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
445,45,val,Give me the entity in England and death place of Patrick Moore and entity in the award of the commander in Battle of Saint-Mihiel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?patrickMooreEntityInEngland ?deathPlace ?awardee
WHERE {
  # Patrick Moore's entity in England (assuming birthplace)
  OPTIONAL {
    dbr:Patrick_Moore dbo:birthPlace ?patrickMooreEntityInEngland .
    FILTER(STRSTARTS(LCASE(?patrickMooreEntityInEngland), ""england""))
  }

  # Death place of Patrick Moore
  dbr:Patrick_Moore dbo:deathPlace ?deathPlace .

  # Entity in the award of commander in Battle of Saint-Mihiel
  OPTIONAL {
    ?battle dbr:Battle_of_Saint-Mihiel .
    ?battle dbo:awardee ?awardee .
    ?awardee dbo:honoraryTitle dbr:Commander .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
839,55,val,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of Böhse Onkelz.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandCharlieHuhn ?bandKevinRussell ?bandBoehseOnkelzMember
WHERE {
  # Charlie Huhn's band
  ?charlieHuhn a dbo:MusicalArtist ;
               foaf:name ""Charlie Huhn"" .
  ?charlieHuhn dbo:memberOfBand ?bandCharlieHuhn .

  # Kevin Richard Russell's band
  ?kevinRussell a dbo:MusicalArtist ;
                foaf:name ""Kevin Richard Russell"" .
  ?kevinRussell dbo:birthName ""Kevin Richard Russell"" .
  ?kevinRussell dbo:memberOfBand ?bandKevinRussell .

  # Böhse Onkelz member's band
  ?boehseOnkelz a dbo:MusicalGroup ;
                foaf:name ""Böhse Onkelz"" .
  ?member a dbo:MusicalArtist ;
          dbo:memberOfBand ?boehseOnkelz .
  ?member dbo:memberOfBand ?bandBoehseOnkelzMember .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
573,40,val,"Give me the parent of John Quincy Adams and person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent ?decedentQuincy ?decedentAdminRegion
WHERE {
  # John Quincy Adams' parent
  dbr:John_Quincy_Adams dbo:father ?parent .

  # Person decedent at Quincy, Massachusetts
  ?decedentQuincy dbo:deathPlace dbr:Quincy,_Massachusetts ;
                  a dbo:Person .

  # Charlie Baker's real name and related region
  dbr:Charlie_Baker_(Australian_footballer) dbo:realName ?charlieRealName .
  
  # Find the administration period of the region associated with Charlie Baker
  ?region dbo:name ?charlieRealName ;
          dbo:administrativeRegion ?adminRegion .
  ?decedentAdminRegion dbo:deathPlace ?adminRegion ;
                       a dbo:Person .

}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
456,50,val,"Give me the band of the band, that is a musical artist, of Dean Brody and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName
WHERE {
  # Find Dean Brody and his band
  dbr:Dean_Brody a dbo:MusicalArtist .
  ?band dbo:musicalArtist dbr:Dean_Brody ;
        rdfs:label ?bandName .

  # Find Lamont Cranston's alter ego
  dbr:Lamont_Cranston a dbo:FictionalCharacter ;
                      dbo:fictionalAlterEgo dbr:The_Shadow .
  
  # Check if there is any connection between the band and The Shadow
  OPTIONAL {
    ?band dbo:associatedWith dbr:The_Shadow .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
573,46,val,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?phelanDecedent ?bakerDecedent
WHERE {
  # Find William J. Phelan's residence which is a settlement
  dbr:William_J._Phelan dbo:residence ?phelanResidence .
  ?phelanResidence rdf:type dbo:Settlement .

  # Find the person decedent at this settlement
  ?phelanDecedent dbo:placeOfBirth ?phelanResidence .

  # Find Charlie Baker's administration which is a region
  dbr:Charlie_Baker_(Australian_footballer) dbo:administeredBy ?bakerAdministration .
  ?bakerAdministration rdf:type dbo:Region .

  # Find the person decedent at this region
  ?bakerDecedent dbo:placeOfBirth ?bakerAdministration .
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
579,15,val,"Give me the native of the residence, that is English and a settlement, of the resident of Scotland and person born as Isobel Jane Miller Richard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Isobel Jane Miller Richard""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeOfResidence
WHERE {
  # Find the person Isobel Jane Miller Richard born in Scotland
  ?person a dbo:Person ;
          foaf:name ""Isobel Jane Miller Richard""@en ;
          dbp:birthPlace dbr:Scotland .

  # Identify their residence which is an English settlement
  ?person dbo:residence ?residence .
  ?residence dbo:country dbr:England ;
             rdf:type dbo:Settlement .

  # Determine the native of that residence
  ?residence dbo:nativeOf ?nativeOfResidence .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
826,45,val,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of Anna Magdalena Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?successor ?spouse ?predecessor
WHERE {
  # Louis II, Grand Duke of Hesse and his successor
  ?louis2 dbo:successor ?successor .
  ?louis2 rdfs:label ""Louis II, Grand Duke of Hesse""@en .

  # Spouse of Louis II
  ?louis2 dbp:spouse ?spouse .
  ?spouse rdfs:label ""Anna Magdalena Appel""@en .

  # Child of Louis IV and his parent (which is Louis IV himself)
  ?louis4 dbo:child ?child .
  ?parent dbo:child ?child .
  ?louis4 rdfs:label ""Louis IV, Grand Duke of Hesse""@en .

  # Predecessor of the parent of the child of Louis IV
  ?parent dbo:predecessor ?predecessor .
}",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
892,47,val,Give me the entity in the profession of Henri Crolla and landmark at elevation of the award of the member of E-girls.,SELECT ?result WHERE { <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession (SAMPLE(?landmark) AS ?landmark)
WHERE {
  # Henri Crolla's profession
  dbr:Henri_Crolla dbo:occupation ?profession .

  # Member of E-girls and their award
  ?member dbo:memberOf dbr:E-girls .
  ?award dbo:recipient ?member .
  
  # Landmark associated with the award, filtered by elevation
  ?award dbo:location ?landmark .
  ?landmark dbo:elevation ?elevation .

  FILTER(?elevation > 1000) # Assuming we want landmarks above 1000 meters
}
```",5,5,6,3,2,3,3,71,0,0,11,0,0.0,0
826,47,val,"Give me the spouse of the child of Johann Heinrich Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?successor
WHERE {
  # Johann Heinrich Appel's child
  ?child dbo:parent dbr:Johann_Heinrich_Appel .
  
  # Spouse of the child
  ?spouse dbo:spouse ?child .
  
  # Successor of the child who is royalty
  ?successor dbo:predecessor ?child .
  FILTER EXISTS { ?successor a dbo:Monarch } .

  # Reference to Louis I, ensuring both spouse and successor are royalty
  ?reference dbo:monarch dbr:Louis_I_of_Bavaria .
  FILTER EXISTS { ?spouse a dbo:Monarch } .
  FILTER EXISTS { ?successor a dbo:Monarch } .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
791,40,val,"Give me the father of Emperor Go-Toba and predecessor of Emperor Antoku and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Emperor Go-Toba's father
  dbr:Emperor_Go-Toba dbo:father ?person .

  # Predecessor of Emperor Antoku
  ?person dbo:successor dbr:Emperor_Antoku .

  # Spouse of the spouse (royalty) of Emperor Takakura
  OPTIONAL {
    dbr:Emperor_Takakura dbo:spouse ?spouse .
    ?spouse dbo:spouse ?royalSpouse .
    ?royalSpouse dbo:spouse ?person .
    FILTER EXISTS { ?royalSpouse a dbo:Monarch } # Ensure royalty
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
573,54,val,"Give me the person decedent at the administration, that is a region, of Charlie Baker and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of John Quincy Adams.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?charlieBakerDecedent ?professionalDecedent
WHERE {
  # Find Charlie Baker's administration region and its decedent
  dbr:Charlie_Baker dbo:officeHolderOf ?administration.
  ?administration a dbo:AdministrativeRegion.
  ?administration dbo:decedentAt ?charlieBakerDecedent.

  # Find the professional who is an American politician and parent of John Quincy Adams
  ?professional dbo:nationality dbr:United_States.
  ?professional rdf:type dbo:Politician.
  ?professional dbo:parentOf dbr:John_Quincy_Adams.
  
  # Find the residence settlement of this professional and its decedent
  ?professional dbo:residence ?residence.
  ?residence a dbo:Settlement.
  ?residence dbo:decedentAt ?professionalDecedent.
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
976,42,val,"Give me the office of the person born as Mehmet Naci Bostancı and office of Meral Akşener and office of the leader, that is a politician, of Grand National Assembly of Turkey.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?officeBostanci ?officeAkseren ?officeLeader
WHERE {
  # Office of Mehmet Naci Bostancı
  ?bostanci dbo:birthName ""Mehmet Naci Bostancı""@en .
  ?bostanci dbo:office ?officeBostanci .

  # Office of Meral Akşener
  ?akseren foaf:name ""Meral Akşener""@en .
  ?akseren dbo:office ?officeAkseren .

  # Leader of the Grand National Assembly of Turkey
  ?leader dbp:position ""Leader of the Grand National Assembly of Turkey"" ;
          dbo:occupation dbo:Politician ;
          dbo:office ?officeLeader .
}
```

This query does the following:
- Identifies Mehmet Naci Bostancı by his birth name and retrieves his office.
- Identifies Meral Akşener by her name and retrieves her office.
- Finds the leader of the Grand National Assembly of Turkey who is a politician and retrieves their office.",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
715,47,val,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  # Commander in the force of the mayor who is a politician and president during the 1933 Spanish general election
  ?mayor dbo:officeHolderOf dbr:Mayor_of_Spain ;
         dbo:positionTitle ""President"" ;
         dbp:electionDate ?electionDate .
  
  FILTER (YEAR(?electionDate) = 1933)

  ?mayor dbo:commanderInForce ?commander .

  # Commander in the force of a military conflict involving Abd el-Krim
  ?conflict dbo:commanderInForce ?commander ;
            dbo:participant dbr:Abd_el-Krim .
}
```",5,9,6,3,2,3,3,71,0,0,4,0,0.0,0
124,50,val,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?militaryForce
WHERE {
  ?war a dbo:Event ;
       a dbo:MilitaryConflict ;
       a dbo:SocietalEvent .

  ?awardee dbo:awardReceived dbr:British_South_Africa_Company_Medal .
  ?war dbo:participant ?awardee .

  ?kitchenerForce a dbo:MilitaryConflict ;
                  a dbo:SocietalEvent .
  ?kitchenerForce dbo:commander dbr:Herbert_Kitchener_1st_Earl_Kitchener .
  ?war dbo:participatingMilitaryUnit ?kitchenerForce .

  OPTIONAL {
    ?militaryForce dbo:militaryForceOf ?kitchenerForce .
  }
}
```",5,10,6,3,2,3,3,71,0,0,1085,0,0.0,0
216,45,val,"Give me the player in Mario Ivanković and player in Igor Bišćan and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player (GROUP_CONCAT(?team; separator="", "") AS ?teams)
WHERE {
  # Find Mario Ivanković and Igor Bišćan's teams
  VALUES (?mario) { dbr:Mario_Ivanković }
  VALUES (?igor) { dbr:Igor_Bišćan }

  ?mario dbo:team ?team1 .
  ?igor dbo:team ?team2 .

  # Find the person who is a sports manager, soccer manager, and player
  ?person a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerManager .

  # Ensure this person was part of a team whose member was born in Pavel Vezhinov's death year
  ?team1 dbo:member ?bornPerson .
  ?team2 dbo:member ?bornPerson .

  ?bornPerson dbo:birthDate ?birthDate .
  ?pavel dbr:Pavel_Vezhinov ;
         dbo:dateOfDeath ?deathDate .

  BIND(YEAR(?deathDate) AS ?yearOfDeath)

  FILTER(YEAR(?birthDate) = ?yearOfDeath)

  # Ensure the person is associated with a team
  ?person dbo:team ?team .
  
  OPTIONAL { ?team1 rdfs:label ?teamLabel1 }
  OPTIONAL { ?team2 rdfs:label ?teamLabel2 }

  BIND(CONCAT(?teamLabel1, "" "", ?teamLabel2) AS ?teams)
}
GROUP BY ?player
ORDER BY ?player",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
892,49,val,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?profession ?region
WHERE {
  # Henri Crolla's profession
  dbr:Henri_Crolla dbo:occupation ?profession .

  # Andrea Cozzolino's political party
  dbr:Andrea_Cozzolino dbo:memberOfParty ?party .
  
  # The party is an organization and a political party
  ?party rdf:type dbo:Organization ;
         rdf:type dbo:PoliticalParty .

  # Region associated with the party that satisfies multiple conditions
  ?party dbp:region ?region .
  ?region rdf:type dbo:Region ;
          rdf:type dbo:Settlement ;
          rdf:type dbo:AdministrativeRegion ;
          rdfs:label ?regionLabel .
  
  FILTER (CONTAINS(LCASE(?regionLabel), ""italy""))
}
```",5,11,6,3,2,3,3,71,0,0,587,0,0.0,0
47,53,val,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of Padma Vibhushan and office of Bidesh Ranjan Bose.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> ?v3 . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeGreenHunt ?officePadmaVibhushan ?officeBose
WHERE {
  # Office of the politician involved in Operation Green Hunt
  ?politician dbo:occupation ?officeGreenHunt .
  ?politician dbo:wikiPageWikiLink dbr:Operation_Green_Hunt .

  # Office of the awardee of Padma Vibhushan
  ?awardee dbo:awardReceived dbr:Padma_Vibhushan .
  ?awardee dbo:occupation ?officePadmaVibhushan .

  # Office of Bidesh Ranjan Bose
  dbr:Bidesh_Ranjan_Bose dbo:occupation ?officeBose .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
232,7,val,"Give me the claim to fame of Katherine ""Kitty"" Marshall and artistic movement of the person born, that is a writer, on 1849-09-14.","SELECT ?result WHERE { <http://dbpedia.org/resource/Katherine_%22Kitty%22_Marshall> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1849-09-14""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/movement> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?writerName ?birthDate ?claimToFame ?artisticMovement
WHERE {
  # Identify the writer born on 1849-09-14
  ?person a dbo:Writer ;
          dbo:birthDate ?birthDate ;
          foaf:name ?writerName .
  
  FILTER (YEAR(?birthDate) = 1849 && MONTH(?birthDate) = 9 && DAY(?birthDate) = 14)

  # Find the claim to fame of Katherine ""Kitty"" Marshall
  ?kitty a dbo:Person ;
         foaf:name ""Katherine \""Kitty\"" Marshall""@en .
  
  ?kitty dbo:famousFor ?claimToFame .

  # Get the artistic movement associated with the writer
  OPTIONAL {
    ?person dbo:artisticMovement ?artisticMovement .
  }
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
987,52,val,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and entity in Montenegro and birth place of the actor of All for Free.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandBirthPlace ?actorBirthPlace
WHERE {
  # Find Dado Prljaca's band
  ?band a dbo:Band ;
        dbo:artist dbr:Dado_Prljaca ;
        a dbo:MusicalArtist, dbo:Artist .
  
  # Get the birthplace of the band
  ?band dbo:birthPlace ?bandBirthPlace .

  # Find the actor from ""All for Free""
  ?movie dbo:title ""All for Free"" ;
         dbo:actor ?actor .
  
  # Get the birthplace of the actor
  ?actor dbo:birthPlace ?actorBirthPlace .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
926,49,val,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandfather ?royalChild1 ?motherOfBeyhanSultan ?royalChild2
WHERE {
  # Abdulaziz's grandfather
  ?abdulaziz dbo:father ?fatherAbdulaziz .
  ?fatherAbdulaziz dbo:father ?grandfather .

  # Child of Abdulaziz's grandfather who is royalty
  ?grandfather dbo:child ?royalChild1 .
  ?royalChild1 dbp:title ?title1 .
  FILTER(CONTAINS(LCASE(?title1), ""king"") || CONTAINS(LCASE(?title1), ""queen"") || 
         CONTAINS(LCASE(?title1), ""sultan"") || CONTAINS(LCASE(?title1), ""prince"") ||
         CONTAINS(LCASE(?title1), ""princess""))

  # Beyhan Sultan's mother who is royalty
  ?mustafaIII dbo:child ?beyhanSultan .
  ?beyhanSultan dbp:mother ?motherOfBeyhanSultan .

  # Child of Beyhan Sultan's mother who is royalty
  ?motherOfBeyhanSultan dbo:child ?royalChild2 .
  ?royalChild2 dbp:title ?title2 .
  FILTER(CONTAINS(LCASE(?title2), ""king"") || CONTAINS(LCASE(?title2), ""queen"") || 
         CONTAINS(LCASE(?title2), ""sultan"") || CONTAINS(LCASE(?title2), ""prince"") ||
         CONTAINS(LCASE(?title2), ""princess""))
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
976,48,val,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the person born as Mehmet Naci Bostancı.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v1 <http://dbpedia.org/property/office> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeKılıçdaroğlu ?officeBostancı
WHERE {
  # Find the administration (organisation) of Kemal Kılıçdaroğlu
  dbr:Kemal_Kılıçdaroğlu dbo:leaderOf ?administration .
  
  # Get the office of the leader of this administration
  ?administration dbo:officeHolder ?leader .
  ?leader dbo:positionHeld ?officeKılıçdaroğlu .

  # Find Mehmet Naci Bostancı and his office
  dbr:Mehmet_Naci_Bostancı dbo:birthName ""Mehmet Naci Bostancı""@en .
  dbr:Mehmet_Naci_Bostancı dbo:office ?officeBostancı .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
216,20,val,Give me the administration of  and office of Tim Nicholls and party of the awardee of Australian Defence Medal.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/property/leader> """"@en . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?office ?party 
WHERE {
  # Tim Nicholls' office and administration
  ?tim a dbo:Person ;
       foaf:name ""Tim Nicholls"" ;
       dbo:officeHolder ?office .
  
  OPTIONAL { ?office dbo:partOf ?administration . }
  
  # Awardee of the Australian Defence Medal
  ?awardee a dbo:Person ;
           dbo:awardReceived dbr:Australian_Defence_Medal ;
           dbo:partyAffiliation ?party .

  # Linking Tim Nicholls to the awardee's party (if applicable)
  OPTIONAL { ?tim dbo:memberOf ?party . }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
582,51,val,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player ?nickname
WHERE {
  # Find Masami Nagasawa and her father who is an athlete, soccer manager, and sports manager
  ?masami a dbo:Person ;
          foaf:name ""Masami Nagasawa""@en .
  
  ?father dbo:child ?masami ;
          a dbo:Athlete, dbo:SoccerManager, dbo:SportsManager .

  # Find Hajime Moriyasu's team nickname
  ?hajime a dbo:Person ;
          foaf:name ""Hajime Moriyasu""@en .
  
  ?team dbo:manager ?hajime ;
        a dbo:Organization .
  
  OPTIONAL {
    ?team dbo:nickname ?nickname .
  }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
715,45,val,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in Spanish Civil War and commander in Rif War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v0 <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeLeader WHERE {
  # Find Carlos Franco Iribarnegaray's DBpedia resource
  dbr:Carlos_Franco_Iribarnegaray a dbo:Person .

  # Identify his roles in the Spanish Civil War and Rif War
  ?carlos dbo:commanderOf [
    a dbo:MilitaryConflict ;
    dbp:name ""Spanish Civil War""^^xsd:string .
  ] .
  ?carlos dbo:commanderOf [
    a dbo:MilitaryConflict ;
    dbp:name ""Rif War""^^xsd:string .
  ] .

  # Find the office he led
  ?office dbo:leader ?carlos ;
          a dbo:GovernmentAgency, dbo:Organization .

  # Get the leader of that office
  ?officeLeader dbo:leader ?office .
}
```

### Explanation:

- **PREFIX**: Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT ?officeLeader**: We want to find distinct leaders of the office.
- **WHERE Clause**:
  - Identify Carlos Franco Iribarnegaray as a person.
  - Use `dbo:commanderOf` to link him to his roles in both wars.
  - Find an office (`?office`) that he led, which is both a government agency and an organization.
  - Retrieve the leader of this office.

This query should return the leader of the office associated with Carlos Franco Iribarnegaray based on the specified criteria.",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
158,15,val,"Give me the party of Théodore Steeg and entity in the award, that is a country, of the reference to Adelbert Cronkhite.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Théodore_Steeg> <http://dbpedia.org/ontology/party> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?country
WHERE {
  # Théodore Steeg's political party
  dbr:Théodore_Steeg dbo:politicalParty ?party .

  # Adelbert Cronkhite's award entity that is a country
  OPTIONAL {
    dbr:Adelbert_Cronkhite dbo:award ?award .
    ?award dbo:recipient dbr:Adelbert_Cronkhite .
    ?award dbo:country ?country .
    FILTER (isBlank(?country) != true)
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
129,20,val,"Give me the professional in  and associated musical artist of Saba (rapper) and associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge.","SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?sabaProfessional ?sabaArtist ?actorOrganization ?revengeArtist
WHERE {
  # Saba's professional role and associated musical artist
  dbr:Saba_(rapper) dbo:profession ?sabaProfessional .
  OPTIONAL { ?sabaProfessional dbo:associatedMusicalArtist ?sabaArtist . }

  # Organization acting in ""Dreamville Presents: Revenge"" and its associated musical artist
  ?actorOrganization a dbo:Organisation ;
                    dbo:performerIn dbr:Dreamville_Presents:_Revenge .
  OPTIONAL { ?actorOrganization dbo:associatedMusicalArtist ?revengeArtist . }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
791,46,val,"Give me the predecessor of the child of Emperor Takakura and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor
WHERE {
  # Emperor Takakura and his child
  dbr:Takakura_of_Japan dbo:child ?child .

  # Predecessor of the child
  ?child dbo:predecessorOrSuccessorOf ?predecessor .

  # Spouse of the spouse (in-law) who is royalty
  ?spouse dbo:spouse ?takakurasSpouse .
  ?takakurasSpouse dbo:spouse dbr:Takakura_of_Japan .
  
  FILTER EXISTS { ?spouse a dbo:Monarch } # Ensure the spouse is royalty

  # Linking predecessor to the in-law
  ?predecessor dbo:spouse ?spouse .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
216,22,val,Give me the office of the mayor of Ros Bates and party of the awardee of Australian Defence Medal.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?rosBatesParty ?awardeeParty
WHERE {
  # Ros Bates's office and party affiliation
  dbr:Ros_Bates dbo:positionHeld ?office .
  OPTIONAL { dbr:Ros_Bates dbo:partyAffiliation ?rosBatesParty . }

  # Awardee of the Australian Defence Medal and their party affiliation
  ?awardee dbo:awardReceived dbr:Australian_Defence_Medal .
  OPTIONAL { ?awardee dbo:partyAffiliation ?awardeeParty . }
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
507,41,val,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and spouse of the person born as Anne Voase Coates and professional in Film director, television director.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/director> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?directorName
WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Beryl_Reid ;
         dbo:workExample ?work .
  
  ?person foaf:name ""Anne Voase Coates""@en ;
          dbo:birthName ""Anne Voase Coates""@en ;
          dbo:profession dbr:Film_director , dbr:Television_director .

  ?spouse foaf:mbox ?email ; 
          foaf:name ?directorName ;
          dbo:spouse ?person .
  
  ?movie dbo:director ?spouse .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
267,15,val,"Give me the person born on 1953-03-01 and coach of the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/coach> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ""1953-03-01""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?club
WHERE {
  ?person dbo:birthday ""1953-03-01""^^xsd:date .
  ?person dbo:managerOf ?club .
  ?club a dbo:SoccerClub .
  FILTER (YEAR(?personStart) <= 2020 && YEAR(?personEnd) >= 2021)
  OPTIONAL { ?player dbo:playsFor ?club . }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
865,55,val,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child of Abu Ahmad Abdul Hafiz and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry
WHERE {
  # Ram Jaipal Singh Yadav's residence and its native country
  dbr:Ram_Jaipal_Singh_Yadav dbo:residence ?residence .
  
  ?residence dbo:nativeCountry ?nativeCountry .

  # Abu Ahmad Abdul Hafiz's child and their father
  OPTIONAL {
    ?child dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz ;
           dbo:father ?father .
    
    FILTER EXISTS { ?father a dbo:Politician }
  }
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
645,45,val,"Give me the military force of Spanish Civil War and commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?commander ?leader
WHERE {
  # Military forces in the Spanish Civil War
  ?militaryForce dbo:partOf dbr:Spanish_Civil_War .
  
  # Commanders in the Battle of Jarama
  ?battle dbr:Battle_of_Jarama ;
         dbo:commander ?commander .
  
  # Leader of an office that is a government agency and organization
  ?office dbo:type dbr:Government_agency ;
          dbo:type dbr:Organization ;
          dbo:leader ?leader .

  # Linking the leader to a native of Restoration (Spain)
  ?native dbo:nationality dbr:Spain ;
          dbo:era dbr:Restoration_(Spain) .
  
  ?office dbo:headquarters ?location .
  ?native dbo:birthPlace ?location .

  # Ensure the commander is linked to the battle
  ?battle dbo:participatedIn ?militaryForce .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
987,44,val,"Give me the birth place of Dado Polumenta and birth place of the actor of All for Free and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?dadoBirthPlace ?actorBirthPlace ?cetCountry
WHERE {
  # Dado Polumenta's birthplace
  dbr:Dado_Polumenta dbo:birthPlace ?dadoBirthPlace .

  # Actor of ""All for Free"" and their birthplace
  OPTIONAL {
    dbr:All_for_Free dbp:starring ?actor .
    ?actor dbo:birthPlace ?actorBirthPlace .
  }

  # Country in the Central European Time region
  OPTIONAL {
    ?cetCountry a dbo:Country ;
                dbo:timeZone ?timezone .
    FILTER(CONTAINS(LCASE(?timezone), ""central european time"") || CONTAINS(LCASE(?timezone), ""cet""))
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
216,51,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player WHERE {
  ?player a dbo:SoccerPlayer .
  ?player a dbo:SportsManager .
  ?player a dbo:SoccerManager .

  # Coach of Bosnia and Herzegovina national under-18 football team
  ?team dbr:Bosnia_and_Herzegovina_national_under-18_football_team ;
        dbo:coach ?player .

  # Team associated with someone born on Pavel Vezhinov's death date
  ?person dbp:dateOfBirth ?birthDate .
  ?deathEvent dbo:deceased ?person ;
              dbo:day ?deathDay ;
              dbo:month ?deathMonth ;
              dbo:year ?deathYear .
  
  FILTER (?birthDate = CONCAT(?deathYear, '-', ?deathMonth, '-', ?deathDay))
  
  ?team2 dbp:manager ?player ;
         dbo:member ?person .

}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
773,42,val,"Give me the parent of Carloman of Bavaria and spouse of the father of Charles the Fat and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfCarloman ?spouseOfFatherOfCharlesTheFat ?royalParentOfChildOfLouisTheGerman
WHERE {
  # Parent of Carloman of Bavaria
  ?carloman a dbo:Person ;
            rdfs:label ""Carloman of Bavaria""@en .
  
  ?parentOfCarloman dbo:child ?carloman .

  # Spouse of the father of Charles the Fat
  ?charlesTheFat a dbo:Person ;
                 rdfs:label ""Charles the Fat""@en .
  
  ?fatherOfCharlesTheFat dbo:child ?charlesTheFat .
  
  ?spouseOfFatherOfCharlesTheFat dbo:spouse ?fatherOfCharlesTheFat .

  # Parent of a royal child of Louis the German
  ?louisTheGerman a dbo:Person ;
                  rdfs:label ""Louis the German""@en .
  
  ?childOfLouisTheGerman dbo:child ?louisTheGerman ;
                         dbo:royalty true .
  
  ?royalParentOfChildOfLouisTheGerman dbo:parent ?childOfLouisTheGerman .
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
573,45,val,"Give me the person decedent at Quincy, Massachusetts and person decedent at Massachusetts and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:deathPlace dbr:Quincy,_Massachusetts .
  ?person dbo:deathPlace dbr:Massachusetts .
  
  ?parentOf a dbo:Parent ;
            dbo:child dbr:John_Quincy_Adams .

  FILTER (?person = ?parentOf)

  ?person a dbo:Politician .
  ?person a dbo:OfficeHolder .
}
```",5,7,6,3,3,3,3,71,0,0,2,0,0.0,0
865,46,val,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Abu Ahmad Abdul Hafiz and his child
  dbr:Abu_Ahmad_Abdul_Hafiz dbo:child ?child .
  
  # The child is a politician
  ?child rdf:type dbo:Politician .

  # The father of the child
  ?child dbo:father ?father .

  # Decedent at Patna and their residence (country)
  ?decedent dbo:placeOfDeath dbr:Patna .
  ?decedent dbo:nationality ?residenceCountry .

  # Abu Ahmad Abdul Hafiz's native country is the same as the decedent's residence
  dbr:Abu_Ahmad_Abdul_Hafiz dbo:nativePlace ?residenceCountry .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
926,53,val,"Give me the successor of Mustafa III and father of the father of the spouse of Neşerek Kadın and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?successor ?royaltyChild
WHERE {
    # Mustafa III's successor
    ?mustafaIII dbo:succession ?successor .
    
    # Neşerek Kadın's spouse
    ?neserekKadin dbp:spouse ?spouse .

    # Father of Neşerek Kadın's spouse
    ?spouse dbo:father ?fatherOfSpouse .

    # Mustafa III's father and his children who are royalty
    ?mustafaIII dbo:father ?mustafaFather .
    ?childOfMustafaFather dbo:father ?mustafaFather .
    FILTER (?childOfMustafaFather != ?mustafaIII) .
    ?childOfMustafaFather a dbo:Monarch .

    # Find the common individual who is both successor and royalty child
    VALUES ?commonIndividual { ?successor ?childOfMustafaFather }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
433,49,val,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional
WHERE {
  # Find the writer of the album ""Slowhand at 70 – Live at the Royal Albert Hall""
  dbr:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall dbo:writer ?writer .
  
  # Find the associated musical artist of Paul Laurence Dunbar Chambers Jr.
  dbr:Paul_Laurence_Dunbar_Chambers_Jr. dbo:musicalArtist ?associatedArtist .

  # Check if this person is a musician and an artist
  ?associatedArtist rdf:type dbo:Musician .
  ?associatedArtist rdf:type dbo:Artist .

  # Ensure the writer of the album is the same as the associated musical artist
  FILTER (?writer = ?associatedArtist)

  # Assign the professional role to the variable
  ?writer dbo:profession ?professional .
}
```",5,7,6,3,2,3,3,71,0,0,16,0,0.0,0
216,48,val,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?teamName
WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:sportManagerOf ?organization ;
          dbo:managerOfTeam ?organization ;
          dbo:birthDate ?birthDate .
  
  FILTER (YEAR(?birthDate) = 1983 && MONTH(?birthDate) = 12 && DAY(?birthDate) = 20)
  
  ?person dbo:playerIn ?team .
  ?team dbp:name ?teamName .

  ?organization a dbo:SoccerClub ;
                dbo:coachOfTeam dbr:Croatia_national_under-21_football_team .

}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
507,52,val,"Give me the professional in Film director, television director and spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/director> ?result . ?v5 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?director ?spouse WHERE {
  ?director a dbo:FilmDirector ;
           a dbo:TelevisionDirector .
  
  ?director dbo:directed dbr:Movie_With_Beryl_Reid ; # Replace with actual movie resource
            foaf:name ?name .

  ?spouse foaf:name ""Anne V. Coates""@en ;
          dbo:birthName ""Anne V. Coates""@en ;
          dbo:spouse ?director .
  
  FILTER EXISTS { ?movie dbo:starring dbr:Beryl_Reid . }
}
```

- **Note:** Replace `dbr:Movie_With_Beryl_Reid` with the actual DBpedia resource for the movie featuring Beryl Reid.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
892,54,val,Give me the landmark at elevation of the award of the member of E-girls and entity in the profession of Henri Crolla and entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v4 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?v1 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark ?elevation ?award ?member ?profession ?entityInReggioEmilia
WHERE {
  # Find a member of E-girls and their award
  ?member dbo:memberOf dbr:E-girls .
  ?member dbo:award ?award .

  # Find the landmark at elevation related to this award
  ?landmark dbo:elevation ?elevation .
  ?landmark dbo:relatedToAward ?award .

  # Henri Crolla's profession
  dbr:Henri_Crolla dbo:profession ?profession .

  # Entity in Province of Reggio Emilia
  ?entityInReggioEmilia dbo:locatedIn dbr:Province_of_Reggio_Emilia .
  
  # Optional connections between entities (if needed)
  OPTIONAL { ?member dbo:relatedTo ?entityInReggioEmilia }
  OPTIONAL { ?profession dbo:relatedTo ?landmark }
}
ORDER BY ?elevation
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
433,52,val,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and professional in Musician and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist
WHERE {
  # Paul Chambers' associated musical artists
  ?paulChambers a dbo:Musician ;
                foaf:name ""Paul Chambers"" .
  
  ?paulChambers dbo:associatedMusicalArtist ?intermediateArtist .

  # Intermediate artist must be an artist and a musical artist
  ?intermediateArtist a dbo:Artist, dbo:MusicalArtist .

  # Scott LaFaro's associated musical artists
  ?scottLaFaro a dbo:Musician ;
               foaf:name ""Scott LaFaro"" .
  
  ?scottLaFaro dbo:associatedMusicalArtist ?intermediateArtist .

  # The final artist we are interested in
  ?intermediateArtist dbo:associatedMusicalArtist ?associatedArtist .

  # Ensure the associated artist is both an artist and a musical artist
  ?associatedArtist a dbo:Artist, dbo:MusicalArtist .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
645,47,val,"Give me the commander in the force of Carlos Asensio Cabanillas and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander ?militaryForce ?event ?nativePresident
WHERE {
  # Carlos Asensio Cabanillas and his military force
  dbr:Caballero_de_la_Orden_Militar_de_Santiago_Carlos_Asensio_Cabanillas dbo:memberOf ?militaryForce .
  
  # Commander of the military force
  ?commander dbo:commanderOf ?militaryForce .

  # Event involving a military conflict and societal event
  ?event dbo:relatedEvent ?militaryConflict ;
         dbo:societalEvent ?societalEvent .

  # Native, President, Politician during Spanish Restoration
  ?nativePresident dbo:nationality dbr:Spain ;
                   dbo:presidentOf dbr:Restoration_(Spain) ;
                   a dbo:Politician .
  
  # Linking the event to the native president
  ?event dbo:relatedTo ?nativePresident .

}
```",5,10,6,3,2,3,3,71,0,0,23,0,0.0,0
445,43,val,Give me the death place of the awardee of the establishment of 1820-03-10 and entity in England and entity in United Kingdom.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v4 <http://dbpedia.org/property/awards> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?award dbo:dateEstablished ""1820-03-10""^^xsd:date .
  ?award dbo:recipient ?awardee .
  
  ?awardee dbo:birthPlace ?birthPlace .
  ?awardee dbo:deathPlace ?deathPlace .

  ?awardee dbo:nationality dbr:England ;
           dbo:nationality dbr:United_Kingdom .

}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
456,49,val,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of the actor of Pacific Drive.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfAlanDoyle ?spouseBand
WHERE {
  # Find the band associated with Alan Doyle
  dbr:Alan_Doyle dbo:memberOf ?bandOfAlanDoyle .
  
  # Find the actor in ""Pacific Drive""
  ?actor dbo:title dbr:Pacific_Drive ;
         a dbo:Actor .

  # Find the spouse of that actor
  ?spouse dbo:spouse ?actor ;
          a dbo:MusicalArtist .

  # Check if the spouse is associated with a band
  OPTIONAL {
    ?spouse dbo:memberOf ?spouseBand .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
18,19,val,"Give me the professional in the award of Ana María Sánchez de Ríos and parent of Liza Huber and alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?professional WHERE {
  # Ana María Sánchez de Ríos received an award
  ?award dbo:recipient dbr:Ana_María_Sánchez_de_Ríos .
  
  # The professional is the recipient of the same award
  ?award dbo:recipient ?professional .

  # Liza Huber is a child of the professional
  ?child foaf:name ""Liza Huber"" .
  ?parent foaf:child ?child ;
          foaf:name ?professional .

  # The professional is an alumnus of Marymount College, Tarrytown
  ?almaMater dbo:alumni ?professional ;
             rdfs:label ""Marymount College, Tarrytown""@en .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
465,45,val,"Give me the spouse of Archduchess Barbara of Austria and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Find Archduchess Barbara of Austria's spouse
  dbr:Barbara_of_Austria dbo:spouse ?spouse .

  # Identify Charles Orlando, Dauphin of France and his parent
  dbr:Charles_Orlando_dauphin_de_France dbo:parent ?parent .

  # Find Ercole II d'Este, Duke of Ferrara's successor
  dbr:Ercole_II_d%27Este dbo:succeededBy ?successor .

  # The child of Charles Orlando's parent who is a royalty and successor of Ercole II d'Este
  ?child dbo:parent ?parent ;
         dbo:succeededBy ?successor ;
         rdf:type dbo:Monarch .
  
  # Ensure the spouse found is related to this child
  ?spouse dbo:spouse ?child .
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
773,41,val,Give me the parent of the successor of Charles the Bald and parent of Charles the Fat and spouse of the father of Charles the Fat.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX wd: <http://www.wikidata.org/entity/>

SELECT DISTINCT ?successorParent ?charlesFatParent ?fatherSpouse
WHERE {
  # Successor of Charles the Bald and their parent
  ?charlesBaldSuccessor dbo:successor wd:Q12345 .
  ?parentOfSuccessor dbo:child ?charlesBaldSuccessor .
  
  # Parent of Charles the Fat
  ?charlesFatParent dbo:child wd:Q67890 .

  # Father of Charles the Fat and his spouse
  ?fatherOfCharlesFat dbo:child wd:Q67890 ;
                     a dbo:Man .
  ?fatherSpouse dbo:spouse ?fatherOfCharlesFat .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
326,7,val,"Give me the professional in Composer and person decedent at the region coded, that is a settlement, as 442/760.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?v2 <http://dbpedia.org/ontology/areaCode> ""442/760"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathLocation
WHERE {
  ?person dbo:occupation dbr:Composer .
  
  ?person dbo:deathPlace ?deathLocation .

  ?deathLocation dbo:countryCode ""442/760"" ;
                 a dbo:Settlement .
}
```",3,4,4,2,2,2,2,9,0,0,6,0,0.0,0
341,7,val,Give me the band member of the awardee of List of awards and nominations received by Beyoncé and writer of In Love & War (Amerie album).,SELECT ?result WHERE { <http://dbpedia.org/resource/In_Love_&_War_(Amerie_album)> <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Beyoncé> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Find awardees from Beyoncé's award list
  ?awardList dbo:recipient ?awardee .
  FILTER (str(?awardList) = ""List_of_awards_and_nominations_received_by_Beyoncé"")

  # Find writers of the album ""In Love & War"" by Amerie
  ?album dbo:writer ?bandMember .
  FILTER (str(?album) = ""In_Love_&_War_(Amerie_album)"")

  # Ensure the awardee is also a writer of the album
  VALUES ?awardee { ?bandMember }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
582,49,val,"Give me the reference to the residence of Hirotaka Sugawara and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence ?nickname
WHERE {
  # Hirotaka Sugawara's residence
  dbr:Hirotaka_Sugawara dbo:residence ?residence .

  # Hajime Moriyasu's team nickname
  OPTIONAL {
    ?team dbo:nickname ?nickname .
    ?organization dbo:team ?team .
    ?hajime dbo:memberOf ?organization .
    FILTER (str(?hajime) = ""Hajime_Moriyasu"")
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
433,48,val,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and professional in the profession of Bob Marley.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?musicalArtist
WHERE {
  ?person a dbo:MusicalArtist ;
          a dbo:Artist .
  
  ?association1 dbo:associatedWith dbr:Paul_Chambers ;
                dbo:persona ?person .
  
  ?association2 dbo:professionalIn dbr:Bob_Marley ;
                dbo:profession ?person .
}
```",5,7,6,3,2,3,3,71,0,0,16,0,0.0,0
892,43,val,Give me the entity in Italy and entity in Province of Reggio Emilia and landmark at elevation of the award of the member of E-girls.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?italyEntity ?reggioEmiliaEntity ?landmark ?elevation ?award
WHERE {
  # Entity in Italy
  ?italyEntity dbo:country dbr:Italy .
  
  # Entity in Province of Reggio Emilia
  ?reggioEmiliaEntity dbo:locatedIn dbr:Province_of_Reggio_Emilia ;
                     a dbo:Place .

  # Landmark at Elevation
  ?landmark dbo:elevation ?elevation ;
            dbo:location ?italyEntity .
  
  # Award of Member of E-girls
  ?member dbp:memberOf dbr:E-girls ;
          dbo:award ?award .
}
```

This query attempts to find:

- An entity located in Italy.
- A specific entity within the Province of Reggio Emilia.
- A landmark with a specified elevation that is associated with an Italian location.
- An award linked to a member of E-girls.

Note: The exact properties and classes (like `dbo:elevation`, `dbo:award`) might need adjustments based on DBpedia's current schema, as these are inferred from the question context. Additionally, more specific filtering or joining conditions may be required if further details about the elevation or award are provided.",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
47,45,val,"Give me the office of the awardee of the entity, that is an award, in India and office of Suvendu Adhikari and office of Bidesh Ranjan Bose.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeAwardee ?officeSuvendu ?officeBidesh
WHERE {
  # Awardees of an award in India
  ?award dbo:country dbr:India .
  ?person dbo:recipientOf ?award .
  OPTIONAL { ?person dbo:office ?officeAwardee . }

  # Office of Suvendu Adhikari
  dbr:Suvendu_Adhikari dbo:office ?officeSuvendu .

  # Office of Bidesh Ranjan Bose
  dbr:Bidesh_Ranjan_Bose dbo:office ?officeBidesh .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
582,55,val,"Give me the figure known as the nickname of Japan national football team and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to the residence of Hirotaka Sugawara.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nickname ?fatherName ?residence
WHERE {
  # Japan national football team nickname
  dbr:Japan_national_football_team dbo:nickname ?nickname .

  # Player who is an athlete, soccer manager, and sports manager
  ?player a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager ;
          rdfs:label ?fatherName .
  
  # This player is the father of Masami Nagasawa
  ?masami dbo:parent ?player .
  dbr:Masami_Nagasawa ?masami .

  # Reference to the residence of Hirotaka Sugawara
  OPTIONAL {
    dbr:Hirotaka_Sugawara dbo:residenceLocation ?residence .
  }
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
933,52,val,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to the birth name of Alan Warner (musician) and band of The Ramong Sound.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfBand ?birthName
WHERE {
  # The Ramones band information
  dbr:The_Ramones a dbo:MusicalArtist ;
                  dbo:associatedBand ?band1 .

  # Band associated with The Ramones that is also an artist and musical artist
  ?band1 a dbo:MusicalArtist, dbo:Artist ;
         dbo:associatedBand ?band2 .
  
  # Birth name of Alan Warner (musician)
  dbr:Alan_Warner_(musician) dbo:birthName ?birthName .

  # Ensure the band is associated with The Ramones
  ?band2 dbo:associatedBand dbr:The_Ramones .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
926,41,val,Give me the successor of the child of Ahmed III and child of Ahmed III and father of the father of Abdulaziz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?successor ?fatherOfFather ?abdalazizFather
WHERE {
  # Find a child of Ahmed III
  ?child dbo:parent dbr:Aḥmed_III .

  # Find the successor of this child
  ?child dbo:successor ?successor .

  # Find the father of this child (which is Ahmed III)
  ?father dbo:child ?child .
  
  # Find the grandfather (father's father) of this child
  ?grandfather dbo:child ?father .

  # Find Abdulaziz and his father
  dbr:Abdulaziz_I dbo:parent ?abdalazizFather .

  # Ensure that the father of the child is Ahmed III
  FILTER(?father = dbr:Aḥmed_III)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
976,43,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of Mustafa Şentop and office of Naci Bostancı.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mayorOffice
WHERE {
  ?mayor a dbo:Mayor ;
         dbo:nationality dbr:Turkey ;
         dbo:officeHolderOf ?city .
  
  ?reference a dbo:Organization, dbo:PoliticalParty ;
             dbo:nationality dbr:Turkey ;
             dbo:member ?mayor .

  ?reference rdfs:label ""Millet İttifakı""@en .

  ?mustafaOffice a dbo:Office ;
                 dbo:officeHolder ?mustafa .
  
  ?naciOffice a dbo:Office ;
              dbo:officeHolder ?naci .

  ?mustafa dbr:Mustafa_Şentop .
  ?naci dbr:Naci_Bostancı .

  FILTER(?mayor = ?mustafa || ?mayor = ?naci)
}
```",5,11,6,3,3,3,3,71,0,0,1,0,0.0,0
326,15,val,"Give me the person decedent at France and resident of the birthplace, that is a state and British, of the professional in Writer.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/France> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/occupation> ""Writer""@en . ?result <http://dbpedia.org/property/residence> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Writer .
  ?person dbo:nationality dbr:United_Kingdom . # British nationality
  ?person dbo:deathPlace dbr:France .        # Decedent in France
  ?person dbo:birthPlace ?birthplace .
  
  ?birthplace a dbo:State ;                # Birthplace is a state
              dbp:country dbr:United_Kingdom . # And British

  ?person dbo:residence ?residence .
  FILTER (?residence = ?birthplace)         # Resident of birthplace
  
  OPTIONAL { ?person rdfs:label ?name }    # Get the name if available
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
606,17,val,"Give me the figure known as Barb City and birthplace of the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  # Identify Barb City
  dbr:Barb_City a dbo:PopulatedPlace .

  # Find the alumnus associated with Penn Quakers
  ?alumnus dbo:almaMater dbr:University_of_Pennsylvania ;
          dbo:sportsTeamAffiliation dbr:NCAA_Division_I_FBS ;
          dbo:educationInstitution dbr:University_of_Pennsylvania .

  # Get the birthplace of this alumnus
  ?alumnus dbo:birthPlace ?birthPlace .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
445,44,val,Give me the entity in the award of George H. Cameron and death place of the awardee of Royal Astronomical Society and entity in England.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?deathPlace ?entityInEngland
WHERE {
  # George H. Cameron's award
  dbr:George_H._Cameron dbo:awardReceived ?award .

  # Awardee of the Royal Astronomical Society and their death place
  ?awardee dbo:awardReceived dbr:Royal_Astronomical_Society .
  ?awardee dbo:deathPlace ?deathPlace .

  # Entity in England
  ?entityInEngland a dbo:Place ;
                  dbo:country dbr:United_Kingdom ;
                  rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""england""))
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
865,47,val,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Syeda Shahar Banu's spouse
  ?spouse dbp:spouse ?syeda .
  
  # The child of the spouse who is a politician
  ?child dbo:parent ?spouse ;
         dbo:occupation ?politicianRole .
  FILTER EXISTS { ?politicianRole rdfs:label ?roleLabel . FILTER(CONTAINS(LCASE(?roleLabel), ""politician"")) }
  
  # Ram Jaipal Singh Yadav's residence country
  ?ram dbp:residence ?residence .
  ?residence a dbo:Country .

  # The father of the child
  ?child dbo:parent ?father .
}
```",5,7,6,3,2,3,3,71,0,62,1,0.0,0.0,0
166,15,val,"Give me the resting place of the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla and entity in Spain.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlace
WHERE {
  # Identify Manuel Hedilla and his associated military force
  dbr:Manuel_Hedilla dbo:militaryForce ?militaryForce .
  
  # Ensure the event is both a societal event and a military conflict
  ?event dbo:relatedMilitaryConflict ?militaryForce ;
         rdf:type dbo:SocietalEvent, dbo:MilitaryConflict .

  # Find the resting place of the entity in Spain
  OPTIONAL { ?militaryForce dbo:location dbr:Spain . }
  OPTIONAL { ?militaryForce dbo:restingPlace ?restingPlace . }

  FILTER EXISTS {
    ?event dbo:location dbr:Spain .
  }
}
```",4,7,5,3,2,3,2,20,0,0,4,0,0.0,0
433,41,val,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and professional in Musician.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonArtist WHERE {
  # Scott LaFaro's associated musical artist
  ?laFarosArtist dbo:associatedMusicalArtist dbr:Scott_LaFaro .
  
  # Associated musical artist of Scott LaFaro's associated artist
  ?laFarosArtist2 dbo:associatedMusicalArtist ?commonArtist .

  # Paul Chambers' associated musical artist who is also a musician
  ?chambersArtist dbo:associatedMusicalArtist dbr:Paul_Chambers_(musician) .
  ?chambersArtist rdf:type dbo:Musician .

  # Associated musical artist of Paul Chambers' associated artist
  ?chambersArtist2 dbo:associatedMusicalArtist ?commonArtist .

  FILTER(?laFarosArtist != ?chambersArtist)
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
826,53,val,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of the child of the father of Anna Magdalena Appel and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor
WHERE {
  # Prince Friedrich of Hesse and by Rhine's parent
  ?friedrich dbo:parent ?parentFriedrich .
  
  # Anna Magdalena Appel's father
  ?anna dbp:father ?fatherAnna .

  # Child of the father of Anna Magdalena Appel
  ?child dbp:parent ?fatherAnna .

  # Spouse of that child
  ?spouse dbo:spouse ?child .
  
  # Successor of Louis II, Grand Duke of Hesse
  ?successor dbo:predecessor <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> .
  
  # The person we are interested in is the spouse and successor
  ?person dbp:spouse ?spouse ;
          dbo:predecessor ?successor .

  # Predecessor of that person
  ?predecessor dbo:predecessor ?person .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
917,47,val,"Give me the child of the father of the spouse, that is a royalty, of Leleiohoku I and parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonEntity
WHERE {
  # Leleiohoku I's spouse and their father
  ?spouse dbo:spouse dbr:Leleiohoku_I .
  ?father dbo:child ?spouse .
  
  # Child of the father who is royalty
  ?royalty1 dbo:parent ?father .
  ?royalty1 a dbo:Monarch .

  # Kamehameha IV's child who is royalty
  ?royalty2 dbo:parent dbr:Kamehameha_IV .
  ?royalty2 a dbo:Monarch .

  # Find the common entity
  FILTER (?royalty1 = ?commonEntity)
  FILTER (?royalty2 = ?commonEntity)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
456,51,val,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandArtist
WHERE {
  # Alan Doyle's band
  dbr:Alan_Doyle dbo:bandMember ?alanBand .
  
  # The band of Alan Doyle has a musical artist (another band)
  ?alanBand dbo:musicalArtist ?musicalArtist .
  
  # This musical artist has an alter ego named ""The Shadow""
  ?musicalArtist dbo:alterEgo dbr:The_Shadow .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
573,41,val,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and parent of John Quincy Adams and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?phelanResidenceDecedent ?bakerAdminDecedent
WHERE {
  # William J. Phelan's residence and its decedent
  dbr:William_J._Phelan dbo:residenceLocation ?phelanSettlement .
  ?phelanSettlement a dbo:Settlement .
  ?phelanResidenceDecedent dbo:deceasedAt ?phelanSettlement .

  # John Quincy Adams' parent
  ?adamsParent dbo:child dbr:John_Quincy_Adams .
  
  # Charlie Baker's administration and its decedent
  dbr:Charlie_Baker dbo:administrativeRegion ?bakerRegion .
  ?bakerRegion a dbo:Region .
  ?bakerAdminDecedent dbo:deceasedAt ?bakerRegion .

  # Ensure the person at Phelan's residence is also Adams' parent
  FILTER (?phelanResidenceDecedent = ?adamsParent)
}
```",5,7,6,2,3,3,3,71,0,0,2,0,0.0,0
47,51,val,"Give me the office of the awardee of Banga Bhushan and office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeBangaBhushan ?officeOtherAward
WHERE {
  # Pattern for Banga Bhushan awardee's office
  ?bangaBhushanAwardee dbo:award dbr:Banga_Bhushan .
  ?bangaBhushanAwardee dbo:office ?officeBangaBhushan .

  # Pattern for another award in India
  ?otherAwardAwardee dbo:award ?otherAward .
  ?otherAwardAwardee dbo:office ?officeOtherAward .
  
  FILTER EXISTS { ?otherAward dbo:country dbr:India } # Ensure the other award is in India

}
```

This query retrieves distinct offices of awardees for Banga Bhushan and another unspecified award that is given in India. The `FILTER` clause ensures that the second award is indeed an Indian award.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
773,51,val,"Give me the parent of the successor of Charles the Bald and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfSuccessor ?parentOfRoyalChild
WHERE {
  # Step 1: Find Charles the Bald's successor
  ?successor dbo:predecessor dbr:Charles_the_Bald .
  
  # Step 2: Find the parent of the successor
  ?successor dbo:child ?parentOfSuccessor .

  # Step 3: Identify Carloman of Bavaria's father who is an office holder and royalty
  ?father dbo:child dbr:Carloman_of_Bavaria .
  ?father a dbo:Monarch .
  ?father dbo:officeHolder ?office .

  # Step 4: Find the child that is royalty
  ?royalChild dbo:parent ?father ;
              a dbo:Monarch .

  # Step 5: Determine the parent of this royal child
  ?royalChild dbo:child ?parentOfRoyalChild .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
582,53,val,"Give me the figure known as the nickname of Japan national football team and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in Kazuaki Nagasawa.","SELECT ?result WHERE { <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/property/residence> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nickname ?residence
WHERE {
  # Find the nickname of the Japan national football team
  dbr:Japan_national_football_team dbo:nickname ?nickname .

  # Find a scientist associated with this nickname (assuming some connection exists)
  ?scientist dbo:nickName ?nickname .
  
  # Get the residence of the scientist
  ?scientist dbo:residenceLocation ?residence .

  # Ensure Hirotaka Sugawara is a player in the Japan national football team
  dbr:Hirotaka_Sugawara dbo:team dbr:Japan_national_football_team .

  # Ensure Kazuaki Nagasawa is also a player in the Japan national football team
  dbr:Kazuaki_Nagasawa dbo:team dbr:Japan_national_football_team .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
715,53,val,"Give me the commander in Spanish Civil War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force, that is a military conflict, of the native of Morocco.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?agency ?conflict
WHERE {
  # Commander in the Spanish Civil War
  ?commander dbo:nationality dbr:Spain ;
            dbo:occupation dbr:Military_person ;
            dbo:participatedInMilitaryConflict dbr:Spanish_Civil_War .

  # Leader of a government agency or organization associated with Carlos Franco Iribarnegaray
  OPTIONAL {
    ?agency dbo:leader ?commander .
    ?agency dbo:member dbr:Carlos_Franco_Iribarnegaray .
    FILTER EXISTS { ?agency rdf:type (dbr:Government_agency | dbr:Organization) }
  }

  # Commander in a military conflict involving someone native to Morocco
  OPTIONAL {
    ?conflict dbo:nationality dbr:Morocco ;
              dbo:commander ?commander .
  }
}
ORDER BY ?commander",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
36,21,val,Give me the actor of Being Mrs Elliot and person born as the birth name of Ayo Makun and person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor
WHERE {
  # Actor of ""Being Mrs Elliot""
  OPTIONAL {
    ?film dbo:starring ?actor .
    FILTER (str(?film) = str(dbr:Being_Mrs_Elliot))
  }

  # Person born as the birth name of Ayo Makun
  OPTIONAL {
    ?person dbp:birthName ?name .
    FILTER (str(?name) = ""Ayo Makun"")
  }

  # Person born in 1971
  OPTIONAL {
    ?person dbo:birthYear ?year .
    FILTER (?year = 1971)
  }
}
```",4,4,5,2,3,2,3,28,1,5,0,0.16666666666666666,1.0,0.2857142857142857
281,23,val,"Give me the awardee of the award of Alfred Warden and commander in the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee
WHERE {
  # Find Alfred Warden's award
  dbr:Alfred_Warden dbo:awardReceived ?award .
  
  # Find the awardee of that award
  ?award dbo:recipient ?awardee .

  # Ensure the awardee is Roy Boehm and involved in a military conflict as a commander
  ?awardee rdfs:label ""Roy Boehm""@en .
  OPTIONAL {
    ?conflict dbo:commander ?awardee ;
              a dbo:MilitaryConflict .
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
826,49,val,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?predecessor
WHERE {
  # Step 1: Louis IV, Grand Duke of Hesse's child
  ?child dbo:parent dbr:Louis_IV,_Grand_Duke_of_Hesse .

  # Step 2: Spouse of the child
  ?spouse dbo:spouse ?child .

  # Step 3: Parent of the spouse
  ?parent dbo:child ?spouse .

  # Step 4: Predecessor of this parent
  ?predecessor dbo:successor ?parent .

  # Additional condition involving Johann Heinrich Appel
  ?appChild dbo:parent dbr:Johann_Heinrich_Appel .
  FILTER (?spouse = ?appChild)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
326,17,val,"Give me the resident of Berkshire and person decedent at the award, that is a country, of the awardee of French Legion of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Berkshire> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?country ?decedent
WHERE {
  ?awardee dbo:honoraryMemberOf dbr:French_Legion_of_Honor .
  
  ?award dbo:country ?country .
  FILTER (isLiteral(?country) && lang(?country) = ""en"") .

  OPTIONAL { 
    ?awardee dbo:decedentAtAward ?decedent .
  }

  ?awardee dbo:residence dbr:Berkshire .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
527,17,val,"Give me the actor of The Book Tower and author of the work, that is a work and a book, of the host of Hyperland.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v0 . <http://dbpedia.org/resource/The_Book_Tower> <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?author
WHERE {
  # Find the actor of ""The Book Tower""
  ?work dbr:The_Book_Tower .
  ?work dbo:starring ?actor .

  # Find the host of ""Hyperland"" and their authored work
  ?hyperlandHost dbr:Hyperland dbo:host ?hostPerson .
  ?hostPerson dbo:author ?authoredWork .

  # Ensure the authored work is both a work and a book
  ?authoredWork rdf:type dbo:Book ;
                rdf:type dbo:CreativeWork .

  # Bind the author of the work to the variable
  ?authoredWork dbo:author ?author .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
5,15,val,"Give me the birthplace of the person born, that is a politician, as the award of Renata Adler and entity in Canada.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person dbo:awardReceivedBy dbr:Renata_Adler .
  ?person dbo:nationality dbr:Canada .
  ?person a dbo:Politician .
  ?person dbo:birthPlace ?birthPlace .
}
```

This query does the following:
- Selects the birthplace (`?birthPlace`) of individuals.
- Filters for persons who have received an award from Renata Adler (`dbo:awardReceivedBy dbr:Renata_Adler`).
- Ensures these individuals are associated with Canada as their nationality (`dbo:nationality dbr:Canada`).
- Confirms that the person is a politician (`a dbo:Politician`).",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
382,15,val,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler and landmark at elevation of 100.","SELECT ?result WHERE { <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/elevation> ""100""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthplace
WHERE {
  # Find Lukas Kübler's manager who is also an athlete and sports manager
  ?player dbo:manager ?manager .
  FILTER (?player = dbr:Lukas_Kübler) .

  ?manager a dbo:SoccerManager ;
           a dbo:Athlete ;
           a dbo:SportsManager .

  # Get the birthplace of this manager
  ?manager dbp:birthPlace ?birthplace .

  # Find landmarks near the birthplace with elevation around 100 meters
  ?landmark dbo:elevation ?elevation .
  ?location dbo:locatedIn ?birthplace ;
            dbo:contains ?landmark .
  FILTER (?elevation >= 95 && ?elevation <= 105) .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
573,42,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the administration, that is a region, of Charlie Baker and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Find the author of Exchequer Standards who is a politician and office holder
  ?author dbo:work ?exchequerStandards .
  ?exchequerStandards rdfs:label ""Exchequer Standards""@en .

  ?author dbo:occupation dbr:Politician ;
          dbo:officeHolder true .

  # Find the parent of this author who is also a politician and office holder
  ?parent dbo:child ?author .
  ?parent dbo:occupation dbr:Politician ;
          dbo:officeHolder true .

  # Ensure Charlie Baker's administration region is considered
  dbr:Charlie_Baker dbo:administrativePost ?administration .
  ?administration rdf:type dbo:Region .

  # Person decedent at Quincy, Massachusetts
  ?person dbp:placeOfDeath dbr:Quincy,_Massachusetts ;
          dbo:deceased true .
}
```",5,8,6,2,3,3,3,71,0,0,2,0,0.0,0
47,47,val,"Give me the office of the administration of Jagdeep Dhankhar and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeJagdeep ?awardMantu ?officeMantu
WHERE {
  # Find Jagdeep Dhankhar's office of administration
  dbr:Jagdeep_Dhankhar dbo:positionHeld ?officeJagdeep .
  
  # Find Mantu Ghosh's award and his corresponding office
  OPTIONAL {
    dbr:Mantu_Ghosh dbo:awardReceived ?awardMantu .
    ?awardMantu a dbo:Award .
    
    OPTIONAL {
      dbr:Mantu_Ghosh dbo:positionHeld ?officeMantu .
    }
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
124,45,val,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and commander in Mahdist War and military force of Battle of Tamai.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?militaryForce
WHERE {
  ?person dbo:birthDate ""1850-06-24""^^xsd:date ;
          dbo:commanderOf ?mahdistWar .
  ?mahdistWar a dbo:MilitaryConflict .

  ?person dbo:commanderInBattle dbr:Battle_of_Tamai .
  
  OPTIONAL { 
    ?event dbo:relatedTo ?militaryForce .
    FILTER (?event = ?mahdistWar || ?event = dbr:Battle_of_Tamai)
  }
}
```

### Explanation:

- **PREFIXes:** Define common prefixes for DBpedia ontology and properties.
- **SELECT DISTINCT ?militaryForce:** We want to find distinct military forces related to the events.
- **WHERE Clause:**
  - Identify a person with the specified birth date, who was a commander in the Mahdist War.
  - Ensure the Mahdist War is classified as a MilitaryConflict.
  - Confirm the person commanded in the Battle of Tamai.
  - Use an OPTIONAL clause to find military forces related to either the Mahdist War or the Battle of Tamai.

This query should retrieve the military forces associated with the specified societal event and military conflict involving the identified person.",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
791,49,val,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfChild
WHERE {
  # Emperor Antoku's spouse
  ?spouseAntoku dbo:spouse dbr:Emperor_Antoku .
  
  # Emperor Takakura's spouse
  ?spouseTakakura dbo:spouse dbr:Emperor_Takakura .

  # The child of Emperor Antoku who is royalty
  ?child dbo:parent dbr:Emperor_Antoku ;
         a dbo:Monarch .

  # The father of this child, who must be royalty and an office holder
  ?fatherOfChild dbo:spouse ?spouseAntoku ;
                 dbo:officeHolder ?office ;
                 a dbo:Monarch .

  # Ensure the spouse of the father is also the spouse of Emperor Takakura
  ?spouseTakakura = ?spouseAntoku .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
47,46,val,"Give me the office of the awardee of Banga Bhushan and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeOffice ?commanderOffice
WHERE {
  # Find the awardee of Banga Bhushan and their office
  ?award dbr:Banga_Bhushan_Award .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:office ?awardeeOffice .

  # Find the commander in Operation Green Hunt who is a politician and their administrative office
  ?operation dbr:Operation_Green_Hunt .
  ?operation dbo:commander ?commander .
  ?commander rdf:type dbo:Politician .
  ?commander dbo:office ?commanderOffice .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
965,51,val,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName
WHERE {
  # George Mountbatten, 2nd Marquess of Milford Haven's parent who is a noble
  ?georgeMountbatten dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven ;
                     dbo:parent ?parent .
  
  ?parent foaf:name ?birthName ;
          dbo:nobleTitle ?nobleTitle .

  # Prince Louis of Battenberg's parent who is royalty
  ?princeLouis dbr:Prince_Louis_of_Battenberg ;
               dbo:parent ?sameParent .

  ?sameParent foaf:name ?birthName ;
              dbo:royalTitle ?royalTitle .
  
  FILTER (?parent = ?sameParent)
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
507,40,val,"Give me the director of Entertaining Mr Sloane (film) and professional in Film director, television director and spouse of the person born as the birth name of Anne V. Coates.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?director ?spouse
WHERE {
  # Find the director of ""Entertaining Mr Sloane""
  dbr:Entertaining_Mr_Sloane dbo:director ?director .

  # Identify Anne V. Coates by her birth name and profession
  ?anne a dbo:FilmDirector ;
        foaf:name ""Anne V. Coates"" ;
        dbo:birthName ?birthName .
  
  FILTER(CONTAINS(?birthName, ""Anne V. Coates""))

  OPTIONAL { ?anne dbo:profession dbr:Film_director . }
  OPTIONAL { ?anne dbo:profession dbr:Television_director . }

  # Find the spouse of Anne V. Coates
  ?anne foaf:mbox ?spouse .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
433,46,val,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtistOfChambers ?finalAssociatedArtist
WHERE {
  # Find Paul Chambers and his associated musical artist who is also an artist
  ?chambers a dbo:Musician ;
            foaf:name ""Paul Chambers"" .
  
  ?chambers dbp:associatedBandOrMusicalGroup ?band1 .
  ?band1 a dbo:MusicalArtist, dbo:Artist .

  # Find the associated musical artist of this band who is also an artist
  ?band1 dbp:associatedBandOrMusicalGroup ?associatedArtistOfChambers .
  ?associatedArtistOfChambers a dbo:MusicalArtist, dbo:Artist .

  # Now find Scott LaFaro and his associated musical artist who is also an artist
  ?laFarro a dbo:Musician ;
           foaf:name ""Scott LaFaro"" .
  
  ?laFarro dbp:associatedBandOrMusicalGroup ?band2 .
  ?band2 a dbo:MusicalArtist, dbo:Artist .

  # Find the associated musical artist of this band who is also an artist
  ?band2 dbp:associatedBandOrMusicalGroup ?finalAssociatedArtist .
  ?finalAssociatedArtist a dbo:MusicalArtist, dbo:Artist .
}",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
839,48,val,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandCharlieHuhn ?bandKevinRussellPersona
WHERE {
  # Find Charlie Huhn's band
  ?charlieHuhn a dbo:MusicalArtist ;
               foaf:name ""Charlie Huhn"" .
  ?charlieHuhn dbo:memberOfBand ?bandCharlieHuhn .

  # Find the person with persona Kevin Russell who is born and a musical artist
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ?birthDate ;
          dbo:hasPersona dbr:Kevin_Russell_(musician) .
  
  # Find this person's band
  ?person dbo:memberOfBand ?bandKevinRussellPersona .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
892,52,val,Give me the entity in Province of Reggio Emilia and landmark at elevation of the award of Anna Ishii and entity in the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInReggioEmilia ?landmark ?professionOfEnricoCrolla
WHERE {
  # Entity in Province of Reggio Emilia
  ?entityInReggioEmilia dbo:locatedIn dbr:Province_of_Reggio_Emilia .
  
  # Landmark at elevation of Anna Ishii's award
  ?award a dbo:Award ;
         dbo:recipient dbr:Anna_Ishii .
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = ?awardElevation)
  
  # Entity in the profession of Enrico Crolla's true self
  ?enricoCrolla dbo:trueSelf ?trueSelf .
  ?trueSelf dbo:profession ?professionOfEnricoCrolla .

  # Linking award elevation to landmark elevation
  BIND(?award.dbo:elevation AS ?awardElevation)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
935,17,val,"Give me the headquarter of the office of the native of Balochistan, Pakistan and death place of Abdul Raziq Bugti.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . ?v3 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Abdul_Raziq_Bugti> <http://dbpedia.org/ontology/deathPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?headquarter ?deathPlace
WHERE {
  # Find a person native of Balochistan, Pakistan and their office's headquarter
  ?person dbo:nativePlace dbr:Balochistan_(province) .
  ?office dbo:headquarters ?headquarter .
  ?person dbo:positionHeld ?office .

  # Find Abdul Raziq Bugti's death place
  dbr:Abdul_Razzaq_Bugti dbo:deathPlace ?deathPlace .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
976,49,val,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeLeader ?officeNaciBostanci
WHERE {
  # Find the leader of the Grand National Assembly of Turkey and their office
  ?leader a dbo:Politician ;
          dbo:positionHeld ?assembly .
  ?assembly dbo:officialName ""Grand National Assembly of Turkey""@en .

  ?leader dbo:office ?officeLeader .

  # Find Naci Bostancı and his birth name and office
  dbr:Naci_Bostancı a dbo:Politician ;
                    foaf:name ""Naci Bostancı""^^xsd:string ;
                    dbo:birthName ?birthName .
  
  OPTIONAL {
    dbr:Naci_Bostancı dbo:office ?officeNaciBostanci .
  }
}
```

This query does the following:
- Identifies a politician who holds a position in the Grand National Assembly of Turkey and retrieves their office.
- Retrieves Naci Bostancı's birth name and his office, if available.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
274,22,val,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie and professional in the designer of Tetris Classic.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  # Identify John Birks Gillespie
  dbr:John_Birks_Gillespie a dbo:MusicalArtist .

  # Find the designer of Tetris Classic
  ?designer a dbo:VideoGameDesigner ;
            dbo:worksOn dbr:Tetris_Classic .

  # Ensure John Birks Gillespie is professionally connected to the designer
  ?gillespieProfessionalConnection dbo:agent dbr:John_Birks_Gillespie ;
                                   dbo:object ?designer .

  # Find band members of John Birks Gillespie
  ?bandMember dbo:member dbr:John_Birks_Gillespie .
}
```",4,5,5,2,2,2,3,28,0,0,8,0,0.0,0
216,19,val,Give me the office of the mayor of Ros Bates and administration of  and party of Campbell Newman.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeRosBates ?administrationRosBates ?partyCampbellNewman
WHERE {
  # Ros Bates' office as Mayor of Brisbane
  dbr:Ros_Bates dbo:positionHeld dbr:Brisbane_Mayoralty .
  
  # Administration under which Ros Bates served
  OPTIONAL { 
    dbr:Ros_Bates dbo:memberOf ?administrationRosBates .
  }
  
  # Campbell Newman's political party affiliation
  dbr:Campbell_Newman dbo:partyAffiliation ?partyCampbellNewman .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
917,52,val,"Give me the child of Kekūanāoʻa and child of the father of Keʻelikōlani and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfKekuanaoa ?childOfFatherOfKeelikolani ?parentRoyaltyMayor
WHERE {
  # Kekūanāoʻa's child
  dbr:Kekuanaoa dbo:child ?childOfKekuanaoa .

  # Keʻelikōlani's father and his child
  dbr:Keelikolani dbo:father ?fatherOfKeelikolani .
  ?fatherOfKeelikolani dbo:child ?childOfFatherOfKeelikolani .

  # Parent who is royalty and mayor of the Hawaiian Kingdom
  ?parentRoyaltyMayor dbo:child ?childOfKekuanaoa ;
                      dbo:child ?childOfFatherOfKeelikolani ;
                      a dbo:Monarch ;  # Assuming 'royalty' implies being a Monarch
                      dbo:mayor dbr:Hawaiian_Kingdom .

}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
216,53,val,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and player in Mario Ivanković.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team
WHERE {
  ?person dbo:birthDate ""1983-12-20""^^xsd:date .
  ?person rdf:type dbo:SportsManager ;
          rdf:type dbo:SoccerManager ;
          rdf:type dbo:SoccerPlayer .

  ?organization rdf:type dbo:Organization ;
                rdf:type dbo:SoccerClub .

  ?organization dbp:coachOf dbr:Croatia_U21_Senior_Men%27s_National_Football_Team .
  
  ?person dbo:memberOf ?organization .
  ?person dbo:playerIn dbr:Mario_Ivanković .

  OPTIONAL { ?person dbo:team ?team . }
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
926,45,val,"Give me the successor of Mustafa III and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of Mahmud II.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Beyhan Sultan's parent (Mustafa III)
  dbr:Beyhan_Sultan dbo:parent dbr:Mustafa_III .
  
  # Mustafa III's successor
  dbr:Mustafa_III dbo:successor ?successor .

  # Mustafa III's father (Ahmed III)
  dbr:Mustafa_III dbo:father dbr:Ahmed_III .

  # Ahmed III is a royalty
  dbr:Ahmed_III rdf:type dbo:Monarch .

  # Mahmud II's father
  ?successor dbo:child dbr:Mahmud_II .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
976,41,val,"Give me the office of Naci Bostancı and office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).",SELECT ?result WHERE { <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v2 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeNaciBostanci ?officeLeaderGNA ?officeMayorNationAlliance
WHERE {
  # Office of Naci Bostancı
  dbr:Naci_Bostancı dbo:positionHeld ?officeNaciBostanci .

  # Office of the leader of Grand National Assembly of Turkey
  ?leader dbr:Grand_National_Assembly_of_Turkey dbo:president ?person .
  ?person dbo:positionHeld ?officeLeaderGNA .

  # Office of the mayor associated with Nation Alliance (Turkey)
  ?mayor dbo:nationality dbr:Turkey ;
         dbo:politicalParty dbr:Nation_Alliance_(Turkey) ;
         rdf:type dbo:Politician ;
         dbo:officeHolder true .
  ?mayor dbo:positionHeld ?officeMayorNationAlliance .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
645,44,val,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in Battle of Jarama.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v2 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader ?commander
WHERE {
  # Find the leader of the office associated with Camilo Menéndez Tolosa
  ?office a dbo:GovernmentAgency ;
          dbo:head ?leader .
  ?camilo dbo:positionHeld ?office .
  dbr:Camilo_Menéndez_Tolosa ?camilo .

  # Find the military force and event associated with Francisco Largo Caballero
  ?force a dbo:MilitaryForce ;
         dbo:commander ?commander .
  ?event a dbo:MilitaryConflict, dbo:SocietalEvent ;
         dbo:participatedIn ?battle ;
         dbo:participant ?force .
  dbr:Francisco_Largo_Caballero ?francisco .
  ?francisco dbo:militaryForce ?force .

  # Ensure the event is the Battle of Jarama
  dbr:Battle_of_Jarama ?battle .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
773,53,val,"Give me the parent of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse
WHERE {
  # Parent of Carloman of Bavaria
  ?carloman a dbr:Carloman_of_Bavaria ;
            dbo:parent ?parentCarlo.

  # Bernard's lineage
  ?bernard a dbr:Bernard_(son_of_Charles_the_Fat) ;
           dbo:father ?fatherBernard.
  ?fatherBernard dbo:parent ?grandParentBernard.
  
  # Spouse of the grandparent of Bernard
  ?spouse dbo:spouse ?grandParentBernard.

  # Child of Louis the German who is royalty
  ?louis a dbr:Louis_the_German ;
         dbo:child ?royalChild .
  ?royalChild a ?royaltyClass .

  FILTER (?parentCarlo = ?grandParentBernard && 
          (some values in ?royaltyClass are subclasses of dbo:Monarch or similar royalty classes))
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
773,44,val,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of Louis the German and parent of the successor of Charles the Bald.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Louis the German's child who is royalty and spouse
  ?child a dbo:Monarch ;
         dbo:spouse dbr:Louis_the_German ;
         dbo:childOf dbr:Louis_the_German .
  
  # Parent of this child (who is also the spouse)
  ?parent dbo:parentOf ?child .

  # Charles the Bald's successor
  ?successor dbo:succeededBy dbr:Charles_the_Bald .

  # Parent of the successor
  ?parent dbo:parentOf ?successor .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
98,21,val,"Give me the entity in the region, that is a country, of Philippine Standard Time and region of Philippine Standard Time and birth place of Paolo Ballesteros.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country ?region ?birthPlace
WHERE {
  # Find the region of Philippine Standard Time
  dbr:Philippine_Standard_Time dbo:timeZoneRegion ?region .

  # Find countries in that region
  ?country dbo:locatedIn ?region .
  
  # Ensure the country is a recognized country entity
  ?country rdf:type dbo:Country .

  # Get birthplace of Paolo Ballesteros
  dbr:Paolo_Ballesteros dbo:birthPlace ?birthPlace .

  # Filter to ensure birthplace matches one of the countries in the region
  FILTER (?birthPlace = ?country)
}
```",4,5,5,2,3,2,3,28,0,0,2,0,0.0,0
987,55,val,"Give me the birth place of the actor of All for Free and birth place of the band, that is an artist and a musical artist, of Šako Polumenta and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorBirthPlace ?bandBirthPlace ?countryInCETRegion
WHERE {
  # Find the actor of ""All for Free""
  ?movie dbo:title ""All for Free""@en .
  ?movie dbo:starring ?actor .
  
  # Get birthplace of the actor
  ?actor dbp:birthPlace ?actorBirthPlace .

  # Find the band associated with Šako Polumenta
  ?band dbo:member ?sakoPolumenta .
  ?sakoPolumenta rdfs:label ""Šako Polumenta""@en .

  # Get birthplace of the band (as an artist and musical artist)
  ?band dbp:birthPlace ?bandBirthPlace .

  # Find countries in the Central European Time region
  ?region dbo:timeZone dbr:Central_European_Time .
  ?country dbo:locatedIn ?region .
  
  # Get country names
  ?country rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = 'en')
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
158,16,val,"Give me the party of the successor, that is a prime minister and an office holder and a politician, of André Tardieu and entity in the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorParty ?awardCountry
WHERE {
  # Find André Tardieu's successor who is a prime minister, office holder, and politician
  ?tardieu dbo:officeHolderOf dbr:Prime_Minister_of_France .
  ?tardieu dbo:succeededBy ?successor .
  ?successor rdf:type dbo:OfficeHolder ;
             rdf:type dbo:Politician ;
             dbo:party ?successorParty .

  # Find the country associated with Adelbert Cronkhite's award
  ?cronkhite dbo:award dbr:Award_Name ; # Replace Award_Name with actual resource if known
             dbo:recipient dbr:Adelbert_Cronkhite .
  ?award dbo:country ?awardCountry .

}
```

### Explanation:

- **André Tardieu's Successor**:
  - We look for a person (`?tardieu`) who held the office of Prime Minister of France.
  - Find their successor (`?successor`).
  - Ensure this successor is both an `OfficeHolder` and a `Politician`.
  - Retrieve the political party (`?successorParty`) they belong to.

- **Adelbert Cronkhite's Award**:
  - Identify the award associated with Adelbert Cronkhite.
  - Extract the country (`?awardCountry`) related to this award.

Note: The placeholder `dbr:Award_Name` should be replaced with the specific DBpedia resource for the award if known. This query assumes that such relationships are directly available in DBpedia.",4,8,5,2,2,3,2,20,0,0,1,0,0.0,0
715,51,val,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader
WHERE {
  # Find offices related to Carlos Franco Iribarnegaray and Francisco Largo Caballero
  ?office dbo:employee dbr:Carlos_Franco_Iribarnegaray .
  ?office dbo:commanderInForce dbr:Felipe_Luis_Prieto_Castillo ; # Assuming Felipe Luis Prieto Castillo is related to Francisco Largo Caballero
          a dbo:GovernmentAgency ;
          a dbo:Organization .

  # Find the leader of such an office
  ?leader dbo:positionHeld ?office .
}
```

### Explanation:

- **PREFIX:** Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT ?leader:** Retrieve distinct leaders of offices.
- **WHERE Clause:**
  - Identify offices (`?office`) related to Carlos Franco Iribarnegaray as an employee.
  - Assume a connection between Francisco Largo Caballero and Felipe Luis Prieto Castillo for the commander role (adjust based on actual data).
  - Ensure the office is both a government agency and an organization.
  - Find individuals (`?leader`) who hold positions in these offices.

This query assumes certain relationships and may need adjustments based on available DBpedia data. Adjust predicates like `dbo:employee` or `dbo:commanderInForce` if more specific ones exist.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
83,7,val,Give me the player in the person born on 1995-07-07 and player in Albert Edward (soccer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Albert_Edward_(soccer)> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1995-07-07""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/team> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player1 ?player2
WHERE {
  # Find the player born on 1995-07-07
  ?person a dbo:Person ;
          dbp:birthday ""1995-07-07""^^xsd:date .
  ?person dbo:soccerPlayer ?player1 .

  # Find Albert Edward as a soccer player
  dbr:Albert_Edward dbo:soccerPlayer ?player2 .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
987,40,val,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and entity in Montenegro and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandBirthPlace ?kasumovicBirthPlace
WHERE {
  # Find the band associated with Dado Prljaca and has an entity in Montenegro
  ?band dbo:type/dbo:subClassOf* dbr:MusicalArtist ;
        dbo:member dbr:Dado_Prljaca ;
        dbp:country dbr:Montenegro .

  # Get the birthplace of the band
  ?band dbo:birthPlace ?bandBirthPlace .

  # Find Moamer Kasumović and get his birthplace
  dbr:Moamer_Kasumović dbo:birthPlace ?kasumovicBirthPlace .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
433,53,val,"Give me the professional in the profession of Bob Marley and associated musical artist of Bill Evans and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bobMarleyProfession ?billEvansArtist ?paulChambersArtist
WHERE {
  # Bob Marley's profession
  dbr:Bob_Marley dbo:profession ?bobMarleyProfession .

  # Bill Evans' associated musical artist
  dbr:Bill_Evans dbo:associatedMusicalArtist ?billEvansArtist .

  # Paul Chambers as a musical artist and an artist
  dbr:Paul_Chambers dbo:birthPlace ?place .
  FILTER EXISTS { dbr:Paul_Chambers rdf:type dbo:Musician . }
  FILTER EXISTS { dbr:Paul_Chambers rdf:type dbo:Artist . }
  OPTIONAL {
    dbr:Paul_Chambers dbo:associatedMusicalArtist ?paulChambersArtist .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
507,44,val,"Give me the professional in the profession of Guy Ferland and spouse of Anne V. Coates and director of the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/director> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director WHERE {
  ?person dbo:profession dbr:Film_director .
  ?person dbo:spouse dbr:Anne_V._Coates .
  
  ?movie dbo:director ?person ;
         dbo:starring dbr:Beryl_Reid .

  FILTER EXISTS { ?person rdfs:label ""Guy Ferland""@en }
}
```

This query does the following:
- Selects a person who has the profession of film director.
- Ensures this person is married to Anne V. Coates.
- Checks that this person directed a movie starring Beryl Reid.
- Uses a filter to ensure the person's label matches ""Guy Ferland"" in English.",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
917,55,val,"Give me the child of the father of Keʻelikōlani and child of the father of Kamehameha IV and parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonChild
WHERE {
  # Father of Keʻelikōlani and his child
  dbr:Keʻelikōlani dbo:father ?keelikoFather.
  ?keelikoFather dbo:child ?keelikoChild.

  # Father of Kamehameha IV and his child
  dbr:Kamehameha_IV dbo:father ?kamehamehaIVFather.
  ?kamehamehaIVFather dbo:child ?kamehamehaIVChild.

  # Find common child (royalty) between the two fathers' children
  FILTER (?keelikoChild = ?kamehamehaIVChild)
  
  # Ensure the child is royalty
  ?commonChild dbo:parent ?kamehamehaIVFather.
  ?commonChild a dbo:Monarch.

}",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
826,54,val,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of Louis IV, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Find the royalty who is a successor of Louis I and predecessor of Louis IV
  ?reference dbo:predecessor dbr:Louis_IV,_Grand_Duke_of_Hesse ;
             dbo:successor dbr:Louis_I,_Grand_Duke_of_Hesse .
  
  # This reference must have a child who is also royalty
  ?child dbo:parent ?reference ;
         rdf:type dbo:Monarch .

  # Find the spouse of this child, who is also a child of Johann Heinrich Appel
  ?spouse dbo:spouse ?child ;
          dbo:parent dbr:Johann_Heinrich_Appel .
  
  # The successor we are looking for is the reference itself
  ?successor dbo:predecessor ?reference ;
             rdf:type dbo:Monarch .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
773,52,val,Give me the parent of Charles the Fat and parent of the successor of Charles the Bald and spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v5 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfCharlesTheFat ?parentOfSuccessor ?spouseOfGrandfather
WHERE {
  # Parent of Charles the Fat
  OPTIONAL { 
    dbr:Charles_the_Fat dbo:child dbr:?charlesFatChild .
    dbr:?charlesFatChild dbo:parent ?parentOfCharlesTheFat .
  }

  # Successor of Charles the Bald and their parent
  OPTIONAL {
    dbr:Charles_the_Bald dbo:succeededBy dbr:?successor .
    dbr:?successor dbo:parent ?parentOfSuccessor .
  }
  
  # Spouse of the father of the parent of Bernard (son of Charles the Fat)
  OPTIONAL {
    dbr:Bernard_of_Saxony dbo:child dbr:Charles_the_Fat . # Assuming Bernard is the son
    dbr:Bernard_of_Saxony dbo:parent ?bernardsParent .
    ?bernardsParent dbo:parent ?grandfather .
    ?grandfather dbo:spouse ?spouseOfGrandfather .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
459,22,val,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore and governor of the administration, that is a politician, of Brad Henry.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/governor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceGovernor ?administrationGovernor
WHERE {
  # Find Cliff Roquemore's death place and its governor
  dbr:Cliff_Roquemore dbo:placeOfDeath ?deathPlace .
  FILTER (dbo:Settlement ?deathPlace) .
  ?deathPlace dbo:governor ?deathPlaceGovernor .

  # Find Brad Henry's administration and its governor
  dbr:Brad_Henry dbo:officeHolder ?administration .
  FILTER (dbo:Politician ?administration) .
  ?administration dbo:governor ?administrationGovernor .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
329,20,val,"Give me the entity in Northern Ireland and entity in the region, that is a country, of Western European Time and birthplace of Eric Cross (writer).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/ontology/country> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?countryInNI ?regionCountry ?birthPlace
WHERE {
  # Country in Northern Ireland
  ?countryInNI a dbo:Country ;
               dbo:location dbr:Northern_Ireland .

  # Region that is a country using Western European Time
  ?regionCountry a dbo:Country ;
                 dbo:timeZone dbr:Western_European_Time .

  # Birthplace of Eric Cross
  ?birthPlace dbo:birthPlace dbr:Eric_Cross .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
47,42,val,Give me the office of the awardee of Padma Vibhushan and office of Bidesh Ranjan Bose and office of the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeOffice ?boseOffice ?dhankharOffice
WHERE {
  # Office of any Padma Vibhushan awardee
  ?person dbo:award <http://dbpedia.org/resource/Padma_Vibhushan> .
  ?person dbo:office ?awardeeOffice .

  # Office of Bidesh Ranjan Bose
  dbr:Bidesh_Ranjan_Bose dbo:office ?boseOffice .

  # Office of Jagdeep Dhankhar
  dbr:Jagdeep_Dhankhar dbo:office ?dhankharOffice .
}
```

This query retrieves the offices held by:
- Any individual who has been awarded the Padma Vibhushan.
- Bidesh Ranjan Bose specifically.
- Jagdeep Dhankhar specifically.

The results will include three variables corresponding to each office, allowing you to see the respective positions held by these individuals.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
791,47,val,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor
WHERE {
  # Emperor Go-Shirakawa and his child
  ?goChild dbo:childOf dbp:Emperor_Go-Shirakawa .
  
  # Grandchild of Emperor Go-Shirakawa
  ?grandchild dbo:childOf ?goChild .

  # Check if the grandchild is an office holder and royalty
  ?grandchild a dbo:OfficeHolder ;
              a dbo:Royalty .

  # Spouse of this grandchild who is also royalty
  ?spouse dbp:spouse ?grandchild .
  ?spouse a dbo:Royalty .

  # Emperor Takakura and his spouse
  ?takakuraSpouse dbp:spouse dbp:Emperor_Takakura .
  
  # Ensure the spouse is royalty
  ?takakuraSpouse a dbo:Royalty .

  # Find the predecessor of this spouse
  ?predecessor dbo:predecessorOf ?takakuraSpouse .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
865,52,val,"Give me the father of Shahla Khatun and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfShahla ?politicianChildFather ?residenceCountry
WHERE {
  # Shahla Khatun's father
  dbr:Shahla_Khatun dbo:father ?fatherOfShahla .

  # Abu Ahmad Abdul Hafiz's child who is a politician
  dbr:Abu_Ahmad_Abdul_Hafiz dbo:child ?politicianChild .
  ?politicianChild dbo:occupation dbr:Politician .
  ?politicianChild dbo:father ?politicianChildFather .

  # Person decedent at Patna and their residence country
  ?person dbo:deathPlace dbr:Patna .
  ?person dbo:nationality ?residenceCountry .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,21,val,Give me the awardee of Medal bar and awardee of the award of Alfred Warden and commander in New Guinea campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?medalAwardee ?wardenAwardee ?newGuineaCommander
WHERE {
  # Awardee of Medal bar
  ?medalAwardee dbo:award dbr:Medal_bar .
  
  # Awardee of the award of Alfred Warden
  ?wardenAwardee dbo:award dbr:Alfred_Warden_award .

  # Commander in New Guinea campaign
  ?newGuineaCommander dbo:commanded dbr:New_Guinea_campaign .
}
```

This query assumes that:
- `dbo:award` is the property linking awardees to their awards.
- `dbo:commanded` is the property linking commanders to campaigns.",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
826,51,val,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor
WHERE {
  # Louis IV, Grand Duke of Hesse and his child
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:child ?childOfLouisIV .
  
  # Parent of the child (which is Louis IV himself)
  ?parentOfChild dbo:child ?childOfLouisIV .
  
  # Predecessor of Louis IV
  ?predecessor dbo:successor dbr:Louis_IV,_Grand_Duke_of_Hesse .

  # Louis I, Grand Duke of Hesse and his child
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:child ?childOfLouisI .
  
  # Successor of the child of Louis I
  ?successorOfChild dbo:predecessor ?childOfLouisI .

  # Ensure the successor is a royalty
  ?successorOfChild rdf:type dbo:Monarch .

  # Linking the predecessor of Louis IV to the successor of the child of Louis I
  FILTER (?predecessor = ?successorOfChild)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
465,52,val,"Give me the successor of Renée of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/father> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successorRenée ?successorChild
WHERE {
    # Successor of Renée of France
    OPTIONAL {
        dbr:Renée_of_France dbo:succeededBy ?successorRenée .
    }

    # Parent of Ercole II d'Este
    ?parent dbo:child dbr:Ercole_II_d%27Este,_Duke_of_Ferrara .

    # Child of the parent of Ercole II d'Este
    OPTIONAL {
        ?parent dbo:child ?childOfParent .
    }

    # Successor of the child of the parent of Ercole II d'Este
    OPTIONAL {
        ?childOfParent dbo:succeededBy ?successorChild .
    }

    # Children of Ferdinand I who are royalty
    ?child dbo:spouse ?spouse ;
           dbo:parent dbr:Ferdinand_I,_Holy_Roman_Emperor ;
           a dbo:Royal .

    # Spouse of the child, that is a royalty, of Ferdinand I
    OPTIONAL {
        ?spouse dbo:succeededBy ?successorSpouse .
    }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
130,15,val,"Give me the figure known as the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama and entity in Tennessee.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v1 <http://dbpedia.org/ontology/director> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Tennessee> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?figure ?native WHERE {
  ?figure a dbo:Film ;
          a dbo:SoccerClub .
  
  ?native dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Madison,_Alabama ;
          dbo:occupation dbr:Coolie ;
          dbo:almaMater ?college .
  
  ?native dbo:currentTeam ?entityInTennessee .
  
  FILTER EXISTS { ?figure dbo:director ?native . }
  FILTER EXISTS { ?native dbo:coachOf ?team . }
  FILTER EXISTS { ?native dbo:collegeCoach ?college . }
  
  OPTIONAL {
    ?entityInTennessee dbp:location dbr:Tennessee .
  }
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
791,45,val,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and predecessor of Emperor Antoku and spouse of Taira no Tokuko.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v1 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?fatherOfChild
WHERE {
  # Emperor Antoku's father, who is a royalty and an office holder
  dbr:Emperor_Antoku dbo:father ?emperorAntokuFather .
  
  # Ensure the father is a royalty and an office holder
  ?emperorAntokuFather a dbo:Monarch ;
                      dbo:officeHolder ?office .

  # Predecessor of Emperor Antoku
  ?predecessor dbo:successor dbr:Emperor_Antoku ;
               a dbo:Monarch .
  
  # Spouse of Taira no Tokuko
  ?spouse dbo:spouse dbr:Taira_no_Tokuko ;
          a dbo:Person .

  # Ensure the father is also the predecessor and spouse
  FILTER (?emperorAntokuFather = ?predecessor && ?emperorAntokuFather = ?spouse)

  # The child of this person (father)
  ?child dbo:parent ?emperorAntokuFather ;
         a dbo:Monarch .

  # Father of that child
  ?child dbo:parent ?fatherOfChild .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
978,17,val,Give me the band member of Enya and band member of the person born as the name of Chicane (musician).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Enya> . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?enyaBandMember ?chicaneBirthNameBandMember
WHERE {
  # Find Enya's band members
  ?enya dbr:Enya .
  ?enya dbo:musicalArtist ?band .
  ?band dbo:member ?enyaBandMember .

  # Find Chicane's birth name
  ?chicane dbr:Chicane .
  ?chicane foaf:name ?birthName .

  # Find band members of the person with Chicane's birth name
  ?person foaf:name ?birthName .
  ?person dbo:musicalArtist ?band2 .
  ?band2 dbo:member ?chicaneBirthNameBandMember .
}
```

This query does the following:
- Retrieves individuals who are band members of Enya.
- Identifies the birth name of Chicane.
- Finds any band members associated with the person whose birth name matches Chicane's.",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
839,49,val,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?kevinBand ?bandOfBand
WHERE {
  # Find Kevin Richard Russell's band
  dbr:Kevin_Richard_Russell a dbo:MusicalArtist .
  dbr:Kevin_Richard_Russell dbo:member ?kevinBand .

  OPTIONAL {
    # Check if the band of Kevin Richard Russell is also a musical artist and has its own band
    ?kevinBand a dbo:MusicalArtist .
    ?kevinBand dbo:bandMember ?bandOfBand .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
417,40,val,"Give me the child of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?spouse
WHERE {
  # Child of Alexandrine of Mecklenburg-Schwerin and Christian X of Denmark
  ?alexandrineChild dbo:parent dbr:Alexandrine_of_Mecklenburg-Schwerin .
  ?alexandrineChild dbo:parent dbr:Christian_X_of_Denmark .

  # Spouse of the parent (Alexandrine or Christian X)
  ?spouse dbo:spouse ?parent .
  
  FILTER (?parent IN (dbr:Alexandrine_of_Mecklenburg-Schwerin, dbr:Christian_X_of_Denmark))

  # Ensure spouse is royalty
  ?spouse a dbo:Monarch .

  # Child of Knud, Hereditary Prince of Denmark
  ?knudChild dbo:parent dbr:Knud,_Hereditary_Prince_of_Denmark .
  
  # The child from both conditions must be the same person
  FILTER (?alexandrineChild = ?spouse && ?alexandrineChild = ?knudChild)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
554,16,val,Give me the leader of the birth place of The Legendary Tigerman and leader of the administration of Francisco da Costa Gomes.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . ?v2 <http://dbpedia.org/property/leader> ?result . ?v3 <http://dbpedia.org/property/leader> ?result . <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandLeader ?administrationLeader
WHERE {
  # Find the birthplace of The Legendary Tigerman
  ?band dbo:birthPlace ?birthPlace .
  FILTER (str(?band) = ""The Legendary Tigerman""@en)

  # Get the leader of that birthplace
  ?birthPlace dbo:leader ?bandLeader .

  # Find Francisco da Costa Gomes and his administration
  ?francisco dbp:headOfState ?administration .
  FILTER (str(?francisco) = ""Francisco da Costa Gomes""@en)

  # Get the leader of that administration
  ?administration dbo:leader ?administrationLeader .
}
```",4,4,5,2,2,3,2,20,0,0,3,0,0.0,0
715,52,val,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of Ministry of the Air (Spain) and commander in the force of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v5 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?conflict dbo:commander ?commander .
  
  ?commander dbo:nationality dbr:Morocco .
  ?commander dbo:positionHeld dbr:Ministry_of_Air_(Spain) .
  
  ?caballeroCommander dbo:commander ?commander ;
                     rdfs:label ""Francisco Largo Caballero""@en .
}
```

This query attempts to find a commander who:
- Is associated with a military conflict (`?conflict`).
- Is native of Morocco.
- Held the position in the Ministry of the Air (Spain).
- Was also a commander for Francisco Largo Caballero.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
715,50,val,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  # Find the organization led by Carlos Franco Iribarnegaray
  ?organization a dbo:GovernmentAgency ;
                dbo:leader ?carlosFranco .
  
  # Ensure Carlos Franco is associated with the 1933 Spanish general election as president and politician
  ?carlosFranco dbo:officeHolder ""true""^^xsd:boolean ;
               dbo:politician ""true""^^xsd:boolean ;
               dbo:election ?election .

  ?election dbp:date ""1933-04-01""^^xsd:date ; # Assuming the election date is April 1, 1933
            dbo:president ?carlosFranco .
  
  # Find the mayor associated with this organization
  ?mayor dbo:officeHolder ""true""^^xsd:boolean ;
         dbo:politician ""true""^^xsd:boolean ;
         dbo:memberOf ?organization .

  # Identify the commander in the force of the mayor
  ?commander dbo:commanderOf ?mayor .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
917,45,val,"Give me the child of Kekūanāoʻa and child of the father of the child, that is a royalty, of Kamehameha III and parent of Albert Kamehameha.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalChild
WHERE {
  # Find the child of Kekūanāoʻa
  ?child1 dbo:parent dbr:Kekuanaoa ;
         dbo:childOf dbr:Kamehameha_III .

  # Find the father's (Kekūanāoʻa) other child who is royalty
  ?royalChild dbo:parent dbr:Kekuanaoa ;
              a dbo:Monarch ;
              dbo:childOf dbr:Kamehameha_III .

  # Ensure this royal child is a parent of Albert Kamehameha
  ?royalChild dbo:child dbr:Albert_Kamehameha .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
459,21,val,Give me the person born as the birth name of Kevin Stitt and governor of Oklahoma and governor of Dana Murphy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?birthName WHERE {
  # Get Kevin Stitt's birth name
  dbr:Kevin_Stitt dbo:birthName ?birthName .

  # Find any person with the same birth name as Kevin Stitt
  ?person dbo:birthName ?birthName .
  
  # Ensure this person is a governor of Oklahoma
  ?person dbo:governmentRole dbr:Governor_of_Oklahoma ;
          rdfs:label ?name .
  
  FILTER(?name != ""Kevin Stitt"" && ?name != ""Dana Murphy"")
}
ORDER BY ?birthName",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
373,7,val,"Give me the professional in Singer, songwriter and writer of the work, that is a single and a musical work and a work and a soundtrack, of .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/property/occupation> ""Singer, songwriter""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional (GROUP_CONCAT(DISTINCT ?work; separator="", "") AS ?works)
WHERE {
  ?work a dbo:SinglesOrEP ;
        a dbo:MusicalWork ;
        a dbo:Soundtrack .
  
  OPTIONAL { ?work dbo:artist dbr:Professional1 . }
  OPTIONAL { ?work dbo:composer dbr:Professional2 . }
  OPTIONAL { ?work dbo:lyricist dbr:Professional3 . }

  BIND(COALESCE(?professionalArtist, ?professionalComposer, ?professionalLyricist) AS ?professional)

  FILTER (?professional != """")
}
GROUP BY ?professional
ORDER BY ?professional",3,7,4,2,2,2,2,9,0,0,78,0,0.0,0
826,40,val,"Give me the spouse of the child of the father of Anna Magdalena Appel and predecessor of Louis IV, Grand Duke of Hesse and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse
WHERE {
  # Anna Magdalena Bach's father
  ?annaMagdalena dbp:father ?johannSebastianBach .
  
  # Child of Johann Sebastian Bach
  ?child dbo:parent ?johannSebastianBach .

  # Spouse of the child
  ?spouse dbo:spouse ?child .

  # Louis IV's predecessor (Louis III)
  ?louisIV dbp:predecessor ?louisIII .
  
  # Louis II's successor (Louis III)
  ?louisII dbp:successor ?louisIII .
}
```",5,5,6,3,3,3,3,71,1,6741,0,0.0001483239394838327,1.0,0.00029660388551090017
465,40,val,"Give me the spouse of Archduchess Barbara of Austria and successor of Renée of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse
WHERE {
  # Spouse of Archduchess Barbara of Austria
  ?barbara a dbo:Archduchess ;
           foaf:name ""Barbara of Austria"" .
  
  ?marriage dbo:spouse ?barbara ;
            dbo:spouse ?spouse .

  # Successor of Renée of France
  ?renee a dbo:Queen ;
         foaf:name ""Renée of France"" .
  
  ?successor1 dbp:predecessor ?renee ;
              a dbo:Queen .

  # Parent of Ercole II d'Este, Duke of Ferrara
  ?ercole2 a dbo:Duke ;
           foaf:name ""Ercole II d'Este"" .
  
  ?parent dbo:child ?ercole2 .
  
  # Child of the parent of Ercole II d'Este
  ?child dbo:parent ?parent .

  # Successor of the child of the parent of Ercole II d'Este
  ?successor2 dbp:predecessor ?child ;
              a dbo:Duke .

  # Ensure all successors are the same person
  FILTER (?spouse = ?successor1 && ?spouse = ?successor2)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
839,42,val,"Give me the band of Peter Schorowsky and band of the person born, that is a musical artist, as Kevin Richard Russell and band of the band, that is a musical artist, of Charlie Huhn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfPeterSchorowsky ?bandOfKevinRichardRussell ?bandOfCharlieHuhn
WHERE {
  # Peter Schorowsky's band
  dbr:Peter_Schorowsky dbo:member ?bandOfPeterSchorowsky .

  # Kevin Richard Russell's band
  ?kevin a dbo:MusicalArtist ;
         foaf:name ""Kevin Richard Russell"" .
  ?kevin dbo:member ?bandOfKevinRichardRussell .

  # Charlie Huhn's band
  dbr:Charlie_Huhn dbo:member ?bandOfCharlieHuhn .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
839,47,val,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of the band, that is a band and a group, of Peter Schorowsky.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/bandMember> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandKevin ?bandPeter
WHERE {
  # Find Kevin Richard Russell and his associated band
  ?kevin a dbo:MusicalArtist ;
         foaf:name ""Kevin Richard Russell"" .
  
  OPTIONAL { 
    ?kevin dbo:associatedBand ?bandKevin .
  }
  
  # Find Peter Schorowsky and the band he is a member of
  ?peter a dbo:Person ;
         foaf:name ""Peter Schorowsky"" .
  
  ?peter dbo:bandMember ?bandPeter .
  
  FILTER (?bandPeter a (dbo:Band|dbo:MusicalGroup))
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
192,15,val,"Give me the spouse of the spouse, that is a royalty, of the child of Charles II of Naples and child of Mary of Hungary, Queen of Naples.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_of_Hungary,_Queen_of_Naples> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . ?v1 <http://dbpedia.org/ontology/spouse> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchildInLaw WHERE {
  # Find the child of Charles II of Naples and Mary of Hungary
  ?child dbo:spouse* dbr:Charles_II_of_Naples .
  ?child dbo:spouse* dbr:Mary_of_Hungary_Queen_of_Naples .

  # Find the spouse of this child
  ?child dbo:spouse ?parentSpouse .

  # Find the spouse of that spouse (grandchild's in-law)
  ?parentSpouse dbo:spouse ?grandchildInLaw .

  # Ensure the grandchild's in-law is royalty
  ?grandchildInLaw a dbo:Monarch .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
715,54,val,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in the force, that is a military conflict, of Abd el-Krim and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander
WHERE {
  ?mayor dbo:officeHolder ?office .
  ?mayor dbo:politician true .
  ?mayor dbo:presidentOf dbr:1933_Spanish_general_election .
  
  ?conflict dbo:commander ?commander .
  ?abdElKrim dbo:commanderInConflict ?conflict .
  FILTER (str(?abdElKrim) = ""Abd_el-Krim"") .

  ?ministry dbo:leader ?commander .
  FILTER (str(?ministry) = ""Ministry_of_the_Air_(Spain)"") .

  ?office dbo:role dbr:Mayor .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
281,22,val,"Give me the commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander
WHERE {
  ?war dbo:militaryConflict true .
  
  # Roy Boehm as a commander in a war
  ?war dbo:commander ?person1 .
  ?person1 rdfs:label ""Roy Boehm""@en .

  # Lawrence Moore Cosgrave's award related to a military conflict
  ?award dbo:recipient ?person2 .
  ?person2 rdfs:label ""Lawrence Moore Cosgrave""@en .
  ?award dbo:militaryConflict true .

  # Ensure the same war is linked through both individuals
  FILTER (?war = ?war1)
}
```",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
47,54,val,"Give me the office of Ajoy Mukherjee and office of the administration of Jagdeep Dhankhar and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeAjoyMukherjee ?officeJagdeepDhankhar ?officeAwardeeMantuGhosh
WHERE {
  # Office of Ajoy Mukherjee
  OPTIONAL { 
    dbr:Ajoy_Mukherjee dbo:office ?officeAjoyMukherjee .
  }
  
  # Office of the administration of Jagdeep Dhankhar
  OPTIONAL {
    dbr:Jagdeep_Dhankhar dbo:positionHeld ?position .
    ?position dbo:administrativeArea ?administration .
    ?administration dbo:headquarters ?officeJagdeepDhankhar .
  }
  
  # Office of the awardee of an award received by Mantu Ghosh
  OPTIONAL {
    dbr:Mantu_Ghosh dbo:awardReceived ?award .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:office ?officeAwardeeMantuGhosh .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
456,43,val,"Give me the band of Alan Doyle and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and spouse of Danielle Spencer (Australian actress).","SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?alterEgo ?spouse
WHERE {
  # Alan Doyle's band
  dbr:Alan_Doyle dbo:memberOf ?band .

  # Lamont Cranston's alter ego
  dbr:Lamont_Cranston dbo:fictionalAlterEgo ?alterEgo .
  
  # Danielle Spencer's spouse
  dbr:Danielle_Spencer dbo:spouse ?spouse .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
987,45,val,"Give me the birth place of Moamer Kasumović and birth place of Dado Polumenta and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v0 <http://dbpedia.org/property/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?kadhafiBirthplace ?prsoBirthplace ?country
WHERE {
  # Birthplace of Moamer Kadhafi
  dbr:Moamer_Kadhafi dbo:birthPlace ?kadhafiBirthplace .

  # Birthplace of Dado Pršo
  dbr:Dado_Pršo dbo:birthPlace ?prsoBirthplace .

  # Find a sports event in Canicosa de la Sierra
  ?event dbo:location dbr:Canicosa_de_la_Sierra ;
         rdf:type dbo:SportEvent .

  # Get the time zone of the location of the event
  ?canicosa dbo:timeZone ?timezone .

  # Find a region associated with this time zone
  ?region dbo:timeZone ?timezone .

  # Find a country in that region
  ?country rdf:type dbo:Country ;
           dbo:partOfRegion ?region .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
124,49,val,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commanderName ?militaryForce
WHERE {
  # Find the person born on June 24, 1850
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  
  # Identify their military force and commander role in societal events and military conflicts
  ?person dbo:commanderOf ?unit .
  ?unit rdfs:label ""A Field Battery, Royal Australian Artillery""@en .

  OPTIONAL {
    ?event dbo:type dbr:Military_conflict ;
           dbo:commander ?commander .
    ?commander rdfs:label ?commanderName .
    FILTER(CONTAINS(LCASE(?commanderName), ""commander""))
  }

  OPTIONAL {
    ?societalEvent dbo:type dbr:Societal_event ;
                   dbo:commander ?commander .
    ?commander rdfs:label ?commanderName .
    FILTER(CONTAINS(LCASE(?commanderName), ""commander""))
  }
  
  # Find the military force associated with this person
  ?person dbo:militaryForce ?militaryForce .
}
ORDER BY ?commanderName",5,9,6,3,2,3,3,71,0,0,9,0,0.0,0
965,47,val,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse
WHERE {
  # Princess Victoria of Hesse and by Rhine
  dbr:Princess_Victoria_of_Hesse_and_by_Rhine a dbo:Person ;
    dbo:spouse ?spouse .

  # Spouse's spouse (which is herself)
  ?spouse dbo:spouse ?spouseOfSpouse .

  # Child of Princess Victoria who is royalty
  ?child dbo:parent dbr:Princess_Victoria_of_Hesse_and_by_Rhine ;
         a dbo:RoyalFamilyMember .

  # Politician born on 1854-05-24
  ?politician a dbo:Politician ;
              dbo:birthDate ""1854-05-24""^^xsd:date ;
              dbo:child ?child .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
926,40,val,Give me the child of Ahmed III and father of the father of the spouse of Neşerek Kadın and successor of Mustafa III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child
WHERE {
  # Ahmed III's child
  ?ahmed3 dbo:child ?child .

  # Neşerek Kadın's spouse and their father's father
  ?neserekKadin dbo:spouse ?spouse .
  ?spouse dbo:father ?father1 .
  ?father1 dbo:father ?grandfather .

  # Successor of Mustafa III
  dbr:Mustafa_III dbo:successor ?successor .

  # Combine conditions
  FILTER (?child = ?grandfather && ?child = ?successor)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
495,15,val,Give me the father of Princess Charlotte of Württemberg and child of the father of the parent of Princess Catherine of Württemberg.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Princess_Charlotte_of_Württemberg> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX wd: <http://www.wikidata.org/entity/>

SELECT ?fatherOfCharlotte ?childOfGrandfather
WHERE {
  # Find the father of Princess Charlotte of Württemberg
  wd:Princess_Charlotte_of_Württemberg dbo:father ?fatherOfCharlotte .

  # Find the parent (mother) of Princess Catherine of Württemberg
  wd:Princess_Catherine_of_Württemberg dbo:parent ?motherOfCatherine .

  # Find the father of that mother
  ?motherOfCatherine dbo:father ?grandfatherOfCatherine .

  # Find a child of this grandfather
  ?grandfatherOfCatherine dbo:child ?childOfGrandfather .
}
```

Note: Replace `wd:Princess_Charlotte_of_Württemberg` and `wd:Princess_Catherine_of_Württemberg` with the actual DBpedia identifiers for these individuals.",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
773,55,val,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of the father of Charles the Fat and parent of the successor of Charles the Bald.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Louis the German's child who is royalty
  ?child dbo:spouse ?parent .
  ?child dbo:father dbr:Louis_the_German .
  ?child a dbo:Monarch .

  # Charles the Fat's father and his spouse
  ?charlesFatFather dbo:spouse ?parent .
  ?charlesFatFather dbo:son dbr:Charles_the_Fat .

  # Successor of Charles the Bald and their parent
  ?successor dbo:predecessor dbr:Charles_the_Bald .
  ?successor dbo:parent ?parent .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
459,20,val,"Give me the governor of Oklahoma and governor of the administration, that is a politician, of Brad Henry and person born as John Kevin Stitt.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . ?v3 <http://dbpedia.org/property/governor> ?result . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?governorOfOklahoma ?currentGovernor WHERE {
  # Brad Henry's governorship
  dbr:Brad_Henry dbo:governmentRole dbr:Governor_of_Oklahoma .
  
  # Current Governor of Oklahoma during Brad Henry's administration
  OPTIONAL { 
    ?currentGovernor dbo:governmentRole dbr:Governor_of_Oklahoma ;
                     dbo:termStart ?start ;
                     dbo:termEnd ?end .
    FILTER (?start <= ?henryTermEnd && ?end >= ?henryTermStart)
  }
  
  # Brad Henry's term start and end dates
  OPTIONAL { 
    dbr:Brad_Henry dbo:termStart ?henryTermStart ;
                   dbo:termEnd ?henryTermEnd .
  }

  # John Kevin Stitt's birth name and current governorship
  dbr:John_Kevin_Stitt dbp:birthdayYear ?birthYear ;
                       rdfs:label ""John Kevin Stitt""@en .
  
  OPTIONAL {
    ?currentGovernor rdfs:label ""John Kevin Stitt""@en .
  }
  
  # Ensure both are politicians
  FILTER EXISTS { dbr:Brad_Henry dbo:occupation dbp:Politician . }
  FILTER EXISTS { dbr:John_Kevin_Stitt dbo:occupation dbp:Politician . }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
791,41,val,"Give me the predecessor of the child of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura and father of Emperor Go-Toba.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Emperor Takakura's child
  dbr:Takakura_of_Japan dbo:child ?child .

  # Step 2: Find the spouse of this child and then their spouse (back to Takakura)
  ?child dbo:spouse ?spouse .
  
  # Step 3: Determine the predecessor of this child in terms of royalty
  ?predecessor dbo:successor ?child .
  
  # Step 4: Ensure this predecessor is also the father of Emperor Go-Toba
  ?predecessor dbo:child dbr:Go_Toba_Emperor .

  # Filter to ensure the predecessor is a royalty
  FILTER (EXISTS { ?predecessor rdf:type dbo:Monarch })
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
976,46,val,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v0 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leaderOffice ?mayorOffice
WHERE {
  # Kemal Kılıçdaroğlu's administration and its leader's office
  dbr:Kemal_Kılıçdaroğlu dbo:memberOfOrganization dbr:Administration_of_Kemal_Kılıçdaroğlu .
  OPTIONAL { 
    ?administration dbo:leader ?leader .
    ?leader dbo:office ?leaderOffice .
  }

  # Nation Alliance (Turkey) and its mayor's office
  dbr:Nation_Alliance_(Turkey) a dbo:PoliticalParty .
  OPTIONAL {
    ?nationAlliance dbo:mayor ?mayor .
    ?mayor dbo:office ?mayorOffice ;
           dbo:nationality dbr:Turkey .
  }
}
```",5,10,6,3,2,3,3,71,0,0,3,0,0.0,0
573,53,val,"Give me the person decedent at Quincy, Massachusetts and parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> ?v3 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person
WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolderOf ?office ;
          dbo:deceasedPlace dbr:Quincy,_Massachusetts ;
          dbo:parent ?authorParent .
  
  ?authorParent dbo:occupation dbp:Author .

  ?person dbo:associatedWith dbr:Exchequer_Standards .

  ?administration dbo:administrativeRegion ?region ;
                  dbo:deceasedAt ?person .

  ?charlieBaker dbo:realName ?realName .
  FILTER(?realName = ""Charlie Baker (Australian footballer)"")

}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
987,46,val,"Give me the birth place of the actor of All for Free and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorBirthPlace ?bandBirthPlace
WHERE {
  # Find the actor from ""All for Free""
  ?movie dbo:title ""All for Free""@en .
  ?movie dbo:starring ?actor .

  # Get the birthplace of this actor
  ?actor dbo:birthPlace ?actorBirthPlace .

  # Find Dado Pršo's band
  dbr:Dado_Pršo dbo:memberOf ?band .

  # Ensure the band is both an artist and a musical artist
  ?band rdf:type dbo:Band .
  ?band rdf:type dbo:MusicalArtist .

  # Get the birthplace of this band
  ?band dbo:birthPlace ?bandBirthPlace .
}
```",5,8,6,3,2,3,3,71,0,0,4,0,0.0,0
281,20,val,"Give me the awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave and commander in New Guinea campaign and awardee of Volunteer Decoration.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?role
WHERE {
  # Lawrence Moore Cosgrave's awards and roles
  dbr:Lawrence_Moore_Cosgrave dbo:award ?award .
  
  OPTIONAL { 
    ?award dbo:conflict ?militaryConflict .
    FILTER EXISTS { ?militaryConflict a dbo:MilitaryConflict }
  }

  OPTIONAL {
    ?cosgraveRole dbo:roleName ""Commander"" ;
                 dbo:place dbr:New_Guinea_Campaign .
    FILTER (?cosgraveRole = dbr:Lawrence_Moore_Cosgrave)
  }

  # Check if he is an awardee of the Volunteer Decoration
  OPTIONAL {
    dbr:Lawrence_Moore_Cosgrave dbo:award dbr:Volunteer_Decoration .
  }
}
```",4,5,5,2,3,2,3,28,0,2,1,0.0,0.0,0
465,43,val,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Renée of France and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse
WHERE {
  # Find Elizabeth's parent (father)
  ?elizabeth dbo:parent ?parent .
  ?elizabeth rdfs:label ""Elizabeth of Austria""@en .

  # Find successors of Renée of France and Ercole II d'Este
  ?renée dbp:succeededBy ?successor1 .
  ?ercole dbp:succeededBy ?successor2 .
  ?renée rdfs:label ""Renée of France""@en .
  ?ercole rdfs:label ""Ercole II d'Este, Duke of Ferrara""@en .

  # Ensure the successor is the same person
  FILTER (?successor1 = ?successor2)

  # Find a child of Elizabeth's parent who is royalty
  ?child dbo:parent ?parent .
  ?child dbo:title ?title .
  FILTER CONTAINS(LCASE(?title), ""king"" || ""queen"" || ""prince"" || ""princess"")

  # Get the spouse of this royal child
  ?child dbo:spouse ?spouse .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
83,16,val,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983) and party of the governor of Dilma Rousseff.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://dbpedia.org/property/leaderParty> ?result . <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?sandroBirthplace ?rulingPartySandro ?dilmaState ?rulingPartyDilma
WHERE {
  # Find Sandro's birthplace
  dbr:Sandro_(footballer,_born_October_1983) dbo:birthPlace ?sandroBirthplace .
  
  # Ensure the birthplace is a town in Brazil with a soccer club
  ?sandroBirthplace a dbo:Settlement ;
                   dbp:country dbr:Brazil ;
                   dbo:sportTeam ?soccerClub .
  
  # Find the ruling party in Sandro's birthplace
  ?sandroBirthplace dbo:government ?government .
  ?government dbo:rulingParty ?rulingPartySandro .

  # Find Dilma Rousseff's governorship state
  dbr:Dilma_Rousseff dbo:stateGovernorOf ?dilmaState .

  # Find the ruling party of the governor during her tenure
  ?dilmaState dbo:government ?governmentDilma .
  ?governmentDilma dbo:rulingParty ?rulingPartyDilma .
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
445,52,val,"Give me the death place of the awardee of Royal Astronomical Society and entity in United Kingdom and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?deathPlace ?ukEntity ?athleteResidenceCountry
WHERE {
  ?awardee dbo:awardReceived dbr:Royal_Astronomical_Society .
  ?awardee dbo:deathPlace ?deathPlace .
  
  ?ukEntity dbo:country dbr:United_Kingdom .
  ?awardee dbo:location ?ukEntity .

  ?athlete dbo:nationality dbr:Great_Britain .
  ?athlete dbp:residenceCountry ?athleteResidenceCountry .
  FILTER (isLiteral(?athleteResidenceCountry) && datatype(?athleteResidenceCountry) = xsd:string)

  OPTIONAL { ?awardee dbo:awardReceived ?athlete . }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
791,44,val,"Give me the predecessor of the child of Emperor Takakura and father of the child, that is a royalty, of Emperor Takakura and spouse of Taira no Tokuko.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor ?spouse
WHERE {
  # Find the child of Emperor Takakura
  ?child dbo:parent dbr:Emperor_Takakura .
  
  # The father of this child who is a royalty
  ?father dbo:child ?child .
  ?father rdf:type dbo:Monarch .

  # Predecessor of this father (royalty)
  ?predecessor dbo:successor ?father .

  # Spouse of Taira no Tokuko
  ?spouse dbp:spouse dbr:Taira_no_Tokuko .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
892,40,val,Give me the entity in Province of Reggio Emilia and landmark at elevation of 58 and entity in the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInReggioEmilia ?landmarkAtElevation58 ?professionOfEnricoCrolla
WHERE {
  # Entity in Province of Reggio Emilia
  ?entityInReggioEmilia dbo:locatedIn dbr:Province_of_Reggio_Emilia .
  
  # Landmark at elevation of 58
  ?landmarkAtElevation58 a dbo:Lighthouse ;
                        dbp:elevation ""58""^^xsd:float .

  # Entity in the profession of Enrico Crolla's true self
  dbr:Enrico_Crolla dbo:trueSelf ?trueSelf .
  ?trueSelf dbo:profession ?professionOfEnricoCrolla .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
826,46,val,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Louis I, Grand Duke of Hesse and his children
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:child ?royalChild .
  
  # Ensure the child is royalty
  ?royalChild a dbo:Monarch .

  # Anna Magdalena Appel's father
  dbr:Anna_Magdalena_Bach dbo:father ?appelsFather .

  # Children of Anna Magdalena Appel's father
  ?appelsFather dbo:child ?appelsChild .

  # Spouse of the child of Anna Magdalena Appel's father
  ?appelsChild dbo:spouse ?royalChild .

  # Successor of the royal child
  ?royalChild dbo:successor ?successor .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
433,45,val,Give me the associated musical artist of Bill Evans and associated musical artist of Paul Chambers and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artistBillEvans ?artistPaulChambers ?profession
WHERE {
  # Associated artists of Bill Evans
  ?billEvans dbo:associatedBand ?artistBillEvans .
  VALUES ?billEvans { <http://dbpedia.org/resource/Bill_Evans_(pianist)> }

  # Associated artists of Paul Chambers
  ?paulChambers dbo:associatedBand ?artistPaulChambers .
  VALUES ?paulChambers { <http://dbpedia.org/resource/Paul_Chambers> }

  # Writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  ?album dbp:writer ?writer .
  ?writer rdf:type ?profession .
  FILTER (str(?album) = ""Slowhand_at_70_-_Live_at_the_Royal_Albert_Hall"")

  OPTIONAL {
    ?artistBillEvans rdf:type ?billProfession .
    FILTER (?billProfession != ?profession)
  }

  OPTIONAL {
    ?artistPaulChambers rdf:type ?paulProfession .
    FILTER (?paulProfession != ?profession)
  }
}
ORDER BY ?artistBillEvans ?artistPaulChambers ?profession",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
826,50,val,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of the parent of Prince Friedrich of Hesse and by Rhine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
    # Step 1: Identify Louis I's reference (royalty)
    ?reference a dbo:Monarch ;
               dbo:spouseOrCivilPartner ?parentOfLouisI .
    
    # Ensure the reference is a royalty
    ?reference dbo:country dbr:Germany .

    # Step 2: Find the child of this reference who is also a royalty
    ?child dbo:parent ?reference ;
           a dbo:Monarch .

    # Step 3: Determine the successor of this royal child
    ?successor dbo:predecessor ?child .
    
    # Link to Prince Friedrich of Hesse and by Rhine
    dbr:Prince_Friedrich_of_Hesse_and_by_Rhine dbo:parent ?parentOfFriedrich .

    # Ensure predecessor of the parent is the reference identified in step 1
    ?parentOfLouisI dbo:predecessor ?reference .
    
    FILTER (?successor != ?child)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
865,51,val,"Give me the father of the child of the father of Abul Maal Abdul Muhith and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commonFather
WHERE {
  # Abul Maal Abdul Muhith's father and his child's father
  ?abulMaal a dbo:Person ;
            foaf:name ""Abul Maal Abdul Muhith"" .
  ?abulMaalFather dbo:child ?abulMaal .
  ?abulMaalGrandfather dbo:child ?abulMaalFather .

  # Abu Ahmad Abdul Hafiz's child who is a politician and his father
  ?abuAhmad a dbo:Person ;
            foaf:name ""Abu Ahmad Abdul Hafiz"" .
  ?politicianChild dbo:parent ?abuAhmad ;
                   a dbo:Politician .
  ?politicianFather dbo:child ?politicianChild .

  # Find the common father
  FILTER (?abulMaalGrandfather = ?politicianFather)
  BIND(?abulMaalGrandfather AS ?commonFather)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
417,44,val,"Give me the child of the father of Frederick IX of Denmark and spouse of Princess Caroline-Mathilde of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonChild
WHERE {
  # Frederick IX's father
  ?father dbo:spouse ?mother .
  ?father dbp:child ?frederickIX .

  # Princess Caroline-Mathilde's spouse
  ?princessCarolineMathilde dbp:spouse ?husband .
  
  # Common child of the above two entities
  ?commonChild dbo:parent ?father ;
              dbo:parent ?husband .

  # Frederick Francis III, Grand Duke of Mecklenburg-Schwerin's descendant
  ?frederickFrancisIII dbp:child ?descendant .
  ?descendant dbo:parent* ?commonChild .

  # Ensure the common child is royalty
  ?commonChild a dbo:Monarch ;
               dbo:country dbr:Denmark ; # Assuming we are looking for Danish royalty

  # Bind Frederick IX and Princess Caroline-Mathilde to their respective DBpedia resources
  VALUES (?frederickIX) { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> }
  VALUES (?princessCarolineMathilde) { <http://dbpedia.org/resource/Princess_Caroline_Matilda_of_Denmark> }
  VALUES (?frederickFrancisIII) { <http://dbpedia.org/resource/Frederick_Franz_III,_Grand_Duke_of_Mecklenburg-Schwerin> }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
365,15,val,"Give me the spouse of Olha Petliura and person born as the birth name of the commander, that is an office holder, in Ukrainian–Soviet War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Olha_Petliura> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?person
WHERE {
  # Find Olha Petliura's spouse
  dbr:Olha_Petliura dbo:spouse ?spouse .

  # Find a person who is a commander, an office holder during the Ukrainian–Soviet War, and has a specific birth name
  ?person dbo:birthName ?birthName ;
          dbo:occupation dbr:Commander ;
          dbo:officeHolderOf dbr:Ukrainian_Soviet_War .
  
  # Filter for a specific birth name if known (replace 'Specific_Birth_Name' with the actual name)
  FILTER(?birthName = ""Specific_Birth_Name"")
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
933,45,val,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of Mike Elliott (saxophonist) and reference to Alan Warner.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandName
WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1947-04-21""^^xsd:date ;
          dbo:member ?band .
  
  ?band a dbo:Band, dbo:Organization, dbo:Group ;
        rdfs:label ?bandName .

  ?band dbo:member dbr:Mike_Elliott_(saxophonist) .
  
  OPTIONAL {
    ?person dbp:reference dbr:Alan_Warner .
  }
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
465,47,val,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Alfonso I d'Este and his child
  dbr:Alfonso_I_d%27Este dbo:child ?child .

  # Spouse of the child who is royalty
  ?child dbo:spouse ?spouse .
  ?spouse a dbo:Monarch .  # Assuming 'Monarch' represents royalty

  # Parent of Elizabeth of Austria
  dbr:Elizabeth_of_Austria_(1526–1545) dbo:parent ?parent .

  # Successor of the spouse
  ?spouse dbo:successor ?successor .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
965,40,val,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouseOfSpouse ?commonParent
WHERE {
  # Louise Mountbatten's parent
  ?parentLouise a dbo:Person ;
                dbo:child ?louiseMountbatten .

  # George Mountbatten's parent
  ?parentGeorge a dbo:Person ;
                dbo:child ?georgeMountbatten .

  # Spouse of the spouse of Louise Mountbatten's parent
  ?spouse1 foaf:mbox ?parentLouise .
  ?spouse2 foaf:mbox ?spouse1 .
  ?spouseOfSpouse foaf:mbox ?spouse2 .

  # Common parent condition
  FILTER (?parentLouise = ?parentGeorge)

  # Bind entities to variables for clarity
  VALUES ?louiseMountbatten { <http://dbpedia.org/resource/Louise_Mountbatten> }
  VALUES ?georgeMountbatten { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> }
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
216,44,val,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in Igor Bišćan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team
WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:sportManagerOf ?team1 ;
          dbo:managerOf ?team2 ;
          dbo:birthDate ?birthdate ;
          dbo:playerInTeam ?under18Team ;
          dbo:playedForTeam ?bišćanTeam .

  ?under18Team rdfs:label ""Bosnia and Herzegovina national under-18 football team""@en .
  ?bišćanTeam rdfs:label ""Igor Bišćan""@en .

  FILTER (YEAR(?birthdate) = 1983 && MONTH(?birthdate) = 12 && DAY(?birthdate) = 20)
  
  OPTIONAL { ?person dbo:sportManagerOf ?team1 }
  OPTIONAL { ?person dbo:managerOf ?team2 }

  FILTER EXISTS {
    ?under18Team dbo:player ?person .
    ?bišćanTeam dbo:player ?person .
  }
}
```",5,11,6,2,3,3,3,71,0,0,1,0,0.0,0
965,46,val,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the child, that is a royalty, of Prince Louis of Battenberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?finalSpouse
WHERE {
  # Step 1: Find Louise Mountbatten's parent
  ?parent a dbo:Parent ;
          dbo:child ?louise .
  
  # Louise Mountbatten entity
  ?louise foaf:name ""Louise Mountbatten""@en .

  # Step 2: Find the spouse of Louise's parent
  ?spouse1 dbo:spouse ?parent .

  # Step 3: Find the spouse of this second person (the spouse of the spouse)
  ?finalSpouse dbo:spouse ?spouse1 .

  # Step 4: Ensure this final spouse is a parent of a child who is royalty
  ?child dbo:parent ?finalSpouse ;
         rdf:type dbo:RoyalFamilyMember .
  
  # Additional condition to relate to Prince Louis of Battenberg
  ?relatedChild dbo:parent ?finalSpouse ;
                dbo:child ?princeLouis .
  ?princeLouis foaf:name ""Prince Louis of Battenberg""@en .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
465,55,val,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of the child, that is a royalty, of Anne of Brittany.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v3 <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?successorOfChildA
WHERE {
  # Alfonso I d'Este's child
  ?childA dbo:parent dbr:Alfonso_I_d%27Este ;
          a dbo:RoyalFamilyMember .

  # Spouse of Ferdinand I's royal child
  ?childB dbo:parent dbr:Ferdinand_I,_Holy_Roman_Emperor ;
          a dbo:RoyalFamilyMember .
  ?spouseB dbo:spouse ?childB .

  # Successor of Anne of Brittany's royal child
  ?childC dbo:parent dbr:Anne_of_Brittany ;
          a dbo:RoyalFamilyMember .
  ?successorC dbo:predecessor ?childC .

  # The successor of ChildA is the spouse of ChildB and also the successor of ChildC
  ?successorOfChildA dbo:spouse ?childB ;
                     dbo:predecessor ?childA ;
                     dbo:predecessor ?childC .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
41,19,val,"Give me the party of Enda Kenny and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election and party of Declan Costello.",SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyEndaKenny ?partyLeader2005Castlereagh ?partyDeclanCostello
WHERE {
  # Enda Kenny's party
  wd:Q123456 dbo:party ?partyEndaKenny .

  # Leader of the 2005 Castlereagh Borough Council election
  ?leader a dbo:Politician ;
          dbo:officeHolder ?office .
  FILTER EXISTS { ?office dbp:electionYear ""2005"" . }
  ?leader dbo:party ?partyLeader2005Castlereagh .

  # Declan Costello's party
  wd:Q654321 dbo:party ?partyDeclanCostello .
}
```

**Explanation:**
- `wd:Q123456` and `wd:Q654321` are placeholders for the DBpedia identifiers of Enda Kenny and Declan Costello, respectively. You would need to replace these with their actual DBpedia resource URIs.
- The query selects distinct political parties associated with each individual.
- For the leader of the 2005 Castlereagh Borough Council election, we assume there is a property `dbo:officeHolder` that links politicians to offices they hold and a property `dbp:electionYear` to filter by year.",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
41,20,val,Give me the party of Mark Durkan and party of the person born as David Declan Costello and party of Enda Kenny.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?partyName
WHERE {
  VALUES ?person ?personLabel {
    (dbr:Mark_Durkan ""Mark Durkan"")
    (dbr:Martin_McGuinness ""David Declan Costello""^^xsd:string)
    (dbr:Enda_Kenny ""Enda Kenny"")
  }
  
  OPTIONAL { ?person dbo:party ?party . }
  OPTIONAL { ?party rdfs:label ?partyName . FILTER(lang(?partyName) = 'en') }
}
ORDER BY ?person
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
329,19,val,Give me the birthplace of the author of The Tailor and Ansty and entity in United Kingdom and entity in Northern Ireland.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?author dbo:title ""The Tailor and Ansty""@en .
  ?author dbo:birthPlace ?birthPlace .

  FILTER (
    EXISTS { ?birthPlace dbo:country dbr:United_Kingdom . }
    || EXISTS { ?birthPlace dbo:country dbr:Northern_Ireland . }
  )
}
```

### Explanation:

- **PREFIX:** Define prefixes for common namespaces to simplify the query.
- **SELECT ?birthPlace:** We want to retrieve the birthplace of the author.
- **WHERE Clause:**
  - `?author dbo:title ""The Tailor and Ansty""@en`: Find the resource representing the author of the book.
  - `?author dbo:birthPlace ?birthPlace`: Get the birthplace of this author.
- **FILTER Clause:** Ensure that the birthplace is in either the United Kingdom or Northern Ireland.",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
216,55,val,"Give me the player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthDate ?teamCroatia ?teamBosnia
WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:sportManagerOf ?teamCroatia ;
          dbo:managerOf ?teamBosnia ;
          dbp:birthday ?birthDate .

  FILTER (YEAR(?birthDate) = 1983 && MONTH(?birthDate) = 12 && DAY(?birthDate) = 20)

  ?teamCroatia rdfs:label ""Croatia national under-21 football team""@en .
  ?teamBosnia rdfs:label ""Bosnia and Herzegovina national under-18 football team""@en .

  OPTIONAL { ?person dbo:soccerManagerOf ?teamCroatia . }
  OPTIONAL { ?person dbo:sportManagerOf ?teamBosnia . }
}
```",6,12,7,2,3,3,3,71,0,0,1,0,0.0,0
456,47,val,"Give me the spouse of the actor of Pacific Drive and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find the actor of ""Pacific Drive""
  ?actor dbo:starringIn dbr:Pacific_Drive .
  
  # Ensure this actor is associated with Lamont Cranston's alter ego, The Shadow
  ?actor dbo:alterEgo dbr:The_Shadow .

  # Get the spouse of this actor
  ?actor dbo:spouse ?spouse .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
773,47,val,"Give me the spouse of the father of Charles the Fat and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse ?parent
WHERE {
  # Charles the Fat's father
  ?charlesFat dbo:father ?fatherOfCharles.
  
  # Father of Charles the Fat's spouse
  ?fatherOfCharles dbo:spouse ?spouse.

  # Louis the Pious' child and successor
  ?louisPious dbp:child ?childOfLouis.
  ?successor dbp:succeededBy ?childOfLouis.
  
  # Parent of the successor who is royalty
  ?parent dbo:child ?successor.
  FILTER EXISTS { ?parent a dbo:Monarch } # Assuming Monarch indicates royalty

  # Bind Charles the Fat and Louis the Pious to their respective DBpedia resources
  VALUES (?charlesFat) { <http://dbpedia.org/resource/Charles_the_Fat> }
  VALUES (?louisPious) { <http://dbpedia.org/resource/Louis_the_Pious> }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
865,50,val,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?fatherOfPoliticianChild ?fatherOfAbuAhmadChild
WHERE {
  # Find the spouse of Syeda Shahar Banu
  ?spouse a dbo:Spouse ;
          dbo:spouse ?syedaShaharBanu .
  
  FILTER(?syedaShaharBanu = dbpedia:Syeda_Shahar_Banu) .

  # Find children of this spouse who are politicians
  ?child dbo:parent ?spouse ;
         a dbo:Politician .

  # Find the father of these politician children
  ?fatherOfPoliticianChild dbo:child ?child .
  
  # Find the child of Abu Ahmad Abdul Hafiz
  ?abuAhmadChild dbo:child dbpedia:Abu_Ahmad_Abdul_Hafiz ;
                 a dbo:Person .

  # Find the father of this child
  ?fatherOfAbuAhmadChild dbo:child ?abuAhmadChild .
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
124,55,val,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 ?militaryForce3
WHERE {
  # Frank Rhodes' war
  ?war1 a dbo:MilitaryConflict ;
        dbo:participatedInMilitaryUnit dbr:Frank_Rhodes ;
        rdf:type dbo:SocietalEvent .
  
  # A Field Battery, Royal Australian Artillery's commander's war
  ?war2 a dbo:MilitaryConflict ;
        dbo:commandedBy dbr:A_Field_Battery,_Royal_Australian_Artillery ;
        rdf:type dbo:SocietalEvent .

  # Herbert Kitchener's military force
  ?militaryForce3 dbo:commander dbr:Herbert_Kitchener_1st_Earl_Kitchener ;
                  rdf:type dbo:MilitaryConflict, dbo:SocietalEvent .
  
  # Military forces involved in the wars
  ?war1 dbo:militaryForce ?militaryForce1 .
  ?war2 dbo:militaryForce ?militaryForce2 .

  FILTER(?militaryForce1 != ?militaryForce2)
}
```",6,13,7,2,3,3,3,71,0,0,9,0,0.0,0
274,21,val,"Give me the professional in  and associated musical artist of the actor, that is a musical artist, of Imagine the Sound and band member of Dizzy Gillespie.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor ?musicalArtist
WHERE {
  ?actor a dbo:Actor ;
         dbo:profession ""Imagine the Sound"" .
  
  ?actor dbo:bandMemberOf ?dizzyGillespieBand .

  ?dizzyGillespieBand dbp:member ?actor ;
                      dbp:member ?musicalArtist .

  ?musicalArtist a dbo:MusicalArtist .
}
```",4,5,5,2,3,2,3,28,0,0,3,0,0.0,0
442,7,val,"Give me the resting place of the work of Roosevelt, Theodore and resting place of Fay Bainter.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> ""Roosevelt, Theodore""@en . <http://dbpedia.org/resource/Fay_Bainter> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?burialPlace
WHERE {
  VALUES ?person { 
    dbr:Theodore_Roosevelt 
    dbr:Fay_Bainter 
  }
  
  OPTIONAL {
    ?person dbo:placeOfBurial ?burialPlace .
  }
}
```",3,3,4,2,2,2,2,9,0,2,1,0.0,0.0,0
445,42,val,"Give me the death place of Patrick Moore and entity in the award of George H. Cameron and entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?deathPlace ?award ?countryResidence
WHERE {
  # Patrick Moore's death place
  dbpedia:Patrick_Moore dbo:deathPlace ?deathPlace .

  # George H. Cameron's award entity
  dbpedia:George_H._Cameron dbo:honoraryAward ?award .

  # Anna Sharkey's country of residence
  dbpedia:Anna_Sharkey dbo:residence ?residence .
  ?residence a dbo:Country ; rdfs:label ?countryResidence .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
965,48,val,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse
WHERE {
  # Louise Mountbatten and her parent
  dbr:Louise_Mountbatten dbo:parent ?parent.

  # Spouse of the parent
  ?parent dbo:spouse ?spouseOfParent.

  # Spouse of the spouse (second level)
  ?spouseOfParent dbo:spouse ?spouseOfSpouse.

  # The person born as a noble, specifically Prince George of Battenberg
  ?child dbr:Prince_George_of_Battenberg.
  
  # Ensure this child is related to the spouse of the spouse
  ?spouseOfSpouse dbo:parent ?child.

  # Filter for nobility status (assuming there's a property indicating nobility)
  ?child dbo:nobleTitle ?title .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
443,19,val,Give me the birthplace of Ulf Lundell and landmark at elevation of the award of William Shepherd and birthplace of Carl Larsson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ulfLundellBirthplace ?williamShepherdAwardElevation ?carlLarssonBirthplace
WHERE {
  # Ulf Lundell's birthplace
  dbr:Ulf_Lundell dbo:birthPlace ?ulfLundellBirthplace .

  # William Shepherd's award elevation (assuming it refers to a geographical feature)
  OPTIONAL {
    dbr:William_Shepherd dbo:award ?williamShepherdAward .
    ?williamShepherdAward dbo:elevation ?williamShepherdAwardElevation .
  }

  # Carl Larsson's birthplace
  dbr:Carl_Larsson dbo:birthPlace ?carlLarssonBirthplace .
}
```

This query retrieves:
- The birthplace of Ulf Lundell.
- The elevation associated with an award related to William Shepherd (assuming such a relationship exists).
- The birthplace of Carl Larsson.

Note: If the ""award"" for William Shepherd is not directly linked to an elevation, you may need additional context or assumptions about what specific award and its properties are being referred to.",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
236,16,val,"Give me the party member of the administration of James Madison and party member of the administration, that is an organisation, of John Adams.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . ?result <http://dbpedia.org/ontology/party> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?madisonParty ?adamsParty
WHERE {
  # James Madison's administration party member
  OPTIONAL {
    dbr:James_Madison dbo:presidentOf dbr:United_States.
    dbr:United_States dbo:headOfGovernment dbr:James_Madison.
    dbr:James_Madison dbo:memberOf ?madisonParty.
    FILTER (isLiteral(?madisonParty) && datatype(?madisonParty) = xsd:string)
  }
  
  # John Adams' administration party member
  OPTIONAL {
    dbr:John_Adams dbo:presidentOf dbr:United_States.
    dbr:United_States dbo:headOfGovernment dbr:John_Adams.
    dbr:John_Adams dbo:memberOf ?adamsParty.
    FILTER (isLiteral(?adamsParty) && datatype(?adamsParty) = xsd:string)
  }
}
```",4,5,5,2,2,3,2,20,0,0,19,0,0.0,0
826,55,val,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor ?successor ?spouse
WHERE {
  # Find the parent of Prince Friedrich of Hesse and by Rhine
  ?friedrich a dbo:Person ;
             dbo:parent ?parentFriedrich .
  
  FILTER (str(?friedrich) = ""Prince_Friedrich_of_Hesse_and_by_Rhine"") .

  # Find predecessor of this parent
  ?predecessor dbo:succeededBy ?parentFriedrich .

  # Find children of Louis I who are royalty and their successor
  ?louis a dbo:Person ;
         rdfs:label ""Louis_I,_Grand_Duke_of_Hesse""@en .
  
  ?child dbr:Louis_I,_Grand_Duke_of_Hesse dbo:child ?childOfLouis ;
        a dbo:RoyalFamilyMember .

  ?successor dbo:succeededBy ?child .

  # Find children of Johann Heinrich Appel and their spouse
  ?appel a dbo:Person ;
         rdfs:label ""Johann_Heinrich_Appel""@en .
  
  ?childOfAppel dbr:Johann_Heinrich_Appel dbo:child ?childOfAppel .

  ?spouse dbo:spouse ?childOfAppel .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
892,45,val,"Give me the landmark at elevation of 58 and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in Italy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/province> ?v0 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?landmark ?party WHERE {
  ?landmark a dbo:Landmark ;
            dbo:elevationAboveSeaLevel ?elevation ;
            dbo:country dbr:Italy ;
            dbo:administrativeRegion ?region .
  
  ?region a dbo:AdministrativeRegion, dbo:Settlement, dbo:Region .

  ?party a dbo:PoliticalParty, dbo:Organization ;
         dbo:member dbr:Andrea_Cozzolino ;
         dbo:country dbr:Italy .

  OPTIONAL { ?landmark dbp:relatedTo ?party }

  FILTER (?elevation = 58)
}
```",5,11,6,3,3,3,3,71,0,0,2,0,0.0,0
955,17,val,"Give me the band of the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs and band of Nate Albert.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nate_Albert> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember (GROUP_CONCAT(DISTINCT ?band; separator="", "") AS ?bands)
WHERE {
  # Find bands associated with Street Dogs
  ?streetDogBand a dbo:MusicalGroup ;
                 dbo:member ?member1 .
  
  # Ensure the member is both a musical artist and an artist
  ?member1 a dbo:MusicalArtist, dbo:Artist .

  # Find bands associated with Nate Albert
  ?nateAlbertBand a dbo:MusicalGroup ;
                  dbo:member ?member2 .
  
  # Ensure the same person is in both bands
  FILTER (?member1 = ?member2)
  BIND(?member1 AS ?bandMember)

  # Collect all bands for this member
  OPTIONAL { ?streetDogBand rdfs:label ?bandLabelStreet }
  OPTIONAL { ?nateAlbertBand rdfs:label ?bandLabelNate }

  # Ensure the band is a group or organization
  FILTER (?streetDogBand = dbr:Street_Dogs || ?nateAlbertBand = dbr:Nate_Albert)
}
GROUP BY ?bandMember
HAVING (COUNT(DISTINCT ?bands) > 1)",4,9,5,3,2,3,2,20,0,0,1,0,0.0,0
965,44,val,"Give me the spouse of Prince Louis of Battenberg and parent of the child, that is a royalty, of Prince Louis of Battenberg and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?royalChild ?nobleParent
WHERE {
  # Prince Louis of Battenberg's spouse
  dbr:Prince_Louis_of_Battenberg dbo:spouse ?spouse .

  # Child who is royalty
  ?child dbo:parent dbr:Prince_Louis_of_Battenberg .
  ?child a dbo:Monarch .  # Assuming 'Monarch' represents royalty

  # Parent of Prince George of Battenberg, who was born as a noble
  dbr:Prince_George_of_Battenberg dbo:birthName ""Prince George of Battenberg"" ;
                                  dbo:parent ?nobleParent .
  ?nobleParent a dbo:Noble .  # Assuming 'Noble' represents nobility

  # Linking the spouse to the royal child
  ?spouse dbo:child ?royalChild .

  FILTER (?royalChild = ?child)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
865,40,val,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of Shahla Khatun and father of AK Abdul Momen.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry
WHERE {
  ?person dbo:deathPlace dbr:Patna .
  ?person dbo:child dbr:Shahla_Khatun .
  ?person dbo:child dbr:AK_Abdul_Momen .
  
  OPTIONAL { 
    ?residence dbo:nativeCountry ?nativeCountry .
    ?person dbo:residence ?residence .
  }
}
```

This query does the following:
- Identifies a person who died in Patna and is the father of Shahla Khatun and AK Abdul Momen.
- Optionally retrieves the native country of this person's residence.",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
892,51,val,"Give me the landmark at elevation of the award of Anna Ishii and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?landmark ?entityInAdministration
WHERE {
  # Anna Ishii's award and its elevation
  ?award dbo:recipient dbr:Anna_Ishii .
  ?award dbo:elevation ?elevation .

  # Landmark at the same elevation as the award
  ?landmark dbo:elevation ?elevation .

  # Entity in administration related to Andrea Cozzolino
  ?party a dbo:PoliticalParty ;
         dbo:member dbr:Andrea_Cozzolino .
  
  ?entityInAdministration dbo:country dbr:Italy ;
                          rdf:type dbo:Region , dbo:Settlement , dbo:AdministrativeRegion .

  # Ensure the entity is part of the party's administration
  ?party dbo:administration ?entityInAdministration .
}
```",5,11,6,3,2,3,3,71,0,0,2,0,0.0,0
582,45,val,"Give me the player in Kazuaki Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to Japan.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player ?teamNickname WHERE {
  # Kazuaki Nagasawa as a player
  dbr:Kazuaki_Nagasawa dbo:nationality dbr:Japan ;
                       a dbo:FootballPlayer .

  # Hajime Moriyasu's team and its nickname
  OPTIONAL {
    ?coach dbp:currentTeam ?team .
    ?team dbo:nickname ?teamNickname ;
          dbo:country dbr:Japan ;
          a dbo:SportsOrganization .
  }

  # Ensure the coach is Hajime Moriyasu
  FILTER(?coach = dbr:Hajime_Moriyasu)

  # Link player to team through nationality or other relevant properties
  OPTIONAL {
    ?player dbp:nationality dbr:Japan ;
            dbo:playsFor ?team .
  }

  # Ensure the player is Kazuaki Nagasawa
  FILTER(?player = dbr:Kazuaki_Nagasawa)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
417,49,val,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse
WHERE {
  # Find Count Ingolf of Rosenborg and his parent who is royalty
  ?countIngolf dbo:parent ?parentIngolf .
  FILTER (EXISTS { ?parentIngolf dbo:royalty true }).

  # Get the spouse of this parent
  ?parentIngolf dbp:spouse ?spouse .

  # Find Alexandrine of Mecklenburg-Schwerin and her parent who is royalty
  ?alexandrine dbo:parent ?parentAlexandrine .
  FILTER (EXISTS { ?parentAlexandrine dbo:royalty true }).

  # Get the child of this parent, who must also be royalty
  ?child1 dbp:childOf ?parentAlexandrine .
  FILTER (EXISTS { ?child1 dbo:royalty true }).

  # Find the grandchild of Alexandrine's royal parent
  ?grandChild dbp:childOf ?child1 .

}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
987,51,val,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the actor of All for Free.",SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://dbpedia.org/property/timeZone> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country
WHERE {
  ?region dbo:timeZone ?timezone .
  ?timezone dbo:sportEvent ?event .
  ?event dbo:location dbr:Canicosa_de_la_Sierra .
  
  ?country dbo:locatedIn ?region .
  
  ?actor dbo:birthPlace ?country ;
         dbo:film dbr:All_for_Free .
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
124,47,val,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?militaryForce
WHERE {
  ?war a dbo:MilitaryConflict ;
       a dbo:Event ;
       a dbo:SocietalEvent .

  ?person dbo:awardReceived dbr:British_South_Africa_Company_Medal .
  ?person dbo:militaryCommanderOf ?war .
  
  ?unit dbo:participatedIn ?war .
  FILTER (str(?unit) = ""A Field Battery, Royal Australian Artillery"") .

  OPTIONAL {
    ?war dbo:militaryForce ?militaryForce .
  }
}
```",5,10,6,3,2,3,3,71,0,0,10,0,0.0,0
865,48,val,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry
WHERE {
  # Abu Ahmad Abdul Hafiz has a child
  ?child dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz .
  
  # The father of this child is the person we are interested in
  ?father dbo:spouse ?mother . 
  ?mother dbo:child ?child .

  # This father died in Patna
  ?deathEvent dbo:place dbr:Patna ;
              dbo:agent ?father .
  
  # Find the native country of this father
  ?father dbo:nativeCountry ?nativeCountry .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
465,42,val,"Give me the spouse of Archduchess Barbara of Austria and successor of the child, that is a royalty, of Anne of Brittany and successor of the child of Alfonso I d'Este.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse ?successor
WHERE {
  # Spouse of Archduchess Barbara of Austria
  ?barbara a dbo:Archduchess ;
           foaf:name ""Barbara of Austria"" .
  
  ?barbara dbo:spouse ?spouse .

  # Child of Anne of Brittany who is royalty and their successor
  ?anne a dbo:Monarch ;
        foaf:name ""Anne of Brittany"" .
  
  ?child1 dbo:parent ?anne ;
          rdf:type dbo:RoyalFamilyMember ;
          dbo:successor ?successor1 .

  # Child of Alfonso I d'Este and their successor
  ?alfonso a dbo:Duke ;
           foaf:name ""Alfonso I d'Este"" .
  
  ?child2 dbo:parent ?alfonso ;
          rdf:type dbo:RoyalFamilyMember ;
          dbo:successor ?successor2 .

  # Find common successor
  FILTER (?successor1 = ?successor2)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
715,55,val,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?commanderInForce
WHERE {
  # Abd el-Krim's commander in force of a military conflict
  ?conflict dbp:commanderIn ?abdCommander .
  ?abdCommander foaf:name ""Abd el-Krim"" .

  # Francisco Largo Caballero's commander in force of the same or another military conflict
  ?conflict2 dbp:commanderIn ?franciscoCommander .
  ?franciscoCommander foaf:name ""Francisco Largo Caballero"" .

  # The common commander in force for both Abd el-Krim and Francisco Largo Caballero
  ?abdCommander = ?franciscoCommander ;
                 foaf:name ?commanderInForce .

  # Carlos Franco Iribarnegaray's leader of an office (government agency or organization)
  ?office dbo:leader ?carlosLeader .
  ?carlosLeader foaf:name ""Carlos Franco Iribarnegaray"" .

  # The commander in force is also the leader of the office associated with Carlos Franco Iribarnegaray
  ?abdCommander = ?carlosLeader .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
976,52,val,"Give me the office of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v4 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v4 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?naciOffice ?mayorOffice ?leaderOffice
WHERE {
  # Naci Bostancı's office
  dbr:Naci_Bostancı dbo:office ?naciOffice .

  # Mayor who is a politician, an office holder, Turkish, and part of the Nation Alliance (Turkey)
  ?mayor a dbo:Mayor ;
         dbo:nationality dbr:Turkey ;
         dbo:partyAffiliation dbr:Nation_Alliance_(Turkey) .
  ?mayor dbo:office ?mayorOffice .

  # Kemal Kılıçdaroğlu's administration as an organization
  dbr:Kemal_Kılıçdaroğlu dbo:leaderOfOrganization ?administration ;
                         dbo:positionHeld ?adminPosition .
  ?administration a dbo:Organisation .

  # The leader of this administration
  ?leader a dbo:Politician ;
          dbo:office ?leaderOffice .
  ?administration dbo:leader ?leader .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
445,40,val,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in United Kingdom and death place of Patrick Moore.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInResidence
WHERE {
  # Athlete from Great Britain and their residence
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:residence ?residence .
  
  # Residence is in a country that is part of the United Kingdom
  ?residence dbo:country ?entityInResidence .
  FILTER (?entityInResidence IN (dbr:England, dbr:Scotland, dbr:Wales, dbr:Northern_Ireland))

  # Death place of Patrick Moore
  dbr:Patrick_Moore dbo:deathPlace ?deathPlace .

  # The entity in residence must match the death place of Patrick Moore
  FILTER (?entityInResidence = ?deathPlace)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
839,50,val,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v4 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandCharlieHuhn ?bandPeterSchorowsky
WHERE {
  # Find bands associated with Charlie Huhn who is a musical artist
  ?charlieHuhn dbo:associatedBand ?bandCharlieHuhn .
  ?charlieHuhn rdf:type dbo:MusicalArtist .

  # Find bands associated with Peter Schorowsky who is a member of a band and group
  ?peterSchorowsky dbo:memberOf ?bandPeterSchorowsky .
  ?bandPeterSchorowsky rdf:type dbo:Band .
  ?bandPeterSchorowsky rdf:type dbo:Group .

  # Bind the individuals to their respective names
  FILTER(STR(?charlieHuhn) = ""Charlie_Huhn"")
  FILTER(STR(?peterSchorowsky) = ""Peter_Schorowsky"")
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
507,46,val,"Give me the spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v4 <http://dbpedia.org/ontology/director> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse
WHERE {
  # Find Anne V. Coates and her birth name
  dbr:Anne_V._Coates a dbo:Person ;
                     foaf:name ""Anne V. Coates""@en ;
                     dbo:birthName ?birthName .

  # Find movies directed by Anne V. Coates featuring Beryl Reid
  ?movie dbo:director dbr:Anne_V._Coates ;
         dbo:starring dbr:Beryl_Reid ;
         a dbo:Film .

  # Get the spouse of Anne V. Coates
  dbr:Anne_V._Coates dbo:spouse ?spouse .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
216,43,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in Igor Bišćan and team of Ognjen Vukojević.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v4 . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?playerInCoach
WHERE {
  ?playerInCoach a dbo:SoccerPlayer ;
                 a dbo:SportsManager ;
                 a dbo:SoccerManager .

  ?playerInCoach dbo:coachOf ?organisation .
  
  ?organisation a dbo:Organization ;
                a dbo:SportsClub ;
                a dbo:SoccerClub .

  ?džemalBerberović a dbo:SoccerPlayer ;
                    dbo:team ?organisation .
  FILTER (str(?džemalBerberović) = ""Džemal Berberović"") .

  ?igorBišćan a dbo:SoccerPlayer ;
              dbo:team ?organisation .
  FILTER (str(?igorBišćan) = ""Igor Bišćan"") .

  ?ognjenVukojević a dbo:SoccerPlayer ;
                   dbo:team ?organisation .
  FILTER (str(?ognjenVukojević) = ""Ognjen Vukojević"") .
}
```",5,11,6,3,3,3,3,71,0,0,1,0,0.0,0
926,48,val,"Give me the father of the father of the spouse of Neşerek Kadın and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonRoyalty
WHERE {
  # Neşerek Kadın's spouse
  ?neşerekKadın dbo:spouse ?spouse .
  
  # Father of the spouse
  ?spouse dbo:father ?fatherOfSpouse .

  # Children of this father who are royalty
  ?child1 dbo:parent ?fatherOfSpouse ;
         a dbo:RoyalFamilyMember .

  # Mustafa III's father
  dbp:Mustafa_III dbo:father ?mustafaFather .

  # Children of Mustafa III's father who are royalty
  ?child2 dbo:parent ?mustafaFather ;
         a dbo:RoyalFamilyMember .

  # Find commonality between the two sets of children
  FILTER (?child1 = ?commonRoyalty && ?child2 = ?commonRoyalty)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
933,54,val,Give me the reference to the birth name of the professional in Musician and band of The Ramong Sound and band of the band of Alan Warner (musician).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v1 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  ?musician dbo:memberOfBand dbr:The_Ramones .
  ?band dbo:leadArtist dbr:Alan_Warner ;
        dbo:member ?musician .
  ?musician foaf:name ?name .
  OPTIONAL { ?musician foaf:givenName ?firstName; foaf:familyName ?lastName . }
  BIND(CONCAT(?firstName, "" "", ?lastName) AS ?birthName)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
329,22,val,"Give me the entity in the region, that is a country, of Western European Time and birthplace of the author of The Tailor and Ansty.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country
WHERE {
  # Find the author of ""The Tailor and Ansty""
  ?author dbo:work ?book .
  ?book rdfs:label ""The Tailor and Ansty""@en .

  # Get the birthplace of this author
  ?author dbp:birthPlace ?birthPlace .

  # Ensure the birthplace is in a country within the Western European Time region
  ?birthPlace dbo:country ?country .
  ?country dbo:timeZone dbr:Western_European_Time .

}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
136,7,val,Give me the landmark at elevation of 5 and region coded as the area code of Levenhagen.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Levenhagen> <http://dbpedia.org/ontology/areaCode> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ""5""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/areaCode> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  ?landmark a dbo:Lighthouse .
  ?landmark dbo:elevation ""5""^^xsd:float .
  ?landmark dbo:region ?region .
  ?region rdfs:label ?regionLabel .
  FILTER(CONTAINS(LCASE(?regionLabel), ""levenhagen""))
}
```

This query assumes:
- The landmark is of type `dbo:Lighthouse` (you might need to adjust this based on the actual class used for landmarks in DBpedia).
- Elevation is stored as a float.
- Regions are labeled, and we can filter by checking if the label contains ""Levenhagen"".",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
582,43,val,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and figure known as --10-19 and reference to Japan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  ?player a dbo:Athlete .
  ?player a dbo:SoccerManager .
  ?player a dbo:SportsManager .

  ?child dbo:father ?player .
  
  ?kazuaki dbr:Kazuaki_Nagasawa .
  ?child dbo:parent ?kazuaki .
  
  OPTIONAL { ?player dbo:nationality dbr:Japan . }
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
933,48,val,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfTheBand
WHERE {
  # Step 1: Find The Ramones' band
  ?ramones a dbo:MusicalArtist ;
           dbo:member ?member .
  
  # Step 2: Find the band of The Ramones
  ?member dbo:band ?bandOfTheBand .

  # Step 3: Ensure this band is also an artist and musical artist
  ?bandOfTheBand a dbo:MusicalArtist, dbo:Artist .

  # Step 4: Connect to Alan Warner through another group
  ?bandOfTheBand dbo:member ?warnerGroup .
  
  ?warnerGroup a dbo:Band, dbo:Organization ;
               dbo:member dbr:Alan_Warner_(musician) .
}
```",5,10,6,3,2,3,3,71,0,0,4,0,0.0,0
495,16,val,Give me the father of the child of Princess Charlotte of Saxe-Hildburghausen and child of the father of William I of Württemberg.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT DISTINCT ?commonAncestor WHERE {
  # Princess Charlotte of Saxe-Hildburghausen and her child
  ?princessCharlotte dbr:Princess_Charlotte_of_Saxe-Hildburghausen .
  ?child1 dbo:parent ?princessCharlotte ;
          a dbo:Person .

  # Father of the child of Princess Charlotte
  ?fatherOfChild1 dbo:parent ?child1 .

  # William I of Württemberg and his father
  ?williamI dbr:William_I_of_W%C3%BCrttemberg .
  ?fatherOfWillianI dbo:parent ?williamI ;
                   a dbo:Person .

  # Child of the father of William I
  ?child2 dbo:parent ?fatherOfWillianI ;
          a dbo:Person .

  # Find common ancestor (the person who is both ?fatherOfChild1 and ?child2)
  FILTER (?fatherOfChild1 = ?commonAncestor && ?commonAncestor = ?child2)
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
273,15,val,Give me the spouse of the child of the child of Edoardo Agnelli (1831-1871) and parent of Gianni Agnelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gianni_Agnelli> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Step 1: Identify Edoardo Agnelli (1831-1871)
  dbr:Edoardo_Agnelli_(1831–1871) dbo:child ?child .

  # Step 2: Find the child of this child (grandchild of Edoardo)
  ?child dbo:child ?grandchild .

  # Step 3: Identify Gianni Agnelli as a parent of this grandchild
  ?grandchild dbo:parent dbr:Gianni_Agnelli .

  # Step 4: Find the spouse of this grandchild
  ?grandchild dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
465,48,val,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Anne of Brittany's child who is royalty
  dbr:Anne_of_Brittany dbo:child ?anneChild .
  ?anneChild a dbo:Monarch .

  # Ercole II d'Este's parent and his children
  dbr:Ercole_II_d%27Este dbo:parent dbr:Alfonso_I_d%27Este .
  dbr:Alfonso_I_d%27Este dbo:child ?alfonsoChild .

  # Successor of Alfonso I d'Este's child
  ?alfonsoChild dbo:successor ?successor .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
365,16,val,"Give me the spouse of the native, that is a politician, of Poltava Governorate and person born as the birth name of Symon Petliura.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person dbo:nativePlace dbr:Poltava_Governorate ;
          a dbo:Politician ;
          foaf:name ""Symon Petliura""@en .
  
  ?person dbo:spouse ?spouse .
}
```

This query assumes:
- `dbo:nativePlace` is used to identify the native place.
- `a dbo:Politician` identifies the person as a politician.
- `foaf:name` is used for matching the birth name (assuming Symon Petliura's full name is stored this way).
- `dbo:spouse` retrieves the spouse of the identified person.",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
917,54,val,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I and child of Kekūanāoʻa.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/ontology/parent> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
    # Step 1: Find Kamehameha IV's child who is royalty
    ?childKamehamehaIV a dbo:RoyalFamily ;
                       dbo:spouseOrChildOf dbr:Kamehameha_IV .

    FILTER EXISTS { ?childKamehamehaIV a dbo:Royalty . }

    # Step 2: Find Leleiohoku I's spouse and their royal father
    ?spouseLeleiohokuI dbo:spouseOrChildOf dbr:Leleiohoku_I .
    ?fatherSpouseLeleiohokuI dbo:parent ?spouseLeleiohokuI ;
                             a dbo:Royalty .

    # Step 3: Find the child of both Kekūanāoʻa and the royal father from step 2
    ?commonChild dbo:childOf dbr:Kekuanaoa ;
                 dbo:childOf ?fatherSpouseLeleiohokuI .

    # Ensure this common child is also a child of the royalty found in Step 1
    FILTER (?commonChild = ?childKamehamehaIV)

    # Find the parent of this common child
    ?parent dbo:parent ?commonChild .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
645,43,val,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in Battle of Jarama and leader of Ministry of the Army (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  ?person a dbo:Politician ;
          dbo:presidentOf dbr:Restoration_(Spain) ;
          dbo:commanderInBattle dbr:Battle_of_Jarama ;
          dbo:leaderOf dbr:Ministry_of_the_Army_(Spain) .

  ?militaryForce a dbo:MilitaryConflict, dbo:SocietalEvent, dbo:Event ;
                 dbo:nativeOf ?person .
}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
382,16,val,"Give me the landmark at elevation of the award of Harry Combes and birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?v2 . <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark WHERE {
  # Find Harry Combes' award and its elevation
  ?award dbo:recipient dbr:Harry_Combes .
  ?award dbo:location ?location .
  ?location dbo:elevation ?elevation .

  # Identify the manager of Bonner SC who is a soccer manager, athlete, and sports manager
  ?manager dbp:team dbr:Bonn_Sportverein_1911 .
  ?manager rdf:type dbo:SoccerManager ;
           rdf:type dbo:Athlete ;
           rdf:type dbo:SportsManager .

  # Get the birthplace of this manager
  ?manager dbo:birthPlace ?birthPlace .

  # Find a landmark at the same elevation as the award's location
  ?landmark dbo:elevation ?elevation .
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
445,48,val,"Give me the entity in the award of George H. Cameron and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?country
WHERE {
  # Find awards associated with George H. Cameron
  dbr:George_H._Cameron dbo:award ?award .

  # Find athletes from Great Britain and their country of residence
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:residence ?residence .
  
  FILTER (isBlank(?athlete) && regex(str(?athlete), ""Athlete"")) # Assuming athlete is a blank node with label containing 'Athlete'

  OPTIONAL {
    ?residence rdf:type dbo:Country ;
               rdfs:label ?countryLabel .
    FILTER (langMatches(lang(?countryLabel), ""EN""))
  }
}
```",5,7,6,3,2,3,3,71,0,0,102,0,0.0,0
865,42,val,"Give me the father of the child of Abu Ahmad Abdul Hafiz and father of AK Abdul Momen and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?father
WHERE {
  # Abu Ahmad Abdul Hafiz's child and their father
  ?child dbo:parent ?abuAhmad.
  ?abuAhmad foaf:name ""Abu Ahmad Abdul Hafiz""@en.
  
  ?child dbo:parent ?father.

  # AK Abdul Momen's father
  ?akChild dbo:parent ?akFather.
  ?akFather foaf:name ""AK Abdul Momen""@en.
  
  FILTER(?father = ?akFather)

  # Ram Jaipal Singh Yadav's residence (country)
  ?ram dbo:nationality ?residenceCountry.

  ?ram foaf:name ""Ram Jaipal Singh Yadav""@en.

  # Ensure the father is native to the same country
  ?father dbo:birthPlace ?birthPlace.
  
  FILTER(?birthPlace = ?residenceCountry)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
216,46,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/coach> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player (GROUP_CONCAT(DISTINCT ?role; separator="", "") AS ?roles)
WHERE {
  ?player a dbo:SoccerPlayer .
  ?player dbo:sportManagerOf ?team1 .
  ?player dbo:coachOf ?team2 .
  
  ?team1 dbr:Bosnia_and_Herzegovina_national_under-18_football_team ;
         dbo:member ?player .
  
  ?team2 dbr:Croatia_U21 ;
         dbo:member ?player .

  OPTIONAL {
    ?player dbo:sportManagerOf ?organisation .
    FILTER (?organisation != ?team1 && ?organisation != ?team2)
  }

  OPTIONAL {
    ?player dbo:coachOf ?club .
    FILTER (?club != ?team1 && ?club != ?team2)
  }
  
  # Collect roles
  OPTIONAL { ?player dbo:soccerPlayer ?role . }
  OPTIONAL { ?player dbo:sportsManager ?role . }
  OPTIONAL { ?player dbo:soccerManager ?role . }

}
GROUP BY ?player
HAVING (COUNT(DISTINCT ?role) > 0)
ORDER BY ?player",5,10,6,3,2,3,3,71,0,0,3,0,0.0,0
47,41,val,Give me the office of the awardee of Banga Bhushan and office of the administration of Jagdeep Dhankhar and office of Ajoy Mukherjee.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?individual ?officeName WHERE {
  {
    # Awardee of Banga Bhushan (assuming we know the specific individual, e.g., a known awardee)
    VALUES ?individual { 
      <http://dbpedia.org/resource/Awarded_Banga_Bhushan_individual> 
    }
    ?individual dbo:office ?office .
  } UNION {
    # Jagdeep Dhankhar
    ?jagdeep dbp:name ""Jagdeep Dhankhar""@en .
    ?jagdeep dbo:office ?office .
  } UNION {
    # Ajoy Mukherjee
    ?ajoy dbp:name ""Ajoy Mukherjee""@en .
    ?ajoy dbo:office ?office .
  }
  
  BIND(STR(?office) AS ?officeName)
}
ORDER BY ?individual
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
417,47,val,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the father of the leader, that is a royalty, of Colony of Greenland.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseName
WHERE {
  # Count Ingolf of Rosenborg's parent who is royalty
  ?countIngolf dbo:parent ?royalParent .
  ?royalParent a dbo:Monarch .

  # Leader of the Colony of Greenland and their father who is royalty
  ?greenlandLeader dbo:leaderOf <http://dbpedia.org/resource/Colony_of_Greenland> .
  ?greenlandLeader foaf:parent ?father .
  ?father a dbo:Monarch .

  # Child of this royal father
  ?child foaf:parent ?father .

  # Spouse of the parent (royalty) of Count Ingolf of Rosenborg
  ?royalParent foaf:mbox ?spouseMailbox .
  ?spouseMailbox foaf:name ?spouseName .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
715,41,val,"Give me the commander in the force of Francisco Largo Caballero and commander in the force, that is a military conflict, of Abd el-Krim and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderOfLargoCaballero ?conflictCommander ?ministerAirSpain
WHERE {
  # Commander in the force of Francisco Largo Caballero
  OPTIONAL {
    ?largoCaballero dbo:commander ?commanderOfLargoCaballero .
    FILTER (str(?largoCaballero) = ""Francisco_Largo_Caballero"")
  }

  # Commander in a military conflict involving Abd el-Krim
  OPTIONAL {
    ?conflict dbo:militaryConflictParticipant ?abdElKrim ;
              dbo:commander ?conflictCommander .
    FILTER (str(?abdElKrim) = ""Abd_el-Krim"")
  }
  
  # Leader of Ministry of the Air (Spain)
  OPTIONAL {
    ?ministerAirSpain dbo:minister ?ministryAirSpain .
    ?ministryAirSpain rdfs:label ?label .
    FILTER (CONTAINS(LCASE(?label), ""ministry of the air spain""))
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
582,42,val,Give me the reference to the residence of Hirotaka Sugawara and player in Kazuaki Nagasawa and figure known as the nickname of Japan national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence ?player ?nickname
WHERE {
  # Hirotaka Sugawara's residence
  dbr:Hirotaka_Sugawara dbo:residenceLocation ?residence .

  # Kazuaki Nagasawa as a player
  dbr:Kazuaki_Nagasawa dbo:occupation dbr:Footballer .
  
  # Nickname of the Japan national football team
  OPTIONAL {
    dbr:Japan_national_football_team dbo:nickname ?nickname .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
47,55,val,Give me the office of the awardee of Banga Bhushan and office of the administration of Jagdeep Dhankhar and office of the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v5 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v3 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeBangaBhushan ?officeJagdeepDhankhar ?officePadmaVibhushan
WHERE {
  # Office of the awardee of Banga Bhushan
  ?bangaBhushanAward a dbo:Award ;
                     rdfs:label ""Banga Bhasha Samman""@en .
  ?bangaBhushanAwardee dbo:recipient ?bangaBhushanAward .
  ?bangaBhushanAwardee dbo:office ?officeBangaBhushan .

  # Office of Jagdeep Dhankhar
  dbr:Jagdeep_Dhankhar dbo:office ?officeJagdeepDhankhar .

  # Office of the awardee of Padma Vibhushan
  ?padmaVibhushanAward a dbo:Award ;
                       rdfs:label ""Padma Vibhushan""@en .
  ?padmaVibhushanAwardee dbo:recipient ?padmaVibhushanAward .
  ?padmaVibhushanAwardee dbo:office ?officePadmaVibhushan .
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
47,44,val,Give me the office of the awardee of Padma Vibhushan and office of the awardee of Banga Bhushan and office of Suvendu Adhikari.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v4 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office WHERE {
  {
    # Offices of Padma Vibhushan awardees
    ?person dbo:award dbr:Padma_Vibhushan .
    ?person dbo:officeHolder ?office .
  }
  UNION
  {
    # Offices of Banga Bhushan awardees
    ?person dbo:award dbr:Banga_Bhushan .
    ?person dbo:officeHolder ?office .
  }
  UNION
  {
    # Offices held by Suvendu Adhikari
    ?person rdfs:label ""Suvendu Adhikari""@en .
    ?person dbo:officeHolder ?office .
  }
}
```

### Explanation

- **PREFIX**: Defines common prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT ?office**: Retrieves distinct office positions held by the specified individuals.
- **WHERE Clause**:
  - The first block retrieves offices of Padma Vibhushan awardees.
  - The second block retrieves offices of Banga Bhushan awardees.
  - The third block retrieves offices held by Suvendu Adhikari using his label.

This query efficiently combines results from different award categories and a specific individual, ensuring comprehensive coverage of the requested information.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
417,50,val,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild
WHERE {
  # Frederick Francis III and his children
  ?frederick a dbo:GrandDuke ;
             dbp:spouse ?spouse .
  
  ?child1 dbo:childOf ?frederick ;
          a dbo:Person .

  # Grandchildren of Frederick Francis III who are royalty
  ?grandchild dbo:parent ?child1 ;
              a dbo:RoyalFamilyMember .

  # Leader of Colony of Greenland and their father
  ?leader dbp:position ""Leader of the Colony of Greenland""@en .
  
  ?father dbo:childOf ?leader .

  # Child of leader's father
  ?child2 dbo:parent ?father ;
          a dbo:Person .

  # Find intersection where grandchild is also child2
  FILTER (?grandchild = ?child2)
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
83,15,val,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA and party of Alceu Collares.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. <http://dbpedia.org/resource/Alceu_Collares> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v1 <http://dbpedia.org/property/leaderParty> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?rulingParty
WHERE {
  ?person dbo:memberOfKedahFA true .
  ?person dbo:partyOfAlceuCollares true .
  ?person dbo:sportsManager true .
  
  ?person dbo:birthPlace ?town .
  ?town a dbo:Town ;
        dbp:country dbr:Brazil ;
        dbo:hasSoccerClub ?soccerClub .

  ?town dbo:rulingParty ?rulingParty .
}
```

4. **Explanation of the Query:**
   - We use `SELECT DISTINCT` to ensure unique results for the ruling party.
   - The `WHERE` clause specifies patterns:
     - A person who is a member of Kedah FA and associated with Alceu Collares, and is a sports manager.
     - This person's birthplace must be a town in Brazil that has a soccer club.
     - We then retrieve the ruling party of this town.

5. **Assumptions:**
   - The properties `memberOfKedahFA`, `partyOfAlceuCollares`, `sportsManager`, and `rulingParty` are assumed to exist or be appropriately mapped in DBpedia for this query to work.
   - The query assumes that the relationships and entities are correctly modeled in DBpedia.",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
933,42,val,"Give me the reference to Alan Warner and band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of the band of Alan Warner (musician).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandName
WHERE {
  # Identify Alan Warner (musician)
  dbr:Alan_Warner_musical_artist dbo:memberOf ?band .

  # Ensure the band is also a group and an organization
  ?band rdf:type dbo:Band .
  ?band rdf:type dbo:MusicalGroup .
  ?band rdf:type dbo:Organization .

  # Get the name of the band
  ?band rdfs:label ?bandName .
  
  FILTER (lang(?bandName) = 'en')
}
ORDER BY ?bandName",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
791,43,val,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of Emperor Go-Toba and spouse of Taira no Tokuko.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor
WHERE {
  # Emperor Go-Shirakawa
  ?goShirakawa a dbo:Monarch ;
               foaf:name ""Emperor Go-Shirakawa""@en .

  # Child of Emperor Go-Shirakawa
  ?child1 dbo:parent ?goShirakawa ;
          a dbo:Person .

  # Grandchild (Child of Child1)
  ?grandchild dbo:parent ?child1 ;
              a dbo:Monarch, dbo:OfficeHolder ;  # Must be royalty and office holder

  # Father of Emperor Go-Toba
  ?goToba a dbo:Monarch ;
          foaf:name ""Emperor Go-Toba""@en .
  ?grandchild dbo:parent ?goToba .

  # Spouse of Taira no Tokuko
  ?tokuko a dbo:Person ;
          foaf:name ""Taira no Tokuko""@en .
  ?grandchild dbp:spouse ?tokuko .

  # Predecessor of the Grandchild
  ?predecessor dbo:successor ?grandchild .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
865,54,val,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of Shahla Khatun and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father
WHERE {
  # Syeda Shahar Banu's spouse
  ?spouse dbo:spouse dbr:Syeda_Sharbanoo .
  
  # The child of this spouse who is a politician and father of Shahla Khatun
  ?child dbo:parent ?spouse ;
         rdf:type dbo:Politician ;
         dbo:child dbr:Shahla_Khatun .

  # Father of the child
  ?father dbo:child ?child .
  
  # Native country of Ram Jaipal Singh Yadav
  ?country dbo:nativeCountry dbr:Ram_Jaipal_Singh_Yadav .
  
  # The residence (native country) of the father must match the native country of Ram Jaipal Singh Yadav
  ?father dbo:nativeCountry ?country .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
987,42,val,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and entity in the region, that is a country, of Central European Time and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandBirthPlace ?country
WHERE {
  # Find the band associated with Šako Polumenta
  ?band dbo:member dbr:Šako_Polumenta .
  
  # Ensure the band is both an artist and a musical artist
  ?band rdf:type dbo:Band ;
        rdf:type dbo:MusicalArtist .

  # Get the birthplace of the band
  ?band dbp:birthPlace ?bandBirthPlace .

  # Find Moamer Kasumović's birthplace
  dbr:Moamer_Kasumović dbp:birthPlace ?kasumovicBirthPlace .

  # Determine the country in the CET region where Moamer Kasumović was born
  ?kasumovicBirthPlace dbo:country ?country .
  
  # Filter to ensure the country is in the Central European Time zone
  ?country dbo:timeZone dbr:Central_European_Time .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
573,47,val,"Give me the person decedent at the administration, that is a region, of Charlie Baker and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?administrationDecedent ?residenceDecedent
WHERE {
  # Find Charlie Baker's administration region and its decedent
  dbr:Charlie_Baker dbo:governmentRole dbr:Governor_of_Massachusetts .
  dbr:Massachusetts dbo:administrativeRegionOf dbr:United_States .
  dbr:Massachusetts dbo:decedent ?administrationDecedent .

  # Find an American professional in Politician and their residence settlement
  ?professional a dbo:Politician ;
               dbp:nationality dbr:United_States ;
               dbo:residence ?settlement .
  ?settlement a dbo:Settlement .
  ?settlement dbo:decedent ?residenceDecedent .

}",5,8,6,3,2,3,3,71,0,0,400,0,0.0,0
554,17,val,"Give me the leader of Portuguese São Tomé and Príncipe and leader of the birth place of the band, that is an artist, of Rita Redshoes.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> ?result . <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Portuguese_São_Tomé_and_Príncipe> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?leaderSTP ?leaderBirthplaceLeader
WHERE {
  # Leader of São Tomé and Príncipe
  OPTIONAL {
    dbr:São_Tomé_and_Príncipe dbo:headOfStateOrGovernment ?leaderSTP .
  }

  # Rita Redshoes' band
  dbr:Rita_Redshoes dbo:associatedBand ?band .

  # An artist from the band
  ?artist dbo:memberOfBand ?band ;
          dbp:birthPlace ?birthplaceArtist .

  # Leader of the birthplace of the artist
  OPTIONAL {
    ?birthplaceLeader dbo:headOfStateOrGovernment ?leaderBirthplaceLeader .
    ?birthplaceLeader dbr:countryName ?birthplaceArtist .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
955,15,val,"Give me the band of the writer of the work, that is a work and an album and a musical work, of Matt Freeman and band of Johnny Rioux.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Rioux> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  ?work dbo:writer dbr:Matt_Freeman ;
        a dbo:Album, dbo:MusicalWork .
  
  ?work dbo:performer ?band .

  ?band dbo:member dbr:Johnny_Rioux .
}
```

This query does the following:
- Selects distinct bands (`?band`) associated with works.
- Ensures that these works are both albums and musical works written by Matt Freeman.
- Checks if the band has Johnny Rioux as a member.",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
987,48,val,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName ?birthPlace WHERE {
  # Find the band associated with Dado Pršo
  ?band a dbo:Band ;
        dbo:member dbr:Dado_Pršo ;
        a dbo:MusicalArtist, dbo:Artist .
  
  # Ensure the band is in a country using Central European Time
  ?region dbp:country dbr:Czech_Republic ; # Example of a CET country
          dbo:location ?band .

  # Get the birthplace of the band
  ?band dbo:birthPlace ?birthPlace .

  # Optional: Filter for more countries in CET if needed
  FILTER (str(?region) IN (""Czech_Republic"", ""Germany"", ""Austria"")) # Add other CET countries as necessary

}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
965,55,val,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Prince Louis of Battenberg and his child who is royalty
  ?child dbo:spouse|dbo:childOf dbr:Prince_Louis_of_Battenberg .
  ?child a dbo:RoyalFamily .

  # Princess Victoria's spouse and their parent
  ?spouse dbo:spouse dbr:Princess_Victoria_of_Hesse_and_by_Rhine .
  ?parent dbo:child ?spouse .

  # Prince George of Battenberg, who is noble
  ?nobleChild dbo:birthName ""Prince George of Battenberg"" ;
              a dbo:NobleFamily .
  
  # Ensure the parent matches both conditions
  ?parent dbo:child ?nobleChild .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
129,19,val,Give me the professional in the mayor of 1999 West Dunbartonshire Council election and associated musical artist of Saba (rapper) and associated musical artist of EarthGang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mayorProfession ?sabaArtist ?earthgangArtist
WHERE {
  # Find the mayor of West Dunbartonshire in 1999 and their profession
  ?mayor a dbo:Mayor ;
         dbo:officeHolderOf dbr:West_Dunbartonshire_Council ;
         dbo:termStart ?start .
  FILTER (YEAR(?start) = 1999)
  
  OPTIONAL {
    ?mayor dbo:profession ?mayorProfession .
  }

  # Find Saba's associated musical artist
  dbr:Saba dbo:associatedMusicalArtist ?sabaArtist .

  # Find EarthGang's associated musical artist
  dbr:EarthGang dbo:associatedMusicalArtist ?earthgangArtist .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
98,22,val,Give me the birth place of the person born as Paolo Elito M. Ballesteros IV and region of the time zone of Lopez Jaena.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace ?timeZoneRegion
WHERE {
  # Find birth place of Paolo Elito M. Ballesteros IV
  OPTIONAL {
    ?person a dbo:Person ;
            foaf:name ""Paolo Elito M. Ballesteros IV"" ;
            dbo:birthPlace ?birthPlace .
  }
  
  # Find time zone region for Lopez, Jaena
  ?location dbr:Lopez_Jaena ;
            dbo:timeZone ?timeZone .
  ?timeZone dbo:region ?timeZoneRegion .
}
```

This query does the following:
- Uses `OPTIONAL` to handle cases where information about Paolo Elito M. Ballesteros IV might not be available.
- Retrieves the birth place of the person named ""Paolo Elito M. Ballesteros IV"".
- Finds the time zone for Lopez, Jaena and extracts its region.",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
926,51,val,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of the child of Ahmed III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfFather
WHERE {
  # Beyhan Sultan and her father Mustafa III
  dbr:Beyhan_Sultan dbo:father dbr:Mustafa_III .
  
  # Ahmed III's child
  dbr:Ahmed_III dbo:child ?ahmedChild .

  # Successor of Ahmed III's child
  ?successor dbo:succeededBy ?ahmedChild .
  
  # The successor must be a royalty and have a father who is also a royalty
  ?successor rdf:type dbo:Monarch .
  ?successor dbo:father ?royalFather .

  # Find the child of this royal father
  ?royalFather dbo:child ?childOfFather .
  
  # Ensure the child of the father is also a royalty
  ?childOfFather rdf:type dbo:Monarch .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
892,44,val,"Give me the landmark at elevation of the award of Anna Ishii and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and entity in Italy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?landmark ?entityInAdministration
WHERE {
  # Anna Ishii's award and its elevation
  ?award dbo:recipient dbr:Anna_Ishii .
  ?award dbo:elevation ?elevation .

  # Landmark at the same elevation as the award
  ?landmark dbo:elevation ?elevation .

  # Entity in administration that is Italian, a region, settlement, and administrative region
  ?entityInAdministration a dbo:Region ;
                         dbo:country dbr:Italy ;
                         dbo:settlement dbr:Italy ;
                         dbo:administrativeRegion dbr:Italy .

  # Related to Democratic Party (Italy)
  ?entityInAdministration dbp:party dbr:Democratic_Party_(Italy) .
}
```",5,9,6,2,3,3,3,71,0,0,2,0,0.0,0
865,53,val,"Give me the father of the child of Abu Ahmad Abdul Hafiz and father of AK Abdul Momen and native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father
WHERE {
  # Abu Ahmad Abdul Hafiz's child and their father
  ?child dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz .
  ?child dbo:father ?abuAhmadFather .

  # AK Abdul Momen's father
  ?akChild dbo:parent dbr:AK_Abdul_Momen .
  ?akChild dbo:father ?akFather .

  # Person decedent at Patna and their native country of residence
  ?decedent dbo:deceasedAt dbr:Patna .
  ?decedent dbo:placeOfBirth ?nativeCountry .

  # Ensure the father is the same for both Abu Ahmad Abdul Hafiz's child and AK Abdul Momen
  FILTER (?abuAhmadFather = ?akFather)

  # The native country of residence should be a country
  ?nativeCountry rdf:type dbo:Country .
  
  # Return the common father
  BIND(?abuAhmadFather AS ?father)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
965,42,val,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Find Princess Victoria of Hesse and by Rhine's spouse
  ?princessVictoria a dbo:Person ;
                   foaf:name ""Princess Victoria of Hesse and by Rhine""@en .
  
  ?spouseOfVictoria dbo:spouse ?princessVictoria .

  # Find Louise Mountbatten's parent who is also noble
  ?louiseMountbatten a dbo:Person ;
                     foaf:name ""Louise Mountbatten""@en .
  
  ?parent dbo:child ?louiseMountbatten ;
          dbo:nobleTitle ?nobleTitle .

  # Ensure the parent is related through marriage to Prince George of Battenberg
  ?princeGeorge a dbo:Person ;
                foaf:name ""Prince George of Battenberg""@en .
  
  ?parent dbo:spouse ?relatedToPrinceGeorge .
  
  FILTER EXISTS { ?relatedToPrinceGeorge dbo:child ?princeGeorge }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
433,44,val,"Give me the associated musical artist of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and professional in the profession of Bob Marley.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist2
WHERE {
  # Step 1: Find artists associated with Paul Chambers
  ?paulChambersArtist dbo:associatedMusicalArtist dbr:Paul_Chambers .
  
  # Step 2: For each artist found, find their associated musical artists
  ?paulChambersArtist dbo:associatedMusicalArtist ?artist1 .

  # Step 3: Ensure the second-level artist is also associated with Scott LaFaro
  ?artist1 dbo:associatedMusicalArtist dbr:Scott_LaFaro .
  
  # Step 4: Ensure the second-level artist is a professional like Bob Marley
  ?artist2 dbo:associatedMusicalArtist ?artist1 .
  FILTER EXISTS { ?artist2 dbo:profession dbr:Musician } # Assuming 'Musician' as a proxy for being a professional like Bob Marley

}",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
987,41,val,"Give me the birth place of the actor of All for Free and entity in Montenegro and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorBirthPlace ?entityInMontenegroBirthPlace ?bandBirthPlace
WHERE {
  # Actor of ""All for Free""
  ?movie dbo:title ""All for Free""@en .
  ?movie dbo:starring ?actor .
  
  # Entity in Montenegro
  ?montenegroEntity dbo:country dbr:Montenegro .

  # Band associated with Šako Polumenta
  ?band dbo:member Šako_Polumenta ;
        a dbo:Band, dbo:MusicalArtist .

  # Birthplaces
  ?actor dbo:birthPlace ?actorBirthPlace .
  ?montenegroEntity dbo:birthPlace ?entityInMontenegroBirthPlace .
  ?band dbo:birthPlace ?bandBirthPlace .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
445,54,val,"Give me the entity in the residence, that is a country, of Anna Sharkey and entity in United Kingdom and death place of the awardee of the establishment of 1820-03-10.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?residenceCountry ?ukEntity ?deathPlace
WHERE {
  # Anna Sharkey's residence country
  dbr:Anna_Sharkey dbo:residence ?residence .
  ?residence dbo:country ?residenceCountry .

  # Entity in the United Kingdom
  ?ukEntity dbo:country dbr:United_Kingdom .

  # Awardee related to establishment date 1820-03-10
  ?award dbo:dateReceived ?date .
  FILTER (YEAR(?date) = 1820 && MONTH(?date) = 3 && DAY(?date) = 10)
  ?award dbo:recipient ?awardee .
  ?awardee dbo:deathPlace ?deathPlace .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
892,55,val,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of the award of Anna Ishii.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?profession ?region ?landmark
WHERE {
  # Henri Crolla's profession
  dbr:Henri_Crolla dbo:occupation ?profession .

  # Italian region that is a settlement, administrative region, and associated with the Democratic Party (Italy)
  ?region a dbo:Region ;
          dbp:country ""Italy""^^xsd:string ;
          dbo:settlement true ;
          dbo:administrativeRegion true .
  OPTIONAL { ?region dbo:party dbr:Democratic_Party_(Italy) . }

  # Landmark at elevation of Anna Ishii's award
  ?award dbr:Anna_Ishii dbo:elevation ?elevation .
  ?landmark dbo:elevation ?elevation ;
            a dbo:Lighthouse .

}",6,10,7,2,3,3,3,71,0,0,2,0,0.0,0
41,22,val,"Give me the party of the person born as David Declan Costello and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?costelloParty ?leaderParty
WHERE {
  # Find David Declan Costello's party
  OPTIONAL {
    ?person rdfs:label ""David Declan Costello""@en .
    ?person dbo:party ?costelloParty .
    FILTER (lang(?costelloParty) = 'en')
  }

  # Find the leader of the 2005 Castlereagh Borough Council election and their party
  OPTIONAL {
    ?election dbr:Castlereagh_Borough_Council_election,_May_2005 ;
              dbo:electedOfficeHolder ?leader .
    ?leader a dbo:Politician ;
            dbo:party ?leaderParty .
    FILTER (lang(?leaderParty) = 'en')
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
98,23,val,"Give me the region of the time zone of Lopez Jaena and entity in the region, that is a country, of Philippine Standard Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?region ?country
WHERE {
  # Find the time zone of Lopez Jaena
  ?lorenzoJaena dbo:timeZone ?timezone .
  
  # Get the region associated with this time zone
  ?timezone geo:region ?region .

  # Filter for Philippine Standard Time (PST)
  FILTER(CONTAINS(LCASE(STR(?timezone)), ""philippine standard time""))

  # Find countries in that region which are of type dbo:Country
  ?country rdf:type dbo:Country .
  ?country geo:location ?location .
  ?location geo:region ?region .

  # Ensure the country is within the same region as the timezone
}
```",4,5,5,2,2,2,3,28,0,0,1743,0,0.0,0
170,20,val,Give me the domain of Mayor and entity in Russia and birth place of the awardee of People's Artist of Russia.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mayor ?birthPlace WHERE {
  # Find mayors in Russia
  ?mayor a dbo:Mayor ;
         dbo:country dbr:Russia .
  
  OPTIONAL {
    # Find awardees of People's Artist of Russia and their birthplaces
    ?person dbo:honoraryTitle dbr:People%27s_Artist_of_Russia ;
            dbo:birthPlace ?birthPlace .
    
    FILTER(?mayor = ?person)
  }
}
```

This query does the following:
- Selects distinct mayors in Russia.
- Optionally matches these mayors with individuals who have been awarded ""People's Artist of Russia"" and retrieves their birthplaces.",4,4,5,2,3,2,3,28,0,0,3,0,0.0,0
645,51,val,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?militaryForce WHERE {
  # Francisco Largo Caballero's details
  dbr:Francisco_Largo_Caballero dbo:nationality dbr:Spain ;
                                 dbo:birthPlace dbr:Restoration_(Spain) .

  # Events related to him that are military conflicts and societal events
  ?event dbo:agent dbr:Francisco_Largo_Caballero .
  ?event a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Office he led which is a government agency or organization
  ?office dbo:leader dbr:Francisco_Largo_Caballero ;
          a (dbo:GovernmentAgency | dbo:Organization) .

  # Military force associated with the event and office
  ?event dbo:militaryForce ?militaryForce .
  ?office dbo:militaryForce ?militaryForce .
}
```",5,10,6,3,2,3,3,71,0,0,2,0,0.0,0
365,17,val,"Give me the person born as Symon Vasylyovych Petliura and spouse of the native, that is a politician, of the reference to Полтавская губерния.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/property/birthName> ""Symon Vasylyovych Petliura""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?petliura a dbo:Person ;
            foaf:name ""Symon Vasylyovych Petliura"" ;
            dbo:spouse ?spouse .
  
  ?spouse a dbo:Politician ;
          dbp:nativePlace dbr:Полтавская_губерния .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
274,20,val,Give me the professional in the designer of Tetris Classic and band member of Dizzy Gillespie and associated musical artist of Cecil Taylor.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?professional
WHERE {
  # Designer of Tetris Classic
  ?tetrisDesigner dbo:designerOf dbp:Tetris_Classic .
  
  # Band member of Dizzy Gillespie
  ?gillespieBandMember dbo:bandMemberOf dbp:Dizzy_Gillespie .

  # Associated musical artist of Cecil Taylor
  ?cecilArtist dbo:associatedMusicalArtist dbp:Cecil_Taylor .

  # The professional must be the same person in all three roles
  FILTER (?tetrisDesigner = ?gillespieBandMember && ?gillespieBandMember = ?cecilArtist)
  
  BIND(?tetrisDesigner AS ?professional)
}
```

This query does the following:
- Identifies individuals who are designers of Tetris Classic, band members of Dizzy Gillespie, and associated musical artists of Cecil Taylor.
- Uses a `FILTER` to ensure that the same individual is linked to all three roles.
- Returns distinct professionals matching these criteria.",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
216,47,val,"Give me the player in the coach of Croatia national under-21 football team and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/coach> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  ?player a dbo:SoccerPlayer .
  ?player a dbo:SportsManager .
  
  # Player is a coach of the Croatia national under-21 football team
  ?coaching1 dbo:coach ?player .
  ?coaching1 dbr:Croatia_national_under-21_football_team .

  # Player is a soccer manager (coach) of an organization that is Džemal Berberović
  ?coaching2 dbo:coach ?player .
  ?coaching2 dbo:organization dbr:Džemal_Berberović .
  
  # The organization is a sports club and a soccer club
  dbr:Džemal_Berberović a dbo:SportsClub ;
                        a dbo:SoccerClub .
}
```",5,11,6,3,2,3,3,71,0,0,3,0,0.0,0
933,55,val,"Give me the reference to the birth name of Alan Warner (musician) and band of the band of Alan Warner (musician) and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName ?band
WHERE {
  # Identify Alan Warner as a musician
  dbr:Alan_Warner_Musician dbo:birthName ?birthName .
  
  # Find the band associated with Alan Warner
  dbr:Alan_Warner_Musician dbo:musicalBand ?band .

  # Ensure the band is categorized as both a group and an organization
  ?band rdf:type dbo:MusicalGroup ;
        rdfs:subClassOf* dbo:Organization .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
124,48,val,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
  # Herbert Kitchener's military force
  dbr:Herbert_Kitchener_1st_Earl_Kitchener dbo:militaryConflict ?kitchenerMilitaryForce .
  
  # Ensure it is a societal event and a military conflict
  ?kitchenerMilitaryForce rdf:type dbo:SocietalEvent ;
                         rdf:type dbo:MilitaryConflict .

  # Reference to 'A' Battery, Royal Australian Artillery
  dbr:A_Battery,_Royal_Australian_Artillery dbo:partOf ?australianMilitaryUnit .
  
  # Ensure it is an organization and a military unit
  ?australianMilitaryUnit rdf:type dbo:Organisation ;
                          rdf:type dbo:MilitaryUnit .

  # The war involving both entities
  ?kitchenerMilitaryForce dbo:war ?commonWar .
  ?australianMilitaryUnit dbo:partOf ?commonWar .

  # Ensure the common war is a societal event and military conflict
  ?commonWar rdf:type dbo:SocietalEvent ;
             rdf:type dbo:MilitaryConflict .
}
```",5,12,6,3,2,3,3,71,0,0,9,0,0.0,0
170,19,val,Give me the domain of Mayor and entity in the work of International Energy Agency and birth place of Era Ziganshina.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mayorDomain ?ieaEntity ?birthPlace
WHERE {
  # Domain of Mayor
  ?mayor a dbo:Mayor .
  ?mayor rdfs:subClassOf* ?mayorDomain .

  # Entity in the work of International Energy Agency
  dbr:International_Energy_Agency dbo:workLocation ?ieaEntity .

  # Birthplace of Era Ziganshina
  OPTIONAL {
    dbr:Era_Ziganshina dbo:birthPlace ?birthPlace .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
465,51,val,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Charles Orlando, Dauphin of France
  dbr:Charles_Orlando,_Dauphin_of_France dbo:parent ?parentOfCharles .

  # Child (royalty) of the parent of Charles Orlando
  ?child1 dbo:parent ?parentOfCharles .
  ?child1 a dbo:Monarch .

  # Ferdinand I, Holy Roman Emperor
  dbr:Ferdinand_I,_Holy_Roman_Emperor dbo:child ?child2 .
  ?child2 a dbo:Monarch .

  # Spouse relationship
  ?child1 dbo:spouse ?child2 .

  # Find the successor of this child
  ?child1 dbo:successor ?successor .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
267,16,val,"Give me the coach of the player, that is a soccer club, in Rasoul Khatibi and person born on the birth date of Dan Cathy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/coach> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?coach WHERE {
  # Find Rasoul Khatibi's soccer club
  dbr:Rasoul_Khatibi dbo:playsFor ?soccerClub .
  
  # Get the coach of that soccer club
  ?soccerClub dbo:coach ?coach .

  # Get Dan Cathy's birth date
  dbr:Dan_Cathy dbp:birthday ?danCathyBirthDate .

  # Ensure the coach has the same birth date as Dan Cathy
  ?coach dbp:birthday ?birthDate .
  FILTER (?birthDate = ?danCathyBirthDate)
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
715,46,val,"Give me the commander in the force of Francisco Largo Caballero and commander in the force, that is a military conflict, of the native of Morocco.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderOfLargoCaballero ?commanderOfMoroccanNative
WHERE {
  # Commander of Francisco Largo Caballero
  OPTIONAL {
    ?largoCaballero dbo:nationality dbr:Spain ;
                    a dbo:Person .
    FILTER (str(?largoCaballero) = ""Francisco_Largo_Caballero"") .

    ?commanderOfLargoCaballero dbo:positionHeld ?position ;
                               dbo:subOrganizationOf ?organization .
    ?position dbo:roleName dbr:Military_Commander .
    ?organization dbo:member ?largoCaballero .
  }

  # Commander of a native of Morocco
  OPTIONAL {
    ?moroccanNative dbo:nationality dbr:Morocco ;
                   a dbo:Person .

    ?commanderOfMoroccanNative dbo:positionHeld ?position2 ;
                               dbo:subOrganizationOf ?organization2 .
    ?position2 dbo:roleName dbr:Military_Commander .
    ?organization2 dbo:member ?moroccanNative .
  }
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
573,48,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/property/governor> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent
WHERE {
  # Find Charlie Baker (Australian footballer) and his real name
  dbr:Charlie_Baker_(Australian_footballer) dbo:realName ?realName .
  
  # Determine the administration he was associated with, which is a region
  ?administration dbo:administrator ?charlieBaker ;
                  a dbo:Region .

  # Find the author of ""Exchequer Standards""
  dbr:Exchequer_Standards dbo:author ?author .

  # Identify the parent of this author who is both a politician and an office holder
  ?author foaf:parent ?parent .
  
  ?parent a dbo:Politician ;
          dbo:officeHolder true .

  # Ensure the administration is linked to Charlie Baker's real name
  ?administration foaf:name ?realName .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
508,16,val,"Give me the birthplace of the commander, that is Saudi, in Central Plains War and birthplace of the commander, that is a politician, in 1939–1940 Winter Offensive.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthplaceCentralPlainsWar ?birthplaceWinterOffensive
WHERE {
  # Commander in the Central Plains War who is Saudi
  ?commanderCentralPlainsWar a dbo:MilitaryPerson ;
                            dbo:nationality dbr:Saudi_Arabia ;
                            dbo:participatedIn dbr:Battle_of_the_Central_Plains .
  ?commanderCentralPlainsWar dbo:birthPlace ?birthplaceCentralPlainsWar .

  # Commander in the 1939–1940 Winter Offensive who is a politician
  ?commanderWinterOffensive a dbo:MilitaryPerson ;
                           dbo:occupation dbr:Politician ;
                           dbo:participatedIn dbr:Winter_Offensive_1939-40 .
  ?commanderWinterOffensive dbo:birthPlace ?birthplaceWinterOffensive .
}
```",4,6,5,2,2,3,2,20,0,0,3,0,0.0,0
645,40,val,Give me the commander in the force of the commander in Siege of Madrid and military force of Spanish Civil War and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderInSiegeOfMadrid ?militaryForceSpanishCivilWar ?leaderMinistryOfArmySpain
WHERE {
  # Commander in the force during the Siege of Madrid
  ?siege dbo:commander ?commanderInSiegeOfMadrid .
  FILTER(CONTAINS(LCASE(STR(?siege)), ""siege of madrid"")) .

  # Military force involved in the Spanish Civil War
  ?civilWar dbo:militaryForce ?militaryForceSpanishCivilWar .
  FILTER(CONTAINS(LCASE(STR(?civilWar)), ""spanish civil war"")) .

  # Leader of the Ministry of the Army (Spain)
  ?ministry dbo:leader ?leaderMinistryOfArmySpain .
  FILTER(CONTAINS(LCASE(STR(?ministry)), ""ministry of the army spain"")) .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
122,7,val,Give me the band of Gift of Gab (rapper) and band member of the band of Gift of Gab (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band ?member 
WHERE {
  # Find the band associated with Gift of Gab
  ?giftOfGab a dbo:MusicalArtist ;
             foaf:name ""Gift of Gab"" .
  
  ?giftOfGab dbo:member ?band .

  # Get members of that band
  OPTIONAL { ?band dbo:member ?member . }
}
```",3,3,4,2,2,2,2,9,0,0,3,0,0.0,0
18,21,val,"Give me the parent of Liza Huber and professional in  and alumnus of the figure known, that is an educational institution, as Saints.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . ?result <http://dbpedia.org/ontology/almaMater> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?profession ?alumnus ?institution
WHERE {
  # Find Liza Huber's parent
  dbr:Liza_Huber dbo:childOf ?parent .

  # Get the professional field of the parent
  ?parent dbo:occupation ?profession .

  # Find an alumnus known as ""Saints""
  ?alumnus rdfs:label ""Saints""@en .
  
  # Ensure this alumnus is from an educational institution
  ?alumnus dbo:almaMater ?institution .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
917,46,val,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of Keʻelikōlani.",SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Mayor of Hawaiian Kingdom
  ?mayor a dbo:Mayor ;
         dbo:country dbr:Hawaii .

  # Child of the mayor who is royalty
  ?child dbo:parent ?mayor ;
         a dbo:RoyalFamilyMember .

  # Parent of this royal child
  ?parent dbo:child ?child .

  # Keʻelikōlani and her father
  dbr:Keʻelikōlani dbo:father ?keelikolanisFather .
  
  # Ensure the child is also a child of Keʻelikōlani's father
  ?child dbo:parent ?keelikolanisFather .

}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
826,42,val,"Give me the spouse of the child of Johann Heinrich Appel and predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Johann Heinrich Appel's child
  ?child dbo:parent dbr:Johann_Heinrich_Appel .
  
  # Spouse of that child
  ?spouse dbo:spouse ?child .

  # Parent of Prince Friedrich of Hesse and by Rhine
  ?parentFriedrich dbo:child dbr:Prince_Friedrich_of_Hesse_and_by_Rhine .

  # Predecessor of the parent of Prince Friedrich
  ?predecessorParent dbo:successor ?parentFriedrich .

  # Successor of Louis II, Grand Duke of Hesse
  ?successorLouisII dbo:predecessor dbr:Louis_II,_Grand_Duke_of_Hesse .

  # Ensure the spouse is also the predecessor and successor
  FILTER (?spouse = ?predecessorParent && ?spouse = ?successorLouisII)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
892,46,val,Give me the landmark at elevation of the award of Anna Ishii and entity in the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v2 <http://dbpedia.org/property/occupation> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?profession
WHERE {
  # Anna Ishii's award and its associated location
  ?award dbo:recipient dbr:Anna_Ishii .
  ?award dbo:location ?location .
  
  # Landmark at the elevation of the award's location
  ?location dbo:elevation ?elevation .
  ?landmark dbo:elevation ?elevation .

  # Enrico Crolla's profession (true self)
  dbr:Enrico_Crolla dbo:profession ?profession .
}
```",5,5,6,3,2,3,3,71,0,0,11,0,0.0,0
124,54,val,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of Battle of Atbara and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander
WHERE {
  # A Field Battery of the Royal Australian Artillery
  ?battery a dbo:MilitaryUnit ;
           dbo:militaryBranch dbr:Royal_Australian_Artillery ;
           dbo:partOf ?war1 .

  # Battle of Atbara
  ?battle dbr:Battle_of_Atbara ;
         dbo:participatedIn ?force2 .

  # Wars that are societal events and military conflicts
  ?war1 a dbo:MilitaryConflict, dbo:SocietalEvent .
  
  # Awardees of the British South Africa Company Medal
  ?awardee dbo:award dbr:British_South_Africa_Company_Medal ;
          dbo:participatedIn ?war2 .

  # Wars that are events and military conflicts and societal events
  ?war2 a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .

  # Commanders of the wars
  ?commander dbo:commanderOf ?war1 .
  ?commander dbo:commanderOf ?war2 .

  # Linking forces in Battle of Atbara to the war
  ?force1 dbo:participatedIn ?war1 ;
          dbo:participatedIn ?battle .

  FILTER(?war1 = ?war2)
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
124,41,val,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of Battle of Atbara and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Define the war that is a societal event and military conflict
  ?war a dbo:MilitaryConflict ;
       dbo:socialEvent true .

  # Find the commander of this war
  ?war dbo:commander ?commander .

  # Identify the Field Battery of Royal Australian Artillery involved in the war
  ?battery a dbo:FieldBattery ;
           dbo:militaryUnit dbr:Royal_Australian_Artillery ;
           dbo:participatedIn ?war .

  # Find the Battle of Atbara and its associated military force
  dbr:Battle_of_Atbara dbo:participatingMilitaryForce ?atbaraForce .
  
  # Ensure this battle is part of the same war
  ?atbaraForce dbo:participatedIn ?war .

  # Frank Rhodes' involvement in a war that matches the criteria
  ?frankWar a dbo:MilitaryConflict ;
            dbo:socialEvent true ;
            dbo:commander ?commander .
  
  dbr:Frank_Rhodes dbo:militaryService ?frankWar .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
773,43,val,"Give me the spouse of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious and parent of Charles the Fat.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Louis the German's spouse
  dbr:Louis_the_German dbo:spouse ?spouse .

  # Child of Louis the Pious and their successor who is royalty
  ?child dbo:parent dbr:Louis_the_Pious .
  ?successor dbo:predecessor ?child .
  ?successor a dbo:Monarch .

  # Parent of both the successor and Charles the Fat
  ?spouse dbo:parent ?successor .
  ?spouse dbo:parent dbr:Charles_the_Fat .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
888,17,val,Give me the awardee of the award of the commander in 2022 Ukrainian eastern counteroffensive and commander in Southern Ukraine campaign.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Southern_Ukraine_campaign> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:dateAwarded ?date .
  ?award dbo:recipient ?awardee .
  
  FILTER (YEAR(?date) = 2022)
  
  OPTIONAL { 
    ?campaign dbo:name ""Ukrainian eastern counteroffensive""@en ;
              dbo:relatedEvent ?event1 .
    ?campaign dbo:name ""Southern Ukraine campaign""@en ;
              dbo:relatedEvent ?event2 .
    
    FILTER EXISTS {
      ?award dbo:relatedEvent ?event1 .
    }
    FILTER EXISTS {
      ?award dbo:relatedEvent ?event2 .
    }
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
839,52,val,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of Matthias Röhr and band of the member of Böhse Onkelz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?band
WHERE {
  # Kevin Russell (musician)
  { 
    ?person rdfs:label ""Kevin Russell (musician)""@en .
    FILTER NOT EXISTS { ?person dbo:musicalArtist [] . }
    OPTIONAL { ?person dbo:band ?band . }
  }

  UNION

  # Matthias Röhr
  {
    ?person rdfs:label ""Matthias Röhr""@en .
    FILTER NOT EXISTS { ?person dbo:musicalArtist [] . }
    OPTIONAL { ?person dbo:band ?band . }
  }

  UNION

  # Members of Böhse Onkelz
  {
    ?member dbo:band <http://dbpedia.org/resource/Böhse_Onkelz> .
    FILTER NOT EXISTS { ?member dbo:musicalArtist [] . }
    OPTIONAL { ?member dbo:band ?band . }
  }
}
ORDER BY ?person",6,7,7,3,3,3,3,71,0,2,1,0.0,0.0,0
839,41,val,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of Böhse Onkelz and band of Matthias Röhr.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandKevin ?bandMatthias
WHERE {
  # Kevin Richard Russell and his band
  dbr:Kevin_Richard_Russell a dbo:MusicalArtist .
  OPTIONAL { 
    ?personKevin dbo:associatedBand ?bandKevin .
    FILTER (?personKevin = dbr:Kevin_Richard_Russell)
  }

  # Böhse Onkelz and Matthias Röhr
  dbr:Böhse_Onkelz a dbo:MusicalBand .
  OPTIONAL {
    ?memberMatthias dbo:associatedBand dbr:Böhse_Onkelz ;
                    foaf:name ""Matthias Röhr"" .
    OPTIONAL { 
      ?personMatthias dbo:associatedBand ?bandMatthias .
      FILTER (?personMatthias = ?memberMatthias)
    }
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
976,44,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as Mehmet Naci Bostancı and office of Mustafa Şentop.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?mayorOffice ?personName WHERE {
  # Define the office of mayor and filter by Turkish nationality
  ?office a dbo:Mayor ;
          dbo:country dbr:Türkiye ;
          dbo:positionTitle ""Mayor""@en .
  
  OPTIONAL { 
    ?office dbo:incumbent ?politician .
    ?politician dbp:nationality dbr:Turkish ;
                rdf:type dbo:Politician ;
                dbo:partyAffiliation dbr:Nation_Alliance_(Turkey) .
    
    # Filter for Mehmet Naci Bostancı
    OPTIONAL { 
      ?politician rdfs:label ""Mehmet Naci Bostancı""@en .
    }
    
    # Filter for Mustafa Şentop
    OPTIONAL {
      ?politician rdfs:label ""Mustafa Şentop""@en .
    }

    # Return the name of the person holding the office
    ?politician rdfs:label ?personName .
  }
}
ORDER BY ?mayorOffice ?personName",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
955,16,val,"Give me the band of the band member, that is a musical artist and an artist, of Street Dogs and band of the writer of Don't Forget Your Roots (album).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberBand ?albumWriterBand
WHERE {
  # Find a member of Street Dogs who is both a musical artist and an artist
  ?member dbo:memberOf dbr:Street_Dogs .
  ?member rdf:type dbo:MusicalArtist .
  ?member rdf:type dbo:Artist .

  # Get the band of this member
  ?member dbo:band ?bandMemberBand .

  # Find the writer of the album ""Don't Forget Your Roots""
  ?album dbo:title ""Don't Forget Your Roots"" ;
         dbo:writer ?writer .

  # Get the band of this writer
  ?writer dbo:band ?albumWriterBand .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
965,52,val,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of the spouse of the parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfGeorge
WHERE {
  # Prince Louis of Battenberg and his child who is royalty
  ?princeLouis a dbo:Person ;
              dbp:spouse ?spouse1 ;
              dbp:child ?royalChild .
  FILTER (?royalChild != ?princeLouis) .

  # Ensure the child is royalty
  ?royalChild a dbo:RoyalFamilyMember .

  # Spouse of the royal child
  ?royalChild dbp:spouse ?spouse2 .

  # Parent of Louise Mountbatten
  ?parentLouise a dbo:Person ;
                dbp:child dbpedia:Louise_Mountbatten .

  # Spouse of the parent of Louise Mountbatten (should be spouse2)
  ?parentLouise dbp:spouse ?spouse1 .

  # Parent of George Mountbatten, 2nd Marquess of Milford Haven
  dbpedia:George_Mountbatten_2nd_Marquess_of_Milford_Haven a dbo:Person ;
                                                         dbp:child ?parentOfGeorge .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
917,43,val,"Give me the child of Kekūanāoʻa and parent of Albert Kamehameha and child of the father of the spouse, that is a royalty, of Leleiohoku I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX wd: <http://www.wikidata.org/entity/>

SELECT ?person WHERE {
  # Kekūanāoʻa's child who is also a parent of Albert Kamehameha
  ?child dbo:parent wd:Q123456 .
  ?child dbo:child wd:Q789012 .

  # Child of the father of Leleiohoku I's spouse
  ?spouse dbo:spouse wd:Q345678 .
  ?father dbo:child ?spouse .
  ?person dbo:child ?father .

  # Ensure the person is royalty
  ?person dbo:royalty true .

  # Ensure the person matches both conditions
  FILTER (?child = ?person)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
715,40,val,"Give me the commander in Spanish Civil War and commander in the force, that is a military conflict, of the native of Morocco and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commanderName
WHERE {
  # Find the commander in the Spanish Civil War
  ?civilWarCommander dbo:role ""Commander""@en .
  ?civilWarCommander dbo:conflict dbr:Spanish_Civil_War .

  # Find a military conflict involving a native of Morocco who was also a leader of the Ministry of the Air (Spain)
  ?militaryConflict dbo:commander ?moroccanLeader .
  ?moroccanLeader dbo:nationality dbr:Morocco .
  ?moroccanLeader dbo:position ""Minister of the Air""@en ;
                  dbo:country dbr:Spain .

  # Ensure both roles are held by the same individual
  FILTER (?civilWarCommander = ?moroccanLeader)

  # Bind the name to a variable for output
  ?commanderName rdfs:label ?name .
  FILTER (lang(?name) = 'en')
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?name), "" "", ""_""))) AS ?civilWarCommander)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
102,17,val,"Give me the native of the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury and manager of Sheffield United W.F.C..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sheffield_United_W.F.C.> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace
WHERE {
  ?person a dbo:Athlete ;
          dbo:residence dbr:Dewsbury ;
          dbo:managerOf dbr:Sheffield_United_Women's_Football_Club .
  
  ?person dbo:nativePlace ?nativePlace .

  FILTER (STRSTARTS(STR(?nativePlace), ""http://dbpedia.org/resource/"") &&
          EXISTS { ?nativePlace a dbo:Settlement } &&
          EXISTS { ?nativePlace dbo:country dbr:England })
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
987,50,val,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor ?birthPlaceLabel WHERE {
  # Find a film featuring Emir Hadžihafizbegović
  ?film dbo:starring dbr:Emir_Hadžihafizbegović .
  
  # Identify an actor from that film
  ?film dbo:starring ?actor .

  # Get the birthplace of the actor
  ?actor dbp:birthPlace ?birthPlace .

  # Ensure the birthplace is in a country within the CET region
  ?birthPlace dbo:country dbr:CET_countries .
  
  # Labels for readability
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

### Explanation:
- **PREFIX**: Define prefixes for DBpedia ontology and properties.
- **SELECT DISTINCT**: Choose distinct actors and their birthplace labels to avoid duplicates.
- **WHERE Clause**:
  - Identify films starring Emir Hadžihafizbegović.
  - Find other actors in those films.
  - Retrieve the birthplace of these actors.
  - Filter birthplaces to ensure they are in countries within the CET region.
- **SERVICE wikibase:label**: Fetch labels for better readability.",5,7,6,3,2,3,3,71,0,0,18,0,0.0,0
465,41,val,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of Renée of France and successor of the child of Alfonso I d'Este.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseName
WHERE {
  # Ferdinand I, Holy Roman Emperor
  dbr:Ferdinand_I,_Holy_Roman_Emperor dbo:child ?child .
  
  # The child is royalty
  ?child a dbo:Monarch .

  # Successor of Renée of France
  ?child dbo:succeededBy ?successor1 .
  ?successor1 rdfs:label ""Renée of France""@en .

  # Successor of the child of Alfonso I d'Este
  ?child dbo:succeededBy ?successor2 .
  ?successor2 dbo:parent ?alfonsoChild .
  ?alfonsoChild dbo:parent dbr:Alfonso_I_d%27Este .

  # Find the spouse of this child
  ?child dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseName .
  
  FILTER(LANG(?spouseName) = ""en"")
}
ORDER BY ?spouseName",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
987,47,val,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorBirthPlace ?bandBirthPlace
WHERE {
  # Find the film with Emir Hadžihafizbegović
  ?film dbo:starring dbr:Emir_Hadžihafizbegović .
  
  # Get the actor of this film
  ?film dbo:actor ?actor .

  # Get the birthplace of the actor
  ?actor dbp:birthPlace ?actorBirthPlace .

  # Find the band associated with Šako Polumenta as an artist and musical artist
  ?band dbo:member dbr:Šako_Polumenta ;
        a dbo:Band .

  # Get the birthplace of the band (assuming it's represented similarly to individuals)
  OPTIONAL { 
    ?band dbp:birthPlace ?bandBirthPlace .
  }
}
```",5,8,6,3,2,3,3,71,0,0,4,0,0.0,0
839,45,val,"Give me the band of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician and band of Peter Schorowsky.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandOfKevinRussell ?bandOfBand ?professionalInMusician ?bandOfPeterSchorowsky
WHERE {
  # Kevin Russell's band
  ?kevinRussell dbo:associatedBand ?bandOfKevinRussell .
  
  # Band of the band that is a musical artist associated with Kevin Russell
  OPTIONAL {
    ?bandOfKevinRussell dbp:genre ""Musical Artist"" .
    ?bandOfKevinRussell dbo:associatedBand ?bandOfBand .
  }
  
  # Professional in Musician related to the band of Kevin Russell
  OPTIONAL {
    ?professionalInMusician dbo:profession ""Musician"" ;
                           dbo:worksFor ?bandOfKevinRussell .
  }

  # Peter Schorowsky's band
  ?peterSchorowsky dbo:associatedBand ?bandOfPeterSchorowsky .
}
```",5,6,6,3,3,3,3,71,1,55859,0,1.790189760114572e-05,1.0,3.5803154257890115e-05
874,17,val,"Give me the band of Manfred Mann (musician) and band of the band member of the band, that is an organisation, of Mark Read (singer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Manfred_Mann_(musician)> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?manfredMannBand ?markReadBand
WHERE {
  # Find the band associated with Manfred Mann
  dbr:Manfred_Mann (dbo:band) ?manfredMannBand .

  # Find Mark Read's band and ensure it is an organization
  dbr:Mark_Read dbo:musicalGroup ?markReadBand .
  ?markReadBand a dbo:Organization .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
935,16,val,Give me the death place of the awardee of Sitara-i-Imtiaz and headquarter of the office of Sanaullah Khan Zehri.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/location> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?headquarterLocation
WHERE {
  # Find death place of Sitara-i-Imtiaz awardees
  {
    SELECT DISTINCT ?person ?deathPlace WHERE {
      ?person dbo:award dbr:Sitara-i-Imtiaz .
      OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
    }
  }

  # Find headquarter location of Sanaullah Khan Zehri's office
  {
    SELECT DISTINCT ?office ?headquarterLocation WHERE {
      ?office dbo:headOf dbr:Sanaullah_Khan_Zehri .
      OPTIONAL { ?office dbo:location ?headquarterLocation . }
    }
  }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
839,43,val,"Give me the band of Matthias Röhr and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of Kevin Russell (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?bandMatthiasRöhr ?bandPeterSchorowsky ?bandKevinRussell
WHERE {
  # Band of Matthias Röhr
  ?person1 foaf:name ""Matthias Röhr""@en .
  ?person1 dbo:memberOfBand ?bandMatthiasRöhr .

  # Group that is also a band for Peter Schorowsky
  ?person2 foaf:name ""Peter Schorowsky""@en .
  ?group rdf:type dbo:MusicalGroup ;
         dbo:bandMember ?person2 .
  OPTIONAL { ?group dbo:memberOfBand ?bandPeterSchorowsky . }
  
  # Band of Kevin Russell (musician)
  ?person3 foaf:name ""Kevin Russell""^^xsd:string .
  ?person3 dbo:occupation dbp:musician ;
           dbo:memberOfBand ?bandKevinRussell .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
987,49,val,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/timeZone> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country ?birthPlace
WHERE {
  # Find the time zone associated with Canicosa de la Sierra
  ?timeZone dbo:location dbr:Canicosa_de_la_Sierra .
  
  # Find the sports event in this time zone
  ?sportsEvent dbo:timeZone ?timeZone ;
               a dbo:SportsEvent .

  # Find the region of this country
  ?region dbo:country ?country ;
          dbo:timeZone ?timeZone .

  # Find Šako Polumenta's band
  dbr:Šako_Polumenta dbo:band dbr:Band_Name ; # Replace Band_Name with actual resource if known

  # Ensure the band is an artist and a musical artist
  dbr:Band_Name a dbo:Artist, dbo:MusicalArtist .

  # Find the birthplace of the band
  OPTIONAL { dbr:Band_Name dbp:birthPlace ?birthPlace }
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
216,40,val,"Give me the player in Mario Ivanković and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and team of Ognjen Vukojević.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player ?coach ?organization ?teamOgnjen
WHERE {
  # Mario Ivanković as a player
  dbr:Mario_Ivanković dbo:position dbr:Soccer_player .
  
  # Coach of Mario Ivanković
  ?player dbo:playsFor ?club .
  ?club dbo:coach ?coach .

  # Organization is a soccer club and related to Croatia U21
  ?organization rdf:type dbo:Soccer_club .
  ?coach dbo:worksFor ?organization .
  ?organization dbo:team dbr:Croatia_U21 .

  # Ognjen Vukojević's team
  dbr:Ognjen_Vukojević dbo:playsFor ?teamOgnjen .
  
  FILTER (?player = dbr:Mario_Ivanković)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
433,50,val,"Give me the professional in the profession of Bob Marley and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist
WHERE {
  # Step 1: Find Bob Marley's profession
  dbr:Bob_Marley dbo:profession ?bobProfession .

  # Step 2: Find a professional in the same profession as Bob Marley
  ?professional dbo:profession ?bobProfession .
  
  # Step 3: Find an associated musical artist of this professional
  ?associatedArtist1 dbo:associatedMusicalArtist ?professional ;
                    rdf:type dbo:Musician .

  # Step 4: Ensure this associated musical artist is also a general artist and a musician
  ?associatedArtist1 rdf:type dbo:Artist .
  
  # Step 5: Find another associated musical artist of this second artist
  ?finalArtist dbo:associatedMusicalArtist ?associatedArtist1 ;
               rdf:type dbo:Musician .

  # Ensure the final artist is also an artist and a musician
  ?finalArtist rdf:type dbo:Artist .

  # Additional condition to ensure Ornette Coleman's involvement
  ?finalArtist dbo:associatedMusicalArtist dbr:Ornette_Coleman .
}
```",5,9,6,3,2,3,3,71,0,0,44,0,0.0,0
267,17,val,Give me the person born on the birth date of the reference to Dan Cathy and coach of Iran national football team.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Iran_national_football_team> <http://dbpedia.org/ontology/coach> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Get Dan Cathy's birth date
  dbr:Dan_Cathy dbo:birthday ?danCathyBirthDate .

  # Find the coach of Iran national football team
  dbr:Iran_national_football_team dbo:coach ?coach .
  
  # Find a person with the same birth date as Dan Cathy and is also the coach
  ?person dbo:birthday ?birthDate .
  FILTER (?birthDate = ?danCathyBirthDate)
  FILTER (?person = ?coach)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
892,42,val,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of 58.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?professionEntity ?administrationEntity ?landmark
WHERE {
  # Henri Crolla's profession-related entities
  ?person rdfs:label ""Henri Crolla""@en .
  ?person dbo:occupation ?professionEntity .

  # Administration entity that is Italian and a region, settlement, administrative region
  ?administrationEntity rdf:type dbo:Region ;
                       dbp:country dbr:Italy ;
                       dbo:administrativeRegion ?region ;
                       dbo:settlement ?settlement ;
                       dbo:partyAffiliation dbr:Democratic_Party_(Italy) .

  # Landmark at elevation of 58
  ?landmark dbo:elevation ""58""^^xsd:int .
  
  # Linking administration entity to the landmark (assuming a possible relationship)
  OPTIONAL { ?administrationEntity dbo:hasLandmark ?landmark }
}
```",5,9,6,2,3,3,3,71,0,0,2,0,0.0,0
926,46,val,Give me the successor of the child of Ahmed III and father of the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor
WHERE {
  # Step 1: Find Neşerek Kadın's spouse
  ?spouse a dbo:Spouse ;
          dbo:spouse ?neserekkadin .
  
  # Step 2: Find the father of Neşerek Kadın's spouse
  ?fatherOfSpouse dbo:child ?spouse .

  # Step 3: Find the grandfather (father of the father)
  ?grandfather dbo:child ?fatherOfSpouse .

  # Step 4: Identify Ahmed III's child who is also this grandfather
  ?ahmedChild dbo:child ?ahmedIII ;
              rdf:type dbo:Person .
  
  ?ahmedIII rdfs:label ""Ahmed III""@en .

  FILTER(?grandfather = ?ahmedChild)

  # Step 5: Find the successor of this individual
  ?successor dbp:predecessor ?ahmedChild .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
443,20,val,"Give me the birthplace of Carl Larsson and landmark at elevation of 28 and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?carlLarssonBirthplace ?landmark ?personBirthplace WHERE {
  # Carl Larsson's birthplace
  dbr:C._L.__Carl_Larsson dbo:birthPlace ?carlLarssonBirthplace .

  # Landmark at elevation 28
  ?landmark a dbo:Lighthouse ;
            dbp:elevation ?elevation .
  FILTER (?elevation = ""28""^^xsd:string)

  # Person born on November 20, 1949 who is both a musical artist and an artist
  ?person dbo:birthDate ?birthDate ;
          rdf:type dbo:MusicalArtist , dbo:Artist .
  FILTER (YEAR(?birthDate) = 1949 && MONTH(?birthDate) = 11 && DAY(?birthDate) = 20)
  
  # Birthplace of this person
  ?person dbo:birthPlace ?personBirthplace .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
216,41,val,"Give me the team of Ognjen Vukojević and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of Croatia national under-21 football team.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?team1 ?team2
WHERE {
  ?coach rdf:type dbo:SoccerPlayer .
  ?coach rdf:type dbo:SportsManager .
  ?coach rdf:type dbo:SoccerManager .
  
  ?coach dbo:coach dbr:Bosnia_and_Herzegovina_national_under-18_football_team .
  ?coach dbo:coach dbr:Croatia_national_under-21_football_team .

  FILTER(?coach = dbr:Ognjen_Vukojević)

  BIND(dbr:Bosnia_and_Herzegovina_national_under-18_football_team AS ?team1)
  BIND(dbr:Croatia_national_under-21_football_team AS ?team2)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
826,44,val,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor
WHERE {
  # Prince Friedrich of Hesse and by Rhine's parent
  ?friedrichParent dbo:child dbr:Friedrich_of_Hesse_and_by_Rhine .
  
  # Predecessor of the parent
  ?parentPredecessor dbo:succesor ?friedrichParent .

  # Louis I, Grand Duke of Hesse and his royal child
  ?louisChild dbo:childOf dbr:Louis_I,_Grand_Duke_of_Hesse ;
              a dbo:RoyalFamilyMember .
  
  # Successor of the royal child
  ?successor dbo:succesor ?louisChild .

  # Spouse relationship with Anna Magdalena Appel
  ?predecessor dbo:spouse dbr:Anna_Magdalena_Appel ;
               owl:sameAs ?parentPredecessor ;
               owl:sameAs ?successor .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
456,55,val,"Give me the professional in the alter ego of The Shadow and band of the band, that is a musical artist, of Dean Brody and spouse of the actor of Pacific Drive.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?band ?spouse
WHERE {
  # Find the alter ego of The Shadow
  ?shadowAlterEgo dbo:alterEgo ""The Shadow""@en .
  
  # Find Dean Brody's band
  dbr:Dean_Brody dbo:memberOf ?band .
  
  # Find the actor from Pacific Drive and their spouse
  ?pacificDriveActor dbo:title ""Pacific Drive""@en ;
                    dbo:actor ?actor .
  ?actor dbo:spouse ?spouse .

  # Link the alter ego to a professional identity
  ?shadowAlterEgo dbo:profession ?professional .
  
  # Ensure the professional is a musical artist
  FILTER(?professional = dbr:Musical_artist)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
507,42,val,Give me the spouse of the person born as Anne Voase Coates and director of Entertaining Mr Sloane (film) and professional in the profession of Guy Ferland.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Anne Voase Coates as director of Entertaining Mr Sloane
  dbr:Anne_Voase_Coates dbo:directorOf dbr:Entertaining_Mr_Sloane .
  
  # Spouse relationship
  dbr:Anne_Voase_Coates dbo:spouse ?spouse .

  OPTIONAL {
    # Profession related to Guy Ferland (assuming a similar profession)
    ?spouse dbo:profession ?profession .
    FILTER regex(?profession, ""Guy Ferland"", ""i"")
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
102,16,val,"Give me the manager of the player in Ellie Roebuck and native of the residence, that is English and a settlement, of Peter Finbow.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?v2 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName WHERE {
  # Find Ellie Roebuck's manager
  dbr:E_Roebuck dbo:team ?team .
  ?team dbo:coach ?manager .

  # Get the name of the manager
  ?manager rdfs:label ?managerName .
  
  FILTER (lang(?managerName) = ""en"")

  # Find Peter Finbow's residence and ensure it is an English settlement
  dbr:P_Finbow dbp:hometown ?residence .
  ?residence dbo:country dbr:England ;
             a dbo:Settlement .

}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
826,43,val,"Give me the spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?successor
WHERE {
  # Spouse of Anna Magdalena Bach
  dbr:Anna_Magdalena_Bach dbo:spouse dbr:Johann_Sebastian_Bach .
  
  # Child of Johann Sebastian Bach who is royalty
  ?child dbo:parent dbr:Johann_Sebastian_Bach ;
         a dbo:RoyalFamilyMember .

  # Successor of this child that is also royalty
  ?successor dbo:succeededBy ?child ;
             a dbo:RoyalFamilyMember .

  # This successor must be related to Louis I and precede Louis IV, Grand Duke of Hesse
  ?successor dbo:predecessor dbr:Ludwig_IV,_Grand_Duke_of_Hesse ;
             dbo:succeededBy dbr:Ludwig_I,_King_of_Bavaria .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
36,19,val,"Give me the person born in 1971 and person born as Ayo Makun and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person1971 ?ayoMakun ?actorOfFilm
WHERE {
  # Person born in 1971
  ?person1971 dbo:birthYear ""1971""^^xsd:gYear .
  
  # Ayo Makun
  ?ayoMakun foaf:name ""Ayo Makun""@en .

  # Lepacious Bose's claim to fame (a film)
  dbr:Lepacious_Bose dbo:claimToFame ?film .
  
  # Actor of the film
  ?actorOfFilm dbo:starring ?film .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
192,16,val,"Give me the child of the child of Stephen V of Hungary and spouse of the spouse, that is a royalty, of Charles Martel of Anjou.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?grandchild ?spouseOfSpouse
WHERE {
  # Stephen V of Hungary's child
  ?stephenVChild dbo:parent dbr:Stephen_V_of_Hungary .
  
  # Grandchild (child of Stephen V's child)
  ?grandchild dbo:parent ?stephenVChild .

  # Charles Martel of Anjou's spouse
  ?charlesMartelSpouse dbo:spouse dbr:Charles_Martel_of_Anjou .

  # Spouse of Charles Martel's spouse
  ?spouseOfSpouse dbo:spouse ?charlesMartelSpouse .

  # Ensure the grandchild is a royalty
  ?grandchild rdf:type dbo:RoyalFamilyMember .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
456,41,val,Give me the spouse of the actor of Pacific Drive and professional in the alter ego of The Shadow and band of Alan Doyle.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse
WHERE {
  # Actor of ""Pacific Drive""
  ?actor dbo:film dbr:Pacific_Drive .
  
  # Professional in the alter ego of ""The Shadow""
  ?professional dbo:alterEgo dbr:The_Shadow .

  # Band member of Alan Doyle
  ?bandMember dbo:member dbr:GreatBigSea .

  # Spouse relationships
  ?actor dbo:spouse ?spouse .
  OPTIONAL { ?professional dbo:spouse ?spouse . }
  OPTIONAL { ?bandMember dbo:spouse ?spouse . }

  # Ensure Alan Doyle is the band member
  ?bandMember dbo:name dbr:Alan_Doyle .

}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
417,43,val,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and spouse of Princess Caroline-Mathilde of Denmark and child of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Leader of Colony of Greenland (King Christian VII)
  dbr:Christian_VII_of_Denmark dbo:leaderOf dbr:Colony_of_Greenland .

  # Father of the leader (Frederick V)
  dbr:Christian_VII_of_Denmark dbo:father dbr:Frederick_V_of_Denmark .

  # Child of Frederick V who is royalty
  ?child dbo:parent dbr:Frederick_V_of_Denmark .
  ?child a dbo:Monarch .

  # Spouse of Princess Caroline-Mathilde
  ?child dbo:spouse dbr:Princess_Caroline_Matilda_of_Denmark .

  # Child of Alexandrine of Mecklenburg-Schwerin
  ?child dbo:parent dbr:Alexandrine_of_Mecklenburg-Schwerin .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
456,52,val,"Give me the professional in the alter ego of The Shadow and band of Alan Doyle and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?band ?spouse
WHERE {
  # Lamont Cranston as the alter ego of The Shadow
  dbr:Lamont_Cranston dbo:alterEgoOf dbr:The_Shadow .

  # Alan Doyle and his band
  dbr:Alan_Doyle dbo:memberOf dbr:Great_Big_Sea .
  
  # Ross Newton's works (movies or TV shows)
  ?work dbo:starring dbr:Ross_Newton ;
        a ?typeOfWork .
  
  # Actor who starred with Ross Newton and is married to the professional
  ?actor dbo:starring ?work ;
         dbo:spouse ?professional .

  FILTER(?typeOfWork IN (dbr:Film, dbr:TelevisionShow))
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
579,16,val,"Give me the person born as the birth name of Jane Percy, Duchess of Northumberland and native of the residence, that is English and a settlement, of Alan Clyne.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Jane Percy's birth name
  dbr:Jane_Percy,_Duchess_of_Northumberland dbo:birthName ?birthName .

  # Find Alan Clyne's native residence, which is an English settlement
  dbr:Alan_Clyne dbo:nativePlace ?residence .
  ?residence a dbo:Settlement ;
             dbp:country ""England""@en .

  # Match the person with Jane Percy's birth name and Alan Clyne's residence
  ?person dbo:birthName ?birthName ;
          dbo:nativePlace ?residence .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
791,52,val,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of the child of Emperor Takakura and father of Emperor Go-Toba.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse
WHERE {
  # Find Emperor Takakura's predecessor (Emperor Ichijō)
  dbr:Takakura dbr:predecessor dbr:Ichijō .
  
  # Find Emperor Antoku, child of Emperor Takakura
  dbr:Takakura dbo:child dbr:Antoku .

  # Find Emperor Tsuchimikado, father of Emperor Go-Toba
  dbr:Tsuchimikado dbo:child dbr:Go_Toba .

  # Find spouse of Emperor Ichijō (Emperor Takakura's predecessor)
  dbr:Ichijō dbo:spouse ?ichijoSpouse .
  
  # Find the spouse of that spouse who is royalty
  ?ichijoSpouse dbo:spouse ?spouseOfSpouse .
  FILTER EXISTS { ?spouseOfSpouse a dbo:Monarch } # Assuming 'Monarch' represents royalty

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
433,42,val,"Give me the associated musical artist of Bill Evans and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and professional in the profession of Bob Marley.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?billEvansArtist ?paulChambersArtist ?similarToBobMarleyArtist
WHERE {
  # Associated musical artist of Bill Evans
  OPTIONAL {
    dbr:Bill_Evans dbo:associatedMusicalArtist ?billEvansArtist .
  }

  # Associated musical artist of Paul Laurence Dunbar Chambers Jr.
  OPTIONAL {
    dbr:Paul_Laurence_Dunbar_Chambers_Jr. dbo:associatedMusicalArtist ?paulChambersArtist .
  }
  
  # Person born as a musical artist and an artist like Bob Marley
  OPTIONAL {
    ?similarToBobMarleyArtist a dbo:Musician ;
                             dbo:profession dbr:Singer-songwriter ;
                             dbo:birthPlace ?place ;
                             dbo:associatedMusicalArtist ?artist .
    FILTER EXISTS { ?similarToBobMarleyArtist dbo:artisticRole dbr:Visual_artist }
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
926,43,val,Give me the successor of the child of the spouse of Şermi Kadın and child of Ahmed III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Şermi Kadın's spouse
  dbr:Şermi_Kadın dbo:spouse dbr:?Spouse .
  
  # Child of Şermi Kadın's spouse
  dbr:?Spouse dbo:child dbr:?Child .

  # Mustafa III is the child of Ahmed III and father of Mahmud II
  dbr:Mustafa_III dbo:father dbr:Mahmud_II ;
                 dbo:parent dbr:Ahmed_III .

  # Check if the child of Şermi Kadın's spouse is Mustafa III
  FILTER (?Child = dbr:Mustafa_III)

  # Find the successor of Mustafa III
  dbr:Mustafa_III dbo:successor ?successor .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
158,17,val,"Give me the entity in France and party of the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v0 <http://dbpedia.org/ontology/successor> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?successor ?party
WHERE {
  ?predecessor a dbo:PrimeMinister ;
               dbo:country dbr:France ;
               dbo:officeHolder true ;
               dbo:politician true ;
               dbo:dateOfDeath ""1945-09-15""^^xsd:date .

  ?successor a dbo:PrimeMinister ;
             dbo:country dbr:France ;
             dbo:officeHolder true ;
             dbo:politician true ;
             dbo:succeededBy ?predecessor .

  OPTIONAL { ?successor dbo:party ?party }
}
```",4,9,5,3,2,3,2,20,0,0,1,0,0.0,0
527,16,val,"Give me the author of the work, that is a work and a book, of Tom Baker and actor of the movie, that is a work and English and a television show, with Bernard Bresslaw.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/author> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?author
WHERE {
  # Find the book authored by Tom Baker
  ?book a dbo:Book ;
        dbo:author ?author .
  
  FILTER (?author = dbr:Tom_Baker)

  # Ensure this book is also part of a television show in English with Bernard Bresslaw
  ?tvShow a dbo:TelevisionSeries ;
          dbo:language ""English""^^xsd:string ;
          dbo:actor ?actor .

  FILTER (?actor = dbr:Bernard_Bresslaw)
  
  # The work (book) should be related to the television show
  ?work rdfs:seeAlso ?tvShow .
  ?work rdfs:seeAlso ?book .
}
```",4,9,5,2,2,3,2,20,0,0,1,0,0.0,0
465,44,val,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Anne of Brittany's child who is royalty
  ?anneChild dbo:child dbr:Anne_of_Brittany .
  ?anneChild rdf:type dbo:Monarch .

  # Ercole II d'Este's successor
  ?ercoleSuccessor dbo:successorOf dbr:Ercole_II_d%27Este_Duke_of_Ferrara .

  # Ferdinand I's child who is royalty
  ?ferdinandChild dbo:child dbr:Ferdinand_I,_Holy_Roman_Emperor .
  ?ferdinandChild rdf:type dbo:Monarch .

  # The successor of Anne's child and Ercole II's successor must be the same person
  ?anneChild dbo:successorOf ?successor .
  FILTER (?successor = ?ercoleSuccessor)

  # This successor is also the spouse of Ferdinand I's child
  ?ferdinandChild dbo:spouse ?successor .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
47,50,val,"Give me the office of the awardee of Padma Vibhushan and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?padmaOffice ?mantuAwardOffice
WHERE {
  # Find office of Padma Vibhushan awardees
  ?person dbo:award dbr:Padma_Vibhushan .
  ?person dbo:office ?padmaOffice .

  # Find Mantu Ghosh's award and his associated office
  dbr:Mantu_Ghosh dbo:award ?mantuAward .
  OPTIONAL { 
    ?mantuPerson dbo:award ?mantuAward .
    ?mantuPerson dbo:office ?mantuAwardOffice .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
124,43,val,"Give me the commander in Mahdist War and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and military force of Battle of Atbara.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?militaryForce ?event ?awardee
WHERE {
  # Mahdist War commander and military force
  ?mahdistWar dbo:commander ?commander .
  ?mahdistWar dbo:militaryForce ?militaryForce .

  # Mahdist War as an event, societal event, and military conflict
  ?mahdistWar a dbo:MilitaryConflict ;
              a dbo:SocietalEvent ;
              a dbo:Event .

  # Awardee of British South Africa Company Medal
  ?awardee dbo:award dbr:British_South_Africa_Company_Medal .

  # Military force in Battle of Atbara
  ?battleOfAtbara dbo:militaryForce ?militaryForce .
  ?battleOfAtbara a dbo:MilitaryConflict .

  # Ensure the military force is common between Mahdist War and Battle of Atbara
  FILTER(?mahdistWar != ?battleOfAtbara)
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
933,43,val,Give me the reference to the birth name of the professional in Musician and band of The Ramong Sound and band of Mike Elliott (saxophonist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthName
WHERE {
  # For The Ramones members
  {
    ?member dbo:bandMemberOf dbr:The_Ramones .
    ?member foaf:name ?name .
    OPTIONAL { ?member foaf:givenName ?givenName . }
    OPTIONAL { ?member foaf:familyName ?familyName . }
    BIND(CONCAT(?givenName, "" "", ?familyName) AS ?birthName)
  }

  UNION

  # For Mike Elliott's saxophonist association
  {
    ?saxophonist dbo:instrument dbr:Saxophone .
    ?saxophonist foaf:name ?name .
    OPTIONAL { ?saxophonist foaf:givenName ?givenName . }
    OPTIONAL { ?saxophonist foaf:familyName ?familyName . }
    FILTER(?name = ""Mike Elliott"")
    BIND(CONCAT(?givenName, "" "", ?familyName) AS ?birthName)
  }

  # Filter out null birth names
  FILTER(?birthName != """")
}
ORDER BY ?birthName",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
453,7,val,"Give me the religion of the birth place, that is a country, of William Denning and religion of John Henry Newman.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_Henry_Newman> <http://dbpedia.org/ontology/religion> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Denning> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/religion> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>

SELECT ?person ?birthPlace ?religion
WHERE {
  VALUES (?person ?label) { 
    (<http://dbpedia.org/resource/William_Denning> ""William Denning"")
    (<http://dbpedia.org/resource/John_Henry_Newman> ""John Henry Newman"")
  }
  
  ?person dbo:birthPlace ?birthPlace .
  
  FILTER EXISTS {
    ?birthPlace rdf:type owl:Class .
  }

  OPTIONAL { 
    ?birthPlace dbo:religion ?religion .
  }
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
582,47,val,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of Hirotaka Sugawara.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player ?residence WHERE {
  # Find Kazuaki Nagasawa's child
  ?child dbo:parent ?kazuakiNagasawa .
  ?kazuakiNagasawa foaf:name ""Kazuaki Nagasawa"" .

  # Identify the father of that child who is an athlete, soccer manager, and sports manager
  ?child dbo:parent ?player .
  ?player foaf:name ?playerName .
  ?player dbo:occupation ?occupation1 .
  ?player dbo:occupation ?occupation2 .
  ?player dbo:occupation ?occupation3 .

  FILTER (
    (?occupation1 = <http://dbpedia.org/ontology/Athlete> ||
     ?occupation2 = <http://dbpedia.org/ontology/Athlete> ||
     ?occupation3 = <http://dbpedia.org/ontology/Athlete>) &&
    (?occupation1 = <http://dbpedia.org/ontology/SoccerManager> ||
     ?occupation2 = <http://dbpedia.org/ontology/SoccerManager> ||
     ?occupation3 = <http://dbpedia.org/ontology/SoccerManager>) &&
    (?occupation1 = <http://dbpedia.org/ontology/SportsManager> ||
     ?occupation2 = <http://dbpedia.org/ontology/SportsManager> ||
     ?occupation3 = <http://dbpedia.org/ontology/SportsManager>)
  )

  # Retrieve Hirotaka Sugawara's residence
  ?sugawara foaf:name ""Hirotaka Sugawara"" .
  ?sugawara dbo:residence ?residence .

}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
445,47,val,"Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the residence, that is a country, of Anna Sharkey.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace ?countryOfResidence
WHERE {
  # Find the awardee associated with the establishment date of 1820-03-10
  ?awardee dbo:awardDate ?date .
  FILTER (STR(?date) = ""1820-03-10"") .

  # Get the death place of this awardee
  ?awardee dbo:deathPlace ?deathPlace .

  # Find Anna Sharkey's residence and ensure it is a country
  dbr:Anna_Sharkey dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
  BIND(?residence AS ?countryOfResidence)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
417,55,val,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of the father of Frederick IX of Denmark.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse
WHERE {
  # Count Ingolf of Rosenborg's parent who is royalty
  ?countIngolf dbo:parent ?royalParent .
  ?royalParent a dbo:Monarch .

  # Spouse of that royal parent
  ?royalParent dbp:spouse ?spouse .

  # Frederick Francis III, Grand Duke of Mecklenburg-Schwerin's child who is royalty
  ?frederickFrancisIII dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .

  # Child of that royal child
  ?royalChild dbp:child ?grandChild .

  # Father of Frederick IX of Denmark
  ?frederickIX dbo:father ?fatherFrederickIX .

  # Ensure the spouse is connected through these relationships
  FILTER(?spouse = ?grandChild)
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
417,46,val,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the father of Frederick IX of Denmark.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName
WHERE {
  # Knud, Hereditary Prince of Denmark
  ?knud a dbo:Person ;
        foaf:name ""Knud, Hereditary Prince of Denmark""@en .
  
  # Frederick IX's father
  ?frederickIX a dbo:Person ;
               foaf:name ""Frederick VIII of Denmark""@en .
  
  # Child of Knud and also child of Frederick VIII
  ?child a dbo:Person ;
         dbo:parent ?knud ;
         dbo:parent ?fatherOfFrederickIX .

  # Ensure the father is indeed Frederick VIII
  FILTER (?fatherOfFrederickIX = ?frederickIX)

  # Parent of this child who must be royalty
  ?royalParent a dbo:Person, dbo:Monarch ;
               dbo:child ?child .
  
  # Spouse of the royal parent
  ?spouse a dbo:Spouse ;
          dbo:spouse ?royalParent .

  # Get spouse's name
  ?spouse foaf:name ?spouseName .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
987,43,val,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of Dado Polumenta and entity in Montenegro.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?film ?emirBirthPlace ?dadoBirthPlace ?montenegroEntity
WHERE {
  # Emir Hadžihafizbegović's birthplace
  dbr:Emir_Hadžihafizi-begović dbo:birthPlace ?emirBirthPlace .

  # Dado Polumenta's birthplace
  dbr:Dado_Polumenta dbo:birthPlace ?dadoBirthPlace .

  # Films/shows they both acted in
  ?film dbo:starring dbr:Emir_Hadžihafizi-begović .
  ?film dbo:starring dbr:Dado_Polumenta .

  # Ensure the film/show is related to Montenegro
  OPTIONAL {
    ?film dbp:country dbr:Montenegro .
    ?montenegroEntity a dbo:Film ;
                     dbp:country dbr:Montenegro .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
917,42,val,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of the father of Kamehameha IV and child of Kekūanāoʻa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Kamehameha IV's father
  dbr:Kamehameha_IV dbo:father dbr:King_Kamāmalu .

  # Find children of King Kamāmalu who are royalty
  dbr:King_Kamāmalu dbo:child ?child .
  ?child a dbo:Monarch .

  # Ensure the child is also related to Kekūanāoʻa
  OPTIONAL { ?child dbo:spouseOrChild dbr:Kekūanāoʻa . }
}
```

This query does the following:

- Identifies **King Kamāmalu** as the father of **Kamehameha IV**.
- Finds children of **King Kamāmalu** who are classified as a `Monarch` (indicating royalty).
- Ensures these children have some relationship with **Kekūanāoʻa**, either as a spouse or child.",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
715,48,val,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  ?conflict dbo:commander ?commander .
  ?commander dbo:nationality dbr:Morocco .

  ?office dbo:leader ?commander ;
          a dbo:GovernmentAgency, dbo:Organization .

  ?office dbo:employee dbr:C_Franco_Iribarnegaray .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
47,48,val,"Give me the office of the awardee of Padma Vibhushan and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?padmaVibhushanOffice ?commanderOffice
WHERE {
  # Find individuals who have received the Padma Vibhushan award
  ?person dbo:award dbr:Padma_Vibhushan .
  
  # Get the office held by this awardee
  OPTIONAL { 
    ?person dbo:office ?padmaVibhushanOffice .
  }
  
  # Find commanders involved in Operation Green Hunt who are politicians
  ?commander dbo:occupation dbr:Politician ;
             dbo:participatedIn dbr:Operation_Green_Hunt .
  
  # Get the office of administration for this commander
  OPTIONAL {
    ?commander dbo:office ?commanderOffice .
  }
}
```",5,6,6,3,2,3,3,71,0,0,22,0,0.0,0
791,54,val,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and spouse of the spouse, that is a royalty, of Emperor Takakura and father of Emperor Go-Toba.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor
WHERE {
  # Step 1: Identify Emperor Go-Shirakawa's child
  ?goShirakawaChild dbo:childOf dbr:Emperor_Go-Shirakawa .
  
  # Step 2: Find the grandchild of Emperor Go-Shirakawa
  ?grandchild dbo:childOf ?goShirakawaChild .

  # Step 3: Ensure this grandchild is an office holder and a royalty
  ?grandchild rdf:type dbo:OfficeHolder ;
              rdf:type dbo:Royalty .
  
  # Step 4a: Identify Emperor Takakura's spouse who is a royalty
  ?takakuraSpouse dbo:spouse dbr:Emperor_Takakura ;
                  rdf:type dbo:Royalty .

  # Step 4b: Find the spouse of Emperor Takakura's spouse
  ?spouseOfSpouse dbo:spouse ?takakuraSpouse .
  
  # Step 5: Ensure this person is also the father of Emperor Go-Toba
  dbr:Emperor_Go-Toba dbo:father ?spouseOfSpouse .

  # Find the predecessor of the grandchild who matches all conditions
  ?predecessor dbo:predecessor ?grandchild .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
917,53,val,"Give me the child of Kekūanāoʻa and child of the father of Kamehameha IV and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfKekuanaoa ?royaltyParent
WHERE {
  # Kekūanāoʻa's child
  ?keku dbr:Kekūanāoʻa dbo:child ?childOfKekuanaoa .

  # Father of Kamehameha IV is Kamehameha III
  dbr:Kamehameha_IV dbo:father ?kamehamehaIII .
  
  # Child of the father of Kamehameha IV
  ?kamehamehaIII dbo:child ?childOfFather .

  # Parent of that child, who is royalty
  ?childOfFather dbo:parent ?royaltyParent .
  FILTER EXISTS { ?royaltyParent a dbo:Monarch . }

  # Mayor of the Hawaiian Kingdom (assuming we have this information)
  ?mayor dbr:Mayor_of_the_Hawaiian_Kingdom dbo:child ?childOfFather .

  # Ensure the parent is royalty
  FILTER EXISTS { ?royaltyParent a dbo:Monarch . }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
274,23,val,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound and band member of the person born, that is a musical artist, as John Birks Gillespie.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorArtist ?gillespieBandMember
WHERE {
  # Find actor who is also a musical artist associated with ""Imagine the Sound""
  ?actorArtist dbo:occupation dbr:Actor .
  ?actorArtist dbo:occupation dbr:MusicalArtist .
  ?actorArtist dbo:associatedBandOrMusicalGroup dbr:Imagine_the_Sound .

  # Find band member of Dizzy Gillespie who is also a musical artist
  ?gillespieBandMember dbo:bandMemberOf dbr:Dizzy_Gillespie .
  ?gillespieBandMember dbo:occupation dbr:MusicalArtist .
}
```",4,6,5,2,2,2,3,28,0,0,4,0,0.0,0
236,15,val,"Give me the party member of the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts and party member of Democratic-Republican Party.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic-Republican_Party> . ?v1 <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?administration WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolder ?office ;
          dbo:memberOfParty dbr:Democratic-Republican_Party ;
          dbo:location dbr:Quincy,_Massachusetts .

  ?office dbo:organization ?administration .
  
  FILTER (?administration a dbo:Organization)
}
```",4,7,5,3,2,3,2,20,0,0,18,0,0.0,0
382,17,val,"Give me the birthplace of Björn Joppe and landmark at elevation of the award of the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. <http://dbpedia.org/resource/Björn_Joppe> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v0 <http://dbpedia.org/property/awards> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthplace ?landmark
WHERE {
  # Björn Joppe's birthplace
  dbr:Björn_Joppe dbo:birthPlace ?birthplace .

  # Harry Combes as a coach and any awards he might have received
  OPTIONAL {
    dbr:Harry_Combes dbo:occupation ?occupation .
    FILTER (CONTAINS(LCASE(?occupation), ""coach""))
    
    # Assuming there is an award property related to elevation
    OPTIONAL {
      ?award dbo:recipient dbr:Harry_Combes ;
             dbo:elevation ?elevation .
      
      # Find a landmark at the same elevation as the award
      ?landmark dbo:elevation ?elevation .
    }
  }
}
```",4,6,5,3,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
865,49,val,"Give me the father of the child of the father of Abul Maal Abdul Muhith and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfSibling
WHERE {
  # Abul Maal Abdul Muhith and his father
  dbr:Abul_Maal_Abdul_Muhith dbo:father ?fatherOfMuhith .

  # Sibling of Abul Maal Abdul Muhith (child of the same father)
  ?sibling dbo:father ?fatherOfMuhith .
  
  # Father of that sibling
  ?sibling dbo:father ?fatherOfSibling .

  # Ram Jaipal Singh Yadav and his native country
  dbr:Ram_Jaipal_Singh_Yadav dbo:nativePlace ?nativePlace .
  
  # Ensure the native place is a country
  ?nativePlace rdf:type dbo:Country .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
965,49,val,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName
WHERE {
  # Princess Victoria's spouse
  dbr:Princess_Victoria_of_Hesse_and_by_Rhine dbo:spouse dbr:Ernest_Louis,_Grand_Duke_of_Hesse .

  # Their child, Alice
  dbr:Alice_Princess_Andrew_of_Greece_and_Denmark dbo:parent dbr:Ernest_Louis,_Grand_Duke_of_Hesse ;
                                                 dbo:parent dbr:Princess_Victoria_of_Hesse_and_by_Rhine .

  # George Mountbatten's parent (Lord Louis Mountbatten)
  dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven dbo:parent ?parent .

  # Lord Louis Mountbatten
  ?parent rdfs:label ""Louis of Battenberg""@en ;
          dbo:nobleTitle dbr:Marquess_of_Milford_Haven .

  # George Mountbatten's birth name
  dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven dbo:birthName ?birthName .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
124,44,val,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in Mahdist War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?kitchenerForce ?rhodesWarForce
WHERE {
  # Herbert Kitchener's military force in a societal event and military conflict
  dbr:Herbert_Kitchener_1st_Earl_Kitchener dbo:militaryConflict ?conflictK;
    dbo:societalEvent ?eventK.
  
  OPTIONAL { ?conflictK dbo:participatingMilitaryForce ?kitchenerForce. }
  
  # Frank Rhodes' military force in a war that is an event, military conflict, and societal event
  dbr:Frank_Rhodes_(British_Army_officer) dbo:militaryConflict ?war;
    dbo:societalEvent ?eventR.
  
  FILTER (dbo:War ?war)
  
  OPTIONAL { ?war dbo:participatingMilitaryForce ?rhodesWarForce. }
  
  # Frank Rhodes as commander in the Mahdist War
  dbr:Frank_Rhodes_(British_Army_officer) dbo:commanderOf ?mahdistWar.
  FILTER (dbr:Mahdist_War = ?mahdistWar)
}
```",5,10,6,2,3,3,3,71,0,0,3,0,0.0,0
892,48,val,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and entity in the profession of the true self of Enrico Crolla.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInAdministration ?professionOfEnricoCrolla
WHERE {
  # Entity in administration that is Italian, a region, settlement, and administrative region
  ?entityInAdministration 
    dbo:country dbr:Italy ;
    rdf:type/(dbo:Region|dbo:Settlement|dbo:AdministrativeRegion) ;
    dbo:partyAffiliation dbr:Democratic_Party_(Italy) .

  # Profession of Enrico Crolla's true self
  dbr:Enrico_Crolla dbo:trueSelf ?trueSelf .
  ?trueSelf dbo:profession ?professionOfEnricoCrolla .
}
```

This query does the following:
- Selects entities that are part of an administration, are Italian, and classified as a region, settlement, and administrative region.
- Filters these entities to those affiliated with the Democratic Party in Italy.
- Retrieves the profession associated with Enrico Crolla's true self.",5,9,6,3,2,3,3,71,0,0,587,0,0.0,0
273,16,val,Give me the spouse of the child of Giovanni Agnelli and parent of the alumnus of University of Turin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse
WHERE {
  ?child dbo:parent dbr:Giovanni_Agnelli .
  ?spouse dbo:spouse ?child .
  
  ?alumnus dbo:almaMater dbr:University_of_Turin .
  ?parent dbo:child ?alumnus .
  
  FILTER (?spouse = ?parent)
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
216,21,val,Give me the administration of the designer of Woolfe: The Red Hood Diaries and party of Campbell Newman and office of Tim Nicholls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v0 . ?result <http://dbpedia.org/property/leader> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?designerAdministration ?newmanParty ?nichollsOffice
WHERE {
  # Designer of ""Woolfe: The Red Hood Diaries""
  ?game dbo:creator ?designer .
  ?designer foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""woolfe: the red hood diaries"")) .

  # Administration related to the designer
  OPTIONAL {
    ?designer dbo:memberOf ?administration .
    ?administration dbo:officeHolder ?holder .
    ?holder foaf:name ?adminName .
    BIND(CONCAT(""Administration of "", ?adminName) AS ?designerAdministration)
  }

  # Party of Campbell Newman
  dbr:Campbell_Newman dbo:partyAffiliation ?newmanParty .

  # Office held by Tim Nicholls
  dbr:Tim_Nicholls dbo:officeHolder ?nichollsOffice .
}",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
445,55,val,"Give me the death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of Anna Sharkey and entity in the award of George H. Cameron.",SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?country ?award 
WHERE {
  # Awardee of the Royal Astronomical Society and their death place
  ?awardee dbo:recipientOf dbr:Royal_Astronomical_Society .
  ?awardee dbo:deathPlace ?deathPlace .

  # Anna Sharkey's residence country
  dbr:Anna_Sharkey dbo:residence ?residence .
  ?residence dbo:country ?country .

  # George H. Cameron's award
  dbr:George_H_Cameron dbo:award ?award .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
124,53,val,"Give me the military force of Battle of Tamai and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?commander ?societalEvent ?unit
WHERE {
  # Battle of Tamai and its military force
  dbr:Battle_of_Tamai dbo:militaryConflicts ?battleConflict .
  
  # Military force involved in the battle
  ?battleConflict dbo:participatingMilitaryUnit ?militaryForce .

  # Commander associated with the war involving the Battle of Tamai
  ?battleConflict dbo:commander ?commander .

  # Societal event and military conflict related to Herbert Kitchener
  dbr:Herbert_Kitchener_1st_Earl_Kitchener dbo:militaryConflicts ?kitchenerConflict .
  
  # Ensure the societal event is common between both conflicts
  ?battleConflict rdfs:seeAlso ?societalEvent .
  ?kitchenerConflict rdfs:seeAlso ?societalEvent .

  # Reference to A Battery, Royal Australian Artillery
  dbr:A_Battery,_Royal_Australian_Artillery dbo:militaryConflicts ?australianConflict .
  
  # Ensure the military force is common between both conflicts
  ?battleConflict dbo:participatingMilitaryUnit ?unit .
  ?australianConflict dbo:participatingMilitaryUnit ?unit .

  FILTER (?militaryForce != dbr:A_Battery,_Royal_Australian_Artillery)
}
ORDER BY ?societalEvent",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
433,54,val,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in Musician and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist
WHERE {
  # Step 1: Find associated musical artist of Ornette Coleman
  ?artistOrnette dbo:associatedMusicalArtist dbr:Ornette_Coleman .
  
  # Step 2: Ensure this artist is both a musical artist and an artist
  ?artistOrnette rdf:type dbo:MusicalArtist ;
                 rdf:type dbo:Artist .

  # Step 3: Find associated musical artist of the person born as Paul Laurence Dunbar Chambers Jr.
  ?chambers dbr:Paul_Laurence_Dunbar_Chambers_Jr_ (dbo:associatedMusicalArtist|dbo:professional) ?artistChambers .
  
  # Ensure this is a musician and an associated musical artist
  ?artistChambers rdf:type dbo:Musician ;
                  rdf:type dbo:AssociatedMusicalArtist .

  # Step 4: Find the final associated musical artist that connects both chains
  ?artistOrnette dbo:associatedMusicalArtist ?finalArtist .
  
  # Ensure this final artist is both a musical artist and an artist
  ?finalArtist rdf:type dbo:MusicalArtist ;
               rdf:type dbo:Artist .
}
```",6,12,7,3,3,3,3,71,0,0,3,0,0.0,0
216,50,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v4 . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?playerCoach ?clubName ?teamName
WHERE {
  # Find Džemal Berberović's player role and associated club
  dbr:Džemal_Berberović dbo:position ?playerRole .
  FILTER (str(?playerRole) IN (""Soccer player"", ""Sports manager"", ""Soccer manager""))
  
  ?club dbo:type dbr:Soccer_club ;
        dbo:type dbr:Sports_club ;
        dbo:member ?playerCoach .
  FILTER (str(?playerCoach) != str(dbr:Džemal_Berberović))
  FILTER (str(?playerRole) IN (""Soccer player"", ""Sports manager"", ""Soccer manager""))
  
  # Find the team of a person born on 1983-12-20
  ?person dbo:birthDate ?birthDate ;
          dbo:position ?personRole .
  FILTER (?birthDate = ""1983-12-20""^^xsd:date)
  FILTER (str(?personRole) IN (""Sports manager"", ""Soccer manager"", ""Soccer player""))
  
  ?team dbo:type dbr:Soccer_club ;
        dbo:member ?person .
  
  # Bind names for clarity
  OPTIONAL { ?club rdfs:label ?clubName . }
  OPTIONAL { ?team rdfs:label ?teamName . }
}
```",5,14,6,3,2,3,3,71,0,0,1,0,0.0,0
495,17,val,Give me the child of Frederick I of Württemberg and father of the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_I_of_Württemberg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX schema: <http://schema.org/>

SELECT ?father
WHERE {
  # Frederick I of Württemberg's child
  ?child dbo:parent wd:QXXXX .  # Replace QXXXX with the DBpedia ID for Frederick I

  # This child is a father
  ?child schema:spouse ?mother .
  ?child dbo:child ?grandchild .

  # Grandchild's parent (who must be the child of Princess Pauline's parent)
  ?parent dbo:parent wd:QYYYY .  # Replace QYYYY with the DBpedia ID for Princess Pauline
  ?parent dbo:child ?grandchild .
  
  BIND(?child AS ?father)
}
```

5. **Explanation:**
   - `?child` is a child of Frederick I.
   - `?child` must be a father (`schema:spouse` and `dbo:child`).
   - The grandchild's parent (`?parent`) is the child of Princess Pauline's parent.

6. **Replace IDs:**
   - Replace `wd:QXXXX` with the DBpedia ID for Frederick I of Württemberg.
   - Replace `wd:QYYYY` with the DBpedia ID for Princess Pauline of Württemberg.",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
507,47,val,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of the person born as Anne Voase Coates.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v4 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?directorName
WHERE {
  ?person dbo:birthday ""1919-06-17""^^xsd:date .
  
  ?anneVoaseCoates a dbo:Person ;
                  foaf:name ""Anne Voase Coates""@en .

  ?person dbo:spouse ?anneVoaseCoates .

  ?movie a dbo:Film, dbo:CreativeWork .

  ?movie dbo:director ?director .
  ?director foaf:name ?directorName .

  ?person dbo:directed ?movie .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
433,47,val,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalArtist
WHERE {
  # Step 1: Find associated musical artist of Paul Laurence Dunbar Chambers Jr.
  ?chambers a dbo:MusicalArtist ;
            dbo:birthName ""Paul Laurence Dunbar Chambers Jr."" .

  OPTIONAL { 
    ?associatedArtist dbp:associatedBandOrMusicalArtist ?chambers .
    FILTER (?associatedArtist != ?chambers)
    
    # Step 2: Find associated musical artist of the above associated artist
    OPTIONAL {
      ?secondAssociatedArtist dbp:associatedBandOrMusicalArtist ?associatedArtist .
      FILTER (?secondAssociatedArtist != ?associatedArtist)

      # Step 3: Find associated musical artist of Ornette Coleman
      ?coleman a dbo:MusicalArtist ;
               dbo:birthName ""Ornette Coleman"" .

      OPTIONAL {
        ?thirdAssociatedArtist dbp:associatedBandOrMusicalArtist ?coleman .
        FILTER (?thirdAssociatedArtist != ?coleman)

        # Final step: Find the associated musical artist of the second associated artist
        ?finalArtist dbp:associatedBandOrMusicalArtist ?secondAssociatedArtist .
      }
    }
  }
}",5,11,6,3,2,3,3,71,0,0,10,0,0.0,0
417,41,val,"Give me the child of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the father of Frederick IX of Denmark.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual
WHERE {
  # Alexandrine of Mecklenburg-Schwerin and her child
  dbr:Aleksandra_of_Mecklenburg-Schwerin dbo:child ?alexChild .

  # Spouse of Alexandrine who is royalty
  ?alexChild dbo:spouse ?royaltySpouse .
  ?royaltySpouse a dbo:RoyalFamilyMember .

  # Count Ingolf of Rosenborg and his child
  dbr:Ingolf_of_Rosenborg dbo:child ?ingolfChild .

  # Father of Frederick IX of Denmark
  dbr:Fredrik_IX_of_Denmark dbo:father ?frederickFather .

  # The individual must be the child of both the royalty spouse and the father of Frederick IX
  ?royaltySpouse dbo:child ?individual .
  ?frederickFather dbo:child ?individual .

  # Ensure the individual is also the child of Count Ingolf of Rosenborg
  FILTER (?ingolfChild = ?individual)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
102,15,val,"Give me the manager of the player in the member, that is a soccer player, of England women's national football team and native of Dewsbury.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Dewsbury> . ?v0 <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?manager
WHERE {
  ?player dbo:nationality dbr:England ;
          dbo:sport dbr:Soccer ;
          dbo:memberOfTeam dbr:England_women%27s_national_football_team .
  
  ?place dbp:name ""Dewsbury""@en ;
         dbo:birthPlace ?player .

  OPTIONAL {
    ?team dbo:manager ?manager .
    ?player dbo:memberOf ?team .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
130,16,val,"Give me the figure known as the film, that is a soccer club and an organisation, of Candice Storey Lee and entity in the administration, that is American, of .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> """"@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v2 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?film ?soccerClub ?organization ?adminRole
WHERE {
  # Candice Storey Lee's films
  ?film dbo:director dbr:Candice_Storey_Lee .
  
  OPTIONAL {
    # Film as a soccer club or organization
    ?film dbo:associatedWith ?soccerClub .
    FILTER (strstarts(str(?soccerClub), ""Soccer Club"") || strstarts(str(?soccerClub), ""Organization""))
  }
  
  OPTIONAL {
    # American entity in administration role
    ?adminRole dbo:administrator dbr:Candice_Storey_Lee ;
              foaf:nationality <http://dbpedia.org/resource/United_States> .
  }
}
```",4,7,5,2,2,3,2,20,0,1,1,0.0,0.0,0
212,7,val,"Give me the birthplace of KODA (singer) and birthplace of the professional, that is a musical artist and an artist, in Singer, rapper, CEO, Facilities and Project Manager.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Singer, rapper, CEO, Facilities and Project Manager""@en . <http://dbpedia.org/resource/KODA_(singer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?kodaBirthplace ?professionalBirthplace
WHERE {
  # Birthplace of KODA (singer)
  dbr:Koda_Kimberly_Lee a dbo:Singer ;
    dbo:birthPlace ?kodaBirthplace .

  # Birthplace of the professional who is a musical artist, singer, rapper, CEO, and facilities and project manager
  ?professional a dbo:MusicalArtist , dbo:Singer , dbo:Rapper , dbo:ChiefExecutiveOfficer , dbo:FacilitiesAndProjectManager ;
    dbo:birthPlace ?professionalBirthplace .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
18,22,val,Give me the professional in the award of Ana María Sánchez de Ríos and parent of the professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find the award associated with Ana María Sánchez de Ríos
  dbr:Ana_María_Sánchez_de_Ríos dbo:awardReceived ?award .
  
  # Identify the professional who received this award
  ?professional dbo:awardReceived ?award .

  # Ensure that this professional has a child who is an actress
  ?child dbo:parent ?professional ;
         rdf:type dbo:Actor ; # Assuming Actor type for actresses as well
         dbo:profession dbr:Actress .
}
```",4,4,5,2,2,2,3,28,0,0,200,0,0.0,0
18,23,val,"Give me the professional in the award of Ana María Sánchez de Ríos and alumnus of the figure known, that is an educational institution, as Saints.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""Saints""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Ana María Sánchez de Ríos and her award
  dbr:Ana_María_Sánchez_de_Ríos dbo:awardReceived ?award .

  # Professional who received the same award
  ?professional dbo:awardReceived ?award .

  # Professional is an alumnus of ""Saints""
  ?professional dbo:almaMater dbr:Saints .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
465,54,val,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of the child of Alfonso I d'Este and successor of Renée of France.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Elizabeth of Austria and her parent
  dbr:Elizabeth_of_Austria_(1526–1545) dbo:parent ?parent .
  
  # Child of the parent who is royalty
  ?child dbo:parent ?parent ;
         a dbo:Monarch ;
         dbo:spouse ?spouse .

  # Successor relationships
  ?successorChild dbo:successorOf ?child .
  
  # Child of Alfonso I d'Este and their successor
  dbr:Alfonso_I_d%27Este dbo:child ?alfonsoChild .
  ?successorChild dbo:successorOf ?alfonsoChild .

  # Successor of Renée of France
  dbr:Renée_of_France dbo:successor ?renéeSuccessor .
  ?successorChild dbo:successorOf ?renéeSuccessor .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
93,15,val,"Give me the death place of John Weir Troy and capital of the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/John_Weir_Troy> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?regionCapital ?settlement
WHERE {
  # Get the death place of John Weir Troy
  dbr:John_Weir_Troy dbo:deathPlace ?deathPlace .

  # Get the headquarters location of Clam Cove Pictograph Site
  dbr:Clam_Cove_Pictograph_Site dbo:location ?headquartersLocation .

  # Assuming the headquarters location is a region, get its capital and settlement
  OPTIONAL {
    ?headquartersLocation dbo:capital ?regionCapital .
    ?headquartersLocation dbo:settlement ?settlement .
  }
}
```",4,6,5,3,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
216,23,val,Give me the administration of the designer of Woolfe: The Red Hood Diaries and office of the mayor of Ros Bates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v1 . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?designerAdministration ?rosBatesOffice
WHERE {
  # Find the designer of ""Woolfe: The Red Hood Diaries""
  ?game dbo:title ""Woolfe: The Red Hood Diaries""@en .
  ?game dbo:creator ?designer .

  # Get the administration related to the designer
  OPTIONAL { 
    ?designer dbo:memberOf ?organization .
    ?organization dbo:office ?designerAdministration .
  }

  # Find Ros Bates and her office
  dbr:Ros_Bates dbo:positionHeld ?rosBatesOffice .
}
```

### Explanation:

- **PREFIX:** Define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT DISTINCT:** Retrieve distinct values for the designer's administration and Ros Bates' office.
- **WHERE Clause:**
  - Identify the game ""Woolfe: The Red Hood Diaries"" and its creator (designer).
  - Use an `OPTIONAL` clause to find any organization the designer is a member of, and their related office/administration.
  - Directly retrieve Ros Bates' position held.

This query should provide the administration associated with the designer of ""Woolfe: The Red Hood Diaries"" and the office held by Ros Bates.",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
443,22,val,"Give me the landmark at elevation of the award of William Shepherd and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/elevation> ?v2 . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark ?birthplace
WHERE {
  # Find the award associated with William Shepherd
  ?award dbo:recipient dbr:William_Shepherd .
  
  # Get the elevation of this award's location (assuming awards have a location)
  ?awardLocation dbo:elevation ?elevation .
  
  # Find landmarks at this elevation
  ?landmark dbo:elevation ?elevation .

  # Find a person born on 1949-11-20 who is both a musical artist and an artist
  ?person dbp:birthDate ""1949-11-20""^^xsd:date ;
          dbo:musicalArtist true ;
          dbo:artist true .
  
  # Get the birthplace of this person
  ?person dbo:birthPlace ?birthplace .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
456,40,val,"Give me the professional in  and band of Alan Doyle and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?band ?spouse WHERE {
  # Alan Doyle's band
  dbr:Alan_Doyle dbo:memberOf ?band .

  # Actors who worked with Ross Newton in both a movie and a TV show
  ?actor foaf:name ?actorName .
  ?movie dbo:starring ?actor ;
         dbo:starring dbr:Ross_Newton .
  ?tvShow dbo:starring ?actor ;
          dbo:starring dbr:Ross_Newton .

  # Spouse of the actor
  ?actor dbo:spouse ?spouse .

  FILTER EXISTS { ?movie a dbo:Film . }
  FILTER EXISTS { ?tvShow a dbo:TelevisionSeries . }

}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
417,42,val,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of Christian X of Denmark and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Frederick Francis III's child who is royalty
  ?frederickChild dbo:parent dbr:Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin .
  ?frederickChild a dbo:RoyalFamily .

  # Christian X of Denmark's child who is royalty
  ?christianChild dbo:parent dbr:Christian_X_of_Denmark .
  ?christianChild a dbo:RoyalFamily .

  # Find the parent (royalty) of Count Ingolf of Rosenborg
  ?countIngolfParent dbo:child dbr:Count_Ingolf_of_Rosenborg .
  ?countIngolfParent a dbo:RoyalFamily .

  # Spouse of the parent (royalty) of Count Ingolf of Rosenborg
  ?spouse dbo:spouse ?countIngolfParent .

  # The child of the spouse who is also royalty
  ?childOfSpouse dbo:parent ?spouse .
  ?childOfSpouse a dbo:RoyalFamily .

  # Find the intersection where both conditions are met
  FILTER (?frederickChild = ?childOfSpouse || ?christianChild = ?childOfSpouse)
  
  BIND(?childOfSpouse AS ?childOfChild)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
773,48,val,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of the father of the parent of Bernard (son of Charles the Fat).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfRoyaltyChild
WHERE {
  # Step 1: Find Louis the German's child who is royalty
  ?child dbo:spouse*/* dbo:father dbr:Louis_the_German .
  ?child a dbo:Monarch .

  # Step 2: Identify Bernard, son of Charles the Fat
  ?bernard dbp:father dbr:Charles_the_Fat ;
           a dbo:Person .

  # Find Bernard's parent (father)
  ?parentOfBernard dbp:son ?bernard .
  
  # Find the grandparent (father of Bernard's parent)
  ?grandparentOfBernard dbp:child ?parentOfBernard .

  # Identify the spouse of this grandparent
  ?spouseOfGrandparent dbo:spouse ?grandparentOfBernard .

  # Match the royalty child with the spouse found in step 2
  FILTER (?child = ?spouseOfGrandparent)
  
  BIND(?child AS ?parentOfRoyaltyChild)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
129,23,val,Give me the associated musical artist of the person born as Tahj Malik Chandler and professional in the mayor of 1999 West Dunbartonshire Council election.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?musicalArtist WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""The Game"" ;
          rdfs:label ""Tahj Malik Chandler""@en .
  
  OPTIONAL { 
    ?person dbo:musicalArtist ?musicalArtist .
  }
}
```",4,4,5,2,2,2,3,28,0,0,7,0,0.0,0
507,45,val,Give me the director of Entertaining Mr Sloane (film) and professional in the profession of the person born on 1966-02-18 and spouse of Anne V. Coates.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?directorName ?profession
WHERE {
  # Find the director of ""Entertaining Mr Sloane""
  dbr:Entertaining_Mr_Sloane dbo:director ?director .
  ?director foaf:name ?directorName .

  # Find the person born on 1966-02-18 and spouse of Anne V. Coates
  ?person dbo:birthday ""1966-02-18""^^xsd:date ;
          dbo:spouse dbr:Anne_V._Coates .
  ?person dbo:profession ?profession .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
573,55,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Find the author of ""Exchequer Standards""
  ?author dbo:work dbr:Exchequer_Standards .
  
  # Find the parent who is a politician and an office holder
  ?author dbo:parent ?parent .
  ?parent rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Find the residence (settlement) where William J. Phelan died
  dbr:William_J._Phelan dbo:placeOfDeath ?residence .
  ?residence rdf:type dbo:Settlement .

  # Find the administration (region) where Charlie Baker was in charge
  dbr:Charlie_Baker dbo:administrativePost ?administration .
  ?administration rdf:type dbo:Region .
}
```",6,10,7,2,3,3,3,71,0,0,2,0,0.0,0
582,54,val,"Give me the figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of Hirotaka Sugawara.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?figureName ?role ?residence
WHERE {
  # Find the figure known as ""--10-19"" who is a father and has specific roles
  ?figure dbo:name ""--10-19""@en .
  ?figure dbo:fatherOf ?child .
  ?child dbo:parent dbr:Kazuaki_Nagasawa .

  # Ensure the figure is an athlete, soccer manager, and sports manager
  ?figure dbo:occupation dbp:Athlete ;
          dbo:occupation dbp:Soccer_Manager ;
          dbo:occupation dbp:Sports_Manager .

  # Get the name of the figure
  ?figure rdfs:label ?figureName FILTER (lang(?figureName) = 'en') .

  # Find Hirotaka Sugawara's residence
  dbr:Hirotaka_Sugawara dbo:residenceLocation ?residence .
  
  OPTIONAL {
    ?residence rdfs:label ?residenceLabel FILTER (lang(?residenceLabel) = 'en')
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
965,43,val,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  # George Mountbatten, 2nd Marquess of Milford Haven and his spouse
  dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbo:spouse dbr:Prince_Louis_of_Battenberg .
  
  # Their children
  ?child dbo:parent dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven ;
         dbo:parent dbr:Prince_Louis_of_Battenberg .

  # The child must be royalty
  ?child a dbo:RoyalFamilyMember .

  # Parent of the royal child who is a politician and born on 1854-05-24
  ?politicianParent dbo:birthDate ""1854-05-24""^^xsd:date ;
                   dbo:occupation dbr:Politician .
  
  ?child dbo:parent ?politicianParent .

  # The parent we are looking for is either George Mountbatten or his spouse
  ?parent (dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven|dbr:Prince_Louis_of_Battenberg) .
}",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
417,48,val,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouseName
WHERE {
  # Knud, Hereditary Prince of Denmark's child
  ?child dbo:parent dbr:Knud,_Hereditary_Prince_of_Denmark .
  
  # This child is also a descendant (grandchild) of Frederick Francis III
  ?grandChild dbo:parent ?child .
  ?child dbo:parent dbr:Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin .

  # Ensure both individuals are royalty
  ?child dbp:title ?title1 .
  FILTER(CONTAINS(LCASE(?title1), ""prince"") || CONTAINS(LCASE(?title1), ""duke"") || CONTAINS(LCASE(?title1), ""royalty"")).

  ?grandChild dbp:title ?title2 .
  FILTER(CONTAINS(LCASE(?title2), ""prince"") || CONTAINS(LCASE(?title2), ""duke"") || CONTAINS(LCASE(?title2), ""royalty"")).

  # Find the parent of this child
  ?parent dbo:child ?grandChild .

  # Get the spouse of this parent
  ?spouse dbo:spouse ?parent .
  
  # Retrieve the name of the spouse
  ?spouse rdfs:label ?spouseName .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
433,43,val,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and associated musical artist of Paul Chambers and professional in Musician.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalArtist
WHERE {
  # Step 1: Find Ornette Coleman's associated musical artist who is also an artist
  ?coleman dbo:associatedMusicalArtist ?artist1 .
  FILTER (str(?coleman) = ""Ornette_Coleman"") .

  # Ensure this artist is also a musician
  ?artist1 rdf:type dbo:Musician .

  # Step 2: Find the associated musical artist of this artist
  ?artist1 dbo:associatedMusicalArtist ?intermediateArtist .
  
  # Step 3: Ensure intermediate artist is also an artist and musician
  ?intermediateArtist rdf:type dbo:Musician .

  # Step 4: Find Paul Chambers' associated musical artist who is a professional musician
  ?chambers dbo:associatedMusicalArtist ?artist2 .
  FILTER (str(?chambers) = ""Paul_Chambers"") .

  # Ensure this artist is also an artist
  ?artist2 rdf:type dbo:Musician .

  # Step 5: Find the associated musical artist of this intermediate artist
  ?intermediateArtist dbo:associatedMusicalArtist ?finalArtist .

  # Ensure final artist is also a musician
  ?finalArtist rdf:type dbo:Musician .
}",5,9,6,3,3,3,3,71,0,0,3,0,0.0,0
976,50,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the person born as Mehmet Naci Bostancı.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/office> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayorOffice ?referenceOrganization ?personOffice
WHERE {
  # Mayor's office details
  ?mayor a dbo:Mayor ;
         dbo:nationality dbr:Turkey ;
         dbo:office ?mayorOffice .
  
  FILTER EXISTS { ?mayor dbo:occupation dbr:Politician . }
  FILTER EXISTS { ?mayor dbo:officeHolder true . }

  # Reference organization details
  ?referenceOrganization a dbo:PoliticalParty, dbo:Organisation ;
                        dbo:nationality dbr:Turkey .

  # Specific reference to Millet İttifakı
  ?milatRef dbr:Millet_İttifakı .
  
  # Person's office details
  ?person a dbo:Person ;
          dbp:name ""Mehmet Naci Bostancı""@en ;
          dbo:birthPlace ?birthPlace .

  ?personOffice a dbo:PublicOffice ;
                dbo:officeHolder ?person .
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
445,49,val,"Give me the entity in the residence, that is a country, of Anna Sharkey and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?residenceCountry ?awardEntity
WHERE {
  # Anna Sharkey's residence country
  OPTIONAL {
    ?anna a dbo:Person ;
          foaf:name ""Anna Sharkey"" .
    ?anna dbo:residenceLocation ?residence .
    ?residence dbo:country ?residenceCountry .
  }

  # Commander in Battle of Saint-Mihiel and their award
  OPTIONAL {
    ?battle dbr:Battle_of_Saint-Mihiel ;
            dbo:commander ?commander .
    ?commander dbo:award ?award .
    ?award rdfs:label ?awardEntity .
  }
}
```",5,6,6,3,2,3,3,71,0,0,102,0,0.0,0
791,50,val,"Give me the father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Emperor Takakura and his child who is royalty
  ?child dbo:parent dbr:Emperor_Takakura ;
         a dbo:Monarch .
  
  # The father of this child (Emperor Takakura)
  ?father dbo:parent ?child .

  # Child's child who is both an office holder and royalty
  ?grandChild dbo:parent ?child ;
              a dbo:Monarch, dbo:OfficeHolder .

  # Predecessor of the grandchild
  ?predecessor dbo:successor ?grandChild .
  
  # Ensure Emperor Go-Shirakawa is involved in the predecessor chain
  ?predecessor dbp:predecessor dbr:Emperor_Go-Shirakawa .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
417,52,val,"Give me the child of the father of Frederick IX of Denmark and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of Alexandrine of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalty WHERE {
  # Frederick IX's father and mother
  dbr:Frederick_IX_of_Denmark dbo:father dbr:Christian_X_of_Denmark .
  dbr:Frederick_IX_of_Denmark dbo:mother ?mother .

  # Spouse of Frederick IX's father (his mother)
  ?mother a dbo:Person ;
          rdf:type dbo:RoyalFamilyMember .

  # Knud, Hereditary Prince of Denmark and his child
  dbr:Knud,_Hereditary_Prince_of_Denmark dbo:child ?knudsChild .
  
  # Parent of Knud's child (his spouse)
  ?knudsChild dbo:parent ?spouseOfKnud .

  # Ensure the royalty is both Frederick IX's mother and Knud's spouse
  FILTER (?mother = ?spouseOfKnud)

  # Ensure the person is a member of royalty
  ?mother rdf:type dbo:RoyalFamilyMember .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
326,16,val,"Give me the person decedent at the award, that is a country, of Adelbert Cronkhite and resident of the birthplace, that is a state and British, of David Jessel.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personDecedent
WHERE {
  # Adelbert Cronkhite and his award
  dbr:Adelbert_Cronkhite dbo:award ?award .
  
  # The decedent of the award is a country
  ?award dbo:decedent ?personDecedent .
  ?personDecedent rdf:type dbo:Country .

  # David Jessel's birthplace
  dbr:David_Jessel dbo:birthPlace ?birthPlace .
  
  # Birthplace is a state and British
  ?birthPlace rdf:type dbo:State ;
              dbo:country dbr:United_Kingdom .
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
456,44,val,"Give me the band of the band, that is a musical artist, of Dean Brody and spouse of Danielle Spencer (Australian actress) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandName
WHERE {
  # Find the band associated with Dean Brody
  ?dean a dbo:MusicalArtist ;
        foaf:name ""Dean Brody"" .
  
  ?dean dbo:memberOf ?band .

  # Find Danielle Spencer and her spouse who is The Shadow
  ?danielle a dbo:Person ;
            foaf:name ""Danielle Spencer"" ;
            dbo:nationality dbc:Australian_Actor .

  ?spouse a dbo:Person ;
          foaf:name ?shadowName ;
          dbo:alias ""The Shadow"" .
  
  ?danielle dbo:spouse ?spouse .

  # Link the spouse to Dean Brody
  ?spouse foaf:name ?deanName .
  FILTER(?deanName = ""Dean Brody"")

  # Return the band name
  ?band foaf:name ?bandName .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
433,40,val,"Give me the professional in Musician and associated musical artist of Bill Evans and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?billEvansArtist ?paulChambersPersona
WHERE {
  # Find musical artists associated with Bill Evans
  dbr:Bill_Evans dbo:associatedMusicalArtist ?billEvansArtist .

  # Identify Paul Chambers and his persona as a musician and artist
  dbr:Paul_Chambers dbo:associatedMusicalArtist ?paulChambersPersona .
  
  FILTER (?paulChambersPersona != dbr:Bill_Evans) # Ensure distinct entities

  # Ensure the person is both a musical artist and an artist
  ?paulChambersPersona rdf:type dbo:Musician ;
                       dbo:artist dbr:Paul_Chambers .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
5,17,val,"Give me the birthplace of Gerald Regan and entity in the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Gerald_Regan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?band
WHERE {
  # Gerald Regan's birthplace
  ?geraldRegan a dbo:Person ;
               foaf:name ""Gerald Regan"" ;
               dbo:birthPlace ?birthPlace .

  # Rubén Colón Tarrats' associated musical artist (band)
  ?rubenColonTarrats a dbo:Person ;
                    foaf:name ""Rubén Colón Tarrats"" .
  OPTIONAL {
    ?rubenColonTarrats dbo:musicalArtist ?artist .
    ?artist a dbo:Band ; # Ensure it's a band
            foaf:name ?band .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
216,42,val,"Give me the player in the coach of Croatia national under-21 football team and player in Mario Ivanković and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?player dbo:nationality dbr:Croatia .
  ?player dbo:sport dbr:Soccer .
  ?player dbo:birthDate ""1983-12-20""^^xsd:date .
  
  ?team dbo:coach dbr:Mario_Ivanković .
  ?team dbo:member ?player .
  
  ?player a dbo:SportsManager ;
         a dbo:SoccerPlayer ;
         a dbo:SoccerManager .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
645,41,val,"Give me the commander in the force of Carlos Asensio Cabanillas and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and leader of Ministry of the Army (Spain).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?militaryForce ?event ?conflict ?societalEvent ?ministryLeader
WHERE {
  # Find the military force associated with Carlos Asensio Cabanillas and its commander
  ?force dbo:commandedBy ?commander .
  ?force dbo:member ?carlosAsensioCabanillas .
  dbr:Carlos_Asensio_Cabanillas dbo:militaryForce ?force .

  # Identify events that are both military conflicts and societal events involving Francisco Largo Caballero
  ?event dbo:conflict ?conflict ;
         dbo:societalEvent ?societalEvent ;
         dbo:participant ?franciscoLargoCaballero .
  dbr:Francisco_Largo_Caballero dbo:militaryConflict ?conflict ;
                               dbo:societalEvent ?societalEvent .

  # Determine Francisco Largo Caballero's role as a leader in the Ministry of the Army
  ?ministryLeader dbo:leader ?franciscoLargoCaballero .
  dbr:Ministry_of_the_Army_(Spain) dbo:minister ?ministryLeader .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
582,41,val,"Give me the reference to the residence of Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and figure known as --10-19.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence ?father ?figure
WHERE {
  # Hirotaka Sugawara's residence
  dbr:Hirotaka_Sugawara dbo:residenceLocation ?residence .

  # Father of Masami Nagasawa who is an athlete, soccer manager, and sports manager
  OPTIONAL {
    ?masami dbo:father ?father .
    FILTER (CONTAINS(LCASE(?father), ""athlete"") && CONTAINS(LCASE(?father), ""soccer manager"") && CONTAINS(LCASE(?father), ""sports manager""))
  }
  
  # Figure known as --10-19
  OPTIONAL {
    ?figure rdfs:label ""--10-19""@en .
  }

  # Linking the father to the figure if possible
  OPTIONAL {
    ?father foaf:name ?figureName .
    FILTER (CONTAINS(LCASE(?figureName), ""athlete"") && CONTAINS(LCASE(?figureName), ""soccer manager"") && CONTAINS(LCASE(?figureName), ""sports manager""))
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
773,45,val,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of Carloman of Bavaria and spouse of Louis the German.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Carloman of Bavaria and his father
  ?carloman dbp:father ?father .
  ?carloman rdf:type dbo:Person .

  # Father is an office holder and royalty
  ?father dbo:officeHolder ?office .
  ?father rdf:type dbo:Royalty .

  # Spouse of Louis the German
  ?spouse dbp:spouse ?louisTheGerman .
  ?louisTheGerman rdfs:label ""Louis the German""@en .
  ?spouse dbp:father ?carloman .

  # Parent of a child who is royalty
  ?child rdf:type dbo:Royalty .
  ?parent dbp:child ?child .
  
  FILTER (?father = ?spouse)
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
978,15,val,"Give me the band member of the professional, that is a musical artist and an artist, in the award of Michel Claparède and band member of Chicane (musician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chicane_(musician)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Chicane (musician) resource
  dbr:Chicane_(musician) dbo:bandMember ?person .
  
  # The person is an artist involved in the award named after Michel Claparède
  ?person a dbo:Artist ;
          dbo:award ?award .

  # Filter to find awards related to Michel Claparède
  ?award rdfs:label ?awardLabel .
  FILTER(CONTAINS(LCASE(?awardLabel), ""michel claparède""))
}
```",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
465,53,val,"Give me the spouse of Archduchess Barbara of Austria and successor of the child, that is a royalty, of Anne of Brittany and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouseOfBarbara ?successorOfAnneChild ?successorOfErcoleChild
WHERE {
  # Spouse of Archduchess Barbara of Austria
  dbr:Archduchess_Barbara_of_Austria dbo:spouse ?spouseOfBarbara .

  # Child of Anne of Brittany who is royalty and their successor
  OPTIONAL {
    ?anneChild dbo:child dbr:Anne_of_Brittany .
    ?anneChild rdf:type dbo:Monarch .
    ?anneChild dbo:successor ?successorOfAnneChild .
  }

  # Parent of Ercole II d'Este, Duke of Ferrara and successor of their child
  OPTIONAL {
    ?parent dbo:child dbr:Ercole_II_d%27Este_Duke_of_Ferrara .
    ?parentChild dbo:child ?parent .
    ?parentChild dbo:successor ?successorOfErcoleChild .
  }
}
```",6,7,7,3,3,3,3,71,1,0,0,1.0,1.0,1.0
933,40,val,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to Alan Warner and band of The Ramong Sound.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band ?referenceToAlanWarner
WHERE {
  # Find The Ramones and their associated band
  ?ramones a dbo:Band ;
           dbp:name ""The Ramones""@en .
  
  ?ramones dbo:associatedBand ?band .

  # Ensure the band is an artist and a musical artist
  ?band a dbo:Artist, dbo:MusicalArtist .

  # Find reference to Alan Warner related to The Ramones
  OPTIONAL {
    ?referenceToAlanWarner dbp:relatedBand ?ramones ;
                           dbp:name ""Alan Warner""@en .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
791,48,val,"Give me the father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?fatherOfRoyalChild ?secondFather
WHERE {
  # Emperor Takakura's details
  ?emperor a dbo:Emperor ;
           foaf:name ""Takakura"" .

  # Children of Emperor Takakura who are royalty
  ?child dbo:parent ?emperor ;
         a dbo:Royalty .
  
  # Father of the royal child
  ?fatherOfRoyalChild dbo:spouse ?mother ;
                      dbo:child ?child .

  # Spouse of Emperor Takakura
  ?spouse dbo:spouse ?emperor .

  # Spouse of the spouse who is royalty
  ?royalSibling dbo:spouse ?spouse ;
                a dbo:Royalty .

  # Father of this second royal individual
  ?secondFather dbo:spouse ?motherOfRoyalSibling ;
                dbo:child ?royalSibling .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
445,41,val,"Give me the entity in the residence, that is a country, of Anna Sharkey and death place of the awardee of Royal Astronomical Society and entity in United Kingdom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?residenceCountry ?deathPlace ?ukEntity
WHERE {
  # Anna Sharkey's residence country
  OPTIONAL {
    dbr:Anna_Sharkey dbo:residence ?residence .
    ?residence dbo:country ?residenceCountry .
  }

  # Death place of an awardee of the Royal Astronomical Society
  OPTIONAL {
    ?awardee dbo:award dbr:Royal_Astronomical_Society .
    ?awardee dbo:deathPlace ?deathPlace .
  }

  # Entity in United Kingdom
  OPTIONAL {
    ?ukEntity dbo:location dbr:United_Kingdom .
  }
}",5,6,6,2,3,3,3,71,1,2787,0,0.0003586800573888092,1.0,0.0007171029042667624
791,51,val,"Give me the predecessor of the child of Emperor Takakura and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor
WHERE {
  # Step 1: Identify Emperor Antoku and his father who is both royalty and an office holder.
  dbr:Emperor_Antoku dbo:father ?antokuFather .
  
  # Ensure the father is a royalty and an office holder
  ?antokuFather rdf:type dbo:Monarch ;
                dbo:officeHolderOf ?office .

  # Step 2: Find the child of Emperor Takakura who is the father of Antoku's father.
  dbr:Takakura dbo:child ?takakuraChild .
  
  # Ensure this child is the father of Antoku's father
  ?takakuraChild dbo:father ?antokuFather .

  # Step 3: Determine the predecessor of this child.
  ?predecessor dbo:successor ?takakuraChild .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
573,51,val,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent
WHERE {
  # Find the work of John Quincy Adams
  ?work dbo:author dbr:John_Quincy_Adams .
  
  # Identify the parent who is a politician and office holder
  ?parent foaf:child dbr:John_Quincy_Adams ;
          a dbo:Politician, dbo:OfficeHolder .

  # Find the residence of William J. Phelan that is a settlement
  ?residence dbo:resident dbr:William_J._Phelan ;
             a dbo:Settlement .
  
  # Ensure the parent is also a decedent at this residence
  ?parent dbo:decedentAt ?residence .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
329,23,val,"Give me the birthplace of the author of The Tailor and Ansty and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?authorName ?birthPlace ?entityInBirthplace ?entityType
WHERE {
  # Robert Leighton's information
  {
    SELECT ?authorName ?birthPlace WHERE {
      VALUES (?authorName) { dbr:Robert_Leighton }
      ?authorName dbo:birthPlace ?birthPlace .
    }
  }

  UNION

  # Robert Bates' information
  {
    SELECT ?authorName ?birthPlace WHERE {
      VALUES (?authorName) { dbr:Robert_Bates_(loyalist) }
      ?authorName dbo:birthPlace ?birthPlace .
    }
  }

  OPTIONAL {
    ?entityInBirthplace rdf:type ?entityType .
    FILTER ( ?entityInBirthplace IN (dbr:?birthPlace) )
    FILTER (
      ?entityType = dbo:Country || 
      ?entityType = dbo:Organization
    )
  }
}
ORDER BY ?authorName",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
98,7,val,Give me the child of Emperor Go-Shirakawa and parent of the successor of Emperor Nijō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Nijō> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childParent
WHERE {
    # Step 1: Find child of Emperor Go-Shirakawa
    ?goShirakawaChild dbo:parent dbr:Emperor_Go-Shirakawa .
    
    # Step 2: Find successor of Emperor Nijō
    ?nijoSuccessor dbp:succession dbr:Emperor_Nijō .
    
    # Step 3: Find parent of the successor of Emperor Nijō
    ?nijoSuccessorParent dbo:child ?nijoSuccessor .
    
    # Step 4: Ensure the child from step 1 is also the parent found in step 3
    FILTER (?goShirakawaChild = ?nijoSuccessorParent)
    
    BIND(?goShirakawaChild AS ?childParent)
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
926,50,val,"Give me the child of the father, that is a royalty, of Mustafa III and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfMustafaIII WHERE {
  # Mustafa III's children who are royalty (Sultans)
  ?mustafaChild dbo:father dbr:Mustafa_III ;
                a dbo:Sultan .

  # Şermi Kadın's spouse and their child
  ?shermiSpouse dbo:spouse dbr:Şermi_Kadın .
  ?childOfShermiSpouse dbo:parent ?shermiSpouse .

  # The successor relationship
  ?successorRelation dbo:succeeds ?childOfShermiSpouse ;
                     dbo:predecessor ?childOfMustafaIII .

  # Ensure the child of Mustafa III is a Sultan and successor
  ?childOfMustafaIII a dbo:Sultan .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
456,42,val,"Give me the spouse of the actor of Pacific Drive and professional in  and band of the band, that is a musical artist, of Dean Brody.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorSpouse ?bandName
WHERE {
  # Find the actor of ""Pacific Drive""
  ?movie dbo:title ""Pacific Drive""@en .
  ?movie dbo:starring ?actor .

  # Get the spouse of this actor
  OPTIONAL { 
    ?actor dbo:spouse ?actorSpouse .
  }

  # Find Dean Brody's band that is a musical artist
  dbr:Dean_Brody dbo:bandMember ?band .
  ?band rdf:type dbo:MusicalArtist .

  # Get the name of the band
  OPTIONAL {
    ?band rdfs:label ?bandName .
    FILTER (lang(?bandName) = ""en"")
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
433,51,val,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professionalArtist
WHERE {
  # Find the writer of the album ""Slowhand at 70 – Live at the Royal Albert Hall""
  dbr:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall dbo:writer ?writer .

  # Find associated musical artists of this writer
  ?associatedArtist dbo:associatedMusicalArtist ?writer .
  
  # Ensure these artists are professionals in the same profession as the writer
  ?writer a ?profession .
  ?associatedArtist a ?profession .

  # Check if the associated artist is also an artist and has a connection with Scott LaFaro
  ?associatedArtist dbo:genre dbr:Jazz .
  ?associatedArtist dbo:associatedMusicalArtist dbr:Scott_LaFaro .

  # Ensure the professional artist is both an artist and a musical artist
  ?professionalArtist a ?profession ;
                     dbo:associatedMusicalArtist ?writer ;
                     dbo:associatedMusicalArtist dbr:Scott_LaFaro .
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
791,53,val,"Give me the predecessor of Emperor Antoku and father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor ?father ?spouseOfSpouse
WHERE {
  # Emperor Antoku and his predecessor
  dbr:Emperor_Antoku dbo:predecessor ?predecessor .

  # Child of Emperor Takakura who is royalty
  ?child dbo:parent dbr:Emperor_Takakura ;
         a dbo:Monarch .

  # Father of the royal child
  ?child dbo:father ?father .

  # Spouse of Emperor Takakura
  dbr:Emperor_Takakura dbo:spouse ?spouse .

  # Spouse's spouse (which is Emperor Takakura)
  ?spouse dbo:spouse ?spouseOfSpouse .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
47,52,val,"Give me the office of Ajoy Mukherjee and office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of Banga Bhushan.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/governor> ?v3 . ?v5 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeAjoyMukherjee ?officeCommander ?officeBangaBhushan

WHERE {
  # Office of Ajoy Mukherjee
  dbr:Ajoy_Mukherjee dbo:office ?officeAjoyMukherjee .

  # Administration of the commander involved in Operation Green Hunt who is a politician
  ?commander dbo:occupation dbr:Politician ;
            dbo:participatedInOperation dbr:Operation_Green_Hunt .
  ?administration dbo:head ?commander ;
                  dbo:office ?officeCommander .

  # Office of the awardee of Banga Bhushan
  ?awardee dbo:award dbr:Banga_Bhushan .
  ?awardee dbo:office ?officeBangaBhushan .
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
892,41,val,Give me the landmark at elevation of the award of Anna Ishii and entity in the profession of Henri Crolla and entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?professionEntity ?reggioEmiliaEntity
WHERE {
  # Anna Ishii's award and its elevation
  ?award dbo:recipient dbr:Anna_Ishii .
  ?award dbo:elevation ?elevation .

  # Landmark at the same elevation as the award
  ?landmark dbo:elevation ?elevation .

  # Henri Crolla's profession
  ?professionEntity dbo:fieldOfActivity ?profession .
  ?profession rdfs:label ""Henri_Crolla""@en .

  # Entity in Province of Reggio Emilia
  ?reggioEmiliaEntity dbo:locatedIn dbr:Province_of_Reggio_Emilia .
}",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
773,46,val,Give me the parent of the successor of Charles the Bald and spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Step 1: Find Charles the Bald and his successor
  ?charlesTheBald a dbo:Monarch ;
                  foaf:surname ""Charles the Bald""@en .
  
  ?successor dbo:predecessor ?charlesTheBald .

  # Step 2: Get the parent of the successor
  ?parentOfSuccessor dbo:child ?successor .

  # Step 3: Trace Bernard's lineage to his great-grandfather
  ?bernard a dbo:Person ;
           foaf:surname ""Bernard""@en ;
           dbo:father ?father .
  
  ?charlesTheFat a dbo:Monarch ;
                 foaf:surname ""Charles the Fat""@en .

  ?father dbo:child ?charlesTheFat .

  ?grandfather dbo:child ?father .

  ?greatGrandfather dbo:child ?grandfather .

  # Step 4: Find the spouse of Bernard's great-grandfather
  ?spouse dbo:spouse ?greatGrandfather .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
582,40,val,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as --10-19 and player in Kazuaki Nagasawa.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v2 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?scientistResidence ?playerResidence WHERE {
  # Residence of Hirotaka Sugawara (scientist)
  OPTIONAL {
    ?scientist a dbo:Scientist ;
               foaf:name ""Hirotaka Sugawara"" .
    ?scientist dbo:residence ?scientistResidence .
  }

  # Residence of Kazuaki Nagasawa (player)
  OPTIONAL {
    ?player a dbo:FootballPlayer ;
            foaf:name ""Kazuaki Nagasawa"" .
    ?player dbo:residence ?playerResidence .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
130,17,val,"Give me the entity in the administration, that is American, of the award of Živko Ključe and figure known as Vanderbilt Commodores.",SELECT ?result WHERE { <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Vanderbilt_Commodores> . ?result <http://dbpedia.org/ontology/state> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration
WHERE {
  # Find the administration related to Živko Ključe
  ?award dbo:recipient ?person .
  FILTER (str(?award) = ""Živko_Ključe"") .

  # Find the administration related to Vanderbilt Commodores
  ?figure dbo:member ?administration .
  FILTER (str(?figure) = ""Vanderbilt_Commodores"") .

  # Ensure the administration is American
  ?administration dbo:nationality dbr:United_States .

  # Link both conditions through a common administration entity
  ?person dbo:memberOf ?administration .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
965,54,val,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Find the politician born on 1854-05-24
  ?person dbo:birthDate ""1854-05-24""^^xsd:date ;
          a dbo:Politician .

  # Step 2: Identify their spouse
  ?spouse dbp:spouse ?person .

  # Step 3: Find Princess Victoria of Hesse and by Rhine's spouse
  dbr:Princess_Victoria_of_Hesse_and_by_Rhine dbp:spouse ?princessSpouse .

  # Step 4: Identify the parent of George Mountbatten, 2nd Marquess of Milford Haven
  dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven dbo:parent ?mountbattenParent .

  # Step 5: Find a royalty child from the politician and their spouse
  ?royaltyChild dbp:childOf ?spouse ;
                dbp:childOf ?person ;
                a dbo:Royalty .

  # Step 6: Identify the parent of that royal child
  ?royaltyChild dbo:parent ?parent .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
965,50,val,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  ?politician a dbo:Politician ;
              dbo:birthDate ""1854-05-24""^^xsd:date ;
              dbo:child ?royaltyChild, ?nobleChild .

  FILTER EXISTS { 
    ?royaltyChild a dbo:Royalty ;
                  rdfs:label ""Prince George of Battenberg""@en .
  }

  ?nobleChild a dbo:Noble .

  ?parent dbo:child ?politician .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
826,41,val,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Louis I, Grand Duke of Hesse and his children
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:child ?child .
  
  # Child who is royalty
  ?child a dbo:Monarch .

  # Spouse of Johann Heinrich Appel's child
  ?appelChild dbo:spouse ?spouse .
  dbr:Johann_Heinrich_Appel dbo:child ?appelChild .

  # Predecessor of Louis IV, Grand Duke of Hesse
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:predecessor ?predecessor .

  # Successor of the child who is royalty and spouse of Johann Heinrich Appel's child
  ?child dbo:successor ?successor .
  FILTER (?spouse = ?child) 
  FILTER (?predecessor = ?child)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
456,48,val,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and band of the band, that is a musical artist, of Dean Brody.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse
WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Ross_Newton .
  
  ?movie dbo:genre ?workGenre .
  FILTER (?workGenre IN (dbr:Work, dbr:TelevisionShow))

  ?band dbo:member ?musicalArtist .
  ?musicalArtist dbo:associatedBand ?band .

  ?dean dbr:Dean_Brody ;
        dbo:associatedBand ?band .

  ?actor dbo:actedIn ?movie .
  
  OPTIONAL {
    ?actor dbo:spouse ?spouse .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
124,51,val,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2
WHERE {
  # Find the person born on 1850-06-24
  ?person dbo:birthDate ""1850-06-24""^^xsd:date ;
          dbo:militaryConflict ?conflict1 .
  
  # Frank Rhodes' military force in a war that is an event, military conflict, and societal event
  dbr:Frank_Rhodes dbo:militaryConflict ?war ;
                   dbo:militaryForce ?militaryForce2 .

  FILTER (
    ?war rdf:type dbo:MilitaryConflict ;
         rdf:type dbo:Event ;
         rdf:type dbo:SocietalEvent .
  )
  
  # Get the military force of the conflict for the person born on 1850-06-24
  ?conflict1 dbo:militaryForce ?militaryForce1 .
}
```",5,10,6,3,2,3,3,71,0,0,1085,0,0.0,0
124,52,val,"Give me the military force of Battle of Atbara and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleMilitaryForce ?commander ?australianUnit ?warMilitaryForce
WHERE {
  # Battle of Atbara military force and commander
  dbr:Battle_of_Atbara dbo:militaryConflicts ?battleMilitaryForce .
  OPTIONAL { ?battleMilitaryForce dbo:commander ?commander . }

  # A Battery, Royal Australian Artillery reference to a societal event and military conflict
  dbr:A_Battery,_Royal_Australian_Artillery dbo:partOf ?australianUnit .
  FILTER (isLiteral(?australianUnit) && ?australianUnit IN (""societal event"", ""military conflict""))

  # Frank Rhodes' war military force
  dbr:Frank_Rhodes dbo:militaryConflicts ?warMilitaryForce .
  FILTER (?warMilitaryForce IN (dbr:Battle_of_Atbara, ""event"", ""military conflict"", ""societal event""))
}
```",6,14,7,3,3,3,3,71,0,0,1,0,0.0,0
170,22,val,Give me the birth place of the awardee of People's Artist of Russia and entity in the work of International Energy Agency.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace
WHERE {
  # Find the awardee of People's Artist of Russia
  ?person dbo:title ""People's Artist of Russia""@ru .
  
  # Get their birthplace
  ?person dbo:birthPlace ?birthPlace .

  # Ensure they are also associated with the International Energy Agency
  OPTIONAL {
    ?work dbr:International_Energy_Agency dbo:employee ?person .
  }
}
```",4,4,5,2,2,2,3,28,0,0,12,0,0.0,0
839,40,val,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of Peter Schorowsky and band of Matthias Röhr.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?bandName
WHERE {
  # Kevin Russell (musician)
  { 
    ?kevin a dbo:MusicalArtist ;
           foaf:name ""Kevin Russell"" .
    ?kevin dbo:memberOfBand ?band1 .
    ?band1 dbp:name ?bandName .
  }
  
  UNION
  
  # Peter Schorowsky
  {
    ?peter a dbo:MusicalArtist ;
           foaf:name ""Peter Schorowsky"" .
    ?peter dbo:memberOfBand ?band2 .
    ?band2 dbp:name ?bandName .
  }

  UNION

  # Matthias Röhr
  {
    ?matthias a dbo:MusicalArtist ;
              foaf:name ""Matthias Röhr"" .
    ?matthias dbo:memberOfBand ?band3 .
    ?band3 dbp:name ?bandName .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
507,50,val,"Give me the professional in the profession of Guy Ferland and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/director> ?result . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT DISTINCT ?person ?profession ?movie
WHERE {
  # Find Guy Ferland's profession
  dbpedia:Guy_Ferland dbo:profession ?ferlandProfession .
  
  # Find a person with the same profession as Guy Ferland
  ?person dbo:profession ?ferlandProfession .
  
  # Ensure this person is a director of a movie that is also classified as a work
  ?movie dbo:type dbr:Film ;
         dbo:type dbr:CreativeWork .
  ?person dbo:director ?movie .

  # Filter by birth date
  ?person dbo:birthDate ""1919-06-17""^^xsd:date .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
987,54,val,"Give me the entity in Montenegro and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorBirthPlace ?bandBirthPlace
WHERE {
  # Find the film with Emir Hadžihafizbegović
  ?film dbo:starring dbr:Emir_Hadžihafizbegović .
  
  # Get an actor from that film
  ?film dbo:starring ?actor .
  
  # Ensure the actor's birthplace is in Montenegro
  ?actor dbp:birthPlace ?actorBirthPlace ;
         dbp:birthPlace dbr:Montenegro .

  # Find Šako Polumenta and his band
  ?band dbo:member dbr:Šako_Polumenta .
  
  # Ensure Šako Polumenta is an artist and a musical artist
  ?band dbo:type dbr:MusicalArtist ;
        dbo:type dbr:Artist .

  # Get the birthplace of the band (assuming it's related to its members)
  ?band dbp:birthPlace ?bandBirthPlace .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
926,44,val,"Give me the successor of the child of Ahmed III and father of Mahmud II and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Ahmed III and his child Mustafa III
  dbr:Ahmed_III dbo:child dbr:Mustafa_III .
  
  # Mustafa III's father is Ahmed III, and his child is Mahmud II
  dbr:Mustafa_III dbo:father dbr:Ahmed_III ;
                  dbo:child dbr:Mahmud_II .

  # Mahmud II's successor
  dbr:Mahmud_II dbo:successor ?successor .
  
  # Ensure the successor is royalty
  ?successor a dbo:Monarch .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
826,48,val,Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of the child of the father of Anna Magdalena Appel.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor
WHERE {
  # Find Prince Friedrich of Hesse and by Rhine's parent
  ?prince rdf:type dbo:Person ;
          foaf:name ""Prince Friedrich of Hesse and by Rhine"" .
  
  ?parent dbo:child ?prince .

  # Find Anna Magdalena Appel's father
  ?anna rdf:type dbo:Person ;
        foaf:name ""Anna Magdalena Appel"" .
  
  ?father dbo:child ?anna .

  # Find a child of Anna Magdalena Appel's father and their spouse
  ?child dbo:parent ?father .
  ?spouse dbo:spouse ?child .

  # Find the predecessor of this spouse
  ?predecessor rdfs:subClassOf|dbo:predecessor ?spouse .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
459,19,val,"Give me the governor of Dana Murphy and governor of the death place, that is a settlement, of Cliff Roquemore and person born as John Kevin Stitt.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorDanaMurphy ?governorCliffRoquemoreDeathPlace ?birthNameJohnKevinStitt
WHERE {
  # Governor of the place where Dana Murphy lived
  ?danaMurphy dbo:residence ?place1 .
  ?place1 dbo:governmentHead ?governorDanaMurphy .

  # Governor of the death place (settlement) of Cliff Roquemore
  ?cliffRoquemore dbo:deathPlace ?deathPlace .
  FILTER(STRSTARTS(STR(?deathPlace), ""http://dbpedia.org/resource/Category:Settlements""))
  ?deathPlace dbo:governmentHead ?governorCliffRoquemoreDeathPlace .

  # Person born as John Kevin Stitt
  ?johnKevinStitt foaf:name ""John Kevin Stitt""@en .
  ?johnKevinStitt foaf:givenName ?birthNameJohnKevinStitt .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
124,42,val,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of Battle of Tamai and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander
WHERE {
  # Find commanders of A Field Battery, Royal Australian Artillery in a military conflict
  ?battery rdf:type dbo:MilitaryUnit ;
           dbo:partOf ?conflict1 .
  
  FILTER (str(?battery) = ""A_Field_Battery,_Royal_Australian_Artillery"")

  ?commander dbo:commanded ?battery .

  # Find commanders of the Battle of Tamai
  ?force rdf:type dbo:MilitaryForce ;
         dbo:participatedIn ?conflict2 .
  
  FILTER (str(?conflict2) = ""Battle_of_Tamai"")

  ?commander dbo:commanded ?force .

  # Find commanders associated with Herbert Kitchener, 1st Earl Kitchener
  ?kitchenerForce rdf:type dbo:MilitaryForce ;
                  dbo:participatedIn ?conflict3 .
  
  FILTER (str(?kitchener) = ""Herbert_Kitchener,_1st_Earl_Kitchener"")

  ?commander dbo:commanded ?kitchenerForce .

  # Ensure the commander is common across all specified conflicts
  VALUES ?conflict1 { dbr:Military_Conflict_Related_to_A_Field_Battery }
  VALUES ?conflict2 { dbr:Battle_of_Tamai }
  VALUES ?conflict3 { dbr:Military_Conflict_Related_to_Herbert_Kitchener }

}
ORDER BY ?commander",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
445,51,val,Give me the entity in the award of the commander in Battle of Saint-Mihiel and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v1 <http://dbpedia.org/property/awards> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity
WHERE {
  # Pattern for the award of Commander in Battle of Saint-Mihiel
  ?award dbo:recipient ?entity .
  ?award dbo:name ""Commander"" .
  ?battle dbo:participatedIn ?award .
  ?battle dbr:Battle_of_Saint-Mihiel .

  # Pattern for death place of awardee of Royal Astronomical Society
  ?awardee dbo:recipient ?entity .
  ?awardee dbo:name ""Royal Astronomical Society"" .
  ?deathPlace dbo:placeOfBirth ?entity .
}
```

This query attempts to find an entity that is both a recipient of the ""Commander"" award in the Battle of Saint-Mihiel and has a death place associated with being awarded by the Royal Astronomical Society.",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
507,53,val,Give me the professional in the profession of Guy Ferland and director of Entertaining Mr Sloane (film) and spouse of the person born as the birth name of Anne V. Coates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional
WHERE {
  # Guy Ferland's profession
  dbr:Guy_Ferland dbo:profession ?guyProfession .
  
  # Director of ""Entertaining Mr Sloane""
  dbr:Entertaining_Mr_Sloane dbo:director ?director .
  
  # Anne V. Coates' spouse
  dbr:Anne_V._Coates foaf:surname ""Coates"" ;
                     foaf:mbox <mailto:annevcoates@example.com> . # Assuming a placeholder email for demonstration
  
  ?spouse foaf:surname ""Coates"" ;
          foaf:mbox <mailto:annevcoates@example.com> ; # Placeholder
          foaf:partner ?professional .
  
  # Ensure the professional matches all conditions
  FILTER (?guyProfession = ?director && ?professional = ?spouse)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
791,55,val,"Give me the spouse of the spouse, that is a royalty, of Emperor Takakura and father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of Emperor Takakura.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouseOfSpouse ?child ?predecessor
WHERE {
  # Emperor Takakura's spouse
  ?emperorTakakura dbo:spouse ?spouse .
  
  # Spouse of the spouse who is royalty
  ?spouse dbo:spouse ?spouseOfSpouse .
  FILTER (dbo:royalty(?spouseOfSpouse)) .

  # Child of Emperor Takakura who is royalty
  ?emperorTakakura dbo:child ?child .
  FILTER (dbo:royalty(?child)) .

  # Predecessor of the child
  ?predecessor dbp:successor ?child .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
527,15,val,"Give me the actor of the movie, that is a work and English and a television show, with the professional in Actor and author of The Boy Who Kicked Pigs.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/The_Boy_Who_Kicked_Pigs> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:type dbr:Television_show .
  ?movie dbo:language dbr:English_language .
  ?movie dbo:starring ?actor .
  ?actor a dbo:Actor .
  
  ?book rdfs:label ""The Boy Who Kicked Pigs""@en .
  ?book dbo:author ?actor .

  FILTER (lang(?movieLabel) = 'en')
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
274,19,val,"Give me the associated musical artist of Cecil Taylor and professional in  and band member of the person born, that is a musical artist, as John Birks Gillespie.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Cecil Taylor details
  dbr:Cecil_Taylor a dbo:MusicalArtist ;
                   dbo:bandMemberOrCollaborator ?person .

  # Dizzy Gillespie details
  dbr:Dizzy_Gillespie a dbo:MusicalArtist ;
                      dbo:birthPlace ?gillespieBirthPlace .

  # Person associated with Cecil Taylor and born in the same place as Dizzy Gillespie
  ?person a dbo:MusicalArtist ;
          dbo:birthPlace ?birthPlace .
  
  FILTER (?birthPlace = ?gillespieBirthPlace)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
579,17,val,"Give me the native of Edinburgh and person born as the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native ?birthName ?officeHolder
WHERE {
  ?native a dbo:Person ;
          dbo:nationality dbr:United_Kingdom ;
          dbo:placeOfBirth dbr:Edinburgh .
  
  OPTIONAL { 
    ?native dbp:birthName ?birthName .
  }
  
  OPTIONAL {
    ?native dbo:officeHolderOf ?office .
    ?office a dbo:Office .
  }

  FILTER EXISTS { ?native dbp:birthName ?birthName } .
  FILTER EXISTS { ?native dbo:officeHolderOf ?office } .
}
ORDER BY ?native
```

This query does the following:
- Selects individuals (`?native`) who are persons and have Edinburgh as their place of birth.
- Retrieves their birth name (`?birthName`).
- Checks if they hold an office (`?officeHolder`), ensuring that only those with both a recorded birth name and an office holding status are returned.",4,5,5,3,2,3,2,20,0,0,18,0,0.0,0
933,44,val,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and reference to the birth name of Alan Warner (musician) and band of Mike Elliott (saxophonist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandOfAlanWarner ?birthNameOfAlanWarner ?bandOfMikeElliott
WHERE {
  # Alan Warner's band that is a group, band, and organization
  dbr:Alan_Warner_(musician) dbo:musicalArtist ?bandOfAlanWarner .
  
  FILTER EXISTS { ?bandOfAlanWarner rdf:type dbo:MusicalGroup . }
  FILTER EXISTS { ?bandOfAlanWarner rdf:type dbo:Band . }
  FILTER EXISTS { ?bandOfAlanWarner rdf:type dbo:Organization . }

  # Alan Warner's birth name
  dbr:Alan_Warner_(musician) dbp:birthName ?birthNameOfAlanWarner .

  # Mike Elliott's band
  dbr:Mike_Elliott_(saxophonist) dbo:musicalArtist ?bandOfMikeElliott .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
839,46,val,"Give me the band of the member of Böhse Onkelz and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?memberBand ?kevinRussellBand
WHERE {
  # Find members of Böhse Onkelz and their bands
  ?onkelzMember dbo:band dbr:Böhse_Onkelz .
  ?onkelzMember dbo:band ?memberBand .

  # Kevin Russell's birthdate and his band as a musical artist
  dbr:Kevin_Russell dbo:birthDate ?kevinRussBirthDate ;
                    foaf:name ""Kevin Russell""^^xsd:string .
  
  OPTIONAL {
    ?kevinRussAlias foaf:name ?aliasName .
    ?kevinRussAlias dbo:birthDate ?kevinRussBirthDate .
    ?kevinRussAlias dbo:band ?kevinRussBand .
    FILTER(?aliasName = ""Kevin Russell"")
  }

  # Ensure Kevin Russell is a musical artist
  OPTIONAL {
    ?kevinRussArtist rdf:type dbo:MusicalArtist ;
                     foaf:name ""Kevin Russell""^^xsd:string .
  }
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
926,55,val,"Give me the child of the father, that is a royalty, of Mustafa III and father of the father of Abdulaziz and successor of the child of Ahmed III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?royalFigure
WHERE {
  # Mustafa III's father
  ?mustafaIII dbo:father ?mustafaFather .
  
  # Mustafa III's grandfather (father of his father)
  ?mustafaFather dbo:father ?mustafaGrandfather .

  # Abdulaziz's grandfather (father of his father)
  ?abdulaziz dbo:father ?abdulazizFather .
  ?abdulazizFather dbo:father ?abdulazizGrandfather .

  # Ahmed III's child
  ?ahmedIII dbo:child ?ahmedChild .

  # Successor of Ahmed III's child
  ?ahmedChild dbo:successor ?successorOfAhmedChild .

  # The royal figure we are looking for
  ?mustafaGrandfather dbo:child ?royalFigure .
  
  FILTER (?royalFigure = ?abdulazizGrandfather && ?royalFigure = ?successorOfAhmedChild)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
443,21,val,Give me the birthplace of Ulf Lundell and landmark at elevation of 28 and birthplace of the work of yes.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""yes""@en . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ulfLundellBirthplace ?landmarkElevation28 ?workOfYesBirthplace
WHERE {
  # Ulf Lundell's birthplace
  dbr:Ulf_Lundell dbo:birthPlace ?ulfLundellBirthplace .

  # Landmark at elevation of 28 (assuming meters)
  ?landmark a dbo:Landmark ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""28""^^xsd:integer) 
  BIND(?landmark AS ?landmarkElevation28)

  # Birthplace associated with the work of Yes
  {
    SELECT DISTINCT ?workOfYesBirthplace WHERE {
      ?member dbo:band dbr:Yes ;
              dbo:birthPlace ?workOfYesBirthplace .
    }
  } UNION {
    SELECT DISTINCT ?workOfYesBirthplace WHERE {
      ?album dbo:artist dbr:Yes ;
             dbo:locationCreated ?workOfYesBirthplace .
    }
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
98,19,val,Give me the entity in Philippines and region of the time zone of Lopez Jaena and birth place of Paolo Ballesteros.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInPhilippines ?timeZoneRegion ?birthPlace
WHERE {
  # Find Lopez Jaena's time zone and its region
  ?lorenzoJaena a dbo:Person ;
                foaf:name ""Lopez Jaena"" .
  
  ?lorenzoJaena dbo:locatedIn ?location .
  ?location dbo:timeZone ?timeZone .
  ?timeZone dbo:region ?timeZoneRegion .

  # Find Paolo Ballesteros's birth place
  ?paoloBallesteros a dbo:Person ;
                   foaf:name ""Paolo Ballesteros"" .
  
  ?paoloBallesteros dbo:birthPlace ?birthPlace .

  # Ensure the entity is in the Philippines
  ?entityInPhilippines dbo:country dbr:Philippines ;
                      (dbo:timeZone|dbo:birthPlace) ?locationOrBirthPlace .
  
  FILTER (?location = ?locationOrBirthPlace || ?birthPlace = ?locationOrBirthPlace)
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
124,40,val,"Give me the military force of Battle of Tamai and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of Battle of Atbara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleOfTamaiForce ?tamaiCommander ?societalEvent ?atbaraForce
WHERE {
  # Military force of Battle of Tamai
  ?battleOfTamai dbo:militaryConflict dbr:Battle_of_Tamai .
  ?battleOfTamai dbo:participatingMilitaryUnit ?battleOfTamaiForce .

  # Commander in the war related to Battle of Tamai
  ?war dbo:commander ?tamaiCommander .
  ?war dbo:militaryConflict dbr:Battle_of_Tamai .

  # Societal event and military conflict associated with 'A' Battery, Royal Australian Artillery
  ?societalEvent dbo:participatingOrganisation dbr:A_Battery,_Royal_Australian_Artillery ;
                a dbo:SocietalEvent .
  
  # Military force of Battle of Atbara
  ?battleOfAtbara dbo:militaryConflict dbr:Battle_of_Atbara .
  ?battleOfAtbara dbo:participatingMilitaryUnit ?atbaraForce .

  # Ensure 'A' Battery is an Australian organization and military unit
  dbr:A_Battery,_Royal_Australian_Artillery dbo:nationality dbr:Australia ;
                                         a dbo:MilitaryUnit .
}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
715,43,val,"Give me the leader of Ministry of the Air (Spain) and commander in Rif War and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?personName
WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolderOf dbr:Ministry_of_the_Air_(Spain) ;
          dbo:commanderInRifWar true ;
          dbo:commanderInForceOfMayor true ;
          dbo:electedAsPresidentDuring dbp:1933_Spanish_general_election .

  ?person dbo:name ?personName .
  
  FILTER EXISTS { 
    ?person dbo:officeHolderOf dbr:Ministry_of_the_Air_(Spain) .
  }
  FILTER EXISTS {
    ?person dbo:commanderInRifWar true .
  }
  FILTER EXISTS {
    ?person dbo:commanderInForceOfMayor true .
  }
  FILTER EXISTS {
    ?person dbo:electedAsPresidentDuring dbp:1933_Spanish_general_election .
  }
}
ORDER BY ?personName
LIMIT 1",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
456,45,val,"Give me the spouse of Danielle Spencer (Australian actress) and professional in  and band of the band, that is a musical artist, of the band of Alan Doyle.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse ?band ?musician
WHERE {
  # Find Danielle Spencer's spouse
  ?danielle a dbo:Person ;
            foaf:name ""Danielle Spencer"" ;
            dbp:nationality dbc:Australian_people .
  
  OPTIONAL { 
    ?danielle dbo:spouse ?spouse .
  }
  
  # Find Alan Doyle's band and its musical artist members
  ?alan a dbo:Person ;
        foaf:name ""Alan Doyle"" .

  ?alan dbo:musicalArtistIn ?band .
  
  ?band a dbo:Band ;
        dbo:member ?musician .
  
  OPTIONAL {
    ?musician a dbo:MusicalArtist .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
573,49,val,"Give me the person decedent at the administration, that is a region, of Charlie Baker and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person
WHERE {
  # Charlie Baker's administration as a region
  dbr:Charlie_Baker dbo:officeHolderOf ?administration .
  
  # Decedent at the administration of Charlie Baker
  ?person dbo:decedentAt ?administration .

  # Person is a parent of an author who is both a politician and an office holder
  ?author dbo:parent ?person ;
          dbo:authorOf dbr:John_Quincy_Adams_Works .
  
  FILTER EXISTS { ?author dbo:politician . }
  FILTER EXISTS { ?author dbo:officeHolder . }
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
773,40,val,Give me the parent of Carloman of Bavaria and parent of Charles the Fat and spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfCarloman ?parentOfCharlesTheFat ?spouseOfGrandfather
WHERE {
  # Parent of Carloman of Bavaria
  dbr:Claudius_of_Bavaria dbo:child dbr:Carloman_of_Bavaria .
  ?parentOfCarloman dbo:child dbr:Carloman_of_Bavaria .

  # Parent of Charles the Fat
  dbr:Luitgard_of_Swabia dbo:child dbr:Charles_the_Fat .
  ?parentOfCharlesTheFat dbo:child dbr:Charles_the_Fat .

  # Spouse of the father of the parent of Bernard (son of Charles the Fat)
  dbr:Bruno_of_Saxony dbo:child dbr:Bernard_I_of_Italy . # Bernard's father
  ?grandfatherOfBernard dbo:child dbr:Bruno_of_Saxony .   # Grandfather of Bernard
  ?spouseOfGrandfather dbo:maleSpouse ?grandfatherOfBernard .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
166,17,val,"Give me the resting place of Gonzalo Queipo de Llano and entity in the territory administered, that is a country, from the reference to Madrid.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?v3 <http://dbpedia.org/ontology/capital> ?v0 . <http://dbpedia.org/resource/Gonzalo_Queipo_de_Llano> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?restingPlace ?countryAdministered
WHERE {
  # Identify Gonzalo Queipo de Llano and his death place
  dbr:Gonzalo_Queipo_de_Llano dbo:deathPlace ?restingPlace .

  # Find territories he administered that are countries
  dbr:Gonzalo_Queipo_de_Llano dbo:countryAdministered ?administeredEntity .
  ?administeredEntity rdf:type dbo:Country ;
                     rdfs:label ?countryLabel .

  # Ensure the reference to Madrid is included in some form (e.g., as a place of significance)
  OPTIONAL {
    dbr:Gonzalo_Queipo_de_Llano dbo:placeOfBirth dbr:Madrid .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
445,50,val,Give me the entity in the award of George H. Cameron and death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?deathPlace
WHERE {
  # Find the award associated with George H. Cameron
  ?person dbo:recipientOf ?award .
  FILTER (str(?person) = ""George_H._Cameron"")

  # Find the establishment and its awardee
  ?establishment dbo:foundingDate ?foundingDate ;
                dbo:awardee ?awardee .

  # Filter by the specific founding date
  FILTER (xsd:date(?foundingDate) = ""1820-03-10""^^xsd:date)

  # Get the death place of the awardee
  ?awardee dbo:deathPlace ?deathPlace .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
508,15,val,"Give me the birthplace of Ma Bufang and birthplace of the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ma_Bufang> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?maBufangBirthplace ?hayaoTadaWar ?commanderBirthplace
WHERE {
  # Ma Bufang's birthplace
  dbr:Ma_Bufang dbo:birthPlace ?maBufangBirthplace .

  # Hayao Tada's involvement in a war
  dbr:Hayao_Tada dbo:militaryConflict ?hayaoTadaWar .
  
  # Find the commander of that war and their birthplace
  ?commander dbo:role ""Commander"" ;
             dbo:militaryConflict ?hayaoTadaWar ;
             dbo:birthPlace ?commanderBirthplace .

}
```",4,8,5,3,2,3,2,20,0,0,3,0,0.0,0
47,49,val,"Give me the office of the administration of Jagdeep Dhankhar and office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?jagdeepOffice ?awardeeOffice
WHERE {
  # Office of Jagdeep Dhankhar
  dbr:Jagdeep_Dhankhar dbo:office ?jagdeepOffice .

  # A specific award in India and its awardees
  ?award a dbo:Award ;
         dbo:country dbr:India .
  
  OPTIONAL {
    ?awardee dbo:receivedAward ?award ;
            dbo:office ?awardeeOffice .
  }
}
```

This query does the following:
- Retrieves the office held by Jagdeep Dhankhar.
- Identifies awards given in India and their awardees, along with the offices of those awardees.",5,6,6,3,2,3,3,71,0,0,11,0,0.0,0
826,52,val,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v2 <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Louis I, Grand Duke of Hesse
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:child ?royaltyChild .
  
  # The royalty child must be a royalty
  ?royaltyChild rdf:type dbo:Monarch .

  # Father of Anna Magdalena Appel (Johann Sebastian Bach)
  dbr:Anna_Magdalena_Bach dbo:father ?bachFather .
  
  # Child of Johann Sebastian Bach
  ?bachFather dbo:child ?bachChild .

  # Spouse of the child of Johann Sebastian Bach
  ?bachChild dbo:spouse ?spouse .

  # Predecessor of Louis IV, Grand Duke of Hesse
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:predecessor ?predecessor .

  # The spouse must be the same as the royalty child
  FILTER (?royaltyChild = ?spouse)

  # Successor of the identified royalty
  ?predecessor dbo:successor ?successor .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
417,54,val,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child
WHERE {
  # Leader of Colony of Greenland
  ?leader dbo:country dbr:Greenland .
  
  # Father of the leader (royalty)
  ?father dbo:spouse ?leader ;
          a dbo:Monarch .

  # Child of the father (also royalty)
  ?child dbo:parent ?father ;
         a dbo:Monarch .

  # Parent of Count Ingolf of Rosenborg (royalty)
  ?parent dbp:child dbr:Count_Ingolf_of_Rosenborg ;
          a dbo:Monarch .

  # Spouse of this parent
  ?spouse dbo:spouse ?parent .

  # Ensure the child is also the spouse
  FILTER (?child = ?spouse)

  # Child of Alexandrine of Mecklenburg-Schwerin
  ?alex dbp:child dbr:Aleksandrine_of_Mecklenburg-Schwerin .
  
  # Ensure the child matches this condition
  FILTER (?child = ?alex)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
976,45,val,Give me the office of Meral Akşener and office of Mustafa Şentop and office of the person born as the birth name of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?office
WHERE {
  VALUES ?person { 
    dbr:Meral_Akşener 
    dbr:Mustafa_Şentop 
    dbr:Naci_Bostancı 
  }
  
  OPTIONAL {
    ?person dbo:positionHeld ?office .
  }
}
```",5,5,6,3,3,3,3,71,0,3,1,0.0,0.0,0
216,49,val,"Give me the player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?playerInTeam ?birthTeam ?deathDatePavelVezhinov
WHERE {
  # Find the coach of Croatia national under-21 football team
  ?coach dbo:position dbr:Croatia_national_under-21_football_team .
  
  # Find a person who is a sports manager, soccer manager, and player
  ?person dbo:sportsManager true ;
          dbo:soccerManager true ;
          dbo:soccerPlayer true .

  # Ensure this person was born in a team
  ?person dbp:birthTeam ?birthTeam .

  # Get the death date of Pavel Vezhinov
  dbr:Pavel_Vezhinov dbo:dateOfDeath ?deathDatePavelVezhinov .

  # Find players in the birth team of this person
  ?playerInTeam dbo:team ?birthTeam .
  
  # Ensure the coach is related to the person (e.g., managed by or coached)
  OPTIONAL { ?coach dbo:managedBy ?person . }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
933,50,val,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?musician a dbo:MusicArtist ;
            foaf:name ""Alan Warner"" .
  
  ?band dbo:musicArtist ?musician ;
        a dbo:Band, dbo:Organization, dbo:Group .

  ?musician foaf:birthday ?birthday .
  ?musician foaf:givenName ?firstName ;
            foaf:familyName ?lastName .
  
  OPTIONAL {
    ?musician foaf:name ?birthName .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
445,46,val,"Give me the death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?residenceCountry
WHERE {
  # Find an awardee of the Royal Astronomical Society and their death place
  ?awardee dbo:awardReceived dbr:Royal_Astronomical_Society .
  ?awardee dbo:deathPlace ?deathPlace .

  # Find a resident athlete from Great Britain and their residence country
  ?athlete dbo:nationality dbr:United_Kingdom ;
           rdf:type dbo:Athlete .
  ?athlete dbo:residenceCountry ?residenceCountry .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
874,16,val,"Give me the band of the writer, that is an artist and a musical artist, of Mezzanine (album) and band of the band member of The Jones Gang.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfWriter ?bandOfJonesGangMember
WHERE {
  # Find the writer of ""Mezzanine""
  ?album dbo:artist dbr:Massive_Attack ;
         rdfs:label ""Mezzanine""@en .
  
  # Ensure the artist is both an artist and a musical artist
  ?writer dbo:associatedBand ?bandOfWriter ;
          rdf:type dbo:Artist, dbo:MusicalArtist .

  # Link the writer to the album
  ?album dbo:artist ?writer .

  # Find members of ""The Jones Gang""
  ?theJonesGang dbo:member ?jonesGangMember .
  ?theJonesGang rdfs:label ""The Jones Gang""@en .

  # Get bands associated with these members
  ?jonesGangMember dbo:associatedBand ?bandOfJonesGangMember .
}",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
83,17,val,"Give me the ruling party in Fortaleza and party of the governor of the commander, that is a politician, in Central African Republic Civil War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Fortaleza> <http://dbpedia.org/property/leaderParty> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/governor> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?rulingPartyInFortaleza ?politicianParty
WHERE {
  # Ruling party in Fortaleza
  ?fortaleza dbo:government ?government .
  ?government dbo:rulingParty ?rulingPartyInFortaleza .

  # Politician involved in the Central African Republic Civil War
  ?civilWar dbr:Central_African_Republic_Civil_War .
  ?politician dbo:memberOf ?party .
  ?politician dbo:occupation dbr:Politician .
  ?commander dbo:politicalAffiliation ?politicianParty .

  # Ensure the politician is involved in the civil war
  ?civilWar dbo:participant ?politician .

  FILTER(?fortaleza = dbr:Fortaleza)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
456,53,val,"Give me the band of the band, that is a musical artist, of Dean Brody and spouse of the actor of the movie, that is a work and a television show, with Ross Newton and professional in .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  # Find Dean Brody's band
  dbr:Dean_Brody dbo:musicalArtist ?band .

  # Find Ross Newton's works (movies or TV shows)
  ?work dbo:starring ?actor .
  ?work dbo:starring dbr:Ross_Newton .

  # Ensure the work is a movie or TV show
  FILTER (?work IN (dbr:Category:Film_by_year, dbr:Category:Television_series))

  # Find the spouse of the actor
  ?actor dbo:spouse ?spouse .
  
  # Link the band to the spouse's profession if needed
  OPTIONAL { ?spouse dbo:profession ?profession }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
417,51,val,"Give me the child of the father of Frederick IX of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?childOfFather ?grandChildOfParent
WHERE {
  # Frederick IX of Denmark's father
  ?frederickIX dbo:father ?fatherFrederix .
  
  # Child of Frederick IX's father
  ?fatherFrederix dbo:child ?childOfFather .

  # Alexandrine of Mecklenburg-Schwerin's royal parent
  ?alexandrine dbp:parent ?royalParent .
  FILTER EXISTS { ?royalParent a dbo:Monarch } 

  # Child of the royal parent
  ?royalParent dbo:child ?childOfRoyalParent .

  # Grandchild (child of the child) of the royal parent
  ?childOfRoyalParent dbo:child ?grandChildOfParent .

  # Ensure both are royalty
  FILTER EXISTS { ?childOfFather a dbo:Monarch }
  FILTER EXISTS { ?grandChildOfParent a dbo:Monarch }

  # Bind Frederick IX to ensure correct context
  VALUES ?frederickIX { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> }
  
  # Bind Alexandrine to ensure correct context
  VALUES ?alexandrine { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> }
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
36,20,val,Give me the person born in the birth year of Deanne Bray and actor of Being Mrs Elliot and person born as Ayo Makun.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person
WHERE {
  # Get Deanne Bray's birth year
  ?deanneBray dbo:birthYear ?birthYearDeanneBray .
  FILTER (str(?deanneBray) = ""Deanne_Bray"")

  # Find people born in the same year as Deanne Bray
  ?person dbo:birthYear ?birthYearPerson .

  # Get Ayo Makun's birth year
  ?ayoMakun dbo:birthYear ?birthYearAyoMakun .
  FILTER (str(?ayoMakun) = ""Ayo_Makun"")

  # Ensure the person is born in the same year as Deanne Bray and Ayo Makun
  FILTER (?birthYearPerson = ?birthYearDeanneBray && ?birthYearPerson = ?birthYearAyoMakun)

  # Find actor of ""Being Mrs Elliot""
  OPTIONAL {
    ?actor dbo:film ?beingMrsElliot .
    FILTER (str(?beingMrsElliot) = ""Being_Mrs_Elliot"")
    FILTER (?person = ?actor)
  }
}",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
507,48,val,Give me the professional in the profession of Guy Ferland and spouse of the person born as the birth name of Anne V. Coates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional
WHERE {
  # Find Guy Ferland's profession
  ?guyFerland a dbo:Person ;
              foaf:name ""Guy Ferland"" ;
              dbo:profession ?ferlandProfession .

  # Find Anne V. Coates' birth name and spouse
  ?anneCoates a dbo:Person ;
              foaf:name ""Anne V. Coates"" ;
              foaf:mbox ?anneEmail .
              
  OPTIONAL { ?anneCoates foaf:birthday ?birthDate . }
  
  ?spouse a dbo:Person ;
          foaf:mbox ?anneEmail ;
          foaf:familyName ""Coates"" ;
          foaf:name ?spouseName .

  # Find the professional in the same profession as Guy Ferland and spouse of Anne V. Coates
  ?professional a dbo:Person ;
                dbo:profession ?ferlandProfession ;
                foaf:mbox ?anneEmail .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
933,49,val,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of the band of Alan Warner (musician).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfBand
WHERE {
    # Step 1: Find the person born on 1947-04-21 who is a musical artist.
    ?person dbo:birthday ""1947-04-21""^^xsd:date ;
            rdf:type dbo:MusicalArtist .

    # Step 2: Find the band associated with this person that is both a group and an organization.
    ?band dbo:member ?person ;
          rdf:type dbo:Band, dbo:Organization, dbo:MusicalGroup .

    # Step 3: Determine the band of Alan Warner (musician).
    dbr:Alan_Warner_Musician dbo:bandMember ?alanWarnerBand .
    
    # Step 4: Find the band of the band identified in step 2.
    ?bandOfBand dbo:member ?band ;
                rdf:type dbo:Band, dbo:Organization, dbo:MusicalGroup .
}
```",5,9,6,3,2,3,3,71,0,0,4,0,0.0,0
465,49,val,"Give me the successor of the child of Alfonso I d'Este and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successor1 ?successor2
WHERE {
  # Alfonso I d'Este's child
  ?childAlfonso dbo:parent dbr:Alfonso_I_d%27Este ;
               a dbo:Person .

  # Successor of Alfonso I d'Este's child
  ?successor1 dbo:predecessor ?childAlfonso .

  # Charles Orlando, Dauphin of France's parent
  ?parentCharles dbo:child dbr:Charles_Orlando,_Dauphin_of_France ;
                 a dbo:Person .

  # Child of that parent who is royalty
  ?royalChild dbo:parent ?parentCharles ;
              a dbo:RoyalFamilyMember .

  # Successor of the royal child
  ?successor2 dbo:predecessor ?royalChild .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
456,46,val,"Give me the professional in the alter ego of The Shadow and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # The Shadow's alter ego is Lamont Cranston
  dbr:Lamont_Cranston dbo:alterEgoOf dbr:The_Shadow .
  
  # Ross Newton, the actor involved in both a movie and TV show
  dbr:Ross_Newton dbo:profession dbr:Actor ;
                  dbo:spouse ?actorSpouse .

  # The actor must have acted in both a film and a television series
  ?film dbo:starring dbr:Ross_Newton .
  ?tvShow dbo:starring dbr:Ross_Newton .
  
  # Find the professional associated with Lamont Cranston
  ?professional dbo:alterEgoOf dbr:Lamont_Cranston .

  # Ensure the spouse of Ross Newton is the same as the professional found
  FILTER (?actorSpouse = ?professional)
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
554,15,val,Give me the leader of the administration of the party member of Independent politician and leader of Portuguese Mozambique.,SELECT ?result WHERE { <http://dbpedia.org/resource/Portuguese_Mozambique> <http://dbpedia.org/property/leader> ?result . ?v1 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . ?v1 <http://dbpedia.org/property/leader> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administrationLeader
WHERE {
  ?politician a dbo:Independent ;
              dbo:leaderOf dbr:Portuguese_Mozambique .
  
  OPTIONAL { 
    ?administration dbo:head ?administrationLeader .
    ?politician dbo:leaderOf ?administration .
  }
}
```

This query does the following:
- Identifies an individual (`?politician`) who is both an Independent politician and leader of Portuguese Mozambique.
- Uses an `OPTIONAL` clause to find any administration they led and its head (`?administrationLeader`).",4,4,5,3,2,3,2,20,0,0,3,0,0.0,0
888,16,val,"Give me the commander in the force, that is a societal event and an event, of Serhiy Kotenko and awardee of the award of Oleksandr Syrskyi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?event WHERE {
  # Find Serhiy Kotenko and his role as a commander in the force
  dbr:Serhiy_Kotenko dbo:positionHeld ?commanderRole .
  
  # Ensure that this role is related to an event (societal or otherwise)
  ?commanderRole dbo:event ?event .

  # Find Oleksandr Syrskyi award and its awardees
  dbr:Award_of_Oleksandr_Syrskyi dbo:recipient ?awardee .
  
  # Ensure that Serhiy Kotenko is an awardee of this award
  FILTER (?awardee = dbr:Serhiy_Kotenko)
}
```

This query does the following:
- Identifies `?commander` as a role held by Serhiy Kotenko.
- Ensures this role is associated with an event (`?event`).
- Confirms that Serhiy Kotenko is an awardee of the award named after Oleksandr Syrskyi.",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
417,45,val,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and spouse of Princess Caroline-Mathilde of Denmark and child of Christian X of Denmark.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild
WHERE {
  # Alexandrine of Mecklenburg-Schwerin and her spouse
  dbr:Alexandrine_of_Mecklenburg-Schwerin dbo:spouse dbr:Princess_Caroline-Mathilde_of_Denmark .
  
  # Their child who is also a royalty and the child of Christian X
  ?child dbo:parent dbr:Alexandrine_of_Mecklenburg-Schwerin ;
         dbo:parent dbr:Princess_Caroline-Mathilde_of_Denmark ;
         dbo:parent dbr:Christian_X_of_Denmark .
  
  # Ensure the child is a royalty
  ?child rdf:type dbo:Monarch .

  # Find the grandchild of this child who is also a royalty
  ?grandchild dbo:parent ?child .
  ?grandchild rdf:type dbo:Monarch .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
93,16,val,"Give me the death place of the governor of Bob Bartlett and capital of the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?capitalCity
WHERE {
  # Find the death place of Bob Bartlett
  dbr:Bob_Bartlett dbo:placeOfBirth ?birthPlace .
  OPTIONAL { dbr:Bob_Bartlett dbo:deathPlace ?deathPlace . }

  # Identify the region and its capital city where Lake Clark National Park is located
  dbr:Lake_Clark_National_Park_and_Preserve dbo:locatedInRegion ?region .
  ?region a dbo:Region ;
          dbo:capitalCity ?capitalCity .

  FILTER(?region = dbr:Alaska) # Ensure the region is Alaska
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
582,50,val,"Give me the figure known as the nickname of Japan national football team and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname
WHERE {
  # Find the nickname of the Japan national football team
  dbr:Japan_national_football_team dbo:nickname ?nickname .

  # Identify Kazuaki Nagasawa's father who is an athlete, soccer manager, and sports manager
  OPTIONAL {
    dbr:Kazuaki_Nagasawa dbo:father ?father .
    ?father a dbo:Athlete ;
            a dbo:SoccerManager ;
            a dbo:SportsManager .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
573,43,val,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of John Quincy Adams and person decedent at Massachusetts.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v0 <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?residence ?profession WHERE {
  ?person a dbo:Person ;
          dbo:deathPlace ?decedentAtMassachusetts ;
          dbo:spouseOrPartner ?parentOfJohnQuincyAdams .
  
  ?parentOfJohnQuincyAdams dbp:child dbr:John_Quincy_Adams .

  ?residence dbo:settlementType ?settlement ;
             dbo:resident ?person .

  ?profession a dbo:PoliticalOffice ;
              dbo:country dbr:United_States_of_America .
  
  ?person dbo:occupation ?profession .

  FILTER (?decedentAtMassachusetts = dbr:Massachusetts)
}
```",5,7,6,3,3,3,3,71,0,0,2,0,0.0,0
573,50,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  ?author dbo:work ?exchequerStandards .
  FILTER(STRSTARTS(LCASE(?exchequerStandards), ""exchequer standards""))
  
  ?author a dbo:Politician ;
          dbo:officeHolder true .

  ?author dbo:deathPlace ?residence .
  ?residence a dbo:Settlement .

  ?parent dbo:child ?author .

  OPTIONAL {
    ?professional dbp:nationality dbr:United_States_of_America ;
                  dbo:profession dbo:Politician .
  }
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
166,16,val,"Give me the resting place of the military force of Spanish Civil War and entity in the territory administered, that is a country, from Madrid.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?restingPlace ?administeredCountry
WHERE {
  # Find military forces involved in the Spanish Civil War
  ?militaryForce dbo:partOf dbr:Spanish_Civil_War .
  
  # Identify their resting places (e.g., burial sites or memorials)
  OPTIONAL { 
    ?militaryForce dbo:location ?restingPlace .
  }
  
  # Find entities administered from Madrid
  ?administeredCountry dbo:capital dbr:Madrid ;
                      a dbo:Civilization .
  
  # Ensure the military force has some connection to Spain or its territories
  ?militaryForce dbo:country dbr:Spain .
}
ORDER BY ?militaryForce",4,5,5,2,2,3,2,20,0,0,4,0,0.0,0
508,17,val,"Give me the birthplace of Ma Hongkui and birthplace of the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v0 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ma_Hongkui> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?maHongkuiBirthplace ?huYukunCommanderBirthplace
WHERE {
  # Ma Hongkui's birthplace
  dbr:Ma_Hongkui dbo:birthPlace ?maHongkuiBirthplace .

  # Hu Yukun's commander in a military conflict that is also a societal event
  ?huYukun dbo:militaryConflict ?conflict .
  ?conflict rdf:type dbo:MilitaryConflict ;
            dbo:societalEvent true .
  
  ?commander dbo:role ?role .
  ?role dbo:agent ?huYukun ;
        dbo:place ?conflict .
  
  # Ensure the commander is Saudi Arabian
  ?commander dbo:nationality dbr:Saudi_Arabia .

  # Commander's birthplace
  ?commander dbo:birthPlace ?huYukunCommanderBirthplace .
}
```",4,7,5,3,2,3,2,20,0,0,3,0,0.0,0
170,21,val,Give me the domain of the profession of John Scholey and birth place of Era Ziganshina and entity in Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v0 . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professionDomain ?birthPlace ?entityInRussia
WHERE {
  # Profession domain of John Scholey
  OPTIONAL {
    dbr:John_Scholey dbo:profession ?profession .
    ?profession dbo:fieldOfActivity ?professionDomain .
  }

  # Birthplace of Era Ziganshina
  OPTIONAL {
    dbr:Era_Ziganshina dbo:birthPlace ?birthPlace .
  }
  
  # Entity in Russia
  OPTIONAL {
    ?entityInRussia dbo:country dbr:Russia .
  }
}
```",4,4,5,2,3,2,3,28,1,29928,0,3.3412409368839586e-05,1.0,6.682258603407952e-05
965,45,val,"Give me the parent of Louise Mountbatten and spouse of Prince Louis of Battenberg and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentLouise ?spousePrinceLouis ?parentGeorge
WHERE {
  # Louise Mountbatten's parent
  dbr:Louise_Mountbatten dbo:parent ?parentLouise .

  # Spouse of Prince Louis of Battenberg
  dbr:Prince_Louis_of_Battenberg dbo:spouse ?spousePrinceLouis .

  # Parent of George Mountbatten, 2nd Marquess of Milford Haven
  dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven dbo:birthName ""George Mountbatten"" .
  dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven dbo:nobleTitle ?title .
  FILTER (CONTAINS(?title, ""Marquess of Milford Haven""))
  dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven dbo:parent ?parentGeorge .

  # Ensure the spouse and parent are the same person
  FILTER (?spousePrinceLouis = ?parentLouise)
  FILTER (?spousePrinceLouis = ?parentGeorge)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
417,53,val,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of Christian X of Denmark.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild
WHERE {
  # Frederick Francis III and his child
  ?frederick a dbo:GrandDuke ;
             dbo:spouse ?spouseA .
  
  FILTER (str(?frederick) = ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin""^^xsd:string)
  
  # Child of Frederick Francis III
  ?childA dbo:parent ?frederick ;
         a dbo:Person .

  # Spouse of Frederick Francis III who is royalty
  FILTER (dbo:royalty(?spouseA))
  
  # Grandchildren of the spouse
  ?grandchildA dbo:parent ?spouseA ;
              a dbo:Person .
  
  # Ensure grandchild is royalty
  FILTER (dbo:royalty(?grandchildA))

  # Knud, Hereditary Prince of Denmark and his child
  ?knud a dbo:HereditaryPrince ;
        dbo:child ?childB .

  FILTER (str(?knud) = ""Knud, Hereditary Prince of Denmark""^^xsd:string)

  # Christian X of Denmark as parent of Knud
  ?christianX dbo:child ?knud ;
              a dbo:King .
  
  FILTER (str(?christianX) = ""Christian X of Denmark""^^xsd:string)
  
  # Parent of ChildB who is royalty
  ?parentB dbo:parent ?childB ;
           a dbo:Person .

  FILTER (dbo:royalty(?parentB))

  # Find the grandchild that matches the criteria
  ?grandchildA = ?grandchild .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
582,52,val,"Give me the figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?figure ?residence WHERE {
  # Find the figure known as ""--10-19"" and related to Masami Nagasawa
  ?figure dbo:alias ""--10-19"" .
  ?figure dbo:spouse|dbo:child dbr:Masami_Nagasawa .

  # Ensure the figure is an athlete, soccer manager, and sports manager
  ?figure a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager .

  OPTIONAL {
    # Find the residence of the figure
    ?figure foaf:based_near ?residence .
    
    # Reference to Hirotaka Sugawara's connection to the residence
    ?scientist foaf:name ""Hirotaka Sugawara"" .
    ?scientist foaf:based_near ?residence .
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
965,41,val,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the child, that is a royalty, of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  # George Mountbatten, 2nd Marquess of Milford Haven's parent
  ?george dbo:parent ?parent .

  # Princess Victoria of Hesse and by Rhine's spouse
  ?princess dbp:spouse ?spouse1 .
  
  # Spouse of the spouse (i.e., George Mountbatten, 2nd Marquess of Milford Haven)
  ?spouse1 dbp:spouse ?george .

  # Prince Louis of Battenberg's child that is royalty
  ?prince dbo:child ?royalChild .
  ?royalChild a dbo:RoyalFamilyMember .  # Assuming 'dbo:RoyalFamilyMember' represents royalty

  # Linking the parent to the royal child through George Mountbatten
  ?george dbo:parent ?royalParent .
  FILTER (?royalParent = ?parent)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
773,50,val,"Give me the parent of the child, that is a royalty, of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild
WHERE {
  # Louis the German and his child who is royalty
  dbr:Louis_the_German dbo:child ?child1 .
  FILTER EXISTS { ?child1 a dbo:Monarch } .

  # Parent of this child (royalty)
  ?child1 dbo:parent ?parentOfChild .

  # Louis the Pious and his child who is royalty
  dbr:Louis_the_Pious dbo:child ?child2 .
  FILTER EXISTS { ?child2 a dbo:Monarch } .

  # Successor of this child (royalty)
  ?child2 dbo:succeededBy ?successor .

  # Parent of the successor
  ?successor dbo:parent ?parentOfSuccessor .

  # Ensure the parent of the child is the same as the parent of the successor
  FILTER (?parentOfChild = ?parentOfSuccessor)
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
124,46,val,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?militaryForce
WHERE {
  # Frank Rhodes and his involvement in wars
  dbr:Frank_Rhodes dbo:militaryConflict ?war .
  
  # The war must be a military conflict and societal event
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:SocietalEvent .

  # Find the military force involved in this war
  ?war dbo:participatingMilitaryForce ?militaryForce .

  # Reference to 'A' Battery, Royal Australian Artillery
  dbr:A_Battery,_Royal_Australian_Artillery dbo:militaryUnitOf ?reference .
  
  # The reference must be an organization and military unit
  ?reference rdf:type dbo:Organization ;
             rdf:type dbo:MilitaryUnit .

  # The reference must be Australian
  ?reference dbo:nationality dbr:Australia .
}
```",5,13,6,3,2,3,3,71,0,0,9,0,0.0,0
582,27,train,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname
WHERE {
  ?person foaf:name ""Hajime Moriyasu""@en .
  ?person dbo:managerOf ?team .
  ?team a dbo:SportsTeam ;
        rdfs:label ?teamLabel .
  OPTIONAL { ?team dbo:nickname ?nickname . }
  FILTER (LANG(?teamLabel) = 'en')
}
```

This query does the following:
- Identifies `Hajime Moriyasu` as a person.
- Finds the team (`?team`) that he manages.
- Checks if this team is of type `SportsTeam`.
- Retrieves the nickname of the team, if available.",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
47,1,train,Give me the office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office
WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Bidesh Ranjan Bose""@en .
  ?person dbo:officeHolder ?office .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
129,10,train,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?musicalArtist
WHERE {
  # Find the actor associated with ""Dreamville Presents: Revenge""
  ?event dbr:Dreamville_Presents:_Revenge .
  ?event dbo:actor ?actor .

  # Find the musical artist associated with this actor
  ?actor dbo:musicalArtist ?musicalArtist .

  # Ensure that the musical artist is an organization
  ?musicalArtist a dbo:MusicalGroup ;
                 dbo:type dbr:Organization .
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
926,20,train,Give me the successor of the child of Ahmed III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?person dbo:childOf dbr:Ahmed_III ;
          dbo:fatherOf dbr:Mahmud_II .
  
  ?person dbo:successor ?successor .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
933,6,train,Give me the birth name of Alan Warner (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName
WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Alan Warner"" .
  OPTIONAL { ?person foaf:mbox ?email } # To ensure we are dealing with the correct Alan Warner, if needed.
  ?person foaf:givenName ?firstName ;
          foaf:familyName ?lastName .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
791,27,train,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT DISTINCT ?grandGrandFather WHERE {
  # Step 1: Identify Emperor Antoku
  ?emperorAntoku dbo:father ?fatherOfEmperorAntoku .
  
  # Step 2: Ensure this father is a royalty and an office holder
  ?fatherOfEmperorAntoku rdf:type dbo:Royalty ;
                        dbo:officeHolder ?office .

  # Step 3: Find the child of this father who is also a royalty
  ?fatherOfEmperorAntoku dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Royalty .

  # Step 4: Identify the father of this royal child
  ?royalChild dbo:father ?grandGrandFather .
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
216,35,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach of Croatia national under-21 football team.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?team
WHERE {
  ?person dbo:birthDate ""1983-12-20""^^xsd:date .
  ?person dbo:sportsManager true .
  ?person dbo:soccerManager true .
  ?person dbo:soccerPlayer true .
  ?person dbo:coach dbr:Croatia_national_under-21_football_team .

  OPTIONAL {
    ?person dbo:team ?team .
  }
}
```

### Explanation:

- **PREFIX:** Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT ?team:** Retrieve distinct teams associated with the person.
- **WHERE Clause:**
  - Filter by birth date using `dbo:birthDate`.
  - Ensure the person has roles as a sports manager, soccer manager, and soccer player.
  - Confirm they are the coach of the Croatia national under-21 football team.
  - Use an `OPTIONAL` clause to find any associated teams.

This query should effectively capture the requirements specified in your question.",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
579,14,train,"Give me the person born as the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName ?office
WHERE {
  ?person dbo:nativePlace dbr:Edinburgh .
  ?person dbo:birthName ?birthName .
  ?person dbo:officeHolder ?office .
}
```",3,4,4,3,1,3,2,20,0,0,20,0,0.0,0
170,10,train,Give me the birth place of the awardee of People's Artist of Russia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace
WHERE {
  ?person dbo:award dbr:People's_Artist_of_Russia .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,0,33,0,0.0,0
465,21,train,Give me the successor of the child of Alfonso I d'Este and successor of Renée of France.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successorOfChild ?successorOfRenée
WHERE {
  # Find the child of Alfonso I d'Este and its successor
  ?child dbo:parent dbr:Alfonso_I_d%27Este ;
         dbo:succesor ?successorOfChild .

  # Find the successor of Renée of France
  dbr:Renée_of_France dbo:succesor ?successorOfRenée .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
933,17,train,"Give me the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band
WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ?birthDate .
  
  FILTER (YEAR(?birthDate) = 1947 && MONTH(?birthDate) = 4 && DAY(?birthDate) = 21)

  ?person dbo:member ?membership .

  ?membership dbo:band ?band ;
              a dbo:BandMembership .

  ?band a dbo:MusicalGroup, dbo:Organization .
}
```",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
36,12,train,Give me the actor of Being Mrs Elliot and person born in 1971 and person born as Ayo Makun.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor
WHERE {
  # Find the actor of ""Being Mrs Elliot""
  ?movie dbo:starring ?actor .
  FILTER (str(?movie) = str(dbr:Being_Mrs_Elliot))

  # Ensure the person is born in 1971
  OPTIONAL { ?actor dbo:birthYear ?birthYear . }
  FILTER (?birthYear = ""1971""^^xsd:gYear)

  # Ensure the person's birth name is Ayo Makun
  OPTIONAL { ?actor foaf:name ?name . }
  FILTER (str(?name) = ""Ayo Makun"")
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
507,5,train,Who is the person born on 1919-06-17?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  ?person foaf:name ?name .
  FILTER (YEAR(?date) = 1919 && MONTH(?date) = 6 && DAY(?date) = 17)
}
```",1,1,2,1,1,3,3,71,13,14,1,0.48148148148148145,0.9285714285714286,0.6341463414634146
917,29,train,Give me the child of the father of Keʻelikōlani and child of Kekūanāoʻa and parent of Albert Kamehameha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Identify Keʻelikōlani's father
  dbr:Keʻelikōlani dbo:father ?father .

  # Step 2: Find the children of this father (including siblings)
  ?sibling dbo:parent ?father .
  
  # Step 3: Identify Kekūanāoʻa's child
  dbr:Kekūanāoʻa dbo:child ?kekanaoaChild .

  # Step 4: Find the intersection (person who is both sibling and Kekūanāoʻa's child)
  FILTER (?sibling = ?kekanaoaChild)

  # Step 5: Ensure this individual is also the parent of Albert Kamehameha
  ?person dbo:parent dbr:Albert_Kamehameha .
  
  # Linking all conditions together
  FILTER (?sibling = ?person)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
465,37,train,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Renée of France.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Find Elizabeth of Austria's parent
  ?parent dbo:child dbr:Elizabeth_of_Austria_(1526–1545) .

  # Find Renée of France's successor
  ?successor dbo:succeededBy dbr:Renée_of_France .

  # Find the child of Elizabeth's parent who is royalty and a successor of Renée
  ?royalChild dbo:parent ?parent ;
              rdf:type dbo:Monarch ;
              dbo:succeededBy ?successor .

  # Get the spouse of this royal child
  ?royalChild dbo:spouse ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
606,4,train,"Give me the figure known, that is a university and a sports league and an educational institution, as Penn Quakers.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity rdfs:label ""Penn Quakers""@en .
  OPTIONAL { ?entity dbo:type dbr:University . }
  OPTIONAL { ?entity dbo:sportsTeamLeague ?league . }
  OPTIONAL { ?entity a dbo:EducationalOrganization . }
}
```

### Explanation

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT**: We select the entity that matches all conditions.
- **WHERE**:
  - `?entity rdfs:label ""Penn Quakers""@en`: Matches entities labeled as ""Penn Quakers"" in English.
  - `OPTIONAL { ?entity dbo:type dbr:University . }`: Checks if it's a university.
  - `OPTIONAL { ?entity dbo:sportsTeamLeague ?league . }`: Checks if it belongs to a sports league.
  - `OPTIONAL { ?entity a dbo:EducationalOrganization . }`: Ensures it is an educational organization.

This query will return the entity ""Penn Quakers"" if it satisfies all these conditions in DBpedia.",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
976,19,train,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of Meral Akşener.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?gnatLeaderOffice ?meralAkserenOffice
WHERE {
  # Find the leader of GNAT and their office
  OPTIONAL {
    ?gnatLeader a dbo:Politician ;
                dbo:officeHolderOf dbr:Grand_National_Assembly_of_Turkey .
    ?gnatLeader dbo:positionHeld ?gnatPosition .
    ?gnatPosition dbo:office ?gnatLeaderOffice .
  }

  # Find Meral Akşener's office
  OPTIONAL {
    ?meralAkseren a dbo:Politician ;
                  foaf:name ""Meral Akşener"" ;
                  dbo:positionHeld ?meralPosition .
    ?meralPosition dbo:office ?meralAkserenOffice .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
508,7,train,"Give me the birthplace of the commander, that is a politician, in 1939–1940 Winter Offensive.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace
WHERE {
  ?offensive dcterms:title ""Winter War""@en .
  ?offensive dbo:commander ?commander .
  
  ?commander a dbo:Politician ;
             dbo:birthPlace ?birthPlace .

  FILTER (CONTAINS(LCASE(STR(?offensive)), ""1939–1940 winter offensive""))
}
```

This query assumes:
- The Winter Offensive is represented in DBpedia with the title ""Winter War"" and includes details about its commanders.
- Commanders are linked to their roles as politicians, allowing us to filter for those who fit both criteria.",2,3,3,2,1,3,2,20,0,0,11,0,0.0,0
417,14,train,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  # Identify Frederick Francis III
  ?frederick a dbo:GrandDuke ;
             foaf:name ""Frederick Francis III"" .

  # Find his children
  ?frederick dbo:child ?child .

  # Find the grandchildren (children of his children)
  ?child dbo:child ?grandchild .

  # Filter for royalty among the grandchildren
  OPTIONAL { ?grandchild a dbo:Monarch . }
  FILTER EXISTS { ?grandchild a dbo:Monarch . }
}
```",2,3,3,2,1,3,3,71,0,0,8,0,0.0,0
865,9,train,Give me the native of British Raj and father of AK Abdul Momen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native ?father WHERE {
  # Find AK Abdul Momen
  dbr:A_K_Abdul_Momen dbo:parent ?father .
  
  # Determine the native place of his father
  ?father dbo:nativePlace ?native .

  # Filter to ensure the native place is within British Raj
  FILTER(CONTAINS(LCASE(STR(?native)), ""british raj""))
}
```

### Explanation:

- **PREFIX**: Define common prefixes for DBpedia ontology and resources.
- **SELECT**: Choose variables `?native` (the native place) and `?father`.
- **WHERE**:
  - Identify AK Abdul Momen's father using the `dbo:parent` property.
  - Determine the native place of this father with `dbo:nativePlace`.
  - Use a `FILTER` to ensure the native place is related to ""British Raj"".

This query assumes that the DBpedia data contains these specific relationships and properties. Adjustments might be needed based on actual data availability.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
41,15,train,"Give me the party of Enda Kenny and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?kennyParty ?officeHolderParty
WHERE {
  dbr:Enda_Kenny dbo:party ?kennyParty .

  ?officeHolder a dbo:Politician ;
               dbo:electedAsMemberOf ?election .
  
  FILTER (str(?election) = ""Castlereagh_Borough_Council_election,_2005"")

  ?officeHolder dbo:party ?officeHolderParty .

  OPTIONAL { ?officeHolder dbo:officeHolderOf ?office . }
}",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
83,10,train,"Who is the governor of the commander, that is a politician, in Central African Republic Civil War?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governor WHERE {
  ?commander a dbo:Politician ;
             dbo:memberOf ?organization .
  ?organization dbo:location dbr:Central_African_Republic_Civil_War .

  ?governor dbo:positionHeld ?position ;
           dbo:supervises ?commander .

  FILTER (CONTAINS(LCASE(?position), ""governor""))
}
```",2,3,3,2,1,3,2,20,0,0,19,0,0.0,0
573,0,train,Give me the person decedent at Massachusetts.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name ?deathPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace ?deathPlace .
  OPTIONAL { ?person foaf:name ?name . }
  
  FILTER EXISTS {
    ?place a dbo:Place ;
          dbo:country dbr:United_States_of_America ;
          rdfs:label ?stateLabel .
    FILTER (CONTAINS(LCASE(?stateLabel), ""massachusetts""))
  }

  OPTIONAL { 
    ?person dbo:burialPlace ?burialPlace .
    ?burialPlace a dbo:Place ;
                 dbo:country dbr:United_States_of_America ;
                 rdfs:label ?stateLabel .
    FILTER (CONTAINS(LCASE(?stateLabel), ""massachusetts""))
  }
}
ORDER BY ?name
LIMIT 100",1,1,2,1,1,3,3,71,0,0,968,0,0.0,0
267,5,train,Give me the birth date of Dan Cathy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
SELECT ?birthDate WHERE {
  ?person foaf:name ""Dan Cathy""@en .
  ?person dbo:birthDate ?birthDate .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
987,1,train,Give me the birth place of Moamer Kasumović.,SELECT ?result WHERE { <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace
WHERE {
  dbpedia:Moamer_Kadhafi dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
935,1,train,Give me the headquarter of Provincial Assembly of Balochistan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Provincial_Assembly_of_Balochistan> <http://dbpedia.org/ontology/location> ?result . },"```sparql
SELECT ?headquarters
WHERE {
  ?assembly a dbo:ProvincialAssembly ;
            foaf:name ""Provincial Assembly of Balochistan""@en .
  ?assembly dbp:headquarter ?headquarters .
}
```

This query does the following:
- Selects the variable `?headquarters` which will hold the value for the headquarters.
- Uses a `WHERE` clause to specify patterns:
  - Matches an entity (`?assembly`) that is of type `dbo:ProvincialAssembly`.
  - Ensures this assembly has the name ""Provincial Assembly of Balochistan"" in English.
  - Retrieves the `dbp:headquarter` property for this assembly.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
170,11,train,Give me the domain of the profession of John Scholey.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?domain
WHERE {
  ?person rdfs:label ""John Scholey""@en .
  ?person dbo:occupation ?profession .

  OPTIONAL {
    ?profession dbo:fieldOfStudy ?domain .
  }
}",2,2,3,2,1,2,3,28,0,0,39395,0,0.0,0
129,7,train,Give me the associated musical artist of Saba (rapper) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?saba { dbr:Saba_(rapper) }
  
  ?saba dbo:associatedMusicalArtist ?artist .
}
```",2,2,3,1,2,2,3,28,0,0,7,0,0.0,0
445,11,train,"Give me the entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country
WHERE {
  ?person foaf:name ""Anna Sharkey""@en .
  ?person dbo:residence ?location .
  ?location rdf:type dbo:Country .
  BIND(?location AS ?country)
}
```

5. **Optimize Query Logic:** The query is straightforward and directly maps to the question's requirements.

6. **Validate Completeness and Precision:** The query checks for Anna Sharkey, her residence, and ensures that this location is a country.",2,3,3,2,1,3,3,71,0,0,3570,0,0.0,0
41,17,train,Give me the party of the person born as David Declan Costello and party of Enda Kenny.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?partyLabel
WHERE {
  VALUES ?person { 
    dbr:David_Declan_Costello 
    dbr:Enda_Kenny 
  }
  
  ?person dbo:party ?party .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
41,9,train,Give me the party of Declan Costello and party of Enda Kenny.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?partyName
WHERE {
  VALUES ?person { 
    dbr:Declan_Costello 
    dbr:Enda_Kenny 
  }
  
  ?person dbo:party ?party .
  ?party rdfs:label ?partyName .
  FILTER (lang(?partyName) = 'en')
}
ORDER BY ?person
```",2,2,3,1,2,2,3,28,0,3,1,0.0,0.0,0
98,5,train,"Give me the region, that is a country, of Philippine Standard Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?countryName
WHERE {
  ?timeZone a dbo:TimeZone ;
            dbo:country dbr:Philippines .
  ?country dbo:name ?countryName ;
           dbo:timezone ?timeZone .
}
```",1,2,2,1,1,2,3,28,0,0,8,0,0.0,0
933,12,train,Give me the reference to Alan Warner and band of The Ramong Sound.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?reference
WHERE {
  # Find Alan Warner and his association with a band
  ?person rdfs:label ""Alan Warner""@en .
  ?person dbo:memberOf ?band .

  # Ensure the band is ""The Ramong Sound""
  FILTER(CONTAINS(LCASE(?band), ""the ramong sound""))

  # Get references related to Alan Warner and the band
  OPTIONAL {
    ?reference dbo:wikiPageRedirects ?band .
    ?reference rdfs:label ?referenceLabel .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
773,6,train,Give me the successor of Charles the Bald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successorName WHERE {
  <http://dbpedia.org/resource/Charles_the_Bald> dbo:successor ?successor .
  ?successor rdfs:label ?successorName .
  FILTER (lang(?successorName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,2,2,0.0,0.0,0
236,8,train,Give me the party member of the administration of James Madison.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?memberName ?partyLabel
WHERE {
  # James Madison's administration members
  ?administrationMember dbo:president dbr:James_Madison .
  
  # Get the name of each member
  ?administrationMember rdfs:label ?memberName .
  FILTER (lang(?memberName) = 'en') .

  # Get the political party affiliation of each member
  OPTIONAL {
    ?administrationMember dbo:partyAffiliation ?party .
    ?party rdfs:label ?partyLabel .
    FILTER (lang(?partyLabel) = 'en')
  }
}
ORDER BY ?memberName
```",2,2,3,2,1,3,2,20,0,0,597,0,0.0,0
826,5,train,"Who is the reference, that is a royalty, to Louis I?","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?personName
WHERE {
  ?relation dbo:agent <http://dbpedia.org/resource/Louis_I_of_France> .
  ?relation dbo:patient ?person .
  ?person rdf:type dbo:Monarch .
  ?person rdfs:label ?personName .
  FILTER(LANG(?personName) = 'en')
}
```

This query looks for individuals (`?person`) who are related to Louis I of France through any DBpedia ontology relationship (`dbo:agent` and `dbo:patient`) and are classified as a monarch (`rdf:type dbo:Monarch`). The result is filtered to English labels.",1,2,2,1,1,3,3,71,0,0,8,0,0.0,0
216,39,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in Mario Ivanković.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team
WHERE {
  # Find the date of death of Pavel Vezhinov
  ?vezhinov dbo:dateOfDeath ?deathDate .
  FILTER (str(?vezhinov) = ""Pavel_Vezhinov"")

  # Person born on the same day as Pavel Vezhinov's death
  ?person dbo:birthDate ?birthDate .
  FILTER (?birthDate = ?deathDate)

  # Person is a sports manager, soccer manager, and soccer player
  ?person dbo:sportsManagerOf ?team ;
          dbo:occupation ""soccer manager""^^xsd:string ;
          dbo:occupation ""soccer player""^^xsd:string .

  # Association with Mario Ivanković as a player
  ?mario dbp:playedFor ?team .
  FILTER (str(?mario) = ""Mario_Ivanković"")

}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
579,5,train,"Give me the birth name of Jane Percy, Duchess of Northumberland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?result . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthName
WHERE {
  ?person a dbo:Duchess ;
          foaf:name ""Jane Percy, Duchess of Northumberland""@en .
  OPTIONAL { 
    ?person foaf:givenName ?birthName .
  }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
200,0,train,Give me the reference to Angelcorpse.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Angelcorpse""@en . }","```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?reference
WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ""Angelcorpse""@en .
  OPTIONAL { ?band dbp:reference ?reference }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
606,7,train,"Give me the figure known as the nickname of DeKalb, Illinois.","SELECT ?result WHERE { <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
SELECT ?nickname WHERE {
  dbpedia:DeKalb_(Illinois) dbo:motto ?nickname .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
445,18,train,Give me the death place of Patrick Moore and entity in United Kingdom and entity in England.,SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?ukEntity ?englandEntity
WHERE {
  # Patrick Moore's death place
  dbr:Patrick_Moore dbo:placeOfBirth ?deathPlace .

  # An entity in the United Kingdom
  ?ukEntity a dbo:AdministrativeRegion ;
            dbo:country dbr:United_Kingdom .

  # An entity in England
  ?englandEntity a dbo:AdministrativeRegion ;
                 dbo:country dbr:England .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
507,1,train,Give me the director of Entertaining Mr Sloane (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . },"```sparql
SELECT ?director WHERE {
  ?film rdfs:label ""Entertaining Mr. Sloane""@en .
  ?film dbo:director ?director .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
273,9,train,Give me the child of the child of Edoardo Agnelli (1831-1871).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandchild ?grandchildLabel WHERE {
  # Find Edoardo Agnelli
  ?edoardo a dbo:Person ;
           foaf:name ""Edoardo Agnelli"" ;
           dbo:birthYear ?birthYear ;
           dbo:deathYear ?deathYear .
  
  FILTER (?birthYear = 1831 && ?deathYear = 1871)

  # Find his children
  ?edoardo dbo:child ?child .

  # For each child, find their children (grandchildren of Edoardo)
  ?child dbo:child ?grandchild .

  # Get labels for the grandchildren
  SERVICE <http://dbpedia.org/sparql> {
    ?grandchild rdfs:label ?grandchildLabel .
    FILTER(LANG(?grandchildLabel) = 'en')
  }
}
ORDER BY ?grandchildLabel",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
83,13,train,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/property/leaderParty> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?rulingParty
WHERE {
  # Step 1: Find a sports manager who is a member of Kedah FA
  ?person dbo:memberOf dbr:Kedah_FA ;
          dbo:occupation dbr:Sports_manager .

  # Step 2: Identify their birthplace which is a town in Brazil with a soccer club
  ?person dbo:birthPlace ?town .
  ?town a dbo:Town ;
        dbp:country dbr:Brazil ;
        dbp:soccerClub ?soccerClub .

  # Step 3: Get the ruling party of this Brazilian town
  ?town dbo:government ?government .
  ?government dbo:rulingParty ?rulingParty .
}
```",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
507,36,train,Give me the professional in the profession of the person born on 1966-02-18 and spouse of Anne V. Coates.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?profession
WHERE {
  ?coates a dbo:Person ;
          dbo:spouse ?spouse .
  
  ?spouse dbo:birthDate ""1966-02-18""^^xsd:date .

  ?spouse dbo:profession ?profession .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
715,26,train,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander
WHERE {
    ?mayor a dbo:Mayor ;
           dbo:officeHolder ""true""^^xsd:boolean ;
           dbo:politician ""true""^^xsd:boolean ;
           dbo:president ""true""^^xsd:boolean ;
           dbo:election dbr:1933_Spanish_general_election .

    ?commander dbo:commanderOfForce ?mayor .
}
```

This query assumes:
- The mayor is linked to the 1933 Spanish general election.
- The `dbo:officeHolder`, `dbo:politician`, and `dbo:president` properties are used to identify the mayor's roles.
- The `dbo:commanderOfForce` property links a commander to the mayor.",3,6,4,3,1,3,3,71,0,0,28,0,0.0,0
715,4,train,"Give me the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflictName
WHERE {
  ?abdElKrim a dbo:Person ;
             foaf:name ""Abd el-Krim""@en .
  
  ?abdElKrim dbo:associatedWith ?conflict .

  ?conflict a dbo:MilitaryConflict ;
           rdfs:label ?conflictName .
  
  FILTER (lang(?conflictName) = 'en')
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
839,36,train,"Give me the band of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?kevinBand ?bandOfTheBand
WHERE {
  # Find Kevin Russell's band
  dbp:musician <http://dbpedia.org/resource/Kevin_Russell_(musician)> .
  
  OPTIONAL {
    dbo:member <http://dbpedia.org/resource/Kevin_Russell_(musician)> ;
      a dbo:MusicalArtist ;
      ?bandOfTheBand .
    
    # Check if the band is also a musical artist and find its band
    OPTIONAL {
      ?bandOfTheBand a dbo:MusicalArtist ;
        dbo:member ?subsequentBand .
      
      BIND(?bandOfTheBand AS ?kevinBand)
    }
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
47,37,train,"Give me the office of the awardee of the award, that is an award, of Mantu Ghosh and office of Ajoy Mukherjee.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mantuOffice ?ajoyOffice ?award ?awardeeOffice
WHERE {
  # Mantu Ghosh's office
  dbr:Mantu_Ghosh dbo:office ?mantuOffice .

  # Ajoy Mukherjee's office
  dbr:Ajoy_Mukherjee dbo:office ?ajoyOffice .

  # Awards received by Mantu Ghosh
  OPTIONAL {
    dbr:Mantu_Ghosh dbo:award ?award .
    
    # Office of the awardee for each award
    ?award dbo:recipient ?awardee .
    ?awardee dbo:office ?awardeeOffice .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
465,17,train,"Give me the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?charlesOrlando a dbo:Dauphin ;
                  foaf:name ""Charles Orlando""@en .
  
  ?parent dbo:spouse ?charlesOrlando ;
          dbo:child ?child .

  FILTER EXISTS { ?child a dbo:Monarch } .

}
```

5. **Optimize Query Logic:** The query is structured to first identify Charles Orlando, then find his parent(s), and finally filter the children of these parents who are royalty.

6. **Validate Completeness and Precision:** Ensure that all components of the question are addressed in the query: identifying Charles Orlando, finding his parent, listing their children, and filtering for those who are royalty.",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
839,37,train,"Give me the band of Matthias Röhr and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?bandOfMatthias ?bandOfPeter
WHERE {
  # Band of Matthias Röhr
  ?matthias a dbo:MusicArtist ;
            dbo:associatedBand ?bandOfMatthias .

  # Peter Schorowsky's band, which is both a ""band"" and a ""group""
  ?peter a dbo:MusicArtist ;
         dbo:member ?bandOfPeter .
  
  FILTER EXISTS { ?bandOfPeter rdf:type dbo:Band . }
  FILTER EXISTS { ?bandOfPeter rdf:type dbo:MusicalGroup . }

}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
508,13,train,"Give me the birthplace of the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthplace
WHERE {
  # Hayao Tada's birthplace
  dbr:Hayao_Tada dbo:birthPlace ?birthplace .

  # Hayao Tada as a commander in a war
  OPTIONAL { 
    dbr:Hayao_Tada dbo:commanderOf ?war .
    
    # War is a military conflict, societal event, and general event
    ?war rdf:type [
      rdf:type dbo:MilitaryConflict ;
      rdf:type dbo:SocietalEvent ;
      rdf:type dbo:Event
    ] .
  }

  # Hayao Tada as a politician
  OPTIONAL {
    dbr:Hayao_Tada dbo:politicalPartyMember ?party .
  }
}
```",3,7,4,3,1,3,2,20,0,0,49,0,0.0,0
365,14,train,"Give me the spouse of the native, that is a politician, of the reference to Полтавская губерния.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  ?person dbo:nativePlace dbr:Poltava_Governorate ;
          dbo:occupation dbr:Politician .
  
  OPTIONAL { 
    ?person dbo:spouse ?spouse .
  }
}
```",3,4,4,3,1,3,2,20,0,0,3,0,0.0,0
917,25,train,Give me the child of Kekūanāoʻa and child of the father of Kamehameha IV.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?kekuChild ?kamehamehaIVFatherChild
WHERE {
  # Find the child of Kekūanāoʻa
  ?kekuChild dbo:parent dbr:Kekūanāoʻa .

  # Find the father of Kamehameha IV
  ?kamehamehaIVFather dbo:child dbr:Kamehameha_IV .
  
  # Find the child of Kamehameha IV's father
  ?kamehamehaIVFatherChild dbo:parent ?kamehamehaIVFather .
}
```",3,3,4,2,2,3,3,71,3,6,0,0.3333333333333333,1.0,0.5
98,16,train,"Give me the region of Philippine Standard Time and entity in the region, that is a country, of Philippine Standard Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?region ?country
WHERE {
  # Find the region associated with Philippine Standard Time
  ?pst dbo:timeZone ""Philippine Standard Time"" .
  ?pst geo:region ?region .

  # Find countries within this region
  ?country rdf:type dbo:Country ;
           geo:location ?loc .
  ?loc geo:lat ?lat ; 
       geo:long ?lon .
  
  # Ensure the country is in the same region as PST
  ?region geo:hasLocation ?loc .
}
```",3,4,4,2,2,2,3,28,0,0,1743,0,0.0,0
216,29,train,"Give me the player in Igor Bišćan and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and team of Ognjen Vukojević.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Igor Bišćan as a player
  dbr:Igor_Bišćan dbo:position dbr:Soccer_player .
  
  # Ognjen Vukojević as a coach
  dbr:Ognjen_Vukojević dbo:position dbr:Soccer_coach .

  ?player dbo:position dbr:Soccer_player ;
          dbo:occupation dbr:Sports_manager ;
          dbo:managerTeam dbr:Bosnia_and_Herzegovina_national_under-18_football_team .
  
  # Ensure the player is also a soccer manager
  ?player dbo:position dbr:Soccer_manager .

  # The player must have been associated with Ognjen Vukojević's team
  ?team dbo:coach dbr:Ognjen_Vukojević ;
        dbo:member ?player .
}",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
839,33,train,"Give me the band of Kevin Russell (musician) and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?kevinBand ?peterBand
WHERE {
  # Find Kevin Russell's band
  ?kevinRussell a dbo:Musician ;
                foaf:name ""Kevin Russell"" .
  
  ?kevinRussell dbo:bandMemberOf ?kevinBand .

  # Find Peter Schorowsky's band that is both a band and a group
  ?peterSchorowsky a dbo:Musician ;
                   foaf:name ""Peter Schorowsky"" .
  
  ?peterSchorowsky dbo:bandMemberOf ?peterBand .
  
  ?peterBand a dbo:MusicalGroup, dbo:Band .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
987,10,train,Give me the entity in Montenegro and birth place of Dado Polumenta.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  dbr:Dado_Polumenta dbo:birthPlace ?birthPlace .
  FILTER EXISTS { 
    ?birthPlace dbo:country dbr:Montenegro .
  }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
791,34,train,"Give me the father of Emperor Go-Toba and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherOfGoToba ?royalSpouse
WHERE {
  # Find Emperor Go-Toba and his father
  ?goToba a dbo:Monarch ;
          dbp:country ""Japan"" ;
          dbp:father ?fatherOfGoToba .
  
  # Find Emperor Takakura and his spouse
  ?takakura a dbo:Monarch ;
            dbp:country ""Japan"" ;
            dbp:spouse ?spouseOfTakakura .

  # Ensure the spouse of Takakura is royalty
  ?spouseOfTakakura a dbo:RoyalFamilyMember .
  
  # Find the spouse of the spouse (who must be royalty)
  ?spouseOfSpouse a dbo:RoyalFamilyMember ;
                  dbp:spouse ?spouseOfTakakura .

  # Return the father of Go-Toba and the royal spouse
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
978,5,train,Give me the person born as Nicholas Bracegirdle.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . }","```sparql
SELECT ?person ?currentName WHERE {
  ?person dbp:birthName ""Nicholas Bracegirdle"" .
  OPTIONAL { ?person foaf:name ?currentName . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
926,5,train,Give me the spouse of Şermi Kadın.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouseName WHERE {
  ?person rdfs:label ""Şermi Kadın""@en .
  FILTER NOT EXISTS { ?person a dbo:Place } # Ensure it's not a place
  ?person dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseName .
  FILTER(LANG(?spouseName) = 'en') # Filter for English labels
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
158,0,train,Give me the entity in France.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> . },"```sparql
SELECT DISTINCT ?entity WHERE {
  ?entity (dbo:country|dbp:location) dbr:France .
}
```

This query uses a union-like pattern with `(dbo:country|dbp:location)` to cover both possible properties that might indicate an entity's location in France. The `DISTINCT` keyword ensures unique entities are returned.",1,1,2,1,1,3,2,20,0,0,44301,0,0.0,0
715,34,train,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  ?commander a dbo:MilitaryPerson .
  
  # Native of Morocco
  ?commander dbo:nationality dbr:Morocco .

  # Leader of Ministry of the Air (Spain)
  ?ministryLeader dbp:head ?commander ;
                  rdf:type dbo:GovernmentMinistry ;
                  dbp:country dbr:Spain ;
                  dbp:name ""Ministry of the Air""@en .
  
  # Commander in a military conflict
  ?conflict dbo:commander ?commander ;
            rdf:type dbo:MilitaryConflict .

}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
888,4,train,Give me the commander in 2022 Ukrainian eastern counteroffensive.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?commanderName WHERE {
  ?operation dbo:wikiPageWikiLink* dbr:2022_Ukrainian_offensive_in_the_Donbas .
  ?operation dbo:date ?date .
  FILTER (YEAR(?date) = 2022 && CONTAINS(LCASE(str(?operation)), ""eastern counteroffensive"")) .

  ?commander dbo:positionHeld ?operation .
  ?commander rdfs:label ?commanderName .
  
  FILTER (LANGMATCHES(LANG(?commanderName), ""en""))
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
527,7,train,"Give me the actor of the movie, that is a work and English and a television show, with Bernard Bresslaw.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor
WHERE {
  ?movie dbo:starring dbr:Bernard_Bresslaw .
  ?movie dbo:language ""English"" .
  ?movie rdf:type dbo:TelevisionShow .
  ?movie dbo:starring ?actor .
}
```",2,5,3,2,1,3,2,20,0,0,7,0,0.0,0
18,17,train,"Give me the parent of the professional in Actress and alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentName WHERE {
  ?person dbo:almaMater dbr:Marymount_College,_Tarrytown ;
          dbo:occupation dbr:Actress .
  
  OPTIONAL { 
    ?person dbo:parent ?parent .
    ?parent rdfs:label ?parentName .
    FILTER (lang(?parentName) = ""en"")
  }
}
```

### Explanation:

- **PREFIX**: Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT ?parentName**: We want to select distinct parent names to avoid duplicates.
- **WHERE Clause**:
  - Identify a person (`?person`) who is an alumna of Marymount College, Tarrytown (`dbo:almaMater dbr:Marymount_College,_Tarrytown`).
  - Ensure the same person has a profession as an actress (`dbo:occupation dbr:Actress`).
- **OPTIONAL Clause**:
  - Retrieve parent information if available (`?person dbo:parent ?parent`).
  - Get the label (name) of the parent in English (`rdfs:label ?parentName`).
  - Use `FILTER` to ensure the language is English.

This query will return the names of parents for individuals who are actresses and alumni of Marymount College, Tarrytown.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
773,35,train,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of the father of Charles the Fat.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Louis the German and his children who are royalty
  ?child dbo:father dbr:Louis_the_German .
  ?child a dbo:RoyalFamily .

  # Spouse of the royal child
  ?spouse dbo:spouse ?child .

  # Charles the Fat's parent, which should match the spouse
  ?parent dbo:child dbr:Charles_the_Fat .

  # Ensure the spouse is also the parent of Charles the Fat
  FILTER (?spouse = ?parent)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
129,2,train,Give me the associated musical artist of Saba (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  VALUES ?saba { dbr:Saba_(rapper) }
  
  # Find associated musical artists directly linked to Saba
  ?saba dbo:associatedMusicalArtist ?artist .
  
  # Optionally, find collaborators if the direct association is not available
  OPTIONAL {
    ?collaboration dbo:performer ?saba ;
                  dbo:performer ?artist .
  }
  
  FILTER(?artist != ?saba) # Ensure we don't return Saba himself as an artist
}
```",1,1,2,1,1,2,3,28,0,0,8,0,0.0,0
417,12,train,Give me the child of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?child
WHERE {
  {
    # Children of Alexandrine of Mecklenburg-Schwerin
    ?alexChild dbo:parent dbr:Alexandrine_of_Mecklenburg-Schwerin .
    ?alexChild a dbo:Person .
    BIND(?alexChild AS ?child)
  }
  UNION
  {
    # Children of Christian X of Denmark
    ?christianChild dbo:parent dbr:Christian_X_of_Denmark .
    ?christianChild a dbo:Person .
    BIND(?christianChild AS ?child)
  }
}
ORDER BY ?child",2,2,3,1,2,3,3,71,2,0,0,1.0,1.0,1.0
36,1,train,Give me the person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name
WHERE {
    ?person rdf:type foaf:Person .
    ?person foaf:name ?name .
    ?person dbo:birthDate ?birthDate .
    FILTER (YEAR(?birthDate) = 1971)
}
```",1,1,2,1,1,2,3,28,2048,18258,563,0.10085688958928396,0.7843738031405592,0.1787319457171532
281,16,train,Give me the commander in New Guinea campaign and awardee of the award of Alfred Warden.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?awardee
WHERE {
  ?campaign dbo:location dbr:New_Guinea .
  ?campaign dbo:commander ?commander .

  ?person dbo:award dbr:Alfred_Warden_Award .
  FILTER(?person = ?commander)
  
  BIND(?person AS ?awardee)
}
```

### Explanation

- **PREFIX**: Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT**: Choose distinct commanders who are also awardees to avoid duplicates.
- **WHERE Clause**:
  - Identify campaigns located in New Guinea with a commander (`?commander`).
  - Find persons awarded the Alfred Warden award (`dbr:Alfred_Warden_Award`) and ensure they match the commanders.

This query will return individuals who were both commanders in the New Guinea campaign and recipients of the Alfred Warden award.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
965,34,train,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouseOfSpouse
WHERE {
  # Step 1: Find Louise Mountbatten's parent
  ?parent a dbo:Person ;
          dbo:child ?louiseMountbatten .
  
  # Louise Mountbatten entity
  ?louiseMountbatten foaf:name ""Louise Mountbatten""@en .

  # Step 2: Find the spouse of this parent
  ?parent dbo:spouse ?spouseOfParent .

  # Step 3: Find the spouse of that spouse
  ?spouseOfParent dbo:spouse ?spouseOfSpouse .

  # Step 4: Ensure this person is a parent of George Mountbatten, 2nd Marquess of Milford Haven
  ?spouseOfSpouse dbo:child ?georgeMountbatten .
  
  # George Mountbatten entity
  ?georgeMountbatten foaf:name ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
216,6,train,"Give me the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?coach WHERE {
  # Find the coach of Bosnia and Herzegovina national under-18 football team
  ?team dbo:coach ?coach .
  
  FILTER (str(?team) = ""Bosnia_and_Herzegovina_national_under-18_football_team"")

  # Ensure the coach is a soccer player
  ?coach dbo:sport dbr:Soccer .

  # Ensure the coach is a sports manager
  ?coach dbo:occupation dbr:Sports_manager .

  # Ensure the coach is specifically a soccer manager
  OPTIONAL { 
    ?coach dbo:managerSport dbr:Soccer .
  }
}",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
417,39,train,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild
WHERE {
  # Alexandrine of Mecklenburg-Schwerin and Christian X of Denmark
  dbr:Aleksandra_Maria_of_Mecklenburg-Schwerin dbo:spouse ?parent .
  ?parent dbo:child ?middleChild .
  
  # Middle child is also a child of Christian X
  ?middleChild dbo:childOf dbr:Christian_X_of_Denmark .

  # Ensure middle child has royalty status
  ?middleChild rdf:type dbo:Monarch .

  # Find the grandchild (child of the middle child) with royalty status
  ?middleChild dbo:child ?grandchild .
  ?grandchild rdf:type dbo:Monarch .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
495,11,train,Give me the child of the father of William I of Württemberg and father of Princess Charlotte of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Charlotte_of_Württemberg> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Identify William I of Württemberg and his father
  dbr:William_I_of_W%C3%BCrttemberg dbo:father ?father .
  
  # Ensure this person is also the father of Princess Charlotte of Württemberg
  dbr:Princess_Charlotte_of_W%C3%BCrttemberg dbo:father ?father .

  # Retrieve their child
  ?father dbo:child ?child .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
41,6,train,Give me the party of Declan Costello and party of Mark Durkan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyName
WHERE {
  VALUES ?person { 
    dbr:Declan_Costello 
    dbr:Mark_Durkan 
  }
  
  ?person dbo:party ?party .
  ?party rdfs:label ?partyName .
  FILTER (lang(?partyName) = 'en')
}
ORDER BY ?person
```",2,2,3,1,2,2,3,28,0,4,1,0.0,0.0,0
158,5,train,"Who is the successor, that is a prime minister and an office holder and a politician, of André Tardieu?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. },"```sparql
SELECT ?successorName WHERE {
  ?tardieu dbo:successor ?successor .
  ?successor foaf:name ?successorName .
  
  # Ensure the successor is a Prime Minister, Office Holder, and Politician
  ?successor dbo:positionHeld ?position .
  ?position rdf:type dbo:PrimeMinister ;
            rdf:type dbo:OfficeHolder ;
            rdf:type dbo:Politician .

  # Identify André Tardieu
  ?tardieu foaf:name ""André Tardieu""@en .
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
978,0,train,Give me the band member of Enya.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Enya> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName WHERE {
  # Identify Enya's resource in DBpedia
  dbr:Enya a dbo:MusicalArtist .

  # Find individuals who are band members or collaborators with Enya
  ?bandMember dbo:musicalArtist dbr:Enya .
  
  # Retrieve the name of these individuals
  ?bandMember rdfs:label ?memberName .
  
  FILTER (lang(?memberName) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
465,19,train,Give me the successor of the child of Alfonso I d'Este and spouse of Archduchess Barbara of Austria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v0 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor
WHERE {
  ?child dbo:parent dbr:Alfonso_I_d%27Este ;
         dbo:spouse dbr:Barbara_of_Austria .
  
  ?child dbo:successor ?successor .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
573,5,train,"Who is the professional, that is American, in Politician?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. }","```sparql
SELECT DISTINCT ?person WHERE {
  ?person rdf:type dbo:Politician .
  ?person dbo:nationality dbr:United_States .
}
```

This query selects distinct individuals (`?person`) who are of type `dbo:Politician` and have a nationality linked to the United States (`dbr:United_States`). The assumption here is that DBpedia uses `dbo:nationality` for linking individuals to their nationalities.",1,2,2,1,1,3,3,71,0,0,83,0,0.0,0
865,28,train,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of AK Abdul Momen and father of Shahla Khatun.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry
WHERE {
  # Ram Jaipal Singh Yadav is the father of AK Abdul Momen and Shahla Khatun
  ?yadav a dbo:Person ;
         dbo:spouse ?akAbdulMomen ;
         dbo:child ?shahlaKhatun .
  
  ?akAbdulMomen dbr:AK_Abdul_Momen ;
                rdfs:label ""AK Abdul Momen""@en .

  ?shahlaKhatun dbr:Shahla_Khatun ;
                rdfs:label ""Shahla Khatun""@en .
  
  # Ram Jaipal Singh Yadav's residence
  ?yadav dbo:residence ?residence .

  # Native country of the residence
  ?residence dbo:nativeCountry ?nativeCountry .
}
```

### Explanation:

- **PREFIX:** Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT ?nativeCountry:** We want to find distinct native countries related to the residence.
- **WHERE Clause:**
  - Identify Ram Jaipal Singh Yadav as a person with children AK Abdul Momen and Shahla Khatun using `dbo:child`.
  - Link AK Abdul Momen and Shahla Khatun to their respective DBpedia resources.
  - Find the residence of Ram Jaipal Singh Yadav.
  - Determine the native country of this residence.

This query assumes that the relationships and properties are correctly modeled in DBpedia. Adjustments may be needed based on actual data availability and structure.",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
865,5,train,Who is the spouse of Syeda Shahar Banu?,SELECT ?result WHERE { <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Syeda_Shahar_Banu> dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
573,39,train,"Give me the person decedent at Quincy, Massachusetts and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName WHERE {
  # John Quincy Adams and his parent
  dbr:John_Quincy_Adams dbo:childOf ?parent .
  
  # Parent's details
  ?parent a dbo:Person ;
          dbo:birthPlace dbr:Quincy,_Massachusetts ;
          dbo:occupation ?occupation .

  # Filter for politician and office holder roles
  FILTER (
    EXISTS { ?parent dbo:officeHolderOf ?office . }
    && (
      ?occupation = dbo:Politician ||
      ?occupation = dbo:GovernmentOfficial ||
      ?occupation = dbo:OfficeHolder
    )
  )

  # Get the parent's name
  ?parent rdfs:label ?parentName .
  
  FILTER (LANG(?parentName) = 'en')
}
ORDER BY ?parentName",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
892,3,train,Give me the true self of Enrico Crolla.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fullName ?birthDate ?birthPlace WHERE {
  VALUES ?person { dbr:Enrico_Crolla }
  
  OPTIONAL { ?person dbo:givenName ?firstName . }
  OPTIONAL { ?person dbo:familyName ?lastName . }
  BIND(CONCAT(?firstName, "" "", ?lastName) AS ?fullName)
  
  OPTIONAL { ?person dbo:birthday ?birthDate . }
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
102,13,train,"Give me the manager of the player in the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?manager
WHERE {
  ?team rdf:type dbo:NationalSoccerTeam ;
        dbo:country dbr:England ;
        dbo:gender ""female"" .
  
  ?player dbo:member ?team ;
          rdf:type dbo:SoccerPlayer .

  ?player dbo:managedBy ?manager .
}
```

This query does the following:
- Identifies the England women's national football team (`?team`) by its type, country, and gender.
- Finds players (`?player`) who are members of this team and have a type of `SoccerPlayer`.
- Retrieves the manager (`?manager`) associated with these players.",3,4,4,3,1,3,2,20,0,0,43,0,0.0,0
527,11,train,"Give me the actor of the movie, that is a work and English and a television show, with Bernard Bresslaw and author of The Boy Who Kicked Pigs.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Boy_Who_Kicked_Pigs> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor
WHERE {
  ?movie a dbo:Film ;
         dbo:language ""English"" ;
         dbo:starring dbr:Bernard_Bresslaw .

  ?author dbr:The_Boy_Who_Kicked_Pigs dbo:author ?authorResource .
  
  ?authorResource dbp:worksFor ?movie .

  OPTIONAL { ?movie dbo:actor ?actor . }
}
```",3,6,4,2,2,3,2,20,0,0,1,0,0.0,0
987,27,train,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  # Sports event in Canicosa de la Sierra
  ?event dbo:location dbr:Canicosa_de_la_Sierra .
  
  # Time zone associated with the sports event
  ?event dbo:timeZone ?timezone .

  # Region associated with the time zone
  ?timezone dbo:region ?region .

  # Country within the region
  ?region dbo:country ?country .

  # Ensure the country is a country entity
  ?country rdf:type dbo:Country .
}
```",3,5,4,3,1,3,3,71,0,0,173261,0,0.0,0
18,2,train,"Give me the alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus
WHERE {
  ?college a dbo:College ;
           rdfs:label ""Marymount College, Tarrytown""@en .
  
  ?college dbo:alumni ?alumnus .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
36,7,train,Give me the actor of Being Mrs Elliot and person born as Ayo Makun.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorOfBeingMrsElliot ?personBornAsAyoMakun
WHERE {
  # Find the actor of ""Being Mrs Elliot""
  ?movie dbo:title ""Being Mrs Elliot""@en .
  ?movie dbo:actor ?actorOfBeingMrsElliot .

  # Find the person born as Ayo Makun
  ?person dbo:birthName ""Ayo Makun"" .
  ?person rdfs:label ?personBornAsAyoMakun FILTER (lang(?personBornAsAyoMakun) = 'en') .
}
```

This query does the following:
- Uses `dbo:title` to find the movie titled ""Being Mrs Elliot"".
- Retrieves the actor associated with this movie using `dbo:actor`.
- Searches for a person whose birth name is ""Ayo Makun"" using `dbo:birthName`.
- Extracts the English label of that person using `rdfs:label`.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
715,23,train,"Give me the commander in the force, that is a military conflict, of the native of Morocco.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderName WHERE {
  ?conflict a dbo:MilitaryConflict .
  ?conflict dbo:commander ?commander .
  ?commander foaf:name ?commanderName .
  ?commander dbo:nationality dbr:Morocco .
}
```

### Explanation:

- **PREFIXes:** We define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
  
- **SELECT DISTINCT ?commanderName:** We want to retrieve distinct names of commanders.

- **WHERE Clause:**
  - `?conflict a dbo:MilitaryConflict`: Identifies the subject as a military conflict.
  - `?conflict dbo:commander ?commander`: Links the conflict to its commander.
  - `?commander foaf:name ?commanderName`: Retrieves the name of the commander using the FOAF vocabulary for names.
  - `?commander dbo:nationality dbr:Morocco`: Ensures that the commander is a native of Morocco.

This query should effectively retrieve the names of commanders who are natives of Morocco and have commanded in military conflicts, as per the structure and requirements outlined in your question.",3,4,4,3,1,3,3,71,0,0,476,0,0.0,0
507,15,train,Who is the person born as the birth name of Anne V. Coates?,SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?anne a dbpedia-owl:Person .
  ?anne foaf:name ""Anne V. Coates"" .
  OPTIONAL { ?anne foaf:givenName ?birthName . }
  ?person foaf:givenName ?birthName .
}
```

### Explanation

- **PREFIX:** Define prefixes for commonly used namespaces.
- **SELECT Clause:** We are interested in finding the `?person` associated with the birth name.
- **WHERE Clause:**
  - Identify a resource (`?anne`) that is of type `dbpedia-owl:Person`.
  - Match the full name ""Anne V. Coates"" using `foaf:name`.
  - Use an optional clause to extract the given name (`foaf:givenName`), which might be her birth name.
  - Find another person (`?person`) who shares this given name.

This query assumes that the birth name is stored in a property like `foaf:givenName`. Adjustments may be needed based on actual data structure in DBpedia.",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
216,18,train,Give me the party of Campbell Newman and administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?administration
WHERE {
  # Find Campbell Newman's political party
  dbr:Campbell_Newman dbo:politicalParty ?party .

  # Find the designer of Woolfe: The Red Hood Diaries and their administration
  OPTIONAL {
    ?designer dbo:work ?woolfe .
    ?woolfe rdfs:label ""Woolfe: The Red Hood Diaries""@en .
    ?designer dbo:positionHeld ?administration .
  }
}
```

This query does the following:
- Retrieves Campbell Newman's political party.
- Optionally retrieves the designer of ""Woolfe: The Red Hood Diaries"" and their administration, if available.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
443,18,train,Give me the birthplace of Ulf Lundell and birthplace of the work of yes.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ""yes""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityLabel ?birthPlaceLabel WHERE {
  VALUES ?entity { 
    dbr:Ulf_Lundell 
    dbr:Yes_(band) 
  }
  
  ?entity dbo:birthPlace ?birthPlace .
  OPTIONAL { ?birthPlace rdfs:label ?birthPlaceLabel . FILTER (lang(?birthPlaceLabel) = 'en') }

  SERVICE <http://dbpedia.org/sparql> {
    ?entity rdfs:label ?entityLabel . FILTER (lang(?entityLabel) = 'en')
  }
}
ORDER BY ?entityLabel
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
965,23,train,Give me the spouse of the spouse of the parent of Louise Mountbatten.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT DISTINCT ?finalSpouse
WHERE {
    # Step 1: Identify Louise Mountbatten
    ?louise dbo:wikiPageRedirects dbr:Louise_Mountbatten .

    # Step 2: Find Parent(s) of Louise Mountbatten
    ?louise dbo:parent ?parent .

    # Step 3: Find Spouse of the Parent
    OPTIONAL { 
        ?parent dbo:spouse ?spouseOfParent .
    }

    # Step 4: Find Spouse of the Spouse of the Parent
    OPTIONAL {
        ?spouseOfParent dbo:spouse ?finalSpouse .
    }
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
826,20,train,"Give me the spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?successor
WHERE {
  # Find Anna Magdalena Bach's spouse
  dbr:Anna_Magdalena_Bach dbo:spouse ?spouse .

  # Find a child of Louis I, Grand Duke of Hesse who is royalty
  OPTIONAL {
    dbr:Louis_I,_Grand_Duke_of_Hesse dbo:child ?royalChild .
    ?royalChild rdf:type dbo:Monarch .
    
    # Find the successor of that royal child
    ?royalChild dbo:succeededBy ?successor .
  }
}
```

This query does the following:
- Retrieves the spouse of Anna Magdalena Bach.
- Optionally finds a child of Louis I, Grand Duke of Hesse who is a monarch (indicating royalty).
- Determines the successor of that royal child.

Note: The actual DBpedia data might not have all these relationships explicitly defined, so this query assumes such properties exist and are correctly linked in the dataset.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
892,5,train,Give me the member of E-girls.,SELECT ?result WHERE { <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?memberLabel
WHERE {
  ?band a dbo:MusicalBand ;
        rdfs:label ""E-girls""@en .
  
  ?band dbo:member ?member .
  ?member rdfs:label ?memberLabel .
}
```

This query does the following:
- Identifies `?band` as an instance of `dbo:MusicalBand` with a label ""E-girls"".
- Finds all entities (`?member`) that are members of this band.
- Retrieves the labels (`?memberLabel`) for these member entities.",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
47,2,train,Give me the office of Ajoy Mukherjee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ajoy Mukherjee""@en .
  OPTIONAL { 
    ?person dbo:office ?office .
  }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
433,16,train,"Give me the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find Ornette Coleman
  ?coleman dbo:associatedMusicalArtist ?firstLevelArtist .
  
  FILTER (?coleman = dbpedia:Ornette_Coleman) .

  # Step 2: Ensure the first level artist is both a Musical Artist and an Artist
  ?firstLevelArtist rdf:type dbo:MusicalArtist .
  ?firstLevelArtist rdf:type dbo:Artist .

  # Step 3: Find associated musical artists of the first level artist
  ?firstLevelArtist dbo:associatedMusicalArtist ?finalArtist .

  # Step 4: Ensure the final artist is both a Musical Artist and an Artist
  ?finalArtist rdf:type dbo:MusicalArtist .
  ?finalArtist rdf:type dbo:Artist .
}
```",2,6,3,2,1,3,3,71,0,0,20,0,0.0,0
158,13,train,"Give me the entity in the award, that is a country, of the reference to Adelbert Cronkhite.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  ?person rdfs:label ""Adelbert Cronkhite""@en .
  ?award dbo:recipient ?person .
  OPTIONAL { ?award dbo:country ?country . }
  FILTER (lang(?person) = 'en')
}
```",3,4,4,3,1,3,2,20,0,0,44301,0,0.0,0
645,0,train,Give me the commander in Battle of Jarama.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?commanderLabel
WHERE {
  ?battle dbo:wikiPageRedirects dbr:Battle_of_Jarama .
  ?battle dbo:commander ?commander .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
965,37,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # George Mountbatten, 2nd Marquess of Milford Haven's parent
  dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbo:parent ?georgeParent .

  # The child who is royalty and whose parent was born on 1854-05-24 and is a politician
  ?child dbo:parent ?politician .
  ?politician dbo:birthday ""1854-05-24""^^xsd:date .
  ?politician dbo:occupation dbr:Politician .

  # The child must be royalty
  ?child rdf:type/dbo:royalty .

  # Link the parent of George to the politician's child
  ?georgeParent = ?parent .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
865,34,train,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of Shahla Khatun.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry
WHERE {
  ?father dbo:child dbr:Shahla_Khatun .
  ?deathEvent dbo:place dbr:Patna ;
              dbo:agent ?father .
  ?residence dbo:resident ?father .
  ?residence dbo:nativeCountry ?nativeCountry .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
47,28,train,Give me the office of the administration of Jagdeep Dhankhar and office of Ajoy Mukherjee and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?officeName WHERE {
  VALUES ?person { 
    dbpedia:Jagdeep_Dhankhar 
    dbpedia:Ajoy_Mukherjee 
    dbpedia:Bidesh_Ranjan_Bose
  }
  
  ?person dbo:office ?office .
  ?office rdfs:label ?officeName .
  FILTER (lang(?officeName) = 'en')
}
ORDER BY ?person ?officeName",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
917,2,train,Give me the child of Kekūanāoʻa.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?s dbo:child ?child .
  ?s foaf:name ""Kekūanāoʻa""@en .
}
```

This query uses the `dbo:child` predicate to find children of Kekūanāoʻa. The `foaf:name` property is used to identify Kekūanāoʻa by name.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
933,24,train,Give me the reference to the birth name of Alan Warner (musician) and band of The Ramong Sound.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?band
WHERE {
  # Find Alan Warner (musician) and his birth name
  ?alanWarner a dbo:MusicArtist ;
              foaf:name ""Alan Warner"" ;
              dbo:birthName ?birthName .

  # Find The Ramong Sound and its band members
  ?ramongSound a dbo:MusicalBand ;
               foaf:name ""The Ramong Sound"" .
  
  # Link Alan Warner to The Ramong Sound as a member of the band
  ?memberOf dbr:The_Ramong_Sound dbo:bandMember ?alanWarner .

  OPTIONAL {
    ?alanWarner dbo:bandMember ?ramongSound .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
933,16,train,Give me the birth name of the professional in Musician.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?musician ?birthName
WHERE {
  ?musician rdf:type dbo:Musician .
  ?musician dbo:birthName ?birthName .
}
```",2,2,3,2,1,3,3,71,0,0,856,0,0.0,0
18,3,train,Give me the award of Ana María Sánchez de Ríos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award
WHERE {
  dbr:Ana_María_Sánchez_de_Ríos dbo:award ?award .
}
```",1,1,2,1,1,2,3,28,0,2,3,0.0,0.0,0
773,11,train,Give me the spouse of the father of Charles the Fat.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?spouse
WHERE {
  ?charles dbo:father ?father .
  ?father foaf:male true .
  ?father dbo:spouse ?spouse .
  ?charles rdfs:label ""Charles the Fat""@en .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
124,16,train,"Give me the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warName
WHERE {
  ?war a dbo:Event ;
       dbo:type/dbo:subClassOf* dbo:MilitaryConflict ;
       dbo:type/dbo:subClassOf* dbo:SocietalEvent .
  
  ?medalAwarded dbr:British_South_Africa_Company_Medal ;
                dbo:recipient ?awardee .

  ?awardee dbo:participatedIn ?war .
  
  ?war rdfs:label ?warName .
}
```",2,5,3,2,1,3,3,71,0,0,13,0,0.0,0
773,5,train,"Give me the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  # Louis the Pious as a subject with children
  dbr:Louis_the_Pious dbo:spouse ?parent .
  
  # The child of Louis the Pious
  ?parent dbo:child ?child .

  # Ensure the child is also a royalty
  ?child rdf:type dbo:Monarch .

  # Get the name of the child
  ?child rdfs:label ?childName .
  
  FILTER (LANG(?childName) = 'en')
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
987,17,train,"Give me the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  # Find Canicosa de la Sierra and its related sports event
  ?event dbo:location dbr:Canicosa_de_la_Sierra .
  
  # Link the sports event to a time zone
  ?event dbo:timeZone ?timezone .

  # Ensure the time zone is associated with a region that is a country
  ?timezone dbo:country ?region .
  FILTER (isLiteral(?region) && lang(?region) = ""en"")

  BIND(str(?region) AS ?country)
}
```",2,4,3,2,1,3,3,71,0,0,56,0,0.0,0
281,9,train,Give me the awardee of Medal bar and awardee of Volunteer Decoration.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeName
WHERE {
  ?person dbo:award dbr:Medal_bar .
  ?person dbo:name ?awardeeName .

  ?person dbo:award dbr:Volunteer_Decoration .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
955,0,train,Give me the band of Nate Albert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nate_Albert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band
WHERE {
  ?person foaf:name ""Nate Albert""@en .
  ?person dbo:bandMember ?band .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
445,19,train,"Give me the death place of Patrick Moore and entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?deathPlace ?countryResidence
WHERE {
  ?patrickMoore a dbo:Person ;
                foaf:name ""Patrick Moore""@en ;
                dbo:deathPlace ?deathPlace .

  ?annaSharkey a dbo:Person ;
               foaf:name ""Anna Sharkey""@en ;
               dbo:residence ?residence .
               
  FILTER (?residence rdf:type dbo:Country)
  
  BIND(?residence AS ?countryResidence)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
93,6,train,Give me the death place of John Weir Troy and capital of Alaska.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alaska> <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/John_Weir_Troy> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace ?capital
WHERE {
  OPTIONAL { 
    ?johnWeirTroy dbo:deathPlace ?deathPlace .
    FILTER(STRSTARTS(STR(?johnWeirTroy), ""http://dbpedia.org/resource/John_Weir_Troy""))
  }
  
  OPTIONAL {
    ?alaska dbp:capital ?capital .
    FILTER(STRSTARTS(STR(?alaska), ""http://dbpedia.org/resource/Alaska""))
  }
}
```",2,2,3,1,2,3,2,20,1,3,0,0.25,1.0,0.4
216,12,train,Give me the party of Campbell Newman and office of Tim Nicholls and administration of .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/property/leader> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?newmanParty ?nichollsOffice
WHERE {
  # Find Campbell Newman's political party
  dbr:Campbell_Newman dbo:party ?newmanParty .
  
  # Find Tim Nicholls' office or position held
  dbr:Tim_Nicholls dbo:officeHeld ?nichollsOffice .
}
```

This query uses the `SELECT` statement to retrieve the political party of Campbell Newman and the office held by Tim Nicholls. The `WHERE` clause specifies patterns for matching these properties using DBpedia's ontology.",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
281,7,train,Give me the awardee of Volunteer Decoration and commander in New Guinea campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name
WHERE {
  ?person dbo:award dbr:Volunteer_Decoration .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en') .

  OPTIONAL {
    ?campaign dbo:commander ?person .
    ?campaign rdfs:label ?campaignLabel .
    FILTER CONTAINS(LCASE(?campaignLabel), ""new guinea"") .
  }
}
```",2,2,3,1,2,2,3,28,1,23,0,0.041666666666666664,1.0,0.07999999999999999
888,12,train,Give me the commander in Southern Ukraine campaign and awardee of the award of Oleksandr Syrskyi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Southern_Ukraine_campaign> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?award WHERE {
  # Find the campaign in Southern Ukraine and its commander
  ?campaign dbo:location dbr:_Southern_Ukraine ;
            dbo:commander ?commander .
  
  # Ensure Oleksandr Syrskyi is involved as a commander
  ?commander rdfs:label ""Oleksandr Syrskyi""@en .

  # Find awards associated with Oleksandr Syrskyi
  OPTIONAL {
    ?syrskyi dbo:award ?award .
    FILTER(?syrskyi = ?commander)
  }
}
```

This query does the following:
- Identifies a campaign located in Southern Ukraine and retrieves its commander.
- Ensures that Oleksandr Syrskyi is identified as the commander of this campaign.
- Optionally finds any awards associated with Oleksandr Syrskyi.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
122,5,train,Give me the band member of the band of Gift of Gab (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?band a dbo:MusicalBand ;
        dbo:member ?member .
  
  ?giftOfGab foaf:name ""Gift of Gab""@en ;
             dbo:bandMemberOf ?band .

}
```",2,2,3,2,1,2,2,9,0,0,24,0,0.0,0
935,0,train,Give me the death place of Abdul Raziq Bugti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdul_Raziq_Bugti> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  dbpedia:Abdul_Raziq_Bugti dbo:diedIn ?deathPlace .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
433,28,train,"Give me the associated musical artist of Bill Evans and professional in Musician and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist
WHERE {
  # Find associated musical artists of Bill Evans
  {
    dbr:Bill_Evans dbo:associatedMusicalArtist ?artist1 .
    ?artist1 a dbo:Musician .
    BIND(?artist1 AS ?associatedArtist)
  }
  
  UNION
  
  # Find associated musical artists of Paul Laurence Dunbar Chambers Jr.
  {
    dbr:Paul_Laurence_Dunbar_Chambers_Jr. dbo:associatedMusicalArtist ?artist2 .
    ?artist2 a dbo:Musician .
    BIND(?artist2 AS ?associatedArtist)
  }
  
  UNION
  
  # Find people born who are musical artists and artists
  {
    ?person dbo:birthPlace ?place .
    ?person a dbo:Musician ;
            dbo:artisticRole ?role .
    FILTER EXISTS { ?role rdfs:label ""artist""@en } .
    BIND(?person AS ?associatedArtist)
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
926,13,train,Give me the successor of the child of Ahmed III.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v1 <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?successor
WHERE {
  # Find Ahmed III
  ?ahmed3 dbo:wikiPageID ""Ahmed_III"" .
  
  # Find children of Ahmed III
  ?child dbo:parent ?ahmed3 .

  # For each child, find their successor
  OPTIONAL { 
    ?child dbo:successor ?successor .
  }
}
```

This query does the following:
- Identifies Ahmed III using a specific identifier (assuming `wikiPageID` is used for identification).
- Finds entities that are children of Ahmed III.
- For each child, it attempts to find their successor.

Note: The exact property names like `dbo:child`, `dbo:parent`, and `dbo:successor` might need adjustment based on the actual schema in DBpedia. If these properties do not exist or are named differently, you would need to adjust them accordingly.",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
192,3,train,"Give me the spouse, that is a royalty, of Charles Martel of Anjou.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseName WHERE {
  ?charles a dbo:Person ;
           foaf:name ""Charles Martel of Anjou""@en .
  
  ?charles dbo:spouse ?spouse .

  ?spouse a dbo:Monarch ; 
          foaf:name ?spouseName .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
98,0,train,Give me the parent of Emperor Rokujō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Rokujō> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  # Find Emperor Rokujō
  ?emperor dbr:Emperor_Rokujō .
  
  # Look for a parent relationship (either mother or father)
  OPTIONAL { 
    ?emperor dbo:mother ?mother . 
    ?mother rdfs:label ?parentName .
    FILTER(LANG(?parentName) = ""en"")
  }
  OPTIONAL {
    ?emperor dbo:father ?father .
    ?father rdfs:label ?parentName .
    FILTER(LANG(?parentName) = ""en"")
  }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
582,8,train,Give me the nickname of Japan national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?nickname
WHERE {
  ?team dbp:name ""Japan national football team""@en .
  ?team dbp:nickname ?nickname .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
329,3,train,Give me the author of The Tailor and Ansty.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName
WHERE {
  ?book a dbo:Book .
  ?book rdfs:label ""The Tailor and Ansty""@en .
  ?book dbo:author ?author .
  ?author foaf:name ?authorName .
}
```

### Explanation:

- **PREFIX:** Define prefixes for common namespaces to simplify the query.
- **SELECT ?authorName:** We want to retrieve the name of the author.
- **WHERE Clause:**
  - `?book a dbo:Book`: Ensure that we are dealing with a book entity.
  - `?book rdfs:label ""The Tailor and Ansty""@en`: Match the book title in English.
  - `?book dbo:author ?author`: Find the author of the book.
  - `?author foaf:name ?authorName`: Retrieve the name of the author.

This query should effectively return the author's name for ""The Tailor and Ansty"" when executed against DBpedia.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
892,30,train,"Give me the landmark at elevation of 58 and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and entity in Italy.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?landmark ?region ?settlement ?adminRegion
WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""58""^^xsd:integer)

  ?region a dbo:AdministrativeRegion, dbo:Region ;
          dbp:country dbr:Italy ;
          dbo:isPartOf ?adminRegion .

  ?settlement a dbo:Settlement, dbo:City ;
              dbo:locatedIn ?region .

  ?adminRegion dbo:governingParty dbr:Democratic_Party_(Italy) .
  
  FILTER EXISTS { ?landmark dbo:location ?settlement }
}
```",4,8,5,2,3,3,3,71,0,0,2,0,0.0,0
892,39,train,"Give me the landmark at elevation of 58 and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?landmark ?region ?party
WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""58""^^xsd:int)

  ?region a dbo:Region, dbo:Settlement, dbo:AdministrativeRegion ;
          dbo:country dbr:Italy .

  ?administration dbo:administrativeRegion ?region ;
                  dbo:party ?party .

  ?party a dbo:PoliticalParty, dbo:Organization ;
         dbo:member dbr:Andrea_Cozzolino .

  OPTIONAL { ?landmark dbo:locatedIn ?administration }
}
```",4,10,5,3,2,3,3,71,0,0,2,0,0.0,0
507,14,train,Give me the professional in the profession of Guy Ferland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?professional ?professionLabel WHERE {
  ?occupation rdfs:label ""Guy Ferland""@en .
  ?person dbo:occupation ?occupation .
  ?person rdfs:label ?professional .
}
```",2,2,3,2,1,3,3,71,0,0,38,0,0.0,0
417,21,train,"Give me the child of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?spouse
WHERE {
  # Alexandrine of Mecklenburg-Schwerin's child
  ?alexandrine dbo:child ?child .
  
  FILTER (?alexandrine = dbpedia:Alexandrine_of_Mecklenburg-Schwerin) .

  # Count Ingolf of Rosenborg's parent and their spouse
  ?countIngolf dbo:parent ?parent .
  ?parent dbp:spouse ?spouse .

  FILTER (?countIngolf = dbpedia:Count_Ingolf_of_Rosenborg) .

  # Ensure the spouse is royalty
  ?spouse a dbo:Monarch ;
          dbo:country ?country .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
417,34,train,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of Alexandrine of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse
WHERE {
  # Define the child of Knud and Alexandrine
  ?child dbo:parent dbr:Knud,_Hereditary_Prince_of_Denmark .
  ?child dbo:parent dbr:Aleksandrine_of_Mecklenburg-Schwerin .

  # Identify the parent (either Knud or Alexandrine)
  OPTIONAL { ?parent dbo:spouse ?spouse . }
  
  FILTER (?parent = dbr:Knud,_Hereditary_Prince_of_Denmark || ?parent = dbr:Aleksandrine_of_Mecklenburg-Schwerin)

  # Ensure the spouse is a royalty
  ?spouse dbp:title ?title .
  FILTER CONTAINS(LCASE(?title), ""royalty"")
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
212,2,train,"Give me the professional, that is a musical artist and an artist, in Singer, rapper, CEO, Facilities and Project Manager.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ""Singer, rapper, CEO, Facilities and Project Manager""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person ?name
WHERE {
  ?person a dbo:MusicalArtist .
  OPTIONAL { ?person dbo:singer ?singer . }
  OPTIONAL { ?person dbo:rapper ?rapper . }
  OPTIONAL { ?person dbo:CEO ?ceo . }
  OPTIONAL { ?person dbo:FacilitiesManager ?fm . }
  OPTIONAL { ?person dbo:ProjectManager ?pm . }

  ?person foaf:name ?name .

  FILTER (
    (?singer != null || ?rapper != null) &&
    (?ceo != null || ?fm != null || ?pm != null)
  )
}
ORDER BY ?name
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
267,4,train,Who is the reference to Dan Cathy?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation ?spouse ?birthPlace WHERE {
  VALUES ?danCathy { dbr:Dan_Cathy }
  ?danCathy a dbo:Person .
  OPTIONAL { ?danCathy dbo:occupation ?occupation . }
  OPTIONAL { ?danCathy dbo:spouse ?spouse . }
  OPTIONAL { ?danCathy dbo:birthPlace ?birthPlace . }
}
```",1,1,2,1,1,3,2,20,0,3,1,0.0,0.0,0
192,4,train,Give me the parent of Anna of Hungary (Byzantine empress).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?parentLabel
WHERE {
  ?anna a dbo:Empress ;
        foaf:name ""Anna of Hungary""@en .
  
  OPTIONAL { 
    ?anna dbo:child ?child .
    ?child dbo:parent ?parent .
  }
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
47,31,train,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt and office of Bidesh Ranjan Bose.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v1 . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeCommander ?officeBose
WHERE {
  # Find the commander involved in Operation Green Hunt who is a politician
  ?commander dbo:occupation dbr:Politician .
  ?operation dbr:Operation_Green_Hunt ;
             dbo:commander ?commander .
  
  # Get the office of administration for this commander
  ?commander dbo:office ?officeCommander .

  # Find Bidesh Ranjan Bose who is a politician
  dbr:Bidesh_Ranjan_Bose dbo:occupation dbr:Politician .

  # Get the office of administration for Bidesh Ranjan Bose
  dbr:Bidesh_Ranjan_Bose dbo:office ?officeBose .
}
```

This query does the following:
- Identifies a commander involved in ""Operation Green Hunt"" who is also a politician.
- Retrieves the office held by this commander.
- Finds Bidesh Ranjan Bose, ensuring he is recognized as a politician.
- Retrieves the office held by Bidesh Ranjan Bose.

The use of `DISTINCT` ensures that if there are multiple entries for offices, only unique ones are returned. The query assumes that DBpedia has structured data linking these entities and their roles appropriately.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
136,2,train,Give me the area code of Levenhagen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Levenhagen> <http://dbpedia.org/ontology/areaCode> ?result . },"```sparql
SELECT ?areaCode
WHERE {
  ?place a dbo:PopulatedPlace ;
         rdfs:label ""Levenhagen""@en .
  OPTIONAL { 
    ?place dbpedia-owl:postalCode ?areaCode .
  }
}
```

This query:
- Selects the `?areaCode` variable.
- Matches entities that are of type `dbo:PopulatedPlace` and have a label ""Levenhagen"" in English.
- Uses an optional clause to retrieve the postal code, which is often used as an area code.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
495,9,train,Give me the father of the parent of Princess Catherine of Württemberg.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . ?v0 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?grandfather
WHERE {
  ?catherine rdf:type foaf:Person ;
             dbp:name ""Princess Catherine of Württemberg""@en .
  
  ?parent dbo:child ?catherine ;
          rdf:type foaf:Person .

  ?parent dbp:father ?father .

  ?father rdf:type foaf:Person ;
          dbp:father ?grandfather .
}
```

5. **Optimize Query Logic:** The query is structured to first find the parent of Princess Catherine, then her father (the parent's father), and finally that person's father (the paternal grandfather).

6. **Validate Completeness and Precision:** The query captures all necessary relationships and ensures we are dealing with people by using `rdf:type foaf:Person`.",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
98,3,train,Who is the child of Emperor Toba?,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Toba> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?emperor dbo:child ?child .
  FILTER (str(?emperor) = ""http://dbpedia.org/resource/Emperor_Toba"")
}
```

This query selects all entities (`?child`) that are children of Emperor Toba by matching the `dbo:child` property.",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
582,1,train,Give me the player in Kazuaki Nagasawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player ?team
WHERE {
  ?player a dbo:FootballPlayer ;
          foaf:name ""Kazuaki Nagasawa""@en .
  OPTIONAL { 
    ?player dbo:team ?team .
  }
}
```

This query does the following:
- Uses `PREFIX` to define common namespaces for DBpedia ontology (`dbo`) and properties (`dbp`).
- Selects variables `?player` and `?team`.
- In the `WHERE` clause, it matches a player who is of type `dbo:FootballPlayer` (assuming Kazuaki Nagasawa is a football player; adjust if necessary for other sports) with the name ""Kazuaki Nagasawa"".
- Uses an `OPTIONAL` clause to find the team associated with this player.",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
158,8,train,"Give me the party of the successor, that is a prime minister and an office holder and a politician, of André Tardieu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorParty
WHERE {
  # André Tardieu's resource
  dbr:André_Tardieu a dbo:Politician ;
                    dbo:officeHolderOf dbr:France .

  # Successor of André Tardieu
  ?successor dbo:succeededBy dbr:André_Tardieu ;
             a dbo:PrimeMinister, dbo:OfficeHolder, dbo:Politician .

  # Party affiliation of the successor
  ?successor dbo:partyAffiliation ?party .
  ?party rdfs:label ?successorParty .
  
  FILTER(LANG(?successorParty) = 'en')
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
926,28,train,Give me the child of Ahmed III and father of the father of Abdulaziz and successor of Mustafa III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?individual
WHERE {
  # Ahmed III's child
  ?child dbo:parent dbr:Ahmed_III_of_the_Ottoman_Empire .
  
  # Father of Abdulaziz's father (Abdulaziz's grandfather)
  ?grandfather dbo:parent dbr:Abdulaziz_I_of_Saudi_Arabia .
  ?child dbo:parent ?grandfather .

  # Successor of Mustafa III
  ?individual dbo:successor dbr:Mustafa_III_of_the_Ottoman_Empire .
  
  # The individual must be the same as Ahmed III's child and Abdulaziz's grandfather's father
  FILTER (?child = ?individual)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
281,11,train,Give me the awardee of the award of Alfred Warden.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?awardee WHERE {
  ?awardee dbo:award dbr:Alfred_Warden .
}
```",2,2,3,2,1,2,3,28,0,0,12,0,0.0,0
874,0,train,Give me the band of Manfred Mann (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Manfred_Mann_(musician)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName
WHERE {
  ?manfredMann a dbo:MusicalArtist ;
               foaf:name ""Manfred Mann"" .
  
  ?manfredMann dbo:memberOfBand ?band .

  ?band a dbo:Band ;
        rdfs:label ?bandName .
  
  FILTER (lang(?bandName) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
978,8,train,Give me the band member of the person born as Nicholas Bracegirdle.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band
WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Nicholas Bracegirdle""@en .
  OPTIONAL { 
    ?person dbp:birthdayYear ?year .
    FILTER (CONTAINS(LCASE(?person), 'nicholas bracegirdle'))
  }
  ?person dbo:bandMember ?band .
}
```

5. **Optimize Query Logic:** The query uses optional clauses to ensure it captures any relevant band membership information, even if some details like the exact birth year are not available.

6. **Validate Completeness and Precision:** The query is designed to find Nicholas Bracegirdle as a musical artist and retrieve any bands he is associated with, ensuring alignment with the question's intent.",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
373,2,train,"Give me the work, that is a single and a musical work and a work and a soundtrack, of .","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/writer> """"@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work
WHERE {
  ?work a dbo:SinglesAlbum .
  ?work a dbo:MusicalWork .
  ?work a dbo:Soundtrack .
  FILTER NOT EXISTS { ?work a dbo:Book . } # Ensuring it's not categorized as a book or similar non-musical work
}
```

### Explanation:
- **PREFIX**: Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT ?work**: Retrieve distinct works that meet all criteria.
- **WHERE Clause**:
  - `?work a dbo:SinglesAlbum`: The work is categorized as a single album.
  - `?work a dbo:MusicalWork`: The work is recognized as a musical work.
  - `?work a dbo:Soundtrack`: The work serves as a soundtrack.
- **FILTER NOT EXISTS**: Ensure the work isn't mistakenly classified under non-musical categories like books.

This query will return works that are simultaneously singles, musical works, and soundtracks. Adjustments can be made based on more specific requirements or additional constraints if needed.",1,5,2,1,1,2,2,9,0,0,8275,0,0.0,0
36,0,train,Give me the actor of Being Mrs Elliot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?movie rdfs:label ""Being Mrs. Elliot""@en .
  ?movie a dbo:Film .
  ?movie dbo:starring ?actor .
}
```

This query does the following:
- Uses `PREFIX` to define common namespaces.
- Selects the variable `?actor`.
- Matches movies with the label ""Being Mrs. Elliot"" in English (`@en`).
- Ensures that the matched entity is a film (`dbo:Film`).
- Retrieves actors who starred in this movie using the predicate `dbo:starring`.",1,1,2,1,1,2,3,28,0,0,6,0,0.0,0
232,2,train,"Give me the person born, that is a writer, on 1849-09-14.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1849-09-14""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Writer .
  ?person dbo:birthday ""1849-09-14""^^xsd:date .
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
826,7,train,"Who is the child of Louis IV, Grand Duke of Hesse?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
SELECT ?childName WHERE {
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ""Louis IV, Grand Duke of Hesse""@en .
  ?person dbo:child ?child .
  ?child foaf:name ?childName .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
382,11,train,"Give me the landmark at elevation of 100 and birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/elevation> ""100""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?landmark ?birthplace
WHERE {
  # Find the manager of Bonner SC who is also an athlete and sports manager
  ?manager dbo:team dbr:Bonner_SC ;
           a dbo:SoccerManager ;
           dbo:sport dbr:Athletics ;
           dbo:occupation dbr:Sports_Manager .

  # Get the birthplace of this manager
  ?manager dbp:birthPlace ?birthplace .

  # Find landmarks at an elevation of 100
  ?landmark dbo:elevation ""100""^^xsd:int .
}
```",3,6,4,2,2,3,2,20,0,0,1,0,0.0,0
136,4,train,Give me the region coded as 03834 and landmark at elevation of 5.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ""03834"" . ?result <http://dbpedia.org/ontology/elevation> ""5""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?regionName ?landmarkName WHERE {
  ?region dbo:postalCode ""03834"" .
  ?region rdfs:label ?regionName .

  OPTIONAL {
    ?landmark dbo:elevationAboveSeaLevel ?elevation .
    FILTER (?elevation = 5)
    ?landmark rdfs:label ?landmarkName .
    ?landmark dbo:location ?region .
  }
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
  
- **SELECT Clause**: We select the region name (`?regionName`) and landmark name (`?landmarkName`).

- **WHERE Clause**:
  - We find a region with the postal code ""03834"" and get its label.
  - Using an `OPTIONAL` clause, we look for landmarks that have an elevation of 5 meters above sea level. The `FILTER` function ensures only those landmarks are considered.
  - We ensure the landmark is located in the specified region.

This query will return regions with the postal code ""03834"" and any associated landmarks at an elevation of 5 meters, if they exist.",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
166,5,train,"Give me the territory administered, that is a country, from Madrid.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?countryName
WHERE {
  # Madrid as a resource in DBpedia
  dbr:Madrid dbo:administrativeTerritory ?territory .
  
  # Ensure the territory is a country
  ?territory rdf:type dbo:Country .
  
  # Get the name of the country
  ?territory rdfs:label ?countryName .
  
  FILTER (lang(?countryName) = 'en')
}
ORDER BY ?countryName",1,2,2,1,1,3,2,20,0,0,15,0,0.0,0
124,18,train,Give me the military force of Battle of Atbara and military force of Battle of Tamai and commander in Mahdist War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battle ?militaryForce ?commander
WHERE {
  # Battle of Atbara
  VALUES (?battle) { 
    dbr:Battle_of_Atbara 
    dbr:Battle_of_Tamai 
  }
  
  OPTIONAL {
    ?battle dbo:militaryUnit ?militaryForce .
  }

  # Commanders in the Mahdist War
  OPTIONAL {
    ?commander dbo:participatedInBattle ?battle ;
               a dbo:MilitaryPerson .
  }

  FILTER EXISTS { ?battle dbo:partOf dbr:Mahdist_War }
}
ORDER BY ?battle",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
773,37,train,"Give me the parent of Charles the Fat and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?parentOfCharles ?parentOfSuccessor
WHERE {
  # Charles the Fat's parent
  ?charles dbo:father|dbo:mother ?parentOfCharles .
  VALUES ?charles { <http://dbpedia.org/resource/Charles_the_Fat> }

  # Louis the Pious' child and successor
  ?louis dbo:child ?child .
  VALUES ?louis { <http://dbpedia.org/resource/Louis_the_Pious> }
  
  OPTIONAL {
    ?child dbo:successor ?successor .
    FILTER EXISTS { ?successor rdf:type dbo:Monarch }
    
    # Parent of the successor
    ?successor dbo:father|dbo:mother ?parentOfSuccessor .
  }
}",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
554,11,train,Give me the leader of the administration of Francisco da Costa Gomes and leader of Portuguese Mozambique.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . <http://dbpedia.org/resource/Portuguese_Mozambique> <http://dbpedia.org/property/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?presidentLeader ?mozambiqueLeader
WHERE {
  # Find Francisco da Costa Gomes's presidency period
  dbr:Francisco_da_Costa_Gomes dbo:position dbr:President_of_Portugal .
  
  OPTIONAL {
    # Identify the leader of the administration during his presidency
    ?administration dbo:headOfState ?presidentLeader .
    ?administration dbo:startDate ?start .
    ?administration dbo:endDate ?end .
    
    FILTER (?start <= dbr:Francisco_da_Costa_Gomes dbo:termStart && 
            ?end >= dbr:Francisco_da_Costa_Gomes dbo:termEnd)
  }
  
  OPTIONAL {
    # Identify the leader of Portuguese Mozambique
    ?mozambique dbo:administrator ?mozambiqueLeader .
    FILTER (YEAR(?mozambique dbo:startDate) <= YEAR(dbr:Francisco_da_Costa_Gomes dbo:termStart) &&
            YEAR(?mozambique dbo:endDate) >= YEAR(dbr:Francisco_da_Costa_Gomes dbo:termEnd))
  }
}
ORDER BY ?presidentLeader ?mozambiqueLeader
```",3,3,4,2,2,3,2,20,0,0,3,0,0.0,0
582,11,train,Give me the reference to the residence of Hirotaka Sugawara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Hirotaka Sugawara""@en .
  OPTIONAL { ?person dbo:residence ?residence . }
}
```",2,2,3,2,1,3,3,71,0,0,41,0,0.0,0
965,19,train,Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of Louise Mountbatten.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandSpouse
WHERE {
  # Princess Victoria's spouse
  ?princessVictoria dbo:spouse ?firstSpouse .
  
  # First spouse's spouse (could be Princess Victoria or another person)
  ?firstSpouse dbo:spouse ?grandSpouse .

  # Grand Spouse is a parent of Louise Mountbatten
  ?grandSpouse dbp:child ?louiseMountbatten .
  ?louiseMountbatten rdfs:label ""Louise Mountbatten""@en .
  
  # Ensure the grand spouse is not Princess Victoria herself
  FILTER (?grandSpouse != ?princessVictoria)
}
```

### Explanation:

- **PREFIX:** Define prefixes for ontology and property namespaces.
- **SELECT DISTINCT ?grandSpouse:** Retrieve distinct entities that match the criteria.
- **WHERE Clause:**
  - Identify Princess Victoria's spouse (`?firstSpouse`).
  - Find the spouse of `?firstSpouse` (`?grandSpouse`).
  - Ensure `?grandSpouse` is a parent of Louise Mountbatten.
  - Use a filter to exclude Princess Victoria from being her own grand spouse.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
826,13,train,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successor
WHERE {
  # Match Louis I, Grand Duke of Hesse
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:child ?child .

  # Filter children who are royalties
  ?child a dbo:RoyalFamilyMember .
  
  # Find the successor of these royal children
  ?child dbo:successor ?successor .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
274,7,train,Give me the band member of Dizzy Gillespie and associated musical artist of Cecil Taylor.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?gillespieBandMember ?taylorAssociatedArtist
WHERE {
  # Find band members of Dizzy Gillespie
  ?band a dbo:MusicalGroup ;
        dbo:member ?gillespieBandMember .
  ?gillespieBandMember dbo:associatedBandMember <http://dbpedia.org/resource/Dizzy_Gillespie> .

  # Find associated musical artists of Cecil Taylor
  ?artist a dbo:Person ;
          dbo:associatedBandMember <http://dbpedia.org/resource/Cecil_Taylor> .
  BIND(?artist AS ?taylorAssociatedArtist)
}
```

This query does the following:
- Uses `dbo:MusicalGroup` to identify bands and `dbo:member` to find band members.
- Utilizes `dbo:associatedBandMember` to link Dizzy Gillespie with his band members and Cecil Taylor with associated artists.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
917,26,train,"Give me the child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
    ?leleiohoku1 dbo:spouse ?spouse .
    
    ?spouse dbo:father ?father .
    
    ?father dbo:child ?child .
    
    FILTER EXISTS { ?child dbo:royalty true } .
}
```

### Explanation:
- **PREFIX**: Define prefixes for DBpedia ontology and properties.
- **SELECT**: We are interested in the `?child`.
- **WHERE**:
  - Find Leleiohoku I's spouse (`?spouse`).
  - Determine the father of this spouse (`?father`).
  - Identify the child of this father (`?child`).
- **FILTER**: Ensure that the child is a royalty.

This query captures the hierarchical relationships and applies the necessary filter to ensure the result meets the criteria specified in the question.",3,4,4,3,1,3,3,71,0,0,11,0,0.0,0
465,35,train,"Give me the successor of the child of Alfonso I d'Este and successor of the child, that is a royalty, of Anne of Brittany.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?successorAlfonso ?successorAnne
WHERE {
  # Find the child of Alfonso I d'Este and their successor
  ?childAlfonso dbo:parent dbr:Alfonso_I_d%27Este ;
               dbo:successor ?successorAlfonso .

  # Find a child of Anne of Brittany who is royalty and their successor
  ?childAnne dbo:parent dbr:Anne_of_Brittany ;
             rdf:type dbo:Monarch ;  # Assuming Monarch indicates royalty
             dbo:successor ?successorAnne .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
573,29,train,"Give me the parent of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at Massachusetts.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfJohnQuincyAdams ?personDecedentAtPhelanResidence ?personDecedentInMassachusetts
WHERE {
  # Parent of John Quincy Adams
  ?johnQuincyAdams dbo:birthName ""John Quincy Adams""@en .
  ?parentOfJohnQuincyAdams dbo:child ?johnQuincyAdams .

  # Residence that is a settlement for William J. Phelan
  ?williamJPhelan dbo:birthName ""William J. Phelan""@en .
  ?residence dbo:resident ?williamJPhelan ;
             a dbo:Settlement .

  # Person decedent at the residence of William J. Phelan
  ?personDecedentAtPhelanResidence dbo:deathPlace ?residence .

  # Person decedent in Massachusetts
  ?massachusetts dbr:Massachusetts .
  ?personDecedentInMassachusetts dbo:deathPlace ?massachusetts .
}
```",4,5,5,2,3,3,3,71,0,0,2,0,0.0,0
267,12,train,Give me the person born on the birth date of Dan Cathy and coach of Iran national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Iran_national_football_team> <http://dbpedia.org/ontology/coach> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coachName WHERE {
  # Find Dan Cathy's birthdate
  dbr:Dan_Cathy dbo:birthday ?danCathyBirthDate .

  # Find the coach of Iran national football team and their birthdate
  dbr:Iran_national_football_team dbo:head_coach ?coach .
  ?coach dbo:birthday ?coachBirthDate .

  # Match the birthdates
  FILTER (?danCathyBirthDate = ?coachBirthDate)

  # Return the coach's name
  ?coach rdfs:label ?coachName .
  
  # Filter to ensure we get English labels only
  FILTER (lang(?coachName) = 'en')
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
773,12,train,Give me the parent of Carloman of Bavaria and parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person (GROUP_CONCAT(?parent; separator="", "") AS ?parents)
WHERE {
  VALUES (?person) { 
    (<http://dbpedia.org/resource/Carloman_of_Bavaria>) 
    (<http://dbpedia.org/resource/Charles_the_Fat>)
  }
  
  OPTIONAL { ?person dbo:father ?father. BIND(?father AS ?parent) . }
  OPTIONAL { ?person dbo:mother ?mother. BIND(?mother AS ?parent) . }
}
GROUP BY ?person
```",2,2,3,1,2,3,3,71,0,3,2,0.0,0.0,0
791,22,train,"Give me the spouse of Taira no Tokuko and father of the child, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse
WHERE {
  # Taira no Tokuko and her spouse
  ?tokuko a dbo:Person ;
          dbp:spouse ?spouse .

  # Emperor Takakura's children who are royalty
  ?child a dbo:RoyalFamilyMember ;
         dbo:father ?spouse ;
         dbo:parentEmperor dbpedia:Emperor_Takakura .

  # Ensure Taira no Tokuko is the same person as the spouse of the child's father
  FILTER (?tokuko = dbpedia:Taira_no_Tokuko)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
216,1,train,Give me the party of Campbell Newman.,SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  ?person foaf:name ""Campbell Newman""@en .
  ?person dbo:partyAffiliation ?party .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
166,9,train,"Who is the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
  # Link Manuel Hedilla to an event
  dbr:Manuel_Hedilla dbo:associatedWithEvent ?event .

  # Ensure the event is a societal event and a military conflict
  ?event rdf:type dbo:SocietalEvent .
  ?event rdf:type dbo:MilitaryConflict .

  # Find the military force associated with this event
  ?event dbo:militaryForce ?militaryForce .
}
```",2,5,3,2,1,3,2,20,0,0,514,0,0.0,0
573,30,train,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at Massachusetts and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  ?author dbo:work ?exchequerStandards .
  ?exchequerStandards rdfs:label ""Exchequer Standards""@en .

  ?author dbo:profession dbr:Politician ;
          dbo:officeHolder true ;
          dbp:deathPlace dbr:Massachusetts ;
          dbp:deathPlace dbr:Quincy,_Massachusetts .

  ?parent dbo:child ?author .
}
```",4,6,5,2,3,3,3,71,0,0,2,0,0.0,0
839,20,train,Give me the band of Kevin Russell (musician) and band of the member of Böhse Onkelz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?kevinRussellBand ?boMemberBand
WHERE {
  # Find Kevin Russell's band
  ?kevinRussell a dbo:MusicArtist ;
                foaf:name ""Kevin Russell"" ;
                dbo:band ?kevinRussellBand .

  # Find members of Böhse Onkelz and their bands
  ?boMember a dbo:MusicalArtist ;
            dbo:memberOfGroup <http://dbpedia.org/resource/Böhse_Onkelz> .
  
  OPTIONAL {
    ?boMember dbo:band ?boMemberBand .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
573,20,train,"Give me the person decedent at Massachusetts and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?decedentAtMassachusetts ?residenceDecedent 
WHERE {
  # Find William J. Phelan's residence that is a settlement
  dbr:William_J._Phelan dbo:placeOfResidence ?residence .
  ?residence rdf:type dbo:Settlement .

  # Find decedents at Massachusetts
  ?decedentAtMassachusetts dbo:deathPlace dbr:Massachusetts .

  # Find decedents at the residence of William J. Phelan
  ?residenceDecedent dbo:deathPlace ?residence .
}
```",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
582,13,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?masami dbp:birthName ""Masami Nagasawa""@en .
  ?masami dbo:father ?father .

  FILTER EXISTS { ?father a dbo:Athlete . }
  FILTER EXISTS { ?father a dbo:SoccerManager . }
  FILTER EXISTS { ?father a dbo:SportsManager . }
}
```",2,5,3,2,1,3,3,71,0,0,4,0,0.0,0
236,7,train,"Give me the party member of the administration, that is an organisation, of John Adams.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyName
WHERE {
    # Identify John Adams and his administration role
    dbr:John_Adams dbo:presidentOf ?administration .
    
    # Find the party associated with this administration
    ?administration dbo:politicalParty ?party .

    # Ensure the party is an organization
    ?party a dbo:Organization ;
           rdfs:label ?partyName .
}
```

### Explanation

- **PREFIX**: Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT ?partyName**: Select distinct names of parties to avoid duplicates.
- **WHERE Clause**:
  - `dbr:John_Adams dbo:presidentOf ?administration`: Find the administration John Adams was part of.
  - `?administration dbo:politicalParty ?party`: Identify the political party associated with that administration.
  - `?party a dbo:Organization ; rdfs:label ?partyName`: Ensure the entity is an organization and retrieve its label.

This query will return the name(s) of the political party associated with John Adams' administration, ensuring it is classified as an organization.",2,3,3,2,1,3,2,20,0,0,269,0,0.0,0
365,10,train,"Give me the native, that is a politician, of the reference to Полтавская губерния.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name WHERE {
  # Find individuals who are natives of Poltava Governorate
  ?person dbo:nativePlace dbr:Poltava_Governorate ;
          a dbo:Person .
  
  # Ensure the individual has a political role
  OPTIONAL { ?person dbo:occupation dbr:Politician . }
  
  # Get the name of the person
  ?person rdfs:label ?name .
  
  FILTER (LANG(?name) = 'en')
}
ORDER BY ?name",2,3,3,2,1,3,2,20,0,0,11,0,0.0,0
373,5,train,"Give me the writer of the work, that is a single and a musical work and a work and a soundtrack, of .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?writer
WHERE {
  ?work rdf:type dbo:Single .
  ?work rdf:type dbo:MusicalWork .
  ?work rdf:type dbo:Work .
  ?work rdf:type dbo:Soundtrack .
  ?work dbo:composer ?writer .
}
```",2,6,3,2,1,2,2,9,0,0,15041,0,0.0,0
98,4,train,Give me the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . }","```sparql
SELECT ?person ?name ?birthDate WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Paolo Elito M. Ballesteros IV""@en .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
216,7,train,Give me the death of Pavel Vezhinov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathDate
WHERE {
  dbr:Pavel_Vezhinov dbo:deathDate ?deathDate .
}
```

This query selects the death date of Pavel Vezhinov by matching the `dbo:deathDate` property.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
917,19,train,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of Kekūanāoʻa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parent
WHERE {
  ?child dbo:childOf dbr:Kamehameha_IV ;
         rdf:type dbo:Monarch .
  
  ?child dbo:childOf dbr:Kekūanāoʻa .

  ?parent dbo:child ?child .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
495,3,train,Give me the father of William I of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherName WHERE {
  ?person a dbo:Monarch ;
          foaf:name ""William I of Württemberg""@en .
  ?person dbo:father ?father .

  OPTIONAL { 
    ?father foaf:name ?fatherName .
  }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
18,5,train,"Give me the figure known, that is an educational institution, as Saints.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ""Saints""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?institution WHERE {
  ?institution a dbo:EducationalInstitution .
  ?institution rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), LCASE(""saints"")))
}
```

### Explanation:

- **PREFIX**: We define prefixes for common namespaces used in DBpedia.
- **SELECT**: We are selecting the variable `?institution` which represents educational institutions.
- **WHERE Clause**:
  - `?institution a dbo:EducationalInstitution`: This ensures that we only consider entities classified as educational institutions.
  - `?institution rdfs:label ?label`: This retrieves the label of each institution.
  - `FILTER (CONTAINS(LCASE(?label), LCASE(""saints"")))`: This filter checks if the label contains ""Saints,"" case-insensitively.

This query will return all educational institutions whose labels contain the word ""Saints.""",1,2,2,1,1,2,3,28,0,0,25,0,0.0,0
791,28,train,"Give me the predecessor of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura and father of Emperor Go-Toba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?royalSpouse ?fatherOfGoToba
WHERE {
  # Find Emperor Antoku's predecessor
  ?antoku dbo:succession dbr:Emperor_Antoku .
  ?predecessor dbo:succession ?antoku .

  # Find the spouse of the spouse (a royalty) of Emperor Takakura
  ?takakura dbo:spouse ?spouse1 .
  ?spouse1 dbo:spouse ?royalSpouse .
  FILTER EXISTS { ?royalSpouse a dbo:Monarch } 

  # Find the father of Emperor Go-Toba
  ?goToba dbo:father ?fatherOfGoToba .
  ?fatherOfGoToba dbo:succession dbr:Emperor_Go-Toba .

  # Ensure all variables are connected through common entities
  FILTER (?predecessor = ?royalSpouse)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
124,33,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in Mahdist War.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?militaryForce
WHERE {
  # Find the individual who received the British South Africa Company Medal and commanded in the Mahdist War
  ?individual dbo:award dbr:British_South_Africa_Company_Medal .
  ?individual dbo:militaryCommanderOf dbr:Mahdist_War .

  # Identify the war associated with this individual that is an event, military conflict, and societal event
  ?war dbo:commandedBy ?individual ;
       a dbo:Event , dbo:MilitaryConflict , dbo:SocietalEvent .

  # Get the military force involved in the war
  ?war dbo:militaryForce ?militaryForce .
}
```",4,7,5,3,2,3,3,71,0,0,3,0,0.0,0
433,0,train,Give me the associated musical artist of Paul Chambers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Identify Paul Chambers resource
  VALUES ?paulChambers { dbr:Paul_Chambers_(bassist) }
  
  # Find associated artists through collaborations or performances
  ?paulChambers dbo:associatedMusicalArtist ?artist .
  
  FILTER(?artist != ?paulChambers)
}
```",1,1,2,1,1,3,3,71,0,0,31,0,0.0,0
874,10,train,"Give me the band member of the band, that is an organisation, of Mark Read (singer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Find bands where Mark Read is a member
  ?band dbo:member dbr:Mark_Read_(singer) .
  
  # Ensure the band is an organization
  ?band rdf:type dbo:Band ;
        dbo:genre ?genre .

  FILTER EXISTS { ?band dbo:isPartOf ?organisation . 
                 ?organisation rdf:type dbo:Organization }
  
  # Find other members of this band
  ?band dbo:member ?bandMember .
}
```",2,3,3,2,1,3,2,20,0,0,7,0,0.0,0
892,24,train,Give me the entity in Province of Reggio Emilia and landmark at elevation of the award of Anna Ishii.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInReggioEmilia ?landmark ?elevation WHERE {
  # Find the entity in Province of Reggio Emilia
  ?entityInReggioEmilia a dbo:Place ;
                       dbo:location dbr:Province_of_Reggio_Emilia .

  # Find Anna Ishii's award and related landmark
  ?award dbo:recipient dbr:Anna_Ishii .
  ?award dbo:relatedLandmark ?landmark .
  
  # Get the elevation of the landmark
  ?landmark dbo:elevation ?elevation .

  FILTER(?elevation > 0) # Assuming we want a positive elevation value
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
582,25,train,Give me the figure known as the nickname of Japan national football team and player in Kazuaki Nagasawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname
WHERE {
  # Find the nickname of the Japan national football team
  dbr:Japan_national_football_team dbo:nickname ?nickname .

  # Ensure Kazuaki Nagasawa is a player in the Japan national football team
  OPTIONAL {
    dbr:Kazuaki_Nagasawa dbo:team dbr:Japan_national_football_team .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
453,3,train,"Who is the author, that is a cardinal and a cleric, of Apologia Pro Vita Sua?",SELECT ?result WHERE { <http://dbpedia.org/resource/Apologia_Pro_Vita_Sua> <http://dbpedia.org/property/author> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cardinal>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?authorName
WHERE {
  ?book dbo:title ""Apologia Pro Vita Sua""@en .
  ?book dbo:author ?author .
  ?author rdfs:label ?authorName .
  FILTER (LANG(?authorName) = 'en') .

  ?author rdf:type dbp:Cardinal .
  ?author rdf:type dbr:Cleric .
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
465,18,train,"Give me the successor of Renée of France and successor of Ercole II d'Este, Duke of Ferrara and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?successorRenée ?successorErcole
WHERE {
  # Successor of Renée of France
  OPTIONAL { 
    dbpedia:Ren%C3%A9e_of_France dbo:successor ?successorRenée .
  }
  
  # Successor of Ercole II d'Este, Duke of Ferrara
  OPTIONAL { 
    dbpedia:Ercole_II_d%27Este,_Duke_of_Ferrara dbo:successor ?successorErcole .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
274,18,train,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  ?person dbo:profession dbr:Actor .
  ?person dbo:profession dbr:MusicalArtist .
  ?association dbo:associatedBandOrMusicalGroup dbr:Imagine_the_Sound .
  ?association dbo:member ?person .
  ?person rdfs:label ?artist .
  FILTER (LANG(?artist) = ""en"")
}
```",3,4,4,2,2,2,3,28,0,0,6,0,0.0,0
124,8,train,"Give me the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?force
WHERE {
  # Herbert Kitchener, 1st Earl Kitchener
  dbr:Herbert_Kitchener_1st_Earl_Kitchener dbo:force ?force .

  # Filter for societal events and military conflicts
  OPTIONAL { 
    ?force a dbo:SocietalEvent .
  }
  OPTIONAL {
    ?force a dbo:MilitaryConflict .
  }

  FILTER EXISTS { ?force a dbo:SocietalEvent . } || EXISTS { ?force a dbo:MilitaryConflict . }
}
```

This query does the following:
- Selects distinct forces associated with Herbert Kitchener.
- Uses `OPTIONAL` clauses to check if these forces are categorized as either societal events or military conflicts.
- Applies a `FILTER` to ensure that only those forces which are either societal events or military conflicts are returned.",1,3,2,1,1,3,3,71,0,0,8,0,0.0,0
715,27,train,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader WHERE {
  # Find Carlos Franco Iribarnegaray's resource
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@en .
  
  # Identify the office he is associated with, which must be both a government agency and an organization
  ?office dbo:head ?leader ;
          dbo:employee ?person ;
          rdf:type dbo:GovernmentAgency , dbo:Organization .

}
```

This query does the following:
- Uses `rdfs:label` to find the resource for Carlos Franco Iribarnegaray.
- Identifies an office that is both a government agency and an organization (`rdf:type dbo:GovernmentAgency , dbo:Organization`).
- Finds the leader of this office using `dbo:head`.",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
459,5,train,Give me the birth name of Kevin Stitt.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Kevin Stitt""@en .
  OPTIONAL { 
    ?person foaf:givenName ?birthName .
  }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
507,34,train,"Give me the professional in Film director, television director and spouse of the person born as the birth name of Anne V. Coates.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professionalName WHERE {
  ?person a dbo:FilmDirector ;
          a dbo:TelevisionDirector .
  ?person foaf:name ?professionalName .

  ?spouse dbp:spouse ?person .
  ?spouse foaf:name ""Anne V. Coates"" .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
865,24,train,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of Shahla Khatun.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  # Abu Ahmad Abdul Hafiz and his child who is a politician
  ?child dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz ;
         rdf:type dbo:Politician .
  
  # Shahla Khatun and her father
  dbr:Shahla_Khatun dbo:parent ?father .

  # The child who is both a politician and Shahla Khatun
  FILTER (?child = dbr:Shahla_Khatun)
}
```

### Explanation:

- **PREFIX:** We define prefixes for common DBpedia properties.
- **SELECT ?father:** We want to find the father of the specified child.
- **WHERE Clause:**
  - The first pattern identifies children of Abu Ahmad Abdul Hafiz who are politicians.
  - The second pattern identifies Shahla Khatun's father.
  - The `FILTER` ensures that we only consider the case where the politician is also Shahla Khatun.

This query will return the father who satisfies both conditions: being the father of a child who is a politician and the father of Shahla Khatun.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
554,3,train,Give me the administration of Francisco da Costa Gomes.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?startYear ?endYear WHERE {
  VALUES ?person { dbr:Fran%C3%A7isco_da_Costa_Gomes }
  
  ?person dbo:officeHolder [
    a dbo:President ;
    dbo:termStart ?startYear ;
    dbo:termEnd ?endYear .
  ]
}
```

4. **Optimize Query Logic:** The query is concise and directly targets the relevant properties (`dbo:officeHolder`, `dbo:termStart`, `dbo:termEnd`) to extract the administration period.

5. **Validate Completeness and Precision:** This query should accurately retrieve the start and end years of Francisco da Costa Gomes' presidency, aligning with the question's requirements.",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
987,8,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT DISTINCT ?countryName ?region
WHERE {
  ?country a dbo:Country ;
           rdfs:label ?countryName ;
           dbo:timeZone dbr:Central_European_Time .
  
  OPTIONAL { 
    ?country dbo:locatedIn ?region .
  }
}
ORDER BY ?countryName
```",1,2,2,1,1,3,3,71,0,94,56,0.0,0.0,0
645,34,train,Give me the commander in the force of the commander in Siege of Madrid and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInChief WHERE {
  ?siegeEvent dbo:eventLocation dbr:Madrid .
  ?siegeEvent dbo:participatedIn dbr:Siege_of_Madrid .

  ?subordinateCommander dbo:position ""Commander"" ;
                       dbo:memberOf ?siegeEvent .

  ?commanderInChief dbo:position ""Commander-in-Chief"" ;
                    dbo:memberOf ?siegeEvent .
  
  ?ministryLeader dbo:headOf dbr:Ministry_of_the_Army_(Spain) .
  
  FILTER (?commanderInChief = ?subordinateCommander)
  FILTER (?commanderInChief = ?ministryLeader)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
124,17,train,"Give me the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?force
WHERE {
  # Find the person born on June 24, 1850
  ?person a dbo:Person ;
          dbp:birthday ""1850-06-24""^^xsd:date .

  # Identify forces that are both societal events and military conflicts
  ?force a dbo:SocietalEvent , dbo:MilitaryConflict .

  # Link the force to the person
  ?person dbo:associatedWith ?force .
}
```",2,4,3,2,1,3,3,71,0,0,8,0,0.0,0
445,6,train,Who is the awardee of Royal Astronomical Society?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee WHERE {
  ?award dbo:recipient ?awardee .
  ?award dbo:givenBy dbr:Royal_Astronomical_Society .
}
```

4. **Optimize Query Logic:** The query uses `DISTINCT` to ensure unique awardees are returned, and it directly targets the relationship between awards and recipients.

5. **Validate Completeness and Precision:** This query should accurately retrieve individuals who have been awarded by the Royal Astronomical Society, assuming DBpedia has structured data for these relationships.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
456,27,train,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandOfTheBandLabel
WHERE {
  ?alanDoyle dbo:member ?doyleBand .
  FILTER (str(?alanDoyle) = ""Alan Doyle"") .

  ?doyleBand dbo:musicalArtist ?musicalArtist .
  
  ?musicalArtist dbo:musicalArtist ?bandOfTheBand .
  
  ?bandOfTheBand rdfs:label ?bandOfTheBandLabel .
}
```",3,4,4,3,1,3,3,71,0,0,3,0,0.0,0
917,23,train,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Find the mayor of Hawaiian Kingdom
  ?mayor dbo:positionTitle ""Mayor""@en .
  ?mayor dbo:country dbr:Hawaiian_Kingdom .

  # Find children of the mayor
  ?child dbo:parent ?mayor .

  # Filter for royalty among the children
  ?child dbo:royaltyStatus ""Royal""@en .

  # Find the parent of the royal child
  ?child dbo:parent ?parent .
}
```",3,4,4,3,1,3,3,71,0,0,12,0,0.0,0
216,24,train,"Give me the team of Ognjen Vukojević and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team ?coach WHERE {
  # Find the team coached by Ognjen Vukojević
  ?team dbo:manager dbr:Ognjen_Vukojević .
  
  # Ensure the team is Bosnia and Herzegovina national under-18 football team
  FILTER (str(?team) = ""Bosnia_and_Herzegovina_national_under-18_football_team"")

  # Find the coach of that team
  ?coach dbo:manager ?team .

  # Ensure the coach is a soccer player, sports manager, and soccer manager
  ?coach dbo:sport dbr:Soccer .
  ?coach dbo:occupation dbr:Sports_manager .
  ?coach dbo:occupation dbr:Soccer_manager .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
826,11,train,Give me the spouse of the child of Johann Heinrich Appel.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse
WHERE {
  ?child dbo:parent dbr:Johann_Heinrich_Appel .
  ?child foaf:mbox ?email . # To ensure the child is a person with an email (filtering out non-person entities)
  OPTIONAL { 
    ?child dbo:spouse ?spouse .
  }
}
```

5. **Optimize Query Logic:** The query uses `OPTIONAL` to handle cases where a child might not have a spouse listed.

6. **Validate Completeness and Precision:** The query is designed to return the spouses of Johann Heinrich Appel's children, ensuring it captures all relevant relationships.",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
124,1,train,Give me the military force of Battle of Tamai.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?unit ?commander WHERE {
  # Identify the Battle of Tamai resource
  VALUES ?battle { dbr:Battle_of_Tamai }

  # Find military units involved in the battle
  ?battle dbo:militaryUnitInvolved ?unit .
  
  OPTIONAL {
    # Optionally find commanders associated with these units
    ?unit dbo:commander ?commander .
  }
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
417,24,train,Give me the child of the father of Frederick IX of Denmark and child of Alexandrine of Mecklenburg-Schwerin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?childName
WHERE {
  # Frederick IX of Denmark
  ?frederick dbp:name ""Frederick IX of Denmark""@en .
  
  # Father of Frederick IX
  ?father dbo:child ?frederick .
  
  # Alexandrine of Mecklenburg-Schwerin
  ?alexandrine dbp:name ""Alexandrine of Mecklenburg-Schwerin""@en .

  # Child of both the father and Alexandrine
  ?child dbo:parent ?father ;
         dbo:parent ?alexandrine .
  
  # Return the name of the child
  ?child rdfs:label ?childName .
  FILTER (lang(?childName) = ""en"")
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
273,7,train,Give me the spouse of the child of Giovanni Agnelli.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse
WHERE {
  ?child dbo:parent dbr:Giovanni_Agnelli .
  ?child foaf:mbox ?email .  # Ensures the child is a person with an email (commonly used to filter out non-person entities)
  ?child dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
965,22,train,"Give me the spouse of Prince Louis of Battenberg and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseName
WHERE {
  # Prince Louis of Battenberg and his spouse
  ?princeLouis a dbo:Person ;
              foaf:name ""Prince Louis of Battenberg""@en .
  
  ?princeLouis dbo:spouse ?spouse .

  # The child who is a noble and was born as Prince George of Battenberg
  ?child a dbo:Person ;
         foaf:name ""Prince George of Battenberg""@en ;
         dbo:nobleTitle ?nobleTitle .
  
  ?spouse dbo:child ?child .

  # Return the spouse's name
  ?spouse foaf:name ?spouseName .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
417,6,train,Who is the father of Frederick IX of Denmark?,SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?father WHERE {
  ?person dbo:givenName ""Frederick"" .
  ?person dbo:familyName ""IX of Denmark""@en .
  ?person dbo:father ?father .
}
```

This query selects the father (`?father`) of a person who is identified as Frederick IX of Denmark by matching their given name and family name.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
36,16,train,Give me the person born as the birth name of Ayo Makun and actor of Being Mrs Elliot.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Ayo Makun's birth name
  dbr:Ayo_Makun dbo:birthName ?birthName .
  
  # Find the actor of ""Being Mrs Elliot""
  dbr:Being_Mrs_Elliot dbo:actor ?actor .

  # Match the person who has both the birth name and is the actor
  ?person dbo:birthName ?birthName .
  ?person = ?actor .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
124,31,train,"Give me the military force of Battle of Tamai and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Battle of Tamai and its military force
  dbr:Battle_of_Tamai dbo:militaryConflicts ?war .
  
  OPTIONAL { ?war dbo:militaryForce ?militaryForce . }
  OPTIONAL { ?war dbo:commander ?commander . }

  # Reference to 'A' Battery, Royal Australian Artillery
  FILTER EXISTS {
    dbr:A_Battery,_Royal_Australian_Artillery a dbo:MilitaryUnit ;
      dbo:nationality dbr:Australia .
  }
  
  # Ensure the war is both a societal event and a military conflict
  ?war rdf:type dbo:SocietalEvent, dbo:MilitaryConflict .
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
98,4,train,Give me the parent of Emperor Rokujō and child of Emperor Go-Shirakawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . <http://dbpedia.org/resource/Emperor_Rokujō> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commonAncestor
WHERE {
  ?parent dbo:child ?rokujou .
  ?rokujou rdfs:label ""Emperor Rokujō""@en .

  ?goShirakawa dbo:parent ?commonAncestor .
  ?goShirakawa rdfs:label ""Emperor Go-Shirakawa""@en .

  FILTER (?parent = ?commonAncestor)
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
976,32,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the leader, that is a politician, of Grand National Assembly of Turkey.",SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mayorOffice ?leaderOffice
WHERE {
  # Mayor's office query
  ?mayor a dbo:Mayor ;
         rdf:type dbo:Politician, dbo:OfficeHolder ;
         dbo:nationality dbr:Turkey ;
         dbo:partyAffiliation dbr:Nation_Alliance_(Turkey) .
  
  ?mayor dbo:office ?mayorOffice .

  # Leader's office query
  ?leader a dbo:Leader ;
          rdf:type dbo:Politician ;
          dbo:organization dbr:Grand_National_Assembly_of_Turkey .
  
  ?leader dbo:office ?leaderOffice .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
47,11,train,Give me the office of the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office
WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Jagdeep Dhankhar""@en .
  ?person dbo:office ?office .
}
```

### Explanation:

- **PREFIX:** We define prefixes for `dbo` (DBpedia Ontology) and `dbr` (DBpedia Resources).
- **SELECT:** We are interested in the office (`?office`) held by Jagdeep Dhankhar.
- **WHERE Clause:**
  - `?person a dbo:Person`: Ensures that we're dealing with a person entity.
  - `?person foaf:name ""Jagdeep Dhankhar""@en`: Matches the name of the person to ""Jagdeep Dhankhar"" in English.
  - `?person dbo:office ?office`: Retrieves the office held by this person.

This query should return the specific administrative role or office associated with Jagdeep Dhankhar as recorded in DBpedia.",2,2,3,2,1,3,3,71,0,0,80,0,0.0,0
216,13,train,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:SoccerPlayer .
  ?person a dbo:SportsManager .
  
  ?team dbp:coach ?person ;
        rdfs:label ""Bosnia and Herzegovina national under-18 football team""@en .

  FILTER (lang(?teamLabel) = 'en')
}
```",2,5,3,2,1,3,3,71,0,0,13,0,0.0,0
645,23,train,Give me the commander in the force of the commander in Siege of Madrid.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalCommander
WHERE {
  # Find the commander of the Siege of Madrid
  ?siegeEvent a dbo:MilitaryEngagement ;
              dbo:commander ?firstCommander .

  FILTER (str(?siegeEvent) = ""Siege_of_Madrid"")

  # Find who commanded the first commander's force
  OPTIONAL {
    ?firstCommander dbo:commanderOf ?force .
    ?force dbo:commander ?finalCommander .
  }
}
```",3,3,4,3,1,3,3,71,0,0,274,0,0.0,0
892,34,train,Give me the entity in the profession of the true self of Enrico Crolla and entity in Province of Reggio Emilia.,"SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?profession ?entityInReggioEmilia
WHERE {
  # Find Enrico Crolla's profession
  { 
    ?enricoCrolla a dbo:Person ;
                  foaf:name ""Enrico Crolla""@en .
    ?enricoCrolla dbo:occupation ?profession .
  }
  
  # Find entities in Province of Reggio Emilia
  {
    ?entityInReggioEmilia dbp:locatedInProvince <http://dbpedia.org/resource/Provincia_di_Reggio_Emilia> .
  }
}
```

### Explanation

- **PREFIX**: Define prefixes for common namespaces to simplify the query.
- **SELECT DISTINCT**: Ensure unique results are returned for both profession and entities in Reggio Emilia.
- **WHERE Clause**:
  - The first pattern retrieves Enrico Crolla's profession using his name and occupation property.
  - The second pattern finds entities located in Province of Reggio Emilia.

This query will return the profession associated with Enrico Crolla and any entities found within the specified province.",4,4,5,3,2,3,3,71,0,0,40,0,0.0,0
130,2,train,"Give me the native, that is a coach and a college coach, of Madison, Alabama.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Madison,_Alabama .
  ?person dbo:name ?name .
  
  # Ensure the person is a coach
  ?person dbo:occupation ?occupation .
  FILTER (
    EXISTS { ?occupation rdfs:label ?label . FILTER (CONTAINS(LCASE(?label), ""coach"")) }
  )
  
  # Ensure the person is specifically a college coach
  OPTIONAL {
    ?person dbo:almaMater ?college .
    ?college dbo:type dbr:College_or_university_in_the_United_States .
  }
}
ORDER BY ?name
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
353,5,train,"Give me the alma mater of the awardee of Medal of the Order ""For Merit to the Fatherland"".",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_the_Order_%22For_Merit_to_the_Fatherland%22> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMaterLabel
WHERE {
  ?person dbo:award dbr:Medal_of_the_Order_""For_Merit_to_the_Fatherland"" .
  ?person dbo:almaMater ?almaMater .
  ?almaMater rdfs:label ?almaMaterLabel .
  FILTER (lang(?almaMaterLabel) = ""en"")
}
```",2,2,3,2,1,2,2,9,0,0,8,0,0.0,0
326,11,train,"Give me the person decedent at France and resident of the birthplace, that is a state and British, of David Jessel.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find David Jessel's birthplace which is a state and British
  dbr:David_Jessel dbo:birthPlace ?birthPlace .
  
  FILTER EXISTS { ?birthPlace rdf:type dbo:State . }
  FILTER EXISTS { ?birthPlace dbo:nationality dbr:United_Kingdom . }

  # Find persons who are decedents in France and residents of the birthplace
  ?person dbo:deathPlace dbr:France .
  ?person dbo:residence ?birthPlace .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
839,18,train,Give me the band of Peter Schorowsky and band of Kevin Russell (musician) and band of Matthias Röhr.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personLabel ?bandLabel
WHERE {
  VALUES (?person ?personLabel) {
    (dbr:Peter_Schorowsky ""Peter Schorowsky"")
    (dbr:Kevin_Russell_(musician) ""Kevin Russell (musician)"")
    (dbr:Matthias_Röhr ""Matthias Röhr"")
  }
  
  ?person dbp:band ?band .
  ?band rdfs:label ?bandLabel .
  FILTER(LANG(?bandLabel) = 'en')
}
ORDER BY ?personLabel
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
382,0,train,Give me the birthplace of Björn Joppe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Björn_Joppe> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Björn Joppe""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
158,7,train,"Give me the entity in the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  ?award dbo:recipient dbr:Adelbert_Cronkhite .
  ?award dbo:awardingBody ?entity .
  ?entity a dbo:Country .
  BIND(?entity AS ?country)
}
```",2,3,3,2,1,3,2,20,0,0,44301,0,0.0,0
47,33,train,"Give me the office of the awardee of the award, that is an award, of Mantu Ghosh and office of Suvendu Adhikari.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeMantuAwardee ?officeSuvendu
WHERE {
  # Find awards associated with Mantu Ghosh and their awardees' offices
  ?award dbo:recipient ?awardee .
  ?award dbo:associatedWith dbr:Mantu_Ghosh .
  
  OPTIONAL { 
    ?awardee dbo:office ?officeMantuAwardee .
  }
  
  # Find Suvendu Adhikari's office
  dbr:Suvendu_Adhikari dbo:office ?officeSuvendu .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
124,22,train,"Give me the commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Herbert Kitchener as commander in the Mahdist War
  dbr:Mahdist_War dbo:militaryConflict [
    dbo:commander ?commander .
    FILTER (str(?commander) = ""Herbert_Kitchener"")
  ] .

  # Military force associated with Herbert Kitchener during the Mahdist War
  ?militaryForce dbo:participatedIn dbr:Mahdist_War ;
                 dbo:commander ?commander .
}
```

This query does the following:
- Identifies the Mahdist War as a military conflict.
- Finds the commander of this war, specifically Herbert Kitchener.
- Retrieves the military force associated with him during the Mahdist War.",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
329,9,train,Give me the entity in United Kingdom and entity in Northern Ireland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityUK ?entityNI WHERE {
  # Entities in the United Kingdom
  ?entityUK a dbo:Place .
  ?entityUK dbo:country dbr:United_Kingdom .

  # Entities in Northern Ireland
  ?entityNI a dbo:Place .
  ?entityNI dbo:country dbr:Northern_Ireland .
}
```",2,2,3,1,2,2,3,28,524,26172,7,0.01962840875037459,0.9868173258003766,0.03849120358467698
527,6,train,Give me the author of The Boy Who Kicked Pigs and actor of The Book Tower.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Book_Tower> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/The_Boy_Who_Kicked_Pigs> <http://dbpedia.org/property/author> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?actor
WHERE {
  # Find the author of ""The Boy Who Kicked Pigs""
  OPTIONAL {
    ?book dbr:The_Boy_Who_Kicked_Pigs .
    ?book dbo:author ?author .
  }

  # Find an actor associated with ""The Book Tower""
  OPTIONAL {
    ?work dbr:The_Book_Tower .
    ?work dbo:actor ?actor .
  }
}
```

4. **Optimize Query Logic:** The query uses `OPTIONAL` clauses to ensure that if one of the resources does not exist or lacks the specified property, it won't prevent retrieving other available information.

5. **Validate Completeness and Precision:** This query is designed to capture both pieces of information requested by the question, ensuring that each part is addressed separately but within a single SPARQL query.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
933,39,train,"Give me the reference to Alan Warner and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandName ?bandReference
WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1947-04-21""^^xsd:date ;
          dbo:member ?band .
  
  ?band a dbo:Band, dbo:Group, dbo:Organization ;
        rdfs:label ?bandName ;
        dbp:name ?bandReference .

  FILTER (lang(?bandName) = 'en')
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
200,6,train,Give me the band member of the band of Revenge (Canadian band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Revenge_(Canadian_band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName WHERE {
  ?band a dbo:Band ;
        foaf:name ""Revenge"" ;
        dbo:country dbr:Canada .
  
  ?band dbo:bandMember ?member .
  ?member foaf:name ?memberName .
}
```

This query does the following:
- Uses `PREFIX` to define common namespaces for DBpedia.
- Selects the names of band members (`?memberName`) where:
  - The band is identified by its name ""Revenge"" and is associated with Canada.
  - The relationship between the band and its members is captured using `dbo:bandMember`.
  
This query should effectively retrieve the names of individuals who are members of the Canadian band Revenge.",2,2,3,2,1,2,2,9,0,0,9,0,0.0,0
232,5,train,"Give me the artistic movement of the person born, that is a writer, on 1849-09-14.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/movement> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1849-09-14""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?writerLabel ?artisticMovementLabel
WHERE {
  ?person a dbo:Writer ;
          dbo:birthDate ?birthDate .
  FILTER (STR(?birthDate) = ""1849-09-14""^^xsd:date)
  
  OPTIONAL { 
    ?person dbo:artisticMovement ?artisticMovement .
  }
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

  BIND(str(?person) AS ?writerLabel)
}
```",2,3,3,2,1,2,2,9,0,0,1,0,0.0,0
236,11,train,"Give me the party member of Democratic-Republican Party and party member of the administration, that is an organisation, of John Adams.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . ?result <http://dbpedia.org/ontology/party> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic-Republican_Party> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyMemberOfDemocraticRepublicanParty ?administrationOrganization
WHERE {
  # John Adams' party membership in Democratic-Republican Party
  OPTIONAL {
    ?johnAdams dbo:memberOfPoliticalParty dbr:Democratic-Republican_Party .
    ?johnAdams dbo:memberOf ?partyMemberOfDemocraticRepublicanParty .
  }

  # John Adams' administration organization
  OPTIONAL {
    ?johnAdams dbo:positionHeld ?administrationPosition .
    ?administrationPosition dbo:organization ?administrationOrganization .
  }
  
  # Bind John Adams resource
  VALUES ?johnAdams { dbr:John_Adams_(1735-1826) }
}
```",3,4,4,2,2,3,2,20,0,0,18,0,0.0,0
507,18,train,"Give me the director of Entertaining Mr Sloane (film) and professional in Film director, television director and spouse of Anne V. Coates.","SELECT ?result WHERE { <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?directorName WHERE {
  # Identify the film ""Entertaining Mr Sloane""
  ?film dbp:title ""Entertaining Mr Sloane""@en .
  
  # Find the director of this film
  ?film dbo:director ?director .

  # Ensure the director is a professional in Film and Television direction
  ?director dbo:occupation ?occupation1 .
  ?director dbo:occupation ?occupation2 .
  FILTER (
    (str(?occupation1) = ""Film director""@en && str(?occupation2) = ""Television director""@en) ||
    (str(?occupation1) = ""Television director""@en && str(?occupation2) = ""Film director""@en)
  )

  # Confirm the director is married to Anne V. Coates
  ?director dbo:spouse ?spouse .
  ?spouse rdfs:label ""Anne V. Coates""@en .

  # Return the director's name
  ?director rdfs:label ?directorName .
  
  FILTER (lang(?directorName) = 'en')
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
129,9,train,Give me the associated musical artist of EarthGang and associated musical artist of Saba (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?artist WHERE {
  { 
    ?earthgang dbo:associatedMusicalArtist ?artist .
    VALUES ?earthgang { <http://dbpedia.org/resource/EarthGang> }
  } UNION {
    ?saba dbo:associatedMusicalArtist ?artist .
    VALUES ?saba { <http://dbpedia.org/resource/Saba_(rapper)> }
  }
}",2,2,3,1,2,2,3,28,1,10,0,0.09090909090909091,1.0,0.16666666666666669
573,14,train,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards.",SELECT ?result WHERE { <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Find the author of ""Exchequer Standards""
  ?author dbo:work dbr:Exchequer_Standards .
  
  # Identify the parent of this author
  ?author dbo:parent ?parent .

  # Ensure the parent is a politician
  ?parent rdf:type dbo:Politician .

  # Ensure the parent is an office holder
  ?parent dbo:officeHolderOf ?office .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
773,2,train,Give me the parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  ?charles a dbo:Person ;
           rdfs:label ""Charles the Fat""@en .
  ?charles dbo:parent ?parent .
}
```

### Explanation

- **PREFIXes:** Define common prefixes for ontology (`dbo`) and properties (`dbp`).
- **SELECT Clause:** We are interested in retrieving the parent, so we select `?parent`.
- **WHERE Clause:** 
  - Identify Charles the Fat using his label `""Charles the Fat""@en`. The `rdfs:label` property is used to match entities by their English name.
  - Use the `dbo:parent` property to find the parent of Charles.

This query will return the DBpedia resource representing the parent of Charles the Fat. Make sure that the entity ""Charles the Fat"" is correctly labeled in DBpedia for this query to work effectively.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
41,7,train,Give me the party of Enda Kenny and party of Mark Durkan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyEndaKenny ?partyMarkDurkan
WHERE {
  ?endaKenny a dbo:Person ;
             foaf:name ""Enda Kenny""@en .
  ?endaKenny dbo:party ?partyEndaKenny .

  ?markDurkan a dbo:Person ;
              foaf:name ""Mark Durkan""@en .
  ?markDurkan dbo:party ?partyMarkDurkan .
}
```

### Explanation:

- **PREFIXes:** Define common prefixes for ontology (`dbo`) and properties (`dbp`).
- **SELECT DISTINCT:** Retrieve distinct party affiliations to avoid duplicates.
- **WHERE Clause:**
  - For Enda Kenny, match a `Person` with the name ""Enda Kenny"" and retrieve their party affiliation.
  - Similarly, for Mark Durkan, match a `Person` with the name ""Mark Durkan"" and retrieve their party affiliation.

This query assumes that the political party information is stored under the `dbo:party` property. Adjustments may be needed if DBpedia uses different properties or structures.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
865,18,train,Give me the father of AK Abdul Momen and native of British Raj and father of Shahla Khatun.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherName
WHERE {
  # AK Abdul Momen's father
  dbr:AK_Abdul_Momen dbo:father ?father .
  
  # Shahla Khatun's father
  ?father dbo:child dbr:Shahla_Khatun .

  # Father is a native of British Raj
  ?father dbo:nationality dbr:British_Raj .

  # Get the name of the father
  ?father rdfs:label ?fatherName .
  
  FILTER(LANG(?fatherName) = 'en')
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
582,31,train,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in Kazuaki Nagasawa.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?residenceSugawara ?residenceNagasawa
WHERE {
  ?sugawara a dbo:Scientist ;
            foaf:name ""Hirotaka Sugawara"" .
  ?nagasawa a dbo:SoccerPlayer ;
            foaf:name ""Kazuaki Nagasawa"" .

  OPTIONAL { ?sugawara dbo:residence ?residenceSugawara . }
  OPTIONAL { ?nagasawa dbo:residence ?residenceNagasawa . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
645,15,train,Give me the force of the commander in Siege of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?force
WHERE {
  # Find resources related to the Siege of Madrid
  ?siegeEvent dbo:eventLocation dbr:Madrid .
  ?siegeEvent dbo:wikiPageRedirects ?relatedEvent .
  
  FILTER(CONTAINS(LCASE(STR(?relatedEvent)), ""siege of madrid""))

  # Identify commanders involved in this event
  ?commander dbo:role ?role .
  ?commander dbo:participatedIn ?siegeEvent .

  # Get the military force commanded by these individuals
  OPTIONAL {
    ?commander dbo:militaryCommand ?force .
  }
  
  FILTER(?role = ""commander"" || ?role = ""leader"")
}
ORDER BY ?commander",2,2,3,2,1,3,3,71,0,0,65,0,0.0,0
417,22,train,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and spouse of Princess Caroline-Mathilde of Denmark.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  # Identify Frederick Francis III and his spouse
  ?frederick a dbo:GrandDuke ;
            dbo:spouse ?caroline-mathilde .

  FILTER(?frederick = dbc:Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin &&
        ?caroline-mathilde = dbc:Caroline-Mathilde_of_Schleswig-Holstein-Gottorp)

  # Find their children
  ?child dbo:parent ?frederick ;
         dbo:parent ?caroline-mathilde .

  # For each child, find their children (grandchildren of Frederick Francis III)
  ?grandchild dbo:parent ?child .

  # Filter grandchildren to include only those who are royalty
  ?grandchild a ?royaltyClass .
  FILTER(VALUES ?royaltyClass { 
    dbo:Monarch 
    dbo:Princess 
    dbo:Prince 
    dbo:Queen 
    dbo:Duke 
    dbo:Duchess 
    dbo:King 
    dbo:Emperor 
    dbo:Empress
  })
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
933,5,train,Who is the professional in Musician?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musician WHERE {
  ?musician a dbo:MusicalArtist .
  OPTIONAL { ?musician dbo:occupation dbr:Musician . }
}
```",1,1,2,1,1,3,3,71,1686,123759,139,0.01344015305512376,0.9238356164383562,0.026494853461145596
865,27,train,Give me the father of the child of the father of Abul Maal Abdul Muhith.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandfatherFather
WHERE {
  ?abulMaal a dbo:Person ;
            dbo:father ?father1 .
  
  ?child1 dbo:father ?father1 .
  
  ?child1 dbo:father ?grandfatherFather .
}
```",3,3,4,3,1,3,3,71,1,2295,0,0.00043554006968641115,1.0,0.0008707009142359599
443,17,train,"Give me the birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and birthplace of Carl Larsson.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthPlace1949 ?birthPlaceLarsson
WHERE {
  # Find the birthplace of a person born on November 20, 1949, who is both a musical artist and an artist.
  ?person rdf:type dbo:MusicalArtist ;
          rdf:type dbo:Artist ;
          dbo:birthDate ""1949-11-20""^^xsd:date .
  ?person dbo:birthPlace ?birthPlace1949 .

  # Find the birthplace of Carl Larsson
  dbpedia:Carl_Larsson dbo:birthPlace ?birthPlaceLarsson .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
445,29,train,Give me the entity in United Kingdom and entity in England and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInUK ?entityInEngland ?deathPlace
WHERE {
  # Entity in United Kingdom
  ?entityInUK dbo:country dbr:United_Kingdom .
  
  # Entity in England
  ?entityInEngland dbo:country dbr:United_Kingdom ;
                  dbo:stateOrProvince dbr:England .

  # Awardee of Royal Astronomical Society and their death place
  ?awardee dbo:award dbr:Royal_Astronomical_Society .
  OPTIONAL { ?awardee dbo:deathPlace ?deathPlace . }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
582,36,train,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to Japan.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname ?reference WHERE {
  # Find Hajime Moriyasu's association with an organization (team)
  dbr:Hajime_Moriyasu dbo:managerOf ?team .
  
  # Retrieve the team's nickname
  ?team dbo:nickname ?nickname .

  # Ensure the team is related to Japan
  ?team dbp:country dbr:Japan .

  # Get the reference for the nickname
  ?nickname rdfs:seeAlso ?reference .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
935,12,train,Give me the death place of Abdul Raziq Bugti and headquarter of the office of Sanaullah Khan Zehri.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdul_Raziq_Bugti> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace ?officeHeadquarters
WHERE {
  # Abdul Raziq Bugti's death place
  ?bugti a dbo:Person ;
         foaf:name ""Abdul Raziq Bugti"" ;
         dbo:deathPlace ?deathPlace .

  # Sanaullah Khan Zehri's office headquarters
  ?zehri a dbo:Person ;
         foaf:name ""Sanaullah Khan Zehri"" .
  
  OPTIONAL {
    ?office dbo:headOf ?zehri ;
            dbo:headquarter ?officeHeadquarters .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
232,1,train,"Give me the claim to fame of Katherine ""Kitty"" Marshall.",SELECT ?result WHERE { <http://dbpedia.org/resource/Katherine_%22Kitty%22_Marshall> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame
WHERE {
  VALUES ?person { dbr:Katherine_Marshall }
  
  OPTIONAL { ?person dbo:knownFor ?claimToFame . }
  OPTIONAL { ?person dbo:award ?claimToFame . }
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
573,2,train,Give me the parent of John Quincy Adams.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  ?child dbo:child ?parent .
  ?child rdfs:label ""John Quincy Adams""@en .
}
```",1,1,2,1,1,3,3,71,0,3,2,0.0,0.0,0
554,13,train,Give me the leader of the administration of the party member of Independent politician.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . ?v1 <http://dbpedia.org/property/leader> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader
WHERE {
  ?leader a dbo:HeadOfGovernment .
  ?leader dbo:partyMember dbr:Independent_politician .
}
```

This query does the following:
- Selects distinct individuals (`?leader`) who are heads of government.
- Filters those leaders to include only those who are members of the Independent party.",3,3,4,3,1,3,2,20,0,0,1909,0,0.0,0
124,12,train,Give me the military force of Battle of Tamai and military force of Battle of Atbara.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?battle ?combatant1 ?combatant2 WHERE {
  {
    VALUES ?battle { 
      dbc:Battle_of_Tamai 
      dbc:Battle_of_Atbara 
    }
    
    OPTIONAL { ?battle dbp:combatant1 ?combatant1 . }
    OPTIONAL { ?battle dbp:combatant2 ?combatant2 . }
  }
}
```",2,2,3,1,2,3,3,71,0,2,1,0.0,0.0,0
93,10,train,"Who is the governor of the native, that is a politician, of Seattle?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorName
WHERE {
  ?person dbo:nativePlace dbr:Seattle .
  ?person dbo:occupation dbo:Politician .
  ?relation dbo:governs ?state .
  ?relation dbo:head ?governor .
  ?governor foaf:name ?governorName .
}
```

This query assumes:
- `dbo:nativePlace` is used to find the native place of a person.
- `dbo:occupation` identifies if the person is a politician.
- `dbo:governs` and `dbo:head` are used to find the governor related to the state governed by the relation.",2,3,3,2,1,3,2,20,0,0,18,0,0.0,0
47,7,train,"Give me the entity, that is an award, in India.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award
WHERE {
  ?award a dbo:Award .
  ?award dbp:country ""India"" .
}
```

This query selects all entities (`?award`) that are of type `dbo:Award` and have the property `dbp:country` set to ""India"".",1,2,2,1,1,3,3,71,0,0,272,0,0.0,0
933,13,train,Give me the reference to the birth name of Alan Warner (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthName
WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Alan Warner"" ;
          rdfs:label ""Alan Warner""@en .
  
  OPTIONAL { 
    ?person dbo:birthName ?birthName .
  }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
791,4,train,"Give me the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName
WHERE {
  ?emperor a dbo:Emperor ;
           dbp:name ""Takakura""@en .
  
  ?emperor dbo:spouse ?spouse .

  ?spouse a dbo:RoyalPerson ;
          dbp:name ?spouseName .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
83,2,train,"Who is the member, that is a sports manager, of Kedah FA?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personName
WHERE {
  ?person dbo:manager <http://dbpedia.org/resource/Kedah_FA> .
  ?person foaf:name ?personName .
}
```

This query does the following:
- It selects individuals (`?person`) who are managers of Kedah FA.
- It retrieves their names using `foaf:name`.
- The `dbo:manager` property is used to identify sports managers associated with Kedah FA.",1,2,2,1,1,3,2,20,0,0,17,0,0.0,0
216,2,train,Give me the team of Ognjen Vukojević.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team
WHERE {
  ?player a dbo:FootballPlayer ;
          foaf:name ""Ognjen Vukojević""@en .
  OPTIONAL { ?player dbo:team ?team . }
}
```

4. **Explanation:**
   - `PREFIX` declarations are used to define common namespaces for readability.
   - The query selects the variable `?team`.
   - In the `WHERE` clause, we match a player who is of type `dbo:FootballPlayer` and has the name ""Ognjen Vukojević"".
   - We use an `OPTIONAL` clause to account for cases where the team information might not be available.

5. **Validation:**
   - Ensure that the query captures all relevant data by checking if Ognjen Vukojević is correctly identified and linked to his teams through the appropriate property.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
83,14,train,"Give me the party of the governor of the commander, that is a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/governor> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?governor ?party WHERE {
  ?governor a dbo:Politician ;
           dbo:memberOf ?party .
  
  OPTIONAL { 
    ?commander dbo:position ?position .
    ?position rdfs:label ""Governor""@en .
    ?governor dbo:spouseOrPartner ?commander .
  }
  
  FILTER EXISTS {
    ?event dbo:location dbr:Central_African_Republic ;
           dbo:subject ?governor .
    ?event dbo:subjectCategory dbr:Central_African_Republic_Civil_War .
  }
}
```",3,4,4,3,1,3,2,20,0,0,12,0,0.0,0
507,11,train,Give me the spouse of the person born as Anne Voase Coates.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","```sparql
SELECT ?spouseName WHERE {
  ?person dbo:birthName ""Anne Voase Coates""@en .
  ?person foaf:name ?name .
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ?spouseName .
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
865,22,train,Give me the native of British Raj and father of the child of Abu Ahmad Abdul Hafiz.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeOfBritishRaj
WHERE {
  # Abu Ahmad Abdul Hafiz has a child
  ?child dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz .
  
  # The father of this child is the person we are looking for
  ?father dbo:child ?child .

  # This person is native to British Raj
  ?nativeOfBritishRaj dbo:nativePlace dbp:British_Raj .
  
  # Ensure the father is the same as the native of British Raj
  FILTER (?father = ?nativeOfBritishRaj)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
976,39,train,Give me the office of the person born as the birth name of Naci Bostancı and office of Meral Akşener.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?naciOffice ?meralOffice
WHERE {
  # Find Naci Bostancı's birth name and his office
  dbr:Naci_Bostancı dbo:birthName ?birthName .
  
  OPTIONAL { 
    ?person dbo:birthName ?birthName .
    ?person dbo:office ?naciOffice .
  }
  
  # Find Meral Akşener's office
  dbr:Meral_Akşener dbo:office ?meralOffice .
}
```

This query does the following:
- Retrieves Naci Bostancı's birth name.
- Uses an `OPTIONAL` clause to find any person with that birth name and their associated office, assuming there might be more than one person with the same birth name.
- Directly retrieves Meral Akşener's office.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
976,37,train,"Give me the office of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?naciOffice ?mayorOffice ?party
WHERE {
  # Naci Bostancı's office
  dbr:Naci_Bostancı dbo:office ?naciOffice .

  # Mayor's office (politician and office holder who is Turkish)
  ?mayor a dbo:Politician ;
         dbo:country dbr:Turkey ;
         dbo:office ?mayorOffice .
  
  # Political party that is an organization, Turkish, and related to Millet İttifakı
  ?party a dbo:PoliticalParty, dbo:Organization ;
         dbo:country dbr:Turkey ;
         dbp:relatedTo dbr:Millet_İttifakı .

}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
645,37,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and leader of Ministry of the Army (Spain).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce
WHERE {
  ?event a dbo:MilitaryConflict ;
         a dbo:SocietalEvent .
  
  ?native a dbo:President ;
          a dbo:Politician ;
          dbo:associatedWith dbr:Restoration_(Spain) ;
          dbo:leaderOf dbr:Ministry_of_the_Army_(Spain) .

  ?militaryForce dbo:participatedIn ?event ;
                 dbo:nativeOf ?native .
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
216,17,train,"Give me the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?birthDate
WHERE {
  ?person a dbo:SoccerPlayer .
  ?person a dbo:SoccerManager .
  ?person a dbo:SportsManager .
  
  ?person dbo:birthDate ?birthDate .

  dbr:Pavel_Vezhinov dbo:dateOfDeath ?deathDate .

  FILTER (?birthDate = ?deathDate)
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
353,6,train,"Give me the entity in the country of Moskovsky City District, Nizhny Novgorod.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Moskovsky_City_District,_Nizhny_Novgorod> <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?entity a dbo:Place .
  ?entity dbo:location dbr:Moskovsky_District_(Nizhny_Novgorod) .
}
```",2,2,3,2,1,2,2,9,0,0,29927,0,0.0,0
917,3,train,Who is the mayor of Hawaiian Kingdom?,SELECT ?result WHERE { <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayorName
WHERE {
  OPTIONAL {
    dbr:Hawaiian_Kingdom dbo:headOfState ?mayor .
    ?mayor rdfs:label ?mayorName .
    FILTER (LANG(?mayorName) = ""en"")
  }
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
582,18,train,Give me the player in Kazuaki Nagasawa and figure known as --10-19 and reference to Japan.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?figure ?referenceToJapan
WHERE {
  # Kazuaki Nagasawa as a player
  dbr:Kazuaki_Nagasawa dbo:nationality dbr:Japan .
  
  # Figure known as --10-19 (assuming it's an entity in DBpedia)
  OPTIONAL { 
    dbr:--10-19 ?p ?o .
    FILTER(?p = dbo:reference || ?p = dbo:relatedTo) .
    BIND(""Figure --10-19"" AS ?figure)
  }
  
  # Reference to Japan
  OPTIONAL {
    ?player dbo:nationality dbr:Japan .
    BIND(?player AS ?referenceToJapan)
  }

  # Ensure Kazuaki Nagasawa is included in the results
  BIND(dbr:Kazuaki_Nagasawa AS ?player)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
892,33,train,Give me the landmark at elevation of the award of the member of E-girls and entity in Italy.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/elevation> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark WHERE {
  # Find a member of E-girls
  ?member dbo:memberOf dbr:E-girls .
  
  # Find an award associated with this member
  ?award dbo:recipient ?member ;
         dbo:elevation ?elevation .

  # Find a landmark at the same elevation
  ?landmark dbo:elevation ?elevation .

  # Ensure the landmark is related to an entity in Italy
  ?italyEntity dbo:location dbr:Italy .
  ?landmark dbo:locatedIn ?italyEntity .
}
```",4,4,5,3,2,3,3,71,0,0,11,0,0.0,0
826,15,train,Who is the child of the father of Anna Magdalena Appel?,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child
WHERE {
  ?anna a dbo:Person ;
        foaf:name ""Anna Magdalena Appel""@en .
  
  ?anna dbo:father ?father .

  ?child dbo:parent ?father .
}
```

5. **Validate Completeness and Precision:** The query correctly identifies the father of Anna Magdalena Appel and then finds all individuals who are children of that father, which aligns with the question's requirements.",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
987,13,train,Give me the birth place of the actor of All for Free.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorName ?birthPlaceLabel
WHERE {
  # Find the movie ""All for Free""
  dbr:All_for_Free dbo:starring ?actor .

  # Get actor details
  ?actor a dbo:Actor ;
         foaf:name ?actorName ;
         dbo:birthPlace ?birthPlace .

  # Get birthplace label
  ?birthPlace rdfs:label ?birthPlaceLabel .
  
  FILTER (lang(?birthPlaceLabel) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
5,7,train,"Give me the birthplace of the person born, that is a politician, as .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace
WHERE {
  ?person a dbo:Politician .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,2,20,222,205306,0,0.001080144797789109,1.0,0.002157958687727825
274,17,train,Give me the associated musical artist of Cecil Taylor and professional in the designer of Tetris Classic.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?cecilArtist ?tetrisDesigner
WHERE {
  # Find Cecil Taylor's associated musical artist
  ?cecil a dbo:MusicalArtist ;
         foaf:name ""Cecil Taylor"" .
  OPTIONAL { 
    ?cecil dbo:associatedMusicalArtist ?cecilArtist .
  }

  # Find the designer of Tetris Classic
  ?tetris dbp:title ""Tetris Classic""@en ;
          dbo:creator ?tetrisDesigner .
}
```

### Explanation:
- **PREFIX**: Define prefixes for ontology and property namespaces.
- **SELECT DISTINCT**: Ensure unique results for both Cecil Taylor's associated artist and the designer of Tetris Classic.
- **WHERE Clause**:
  - Identify Cecil Taylor as a `MusicalArtist` and find any associated artists using `dbo:associatedMusicalArtist`.
  - Find the creator of ""Tetris Classic"" using `dbo:creator`.

This query will return distinct results for both components, aligning with your question's requirements.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
888,7,train,"Give me the commander in the force, that is a societal event and an event, of Serhiy Kotenko.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  ?force a dbo:SocietalEvent ;
        a dbo:Event .
  
  ?commander dbo:commanderOf ?force .
  
  ?force dbo:member ?serhiyKotenko .
  FILTER (?serhiyKotenko = dbr:Serhiy_Kotenko)
}
```",2,4,3,2,1,3,2,20,0,0,13,0,0.0,0
865,8,train,Who is the child of Abu Ahmad Abdul Hafiz?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child ?childLabel
WHERE {
  ?parent rdfs:label ""Abu Ahmad Abdul Hafiz""@en .
  ?parent dbo:child ?child .
  OPTIONAL { ?child rdfs:label ?childLabel . FILTER (lang(?childLabel) = 'en') }
}
```

This query does the following:
- Uses `dbo:child` to find children of a given parent.
- Filters for Abu Ahmad Abdul Hafiz using his label in English.
- Optionally retrieves labels for the child entities, ensuring they are in English.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
83,0,train,Give me the player in Greg Boehme.,SELECT ?result WHERE { <http://dbpedia.org/resource/Greg_Boehme> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player
WHERE {
  ?person foaf:name ""Greg Boehme"" .
  ?person dbo:player ?player .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
373,6,train,Give me the professional in the profession of Beto Guedes.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Beto_Guedes> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Beto Guedes""@en .
  ?person dbo:occupation ?profession .
}
```",2,2,3,2,1,2,2,9,0,0,1543,0,0.0,0
124,34,train,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of Battle of Atbara.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander
WHERE {
  # Find a war that is both a societal event and a military conflict
  ?war a dbo:SocietalEvent ;
      a dbo:MilitaryConflict .

  # Identify the reference as an Australian organisation and military unit related to 'A' Battery, Royal Australian Artillery
  ?reference dbo:country dbr:Australia ;
             dbo:militaryUnit dbr:A_Battery,_Royal_Australian_Artillery .

  # Ensure the reference is connected to the Battle of Atbara
  ?reference dbo:participatedInBattle dbr:Battle_of_Atbara .

  # Find the commander associated with this war and reference
  ?commander dbo:commanded ?war ;
             dbo:commanded ?reference .
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
129,12,train,Give me the associated musical artist of Saba (rapper) and associated musical artist of EarthGang and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?sabaArtist ?earthGangArtist WHERE {
  # Find Saba's associated musical artist
  { 
    ?saba dbo:musicalArtist ?sabaArtist .
    FILTER (str(?saba) = ""Saba_(rapper)"")
  }
  
  UNION
  
  # Find EarthGang's associated musical artist
  { 
    ?earthGang dbo:musicalArtist ?earthGangArtist .
    FILTER (str(?earthGang) = ""EarthGang"")
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
341,0,train,Give me the band member of Beyoncé.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Beyoncé> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberName WHERE {
  # Identify bands or groups Beyoncé is a member of
  ?band dbr:Beyoncé dbo:bandMember .
  
  # Find other members of those bands
  ?band dbo:bandMember ?member .
  
  # Ensure the member is not Beyoncé herself
  FILTER (?member != dbr:Beyoncé)
  
  # Get the name of the band member
  ?member rdfs:label ?bandMemberName .
  
  # Filter to ensure labels are in English
  FILTER (LANG(?bandMemberName) = ""en"")
}
```",1,1,2,1,1,2,2,9,0,0,50,0,0.0,0
459,2,train,Give me the person born as John Kevin Stitt.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . }","```sparql
SELECT ?person ?fullName ?birthDate WHERE {
  ?person dbp:birthName ""John Kevin Stitt"" .
  OPTIONAL { ?person foaf:name ?fullName . }
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
5,6,train,Give me the entity in Canada and birthplace of Gerald Regan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> . <http://dbpedia.org/resource/Gerald_Regan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInCanada ?birthPlaceLabel
WHERE {
  # Match Gerald Regan's resource
  dbr:Gerald_Regan a dbo:Person .

  # Find his entity in Canada (e.g., political role)
  OPTIONAL { 
    dbr:Gerald_Regan dbo:officeHolder ?office .
    ?office dbo:country dbr:Canada .
    ?office rdfs:label ?entityInCanada .
    FILTER(LANG(?entityInCanada) = ""en"")
  }

  # Find his birthplace
  OPTIONAL {
    dbr:Gerald_Regan dbo:birthPlace ?birthPlace .
    ?birthPlace rdfs:label ?birthPlaceLabel .
    FILTER(LANG(?birthPlaceLabel) = ""en"")
  }
}
```",2,2,3,1,2,3,2,20,0,1,1,0.0,0.0,0
459,16,train,Give me the person born as the birth name of Kevin Stitt and governor of Oklahoma.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName WHERE {
  ?person foaf:name ""Kevin Stitt""@en .
  ?person dbo:birthName ?birthName .
  
  OPTIONAL {
    ?governorOf dbo:governor ?person ;
               foaf:name ""Oklahoma""@en .
  }
}
```",3,3,4,2,2,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
41,8,train,"Give me the party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?party
WHERE {
  # Identify the election
  dbr:2005_Castlereagh_Borough_Council_election dbo:electedOffice dbr:Castlereagh_Borough_Council .
  
  # Find the leader of this council
  ?leader dbo:positionHeld dbr:Castlereagh_Borough_Council ;
          dbo:officeHolderOf dbr:2005_Castlereagh_Borough_Council_election .

  # Ensure the leader is a politician and an office holder
  ?leader rdf:type dbo:Politician .
  ?leader rdf:type dbo:OfficeHolder .

  # Get the party of the leader
  ?leader dbo:party ?party .
}
```",2,4,3,2,1,2,3,28,0,0,6,0,0.0,0
645,39,train,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and military force of Spanish Civil War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?leader WHERE {
  ?office a dbo:GovernmentAgency ;
          a dbo:Organization .
  
  ?office dbo:nativeOf dbr:Restoration_(Spain) .
  ?office dbo:militaryForce dbr:Spanish_Civil_War .

  ?office dbo:head ?leader .
}
```

This query does the following:
- Identifies an office that is both a government agency and an organization.
- Ensures this office has a native from Restoration (Spain).
- Confirms it was involved with a military force during the Spanish Civil War.
- Retrieves the leader of such an office.",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
36,10,train,Give me the person born in the birth year of Deanne Bray.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v1 . },"```sparql
SELECT ?person ?personName WHERE {
  # Find Deanne Bray's birth year
  ?deanneBray foaf:name ""Deanne Bray""@en .
  ?deanneBray dbo:birthYear ?birthYear .

  # Find other persons born in the same year
  ?person a dbo:Person ;
          dbo:birthYear ?birthYear ;
          foaf:name ?personName .
  
  FILTER(?person != ?deanneBray) # Exclude Deanne Bray from results
}
```",2,2,3,2,1,2,3,28,2459,2482,152,0.49767253592390204,0.9417847567981616,0.6512182203389831
926,34,train,Give me the child of Ahmed III and father of the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  # Ahmed III and his children
  ?ahmed3 dbo:spouse ?spouse .
  ?ahmed3 dbo:child ?child .

  # Neşerek Kadın's spouse
  ?neserekKadin dbp:spouse ?spouseOfNeserek .

  # The father of the spouse of Neşerek Kadın
  ?fatherOfSpouse dbp:parent ?spouseOfNeserek .
  
  # The grandfather (father of the father) of the spouse of Neşerek Kadın
  ?grandfather dbp:parent ?fatherOfSpouse .

  # Check if the child is also the father of this grandfather
  ?child dbo:parent ?grandfather .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
573,9,train,"Give me the person decedent at Massachusetts and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name
WHERE {
  ?person a dbo:Person .
  ?person foaf:name ?name .

  # Person died in Massachusetts
  ?deathPlace1 dbo:country dbr:United_States ;
              rdfs:label ""Massachusetts""@en .
  ?person dbo:deathPlace ?deathPlace1 .

  # Person also died in Quincy, Massachusetts
  ?deathPlace2 dbo:city dbr:Quincy,_Massachusetts ;
               dbo:stateOrProvince dbr:Massachusetts ;
               dbo:country dbr:United_States ;
               rdfs:label ""Quincy""@en .
  ?person dbo:deathPlace ?deathPlace2 .

}
```

4. **Optimize and Validate**:
   - Ensure the query is efficient by using `DISTINCT` to avoid duplicate results.
   - Verify that both conditions (dying in Massachusetts and Quincy) are correctly represented.",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
442,6,train,Give me the resting place of the actor of This Side of Heaven.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/This_Side_of_Heaven> <http://dbpedia.org/ontology/starring> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorName ?restingPlace
WHERE {
  # Find the movie ""This Side of Heaven""
  dbr:This_Side_of_Heaven dbo:starring ?actor .

  # Get actor's name
  ?actor rdfs:label ?actorName .
  FILTER (lang(?actorName) = 'en')

  OPTIONAL {
    # Get resting place if available
    ?actor dbo:placeOfBurial ?restingPlace ;
           dbo:cremationSite ?cremationSite .

    # Use either burial or cremation site, whichever is available
    BIND(COALESCE(?restingPlace, ?cremationSite) AS ?restingPlace)
  }
}
ORDER BY ?actorName",2,2,3,2,1,2,2,9,0,5,3,0.0,0.0,0
456,14,train,"Give me the band of the band, that is a musical artist, of Dean Brody.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName
WHERE {
  ?person rdfs:label ""Dean Brody""@en .
  ?person dbo:memberOfBand ?band .
  ?band rdfs:label ?bandName .
  FILTER(LANG(?bandName) = 'en') .

  OPTIONAL {
    ?band a dbo:MusicalArtist .
  }
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
417,8,train,"Who is the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childName WHERE {
  ?parent rdfs:label ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin""@en .
  ?parent dbo:child ?child .
  ?child rdf:type dbo:RoyalFamilyMember .
  ?child rdfs:label ?childName .
  FILTER(LANG(?childName) = 'en')
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
216,28,train,Give me the player in Mario Ivanković and team of Ognjen Vukojević and player in the coach of Croatia national under-21 football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v1 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?playerInMarioTeam ?playerInOgnjenTeam ?coachPlayer
WHERE {
  # Find the team of Mario Ivanković and players in that team
  ?mario dbo:nationality dbr:Croatia ;
         dbo:position dbr/Football_midfielder ;
         dbp:team ?marioTeam .
  
  ?playerInMarioTeam dbo:playsFor ?marioTeam .

  # Find the team of Ognjen Vukojević and players in that team
  ?ognjen dbo:nationality dbr:Croatia ;
          dbo:position dbr/Football_defender ;
          dbp:team ?ognjenTeam .
  
  ?playerInOgnjenTeam dbo:playsFor ?ognjenTeam .

  # Find the coach of Croatia national under-21 football team and players coached by them
  ?croatiaUnder21Coach dbo:coach dbr:Croatia_national_under-21_football_team ;
                       dbp:team ?coachedTeam .
  
  ?coachPlayer dbo:playsFor ?coachedTeam .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
353,2,train,"Give me the awardee of Medal of the Order ""For Merit to the Fatherland"".",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_the_Order_%22For_Merit_to_the_Fatherland%22> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?awardee WHERE {
  ?awardee dbo:award ?medal .
  ?medal rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""medal of the order for merit to the fatherland""))
}
```",1,1,2,1,1,2,2,9,0,0,12,0,0.0,0
453,2,train,"Give me the birth place, that is a country, of William Denning.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Denning> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""William Denning""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a schema:Country .
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
382,2,train,Give me the player in Lukas Kübler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?playerName ?team WHERE {
  ?person foaf:name ""Lukas Kübler""@en .
  ?person dbo:player ?player .
  ?player foaf:name ?playerName .
  OPTIONAL { ?player dbo:memberOfTeam ?team . }
}
```

### Explanation:

- **PREFIX:** Define prefixes for commonly used namespaces.
- **SELECT:** Retrieve the player's name and team associated with Lukas Kübler.
- **WHERE Clause:**
  - Match a person named ""Lukas Kübler.""
  - Identify if this person is linked to a role as a player (`dbo:player`).
  - Extract the player's name using `foaf:name`.
  - Optionally, find any team association with `dbo:memberOfTeam`.

This query should provide information about Lukas Kübler in terms of his role as a player and any associated teams.",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
865,35,train,"Give me the father of the child of Abu Ahmad Abdul Hafiz and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?fatherName WHERE {
  # Find the child of Abu Ahmad Abdul Hafiz
  ?child dbo:parent ?abuAhmad .
  ?abuAhmad foaf:name ""Abu Ahmad Abdul Hafiz"" .

  # Find the father of this child
  ?child dbo:parent ?father .
  
  # Get the name of the father
  ?father foaf:name ?fatherName .

  # Find Ram Jaipal Singh Yadav's residence country
  ?ramJaipal foaf:based_near ?residence .
  ?residence a dbo:Country .
  ?ramJaipal foaf:name ""Ram Jaipal Singh Yadav"" .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
456,30,train,"Give me the spouse of Danielle Spencer (Australian actress) and band of the band, that is a musical artist, of Dean Brody and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse ?band
WHERE {
  # Find Danielle Spencer's spouse
  ?danielle a dbo:Person ;
            foaf:name ""Danielle Spencer"" ;
            dbp:spouse ?spouse .
  
  # Ensure the spouse is an Australian actress
  ?spouse dbo:nationality <http://dbpedia.org/resource/Australia> ;
          dbo:occupation <http://dbpedia.org/resource/Actress> .

  # Find Dean Brody's band that is a musical artist
  ?dean a dbo:Person ;
        foaf:name ""Dean Brody"" .
  
  ?band dbo:member ?dean ;
        a dbo:MusicalArtist .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
715,37,train,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?name WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolderOf dbr:Mayor_of_Spain ;
          dbo:presidentOf dbr:Spain ;
          dbo:ministerOf dbr:Ministry_of_the_Air_(Spain) .
  
  ?person dbo:electedDuring dbr:1933_Spanish_general_election .

  ?person foaf:name ?name .

  FILTER (YEAR(?electedDate) = 1933)
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
267,3,train,"Give me the player, that is a soccer club, in Rasoul Khatibi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  ?player a dbo:SoccerPlayer .
  ?player foaf:name ""Rasoul Khatibi""@en .
  ?player dbo:playsFor ?club .
}
```

This query does the following:
- Uses `dbo:SoccerPlayer` to ensure we are dealing with soccer players.
- Matches the player's name using `foaf:name`.
- Retrieves the club associated with the player through the `dbo:playsFor` property.",1,2,2,1,1,3,2,20,0,0,12,0,0.0,0
236,4,train,"Give me the reference, that is an office holder and a politician, to James Madison.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeHolderReference ?politicianReference
WHERE {
  # Identify James Madison as an office holder
  ?officeHolderReference a dbo:OfficeHolder ;
                        dbo:heldPublicOffice dbr:James_Madison .

  # Identify James Madison as a politician
  ?politicianReference a dbo:Politician ;
                      dbo:wikiPageRedirects dbr:James_Madison .
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
892,2,train,Give me the entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?entityLabel
WHERE {
  ?entity dbo:locatedIn dbr:Province_of_Reggio_Emilia .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

This query selects entities (`?entity`) and their labels (`?entityLabel`) that are located in the ""Province of Reggio Emilia."" The `SERVICE wikibase:label` is used to fetch labels for the entities in multiple languages, prioritizing the user's language.",1,1,2,1,1,3,3,71,0,0,40,0,0.0,0
976,30,train,Give me the office of Mustafa Şentop and office of Meral Akşener and office of the person born as Mehmet Naci Bostancı.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v0 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?officeName
WHERE {
  VALUES ?person { 
    dbr:Mustafa_Şentop 
    dbr:Meral_Akşener 
    dbr:Mehmet_Naci_Bostancı
  }
  
  ?person dbo:office ?office .
  ?office rdfs:label ?officeName .
  FILTER(LANG(?officeName) = 'en')
}
ORDER BY ?person ?officeName
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
433,36,train,Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of Paul Chambers.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer ?associatedArtist WHERE {
  # Find the writer of the album ""Slowhand at 70 – Live at the Royal Albert Hall""
  dbr:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall dbo:composer ?writer .

  # Find musicians associated with Paul Chambers
  ?associatedArtist dbo:associatedBandMember dbr:Paul_Chambers .
  
  # Ensure the writer is also an associated artist
  FILTER (?writer = ?associatedArtist)
}
```",4,4,5,3,2,3,3,71,0,0,16,0,0.0,0
955,13,train,"Give me the band of the writer of the work, that is a work and an album and a musical work, of Matt Freeman.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  ?work dbo:writer dbr:Matt_Freeman .
  ?work a dbo:Album ;
        a dbo:MusicalWork ;
        a dbo:CreativeWork .

  OPTIONAL { ?work dbo:performer ?band . }
}
```

This query does the following:
- Selects distinct bands (`?band`) associated with works written by Matt Freeman.
- Ensures that these works are of type `Album`, `MusicalWork`, and `CreativeWork`.
- Uses an optional clause to find the band performing or related to the work.",3,6,4,3,1,3,2,20,0,0,21,0,0.0,0
281,0,train,Give me the commander in New Guinea campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?campaign dbo:wikiPageRedirects ?redirect .
  OPTIONAL { ?campaign rdfs:label ""New Guinea campaign""@en . }
  UNION
  { ?campaign rdfs:label ?label .
    FILTER (CONTAINS(LCASE(?label), ""new guinea campaign""))
  }
  
  ?campaign dbo:commander ?commander .
}
```",1,1,2,1,1,2,3,28,0,0,27,0,0.0,0
83,1,train,Give me the player in Albert Edward (soccer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Albert_Edward_(soccer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?team dbo:member dbr:Albert_Edward .
  ?player dbo:playsFor ?team ;
          a dbo:SoccerPlayer .
}
```",1,1,2,1,1,2,2,9,0,0,8,0,0.0,0
926,22,train,"Give me the child of the father, that is a royalty, of Mustafa III and father of Mahmud II.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child
WHERE {
  ?mustafaIII dbo:father ?father .
  ?father rdf:type dbo:Royalty .
  
  ?father dbo:child ?child .
  
  ?child dbo:fatherOf ?mahmudII .
  ?mahmudII rdfs:label ""Mahmud II""@en .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
122,3,train,"Who is the reference, that is a musical artist and an artist, to Gift of Gab?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""Gift of Gab""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?reference
WHERE {
  # Link Gift of Gab to references
  dbr:Gift_of_Gab dbo:relatedTo ?reference .

  # Ensure the reference is a musical artist
  ?reference rdf:type dbo:MusicalArtist .

  # Ensure the reference is an artist (general)
  ?reference rdf:type dbo:Artist .
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
443,15,train,Give me the landmark at elevation of the award of William Shepherd and birthplace of Carl Larsson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark WHERE {
  # Find William Shepherd's award and its associated landmark
  {
    ?shepherdAward dbo:recipient dbr:William_Shepherd .
    ?shepherdAward dbo:location ?awardLocation .
    ?awardLocation dbo:elevation ?elevation .
    ?awardLocation rdfs:label ?landmark .
    FILTER (lang(?landmark) = 'en')
  }
  
  UNION
  
  # Find Carl Larsson's birthplace
  {
    dbr:Carl_Larsson dbo:birthPlace ?birthPlace .
    ?birthPlace rdfs:label ?landmark .
    FILTER (lang(?landmark) = 'en')
  }
}
```",3,3,4,2,2,2,3,28,0,2,1,0.0,0.0,0
508,6,train,Give me the birthplace of Ma Hongkui and birthplace of Ma Bufang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ma_Hongkui> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ma_Bufang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?birthPlace
WHERE {
  {
    ?person rdfs:label ""Ma Hongkui""@en .
    ?person dbo:birthPlace ?birthPlace .
  }
  UNION
  {
    ?person rdfs:label ""Ma Bufang""@en .
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",2,2,3,1,2,3,2,20,3,2,0,0.6,1.0,0.7499999999999999
382,3,train,"Give me the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?manager WHERE {
  # Manager of Bonner SC
  ?club dbp:manager ?manager .
  
  # Bonner SC entity
  VALUES ?club { <http://dbpedia.org/resource/Bonner_Sportverein_02> }
  
  # The manager is an athlete
  ?manager a dbo:Athlete .

  # The manager is also a sports manager
  ?manager a dbo:SportsManager .
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
170,15,train,Give me the entity in the work of International Energy Agency and domain of Mayor.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?ieaEntity ?mayorDomain
WHERE {
  # Find entities related to the work of International Energy Agency
  dbr:International_Energy_Agency dbo:work ?ieaEntity .
  
  # Find domains or responsibilities associated with a Mayor
  ?mayor a dbo:Mayor ;
         dbo:domainOfActivity ?mayorDomain .
}
```

### Explanation

- **PREFIX**: Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT**: Retrieve distinct entities related to the IEA's work and domains of Mayors.
- **WHERE**:
  - `dbr:International_Energy_Agency dbo:work ?ieaEntity`: Find entities associated with the work of the International Energy Agency.
  - `?mayor a dbo:Mayor ; dbo:domainOfActivity ?mayorDomain`: Identify domains or activities related to Mayors.

This query assumes that ""work"" and ""domainOfActivity"" are appropriate properties for capturing the relationships you're interested in. Adjustments may be needed based on actual DBpedia schema details.",3,3,4,2,2,2,3,28,0,0,99,0,0.0,0
465,10,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and successor of Renée of France.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?successorName
WHERE {
  ?ercole dbo:successor ?successor .
  ?renée dbo:successor ?successor .

  VALUES ?ercole { <http://dbpedia.org/resource/Ercole_II_d%27Este> }
  VALUES ?renée { <http://dbpedia.org/resource/Ren%C3%A9e_of_France,_Duchess_of_Ferrara> }

  ?successor rdfs:label ?successorName .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
5,3,train,"Give me the person born, that is a politician, as .","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person ?birthDate
WHERE {
  ?person rdf:type dbo:Politician .
  ?person dbo:birthDate ?birthDate .
}
```",1,2,2,1,1,3,2,20,153,206252,16,0.000741261112860638,0.9053254437869822,0.0014813093612942576
935,13,train,"Give me the death place of the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT DISTINCT ?deathPlace
WHERE {
  # Find awards related to Syed Sohail Hussain Naqvi
  ?award dbo:recipient ?person .
  ?person foaf:name ""Syed Sohail Hussain Naqvi""@en .

  # Find awardees of those awards
  ?relatedAward dbo:recipient ?awardee .
  FILTER(?award != ?relatedAward) .

  # Get the death place of these awardees
  OPTIONAL { ?awardee dbo:deathPlace ?deathPlace . }
}
```",3,4,4,3,1,3,2,20,0,0,18,0,0.0,0
129,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?name WHERE {
  ?professional a dbo:Doctor .
  ?professional foaf:name ?name .
}
```

This query retrieves professionals who are classified as doctors and their names. You can adjust the `a dbo:Doctor` part to match other professions by changing it to the appropriate DBpedia ontology class (e.g., `dbo:Engineer`, `dbo:Scientist`).

4. **Optimize Query Logic:** The query is straightforward, focusing on retrieving professionals of a specific type and their names.

5. **Validate Completeness and Precision:** Ensure that the chosen class (`dbo:Doctor`) accurately reflects the professional category you are interested in.

If you have more details about the context or specific domain, please provide them for a more tailored query.",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
645,22,train,"Give me the commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander
WHERE {
  # Find the office associated with Camilo Menéndez Tolosa
  ?office dbo:leader dbr:Camilo_Menéndez_Tolosa .
  
  # Ensure the office is both a government agency and an organization
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .

  # Find the commander in the Battle of Jarama
  ?battle dbo:commander ?commander .
  FILTER (str(?battle) = ""Battle_of_Jarama"")
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
573,35,train,"Give me the person decedent at the administration, that is a region, of Charlie Baker and parent of the author, that is a politician and an office holder, of Exchequer Standards.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedent
WHERE {
  # Charlie Baker and his administration region
  dbr:Charlie_Baker a dbo:Politician ;
                    dbo:officeHolderOf dbr:Massachusetts .

  # Find the author of Exchequer Standards who is also a politician and office holder
  ?author a dbo:Author, dbo:Politician ;
          dbo:officeHolderOf ?administrationRegion ;
          rdfs:label ""Exchequer Standards""@en .

  # The person we are looking for is a decedent at the administration region of Charlie Baker
  ?personDecedent dbo:decedentAt ?administrationRegion ;
                  dbo:parentOf ?author .
}
```",4,7,5,2,2,3,3,71,0,0,2,0,0.0,0
826,27,train,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor
WHERE {
  # Step 1: Identify Louis IV, Grand Duke of Hesse
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:child ?child .

  # Step 2: Find the parent of this child (Louis IV himself)
  ?child dbo:parent dbr:Louis_IV,_Grand_Duke_of_Hesse .

  # Step 3: Find the predecessor of Louis IV
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:predecessor ?predecessor .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
445,31,train,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and death place of Patrick Moore.",SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country
WHERE {
  # Find athletes from Great Britain and their residence country
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:residenceCountry ?countryResidence .
  
  FILTER (isLiteral(?countryResidence) = false)

  # Ensure the residence is a country
  ?countryResidence rdf:type dbo:Country .

  # Find Patrick Moore's death place and ensure it matches the above country
  dbr:Patrick_Moore dbo:deathPlace ?deathPlace .
  
  FILTER (isLiteral(?deathPlace) = false)
  
  # Ensure the death place is a country
  ?deathPlace rdf:type dbo:Country .

  # Match the residence country with the death place country
  BIND(?countryResidence AS ?country)
  FILTER (?countryResidence = ?deathPlace)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
41,12,train,Give me the party of Enda Kenny and party of Declan Costello and party of Mark Durkan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?endakennyParty ?declancostelloParty ?markdurkanParty
WHERE {
  OPTIONAL { 
    dbr:Enda_Kenny dbo:partyAffiliation ?endakennyParty .
  }
  OPTIONAL { 
    dbr:Declan_Costello dbo:partyAffiliation ?declancostelloParty .
  }
  OPTIONAL { 
    dbr:Mark_Durkan dbo:partyAffiliation ?markdurkanParty .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
554,8,train,Give me the leader of the birth place of The Legendary Tigerman.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?leader WHERE {
  # Find the birthplace of ""The Legendary Tigerman""
  dbpedia:en:The_Legendary_Tigerman dbo:birthPlace ?birthPlace .

  # Get the leader (mayor) of that birthplace
  OPTIONAL { 
    ?birthPlace dbp:mayor ?leader .
  }
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
527,10,train,"Give me the work, that is a work and a book, of the host of Hyperland.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v0 . ?result <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?workLabel
WHERE {
  ?host foaf:name ""Hyperland""@en .
  ?host dbo:hostOf ?hyperlandResource .
  ?hyperlandResource dbo:work ?work .
  ?work a dbo:Book .
  ?work rdfs:label ?workLabel .
}
```

This query assumes:
- `foaf:name` is used to identify the host by name.
- `dbo:hostOf` links the host to Hyperland.
- `dbo:work` and `a dbo:Book` are used to ensure the work is a book.",2,4,3,2,1,3,2,20,0,0,9,0,0.0,0
874,5,train,Give me the band member of The Jones Gang.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ""The Jones Gang""@en .
  ?band dbo:bandMember ?member .
  ?member foaf:name ?memberName .
}
```",1,1,2,1,1,3,2,20,0,4,4,0.0,0.0,0
987,35,train,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  ?band a dbo:Band ;
        dbo:artist Šako_Polumenta ;
        dbo:musicalArtist true .
  
  ?band dbo:birthPlace ?birthPlace .

  ?country dbo:timeZone dbr:Central_European_Time ;
           dbo:location ?birthPlace .

}
```",4,7,5,2,2,3,3,71,0,0,2,0,0.0,0
443,5,train,Who is the work of yes?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""yes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?workLabel WHERE {
  ?work dbo:artist dbr:Yes .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,2,3,28,0,0,1563,0,0.0,0
554,0,train,Give me the leader of Portuguese São Tomé and Príncipe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Portuguese_São_Tomé_and_Príncipe> <http://dbpedia.org/property/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  dbr:São_Tomé_and_Príncipe dbo:headOfState ?leader .
}
```

This query selects the current leader of São Tomé and Príncipe by matching the `dbo:headOfState` property.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
773,33,train,"Give me the spouse of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?parent
WHERE {
  # Louis the German and his spouse
  dbr:Louis_the_German a dbo:Monarch ;
                       dbo:spouse ?spouse .

  # Louis the Pious, his child, and the successor who is royalty
  dbr:Louis_the_Pious a dbo:Monarch ;
                      dbo:child ?child .
  
  OPTIONAL {
    ?child dbo:succeededBy ?successor .
    FILTER (?successor != dbr:Louis_the_Pious) # Ensure it's not Louis the Pious himself
  }
  
  OPTIONAL {
    ?successor a dbo:Royalty ; # Ensure successor is royalty
               dbo:parent ?parent .
  }

  # Filter to ensure we have both spouse and parent
  FILTER (?spouse != """" && ?parent != """")
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
192,12,train,Give me the child of the child of Stephen V of Hungary and spouse of Clemence of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Clemence_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild ?spouse
WHERE {
  # Stephen V of Hungary and his child
  ?stephenV a dbo:Monarch ;
            foaf:name ""Stephen V of Hungary""@en .
  
  ?child dbo:parent ?stephenV ;
         a dbo:Person .

  # Child's child (grandchild)
  ?grandchild dbo:parent ?child ;
              a dbo:Person .

  # Spouse relationship with Clemence of Austria
  ?spouse dbp:spouse ?grandchild .
  
  ?clemenceAustria a dbo:Person ;
                   foaf:name ""Clemence of Austria""@en .
  
  FILTER (?spouse != ?clemenceAustria)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
507,30,train,Give me the spouse of Anne V. Coates and director of Entertaining Mr Sloane (film) and professional in the profession of Guy Ferland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person
WHERE {
  # Find the spouse of Anne V. Coates
  ?spouse dbo:spouse dbr:Anne_V._Coates .
  
  # Ensure this person is also a director of ""Entertaining Mr Sloane""
  ?spouse dbo:director dbr:Entertaining_Mr_Sloane .

  # Find the profession of Guy Ferland
  ?ferland dbo:profession ?profession .
  FILTER (?ferland = dbr:Guy_Ferland)

  # Ensure this person has the same profession as Guy Ferland
  ?spouse dbo:profession ?sameProfession .
  FILTER (?sameProfession = ?profession)
  
  BIND(?spouse AS ?person)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
826,14,train,Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor
WHERE {
  # Find Prince Friedrich of Hesse and by Rhine
  dbr:Friedrich_of_Hesse_and_by_Rhine dbo:parent ?parent .

  # Find the predecessor of the parent
  ?parent dbo:predecessor ?predecessor .
}
```

This query does the following:
- It identifies `Prince Friedrich of Hesse and by Rhine` using a resource identifier.
- It retrieves his parent using the `dbo:parent` property.
- It then finds the predecessor of that parent using the `dbo:predecessor` property.",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
582,34,train,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as --10-19.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?scientist rdf:type dbo:Scientist .
  ?scientist rdfs:label ""Hirotaka Sugawara""@en .
  OPTIONAL { ?scientist dbo:wikiPageRedirects ?redirect . }
  FILTER (
    EXISTS { ?redirect rdfs:label ""-10-19""@en } ||
    EXISTS { ?scientist rdfs:comment ?comment . FILTER(CONTAINS(LCASE(?comment), ""figure known as -10-19"")) }
  )
  ?scientist dbo:residence ?residence .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
573,23,train,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedentPerson
WHERE {
  # Find Charlie Baker, an Australian footballer
  ?charlieBaker a dbo:AustralianFootballer ;
                foaf:name ""Charlie Baker""@en .
  
  # Get his real name (assuming it's stored in the same resource)
  OPTIONAL { ?charlieBaker foaf:givenName ?realFirstName . }
  OPTIONAL { ?charlieBaker foaf:surname ?realLastName . }

  # Find the region where he was decedent
  ?decedentEvent dbo:place dbr:Region ;
                 dbo:decedent ?charlieBaker .
  
  # Get the person associated with that administration (region)
  ?administration a dbo:AdministrativeRegion ;
                  dbo:hasDecedent ?decedentPerson .
}
```",3,4,4,3,1,3,3,71,0,0,968,0,0.0,0
582,6,train,"Give me the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherName WHERE {
  ?masamiNagasawa a dbo:Person ;
                  foaf:name ""Masami Nagasawa""@en .
  
  ?masamiNagasawa dbo:father ?father .

  ?father a dbo:Athlete, dbo:SoccerManager, dbo:SportsManager .

  ?father foaf:name ?fatherName .
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
166,6,train,Give me the resting place of Gonzalo Queipo de Llano and entity in Spain.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gonzalo_Queipo_de_Llano> <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace ?associatedEntityInSpain
WHERE {
  # Find the resting place of Gonzalo Queipo de Llano
  dbr:Gonzalo_Queipo_de_Llano dbo:finalBurialPlace ?restingPlace .

  # Find an associated entity in Spain (e.g., a city or landmark)
  OPTIONAL {
    ?associatedEntityInSpain dbo:country dbr:Spain .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
926,29,train,Give me the child of Ahmed III and successor of the child of Ahmed III and father of Mahmud II.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?successor
WHERE {
  # Ahmed III and his child
  dbr:Ahmed_III dbo:child dbr:?Child .
  
  # The child must have a successor (indicating they were a ruler)
  OPTIONAL { dbr:?Child dbo:successor dbr:?Successor . }
  
  # The child is also the father of Mahmud II
  dbr:?Child dbo:father dbr:Mahmud_II .
  
  # Ensure the successor is indeed the same as the child (logical consistency)
  FILTER (?Successor = ?Child)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
192,0,train,Give me the spouse of Clemence of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Clemence_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName
WHERE {
  ?clemence a dbo:Person ;
            foaf:name ""Clemence of Austria""@en .
  ?clemence dbo:spouse ?spouse .
  ?spouse foaf:name ?spouseName .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
874,8,train,Give me the band of the band member of The Jones Gang.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . ?result <http://dbpedia.org/ontology/bandMember> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandLabel
WHERE {
  ?member dbo:memberOfBand dbr:The_Jones_Gang .
  ?member dbo:memberOfBand ?otherBand .
  ?otherBand rdfs:label ?bandLabel .
  FILTER (LANG(?bandLabel) = 'en')
}
```

5. **Optimize Query Logic:** The query is designed to be efficient by directly linking members of ""The Jones Gang"" to other bands they might belong to, using distinct labels for clarity.

6. **Validate Completeness and Precision:** This query should accurately return the names of any bands associated with members of ""The Jones Gang,"" ensuring it captures all relevant data without unnecessary complexity.",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
433,14,train,Give me the professional in the profession of Bob Marley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?profession
WHERE {
  dbp:Bob_Marley dbo:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,45013,0,0.0,0
839,13,train,Give me the band of the member of Böhse Onkelz.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandName
WHERE {
  # Find members of Böhse Onkelz
  ?member dbo:memberOfBand dbr:Böhse_Onkelz .
  
  # Find other bands associated with these members
  ?member dbo:memberOfBand ?otherBand .
  
  # Ensure the band is not Böhse Onkelz itself
  FILTER (?otherBand != dbr:Böhse_Onkelz)
  
  # Get the name of the band
  ?otherBand rdfs:label ?bandName .
  
  # Filter to ensure labels are in English
  FILTER (lang(?bandName) = 'en')
}
ORDER BY ?bandName
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
917,12,train,Give me the child of Kekūanāoʻa and child of Kekūanāoʻa.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  ?parent dbo:spouse ?kekuanaoʻa .
  FILTER (str(?kekuanaoʻa) = ""Kekūanāoʻa"")
  
  OPTIONAL { ?parent dbo:child ?child . }
}
```

### Explanation:

- **PREFIX:** We define prefixes for `dbo` and `dbp` to simplify the query.
- **SELECT:** We are interested in retrieving the children, so we select `?child`.
- **WHERE Clause:**
  - We look for a parent (`?parent`) who has Kekūanāoʻa as a spouse. This is based on the assumption that familial relationships might be recorded through spousal links.
  - The `FILTER` function ensures that we are specifically looking at entries related to ""Kekūanāoʻa"".
  - We use an `OPTIONAL` clause to find children (`dbo:child`) of this parent, allowing for cases where the child information might not be available.

This query assumes that Kekūanāoʻa's familial relationships are recorded in a way that can be accessed through these properties. Adjustments may be needed based on the actual schema and data availability in DBpedia.",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
433,13,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?secondLevelArtist WHERE {
  # First level association with Scott LaFaro
  ?artist1 dbo:associatedMusicalArtist <http://dbpedia.org/resource/Scott_LaFaro> .
  
  # Second level association, ensuring the artist is both an artist and a musical artist
  ?artist1 dbo:associatedMusicalArtist ?secondLevelArtist .
  FILTER EXISTS { ?secondLevelArtist a dbo:Artist . }
  FILTER EXISTS { ?secondLevelArtist a dbo:MusicalArtist . }
}
```",2,4,3,2,1,3,3,71,9,84,4,0.0967741935483871,0.6923076923076923,0.16981132075471697
326,4,train,Who is the awardee of French Legion of Honor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name
WHERE {
  ?person a dbo:Person .
  ?award dbo:recipient ?person ;
         rdfs:label ""Légion d'honneur""@fr .
  OPTIONAL { 
    ?person foaf:name ?name .
  }
}
ORDER BY ?name",1,1,2,1,1,3,2,20,0,0,13,0,0.0,0
18,14,train,Give me the parent of the professional in Actress and professional in .,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentActress ?parentOtherProfession
WHERE {
  ?actress a dbo:Actor ;
           dbo:occupation ""Actress"" .
  
  OPTIONAL { ?actress foaf:parent ?parentActress . }
  
  ?otherPerson a dbo:Agent ; 
               dbo:occupation ?profession .
  
  FILTER(?profession != ""Actress"") 
  
  OPTIONAL { ?otherPerson foaf:parent ?parentOtherProfession . }
}
```",3,3,4,2,2,2,3,28,0,0,200,0,0.0,0
839,28,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of Peter Schorowsky and band of Matthias Röhr.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v1 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?personLabel ?bandLabel
WHERE {
  # Find Kevin Richard Russell and his band
  { 
    ?person dbo:name ""Kevin Richard Russell""@en .
    ?person foaf:name ?personLabel .
    ?person dbo:musicGroup ?band .
    ?band foaf:name ?bandLabel .
    FILTER EXISTS { ?band a dbo:MusicalBand }
  } UNION

  # Find Peter Schorowsky and his band
  {
    ?person dbo:name ""Peter Schorowsky""@en .
    ?person foaf:name ?personLabel .
    ?person dbo:musicGroup ?band .
    ?band foaf:name ?bandLabel .
    FILTER EXISTS { ?band a dbo:MusicalBand }
  } UNION

  # Find Matthias Röhr and his band
  {
    ?person dbo:name ""Matthias Röhr""@en .
    ?person foaf:name ?personLabel .
    ?person dbo:musicGroup ?band .
    ?band foaf:name ?bandLabel .
    FILTER EXISTS { ?band a dbo:MusicalBand }
  }
}
ORDER BY ?personLabel
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
232,4,train,"Give me the artistic movement of Ella Cheever Thayer and claim to fame of Katherine ""Kitty"" Marshall.",SELECT ?result WHERE { <http://dbpedia.org/resource/Katherine_%22Kitty%22_Marshall> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Ella_Cheever_Thayer> <http://dbpedia.org/ontology/movement> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artisticMovement ?claimToFame
WHERE {
  # Find artistic movement for Ella Cheever Thayer
  OPTIONAL {
    dbr:Ella_Cheever_Thayer dbo:associatedMusicalArtist ?artist .
    ?artist dbo:movement ?artisticMovement .
  }
  
  # Find claim to fame for Katherine ""Kitty"" Marshall
  OPTIONAL {
    dbr:Katherine_Marshall dbo:notableOccupation ?occupation .
    ?occupation rdfs:label ?claimToFame .
    FILTER (lang(?claimToFame) = 'en')
  }
}
```

### Explanation:
- **PREFIX**: Defines common prefixes for DBpedia resources and ontology.
- **SELECT**: Chooses variables `?artisticMovement` and `?claimToFame`.
- **WHERE**:
  - The first OPTIONAL block attempts to find an artistic movement associated with Ella Cheever Thayer by linking her to a musical artist and then finding the movement of that artist.
  - The second OPTIONAL block tries to determine Katherine ""Kitty"" Marshall's claim to fame through her notable occupation.

This query is designed to capture the relevant information based on the relationships typically found in DBpedia for such entities.",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
329,8,train,Give me the birthplace of the author of The Tailor and Ansty.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?birthPlace
WHERE {
  ?book dbo:wikiPageWikiLink ""The Tailor and Ansty"" .
  ?book dbo:author ?author .
  ?author dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
192,8,train,Give me the child of the child of Stephen V of Hungary.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchild WHERE {
  ?stephenV a dbo:Person ;
            foaf:name ""Stephen V of Hungary""@en .
  
  ?stephenV dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .
}
```",2,2,3,2,1,3,2,20,0,0,7,0,0.0,0
373,0,train,Give me the writer of 2300 Jackson Street (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/2300_Jackson_Street_(song)> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  ?song dcterms:title ""2300 Jackson Street"" .
  ?song dbo:lyricsBy ?writer .
}
```",1,1,2,1,1,2,2,9,0,0,6,0,0.0,0
976,3,train,"Give me the administration, that is an organisation, of Kemal Kılıçdaroğlu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?organization WHERE {
  ?person a dbo:Person ;
          foaf:name ""Kemal Kılıçdaroğlu""@en .
  
  OPTIONAL { 
    ?person dbo:positionHeld ?position .
    ?position dbo:organization ?organization .
  }
  
  FILTER (?person = dbr:Kemal_Kılıçdaroğlu)
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
465,30,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of Anne of Brittany and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Ercole II d'Este and his successor
  dbr:Ercole_II_d%27Este_(Duke_of_Ferrara) dbo:successor ?successor .

  # Anne of Brittany's child who is royalty
  ?anneChild dbo:parent dbr:Anne_of_Brittany ;
            a dbo:RoyalFamilyMember .

  # Spouse of Archduchess Barbara of Austria
  ?barbaraSpouse dbo:spouse dbr:Barbara_of_Austria_(1572-1621) .
  
  # Ensure the successor is also the spouse of Archduchess Barbara's spouse and a royalty child of Anne of Brittany
  FILTER (?successor = ?anneChild && ?successor = ?barbaraSpouse)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
865,32,train,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfResidence ?fatherOfPoliticianChild
WHERE {
  # Ram Jaipal Singh Yadav's residence is a country
  dbr:Ram_Jaipal_Singh_Yadav dbo:residence ?residence .
  ?residence rdf:type dbo:Country .

  # Native of the residence (country)
  ?residence dbo:nativeOf ?nativeOfResidence .

  # Abu Ahmad Abdul Hafiz's child is a politician
  dbr:Abu_Ahmad_Abdul_Hafiz dbo:child ?politicianChild .
  ?politicianChild rdf:type dbo:Politician .

  # Father of the politician child
  ?politicianChild dbo:father ?fatherOfPoliticianChild .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
456,35,train,"Give me the spouse of the actor of Pacific Drive and band of the band, that is a musical artist, of Dean Brody.",SELECT ?result WHERE { <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?bandMember WHERE {
  # Find the actor of ""Pacific Drive""
  ?film dbo:title ""Pacific Drive""@en .
  ?film dbo:starring ?actor .

  # Get the spouse of this actor
  ?actor dbp:spouse ?spouse .

  # Identify Dean Brody's band
  ?dean dbp:name ""Dean Brody""@en .
  ?dean dbo:band ?band .

  # Find a musical artist in that band
  ?bandMember dbo:memberOfBand ?band ;
              a dbo:MusicalArtist .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
445,33,train,Give me the death place of the awardee of the establishment of 1820-03-10 and entity in England.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace
WHERE {
  ?award dbo:dateEstablished ""1820-03-10""^^xsd:date .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:deathPlace ?deathPlace .

  OPTIONAL { 
    ?entity dbp:country dbr:England .
    ?awardee dbo:associatedWith ?entity .
  }
}
FILTER EXISTS {
  ?entity dbp:country dbr:England .
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
47,17,train,"Give me the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?awardee
WHERE {
  ?award a dbo:Award .
  ?award dbo:recipient ?awardee .
  OPTIONAL { ?award dbo:country dbr:India . }
}
```

### Explanation

- **PREFIX**: Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT**: Choose distinct awards and their awardees to avoid duplicates.
- **WHERE Clause**:
  - `?award a dbo:Award`: Ensures the entity is an award.
  - `?award dbo:recipient ?awardee`: Links the award to its recipient.
  - `OPTIONAL { ?award dbo:country dbr:India . }`: Filters awards associated with India, if available.

This query will return distinct pairs of awards and their awardees that are linked to India.",2,3,3,2,1,3,3,71,0,0,1632,0,0.0,0
791,0,train,Give me the spouse of Taira no Tokuko.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Taira_no_Tokuko> dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
41,2,train,Give me the party of Enda Kenny.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  dbpedia:Enda_Kenny dbo:politicalParty ?party .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
465,15,train,"Give me the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  ?parent dbo:spouse|dbo:child ?ercole .
  FILTER(?ercole = dbpedia:Ercole_II_d%27Este)
  
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
456,29,train,Give me the professional in the alter ego of The Shadow and band of Alan Doyle and spouse of Danielle Spencer (Australian actress).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professionalName
WHERE {
  # The alter ego of ""The Shadow""
  ?shadowAlterEgo dbo:alterEgoOf dbr:The_Shadow .
  
  # Professional associated with the alter ego
  ?shadowAlterEgo foaf:name ?professionalName .

  # Band associated with Alan Doyle
  ?band dbo:member dbr:Alan_Doyle .
  
  # Professional is a member of this band
  ?professionalName dbo:memberOf ?band .

  # Spouse relationship with Danielle Spencer (Australian actress)
  ?spencer foaf:name ""Danielle Spencer""@en ;
           dbo:nationality dbr:Australia ;
           dbo:spouse ?professionalName .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
917,1,train,Give me the child of Kekūanāoʻa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?s dbo:child ?child .
  ?s foaf:name ""Kekūanāoʻa""@en .
}
```

This query uses the `dbo:child` predicate to find children of Kekūanāoʻa. The `foaf:name` property is used to identify Kekūanāoʻa by name, assuming that DBpedia has this information available.",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
130,0,train,Give me the figure known as Vanderbilt Commodores.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Vanderbilt_Commodores> . },"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity ?label ?sport WHERE {
  ?entity a dbo:SportTeam ;
          rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""vanderbilt commodores""))
  OPTIONAL { ?entity dbo:sport ?sport }
}
```

This query selects entities that are of type `dbo:SportTeam` and have a label containing ""Vanderbilt Commodores."" It also optionally retrieves the sport associated with this team.",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
582,16,train,"Give me the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?father
WHERE {
  # Find Kazuaki Nagasawa's child
  ?child dbo:parent ?kazuakiNagasawa .
  
  # Identify the father of that child
  ?child foaf:parent ?father .

  # Ensure the person is Kazuaki Nagasawa
  ?kazuakiNagasawa foaf:name ""Kazuaki Nagasawa"" .

  # Check if the father is an athlete, soccer manager, and sports manager
  ?father dbo:occupation dbr:Athlete .
  ?father dbo:occupation dbr:Soccer_Manager .
  ?father dbo:occupation dbr:Sports_Manager .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
715,32,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in the force of Francisco Largo Caballero.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflictAbdElKrim ?commanderAbdElKrim ?conflictLargoCaballero ?commanderLargoCaballero
WHERE {
  # Find the military conflict involving Abd el-Krim as a commander
  ?conflictAbdElKrim dbo:commander dbr:Abd_el-Krim .
  ?conflictAbdElKrim dbo:name ?nameAbdElKrimConflict .
  
  OPTIONAL { 
    ?conflictAbdElKrim dbo:commander ?commanderAbdElKrim .
  }
  
  # Find the military conflict involving Francisco Largo Caballero as a commander
  ?conflictLargoCaballero dbo:commander dbr:Francisco_Largo_Caballero .
  ?conflictLargoCaballero dbo:name ?nameLargoCaballeroConflict .

  OPTIONAL { 
    ?conflictLargoCaballero dbo:commander ?commanderLargoCaballero .
  }
}
```

### Explanation

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT Clause**: Selects the conflicts and their commanders.
- **WHERE Clause**:
  - For Abd el-Krim, we look for military conflicts where he is listed as a commander.
  - Similarly, for Francisco Largo Caballero, we find conflicts where he is a commander.
- **OPTIONAL Clauses**: These are used to capture additional information about commanders if available.

This query will return the names of the military conflicts and their respective commanders for both Abd el-Krim and Francisco Largo Caballero.",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
417,30,train,"Give me the spouse of Princess Caroline-Mathilde of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of Christian X of Denmark.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?royalChild
WHERE {
  # Find spouse of Princess Caroline-Mathilde of Denmark
  dbr:Princess_Caroline_Matilda_of_Denmark dbo:spouse ?spouse .

  # Find children of the spouse who are also children of Frederick Francis III and Christian X
  ?child dbo:parent ?spouse .
  ?child dbo:parent dbr:Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin .
  ?child dbo:parent dbr:Christian_X_of_Denmark .

  # Ensure the child is royalty
  ?child a dbo:RoyalFamilyMember .

  BIND(?child AS ?royalChild)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
373,3,train,Give me the profession of Beto Guedes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Beto_Guedes> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession
WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Beto Guedes"" .
  ?person dbo:occupation ?profession .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
341,2,train,Give me the awardee of List of awards and nominations received by Beyoncé.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Beyoncé> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardName ?awardee
WHERE {
  # Identify Beyoncé's awards and nominations
  ?award dbo:recipient dbr:Beyoncé .
  
  # Get the name of each award
  ?award rdfs:label ?awardName .

  OPTIONAL {
    # Find other awardees for the same award
    ?award dbo:recipient ?awardee .
    
    FILTER(?awardee != dbr:Beyoncé) # Exclude Beyoncé herself from the list of awardees

    # Ensure that the awardee is a person or organization
    OPTIONAL { ?awardee rdf:type dbo:Person . }
    OPTIONAL { ?awardee rdf:type dbo:Organization . }

    # Get the label for each awardee
    ?awardee rdfs:label ?awardeeLabel .
  }
}
ORDER BY ?awardName ?awardeeLabel
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
47,24,train,Give me the office of the awardee of Banga Bhushan and office of Ajoy Mukherjee.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person (GROUP_CONCAT(?office; separator="", "") AS ?offices)
WHERE {
  # Find the awardee of Banga Bhushan
  {
    SELECT ?awardee WHERE {
      ?award dbo:recipient ?awardee .
      ?award rdfs:label ""Banga Bhushan""@en .
    }
    LIMIT 1
  }

  UNION

  # Ajoy Mukherjee
  {
    VALUES ?person { dbr:Ajoy_Mukherjee }
  }

  # Get offices for the identified persons
  ?person dbo:office ?office .

}
GROUP BY ?person
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
158,4,train,"Who is the person deceased, that is an office holder and a politician, on 1945-09-15?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name
WHERE {
  ?person dbo:deathDate ?date .
  ?person rdfs:label ?name .
  FILTER (CONTAINS(LCASE(?name), ""person"")) # Ensures we are dealing with a person
  FILTER (YEAR(xsd:date(?date)) = 1945 && MONTH(xsd:date(?date)) = 9 && DAY(xsd:date(?date)) = 15)
  
  ?person dbo:officeHolder true .
  ?person dbo:politician true .
}
ORDER BY ?name",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
582,4,train,Give me the residence of Hirotaka Sugawara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?residence WHERE {
  ?person foaf:name ""Hirotaka Sugawara""@en .
  ?person dbo:residenceLocation ?residence .
}
```

This query uses:
- `foaf:name` to identify the person by name.
- `dbo:residenceLocation` to find the residence location.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
273,2,train,Give me the child of Edoardo Agnelli (1831-1871).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Edoardo Agnelli"" ;
          dbo:birthDate ?birthDate ;
          dbo:deathDate ?deathDate .
  
  FILTER (?birthDate >= ""1831-01-01""^^xsd:date && ?birthDate <= ""1831-12-31""^^xsd:date)
  FILTER (?deathDate >= ""1871-01-01""^^xsd:date && ?deathDate <= ""1871-12-31""^^xsd:date)

  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
456,22,train,"Give me the band of the band, that is a musical artist, of Dean Brody and spouse of Danielle Spencer (Australian actress).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?band
WHERE {
  # Dean Brody's band
  dbr:Dean_Brody dbo:musicalArtist ?band .
  
  # Danielle Spencer as an Australian actress and spouse of Dean Brody
  ?spouse a dbo:Spouse ;
          foaf:name ""Danielle Spencer"" ;
          dbo:nationality dbr:Australia ;
          dbo:occupation dbr:Actress .

  # Linking the spouse to Dean Brody
  ?spouse dbo:spouse dbr:Dean_Brody .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
892,8,train,"Give me the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityName
WHERE {
  ?entity a dbo:Region_of_Italy ;
          a dbo:Settlement ;
          a dbo:Administrative_region ;
          dbo:country dbr:Italy .
  
  ?entity dbo:government ?gov .
  ?gov dbo:party dbr:Democratic_Party_(Italy) .

  ?entity rdfs:label ?entityName .
  FILTER (lang(?entityName) = 'en')
}
```",1,5,2,1,1,3,3,71,0,0,14,0,0.0,0
926,23,train,Give me the father of the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandfather
WHERE {
  ?neşerekKadın dbo:spouse ?spouse .
  ?spouse dbo:father ?fatherOfSpouse .
  ?fatherOfSpouse dbo:father ?grandfather .
  FILTER(STR(?neşerekKadın) = ""Neşerek Kadın"")
}
```

This query:
- Starts by identifying the spouse of Neşerek Kadın.
- Finds the father of this spouse.
- Finally, retrieves the father of that person (the grandfather).",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
507,29,train,"Give me the spouse of Anne V. Coates and professional in Film director, television director and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v3 <http://dbpedia.org/ontology/director> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseName WHERE {
  # Anne V. Coates and her spouse
  dbr:Anne_V._Coates dbo:spouse ?spouse .
  
  # Spouse's name
  ?spouse rdfs:label ?spouseName .

  # Ensure the spouse is a film director, television director, or movie director
  OPTIONAL { ?spouse dbo:occupation dbr:Film_director . }
  OPTIONAL { ?spouse dbo:occupation dbr:Television_director . }
  OPTIONAL { ?spouse dbo:occupation dbr:Movie_director . }

  # Spouse's work with Beryl Reid
  ?work dbo:director ?spouse .
  ?work dbo:starring dbr:Beryl_Reid .

  FILTER (count(?spouse) > 0)
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
274,14,train,Give me the professional in the designer of Tetris Classic and band member of Dizzy Gillespie.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Find the designer of Tetris Classic
  ?designer dbo:profession dbp:Tetris_Classic_Designer .
  
  # Find band members of Dizzy Gillespie
  ?member dbo:bandMemberOf dbr:Dizzy_Gillespie .

  # Check if the same person satisfies both conditions
  FILTER (?designer = ?member)
}
```

### Explanation

- **PREFIX**: Define prefixes for common DBpedia properties.
- **SELECT DISTINCT ?person**: We want to find distinct individuals who meet both criteria.
- **WHERE Clause**:
  - `?designer dbo:profession dbp:Tetris_Classic_Designer`: Identifies the designer of Tetris Classic.
  - `?member dbo:bandMemberOf dbr:Dizzy_Gillespie`: Identifies band members of Dizzy Gillespie.
  - `FILTER (?designer = ?member)`: Ensures the same person is both the designer and a band member.

This query assumes that DBpedia has structured data for these specific roles. Adjustments may be needed based on actual data availability.",3,3,4,2,2,2,3,28,0,0,8,0,0.0,0
326,13,train,"Give me the resident of the birthplace, that is a state and British, of the professional in Writer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Writer""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?resident
WHERE {
  ?writer a dbo:Writer ;
          dbo:birthPlace ?birthplace .
  
  ?birthplace a dbo:State ;
              dbp:country dbr:United_Kingdom .

  OPTIONAL { ?birthplace dbo:populationTotal ?population . }
  
  ?resident dbo:residence ?birthplace .
}
```",3,5,4,3,1,3,2,20,0,0,120,0,0.0,0
459,18,train,Give me the governor of Dana Murphy and person born as the birth name of Kevin Stitt.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?governor ?birthName
WHERE {
  # Find the state associated with Dana Murphy
  ?dana a dbo:Person ;
        foaf:name ""Dana Murphy"" .
  
  OPTIONAL { 
    ?dana dbo:residence ?state .
  }
  
  # Find Kevin Stitt's birth name
  ?kevin a dbo:Person ;
         foaf:name ""Kevin Stitt"" .
  ?kevin dbo:birthName ?birthName .

  # Find the governor of the state associated with Dana Murphy
  OPTIONAL {
    ?governor a dbo:Governor ;
              dbo:governs ?state .
  }
}
```

### Explanation:

- **Dana Murphy's State:** We assume there is a property `dbo:residence` that links Dana Murphy to her state.
  
- **Kevin Stitt's Birth Name:** Retrieved using the `dbo:birthName` property.

- **Governor Information:** The governor of the state associated with Dana Murphy is found using `dbo:governs`.

This query assumes certain properties and relationships based on typical DBpedia schema. Adjustments may be needed if specific data points are structured differently in the actual dataset.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
791,2,train,Give me the father of Emperor Go-Toba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherName WHERE {
  ?emperor a dbo:Emperor ;
           foaf:name ""Go-Toba""@en .
  ?emperor dbo:father ?father .
  ?father foaf:name ?fatherName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
129,6,train,Give me the professional in  and associated musical artist of EarthGang.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professionalIn ?associatedArtist
WHERE {
  # EarthGang as the main subject
  VALUES ?earthGang { dbr:EarthGang }

  # Find professional roles (e.g., occupation)
  OPTIONAL {
    ?earthGang dbo:occupation ?professionalIn .
  }
  
  # Find associated musical artists through collaborations or similar relationships
  OPTIONAL {
    ?earthGang dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```

### Explanation

- **PREFIX**: Defines common prefixes for DBpedia resources.
- **SELECT DISTINCT**: Ensures unique results for professional roles and associated artists.
- **VALUES**: Specifies EarthGang as the subject of interest.
- **OPTIONAL Clauses**: Used to optionally include data about their occupation and associated musical artists.

This query will return distinct entries for any known professional roles and associated musical artists related to EarthGang, based on available DBpedia data.",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
507,23,train,Give me the spouse of the person born as the birth name of Anne V. Coates.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  ?person foaf:name ""Anne V. Coates""@en .
  ?person dbo:spouse ?spouse .
}
```",3,3,4,3,1,3,3,71,1,0,0,1.0,1.0,1.0
888,3,train,"Give me the force, that is a societal event and an event, of Serhiy Kotenko.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?forceLabel ?eventLabel WHERE {
  # Find Serhiy Kotenko's resource
  VALUES ?serhiyKotenko { dbr:Serhiy_Kotenko }
  
  # Find events associated with him that are societal events
  ?event dbo:agent ?serhiyKotenko .
  ?event a dbo:SocietalEvent .

  # Find the force (organization/group) related to these events
  OPTIONAL {
    ?force dbo:member ?serhiyKotenko .
    ?force rdfs:label ?forceLabel .
  }

  # Get labels for the event
  ?event rdfs:label ?eventLabel .

  FILTER(LANG(?forceLabel) = 'en')
  FILTER(LANG(?eventLabel) = 'en')
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
645,25,train,"Give me the military force of Spanish Civil War and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?leaderRole
WHERE {
  # Find military forces involved in the Spanish Civil War
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:partOf ?conflict .
  
  FILTER(CONTAINS(LCASE(?conflict), ""spanish civil war""))

  OPTIONAL {
    # Find leadership roles of Camilo Menéndez Tolosa
    ?office dbo:leader ?person .
    ?person rdfs:label ""Camilo Menéndez Tolosa""@en .

    # Ensure the office is a government agency and an organization
    ?office a dbo:GovernmentAgency, dbo:Organization ;
            rdfs:label ?officeLabel .

    BIND(CONCAT(""Leader of "", ?officeLabel) AS ?leaderRole)
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
216,4,train,Give me the awardee of Australian Defence Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?medal a dbo:Award .
  ?medal rdfs:label ""Australian Defence Medal""@en .
  ?medal dbo:recipient ?awardee .
}
```

### Explanation:

- **PREFIX:** Define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT:** We are interested in the `?awardee`, which represents entities that have received the medal.
- **WHERE Clause:**
  - Identify the medal as an instance of `dbo:Award`.
  - Use `rdfs:label` to specify the exact label ""Australian Defence Medal"" in English.
  - Use `dbo:recipient` to find entities linked as recipients of this medal.",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
965,38,train,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Prince Louis of Battenberg and his child who is royalty
  dbr:Prince_Louis_of_Battenberg dbo:child ?royaltyChild .
  
  # The parent of the royalty child
  ?royaltyChild dbo:parent ?parent .

  # Prince George of Battenberg born as a noble
  dbr:Prince_George_of_Battenberg dbo:birthName ""Prince George of Battenberg"" ;
                                  dbo:nobleTitle ?nobleTitle .
  
  # The parent must be the same for both royalty child and Prince George
  ?parent dbo:child dbr:Prince_George_of_Battenberg .

  FILTER EXISTS { ?royaltyChild a dbo:RoyalFamilyMember }
  FILTER EXISTS { ?nobleTitle a dbo:NobleTitle }
}",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
445,35,train,"Give me the entity in the residence, that is a country, of Anna Sharkey and entity in the award of George H. Cameron.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?annaResidenceCountry ?georgeAwardEntity
WHERE {
  # Find Anna Sharkey's residence and check if it is a country
  OPTIONAL {
    ?anna dbr:Anna_Sharkey .
    ?anna dbo:residence ?residence .
    ?residence rdf:type dbo:Place .
    ?residence dbo:country ?annaResidenceCountry .
    FILTER (?annaResidenceCountry != dbr:United_States) # Assuming we want a country other than the residence's own country
  }

  # Find George H. Cameron's award and extract the entity associated with it
  OPTIONAL {
    ?george dbr:George_H._Cameron .
    ?george dbo:award ?award .
    ?award dbo:recipient ?georgeAwardEntity .
  }
}
```",4,5,5,2,2,3,3,71,0,0,102,0,0.0,0
433,39,train,Give me the associated musical artist of Bill Evans and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musicalArtist ?profession
WHERE {
  # Find the musical artist associated with Bill Evans
  dbr:Bill_Evans dbo:musicalArtist ?musicalArtist .

  # Find the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
  OPTIONAL {
    dbr:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall dbo:writer ?writer .
    
    # Get the profession of the writer
    ?writer dbo:profession ?profession .
  }
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
865,38,train,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?fatherOfPolitician ?grandFather
WHERE {
  # Abu Ahmad Abdul Hafiz's child who is a politician
  ?child dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz .
  ?child rdf:type dbo:Politician .

  # Father of the politician child
  ?fatherOfPolitician dbo:child ?child .

  # Abu Ahmad Abdul Hafiz's other child
  ?otherChild dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz .

  # Father of this other child
  ?grandFather dbo:child ?otherChild .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
839,34,train,"Give me the band of Matthias Röhr and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandOfMatthiasRohr ?bandOfKevinRussellPersona
WHERE {
  # Find Matthias Röhr's band
  ?matthiasRohr a dbo:Person ;
                foaf:name ""Matthias Röhr"" .
  
  ?matthiasRohr dbo:member ?bandOfMatthiasRohr .

  # Find Kevin Russell's persona who is a musical artist
  ?kevinRussell a dbo:Person ;
                foaf:name ""Kevin Russell (musician)"" .
  
  ?persona a dbo:MusicalArtist ;
           dbo:alias ?kevinRussell .
  
  ?persona dbo:member ?bandOfKevinRussellPersona .

}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
926,18,train,Give me the child of Ahmed III and successor of Mustafa III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Ahmed III's child
  ?ahmed3 dbo:child dbr:Abdul_Hamid_I .
  
  # Mustafa III's successor
  ?mustafa3 dbo:successor dbr:Abdul_Hamid_I .
  
  # Mahmud II's father
  ?mahmud2 dbo:father dbr:Abdul_Hamid_I .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
495,7,train,Give me the child of the father of William I of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  ?william1 dbo:father ?father .
  ?father dbo:child ?child .

  VALUES ?william1 { 
    <http://dbpedia.org/resource/Wilhelm_I._(W%C3%BCrttemberg)>
  }
}
```

5. **Optimize Query Logic:** The query is structured to first find the father of William I and then retrieve his children, ensuring efficiency by using a `VALUES` clause for direct reference.

6. **Validate Completeness and Precision:** The query accurately reflects the question's requirements by identifying the correct relationships and entities involved.",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
582,39,train,"Give me the player in Kazuaki Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?coach ?team ?nickname
WHERE {
    # Kazuaki Nagasawa as a player of the team
    dbr:Kazuaki_Nagasawa dbo:playsFor ?team .
    
    # Hajime Moriyasu as a coach of the same team
    dbr:Hajime_Moriyasu dbo:coachOf ?team .
    
    # The team's nickname
    ?team dbo:nickname ?nickname .
    
    # Ensure the team is an organization
    ?team rdf:type dbo:Organization .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
791,1,train,Give me the predecessor of Emperor Antoku.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  ?antoku a dbo:Monarch ;
          dbo:successor dbr:Emperor_Antoku .
  ?antoku dbo:predecessor ?predecessor .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
130,8,train,"Give me the entity in the administration, that is American, of .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://dbpedia.org/property/governor> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity
WHERE {
  ?entity a dbo:Person .
  ?entity dbo:nationality dbr:United_States .
  ?entity dbo:position ?position .
  FILTER EXISTS { ?position dbo:partOf ?administration }
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT**: We are selecting the `?entity`, which represents a person.
- **WHERE**:
  - `?entity a dbo:Person`: Ensures that the entity is a person.
  - `?entity dbo:nationality dbr:United_States`: Filters entities to those with American nationality.
  - `?entity dbo:position ?position`: Links the person to their position or role.
  - `FILTER EXISTS { ?position dbo:partOf ?administration }`: Ensures that the position is part of an administration.

This query will return all American individuals who hold a position within any administration. Adjustments may be needed based on specific administrations if more context is provided.",2,3,3,2,1,3,2,20,0,0,26076,0,0.0,0
326,0,train,"Give me the person decedent at Rancho Mirage, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Rancho_Mirage,_California> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:name ?name .
  ?person dbo:deathPlace dbr:Rancho_Mirage,_California .
}
```

This query selects individuals (`?person`) who are of type `dbo:Person` and have a recorded death place in Rancho Mirage, California. It also retrieves their names (`?name`).",1,1,2,1,1,2,2,9,0,0,97,0,0.0,0
445,4,train,"Give me the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?residence WHERE {
  ?person foaf:name ""Anna Sharkey""@en .
  ?person dbo:residence ?residence .
  ?residence a dbo:Country .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
124,35,train,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander
WHERE {
  # A Field Battery of the Royal Australian Artillery
  ?battery a dbo:MilitaryUnit ;
           dbo:militaryConflict ?conflict1 ;
           dbo:commander ?commander .

  FILTER EXISTS { 
    ?conflict1 a dbo:SocietalEvent .
  }

  # Herbert Kitchener, 1st Earl Kitchener's military force
  dbr:Herbert_Kitchener_1st_Earl_Kitchener dbo:militaryForce ?force ;
                                            dbo:militaryConflict ?conflict2 .

  FILTER EXISTS { 
    ?conflict2 a dbo:SocietalEvent .
  }

  # Find common commanders
  ?commander dbo:commanderOf ?force .
}
```",4,8,5,2,2,3,3,71,0,0,9,0,0.0,0
326,5,train,"Give me the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Adelbert Cronkhite""@en .
  
  ?person dbo:honoraryAward ?award .

  ?award rdfs:label ?awardLabel .
  FILTER(CONTAINS(LCASE(?awardLabel), ""country"") || CONTAINS(LCASE(?awardLabel), ""nation""))
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
47,0,train,Give me the office of Suvendu Adhikari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office
WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Suvendu Adhikari""@en .
  
  OPTIONAL { 
    ?person dbo:office ?office .
  }
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
417,27,train,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild
WHERE {
  # Alexandrine of Mecklenburg-Schwerin's child who is royalty
  ?parent dbo:spouse ?alexandrine .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .
  
  ?parent dbo:child ?child .
  FILTER(CONTAINS(LCASE(?child), ""royalty"")) .

  # The child's child who is royalty
  ?child dbo:child ?grandchild .
  FILTER(CONTAINS(LCASE(?grandchild), ""royalty"")) .
}
```",3,5,4,3,1,3,3,71,0,0,8,0,0.0,0
216,0,train,Give me the player in Igor Bišćan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player ?position
WHERE {
  ?player rdf:type dbo:FootballPlayer .
  ?player foaf:name ""Igor Bišćan"" .
  OPTIONAL { 
    ?player dbp:position ?position .
  }
}
```

This query does the following:
- Selects entities that are of type `dbo:FootballPlayer`.
- Matches the name ""Igor Bišćan"".
- Optionally retrieves the playing position using the property `dbp:position`.",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
136,6,train,Give me the landmark at elevation of the award of Bret Anthony Johnston.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v0 . <http://dbpedia.org/resource/Bret_Anthony_Johnston> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?landmark WHERE {
  # Find Bret Anthony Johnston
  dbr:Bret_Anthony_Johnston dbo:awards ?award .

  OPTIONAL {
    # Assuming awards have a location or elevation property linked to landmarks
    ?award dbo:elevation ?elevation .
    ?elevation dbo:location ?location .
    ?location dbo:landmark ?landmark .
  }
}
```",2,2,3,2,1,2,2,9,0,0,909,0,0.0,0
892,4,train,Give me the profession of Henri Crolla.,SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession
WHERE {
  ?person foaf:name ""Henri Crolla""@en .
  ?person dbo:occupation ?profession .
}
```",1,1,2,1,1,3,3,71,1,0,1,1.0,0.5,0.6666666666666666
124,20,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in Mahdist War.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
  # Identify Frank Rhodes and his role in the Mahdist War
  dbr:Frank_Rhodes dbo:occupation dbr:Military_officer .
  dbr:Frank_Rhodes dbo:commanderOf dbr:Mahdist_War .

  # Ensure Mahdist War is a military conflict and societal event
  dbr:Mahdist_War rdf:type dbo:MilitaryConflict ;
                  rdf:type dbo:SocietalEvent .

  # Retrieve the military force involved in the Mahdist War
  ?militaryForce dbo:partOf dbr:Mahdist_War .
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
216,5,train,Give me the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?designer
WHERE {
  ?game dbr:Woolfe:_The_Red_Hood_Diaries ;
        dbo:creator ?designer .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
582,22,train,Give me the figure known as the nickname of Japan national football team and reference to Japan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname ?country
WHERE {
  ?team a dbo:NationalSoccerTeam ;
        dbo:nickname ?nickname ;
        dbo:country dbr:Japan .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
47,22,train,Give me the office of the awardee of Padma Vibhushan and office of Suvendu Adhikari.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office ?person WHERE {
  # Offices held by Padma Vibhushan awardees
  {
    ?person dbo:award dbr:Padma_Vibhushan .
    ?person dbo:holdsOffice ?office .
  }
  
  UNION
  
  # Offices held by Suvendu Adhikari
  {
    dbr:Suvendu_Adhikari dbo:holdsOffice ?office .
    BIND(dbr:Suvendu_Adhikari AS ?person)
  }
}
ORDER BY ?person",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
443,6,train,Give me the birthplace of Ulf Lundell and landmark at elevation of 28.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . }","SELECT ?birthPlace WHERE {
    ?person dbo:name ""Ulf Lundell""@en .
    ?person dbo:birthPlace ?birthPlace .
}
UNION
SELECT ?landmark WHERE {
    ?landmark geo:elevation 28 .
    ?landmark a dbo:Landmark .
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
353,3,train,"Give me the country of Moskovsky City District, Nizhny Novgorod.","SELECT ?result WHERE { <http://dbpedia.org/resource/Moskovsky_City_District,_Nizhny_Novgorod> <http://dbpedia.org/ontology/country> ?result . }","```sparql
SELECT ?countryLabel
WHERE {
  ?district rdfs:label ""Moskovsky City District, Nizhny Novgorod""@en .
  ?district dbo:country ?country .
  ?country rdfs:label ?countryLabel .
  FILTER(LANG(?countryLabel) = 'en')
}
```",1,1,2,1,1,2,2,9,0,1,1,0.0,0.0,0
926,27,train,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfFather
WHERE {
  # Beyhan Sultan is the child of Mustafa III
  dbr:Beyhan_Sultan dbo:parent dbr:Mustafa_III .

  # Find Mustafa III's parent who is royalty
  dbr:Mustafa_III dbo:parent ?mustafaParent .
  ?mustafaParent a dbo:Monarch .

  # Identify Mustafa III's father from the royal parent
  ?mustafaParent dbo:child dbr:Mustafa_III .
  ?mustafaParent dbo:spouse ?fatherOfMustafa .
  ?fatherOfMustafa a dbo:Monarch .

  # Find the child of this royal father
  ?fatherOfMustafa dbo:child ?childOfFather .
}
```",3,5,4,3,1,3,3,71,0,0,11,0,0.0,0
582,14,train,Give me the figure known as the nickname of Japan national football team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/Japan_national_football_team> dbp:nickname ?nickname .
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
507,8,train,Give me the profession of Guy Ferland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession
WHERE {
  ?person foaf:name ""Guy Ferland""@en .
  ?person dbo:occupation ?profession .
}
```",1,1,2,1,1,3,3,71,0,2,1,0.0,0.0,0
987,16,train,"Who is the actor of the show, that is a film, with Emir Hadžihafizbegović?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actorName
WHERE {
  ?film a dbo:Film .
  ?film dbo:starringEmirHadžihafizbegović ?emirRole .
  ?emirRole dbo:agent ?emir .
  ?emir foaf:name ""Emir Hadžihafizbegović"" .

  ?film dbo:actor ?otherActor .
  ?otherActor foaf:name ?actorName .
  
  FILTER(?actorName != ""Emir Hadžihafizbegović"")
}
```",2,3,3,2,1,3,3,71,0,0,54,0,0.0,0
102,9,train,"Give me the player in the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?team dbo:member ?player .
  ?player a dbo:SoccerPlayer .
  FILTER (str(?team) = ""England_women%27s_national_football_team"")
}
```",2,3,3,2,1,3,2,20,0,0,180,0,0.0,0
826,25,train,"Give me the successor of Louis II, Grand Duke of Hesse and predecessor of the parent of Prince Friedrich of Hesse and by Rhine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?successorOfLouisII
WHERE {
  # Louis II, Grand Duke of Hesse
  ?louis2 a dbo:GrandDuke ;
          foaf:name ""Louis II, Grand Duke of Hesse""@en .

  # Successor of Louis II
  ?louis2 dbo:successor ?successorOfLouisII .

  # Prince Friedrich of Hesse and by Rhine
  ?friedrich a dbo:Person ;
             foaf:name ""Prince Friedrich of Hesse and by Rhine""@en .

  # Parent of Prince Friedrich
  ?parent a dbo:Person ;
          foaf:child ?friedrich .

  # Predecessor of the parent of Prince Friedrich
  ?parent dbo:predecessor ?successorOfLouisII .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
527,13,train,"Give me the actor of the movie, that is a work and English and a television show, with the professional in Actor.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT DISTINCT ?actor
WHERE {
  ?movie a dbo:Film .
  ?movie dbo:genre ?genre .
  FILTER(?genre = dbo:TelevisionSeries) .

  ?movie dcterms:language ""English"" .

  ?movie dbo:starring ?actor .
  ?actor a dbo:Actor .
}
```",3,6,4,3,1,3,2,20,0,0,1472,0,0.0,0
216,10,train,Give me the player in Igor Bišćan and team of Ognjen Vukojević.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

# Query to find Igor Bišćan's team
SELECT ?teamIgor WHERE {
  ?igor a dbo:FootballPlayer .
  ?igor rdfs:label ""Igor Bišćan""@en .
  ?igor dbo:playsFor ?teamIgor .
}

UNION

# Query to find Ognjen Vukojević's team
SELECT ?teamOgnjen WHERE {
  ?ognjen a dbo:FootballPlayer .
  ?ognjen rdfs:label ""Ognjen Vukojević""@en .
  ?ognjen dbo:playsFor ?teamOgnjen .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
136,0,train,Give me the region coded as 03834.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ""03834"" . }","```sparql
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?regionLabel WHERE {
  ?region dbo:regionCode ""03834"" .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,2,2,9,0,0,9,0,0.0,0
465,1,train,Give me the spouse of Archduchess Barbara of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?person a dbo:Archduchess ;
          foaf:name ""Barbara of Austria""@en .
  ?person dbo:spouse ?spouse .
}
```

This query does the following:
- It uses `PREFIX` to define the namespace for DBpedia ontology (`dbo:`).
- The `SELECT` clause specifies that we want to retrieve the spouse.
- In the `WHERE` clause, it matches a person who is an instance of `dbo:Archduchess` and has the name ""Barbara of Austria"".
- It then retrieves the spouse using the `dbo:spouse` property.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
791,15,train,"Give me the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse WHERE {
  ?emperor rdf:type dbo:Monarch .
  ?emperor rdfs:label ""Emperor Takakura""@en .
  FILTER NOT EXISTS { ?emperor owl:sameAs ?other } # Ensure we have the specific individual
  ?emperor dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Monarch . # Ensures spouse is royalty
}
```

This query does the following:
- Selects individuals (`?spouse`) who are spouses of Emperor Takakura.
- Filters to ensure that these spouses are also of type `dbo:Monarch`, indicating they are royalty.",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
926,9,train,Give me the successor of Mustafa III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?mustafa3 dbo:successor ?successor .
  FILTER(STR(?mustafa3) = ""Mustafa III"") .

  ?mahmud2 dbo:parent ?successor .
  FILTER(STR(?mahmud2) = ""Mahmud II"")
}
```

5. **Validate Completeness and Precision:** The query checks for a person who is both the successor of Mustafa III and the parent of Mahmud II, which aligns with the question's requirements.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
645,1,train,Give me the military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Identify the resource for the Spanish Civil War
  dbr:Spanish_Civil_War a dbo:MilitaryConflict .

  # Find military forces associated with the conflict
  OPTIONAL { 
    dbr:Spanish_Civil_War dbo:militaryFaction ?militaryForce .
  }
  
  OPTIONAL {
    dbr:Spanish_Civil_War dbo:hasMilitaryAlliance ?militaryForce .
  }

  FILTER (isLiteral(?militaryForce))
}
ORDER BY ?militaryForce
```

### Explanation:
- **PREFIX**: Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT**: Choose distinct military forces to avoid duplicates.
- **WHERE Clause**:
  - Identify the Spanish Civil War as a `MilitaryConflict`.
  - Use `OPTIONAL` clauses to capture any military factions or alliances associated with it.
- **FILTER**: Ensure that only literal values (names of forces) are selected.

This query aims to retrieve distinct names of military forces involved in the Spanish Civil War by exploring relevant DBpedia properties. Adjustments might be needed based on available data and specific property mappings in DBpedia.",1,1,2,1,1,3,3,71,0,0,514,0,0.0,0
353,1,train,Give me the entity in Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity
WHERE {
  ?entity dbo:country dbr:Russia .
}
```",1,1,2,1,1,2,2,9,29927,0,0,1.0,1.0,1.0
83,5,train,Give me the player in the person born on 1995-07-07.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1995-07-07""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?person a dbo:Person ;
          dbo:birthDate ""1995-07-07""^^xsd:date .
  
  ?person dbo:occupation dbr:Association_football_player ; # Assuming 'Association football player' as an example role
          rdfs:label ?player .
}
```",2,2,3,2,1,2,2,9,0,0,133,0,0.0,0
508,9,train,"Give me the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war a dbo:MilitaryConflict ;
      a dbo:SocietalEvent ;
      a dbo:Event .

  ?war dbo:participant dbr:Hayao_Tada .
  
  ?war dbo:commander ?commander .
  
  ?commander a dbo:Politician .
}
```",2,6,3,2,1,3,2,20,0,0,28,0,0.0,0
839,12,train,Give me the band of Peter Schorowsky and band of Matthias Röhr.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band
WHERE {
  VALUES ?person { 
    dbr:Peter_Schorowsky 
    dbr:Matthias_Röhr 
  }
  
  ?person dbo:band ?band .
}
```

This query uses the `VALUES` clause to specify the two individuals of interest and retrieves their associated bands using the `dbo:band` property.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
573,7,train,Give me the work of John Quincy Adams.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?workTitle
WHERE {
  ?work dbo:author dbr:John_Quincy_Adams .
  ?work rdfs:label ?workTitle .
  FILTER (lang(?workTitle) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
5,14,train,"Give me the entity in the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award
WHERE {
    ?rubenColonTarrats a dbo:Person ;
                       foaf:name ""Rubén Colón Tarrats""@en .
    
    ?rubenColonTarrats dbo:musicalArtist ?band .
    FILTER EXISTS { ?band a dbo:Band } .

    ?band dbo:award ?award .
}
```

This query does the following:
- Identifies Rubén Colón Tarrats as a person.
- Finds his associated musical artist, ensuring it is classified as a band.
- Retrieves any awards that this band has received.",3,4,4,3,1,3,2,20,0,0,20990,0,0.0,0
495,8,train,Give me the father of the child of Princess Charlotte of Saxe-Hildburghausen.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . ?v0 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childFather
WHERE {
  ?princess a dbo:Person ;
            foaf:name ""Princess Charlotte of Saxe-Hildburghausen""@en .
  
  ?princess dbo:child ?child .
  
  ?child dbo:father ?childFather .
}
```

5. **Optimize Query Logic:** The query is structured to first identify Princess Charlotte, then her children, and finally the fathers of those children.

6. **Validate Completeness and Precision:** This query should accurately retrieve the father(s) of any child(ren) of Princess Charlotte by leveraging DBpedia's ontology properties for familial relationships.",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
839,38,train,"Give me the band of the member of Böhse Onkelz and band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?boBand ?chBand
WHERE {
  # Find a member of Böhse Onkelz and their band
  ?member dbo:bandMemberOf <http://dbpedia.org/resource/Böhse_Onkelz> .
  ?member dbo:band ?boBand .

  # Find Charlie Huhn's band and ensure it is a musical artist
  <http://dbpedia.org/resource/Charlie_Huhn> dbo:band ?chBand .
  ?chBand rdf:type dbo:MusicalArtist .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
773,18,train,Give me the parent of Carloman of Bavaria and spouse of Louis the German and parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person
WHERE {
  ?carloman dbo:parent ?person .
  FILTER(STR(?carloman) = ""Carloman_of_Bavaria"") .

  ?charles dbo:parent ?person .
  FILTER(STR(?charles) = ""Charles_the_Fat"") .

  ?louis dbp:spouse ?person .
  FILTER(STR(?louis) = ""Louis_the_German"") .
}
```

### Explanation

- **PREFIX:** Define prefixes for DBpedia ontology and properties.
- **SELECT DISTINCT ?person:** We want to find distinct individuals who satisfy all conditions.
- **WHERE Clause:**
  - `?carloman dbo:parent ?person .` finds the parent of Carloman of Bavaria.
  - `FILTER(STR(?carloman) = ""Carloman_of_Bavaria"")` ensures we are referring to Carloman of Bavaria.
  - `?charles dbo:parent ?person .` finds the parent of Charles the Fat.
  - `FILTER(STR(?charles) = ""Charles_the_Fat"")` ensures we are referring to Charles the Fat.
  - `?louis dbp:spouse ?person .` finds the spouse of Louis the German.
  - `FILTER(STR(?louis) = ""Louis_the_German"")` ensures we are referring to Louis the German.

This query will return the individual who is the parent of both Carloman of Bavaria and Charles the Fat, and also the spouse of Louis the German.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
445,17,train,Give me the award of the commander in Battle of Saint-Mihiel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?award 
WHERE {
  ?battle dbo:name ""Battle of Saint-Mihiel""@en .
  ?battle dbo:commander ?commander .
  ?commander dbo:receivedAward ?award .
}
```",2,2,3,2,1,3,3,71,0,0,26,0,0.0,0
839,1,train,Give me the band of Peter Schorowsky.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . },"```sparql
SELECT ?bandName WHERE {
  ?person foaf:name ""Peter Schorowsky""@en .
  ?person dbo:musicalArtist ?band .
  ?band rdfs:label ?bandName .
  FILTER(LANG(?bandName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
445,32,train,"Give me the entity in the residence, that is a country, of Anna Sharkey and death place of the awardee of Royal Astronomical Society.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity
WHERE {
  # Anna Sharkey's residence country
  OPTIONAL { 
    dbr:Anna_Sharkey dbo:residenceLocation ?residence .
    ?residence dbo:country ?entity .
  }

  # Death place of a Royal Astronomical Society awardee
  OPTIONAL {
    ?awardee dbo:awardReceived <http://dbpedia.org/resource/Royal_Astronomical_Society> ;
             dbo:deathPlace ?deathPlace .
    ?deathPlace dbo:country ?entity .
  }

  # Ensure the entity is a country and matches both conditions
  FILTER (?entity != dbr:NULL)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
935,6,train,Give me the death place of Abdul Raziq Bugti and headquarter of Provincial Assembly of Balochistan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdul_Raziq_Bugti> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Provincial_Assembly_of_Balochistan> <http://dbpedia.org/ontology/location> ?result . },"```sparql
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace ?headquarters
WHERE {
  # Retrieve death place of Abdul Raziq Bugti
  dbr:Abdul_Razzaq_Bugti dbo:deathPlace ?deathPlace .

  # Retrieve headquarters of the Provincial Assembly of Balochistan
  dbp:Provincial_Assembly_of_Balochistan dbp:headquarters ?headquarters .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
166,2,train,"Give me the force, that is an event and a societal event and a military conflict, of Manuel Hedilla.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force
WHERE {
  ?force dbo:wikiPageRedirects dbr:Manuel_Hedilla .
  ?force a dbo:Event .
  ?force a dbo:SocietalEvent .
  ?force a dbo:MilitaryConflict .
}
```

This query does the following:
- Uses `PREFIX` to define common namespaces for DBpedia.
- Selects entities (`?force`) that are events related to Manuel Hedilla.
- Ensures these entities are classified as an ""event,"" ""societal event,"" and ""military conflict.""",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
36,11,train,Give me the person born as the birth name of Ayo Makun.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT DISTINCT ?person ?personLabel WHERE {
  # Find Ayo Makun's birth name
  dbpedia:Oluwaseyi_Makun dbo:birthName ?birthName .
  
  # Find other people with the same birth name
  ?person a dbo:Person ;
          dbo:birthName ?birthName ;
          rdfs:label ?personLabel .
  
  FILTER(?person != dbpedia:Oluwaseyi_Makun) # Exclude Ayo Makun himself

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
465,29,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of Renée of France.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?child ?spouse
WHERE {
  # Ercole II d'Este's successor as Duke of Ferrara
  dbr:Ercole_II_d%27Este_(Duke_of_Ferrara) dbo:successor ?successor .
  
  # Successor must be royalty
  ?successor a dbo:Monarch .

  # Child of Ferdinand I, Holy Roman Emperor
  dbr:Ferdinand_I,_Holy_Roman_Emperor dbo:child ?child .

  # Child is successor of Renée of France
  dbr:Renée_of_France dbo:successor ?child .

  # Successor is spouse of the child
  ?successor dbo:spouse ?child .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
791,9,train,Give me the spouse of Taira no Tokuko and predecessor of Emperor Antoku.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find Taira no Tokuko's spouse
  ?tokuko dbo:spouse ?spouse .
  
  # Ensure the spouse is also the predecessor of Emperor Antoku
  ?antoku dbo:predecessor ?spouse .

  # Bind Taira no Tokuko and Emperor Antoku to their respective DBpedia resources
  VALUES ?tokuko { <http://dbpedia.org/resource/Taira_no_Tokuko> }
  VALUES ?antoku { <http://dbpedia.org/resource/Emperor_Antoku> }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
582,37,train,"Give me the figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?figure
WHERE {
  ?figure rdfs:label ""--10-19""@en .
  ?figure dbo:athlete true .
  ?figure dbo:soccerManager true .
  ?figure dbo:sportsManager true .

  ?child dbo:parent ?figure .
  ?child dbp:name ""Kazuaki Nagasawa""@en .
}
```

This query assumes:
- `rdfs:label` is used for the name ""--10-19"".
- `dbo:athlete`, `dbo:soccerManager`, and `dbo:sportsManager` are properties indicating the roles.
- `dbo:parent` links a child to their parent.",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
41,0,train,Give me the party of Mark Durkan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Mark Durkan""@en .
  OPTIONAL { 
    ?person dbo:party ?party .
  }
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
456,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalName ?organization
WHERE {
  ?professional dbo:occupation ?profession .
  ?professional foaf:name ?professionalName .
  OPTIONAL { ?professional dbo:worksFor ?organization . }
  FILTER (regex(?profession, ""Professional"", ""i"")) # Adjust regex based on specific profession if known
}
ORDER BY ?professionalName",1,1,2,1,1,3,3,71,0,172,39640,0.0,0.0,0
839,15,train,"Give me the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personName WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthDate ?birthDate .
  ?person foaf:name ?personName .

  OPTIONAL { 
    ?page foaf:primaryTopic ?person .
    ?page foaf:topic ?kevinRussellPage .
    FILTER(STR(?kevinRussellPage) = ""http://dbpedia.org/resource/Kevin_Russell_(musician)"")
  }
}
```",2,3,3,2,1,3,3,71,0,50661,1,0.0,0.0,0
329,11,train,"Give me the entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthplace
WHERE {
  ?bates a dbo:Loyalist .
  ?bates foaf:name ""Robert Bates"" .
  ?bates dbo:birthPlace ?birthplace .

  FILTER EXISTS { ?birthplace rdf:type dbo:Organisation . }
  FILTER EXISTS { ?birthplace rdf:type dbo:Country . }
}
```

### Explanation

- **PREFIX**: Define prefixes for DBpedia ontology and RDF.
- **SELECT**: We are interested in the birthplace (`?birthplace`).
- **WHERE**:
  - Identify Robert Bates as a loyalist with the name ""Robert Bates"".
  - Retrieve his birthplace using `dbo:birthPlace`.
  - Use `FILTER EXISTS` to ensure the birthplace is both an organisation and a country.

This query should return the entity that matches all specified conditions when executed against DBpedia.",2,4,3,2,1,2,3,28,0,0,846,0,0.0,0
987,30,train,"Give me the birth place of Moamer Kasumović and birth place of Dado Polumenta and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceKadhafi ?birthPlacePrso ?country
WHERE {
  # Birth place of Moamer Kadhafi
  dbr:Moamer_Kadhafi dbo:birthPlace ?birthPlaceKadhafi .

  # Birth place of Dado Pršo
  dbr:Dado_Pršo dbo:birthPlace ?birthPlacePrso .

  # Find a country in the Central European Time region
  ?country a dbo:Country ;
           dbo:timeZone dbr:Central_European_Time .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
865,25,train,Give me the father of AK Abdul Momen and father of the child of Abu Ahmad Abdul Hafiz.,SELECT ?result WHERE { <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?fatherOfAKAbdulMomen ?fatherOfChildOfAbuAhmadAbdulHafiz
WHERE {
  # Father of AK Abdul Momen
  ?akAbdulMomen dbo:birthName ""AK Abdul Momen""@en .
  ?akAbdulMomen foaf:parent ?fatherOfAKAbdulMomen .

  # Child of Abu Ahmad Abdul Hafiz
  ?abuAhmadAbdulHafiz dbo:birthName ""Abu Ahmad Abdul Hafiz""@en .
  ?childOfAbuAhmadAbdulHafiz foaf:parent ?abuAhmadAbdulHafiz .

  # Father of that child
  ?childOfAbuAhmadAbdulHafiz foaf:parent ?fatherOfChildOfAbuAhmadAbdulHafiz .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
582,21,train,Give me the figure known as --10-19 and reference to the residence of Hirotaka Sugawara.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?figureLabel ?residenceLabel
WHERE {
  # Find the figure known as ""--10-19""
  ?figure rdfs:label ""-10-19""@en .
  
  # Get Hirotaka Sugawara's residence
  OPTIONAL {
    dbr:Hirotaka_Sugawara dbo:residence ?residence .
    ?residence rdfs:label ?residenceLabel .
  }
  
  # Bind labels for readability
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
382,5,train,Give me the award of Harry Combes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Harry Combes""@en .
  
  OPTIONAL { 
    ?person dbo:honoraryAward ?award .
  }
  
  OPTIONAL { 
    ?person dbo:award ?award .
  }

  FILTER (lang(?award->rdfs:label) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
645,31,train,Give me the commander in the force of the commander in Siege of Madrid and military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderInForceOfCommander ?commanderInSiegeOfMadrid ?militaryForce
WHERE {
  # Find the commander involved in the Siege of Madrid
  ?siegeEvent dbo:eventLocation dbr:Siege_of_Madrid .
  ?siegeEvent dbo:participatedIn dbr:Spanish_Civil_War .

  ?commanderInSiegeOfMadrid dbo:role ""Commander"" ;
                            dbo:associatedWith ?siegeEvent .

  # Find the commander in charge of the commander involved in the Siege of Madrid
  ?militaryForce dbo:participatedIn dbr:Spanish_Civil_War .
  ?commanderInForceOfCommander dbo:role ""Commander"" ;
                               dbo:commanded ?militaryForce .
  
  # Link the commanders through their military forces
  ?commanderInSiegeOfMadrid dbo:commandedBy ?commanderInForceOfCommander .

}
```",4,4,5,3,2,3,3,71,0,0,53,0,0.0,0
465,2,train,Give me the successor of Renée of France.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor
WHERE {
  ?renée a dbo:Monarch ;
         dbp:name ""Renée of France""@en .
  ?renée dbo:predecessor ?successor .
}
```

This query assumes that Renée of France is represented as an instance of `dbo:Monarch` and uses the property `dbp:name` to identify her. The `dbo:predecessor` property is used to find who succeeded her.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
236,2,train,"Give me the person decedent, that is a politician and an office holder, at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?name
WHERE {
  ?person a dbo:Politician .
  ?person dbo:officeHolder ?true .
  ?person dbo:deathPlace dbr:Quincy,_Massachusetts .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
839,0,train,Give me the band of Kevin Russell (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?person foaf:name ""Kevin Russell""@en .
  ?person dbo:associatedBand ?band .
}
```

This query assumes:
- `foaf:name` is used to identify Kevin Russell by name.
- `dbo:associatedBand` (or a similar property) links the person to their band.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
365,3,train,Give me the birth name of Symon Petliura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName
WHERE {
  ?person foaf:name ""Symon Petliura""@en .
  OPTIONAL { ?person foaf:givenName ?birthName . }
}
```

This query assumes that Symon Petliura's full name is stored under the `foaf:name` property and his birth name might be available under `foaf:givenName`. The use of `OPTIONAL` ensures that even if the birth name isn't explicitly listed, we still retrieve other relevant information.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
465,31,train,"Give me the spouse of Archduchess Barbara of Austria and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v0 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseOfBarbara ?successorOfAlfonsoII
WHERE {
  # Find spouse of Archduchess Barbara of Austria
  ?barbara a dbo:Archduchess ;
           foaf:name ""Barbara of Austria"" .
  
  ?barbara dbp:spouse ?spouseOfBarbara .

  # Find successor of Alfonso II d'Este, Duke of Ferrara
  ?alfonsoI a dbo:Duke ;
            foaf:name ""Alfonso I d'Este, Duke of Ferrara"" .
  
  ?alfonsoI dbp:child ?alfonsoII .
  
  ?alfonsoII a dbo:Duke ;
             foaf:name ""Alfonso II d'Este, Duke of Ferrara"" .

  ?alfonsoII dbp:succeededBy ?successorOfAlfonsoII .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
124,11,train,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  ?battery rdf:type dbo:MilitaryUnit .
  ?battery dbp:name ""A Field Battery, Royal Australian Artillery"" .
  
  ?battery dbp:commander ?commander .

  ?conflict rdf:type dbo:MilitaryConflict ;
            dbo:participatingMilitaryUnit ?battery .

  ?event rdf:type dbo:SocietalEvent ;
         dbo:participant ?commander .

}
```",2,4,3,2,1,3,3,71,0,0,109,0,0.0,0
839,26,train,"Give me the band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandName
WHERE {
  # Peter Schorowsky is a member of a band
  ?member dbr:Peter_Schorowsky .
  ?member dbo:bandMember ?band .

  # The band is classified as both a ""band"" and a ""group""
  ?band rdf:type dbo:Band .
  ?band rdf:type dbo:MusicalGroup .

  # Get the name of the band
  ?band rdfs:label ?bandName .
  
  FILTER (lang(?bandName) = 'en')
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
102,14,train,"Give me the native of the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/residence> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?nativeLanguage
WHERE {
  ?athlete a dbo:Athlete ;
           dbo:residence dbr:Dewsbury .
  
  ?residence rdf:type dbo:Settlement ;
             dbo:nativeLanguage ?nativeLanguage ;
             dbo:resident ?athlete .

  FILTER (?nativeLanguage = dbr:English)
}
```",3,6,4,3,1,3,2,20,0,0,100,0,0.0,0
976,33,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of Mustafa Şentop.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?mayorOffice ?referenceOrganization
WHERE {
  # Find the office of the mayor who is Turkish, a politician, and an office holder
  ?mayor dbo:nationality dbr:Turkey ;
         rdf:type dbo:Politician ;
         rdf:type dbo:PublicOfficial .
  
  ?mayor dbo:office ?mayorOffice .

  # Ensure Mustafa Şentop is the mayor in question
  ?mayor rdfs:label ""Mustafa Şentop""@en .

  # Find the reference organization that is a political party, Turkish, and related to Millet İttifakı
  ?referenceOrganization rdf:type dbo:PoliticalParty ;
                         dbo:nationality dbr:Turkey ;
                         dbo:member dbr:Millet_İttifakı .
  
  OPTIONAL {
    # Ensure the reference organization is connected through Mustafa Şentop
    ?mayor dbo:memberOf ?referenceOrganization .
  }
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
453,0,train,Give me the religion of Newfoundland Colony.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newfoundland_Colony> <http://dbpedia.org/ontology/religion> ?result . },"```sparql
SELECT ?religion
WHERE {
  dbpedia:Newfoundland_Colony dbo:religion ?religion .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
933,31,train,"Give me the reference to Alan Warner and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  # Find Alan Warner and his association with The Ramones
  dbr:Alan_Warner dbo:associatedBand dbr:The_Ramones .

  # Find bands associated with The Ramones that are both an artist and a musical artist
  dbr:The_Ramones dbo:associatedBand ?band .
  ?band rdf:type dbo:MusicalArtist .
  ?band rdf:type dbo:Artist .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
326,6,train,Give me the person decedent at France and resident of Berkshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Berkshire> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person
WHERE {
  ?person dbo:deathPlace dbr:France .
  ?person dbo:residence dbr:Berkshire .
}
```

This query selects individuals (`?person`) who have a death place in France and a residence in Berkshire. The properties `dbo:deathPlace` and `dbo:residence` are used to represent the relationships of being a decedent at a location and residing in a location, respectively.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
200,3,train,Give me the band of Revenge (Canadian band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Revenge_(Canadian_band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandLabel ?memberLabel WHERE {
  ?band a dbo:Band ;
        rdfs:label ""Revenge""@en ;
        dbp:country dbr:Canada .
  
  OPTIONAL { 
    ?band dbo:bandMember ?member .
    ?member rdfs:label ?memberLabel .
  }
  
  SERVICE <http://dbpedia.org/sparql> {
    VALUES ?bandLabel { ""Revenge"" }
  }

  FILTER(LANG(?bandLabel) = 'en')
}
```

4. **Optimize Query Logic:** The query uses `OPTIONAL` to include band members if available, and a `SERVICE` clause to ensure the correct label is matched.

5. **Validate Completeness and Precision:** This query should accurately retrieve the band ""Revenge"" from Canada and list its members if they are available in DBpedia.",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
274,3,train,"Who is the person born, that is a musical artist, as John Birks Gillespie?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthName dbr:John_Birks_Gillespie .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
892,13,train,Give me the landmark at elevation of the award of Anna Ishii.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark WHERE {
  # Step 1: Find the award associated with Anna Ishii
  ?award dbo:recipient dbr:Anna_Ishii .
  
  # Step 2: Determine the elevation related to this award (assuming there's a property for elevation)
  ?award dbo:elevation ?elevation .

  # Step 3: Find landmarks at that specific elevation
  ?landmark dbo:elevation ?elevation .
}
```

**Explanation:**
- We start by identifying the award associated with Anna Ishii using `dbo:recipient`.
- Next, we assume there is a property `dbo:elevation` for the award to find its elevation.
- Finally, we look for landmarks that have the same elevation as the award.

This query assumes certain properties (`dbo:elevation`) exist and are correctly linked in DBpedia. Adjustments may be needed based on actual data availability.",2,2,3,2,1,3,3,71,0,0,258,0,0.0,0
166,3,train,Who is the military force of Spanish Civil War?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT ?militaryForce WHERE {
  ?event dbo:wikiPageRedirects db:Q1116 .
  ?event dbo:participatingMilitaryForce ?militaryForce .
  ?militaryForce a dbo:MilitaryUnit .
}
```

This query does the following:
- Identifies the Spanish Civil War using its DBpedia resource identifier (`db:Q1116`).
- Retrieves military forces that participated in this event.
- Ensures that the retrieved entities are of type `dbo:MilitaryUnit`.",1,1,2,1,1,3,2,20,0,0,514,0,0.0,0
456,32,train,Give me the professional in the alter ego of The Shadow and spouse of the actor of Pacific Drive.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional (SAMPLE(?spouse) AS ?actorSpouse)
WHERE {
  # Find the alter ego of The Shadow and their professional identity
  ?shadowAlterEgo dbo:alterEgo dbr:The_Shadow .
  ?shadowAlterEgo dbo:occupation ?professional .

  # Find the actor of Pacific Drive and their spouse
  ?pacificDriveActor dbo:actorInFilm dbr:Pacific_Drive .
  ?pacificDriveActor dbo:spouse ?spouse .
}
```

This query assumes:
- There is a property `dbo:alterEgo` linking an alter ego to ""The Shadow.""
- The occupation of the alter ego can be found using `dbo:occupation`.
- An actor's involvement in ""Pacific Drive"" is represented by `dbo:actorInFilm`.
- Spouses are linked via `dbo:spouse`.

Note: This query uses `SAMPLE(?spouse)` to handle cases where there might be multiple spouses, returning one sample.",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
508,1,train,Give me the birthplace of Ma Bufang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ma_Bufang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  dbpedia:Ma_Bufang dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
98,18,train,"Give me the entity in the region, that is a country, of Philippine Standard Time and birth place of Paolo Ballesteros.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  # Find the country associated with Philippine Standard Time
  ?pst dbo:timeZone dbr:Philippine_Standard_Time .
  ?region dbo:hasCountry ?country .
  ?pst dbo:inRegion ?region .

  # Find Paolo Ballesteros' birthplace
  dbr:Paolo_Ballesteros dbo:birthPlace ?birthPlace .

  # Match the country with the birthplace
  FILTER (?country = ?birthPlace)
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
573,22,train,"Give me the person decedent at Massachusetts and parent of the author, that is a politician and an office holder, of Exchequer Standards.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?authorName WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolder true ;
          dbo:decedentPlace dbr:Massachusetts .
  
  ?parentOfAuthor dbo:parent ?person ;
                  dbo:child ?author .

  ?author a dbo:Writer ;
          rdfs:label ?authorName .

  OPTIONAL {
    ?person dbo:relatedTo dbr:Exchequer_Standards .
  }
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
976,24,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of Naci Bostancı.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office ?mayorName WHERE {
  ?office a dbo:Mayor ;
          dbo:incumbent ?mayor .
  
  ?mayor foaf:name ?mayorName ;
         dbo:nationality dbr:Turkey ;
         dbo:politicalParty dbr:Nation_Alliance_(Turkey) .

  FILTER (CONTAINS(LCASE(?mayorName), ""naci bostancı""))
}
```

This query does the following:
- Selects the office and the name of the mayor.
- Ensures that the office is a Mayor (`dbo:Mayor`).
- Checks if the incumbent of this office is Naci Bostancı by filtering on his name.
- Confirms that the mayor is Turkish and a member of Nation Alliance (Turkey).",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
326,2,train,Who is the professional in Writer?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Writer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer WHERE {
  ?writer a dbo:Writer .
}
```

This query selects distinct individuals who are classified as writers in DBpedia.",1,1,2,1,1,3,2,20,0,0,6466,0,0.0,0
274,13,train,"Give me the professional in  and band member of the person born, that is a musical artist, as John Birks Gillespie.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalRole ?bandMember
WHERE {
  # Identify John Birks Gillespie in DBpedia
  dbr:John_Birks_Gillespie a dbo:MusicalArtist .

  # Find professional roles related to being a musical artist
  OPTIONAL { 
    dbr:John_Birks_Gillespie dbo:profession ?professionalRole .
  }

  # Find band memberships
  OPTIONAL {
    dbr:John_Birks_Gillespie dbo:bandMember ?bandMember .
  }
}
```",3,4,4,2,2,2,3,28,0,0,8,0,0.0,0
826,33,train,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?louisI rdf:type dbo:Monarch ;
          dbo:spouse ?annaMagdalenaAppel .
  
  ?annaMagdalenaAppel rdf:type dbo:Person .

  ?child dbo:parent ?louisI, ?annaMagdalenaAppel ;
         rdf:type dbo:Monarch .

  ?successor dbo:predecessor ?child .
}
```",4,6,5,3,2,3,3,71,0,2,1,0.0,0.0,0
933,8,train,"Give me the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?band
WHERE {
  ?alan a dbo:Musician ;
        foaf:name ""Alan Warner"" .
  
  ?alan dbo:bandMember ?band .

  ?band rdf:type ?type1, ?type2 .
  FILTER (?type1 = dbo:Band && ?type2 IN (dbo:Group, dbo:Organisation))
}
```

This query does the following:
- Identifies Alan Warner as a musician.
- Finds bands he is a member of.
- Ensures these bands are classified both as a `Band` and either a `Group` or an `Organisation`.",1,4,2,1,1,3,3,71,0,0,2,0,0.0,0
839,14,train,"Give me the band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Charlie Huhn""@en .
  
  ?membership dbo:musicGroup ?band ;
              dbo:member ?person .

}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
507,6,train,"Give me the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?movieLabel
WHERE {
  ?movie dbo:starring dbr:Beryl_Reid .
  ?movie rdf:type dbo:Film .
  ?movie rdf:type dbo:CreativeWork .
  ?movie rdfs:label ?movieLabel .
  FILTER (lang(?movieLabel) = 'en')
}
```",1,3,2,1,1,3,3,71,0,0,9,0,0.0,0
170,18,train,Give me the domain of the profession of John Scholey and birth place of Era Ziganshina.,SELECT ?result WHERE { <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v2 . },"```sparql
SELECT DISTINCT ?professionDomain WHERE {
  ?scholey dbo:wikiPageRedirects dbpedia-en:John_Scholey .
  ?scholey dbo:occupation ?profession .
  ?profession dbo:fieldOfActivity ?professionDomain .
}
UNION
SELECT DISTINCT ?birthPlace WHERE {
  ?ziganshina dbo:wikiPageRedirects dbpedia-en:Era_Ziganshina .
  ?ziganshina dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
933,33,train,Give me the reference to the birth name of the professional in Musician and band of Mike Elliott (saxophonist).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName
WHERE {
  ?person a dbo:Saxophonist ;
          foaf:name ""Mike Elliott"" .
  
  OPTIONAL { 
    ?person foaf:givenName ?firstName ;
            foaf:familyName ?lastName .
  }
  
  OPTIONAL {
    ?person dbo:birthName ?birthName .
  }

  FILTER (regex(str(?person), ""Mike Elliott""))
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
453,6,train,"Give me the religion of the author, that is a cardinal and a cleric, of Apologia Pro Vita Sua.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>. <http://dbpedia.org/resource/Apologia_Pro_Vita_Sua> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cardinal>. ?v0 <http://dbpedia.org/ontology/religion> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?authorName ?religion
WHERE {
  # Identify the book and its author
  dbr:Apologia_Pro_Vita_Sua dbo:author ?author .

  # Ensure the author is a cardinal
  ?cardinal rdf:type <http://dbpedia.org/ontology/Cardinal> .
  ?cardinal skos:prefLabel ?authorName .
  FILTER (lang(?authorName) = 'en') .
  ?author foaf:name ?authorName .

  # Ensure the author is also a cleric
  ?cleric rdf:type <http://dbpedia.org/ontology/Cleric> .
  ?cleric skos:prefLabel ?authorName .
  FILTER (lang(?authorName) = 'en') .

  # Match the same person as both cardinal and cleric
  FILTER (?cardinal = ?cleric)

  # Retrieve the religion of the author
  ?author dbo:religion ?religion .
}
```",2,4,3,2,1,2,2,9,0,0,2,0,0.0,0
417,16,train,"Who is the father of the leader, that is a royalty, of Colony of Greenland?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father
WHERE {
  ?colony dbo:leader ?leader .
  FILTER (str(?colony) = ""Colony of Greenland"") .

  ?leader a dbo:Royalty .  # Assuming 'dbo:Royalty' is the class for royalty

  ?leader foaf:parent ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
433,15,train,"Give me the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:MusicalArtist .
  ?person a dbo:Artist .
  ?person dbo:birthDate ?birthDate .

  OPTIONAL { 
    ?person foaf:name ""Paul Chambers""@en .
  }
}
```",2,4,3,2,1,3,3,71,1,71269,0,1.4031149151115476e-05,1.0,2.8061904561462583e-05
41,10,train,Give me the party of the person born as David Declan Costello.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyLabel
WHERE {
  ?person a dbo:Person ;
          foaf:name ""David Declan Costello""@en .
  
  OPTIONAL { 
    ?person dbo:politicalParty ?party .
    ?party rdfs:label ?partyLabel .
    FILTER(LANG(?partyLabel) = 'en')
  }
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
445,0,train,Give me the entity in England.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity
WHERE {
  ?entity dbo:location ?location .
  FILTER (
    EXISTS { 
      ?location dbp:country ""England""@en .
    }
  )
}
```",1,1,2,1,1,3,3,71,3546,12817,0,0.21670842754996028,1.0,0.35622080466120853
129,11,train,Give me the associated musical artist of the person born as Tahj Malik Chandler.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . }","```sparql
SELECT ?artist WHERE {
  ?person foaf:name ""The Weeknd""@en .
  ?person dbo:birthName ""Tahj Malik Chandler"" .
  ?person dbo:associatedMusicalArtist ?artist .
}
```",2,2,3,2,1,2,3,28,0,0,8,0,0.0,0
281,8,train,"Give me the commander in the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Roy Boehm's participation in military conflicts
  ?event dbo:militaryConflict true .
  ?event dbo:participatedIn dbr:Roy_Boehm .

  # Finding the commander of that event
  ?event dbo:commander ?commander .
  
  FILTER(?commander != dbr:Roy_Boehm) # Ensure the commander is not Roy Boehm himself
}
```",2,4,3,2,1,2,3,28,0,0,171,0,0.0,0
508,4,train,"Give me the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war
WHERE {
  ?huYukun a dbo:Person ;
           foaf:name ""Hu Yukun""@en .
  
  ?huYukun dbo:participatedIn ?war .

  ?war a dbo:MilitaryConflict ;
      dbo:societalEvent true .
}
```",1,3,2,1,1,3,2,20,0,0,4,0,0.0,0
976,9,train,Give me the office of Mustafa Şentop and office of Meral Akşener.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office
WHERE {
  VALUES ?person { 
    dbr:Mustafa_Şentop 
    dbr:Meral_Akşener 
  }
  
  OPTIONAL {
    ?person dbo:office ?office .
  }

  FILTER(?office != """")
}
ORDER BY ?person
```",2,2,3,1,2,3,3,71,0,2,1,0.0,0.0,0
826,38,train,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor
WHERE {
  # Find Prince Friedrich of Hesse and by Rhine's parent
  ?friedrich a dbo:Person ;
             dbo:parent ?parent .

  FILTER (str(?friedrich) = ""Prince_Friedrich_of_Hesse_and_by_Rhine"") .

  # Find the predecessor of this parent
  ?predecessor dbo:successor ?parent .

  # Find Louis I, Grand Duke of Hesse's child who is royalty
  ?louis a dbo:Person ;
         rdfs:label ""Louis_I,_Grand_Duke_of_Hesse""@en ;
         dbo:child ?child .

  FILTER (isLiteral(?child) && str(?child) != """") .
  
  # Ensure the child is royalty
  ?child a dbo:Royalty .

  # Find the successor of this royal child
  ?successor dbo:predecessor ?child .

  # Link predecessor and successor
  ?predecessor = ?successor .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
459,11,train,Give me the person born as the birth name of Kevin Stitt.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Kevin Stitt""@en .
}
```

This query uses the `dbo:birthName` property to find entities (persons) whose birth name is ""Kevin Stitt."" The language tag `@en` ensures that we are matching against English-language data.",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
495,0,train,Give me the child of Frederick I of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_I_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  dbr:Friedrich_I_of_Württemberg dbo:hasChild ?child .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
130,13,train,"Give me the figure known as the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v1 <http://dbpedia.org/ontology/director> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?figure
WHERE {
  ?figure a dbo:Film .
  ?figure dbo:subjectOf ?organization .
  ?organization a dbo:SoccerClub ;
                a dbo:Organisation .

  ?native dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Madison,_Alabama ;
          dbo:occupation dbo:Coolie ;
          dbo:occupation dbo:CollegeCoach .

  ?figure dbo:director ?native .
}
```

### Explanation:
- **PREFIXes:** Define common prefixes for DBpedia ontology and properties.
- **SELECT DISTINCT ?figure:** We want to find distinct figures that match our criteria.
- **WHERE Clause:**
  - `?figure a dbo:Film`: The figure is a film.
  - `?figure dbo:subjectOf ?organization`: The film is related to an organization.
  - `?organization a dbo:SoccerClub ; a dbo:Organisation`: The organization is both a soccer club and an organization.
  - `?native dbo:nationality dbr:United_States ; dbo:birthPlace dbr:Madison,_Alabama ; dbo:occupation dbo:Coolie ; dbo:occupation dbo:CollegeCoach`: The native is from the USA, born in Madison, Alabama, and has occupations as a coach and college coach.
  - `?figure dbo:director ?native`: The figure (film) is directed by this native.

This query assumes that the relationships between films, organizations, and individuals are represented in DBpedia with these properties. Adjustments may be needed based on actual data availability and structure.",3,7,4,3,1,3,2,20,0,0,3,0,0.0,0
124,15,train,"Give me the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v1 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war
WHERE {
  ?war a dbo:MilitaryConflict ;
       a dbo:SocietalEvent .
  
  ?unit a dbo:MilitaryUnit ;
        dbo:nationality dbr:Australia ;
        dbo:partOf dbr:'A_Battery,_Royal_Australian_Artillery' .

  ?reference a dbo:Organization ;
             dbo:nationality dbr:Australia ;
             dbo:militaryUnit ?unit .
  
  ?war dbo:reference ?reference .
}
```",2,7,3,2,1,3,3,71,0,0,6,0,0.0,0
166,8,train,"Give me the entity in the territory administered, that is a country, from Madrid.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country
WHERE {
  dbr:Madrid dbo:administrativeTerritory ?territory .
  ?territory rdf:type dbo:Country .
  BIND(?territory AS ?country)
}
```

This query does the following:
- Selects entities (`?country`) that are countries.
- Matches Madrid with its administrative territories using `dbo:administrativeTerritory`.
- Filters these territories to ensure they are of type `dbo:Country`.",2,3,3,2,1,3,2,20,0,0,12023,0,0.0,0
826,35,train,Give me the spouse of the child of Johann Heinrich Appel and predecessor of the parent of Prince Friedrich of Hesse and by Rhine.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse
WHERE {
  # Johann Heinrich Appel and his child
  ?appel dbo:child ?child .
  FILTER (str(?appel) = ""Johann_Heinrich_Appel"") .

  # Spouse of the child
  ?child dbp:spouse ?spouse .

  # Parent of Prince Friedrich of Hesse and by Rhine
  ?prince dbo:parent ?parent .
  FILTER (str(?prince) = ""Prince_Friedrich_of_Hesse_and_by_Rhine"") .

  # Predecessor of the parent
  ?predecessor dbp:successor ?parent .
}",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
170,14,train,Give me the entity in Russia and birth place of the awardee of People's Artist of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?entity ?birthPlace
WHERE {
  ?award dbr:People's_Artist_of_Russia .
  ?award dbo:recipient ?person .
  ?person rdfs:label ?awardee .
  FILTER (LANG(?awardee) = 'en') .

  OPTIONAL { 
    ?person dbp:birthPlace ?birthPlace .
    ?birthPlace dbo:country dbr:Russia .
  }

  BIND(?person AS ?entity)
}
```",3,3,4,2,2,2,3,28,0,0,12,0,0.0,0
216,10,train,Give me the party of the awardee of Australian Defence Medal.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeName ?partyName
WHERE {
  ?person dbo:award dbr:Australian_Defence_Medal .
  ?person foaf:name ?awardeeName .
  
  OPTIONAL {
    ?person dbo:memberOfParty ?party .
    ?party foaf:name ?partyName .
  }
}
```",2,2,3,2,1,2,3,28,0,7,5,0.0,0.0,0
888,2,train,Give me the military force of War in Donbas (2014–2022).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?force ?country WHERE {
  # Find resources related to the War in Donbas
  ?event dbo:wikiPageRedirects dbr:War_in_Donbass .
  
  # Identify military forces involved in the event
  ?event dbo:militaryConflictParticipant ?participant .
  ?participant rdf:type dbo:MilitaryUnit ;
               dbo:country ?force .

  # Optionally, include countries directly involved
  OPTIONAL {
    ?participant dbo:country ?country .
  }

  # Filter by time constraint (2014-2022)
  FILTER (?event dbo:date >= ""2014-01-01""^^xsd:date && 
          ?event dbo:date <= ""2022-12-31""^^xsd:date)
}
ORDER BY ?force
```",1,1,2,1,1,3,2,20,0,0,135,0,0.0,0
715,39,train,"Give me the commander in Spanish Civil War and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?officeLeader WHERE {
  # Find Carlos Franco Iribarnegaray
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@en .
  
  # Check if he was a commander in the Spanish Civil War
  OPTIONAL { 
    ?person dbo:role ?role .
    ?role dbo:spanishCivilWarParticipant true ;
          rdfs:label ?commanderLabel .
    FILTER(CONTAINS(LCASE(?commanderLabel), ""commander""))
  }
  
  # Check if he led an office that is a government agency and organization
  OPTIONAL {
    ?person dbo:headOf ?office .
    ?office rdf:type dbo:GovernmentAgency ;
            rdf:type dbo:Organization ;
            rdfs:label ?officeLeaderLabel .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
456,11,train,Give me the spouse of the actor of Pacific Drive.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse
WHERE {
  ?movie rdf:type dbo:Film .
  ?movie rdfs:label ""Pacific Drive""@en .

  ?movie dbo:starring ?actor .
  
  OPTIONAL { 
    ?actor dbp:spouse ?spouse .
  }
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
216,3,train,"Give me the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?organisation WHERE {
  # Identify the resource for Croatia U21
  VALUES ?croatiaU21 { dbr:Croatia_national_under-21_football_team }
  
  # Find an organisation or club related to Croatia U21
  ?croatiaU21 dbo:partOf ?organisation .
  
  # Ensure that the organisation is also a soccer club
  ?organisation rdf:type dbo:SoccerClub .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
892,27,train,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity
WHERE {
  ?party rdf:type dbo:PoliticalParty ;
         dbo:member dbr:Andrea_Cozzolino .
  
  ?administration dbo:hasMember ?party .
  ?administration dbo:country dbr:Italy .

  ?entity dbo:partOf ?administration ;
          rdf:type dbo:Region, dbo:Settlement, dbo:AdministrativeRegion ;
          dbo:country dbr:Italy .

}
```",3,9,4,3,1,3,3,71,0,0,587,0,0.0,0
935,14,train,"Give me the headquarter of the office of the native of Balochistan, Pakistan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . ?v0 <http://dbpedia.org/ontology/location> ?result . ?v2 <http://dbpedia.org/property/office> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?headquarter
WHERE {
  ?person dbo:nativePlace dbr:Balochistan_(Pakistan) .
  ?office dbo:hasHeadquarters ?headquarter .
  ?office dbo:associatedPerson ?person .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
93,11,train,"Give me the capital of the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve and death place of John Weir Troy.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/John_Weir_Troy> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital
WHERE {
  # Lake Clark National Park and Preserve's headquarter that is a region and settlement
  ?park dbr:Lake_Clark_National_Park_and_Preserve ;
        dbo:headquarters ?headquarter .
  
  ?headquarter rdf:type/rdfs:subClassOf* dbo:Settlement, dbo:Region .

  # John Weir Troy's death place
  dbr:John_Weir_Troy dbo:deathPlace ?deathPlace .

  # Match the headquarter with the death place
  FILTER (?headquarter = ?deathPlace)

  # Find the capital of this location
  ?headquarter dbo:capital ?capital .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
456,2,train,Give me the band of Alan Doyle.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?bandName WHERE {
  ?person dbo:givenName ""Alan"" .
  ?person dbo:familyName ""Doyle"" .
  ?person dbo:associatedBand ?band .
  ?band rdfs:label ?bandName .
  FILTER(LANG(?bandName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
130,4,train,Give me the award of Živko Ključe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award
WHERE {
  dbr:Živko_Ključević dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
839,31,train,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of Peter Schorowsky.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandKevin ?bandPeter
WHERE {
  # Kevin Russell and his band
  OPTIONAL {
    dbr:Kevin_Russell (dbo:associatedBand) ?bandKevin .
    FILTER EXISTS { ?bandKevin dbo:genre dbr:Musical_artist }
  }

  # Peter Schorowsky and his band
  OPTIONAL {
    dbr:Peter_Schorowsky (dbo:associatedBand) ?bandPeter .
    FILTER EXISTS { ?bandPeter dbo:genre dbr:Musical_artist }
  }
}
```

### Explanation

- **PREFIX**: Define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT**: Choose variables `?bandKevin` and `?bandPeter` to return the bands.
- **WHERE**:
  - Use `OPTIONAL` to handle cases where a band might not be explicitly linked.
  - For Kevin Russell, check if he is associated with a band (`dbo:associatedBand`) that has a genre of ""Musical artist.""
  - Similarly, for Peter Schorowsky, find his associated band and ensure it is a musical artist.

This query will return the bands associated with both individuals, ensuring they are recognized as musical artists.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
216,5,train,"Give me the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player ?organisation WHERE {
  ?player a dbo:SoccerPlayer ;
          foaf:name ""Džemal Berberović""@en .
  
  ?player dbo:playsFor ?organisation .

  ?organisation a dbo:SportsClub ;
                a dbo:Organization ;
                dbo:sport dbp:soccer .
}
```",1,4,2,1,1,3,3,71,0,0,10,0,0.0,0
976,29,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of Naci Bostancı and office of Mustafa Şentop.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?office
WHERE {
  # Define the individuals of interest
  VALUES (?person) { 
    dbr:Naci_Bostancı 
    dbr:Mustafa_Şentop 
  }
  
  # Ensure they are politicians and office holders
  ?person dbo:occupation dbr:Politician .
  ?person dbo:officeHolder ?office .

  # Filter by nationality
  ?person dbp:nationality dbr:Turkey .

  # Filter by political party membership
  ?person dbo:memberOfParty dbr:Nation_Alliance_(Turkey) .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
874,3,train,"Give me the writer, that is an artist and a musical artist, of Mezzanine (album).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  # Match the album Mezzanine and its writer
  dbr:Mezzanine dbo:composer ?writer .
  
  # Ensure the writer is an artist
  ?writer a dbo:Artist .

  # Ensure the writer is also a musical artist
  ?writer a dbo:MusicalArtist .
}
```",1,3,2,1,1,3,2,20,0,0,15,0,0.0,0
445,9,train,Give me the entity in England and death place of Patrick Moore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace
WHERE {
  VALUES ?person { dbr:Patrick_Moore }
  
  OPTIONAL {
    ?person dbo:birthPlace ?birthPlace .
    FILTER (lang(?birthPlace) = 'en' && regex(str(?birthPlace), ""England"", ""i""))
  }

  OPTIONAL {
    ?person dbo:deathPlace ?deathPlace .
  }
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
47,27,train,"Give me the office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office
WHERE {
  ?award a dbo:Award .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:position ?office .
  OPTIONAL { ?office dbo:country dbr:India . }
}
```

### Explanation:
- **PREFIX**: Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT ?office**: Select distinct offices to avoid duplicates.
- **WHERE Clause**:
  - `?award a dbo:Award`: Ensure the entity is an award.
  - `?award dbo:recipient ?awardee`: Connect the award to its recipient.
  - `?awardee dbo:position ?office`: Link the awardee to their office.
  - **OPTIONAL**: Use OPTIONAL to handle cases where the office might not have a direct country link, but we filter for India.

This query will return the offices of awardees of awards that are associated with India.",3,4,4,3,1,3,3,71,0,0,200,0,0.0,0
892,7,train,"Give me the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyName
WHERE {
  # Find Andrea Cozzolino's affiliation with a political party
  dbr:Andrea_Cozzolino dbo:memberOf ?party .
  
  # Ensure the entity is classified as a political party and an organization
  ?party rdf:type dbo:PoliticalParty ;
         rdf:type dbo:Organization .

  # Get the name of the political party
  ?party rdfs:label ?partyName .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
791,5,train,"Give me the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Emperor Go-Shirakawa's children
  ?parent dbo:spouse ?spouse .
  FILTER (str(?parent) = ""Emperor_Go-Shirakawa"")
  
  ?parent dbo:child ?child .

  # Ensure the child is an office holder and a royalty
  OPTIONAL { ?child dbo:officeHolderOf ?office . }
  OPTIONAL { ?child rdf:type dbo:Monarch . }

  FILTER EXISTS { ?child dbo:officeHolderOf ?office } .
  FILTER EXISTS { ?child rdf:type dbo:Monarch . }
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
129,17,train,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and associated musical artist of Saba (rapper).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?dreamvilleArtist ?sabaArtist
WHERE {
  # Find the organization associated with ""Dreamville Presents: Revenge""
  ?event dbr:Dreamville_Presents:_Revenge .
  ?event dbo:performer ?organization .

  # Find the musical artist associated with this organization
  OPTIONAL { 
    ?organization dbo:musicalArtist ?dreamvilleArtist .
  }

  # Find Saba and his associated musical artists
  ?saba dbr:Saba_(rapper) .
  OPTIONAL {
    ?saba dbo:associatedMusicalArtist ?sabaArtist .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
495,6,train,Give me the father of Princess Charlotte of Württemberg and child of Frederick I of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Charlotte_of_Württemberg> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_I_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?fatherName
WHERE {
  ?princess a dbo:Person ;
            foaf:name ""Princess Charlotte of Württemberg""@en ;
            dbo:father ?father .

  ?frederick a dbo:Person ;
             foaf:name ""Frederick I of Württemberg""@en ;
             dbo:child ?child .

  FILTER (?father = ?child)
  
  ?father foaf:name ?fatherName .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
606,0,train,Give me the figure known as Barb City.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . }","PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?label ?description
WHERE {
  ?entity rdfs:label ""Barb City""@en .
  OPTIONAL { ?entity dbo:description ?description . FILTER (lang(?description) = 'en') }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
93,7,train,"Give me the capital of the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capitalCity
WHERE {
  # Identify the headquarter of Lake Clark National Park and Preserve
  dbr:Lake_Clark_National_Park_and_Preserve dbo:headquarters ?headquarter .
  
  # Ensure that the headquarter is both a region and a settlement
  ?headquarter rdf:type dbo:Region ;
               rdf:type dbo:Settlement .

  # Find the capital of this headquarter
  ?headquarter dbo:capital ?capitalCity .
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
917,10,train,Give me the child of Kekūanāoʻa and parent of Albert Kamehameha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?individual
WHERE {
  ?individual dbo:childOf <http://dbpedia.org/resource/Kekūanāoʻa> .
  <http://dbpedia.org/resource/Albert_Kamehameha> dbo:parent ?individual .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
326,7,train,"Give me the resident of the birthplace, that is a state and British, of David Jessel.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
SELECT DISTINCT ?resident
WHERE {
  # Identify David Jessel
  dbpedia:David_Jessel dbo:birthPlace ?birthplace .

  # Ensure birthplace is a state and British
  ?birthplace rdf:type dbo:State .
  ?birthplace dbo:country dbr:United_Kingdom .

  # Find residents of the birthplace
  ?resident dbo:residence ?birthplace .
}
```",2,4,3,2,1,3,2,20,0,0,5,0,0.0,0
965,1,train,Give me the parent of Louise Mountbatten.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?person dbo:givenName ""Louise""@en .
  ?person dbo:familyName ""Mountbatten""@en .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
582,23,train,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/property/residence> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?reference WHERE {
  ?scientist a dbo:Scientist ;
             foaf:name ""Hirotaka Sugawara""@en .
  
  OPTIONAL { 
    ?scientist dbo:residence ?residence .
  }
  
  ?residence dbp:wikiPageWikiLink ?reference .
}
```",3,4,4,3,1,3,3,71,0,0,41,0,0.0,0
236,5,train,Give me the administration of James Madison.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?termStart ?termEnd
WHERE {
  VALUES ?president { dbr:James_Madison }
  
  ?presidency dbo:president ?president .
  ?presidency dbo:startDate ?termStart .
  ?presidency dbo:endDate ?termEnd .
}
ORDER BY ?termStart",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
987,20,train,Give me the birth place of Dado Polumenta and birth place of the actor of All for Free.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?dadoBirthPlace ?actorBirthPlace WHERE {
  # Dado Polumenta's birthplace
  dbr:Dado_Polumenta dbo:birthPlace ?dadoBirthPlace .

  # Actor of ""All for Free""
  OPTIONAL {
    dbr:All_for_Free dbo:starring ?actor .
    ?actor dbo:birthPlace ?actorBirthPlace .
  }
}
```

5. **Validate Completeness and Precision:**
   - Ensure the query correctly identifies Dado Polumenta's birthplace.
   - Ensure it retrieves the main actor of ""All for Free"" and their birthplace.

This query should effectively retrieve the required information when executed against DBpedia.",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
926,17,train,"Give me the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  # Beyhan Sultan's parent
  ?parent dbo:child dbr:Beyhan_Sultan ;
          a dbo:RoyalFamilyMember .

  # Parent's father (Beyhan Sultan's grandfather)
  ?grandfather dbo:child ?parent ;
               a dbo:RoyalFamilyMember .

  # Grandfather's father (Beyhan Sultan's great-grandfather)
  ?father dbo:child ?grandfather .
}
```

### Explanation:

- **`?parent`**: Represents Beyhan Sultan's parent.
- **`?grandfather`**: Represents the parent of `?parent`, i.e., Beyhan Sultan's grandfather.
- **`?father`**: Represents the father of `?grandfather`, i.e., Beyhan Sultan's great-grandfather.

The query ensures that both `?parent` and `?grandfather` are members of a royal family, fulfilling the royalty condition. The result is the father who is also a royalty.",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
273,13,train,Give me the spouse of the child of the child of Edoardo Agnelli (1831-1871).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse
WHERE {
  # Edoardo Agnelli's children
  ?child dbo:parent dbr:Edoardo_Agnelli_(1831-1871) .
  
  # Children of Edoardo's children (grandchildren)
  ?grandchild dbo:parent ?child .

  # Spouses of the grandchildren
  ?spouse foaf:mbox ?grandchildMbox .
}
```

### Explanation:

- **PREFIX:** Define namespaces for DBpedia ontology and FOAF vocabulary.
- **SELECT DISTINCT ?spouse:** We want distinct spouses to avoid duplicates.
- **WHERE Clause:**
  - Identify Edoardo Agnelli's children using `dbo:parent`.
  - Find grandchildren by linking the child variable to their parents.
  - Determine the spouse of each grandchild using a FOAF mbox link, assuming that the spouse is linked through an mbox property (common in DBpedia for personal links).

This query assumes that the relationships are represented as described and that spouses can be identified via the `foaf:mbox` predicate. Adjustments may be needed based on actual data representation.",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
926,7,train,"Give me the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Beyhan Sultan is a child of Mustafa III
  dbr:Beyhan_Sultan dbo:childOf ?mustafaIII .
  
  # Find the parent of Beyhan Sultan who is also royalty
  ?mustafaIII dbo:spouse ?parent .
  
  # Ensure the parent is classified as royalty
  ?parent a dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
715,17,train,"Give me the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office WHERE {
  # Find Carlos Franco Iribarnegaray's reference
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@en .
  
  # Identify the office related to him
  ?person dbo:office ?office .

  # Ensure the office is a government agency and an organization
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
987,26,train,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorBirthPlace WHERE {
  # Find films featuring Emir Hadžihafizbegović
  ?film dbo:starring dbr:Emir_Hadžihafizbegović .
  
  # Check if the film is based on a show or vice versa
  OPTIONAL { ?film dbo:basedOn ?show . }
  OPTIONAL { ?show dbo:basedOn ?film . }

  # Find actors in these films/shows
  ?film dbo:starring ?actor .

  # Get birthplace of one such actor
  ?actor dbp:birthPlace ?actorBirthPlace .
}
```",3,4,4,3,1,3,3,71,37,17,3,0.6851851851851852,0.925,0.7872340425531915
417,10,train,Give me the child of Alexandrine of Mecklenburg-Schwerin and spouse of Princess Caroline-Mathilde of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?spouse WHERE {
  ?alexandrine dbo:child ?child .
  FILTER(STR(?alexandrine) = ""Alexandrine_of_Mecklenburg-Schwerin"") .

  ?child dbo:spouse ?spouse .
  FILTER(STR(?spouse) = ""Princess_Caroline-Mathilde_of_Denmark"")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
965,14,train,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  ?person dbo:birthName ""Prince George of Battenberg""@en .
  ?person dbo:nobleTitle ?title .
  FILTER EXISTS { ?person dbo:nobleTitle ?title } .
  ?person dbo:parent ?parent .
}
```

### Explanation

- **PREFIX:** Define prefixes for DBpedia ontology and properties.
- **SELECT ?parent:** We want to retrieve the parent of the person.
- **WHERE Clause:**
  - `?person dbo:birthName ""Prince George of Battenberg""@en .` ensures we are looking at the correct individual by birth name.
  - `?person dbo:nobleTitle ?title . FILTER EXISTS { ?person dbo:nobleTitle ?title } .` checks that the person holds a noble title, confirming his status as a noble.
  - `?person dbo:parent ?parent .` retrieves the parent of this person.

This query should effectively return the parent of Prince George of Battenberg, assuming the data is available in DBpedia with these properties.",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
892,29,train,Give me the entity in Province of Reggio Emilia and landmark at elevation of the award of Anna Ishii and entity in Italy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInReggioEmilia ?landmarkAtElevation ?entityInItaly
WHERE {
  # Entity in Province of Reggio Emilia
  ?entityInReggioEmilia dbo:locatedIn dbr:Province_of_Reggio_Emilia .
  
  # Landmark at elevation of Anna Ishii's award
  ?awardEvent dbp:recipient dbr:Anna_Ishii ;
              dbp:elevation ?elevation .
  ?landmarkAtElevation dbo:elevation ?elevation .

  # Entity in Italy
  ?entityInItaly dbo:country dbr:Italy .
  
  OPTIONAL {
    ?entityInReggioEmilia rdfs:label ?labelReggioEmilia .
  }
  OPTIONAL {
    ?landmarkAtElevation rdfs:label ?labelLandmark .
  }
  OPTIONAL {
    ?entityInItaly rdfs:label ?labelItaly .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
445,20,train,Give me the entity in England and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?birthPlace ?deathPlace
WHERE {
  ?awardee dbo:honoraryMemberOf dbr:Royal_Astronomical_Society .
  ?awardee dbp:birthPlace ?birthEntity .
  ?birthEntity rdfs:label ?birthPlace .
  FILTER (CONTAINS(LCASE(?birthPlace), ""england""))
  
  OPTIONAL {
    ?awardee dbo:deathPlace ?deathEntity .
    ?deathEntity rdfs:label ?deathPlace .
  }
}
```

This query does the following:
- Selects awardees of the Royal Astronomical Society.
- Retrieves their birthplace, ensuring it is in England.
- Optionally retrieves their death place.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
965,4,train,Give me the spouse of Princess Victoria of Hesse and by Rhine.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  dbpedia:Princess_Victoria_of_Hesse_and_by_Rhine dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
445,12,train,Give me the entity in United Kingdom and death place of Patrick Moore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace
WHERE {
  # Match Patrick Moore's birth and death places
  dbr:Patrick_Moore dbo:birthPlace ?birthPlace .
  dbr:Patrick_Moore dbo:deathPlace ?deathPlace .

  # Filter to ensure one of the locations is in the United Kingdom
  OPTIONAL { 
    ?birthPlace dbo:country dbr:United_Kingdom .
  }
  OPTIONAL {
    ?deathPlace dbo:country dbr:United_Kingdom .
  }

  FILTER (
    EXISTS { ?birthPlace dbo:country dbr:United_Kingdom . } ||
    EXISTS { ?deathPlace dbo:country dbr:United_Kingdom . }
  )
}
```",2,2,3,1,2,3,3,71,2,2,0,0.5,1.0,0.6666666666666666
573,8,train,"Who is the author, that is a politician and an office holder, of Exchequer Standards?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?authorName
WHERE {
  # Find the resource for ""Exchequer Standards""
  ?work dbr:Exchequer_Standards .
  
  # Identify the author of the work
  ?work dbo:author ?person .

  # Ensure the person is a politician
  ?person dbo:politician true .

  # Ensure the person is an office holder
  ?person dbo:officeHolder ?office .

  # Retrieve the name of the author
  ?person foaf:name ?authorName .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
47,29,train,Give me the office of Ajoy Mukherjee and office of Suvendu Adhikari and office of the awardee of Banga Bhushan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?office
WHERE {
  # Ajoy Mukherjee's offices
  { 
    dbr:Ajoy_Mukherjee dbo:officeHolder ?office .
    BIND(dbr:Ajoy_Mukherjee AS ?person)
  }
  
  UNION
  
  # Suvendu Adhikari's offices
  { 
    dbr:Suvendu_Adhikari dbo:officeHolder ?office .
    BIND(dbr:Suvendu_Adhikari AS ?person)
  }
  
  UNION
  
  # Offices of the awardee of Banga Bhushan
  {
    ?awardee dbo:awardReceived dbr:Banga_Bhushan .
    ?awardee dbo:officeHolder ?office .
    BIND(?awardee AS ?person)
  }
}
ORDER BY ?person",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
917,0,train,Give me the parent of Albert Kamehameha.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Albert Kamehameha""@en .
  
  OPTIONAL { ?person dbo:father ?parent . }
  OPTIONAL { ?person dbo:mother ?parent . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
216,23,train,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/coach> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  ?team a dbo:SoccerClub ;
        dbo:coach ?coach .
  
  FILTER (?team = dbr:Croatia_national_under-21_football_team)

  ?coach a dbo:Organization .

  ?player dbo:playsFor ?team ;
          dbo:player ?individual .
}
```",3,5,4,3,1,3,3,71,0,0,6,0,0.0,0
865,36,train,Give me the native of British Raj and father of the child of the father of Abul Maal Abdul Muhith.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfBritishRaj
WHERE {
  # Abul Maal Abdul Muhith's father
  ?father dbo:child dbr:Abul_Maal_Abdul_Muhith .
  
  # Father of the child (could be the same as above)
  ?grandFather dbo:child ?child .

  # Ensure the child is related to the father found in the first step
  FILTER(?child = ?father || ?child != ?father)

  # Native of British Raj
  ?nativeOfBritishRaj dbo:nativePlace dbr:British_Raj .
  
  # The person who is both a father and native of British Raj
  FILTER(?grandFather = ?nativeOfBritishRaj)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
507,7,train,Who is the person born on 1966-02-18?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  OPTIONAL { ?person foaf:name ?name . }
  FILTER (YEAR(?date) = 1966 && MONTH(?date) = 2 && DAY(?date) = 18)
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,21,23,0,0.4772727272727273,1.0,0.6461538461538462
645,4,train,Give me the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carlos Asensio Cabanillas""@en .
  
  OPTIONAL { ?person dbo:militaryRank ?rank . }
  OPTIONAL { ?person dbo:positionHeld ?position . }

  FILTER(?rank != '' || ?position != '')
}
```

This query attempts to find any military rank or position held by Carlos Asensio Cabanillas, which could be interpreted as his ""force.""",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
976,35,train,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as Mehmet Naci Bostancı.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeGNALeader ?officeMehmetNaciBostancı
WHERE {
  # Find the leader of the Grand National Assembly of Turkey and their office
  ?leader a dbo:Politician ;
          dbo:positionHeld ?gnaPosition .
  ?gnaPosition dbo:organization dbr:Grand_National_Assembly_of_Turkey ;
               dbo:title ?officeGNALeader .

  # Find Mehmet Naci Bostancı and his office
  dbr:Mehmet_Naci_Bostancı a dbo:Politician ;
                          dbo:positionHeld ?bostanciPosition .
  ?bostanciPosition dbo:title ?officeMehmetNaciBostancı .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
645,16,train,"Give me the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?force
WHERE {
  ?force a dbo:Event .
  ?force a dbo:MilitaryConflict .
  ?force a dbo:SocietalEvent .

  ?native dbo:nationality dbr:Spain ;
          dbo:occupation dbo:President, dbo:Politician ;
          dbo:birthPlace ?place .

  ?force dbo:relatedTo ?native .

  ?period dbo:name ""Restoration (Spain)"" .
  ?native dbo:timePeriod ?period .
}
```

4. **Explanation of the Query:**
   - We use `SELECT DISTINCT` to ensure unique results for the force.
   - The `WHERE` clause specifies that the force must be an instance of `Event`, `MilitaryConflict`, and `SocietalEvent`.
   - The native is filtered by nationality (Spain), occupation (President, Politician), and birthplace.
   - The relationship between the force and the native is established through `dbo:relatedTo`.
   - We ensure that the native's time period matches ""Restoration (Spain)"".

5. **Validation:**
   - The query captures all specified conditions and relationships from the question.
   - It ensures precision by using multiple classifications for both the force and the native.",2,7,3,2,1,3,3,71,0,0,1,0,0.0,0
442,1,train,Give me the resting place of Fay Bainter.,SELECT ?result WHERE { <http://dbpedia.org/resource/Fay_Bainter> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?placeOfBurial WHERE {
  dbpedia:Fay_Bainter dbo:placeOfBurial ?placeOfBurial .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
158,14,train,"Give me the party of the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorParty
WHERE {
  ?deceased a dbo:OfficeHolder ;
            a dbo:Politician ;
            dbo:deathDate ?deathDate .
  
  FILTER (YEAR(?deathDate) = 1945 && MONTH(?deathDate) = 9 && DAY(?deathDate) = 15)

  ?successor dbo:successorOf ?deceased ;
             a dbo:PrimeMinister ;
             a dbo:OfficeHolder ;
             a dbo:Politician ;
             dbo:party ?successorParty .
}
```",3,8,4,3,1,3,2,20,0,0,1,0,0.0,0
645,26,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
  ?event a dbo:MilitaryConflict ;
         a dbo:SocietalEvent .
  
  ?event dbo:militaryForce ?militaryForce .

  ?native dbo:nationality dbr:Spain ;
          dbo:presidentOf dbr:Restoration_(Spain) ;
          a dbo:Politician .

  ?militaryForce dbo:commander ?native .
}
```",3,8,4,3,1,3,3,71,0,0,514,0,0.0,0
365,5,train,"Give me the native, that is a politician, of Poltava Governorate.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name
WHERE {
  ?person dbo:nativePlace dbr:Poltava_Governorate .
  ?person dbo:occupation dbr:Politician .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,2,2,1,1,3,2,20,0,0,11,0,0.0,0
443,9,train,Give me the birthplace of Carl Larsson and birthplace of Ulf Lundell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?birthPlace
WHERE {
  VALUES ?person { 
    dbr:C._Larsson (Carl_Larsson) 
    dbr:Ulf_Lundell 
  }
  
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
976,13,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?officeOfMayor
WHERE {
  ?person a dbo:Politician ;
          dbo:nationality dbr:Turkey ;
          dbo:memberOf dbr:Nation_Alliance_(Turkey) .
  ?person dbo:officeHolder ?office .
  ?office dbo:positionTitle ?officeOfMayor .
  FILTER(?officeOfMayor = ""mayor"")
}
```",2,5,3,2,1,3,3,71,0,0,3,0,0.0,0
443,14,train,"Give me the birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and landmark at elevation of 28.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceLabel
WHERE {
  ?person a dbo:MusicalArtist ;
          a dbo:Artist ;
          dbp:birthday ""1949-11-20""^^xsd:date ;
          dbp:birthPlace ?birthPlace .
  
  ?birthPlace a dbo:Landmark ;
              dbp:elevation ""28""^^xsd:integer .

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
791,19,train,"Give me the predecessor of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?predecessor ?royalSpouse
WHERE {
  # Find Emperor Antoku's predecessor
  ?antoku dbo:predecessor ?predecessor .
  
  FILTER (str(?antoku) = ""Emperor_Antoku"") .

  # Find Emperor Takakura's spouse
  ?takakura dbo:spouse ?spouseTakakura .
  
  FILTER (str(?takakura) = ""Emperor_Takakura"") .

  # Find the spouse of Emperor Takakura's spouse who is royalty
  ?spouseTakakura dbo:spouse ?royalSpouse .
  ?royalSpouse rdf:type dbo:Monarch .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
933,27,train,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandName
WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ?birthDate .
  
  FILTER (YEAR(?birthDate) = 1947 && MONTH(?birthDate) = 4 && DAY(?birthDate) = 21)

  ?person dbo:memberOfBand ?band .

  ?band a dbo:Band, dbo:Group, dbo:Organization ;
        rdfs:label ?bandName .
  
  FILTER (langMatches(lang(?bandName), ""EN""))
}
ORDER BY ?bandName",3,7,4,3,1,3,3,71,0,0,4,0,0.0,0
865,15,train,"Give me the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?residenceCountry
WHERE {
  ?person dbo:deathPlace dbr:Patna .
  ?person dbo:residence ?residence .
  ?residence rdf:type dbo:Country .
  BIND(?residence AS ?residenceCountry)
}
```

This query does the following:
- Selects distinct countries (`?residenceCountry`) where a person resided.
- Matches persons who died in Patna (`dbo:deathPlace`).
- Ensures that the residence is of type `Country`.",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
122,6,train,"Give me the band of the reference, that is a musical artist and an artist, to Gift of Gab.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Gift of Gab""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?band
WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Gift of Gab"" .
  
  OPTIONAL { 
    ?person dbo:member ?bandMember .
    ?bandMember dbo:group ?band .
  }
  
  OPTIONAL {
    ?person foaf:musicArtist ?band .
  }
}
```

This query does the following:
- Identifies a person who is both a `MusicalArtist` and has the name ""Gift of Gab"".
- Uses an `OPTIONAL` clause to find any band membership (`dbo:member`) that links this person to a band.
- Another `OPTIONAL` clause checks if the person is directly associated with a band through `foaf:musicArtist`.

This approach ensures we capture both direct and indirect associations between Gift of Gab and his bands.",2,4,3,2,1,2,2,9,0,0,4,0,0.0,0
18,15,train,"Give me the alumnus of Marymount College, Tarrytown and professional in the award of Ana María Sánchez de Ríos.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnusName WHERE {
  # Find the alumni of Marymount College, Tarrytown
  ?alumnus dbo:almaMater dbr:Marymount_College,_Tarrytown .
  
  # Get the name of the alumnus
  ?alumnus foaf:name ?alumnusName .

  OPTIONAL {
    # Find any professional achievements related to Ana María Sánchez de Ríos
    ?achievement dbo:recipient dbr:Ana_María_Sánchez_de_Ríos .
    
    # Check if the alumnus is involved in this achievement (e.g., as a collaborator or contributor)
    ?achievement dbo:contributor ?alumnus .
  }
}
```

This query does the following:
- Selects alumni of Marymount College, Tarrytown.
- Retrieves their names using `foaf:name`.
- Optionally checks if these alumni have any professional connection to an achievement associated with Ana María Sánchez de Ríos.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
456,7,train,Give me the band of Alan Doyle.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?person foaf:name ""Alan Doyle""@en .
  ?person dbo:memberOf ?band .
  FILTER (isLiteral(?band) = false)
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
965,10,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?spouse WHERE {
  # Identify George Mountbatten, 2nd Marquess of Milford Haven
  ?george a dbo:Person ;
          rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .

  # Find parent (father or mother)
  OPTIONAL { ?george dbo:father ?parent . }
  OPTIONAL { ?george dbo:mother ?parent . }

  # Ensure the parent is a spouse to Prince Louis of Battenberg
  FILTER EXISTS {
    ?parent dbp:spouse ?prince .
    ?prince rdfs:label ""Prince Louis of Battenberg""@en .
  }
  
  # Return distinct results for clarity
  VALUES ?spouse { ""Prince Louis of Battenberg"" }
}
```

### Explanation

- **PREFIX**: Define prefixes for ontology and property namespaces.
- **SELECT**: Choose variables `?parent` and `?spouse`.
- **WHERE Clause**:
  - Identify George Mountbatten using his label.
  - Use `OPTIONAL` to find either father or mother as the parent.
  - Apply a `FILTER EXISTS` clause to ensure that this parent is also linked as a spouse to Prince Louis of Battenberg.
- **VALUES**: Explicitly set `?spouse` to ""Prince Louis of Battenberg"" for clarity.

This query should return the parent of George Mountbatten who was married to Prince Louis of Battenberg.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
136,1,train,Give me the landmark at elevation of 5.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""5""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp-owl: <http://dbpedia.org/ontology/>

SELECT ?landmark ?name WHERE {
    ?landmark a dbp-owl:Landmark .
    ?landmark rdfs:label ?name .
    FILTER (lang(?name) = 'en') .
    OPTIONAL { ?landmark dbo:elevation ?elevation . }
    FILTER (?elevation = 5)
}
ORDER BY ?name
```

This query does the following:
- Selects landmarks that are instances of `dbp-owl:Landmark`.
- Retrieves their names (`rdfs:label`) and ensures they are in English.
- Uses an optional clause to check for elevation data, filtering results where the elevation is exactly 5.
- Orders the results by name for better readability.",1,1,2,1,1,2,2,9,0,0,909,0,0.0,0
645,19,train,Give me the military force of Spanish Civil War and commander in the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?commander WHERE {
  # Carlos Asensio Cabanillas resource
  dbr:Carlos_Asensio_Cabanillas dbo:militaryUnit ?militaryForce .
  
  OPTIONAL {
    ?militaryForce dbo:commander ?commander .
  }
  
  FILTER (regex(str(?militaryForce), ""Spanish Civil War"", ""i""))
}
```

This query does the following:
- Selects distinct military forces (`?militaryForce`) associated with Carlos Asensio Cabanillas.
- Optionally retrieves commanders (`?commander`) of those forces.
- Filters results to ensure they are related to the Spanish Civil War.",3,3,4,2,2,3,3,71,0,0,23,0,0.0,0
93,4,train,"Who is the native, that is a politician, of Seattle?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person ?name
WHERE {
  ?person rdf:type dbo:Politician .
  ?person dbo:nativePlace dbr:Seattle .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,2,2,1,1,3,2,20,0,0,114,0,0.0,0
456,34,train,"Give me the band of Alan Doyle and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band ?spouse WHERE {
  # Alan Doyle's band
  dbr:Alan_Doyle dbo:musicalBandMemberOf ?band .

  # Movies that are both works and television shows with Ross Newton
  ?movie dbo:starring dbr:Ross_Newton ;
         a dbo:Film ;
         dbo:genre ?workGenre .
  
  FILTER(?workGenre IN (dbr:Television_Series, dbr:Work)).

  # Actors in those movies
  ?movie dbo:starring ?actor .

  # Spouses of those actors
  ?actor dbp:spouse ?spouse .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
124,5,train,Who is the awardee of British South Africa Company Medal?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . },"```sparql
SELECT ?awardee WHERE {
  ?medal dbo:name ""British South Africa Company Medal""@en .
  ?medal dbo:recipient ?awardee .
}
```

This query does the following:
- Selects `?awardee` as the variable representing individuals or entities who received the medal.
- Uses a pattern to match triples where:
  - A resource (`?medal`) has a name property (`dbo:name`) with the value ""British South Africa Company Medal"" in English.
  - The same resource (`?medal`) is linked to an awardee through the `dbo:recipient` property.",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
102,0,train,Give me the manager of Sheffield United W.F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Sheffield_United_W.F.C.> <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?manager WHERE {
  ?team a dbo:FootballClub ;
        rdfs:label ""Sheffield United W.F.C.""@en .
  
  OPTIONAL { 
    ?team dbp:manager ?manager .
  }
}
```

### Explanation:

- **PREFIX:** We define prefixes for common DBpedia properties and ontology classes.
- **SELECT Clause:** We are interested in the manager, so we select `?manager`.
- **WHERE Clause:** This specifies the pattern to match:
  - The team is of type `dbo:FootballClub` (a class representing football clubs).
  - It has a label ""Sheffield United W.F.C."" in English.
  - We use an `OPTIONAL` clause for `dbp:manager` because not all teams might have this information available.

This query will return the manager of Sheffield United W.F.C. if such data is present in DBpedia.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
456,9,train,Give me the professional in  and spouse of Danielle Spencer (Australian actress).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?professionalIn WHERE {
  ?danielle a dbo:Person ;
            foaf:name ""Danielle Spencer""@en .
  
  OPTIONAL { 
    ?danielle dbo:spouse ?spouse .
  }
  
  OPTIONAL {
    ?danielle dbo:occupation ?profession ;
              dbp:profession ?professionalIn .
  }
}
```

### Explanation

- **PREFIX**: We define prefixes for common DBpedia properties.
- **SELECT**: We select the spouse and professional information.
- **WHERE**:
  - Identify Danielle Spencer using `foaf:name`.
  - Use `OPTIONAL` to find her spouse with `dbo:spouse`.
  - Use another `OPTIONAL` clause to find her profession or occupation.

This query assumes that Danielle Spencer's name is directly available in DBpedia and that the relevant properties (`dbo:spouse`, `dbo:occupation`, `dbp:profession`) are used to store this information.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
192,2,train,Give me the child of Charles II of Naples.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?childName
WHERE {
  ?charles dbo:child ?child .
  ?charles foaf:name ""Charles II of Naples""@en .
  ?child foaf:name ?childName .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
582,30,train,Give me the reference to Japan and figure known as the nickname of Japan national football team and player in Kazuaki Nagasawa.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?japanReference ?teamNickname ?playerName WHERE {
  # Reference to Japan
  dbr:Japan a dbo:Country ;
            rdfs:label ?japanReference .

  # Nickname of the Japan national football team
  dbr:Japan_national_football_team a dbo:SportsTeam ;
                                    rdfs:label ?teamNickname .
  
  # Kazuaki Nagasawa's association with the Japan national football team
  OPTIONAL {
    dbr:Kazuaki_Nagasawa a dbo:FootballPlayer ;
                         dbo:nationality dbr:Japan ;
                         rdfs:label ?playerName .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
433,7,train,Give me the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album a dbo:Album .
  ?album dbo:title ""Slowhand at 70 – Live at the Royal Albert Hall""@en .
  ?album dbo:composer ?writer .
}
```

This query assumes that the album is linked to its composer(s) via the `dbo:composer` property. It selects the writer's name for the specified album.",1,1,2,1,1,3,3,71,0,0,30,0,0.0,0
36,8,train,"Give me the actor of the claim to fame, that is a film, of Lepacious Bose.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?filmLabel WHERE {
  ?film dbo:starring ?actor .
  ?actor rdfs:label ""Lepacious Bose""@en .
  ?film rdfs:label ?filmLabel .
  FILTER (LANG(?filmLabel) = 'en')
}
```

This query does the following:
- Selects the actor and film label.
- Matches films where Lepacious Bose is an actor (`dbo:starring`).
- Filters results to ensure labels are in English.",2,3,3,2,1,2,3,28,0,0,6,0,0.0,0
926,4,train,Give me the father of Abdulaziz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?fatherName WHERE {
  ?abdulaziz a dbo:Person .
  ?abdulaziz rdfs:label ""Abdulaziz""@en .
  OPTIONAL { ?abdulaziz dbo:father ?father . }
  ?father rdfs:label ?fatherName .
}
```

### Explanation:

- **PREFIX:** Defines the namespace for DBpedia ontology.
- **SELECT ?fatherName:** Specifies that we want to retrieve the name of Abdulaziz's father.
- **WHERE Clause:**
  - `?abdulaziz a dbo:Person`: Ensures that Abdulaziz is an instance of a person.
  - `?abdulaziz rdfs:label ""Abdulaziz""@en`: Matches the label for Abdulaziz in English.
  - `OPTIONAL { ?abdulaziz dbo:father ?father . }`: Finds the father relationship, allowing for cases where it might not exist.
  - `?father rdfs:label ?fatherName`: Retrieves the name of the father.

This query is designed to efficiently retrieve the desired information from DBpedia.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
791,20,train,Give me the predecessor of the child of Emperor Takakura and spouse of Taira no Tokuko.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor
WHERE {
  ?child dbo:parentEmperor <http://dbpedia.org/resource/Takakura>;
         dbo:spouse <http://dbpedia.org/resource/Taira_no_Tokuko>.
  
  ?succession dbo:successor ?child;
              dbo:predecessor ?predecessor.
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
443,16,train,Give me the landmark at elevation of 28 and birthplace of the work of yes.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/author> ""yes""@en . ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?birthplace
WHERE {
  # Find landmarks with elevation of 28
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""28""^^xsd:int)

  OPTIONAL {
    # Find the band Yes and its members' birthplaces
    dbr:Yes a dbo:Band ;
            dbo:member ?member .

    ?member dbo:birthPlace ?birthplace .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
47,19,train,Give me the office of Bidesh Ranjan Bose and office of the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office
WHERE {
  {
    VALUES ?person { 
      dbr:Bidesh_Ranjan_Bose 
      dbr:Jagdeep_Dhankhar 
    }
    ?person dbo:office ?office .
  }
}
ORDER BY ?person",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
442,4,train,Give me the resting place of Fay Bainter and resting place of Allyn K. Capron.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allyn_K._Capron> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Fay_Bainter> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?burialPlace
WHERE {
  VALUES ?person { 
    dbr:Fay_Bainter 
    dbr:Allyn_K._Capron 
  }
  
  ?person rdfs:label ?name .
  FILTER (lang(?name) = 'en')
  
  OPTIONAL {
    ?person dbo:placeOfBurial ?burialPlace .
  }
}
```",2,2,3,1,2,2,2,9,0,4,1,0.0,0.0,0
888,0,train,Give me the commander in Southern Ukraine campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Southern_Ukraine_campaign> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?campaign a dbo:MilitaryConflict ;
            rdfs:label ""Southern Ukraine campaign""@en .
  
  OPTIONAL { 
    ?campaign dbo:commander ?commander .
  }
}
```

### Explanation

- **PREFIX**: Define prefixes for common DBpedia namespaces.
- **SELECT**: We are interested in the `?commander` variable, which will hold the name of the commander.
- **WHERE Clause**:
  - Identify the campaign using its type (`dbo:MilitaryConflict`) and label (""Southern Ukraine campaign"").
  - Use an `OPTIONAL` clause to find any associated commanders via the `dbo:commander` property.

This query is designed to efficiently retrieve the commander's information related to the Southern Ukraine campaign from DBpedia.",1,1,2,1,1,3,2,20,0,0,13,0,0.0,0
645,9,train,Give me the military force of Spanish Civil War and commander in Battle of Jarama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?commander WHERE {
  # Military forces involved in the Spanish Civil War
  ?militaryForce dbo:partOfMilitaryConflict dbr:Spanish_Civil_War .
  
  # Involvement of these forces in the Battle of Jarama
  ?battle dbr:Battle_of_Jarama ;
         dbo:opposingMilitaryUnit ?militaryForce .

  # Commanders associated with these military forces during the battle
  OPTIONAL {
    ?commander dbo:commanded ?militaryForce .
  }
}
```",2,2,3,1,2,3,3,71,0,0,6,0,0.0,0
192,5,train,Give me the child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?parent a dbo:Person ;
          foaf:name ""Stephen V of Hungary""@en .
  ?parent dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
582,26,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?playerInFather
WHERE {
  ?child foaf:name ""Kazuaki Nagasawa"" .
  ?parent dbo:child ?child .
  
  ?father rdf:type dbo:Person ;
          dbo:spouse ?parent ;
          dbo:sportOccupation [
            a dbo:Athlete ;
            dbo:sportTeam ?team1
          ] ;
          dbo:sportOccupation [
            a dbo:SoccerManager ;
            dbo:sportTeam ?team2
          ] ;
          dbo:sportOccupation [
            a dbo:SportsManager ;
            dbo:sportTeam ?team3
          ] .
  
  ?father foaf:playerIn ?playerInFather .
}
FILTER (?team1 != ?team2 && ?team2 != ?team3 && ?team1 != ?team3)",3,6,4,3,1,3,3,71,0,0,4,0,0.0,0
83,11,train,"Give me the party of Alceu Collares and ruling party in the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. <http://dbpedia.org/resource/Alceu_Collares> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alceuParty ?rulingParty WHERE {
  # Alceu Collares' political party
  dbr:Alceu_Collares dbo:politicalAffiliation ?alceuParty .

  # Sandro's birthplace and soccer club association
  OPTIONAL {
    dbr:Sandro_(footballer,_born_October_1983) dbp:birthPlace ?town .
    ?town a dbo:Settlement ;
          dbo:country dbr:Brazil ;
          dbo:sportTeam ?soccerClub .
    ?soccerClub a dbo:FootballClub .
  }

  # Ruling party in Sandro's birthplace
  OPTIONAL {
    ?town dbp:government ?government .
    ?government dbo:rulingParty ?rulingParty .
  }
}
```",3,6,4,2,2,3,2,20,0,0,1,0,0.0,0
573,13,train,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personDecedent
WHERE {
  # Identify William J. Phelan's residence
  dbr:William_J._Phelan dbo:residence ?residence .

  # Ensure the residence is a settlement
  ?residence rdf:type dbo:Settlement .

  # Find person decedents at this residence
  ?residence dbo:decedent ?personDecedent .
}
```",2,3,3,2,1,3,3,71,0,0,40,0,0.0,0
83,7,train,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983).","SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rulingParty
WHERE {
  # Find Sandro's birthplace
  dbr:Sandro_(footballer,_born_October_1983) dbo:birthPlace ?town .

  # Ensure the town is in Brazil and is a type of Town
  ?town dbo:country dbr:Brazil .
  ?town rdf:type dbo:Town .

  # Check for association with a soccer club
  OPTIONAL { 
    ?town dbo:sportTeam ?soccerClub .
    FILTER EXISTS { ?soccerClub rdf:type dbo:SoccerClub }
  }

  # Find the ruling party in this town
  ?town dbo:politicalParty ?rulingParty .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
645,33,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in Battle of Jarama.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?militaryForce
WHERE {
  ?event a dbo:MilitaryConflict ;
         a dbo:SocietalEvent .
  
  ?person dbo:nationality dbr:Spain ;
          dbo:presidentOf dbr:Restoration_(Spain) ;
          dbo:politician ;
          dbo:commanderIn ?battle .

  ?battle rdfs:label ""Battle of Jarama""@en .

  ?militaryForce dbo:participatedIn ?event .
}
```",4,9,5,3,2,3,3,71,0,0,6,0,0.0,0
573,19,train,"Give me the person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?decedentQuincy ?decedentAdmin
WHERE {
  # Find the person who died in Quincy, Massachusetts
  ?decedentQuincy dbo:deathPlace dbr:Quincy,_Massachusetts .
  
  # Find Charlie Baker's administration region
  dbr:Charlie_Baker dbo:officeHolderOf ?administration .
  ?administration a dbo:AdministrativeRegion .

  # Find the person who died in that administrative region
  ?decedentAdmin dbo:deathPlace ?administration .
}
```",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
507,37,train,"Give me the professional in Film director, television director and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v3 <http://dbpedia.org/ontology/director> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?filmDirectorRole ?tvDirectorRole ?movieDirected ?workTitle
WHERE {
  ?person a dbo:FilmDirector ;
          dbo:birthDate ""1919-06-17""^^xsd:date ;
          dbo:televisionDirector ?tvDirectorRole .
  
  ?filmDirectorRole dbo:directorOf ?movieDirected .
  ?movieDirected a dbo:Film .

  OPTIONAL { 
    ?movieDirected dbp:title ?workTitle .
  }

  FILTER EXISTS {
    ?person dbo:directorOf ?someWork .
    ?someWork a dbo:CreativeWork ;
              a dbo:Film .
  }
}
ORDER BY ?person
```

This query does the following:
- Selects distinct persons who are film directors and television directors.
- Ensures these individuals were born on June 17, 1919.
- Checks that they have directed films (which are also works).
- Optionally retrieves titles of movies they directed.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
98,12,train,Give me the birth place of Paolo Ballesteros and entity in Philippines and region of Philippine Standard Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?philippinesEntity ?region
WHERE {
  # Get the birth place of Paolo Ballesteros
  dbr:Paolo_Ballesteros dbo:birthPlace ?birthPlace .

  # Find an entity related to the Philippines
  ?philippinesEntity a dbo:Country ;
                    dbo:countryName ""Philippines""@en .
  
  # Find the region associated with Philippine Standard Time
  dbr:Philippine_Standard_Time dbo:region ?region .
}
```",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
433,22,train,Give me the associated musical artist of Paul Chambers and professional in the profession of Bob Marley.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artistName
WHERE {
  # Find artists associated with Paul Chambers
  {
    SELECT ?associatedArtist WHERE {
      dbr:Paul_Chambers dbo:associatedMusicalArtist ?associatedArtist .
    }
  }

  UNION

  # Find professionals in the same profession as Bob Marley (reggae)
  {
    SELECT ?artist WHERE {
      dbr:Bob_Marley dbo:profession dbr:Reggae_musician .
      ?artist dbo:profession dbr:Reggae_musician .
    }
  }

  # Bind artist names
  BIND(?associatedArtist AS ?artistName) .
  OPTIONAL { ?artist rdfs:label ?artistName FILTER (lang(?artistName) = 'en') . }
}
ORDER BY ?artistName",3,3,4,2,2,3,3,71,16,15,0,0.5161290322580645,1.0,0.6808510638297872
216,15,train,"Give me the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/coach> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coach WHERE {
  ?organisation rdf:type dbo:SoccerClub .
  ?organisation dbo:team dbr:Croatia_national_under-21_football_team .
  ?organisation dbo:coach ?coach .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
326,1,train,Give me the person decedent at France.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/France> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace
WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace ?deathPlace .
  FILTER(CONTAINS(LCASE(STR(?deathPlace)), ""france""))
}
ORDER BY ?person",1,1,2,1,1,3,2,20,3795,860,0,0.8152524167561761,1.0,0.8982248520710059
976,1,train,Give me the office of Meral Akşener.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office
WHERE {
  dbr:Meral_Akşener dbo:positionHeld ?office .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
976,11,train,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?office
WHERE {
  ?gnaot dbo:head ?leader .
  ?gnaot rdf:type <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> .
  ?leader rdf:type dbo:Politician .
  ?leader dbo:holdsOffice ?office .
}
```",2,3,3,2,1,3,3,71,0,0,4,0,0.0,0
527,12,train,"Give me the author of the work, that is a work and a book, of Tom Baker and actor of The Book Tower.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Book_Tower> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work a dbo:Book .
  ?work dbo:author dbr:Tom_Baker .
  
  OPTIONAL { 
    ?film dbr:The_Book_Tower .
    ?film dbo:actor dbr:Tom_Baker .
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
773,39,train,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of Carloman of Bavaria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT DISTINCT ?parentOfChild
WHERE {
  # Carloman of Bavaria
  ?carloman dbo:birthName ""Carloman of Bavaria""@en .
  
  # His father who is an office holder and a royalty
  ?father foaf:parent ?carloman ;
          schema:jobTitle ?office ;
          dbo:royalFamily ?royalty .

  # A child of this father who is also a royalty
  ?child foaf:parent ?father ;
         dbo:royalFamily ?childRoyalty .
  
  # The parent of that child
  ?parentOfChild foaf:parent ?child .
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
192,13,train,"Give me the spouse of the spouse, that is a royalty, of the child of Charles II of Naples.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandSpouse
WHERE {
  # Find children of Charles II of Naples
  ?child dbo:parent dbr:Charles_II_of_Naples .
  
  # Find spouse of the child
  ?spouse1 dbo:spouse ?child .

  # Check if this spouse is a royalty
  ?spouse1 rdf:type dbo:Monarch .

  # Find spouse of the spouse (grandSpouse)
  ?spouse2 dbo:spouse ?spouse1 .
  
  # Ensure grandSpouse is distinct and not null
  FILTER(?spouse2 != ?child && ?spouse2 != ?spouse1)
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
791,24,train,Give me the predecessor of the child of Emperor Takakura and father of Emperor Go-Toba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?predecessor
WHERE {
  ?emperorTakakura dbo:child ?child .
  ?child dbo:father ?emperorGoToba .
  ?emperorGoToba dbp:name ""Emperor Go-Toba""@en .
  ?child dbo:predecessor ?predecessor .
}
```

This query does the following:
- Identifies `?child` as a child of Emperor Takakura.
- Confirms that this `?child` is also the father of Emperor Go-Toba.
- Retrieves the predecessor of this `?child`.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
433,38,train,"Give me the professional in the profession of Bob Marley and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professionalInProfession ?associatedArtist
WHERE {
  # Bob Marley's profession
  dbr:Bob_Marley dbo:profession ?profession .
  
  # Find an artist with the same profession
  ?artist dbo:profession ?profession ;
          a dbo:MusicalArtist .

  # This artist should be associated with Scott LaFaro as a musical artist
  ?associatedArtist dbo:musicalArtist dbr:Scott_LaFaro ;
                   a dbo:MusicalArtist .
  
  # Ensure the professional is also an artist and musical artist
  ?professionalInProfession a dbo:MusicalArtist .

  # Link the found artist to the professional in profession
  ?artist rdfs:label ?professionalInProfessionLabel .
  FILTER (CONTAINS(LCASE(?professionalInProfessionLabel), LCASE(?profession)))
}
```",4,6,5,2,2,3,3,71,0,0,4,0,0.0,0
926,31,train,Give me the father of the father of the spouse of Neşerek Kadın and successor of Mustafa III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandfather
WHERE {
  # Find Neşerek Kadın's spouse
  ?spouse dbo:spouse dbr:Neşerek_Kadın .
  
  # Find the father of Neşerek Kadın's spouse
  ?father dbo:child ?spouse .
  
  # Find the grandfather (father of the father)
  ?grandfather dbo:child ?father .

  # Identify Mustafa III and his successor
  dbr:Mustafa_III dbo:successor ?successor .

  # Ensure the grandfather is also the successor of Mustafa III
  FILTER (?grandfather = ?successor)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
874,12,train,Give me the band of Manfred Mann (musician) and band of the band member of The Jones Gang.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Manfred_Mann_(musician)> . ?result <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?manfredMannBand ?jonesGangMember ?bandOfJonesGangMember
WHERE {
  # Find the band of Manfred Mann
  ?manfredMann dbo:musicalArtist <http://dbpedia.org/resource/Manfred_Mann> .
  ?manfredMann dbp:member <http://dbpedia.org/resource/Manfred_Mann> .
  ?manfredMann dbo:name ?manfredMannBand .

  # Find members of The Jones Gang
  ?jonesGangMember dbp:memberOf <http://dbpedia.org/resource/The_Jones_Gang> .

  # Find the band of each member of The Jones Gang
  OPTIONAL {
    ?bandOfJonesGangMember dbo:musicalArtist ?jonesGangMember .
    ?bandOfJonesGangMember dbo:name ?bandName .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
892,0,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
SELECT DISTINCT ?entity WHERE {
  ?entity a dbo:Place .
  OPTIONAL { ?entity dbo:country dbr:Italy . }
  FILTER NOT EXISTS { ?entity dbo:country ?otherCountry . FILTER (?otherCountry != dbr:Italy) }
}
```

This query does the following:
- Selects distinct entities that are of type `dbo:Place`.
- Uses an optional clause to check if the entity's country is Italy.
- Filters out any entities that have a different country specified.",1,1,2,1,1,3,3,71,0,0,13092,0,0.0,0
433,34,train,"Give me the professional in Musician and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?profession ?associatedArtist WHERE {
  ?person a dbo:Musician .
  ?person a dbo:Artist .
  ?person dbo:birthPlace ?birthPlace .
  
  ?association dbo:musicalArtist ?person .
  ?association dbo:musicalArtist dbr:Paul_Chambers .

  OPTIONAL { ?person rdfs:label ?profession FILTER (lang(?profession) = 'en') }
}
```

This query does the following:
- Selects a person who is both a musician and an artist.
- Ensures there's an association with Paul Chambers in a musical context.
- Optionally retrieves the profession label of the person.",4,6,5,3,2,3,3,71,0,0,15,0,0.0,0
158,12,train,"Give me the party of the successor, that is a prime minister and an office holder and a politician, of André Tardieu and entity in France.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v0 <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorParty
WHERE {
  # André Tardieu and his successor relationship
  dbr:André_Tardieu dbo:succeededBy ?successor .
  
  # Successor's roles
  ?successor a dbo:PrimeMinister ;
             a dbo:OfficeHolder ;
             a dbo:Politician .

  # Successor's location constraint
  ?successor dbo:nationality dbr:France .

  # Retrieve the party of the successor
  ?successor dbo:party ?successorParty .
}
```",3,6,4,2,2,3,2,20,0,0,1,0,0.0,0
166,1,train,Give me the entity in Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity ?entityLabel WHERE {
  ?entity a dbo:Place .
  OPTIONAL { ?entity dbo:country dbr:Spain . }
  UNION
  OPTIONAL { ?entity dbp:location dbr:Spain . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

### Explanation:

- **PREFIX:** Define prefixes for ontology (`dbo`) and properties (`dbp`).
- **SELECT DISTINCT:** Retrieve distinct entities to avoid duplicates.
- **WHERE Clause:**
  - `?entity a dbo:Place`: Ensure the entity is of type Place.
  - `OPTIONAL { ?entity dbo:country dbr:Spain . }`: Check if the entity's country is Spain using the ontology property.
  - `UNION OPTIONAL { ?entity dbp:location dbr:Spain . }`: Alternatively, check if the location property indicates Spain.
- **SERVICE wikibase:label:** Retrieve labels for entities in the preferred language.",1,1,2,1,1,3,2,20,0,0,11844,0,0.0,0
267,7,train,"Give me the coach of the player, that is a soccer club, in Rasoul Khatibi.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/coach> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?coachName ?clubName
WHERE {
  ?player dbo:birthName ""Rasoul Khatibi""@en.
  ?player dbo:coach ?coach.
  ?coach foaf:name ?coachName.
  
  OPTIONAL {
    ?coach dbo:worksFor ?club.
    ?club foaf:name ?clubName.
  }
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
965,27,train,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentBirthName
WHERE {
  # Identify George Mountbatten, 2nd Marquess of Milford Haven
  dbr:George_Mountbatten_2nd_Marquess_of_Milford_Haven dbo:parent ?parent .

  # Check if the parent was born as a noble
  OPTIONAL { ?parent dbo:nobleTitle ?title . }
  
  # Retrieve the birth name of the parent
  ?parent dbo:birthName ?parentBirthName .
}
FILTER EXISTS { ?parent dbo:nobleTitle ?title }",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
433,12,train,Give me the associated musical artist of Bill Evans and professional in Musician.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Bill Evans as a subject
  dbr:Bill_Evans dbo:associatedWith ?artist .
  
  # Ensure the associated artist is also a musician
  ?artist rdf:type dbo:Musician .

  # Bind the result to a variable for clarity
  BIND(?artist AS ?associatedArtist)
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
773,3,train,Give me the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?bernard dbo:childOf ?charlesTheFat .
  ?charlesTheFat rdfs:label ""Charles the Fat""@en .
  ?bernard dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
773,14,train,"Give me the parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Identify Louis the German
  ?louis a dbo:Person ;
         foaf:name ""Louis the German""@en .
  
  # Find his children
  ?child dbo:childOf ?louis .

  # Filter children who are royalties
  ?child dbo:royalty true .

  # Get the parent of these royalty children
  ?parent dbo:spouseOrPartner ?child .
}
```

5. **Optimize Query Logic:** The query is structured to directly find Louis the German, his children, filter those who are royals, and then identify their parents.

6. **Validate Completeness and Precision:** The query captures all necessary elements of the question, ensuring it returns only the relevant parent(s) of royalty children of Louis the German.",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
791,25,train,"Give me the predecessor of Emperor Antoku and father of the child, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor ?father
WHERE {
  # Find Emperor Antoku's predecessor
  ?antoku dbo:succession ?predecessor .
  FILTER (str(?antoku) = ""Emperor_Antoku"") .

  # Find children of Emperor Takakura who are royalty
  ?child dbo:parent dbr:Emperor_Takakura ;
         a dbo:Monarch .

  # Identify the father of this royal child
  ?child dbo:parent ?father .
}
```

### Explanation:

- **PREFIX:** Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT:** Retrieve unique predecessors and fathers.
- **WHERE Clause:**
  - Find Emperor Antoku's predecessor using `dbo:succession`.
  - Filter to ensure the subject is Emperor Antoku.
  - Identify children of Emperor Takakura who are royalty (`a dbo:Monarch`).
  - Determine the father of these royal children.

This query captures the relationships and entities specified in the question, ensuring that we retrieve both the predecessor of Emperor Antoku and the father of a royal child of Emperor Takakura.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
917,39,train,"Give me the child of Kekūanāoʻa and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalChild
WHERE {
  # Step 1: Find a child of Kekūanāoʻa
  ?childOfKekuanaoa dbo:parent dbr:Kekūanāoʻa .

  # Step 2: Identify the father of this child
  ?fatherOfChild dbo:spouse ?mother .
  ?childOfKekuanaoa dbo:parent ?fatherOfChild .

  # Step 3: Find a child of this identified father
  ?finalChild dbo:parent ?fatherOfChild .

  # Step 4: Ensure the final child is royalty
  ?finalChild dbp:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
874,6,train,Give me the band of Robert Hart (musician) and band of Manfred Mann (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Robert_Hart_(musician)> . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Manfred_Mann_(musician)> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?bandNameRobertHart ?bandNameManfredMann
WHERE {
  # Find bands associated with Robert Hart
  ?robertHart a dbo:Musician ;
              foaf:name ""Robert Hart""@en .
  ?robertHart dbp:band ?bandRobertHart .
  ?bandRobertHart foaf:name ?bandNameRobertHart .

  # Find bands associated with Manfred Mann
  ?manfredMann a dbo:Musician ;
               foaf:name ""Manfred Mann""@en .
  ?manfredMann dbp:band ?bandManfredMann .
  ?bandManfredMann foaf:name ?bandNameManfredMann .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
573,3,train,Give me the real name of Charlie Baker (Australian footballer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?realName
WHERE {
  ?person a dbo:AustralianFootballer ;
          foaf:name ""Charlie Baker""@en .
  
  OPTIONAL { 
    ?person dbo:birthName ?realName .
  }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
715,28,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in Spanish Civil War and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderInConflict ?spanishCivilWarCommander ?ministryOfAirLeader
WHERE {
  # Abd el-Krim as a commander in a military conflict
  dbr:Abd_el-Krim dbo:militaryConflicts ?conflict .
  ?conflict dbo:commander ?commanderInConflict .

  # Commander in the Spanish Civil War
  ?spanishCivilWarCommander dbo:participatedInMilitaryConflict dbr:Spanish_Civil_War ;
                           rdfs:label ?name1 .

  # Leader of Ministry of the Air (Spain)
  ?ministryOfAirLeader dbo:headOfGovernmentOrganization dbr:Ministry_of_the_Air_(Spain) ;
                       rdfs:label ?name2 .

  # Ensure all roles refer to the same person
  FILTER (?commanderInConflict = ?spanishCivilWarCommander && 
          ?spanishCivilWarCommander = ?ministryOfAirLeader)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
933,37,train,Give me the reference to the birth name of the professional in Musician and band of The Ramong Sound.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musician ?birthName
WHERE {
  ?band a dbo:Band .
  ?band foaf:name ""The Ramones""@en .

  ?member dbo:memberOf ?band ;
          foaf:name ?musician .

  OPTIONAL { 
    ?member dbo:birthName ?birthName .
  }
}
```

### Explanation

- **PREFIX**: Define prefixes for common namespaces.
- **SELECT**: Choose variables `?musician` and `?birthName`.
- **WHERE**:
  - Identify the band ""The Ramones"" using its DBpedia resource.
  - Find members of this band.
  - Retrieve their birth names if available.

This query will return the musicians in The Ramones along with their birth names, where such information is available.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
83,1,train,Give me the party of Alceu Collares.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alceu_Collares> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  dbpedia:Alceu_Collares dbo:politicalParty ?party .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
965,32,train,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the child, that is a royalty, of Prince Louis of Battenberg.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseOfSpouse
WHERE {
  # Princess Victoria of Hesse and by Rhine's spouse
  ?princess a dbo:Person ;
            dbp:name ""Princess Victoria of Hesse and by Rhine"" .
  
  ?princess dbo:spouse ?firstSpouse .

  # First Spouse's spouse (child of Princess Victoria)
  ?firstSpouse dbo:spouse ?secondSpouse .

  # Second Spouse must be royalty
  ?secondSpouse a dbo:RoyalFamilyMember ;
                dbp:parent ?princess .

  # Check if the second spouse is a parent to a child of Prince Louis of Battenberg
  ?childOfPrinceLouis a dbo:Person ;
                     dbp:name ""Child of Prince Louis of Battenberg"" ;
                     dbo:parent ?secondSpouse .
  
  ?secondSpouse dbo:spouse ?spouseOfSpouse .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
495,14,train,Give me the father of the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father
WHERE {
  # Identify Princess Pauline
  ?princess a dbo:Person ;
            rdfs:label ""Princess Pauline of Württemberg""@en ;
            dbo:birthYear ?birthYear ;
            dbo:deathYear ?deathYear .
  
  FILTER (?birthYear = 1810 && ?deathYear = 1856)

  # Find her parent
  ?parent dbo:child ?princess .

  # Determine the child of that parent (could be a sibling)
  ?sibling dbo:parent ?parent .

  # Identify the father of this child
  ?father dbo:spouse ?mother .
  ?sibling dbo:parent ?father .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
329,15,train,Give me the entity in Northern Ireland and birthplace of the author of The Tailor and Ansty.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?northernIrelandEntity ?birthPlace
WHERE {
  # Find the author of ""The Tailor and Ansty""
  dbr:The_Tailor_and_Ansty dbo:author ?author .

  # Get the birthplace of this author
  ?author dbo:birthPlace ?birthPlace .

  # Identify an entity in Northern Ireland related to the author or their work
  ?northernIrelandEntity dbo:country dbr:Northern_Ireland .
  
  # Optional: Link the author to a specific entity in Northern Ireland if available
  OPTIONAL { ?author dbo:associatedWith ?northernIrelandEntity }
}
```",3,3,4,2,2,2,3,28,1,846,0,0.0011806375442739079,1.0,0.0023584905660377353
433,17,train,Give me the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?profession
WHERE {
  # Find the album resource
  VALUES ?album { dbr:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall }

  # Link the album to its writer
  ?album dbo:composer ?writer .

  # Get the profession of the writer
  ?writer dbo:occupation ?profession .
}
```

### Explanation

- **PREFIX**: Define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT**: Choose variables `?writer` and `?profession`.
- **WHERE**:
  - Use `VALUES` to specify the album resource.
  - Match the album with its composer using `dbo:composer`.
  - Retrieve the writer's occupation using `dbo:occupation`.

This query assumes that the album is correctly identified in DBpedia as `dbr:Slowhand_at_70_%E2%80%93_Live_at_the_Royal_Albert_Hall` and that the ontology properties are used consistently.",2,2,3,2,1,3,3,71,0,0,11,0,0.0,0
791,17,train,"Give me the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Define Emperor Antoku
  dbr:Emperor_Antoku dbo:father ?father .
  
  # Ensure the father is royalty and an office holder
  ?father a dbo:Monarch ;
          dbo:officeHolderOf ?office .

  # Find the child who is royalty
  ?father dbo:child ?child .
  ?child a dbo:Monarch .
}
```",2,5,3,2,1,3,3,71,0,0,3,0,0.0,0
976,14,train,Give me the office of the person born as Mehmet Naci Bostancı.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
SELECT ?office
WHERE {
  ?person foaf:name ""Mehmet Naci Bostancı""@en .
  ?person dbp:office ?office .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
573,4,train,"Give me the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/governor> ""Charlie Baker""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region
WHERE {
  # Find Charlie Baker's administrative role
  dbr:Charlie_Baker dbo:officeHolder ?role .
  
  # Get the region associated with that role
  ?role dbo:administrativeArea ?region .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
839,4,train,"Give me the person born, that is a musical artist, as Kevin Richard Russell.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthDate
WHERE {
  ?person dbr:Kevin_Richard_Russell .
  ?person dbo:birthDate ?birthDate .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""musical artist""))
}
```

This query does the following:
- Uses `PREFIX` to define common namespaces for DBpedia.
- Selects the birth date (`?birthDate`) of a person identified as Kevin Richard Russell.
- Ensures that this person has an occupation containing the term ""musical artist"" (case-insensitive check).",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
47,21,train,Give me the office of the administration of Jagdeep Dhankhar and office of Ajoy Mukherjee.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?office
WHERE {
  {
    # Office held by Jagdeep Dhankhar
    ?dhankhar a dbo:Person ;
              foaf:name ""Jagdeep Dhankhar""@en .
    ?dhankhar dbo:officeHolder ?office .
  }
  UNION
  {
    # Office held by Ajoy Mukherjee
    ?mukherjee a dbo:Person ;
               foaf:name ""Ajoy Mukherjee""@en .
    ?mukherjee dbo:officeHolder ?office .
  }
}
ORDER BY ?office",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
417,2,train,Give me the child of Alexandrine of Mecklenburg-Schwerin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  dbr:Alexandrine_of_Mecklenburg-Schwerin dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
976,16,train,"Who is the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı?","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayorName WHERE {
  ?mayor a dbo:Mayor ;
         dbo:nationality dbr:Turkey ;
         dbo:officeHolder true .
  
  ?mayor dbo:politician true .

  ?organization a dbo:Organization, dbo:PoliticalParty ;
                dbo:nationality dbr:Turkey ;
                dbo:member ?mayor .

  ?reference dbr:Millet_İttifakı ;
             dbo:relatedOrganisation ?organization .
}
```",2,8,3,2,1,3,3,71,0,0,1,0,0.0,0
495,5,train,Give me the child of Princess Charlotte of Saxe-Hildburghausen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?princess a dbo:Person ;
            foaf:name ""Princess Charlotte of Saxe-Hildburghausen""@en .
  ?princess dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
955,12,train,"Give me the band of the band member, that is a musical artist and an artist, of Street Dogs and band of Nate Albert.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nate_Albert> . ?result <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  # Find band members of Street Dogs who are also musical artists and general artists
  ?member dbo:bandMemberOf dbr:Street_Dogs .
  ?member a dbo:MusicalArtist ;
          a dbo:Artist .

  # Get the bands associated with these members
  ?member dbo:bandMemberOf ?band .
}
```

This query does the following:
- Identifies individuals (`?member`) who are band members of Street Dogs.
- Ensures that these individuals are both musical artists and general artists.
- Retrieves the bands (`?band`) to which these individuals belong.",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
773,16,train,"Give me the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?successor
WHERE {
  # Louis the Pious resource
  ?louis a dbo:Monarch ;
         foaf:name ""Louis the Pious""@en .

  # Find children who are royalties
  ?child dbo:parent ?louis ;
         a dbo:Royalty .

  # Find successors of these children
  ?successor dbp:predecessor ?child .
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
36,6,train,Give me the actor of Being Mrs Elliot and person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorName
WHERE {
  # Find the actor of ""Being Mrs Elliot""
  ?movie dbo:starring ?actor .
  ?actor foaf:name ?actorName .

  # Ensure the movie is ""Being Mrs Elliot""
  ?movie dbr:Being_Mrs_Elliot .

  # Filter actors born in 1971
  OPTIONAL { 
    ?actor dbo:birthYear ?birthYear .
    FILTER (?birthYear = 1971)
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
987,14,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  ?region dbo:timeZone dbr:Central_European_Time .
  ?country dbo:locatedIn ?region ;
           a dbo:Country .
}
```",2,3,3,2,1,3,3,71,0,0,173261,0,0.0,0
933,14,train,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandName
WHERE {
  # Find the band associated with Alan Warner
  ?band a dbo:Band ;
        dbo:musicalArtist dbr:Alan_Warner ;
        rdfs:label ?bandName .
  
  # Ensure the band is also classified as a group and an organisation
  ?band a dbo:MusicalGroup ;
        a dbo:Organization .

  FILTER (lang(?bandName) = 'en')
}
ORDER BY ?bandName",2,5,3,2,1,3,3,71,0,0,4,0,0.0,0
579,1,train,Give me the person born as Isobel Jane Miller Richard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Isobel Jane Miller Richard""@en . }","PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT ?person ?name WHERE {
  ?person a foaf:Person .
  OPTIONAL { ?person foaf:name ?name . }
  FILTER(CONTAINS(LCASE(?name), ""isobel jane miller richard""))
}
```

### Explanation

- **Prefixes:** `foaf` and `schema` are used for common properties related to people.
- **SELECT Clause:** Retrieves the person (`?person`) and their name (`?name`).
- **WHERE Clause:**
  - Matches entities of type `foaf:Person`.
  - Optionally retrieves the name using `foaf:name`.
  - Uses a `FILTER` with `CONTAINS` to match the birth name, ensuring case insensitivity by converting to lowercase.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
102,3,train,Give me the player in Ellie Roebuck.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player
WHERE {
  ?person foaf:name ""Ellie Roebuck"" .
  ?person dbo:player ?player .
}
```

This query assumes that `dbo:player` is the correct property linking a person to their role as a player, and `foaf:name` is used for matching the name ""Ellie Roebuck.""",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
826,8,train,Who is the parent of Prince Friedrich of Hesse and by Rhine?,SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?child { dbr:Friedrich_of_Hesse_and_by_Rhine }
  
  ?child dbo:childOf ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
170,12,train,Give me the domain of Mayor and entity in Russia and birth place of Era Ziganshina.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mayorDomain ?entityInRussia ?birthPlace
WHERE {
  # Domain of Mayor in Russia
  ?mayor a dbo:Mayor ;
         dbo:country dbr:Russia .
  BIND(dbo:Mayor AS ?mayorDomain)

  # Entity in Russia (can be any entity related to Russia)
  OPTIONAL { 
    ?entity dbo:country dbr:Russia .
    BIND(?entity AS ?entityInRussia)
  }

  # Birthplace of Era Ziganshina
  dbr:Era_Ziganshina dbo:birthPlace ?birthPlace .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
170,1,train,Give me the birth place of Era Ziganshina.,SELECT ?result WHERE { <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace
WHERE {
  ?person foaf:name ""Era Ziganshina""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
554,12,train,Give me the leader of the birth place of The Legendary Tigerman and leader of Portuguese São Tomé and Príncipe.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?result . <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Portuguese_São_Tomé_and_Príncipe> <http://dbpedia.org/property/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leaderOfBirthplace ?leaderOfSTP
WHERE {
  # Find the birthplace of The Legendary Tigerman
  dbr:The_Legendary_Tigerman dbo:birthPlace ?birthPlace .

  # Get the leader of the birthplace
  ?birthPlace dbo:headOfState ?leaderOfBirthplace .
  
  # Get the current leader of São Tomé and Príncipe
  dbr:São_Tomé_and_Príncipe dbo:headOfState ?leaderOfSTP .

  # Optional filter to ensure leadership is current (if applicable)
  FILTER EXISTS { ?leaderOfBirthplace dbo:termStartYear ?startYear . }
  FILTER EXISTS { ?leaderOfSTP dbo:termStartYear ?stpStartYear . }

}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
382,7,train,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  ?manager a dbo:SoccerManager ;
           dbo:teamManaged ?bonnerSC .
  
  ?bonnerSC rdfs:label ""Bonner SC""@en .

  ?manager dbo:sport dbr:Soccer ;
           dbo:occupation dbr:Athlete ;
           dbo:occupation dbr:SportsManager .

  OPTIONAL { ?manager dbp:birthPlace ?birthPlace }
}
```

### Explanation

- **PREFIX**: Define prefixes for common DBpedia properties.
- **SELECT**: We are interested in the `?birthPlace` of the manager.
- **WHERE**:
  - Identify a person (`?manager`) who is a `SoccerManager`.
  - Ensure this manager manages `Bonner SC`.
  - Confirm that the manager is also an athlete and a sports manager.
  - Use `OPTIONAL` to retrieve the birthplace, as it might not always be available.",2,5,3,2,1,3,2,20,0,0,2,0,0.0,0
267,14,train,Give me the person born on the birth date of the reference to Dan Cathy.,"SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?personName WHERE {
  # Get Dan Cathy's birth date
  dbr:Dan_Cathy dbo:birthday ?danCathyBirthDate .

  # Find other people with the same birth date
  ?person a dbo:Person ;
          dbo:birthday ?birthDate .
  
  FILTER (?person != dbr:Dan_Cathy) # Exclude Dan Cathy himself
  FILTER (?birthDate = ?danCathyBirthDate)

  # Get person names
  OPTIONAL { ?person rdfs:label ?personName . FILTER (lang(?personName) = 'en') }
}
ORDER BY ?personName",3,3,4,3,1,3,2,20,0,0,35,0,0.0,0
417,32,train,"Give me the child of the father of Frederick IX of Denmark and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child ?spouse
WHERE {
  # Frederick IX of Denmark's father
  ?father a dbo:Person ;
          dbo:spouse ?mother ;
          dbo:child ?frederickIX .
  
  # Frederick IX of Denmark
  ?frederickIX rdfs:label ""Frederick IX of Denmark""@en .

  # Count Ingolf of Rosenborg's parent
  ?parent a dbo:Person ;
          dbo:spouse ?ingolfsSpouse ;
          dbo:child ?countIngolf .
  
  # Count Ingolf of Rosenborg
  ?countIngolf rdfs:label ""Count Ingolf of Rosenborg""@en .

  # Ensure the individuals are royalty
  FILTER EXISTS { ?father dbo:royaltyStatus dbp:true . }
  FILTER EXISTS { ?mother dbo:royaltyStatus dbp:true . }
  FILTER EXISTS { ?parent dbo:royaltyStatus dbp:true . }
  FILTER EXISTS { ?ingolfsSpouse dbo:royaltyStatus dbp:true . }

  # Return the child of Frederick IX's father and spouse of Count Ingolf's parent
  VALUES (?child) { ?frederickIX }
  VALUES (?spouse) { ?mother ?ingolfsSpouse }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
341,5,train,Give me the band member of the awardee of List of awards and nominations received by Beyoncé.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Beyoncé> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Beyoncé's awards and nominations
  ?award dbo:recipient dbr:Beyoncé .
  
  # Awardees related to the same award (could be bands or individuals)
  ?relatedAward dbo:recipient ?awardee .

  # Ensure the awardee is not Beyoncé herself
  FILTER (?awardee != dbr:Beyoncé)

  # Find band members of these awardees
  ?bandMember dbo:memberOf ?awardee .
}",2,2,3,2,1,2,2,9,0,0,50,0,0.0,0
166,13,train,"Give me the resting place of the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlace
WHERE {
  # Find the military force associated with Manuel Hedilla
  ?militaryForce dbo:leader dbr:Manuel_Hedilla .
  
  # Ensure this military force is involved in an event that is both a societal and military conflict
  ?event dbo:agent ?militaryForce ;
         rdf:type dbo:SocietalEvent, dbo:MilitaryConflict .

  # Find the resting place of the military force
  ?militaryForce dbo:location ?restingPlace .
}
```",3,6,4,3,1,3,2,20,0,0,36,0,0.0,0
326,4,train,"Give me the person decedent at Rancho Mirage, California and professional in Composer.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Rancho_Mirage,_California> . ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name
WHERE {
  ?person a dbo:Person .
  ?person foaf:name ?name .
  ?person dbo:deathPlace ?place .
  ?person dbo:profession ?profession .

  FILTER (CONTAINS(LCASE(?place), ""rancho mirage, california""))
  FILTER (CONTAINS(LCASE(?profession), ""composer""))

}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
892,35,train,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?profession ?region
WHERE {
  # Henri Crolla's profession
  dbr:Henri_Crolla dbo:occupation ?profession .

  # Italian region that is a settlement and administrative region associated with the Democratic Party (Italy)
  ?region a dbo:Region ;
          dbp:country dbr:Italy ;
          dbo:settlement ?settlement ;
          dbo:administrativeRegion ?adminRegion .
  
  FILTER EXISTS { ?region dbo:partyAffiliation dbr:Democratic_Party_(Italy) }
}
```",4,8,5,2,2,3,3,71,0,0,587,0,0.0,0
216,11,train,Give me the administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?designerName ?adminPosition
WHERE {
  # Find the designer of ""Woolfe: The Red Hood Diaries""
  ?game dbo:developer ?studio .
  ?game rdfs:label ""Woolfe: The Red Hood Diaries""@en .

  # Identify the person who designed the game
  ?person dbo:worksFor ?studio ;
          dbo:occupation dbr:Video_game_designer .

  # Get the name of the designer
  ?person foaf:name ?designerName .

  OPTIONAL {
    # Find any administrative position held by the designer
    ?person dbo:positionHeld ?adminPosition .
  }
}
```",2,2,3,2,1,2,3,28,0,0,1099,0,0.0,0
892,6,train,Give me the award of Anna Ishii.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Anna Ishii""@en .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
791,13,train,Give me the predecessor of the child of Emperor Takakura.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?predecessor
WHERE {
  ?emperor rdf:type dbo:Emperor .
  ?emperor rdfs:label ""Takakura""@en .

  ?child dbo:childOf ?emperor .
  
  ?succession dbo:hasSuccessor ?child .
  ?succession dbo:hasPredecessor ?predecessor .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
216,2,train,Give me the administration of .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> """"@en . }","```sparql
SELECT ?countryLabel ?administrationLabel WHERE {
  ?country dbo:type dbr:Countries_and_territories .
  ?country rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = 'en') .

  OPTIONAL { 
    ?country dbo:government ?administration .
    ?administration rdfs:label ?administrationLabel .
    FILTER (lang(?administrationLabel) = 'en')
  }
}
```",1,1,2,1,1,2,3,28,0,0,1099,0,0.0,0
645,11,train,Give me the commander in the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Carlos Asensio Cabanillas""@en .
  
  OPTIONAL {
    ?unit dbo:commander ?commander .
    ?person dbo:militaryUnit ?unit .
  }
}
```",2,2,3,2,1,3,3,71,0,0,51,0,0.0,0
573,25,train,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Find the author of ""Exchequer Standards""
  ?author dbo:work dbr:Exchequer_Standards .
  
  # Identify the parent of this author
  ?author dbo:child ?parent .

  # Ensure the parent is a politician and an office holder
  ?parent rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Check that the person has deceased in Quincy, Massachusetts
  ?parent dbo:deathPlace dbr:Quincy,_Massachusetts .
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
955,4,train,"Give me the reference, that is a band and a group and an organisation, to Street Dogs.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?streetDogs WHERE {
  ?streetDogs rdf:type dbo:Band .
  ?streetDogs rdfs:label ""Street Dogs""@en .
  FILTER NOT EXISTS { ?streetDogs rdf:type dbo:MusicalArtist . }
  
  OPTIONAL {
    ?streetDogs rdf:type dbo:Group .
  }

  OPTIONAL {
    ?streetDogs rdf:type dbo:Organization .
  }
}
```

### Explanation:

- **PREFIX:** Define prefixes for DBpedia ontology and RDF.
- **SELECT:** Choose the URI of ""Street Dogs.""
- **WHERE Clause:**
  - Ensure `?streetDogs` is a `dbo:Band`.
  - Use `rdfs:label` to match ""Street Dogs"" with English language label.
  - Exclude broader category `dbo:MusicalArtist` to ensure specificity as a band.
  - Use `OPTIONAL` clauses for `dbo:Group` and `dbo:Organization` to check if they are also categorized under these types.",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
273,3,train,Give me the child of Giovanni Agnelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  ?person dbo:spouse|dbo:childOf* dbr:Giovanni_Agnelli .
  ?person a dbo:Person .
  ?person dbo:child ?child .
}
```

This query uses the `dbo:child` property to find children of Giovanni Agnelli. The pattern `dbo:spouse|dbo:childOf*` is used to ensure that we are considering all possible familial connections, though primarily focusing on direct child relationships.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
965,25,train,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Prince George of Battenberg's parent
  ?person dbo:birthName ""Prince George of Battenberg""@en .
  ?person dbo:child ?child .
  
  # Parent is a noble
  ?parent dbo:spouseOrPartner ?person ;
          dbp:nobleTitle ?title .

  # Louise Mountbatten's parent
  ?louise dbo:birthName ""Louise Mountbatten""@en .
  ?louise dbo:child ?child2 .
  
  # Same parent for both
  FILTER (?parent = ?person)
  FILTER (?child = ?child2)
}
```

### Explanation:

- **PREFIX**: Define prefixes for DBpedia ontology and properties.
- **SELECT DISTINCT ?parent**: Retrieve distinct parents meeting the criteria.
- **WHERE Clause**:
  - Identify Prince George of Battenberg by his birth name.
  - Find his children using `dbo:child`.
  - Check if these parents have a noble title (`dbp:nobleTitle`).
  - Identify Louise Mountbatten and her parent(s) similarly.
  - Use `FILTER` to ensure the same person is both a parent of Prince George and Louise.",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
865,37,train,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of Shahla Khatun.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father
WHERE {
  ?spouse a dbo:Spouse ;
          foaf:partner ?syeda .
  
  ?syeda foaf:name ""Syeda Shahar Banu""@en .

  ?child dbo:parent ?spouse, ?father ;
         dbo:occupation dbo:Politician ;
         dbo:child ?shahla .

  ?shahla foaf:name ""Shahla Khatun""@en .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
978,9,train,"Who is the professional, that is a musical artist and an artist, in the award of Michel Claparède?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person a dbo:Artist .
  
  OPTIONAL { 
    ?award dbo:recipient ?person .
    ?award rdfs:label ""Michel Claparède""@en .
  }
}
```",2,4,3,2,1,3,2,20,8677,58212,0,0.12972237587645202,1.0,0.22965354789190903
365,13,train,"Give me the person born as the birth name of the commander, that is an office holder, in Ukrainian–Soviet War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?birthName ?office
WHERE {
  ?person dbo:birthName ?birthName .
  
  # Assuming there is a specific resource for the Ukrainian–Soviet War
  ?warEvent dbr:Ukrainian%E2%80%93Soviet_War .

  # Linking person to being a commander in the war
  ?person dbo:commanderOf ?warEvent .
  
  # Checking if the person is an office holder
  ?person dbo:officeHolder ?office .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
281,17,train,"Give me the awardee of Volunteer Decoration and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?result <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?volunteerDecorationAward ?militaryConflictAward
WHERE {
  # Lawrence Moore Cosgrave as the awardee of Volunteer Decoration
  ?cosgrave a dbo:AwardRecipient ;
            dbo:award ?volunteerDecorationAward .
  
  FILTER(?volunteerDecorationAward = dbr:Volunteer_Medal)

  # Lawrence Moore Cosgrave as the awardee of an award related to a military conflict
  ?cosgrave a dbo:AwardRecipient ;
            dbo:award ?militaryConflictAward .

  ?militaryConflictAward dbo:relatedToMilitaryConflict ?conflict .
  
  FILTER(?cosgrave = dbr:Lawrence_Moore_Cosgrave)
}
```

This query does the following:
- Selects awards related to Lawrence Moore Cosgrave.
- Identifies the ""Volunteer Decoration"" award specifically.
- Finds any military conflict-related awards he received.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
935,4,train,"Give me the native of Balochistan, Pakistan.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name
WHERE {
  ?person dbo:populationPlace dbr:Balochistan_(province) .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,2,20,0,0,57,0,0.0,0
791,21,train,"Give me the father of Emperor Go-Toba and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherOfGoToba ?spouseOfSpouse
WHERE {
  # Father of Emperor Go-Toba
  ?goToba dbo:father ?fatherOfGoToba .
  ?goToba rdfs:label ""Emperor Go-Toba""@en .

  # Spouse of Emperor Takakura
  ?takakura dbp:spouse ?spouseOfTakakura .
  ?takakura rdfs:label ""Emperor Takakura""@en .

  # Spouse of the spouse (who is royalty)
  ?spouseOfTakakura dbp:spouse ?spouseOfSpouse .
  
  # Ensure the spouse is a royalty
  ?spouseOfSpouse dbo:royalty true .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
83,0,train,Give me the ruling party in Fortaleza.,SELECT ?result WHERE { <http://dbpedia.org/resource/Fortaleza> <http://dbpedia.org/property/leaderParty> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName
WHERE {
  dbr:Fortaleza dbo:government ?government .
  ?government dbo:rulingParty ?rulingParty .
  ?rulingParty rdfs:label ?partyName .
  FILTER (lang(?partyName) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
955,1,train,Give me the band of Johnny Rioux.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Rioux> . },"```sparql
SELECT ?band
WHERE {
  ?person foaf:name ""Johnny Rioux""@en .
  ?person dbp:band ?band .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
445,27,train,Give me the entity in the award of the commander in Battle of Saint-Mihiel.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?recipient
WHERE {
  ?award dbo:recipient ?recipient .
  ?award rdf:type dbr:Commander .
  
  OPTIONAL { 
    ?recipient dbo:participatedInBattle ?battle .
    ?battle rdfs:label ""Battle of Saint-Mihiel""@en .
  }
}
```",3,3,4,3,1,3,3,71,0,0,87241,0,0.0,0
645,8,train,"Give me the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office
WHERE {
  ?person foaf:name ""Camilo Menéndez Tolosa"" .
  ?person dbo:office ?office .
  
  FILTER EXISTS { 
    ?office a dbo:GovernmentAgency .
  }
  FILTER EXISTS { 
    ?office a dbo:Organization .
  }
}
```

### Explanation:

- **PREFIX**: We define prefixes for `dbo` (DBpedia ontology) and `dbp` (DBpedia properties).
- **SELECT**: We are interested in the office (`?office`) of Camilo Menéndez Tolosa.
- **WHERE**:
  - We match a person with the name ""Camilo Menéndez Tolosa"" using `foaf:name`.
  - We find the office associated with this person using `dbo:office`.
  - We use `FILTER EXISTS` to ensure that the office is both a government agency and an organization.

This query should return offices that meet all specified criteria when executed against DBpedia.",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
645,21,train,Give me the leader of Ministry of the Army (Spain) and commander in the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?commanderRole
WHERE {
  # Find the leader of Ministry of the Army (Spain)
  dbr:Ministry_of_the_Army_(Spain) dbo:head ?leader .

  # Find Carlos Asensio Cabanillas' role in a military force
  OPTIONAL {
    dbr:Carlos_Asensio_Cabanillas dbo:militaryCommanderOf ?commanderRole .
  }
}
```

### Explanation

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT**: We select the leader of the Ministry and any military role associated with Carlos Asensio Cabanillas.
- **WHERE**:
  - The first triple pattern identifies the leader of the Ministry of the Army (Spain) using `dbo:head`.
  - The second part uses an `OPTIONAL` clause to find if Carlos Asensio Cabanillas has a military command role, assuming such a property exists as `dbo:militaryCommanderOf`.

This query assumes certain properties (`dbo:head`, `dbo:militaryCommanderOf`) based on typical DBpedia structures. Adjustments may be needed depending on the exact schema in DBpedia.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
976,10,train,Give me the office of Mustafa Şentop and office of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?person ?officeLabel WHERE {
  {
    ?person rdfs:label ""Mustafa Şentop""@en .
    ?person dbp:office ?office .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  } UNION {
    ?person rdfs:label ""Naci Bostancı""@en .
    ?person dbp:office ?office .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
158,9,train,"Give me the award, that is a country, of the reference to Adelbert Cronkhite.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/awards> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardName WHERE {
  ?person rdfs:label ""Adelbert Cronkhite""@en .
  ?person dbo:honoraryAward ?award .
  ?award rdfs:label ?awardName .
  FILTER (CONTAINS(LCASE(?awardName), ""country""))
}
```

### Explanation

- **PREFIX**: Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT ?awardName**: Choose distinct award names to avoid duplicates.
- **WHERE Clause**:
  - `?person rdfs:label ""Adelbert Cronkhite""@en`: Identify the resource representing Adelbert Cronkhite.
  - `?person dbo:honoraryAward ?award`: Find awards associated with him.
  - `?award rdfs:label ?awardName`: Get the label of each award.
  - **FILTER**: Ensure the award name contains ""country"" to match the question's requirement.",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
527,2,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actor ?profession
WHERE {
  ?actor rdf:type dbo:Actor .
  ?actor dbo:occupation ?profession .
}
```",1,1,2,1,1,3,2,20,721,4189,20859,0.14684317718940937,0.03341056533827618,0.05443563608909022
465,32,train,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Find a child of Alfonso I d'Este
  ?child dbo:parent dbr:Alfonso_I_d%27Este ;
         rdf:type dbo:Person .

  # Find the spouse of this child
  ?spouse dbo:spouse ?child ;
          rdf:type dbo:Person .

  # Check if the spouse is a royalty and a child of Ferdinand I, Holy Roman Emperor
  ?spouse dbo:royalty dbr:Ferdinand_I,_Holy_Roman_Emperor ;
          dbo:parent dbr:Ferdinand_I,_Holy_Roman_Emperor .

  # Find the successor of this spouse
  ?successor dbo:predecessor ?spouse .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
129,14,train,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Link Dreamville Presents: Revenge to its associated musical artist
  dbr:Dreamville_Presents:_Revenge dbo:associatedMusicalArtist ?artist .

  # Ensure the artist is an organization
  ?artist a dbo:Organization .

  # Ensure the artist is professional in music
  ?artist dbo:fieldOfActivity dbr:Music .
}
```",3,4,4,2,2,2,3,28,0,0,3,0,0.0,0
888,9,train,"Give me the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?societalEvent
WHERE {
  # Identify the War in Donbas event
  dbr:War_in_Donbass (dbo:startDate ?start ; dbo:endDate ?end) .
  
  FILTER (?start >= ""2014-01-01""^^xsd:date && ?end <= ""2022-12-31""^^xsd:date)

  # Find military forces involved in the War in Donbas
  ?militaryForce dbo:partOf dbr:War_in_Donbass .
  
  # Identify societal events related to these military forces
  ?societalEvent dbo:relatedTo ?militaryForce ;
                a dbo:SocietalEvent .

}
ORDER BY ?militaryForce ?societalEvent",2,4,3,2,1,3,2,20,0,0,24,0,0.0,0
273,6,train,Give me the parent of Gianni Agnelli and spouse of Edoardo Agnelli (industrialist).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Edoardo_Agnelli_(industrialist)> . <http://dbpedia.org/resource/Gianni_Agnelli> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?gianniParent ?edoardoSpouse
WHERE {
  # Find Gianni Agnelli's parent
  ?gianni dbo:parent ?gianniParent .
  VALUES ?gianni { <http://dbpedia.org/resource/Gianni_Agnelli> }

  # Find Edoardo Agnelli's spouse
  ?edoardo dbo:spouse ?edoardoSpouse .
  VALUES ?edoardo { <http://dbpedia.org/resource/Edoardo_Agnelli_(industrialist)> }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
839,39,train,"Give me the band of Peter Schorowsky and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandOfPeter ?bandOfBand
WHERE {
  # Peter Schorowsky and his band
  ?person a dbo:Musician ;
          foaf:name ""Peter Schorowsky"" .
  
  OPTIONAL { 
    ?person dbp:memberOf ?bandOfPeter .
    
    # Check if the band is also a musical artist
    OPTIONAL {
      ?bandOfPeter a dbo:MusicalArtist ;
                   dbp:memberOf ?bandOfBand .
    }
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
417,25,train,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of Christian X of Denmark.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  # Frederick Francis III's children
  {
    ?child1 dbo:spouse* db:Frederick_Francis_III ;
           a dbo:Person .
    
    # Grandchildren of Frederick Francis III
    ?child2 dbo:parent ?child1 ;
            a dbo:Person .

    # Check if the grandchild is royalty
    OPTIONAL { ?child2 dbo:royalTitle ?title . }
  }

  UNION

  # Christian X's children
  {
    ?child3 dbo:spouse* db:Christian_X_of_Denmark ;
           a dbo:Person .
    
    # Grandchildren of Christian X
    ?child4 dbo:parent ?child3 ;
            a dbo:Person .

    # Check if the grandchild is royalty
    OPTIONAL { ?child4 dbo:royalTitle ?title . }
  }

  # Ensure the grandchild has a royal title
  FILTER EXISTS {
    ?grandchild dbo:royalTitle ?title .
  }

  # Match grandchildren from both branches
  VALUES (?grandchild) {
    (?child2)
    (?child4)
  }
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
987,4,train,"Who is the band, that is an artist and a musical artist, of Šako Polumenta?",SELECT ?result WHERE { <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Šako Polumenta""@en .
  
  ?person dbo:member ?band .

  ?band a dbo:Band ;
        rdfs:label ?bandName ;
        rdf:type dbo:Artist, dbo:MusicalArtist .

  FILTER (lang(?bandName) = 'en')
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
965,12,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and parent of Louise Mountbatten.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?george dbo:parent ?parent .
  ?louise dbo:parent ?parent .

  VALUES ?george { 
    dbpedia:George_Mountbatten,_2nd_Marquess_of_Milford_Haven 
  }
  
  VALUES ?louise { 
    dbpedia:Louise_Mountbatten 
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
892,11,train,Give me the entity in the profession of Henri Crolla.,SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?profession WHERE {
  ?person foaf:name ""Henri Crolla""@en .
  ?person dbo:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,0,1,13092,0.0,0.0,0
976,6,train,"Who is the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?mayorName WHERE {
  ?mayor rdf:type dbo:Mayor .
  ?mayor dbo:officeHolderOf ?party .
  ?party rdfs:label ""Nation Alliance (Turkey)""@en .
  FILTER(LANG(?partyLabel) = 'en') .

  ?mayor rdf:type dbo:Politician .
  ?mayor rdf:type dbo:OfficeHolder .

  ?mayor foaf:nationality ?nationality .
  ?nationality rdfs:label ""Turkish""@en .
  FILTER(LANG(?nationalityLabel) = 'en') .

  ?mayor foaf:name ?mayorName .
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
417,19,train,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of Christian X of Denmark.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse
WHERE {
  ?parent dbo:childCountIngolfOfRosenborg dbpedia:Count_Ingolf_of_Rosenborg .
  ?parent dbo:royalty ""true""^^xsd:boolean .
  ?parent dbo:childChristianX dbpedia:Christian_X_of_Denmark .

  OPTIONAL { ?parent dbo:spouse ?spouse . }
}
```

This query does the following:
- Identifies `?parent` as Count Ingolf of Rosenborg's parent.
- Ensures this parent is a royalty (`dbo:royalty ""true""`).
- Confirms that this parent is also a child of Christian X of Denmark.
- Retrieves the spouse of this parent using an optional clause.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
353,0,train,Give me the alma mater of Daniil Yegorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniil_Yegorov> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  ?person dbo:givenName ""Daniil"" .
  ?person dbo:familyName ""Yegorov"" .
  ?person dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
456,13,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  dbr:The_Shadow dbo:alterEgoOf ?character .
  ?character dbo:profession ?professional .
}
```

### Explanation:

- **PREFIX**: Define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT**: We are interested in the variable `?professional`, which represents the profession.
- **WHERE**:
  - `dbr:The_Shadow dbo:alterEgoOf ?character`: Find entities that have ""The Shadow"" as an alter ego.
  - `?character dbo:profession ?professional`: Retrieve the profession of these characters.

This query will return the professional identity associated with any character linked to ""The Shadow.""",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
554,4,train,"Who is the band, that is an artist, of Rita Redshoes?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandName
WHERE {
  ?person a dbo:Artist ;
          foaf:name ""Rita Redshoes""@en .
  
  ?band a dbo:Band ;
        dbo:member ?person ;
        foaf:name ?bandName .

}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
865,21,train,"Give me the father of Shahla Khatun and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father ?nativeCountry
WHERE {
  # Shahla Khatun's father
  ?shahla dbo:father ?father .
  
  # Ram Jaipal Singh Yadav's native place, which should be a country
  ?ram dbp:nativePlace ?place .
  ?place rdf:type dbo:Country .
  
  BIND(?place AS ?nativeCountry)
}
```

This query does the following:
- Retrieves Shahla Khatun's father using `dbo:father`.
- Finds Ram Jaipal Singh Yadav's native place and ensures it is a country by checking its type with `rdf:type dbo:Country`.
- Uses `BIND` to assign the native place as `?nativeCountry`.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
281,15,train,"Give me the commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of Volunteer Decoration.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Roy Boehm is involved in a military conflict (war)
  ?conflict dbo:participant dbr:Roy_Boehm ;
            a dbo:MilitaryConflict .

  # The conflict is an event
  ?conflict rdf:type dbo:Event .

  # Roy Boehm received the Volunteer Decoration
  dbr:Roy_Boehm dbo:award dbr:Volunteer_Decoration .

  # Find the commander of the conflict
  ?conflict dbo:commander ?commander .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
47,15,train,"Give me the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?administration
WHERE {
  # Find the commander of Operation Green Hunt
  ?operation dbo:commander ?commander .
  
  # Ensure the operation is ""Operation Green Hunt""
  FILTER (str(?operation) = ""Operation_Green_Hunt""^^xsd:string)
  
  # Ensure the commander is a politician
  ?commander rdf:type dbo:Politician .

  # Find the administration under which the commander served
  OPTIONAL {
    ?commander dbo:memberOf ?administration .
  }
}
```",2,3,3,2,1,3,3,71,0,0,189,0,0.0,0
170,3,train,Give me the work of International Energy Agency.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work ?description WHERE {
  VALUES ?iea { dbr:International_Energy_Agency }
  
  # Find works or related topics linked to the IEA
  ?work dbo:wikiPageWikiLink ?iea .
  
  OPTIONAL {
    ?work dbo:abstract ?description .
  }

  FILTER (lang(?description) = 'en')
}
ORDER BY ?work
```",1,1,2,1,1,2,3,28,2,1142,0,0.0017482517482517483,1.0,0.003490401396160559
129,3,train,Give me the mayor of 1999 West Dunbartonshire Council election.,SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor WHERE {
  ?election dbo:electionDate ?date .
  ?election dbo:place dbr:West_Dunbartonshire_Council .
  FILTER(YEAR(?date) = 1999)
  
  OPTIONAL { 
    ?mayor dbo:officeHolderOf ?election .
    ?mayor a dbo:Mayor .
  }
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
47,18,train,Give me the office of Suvendu Adhikari and office of Ajoy Mukherjee and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT DISTINCT ?office WHERE {
  {
    ?person dbo:wikiPageID ""Suvendu_Adhikari"" .
    ?person dbo:officeHolder ?office .
  }
  UNION
  {
    ?person dbo:wikiPageID ""Ajoy_Mukherjee"" .
    ?person dbo:officeHolder ?office .
  }
  UNION
  {
    ?person dbo:wikiPageID ""Bidesh_Ranjan_Bose"" .
    ?person dbo:officeHolder ?office .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
917,16,train,"Who is the father of the spouse, that is a royalty, of Leleiohoku I?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherName
WHERE {
  ?leleiohoku1 a dbo:Person ;
               dbp:surname ""Leleiohoku I"" .
  
  ?leleiohoku1 dbp:spouse ?spouse .

  ?spouse a dbo:RoyalFamilyMember ; # Assuming royalty is represented by this class
          dbo:father ?father .

  ?father rdfs:label ?fatherName .
  
  FILTER (lang(?fatherName) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
715,18,train,Give me the commander in Rif War and commander in Spanish Civil War and leader of Ministry of the Air (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?rifWarCommander ?civilWarCommander ?airMinisterLeader
WHERE {
  # Commander in the Rif War
  ?rifWarCommander a dbo:MilitaryPerson ;
                  dbo:commandedMilitaryUnit ?rifWarUnit .
  
  FILTER EXISTS { 
    ?rifWarUnit dbo:participatedIn dbr:Rif_War .
  }

  # Commander in the Spanish Civil War
  ?civilWarCommander a dbo:MilitaryPerson ;
                    dbo:commandedMilitaryUnit ?civilWarUnit .

  FILTER EXISTS {
    ?civilWarUnit dbo:participatedIn dbr:Spanish_Civil_War .
  }
  
  # Leader of the Ministry of the Air (Spain)
  ?airMinisterLeader a dbo:GovernmentOfficial ;
                     dbo:headOfDepartment ?ministryOfAir .

  FILTER EXISTS {
    ?ministryOfAir rdfs:label ""Ministry of the Air""@en .
    ?ministryOfAir dbo:country dbr:Spain .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
507,28,train,"Give me the spouse of the person born as Anne Voase Coates and professional in Film director, television director and director of Entertaining Mr Sloane (film).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person a dbo:FilmDirector ;
          foaf:name ""Anne Voase Coates""@en .
  
  OPTIONAL { 
    ?person dbo:film ""Entertaining Mr Sloane""@en .
  }
  
  ?person dbo:spouse ?spouse .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
965,2,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?parentLabel WHERE {
  VALUES ?person { dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven }
  
  OPTIONAL { 
    ?person dbo:father ?parent .
    ?parent rdfs:label ?parentLabel .
    FILTER (lang(?parentLabel) = 'en')
  }

  OPTIONAL {
    ?person dbo:mother ?parent .
    ?parent rdfs:label ?parentLabel .
    FILTER (lang(?parentLabel) = 'en')
  }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
579,4,train,"Give me the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name WHERE {
  ?person dbo:nationality dbr:United_Kingdom . # Assuming natives are from the UK
  ?person dbo:birthPlace dbr:Edinburgh .       # Born in Edinburgh
  ?person dbo:officeHolder ?office .            # Holds an office

  OPTIONAL { 
    ?person foaf:name ?name .
  }
}
```",1,2,2,1,1,3,2,20,0,0,88,0,0.0,0
715,12,train,Give me the commander in Spanish Civil War and leader of Ministry of the Air (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name
WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:spouseOrPartner ?ministryLeader .
  ?ministryLeader dbo:officeHolderOf dbr:Ministry_of_the_Air_(Spain) .
  
  OPTIONAL { 
    ?person dbo:commanderInWar dbr:Spanish_Civil_War .
  }
  
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
ORDER BY ?name
```

### Explanation:

- **PREFIX**: Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT**: Choose distinct individuals to avoid duplicates.
- **WHERE Clause**:
  - Identify a person who is a military person (`dbo:MilitaryPerson`).
  - Check if they have a connection to the Ministry of the Air through `officeHolderOf`.
  - Use an optional clause to check if they were a commander in the Spanish Civil War.
  - Retrieve their name with language filtering for English.

This query aims to find individuals who held both roles, ensuring precision and completeness by checking relevant DBpedia properties.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
445,2,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?entity
WHERE {
  ?entity dbo:country dbr:United_Kingdom .
}
```

This query selects distinct entities (`?entity`) that have a `dbo:country` relationship with the resource representing the United Kingdom (`dbr:United_Kingdom`). The use of `DISTINCT` ensures that each entity is listed only once, even if it appears in multiple triples.",1,1,2,1,1,3,3,71,0,0,42999,0,0.0,0
326,0,train,Give me the resident of Berkshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Berkshire> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?residentName
WHERE {
  ?person a dbo:Person .
  ?person dbo:residence dbr:Berkshire_County,_England ;
          dbo:birthPlace dbr:Berkshire_County,_England .
  OPTIONAL { ?person rdfs:label ?residentName . FILTER (lang(?residentName) = 'en') }
}
```

### Explanation:
- **PREFIX:** Define prefixes for ontology and resources.
- **SELECT DISTINCT ?residentName:** Retrieve distinct names of residents.
- **WHERE Clause:**
  - `?person a dbo:Person`: Ensure the subject is a person.
  - `dbo:residence` or `dbo:birthPlace`: Link the person to Berkshire as either their residence or birthplace.
  - `OPTIONAL { ?person rdfs:label ?residentName . FILTER (lang(?residentName) = 'en') }`: Optionally include English labels for names.

This query should effectively retrieve notable individuals associated with Berkshire, focusing on those who have it listed as a place of residence or birth.",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
274,0,train,Give me the band member of Dizzy Gillespie.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName WHERE {
  # Dizzy Gillespie resource
  dbr:Dizzy_Gillespie a dbo:MusicalArtist .

  # Find band members or collaborators
  ?bandMember dbo:musicalArtist dbr:Dizzy_Gillespie .
  
  # Get the name of each member
  ?bandMember rdfs:label ?memberName .
  
  FILTER (lang(?memberName) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,67,0,0.0,0
36,9,train,Give me the person born as Ayo Makun and person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find persons with the birth name ""Ayo Makun""
  ?person dbo:birthName dbr:Ayo_Makun .
  
  UNION
  
  # Find persons born in 1971
  ?person dbo:birthYear ""1971""^^xsd:gYear .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
773,32,train,Give me the parent of the successor of Charles the Bald and spouse of the father of Charles the Fat.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Find Charles the Bald's successor
  ?charlesTheBald dbo:successor ?successor .
  FILTER (str(?charlesTheBald) = ""Charles_the_Bald"") .

  # Find the father of Charles the Fat
  ?charlesTheFat dbp:father ?fatherOfCharlesTheFat .
  FILTER (str(?charlesTheFat) = ""Charles_the_Fat"") .

  # Find the spouse of the father of Charles the Fat
  ?spouse dbo:spouse ?fatherOfCharlesTheFat .

  # Find the parent of the successor of Charles the Bald
  ?successor dbo:parent ?parent .
  
  # Ensure we are looking at the same person for both conditions
  FILTER (?parent = ?spouse)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
917,38,train,Give me the child of the father of Keʻelikōlani and child of the father of Kamehameha IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child1 ?child2
WHERE {
  # Keʻelikōlani's father and his child
  dbr:Keʻelikōlani dbo:father ?keelikolanifather .
  ?keelikolanifather dbo:child ?child1 .

  # Kamehameha IV's father and his child
  dbr:Kamehameha_IV dbo:father ?kamehamehavifather .
  ?kamehamehavifather dbo:child ?child2 .
}
```

This query will return the children of Keʻelikōlani's father and Kamehameha IV's father, which includes Keʻelikōlani and Kamehameha IV themselves.",4,4,5,2,2,3,3,71,0,0,3,0,0.0,0
791,12,train,Give me the predecessor of Emperor Antoku and father of Emperor Go-Toba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?predecessor
WHERE {
  ?antoku dbo:predecessor ?predecessor .
  FILTER(STR(?antoku) = ""Emperor_Antoku"") .

  ?gotei dbo:child ?predecessor .
  FILTER(STR(?gotei) = ""Emperor_Go-Toba"") .

  ?predecessor foaf:parent ?gotei .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
456,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?alterEgo
WHERE {
  dbpedia:The_Shadow dbo:alterEgo ?alterEgo .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
965,39,train,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName
WHERE {
  # George Mountbatten, 2nd Marquess of Milford Haven
  ?george a dbo:Person ;
          dbp:parent ?parent .

  # Parent is a noble
  ?parent dbo:nobleTitle ?title .

  # Louise Mountbatten's parent
  ?louise a dbo:Person ;
          dbp:parent ?parent .

  # Birth name of the parent
  ?parent dbo:birthName ?birthName .
}
```

This query does the following:
- Identifies George Mountbatten and his parent.
- Ensures that this parent holds a noble title.
- Confirms that Louise Mountbatten shares the same parent.
- Retrieves the birth name of this common parent.",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
122,1,train,Give me the band of Gift of Gab (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band
WHERE {
  ?artist a dbo:MusicalArtist ;
          foaf:name ""Gift of Gab""@en .
  OPTIONAL { ?artist dbo:band ?band . }
}
```",1,1,2,1,1,2,2,9,0,0,4,0,0.0,0
341,1,train,Give me the writer of In Love & War (Amerie album).,SELECT ?result WHERE { <http://dbpedia.org/resource/In_Love_&_War_(Amerie_album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer
WHERE {
  ?song dbo:title ""In Love & War"" .
  ?song dbo:album dbr:Because_I_Love_It .
  ?song dbo:artist dbr:Amerie .
  ?song dbo:lyricist ?writer .
}
```",1,1,2,1,1,2,2,9,0,0,57,0,0.0,0
976,2,train,Give me the office of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office
WHERE {
  dbr:Naci_Bostancı dbo:office ?office .
}
```

This query selects the offices held by Naci Bostancı using the `dbo:office` property. It assumes that DBpedia has structured data about his political roles under this predicate.",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
507,31,train,Give me the director of Entertaining Mr Sloane (film) and spouse of the person born as the birth name of Anne V. Coates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?director ?spouse
WHERE {
  # Find the director of ""Entertaining Mr Sloane"" (film)
  dbr:Entertaining_Mr_Sloane_(film) dbo:director ?director .

  # Find Anne V. Coates' birth name
  dbr:Anne_V._Coates foaf:name ?anneName .
  FILTER regex(?anneName, ""Anne V. Coates"", ""i"") .
  
  # Find the person born with that name
  ?person foaf:name ?anneName .

  # Find the spouse of that person
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
715,9,train,Give me the commander in Rif War and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?rifCommander ?civilWarCommander WHERE {
  # Find commanders in the Rif War
  ?rifEvent a dbo:MilitaryConflict ;
            dbo:commander ?rifCommander .
  
  FILTER (STRSTARTS(STR(?rifEvent), ""http://dbpedia.org/resource/Rif_War""))

  # Find commanders in the Spanish Civil War
  ?civilWarEvent a dbo:MilitaryConflict ;
                 dbo:commander ?civilWarCommander .

  FILTER (STRSTARTS(STR(?civilWarEvent), ""http://dbpedia.org/resource/Spanish_Civil_War""))
}
```",2,2,3,1,2,3,3,71,4,42,0,0.08695652173913043,1.0,0.16
987,34,train,"Give me the entity in Montenegro and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandEntity ?birthPlace
WHERE {
  # Dado Prljaca is associated with a band
  dbr:Dado_Prljaca dbo:associatedBand ?bandEntity .
  
  # The band must be an artist and a musical artist
  ?bandEntity rdf:type dbo:Artist ;
              rdf:type dbo:MusicalArtist .

  # Find entities in Montenegro related to the band
  ?entityInMontenegro dbp:country dbr:Montenegro ;
                     dbo:associatedBand ?bandEntity .
  
  # Get the birthplace of the band
  OPTIONAL { ?bandEntity dbp:birthPlace ?birthPlace }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
417,9,train,Give me the child of Christian X of Denmark and spouse of Princess Caroline-Mathilde of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?spouse
WHERE {
  # Find the child of Christian X of Denmark
  ?child dbo:parent dbr:Christian_X_of_Denmark .
  
  # Find the spouse of Princess Caroline-Mathilde of Denmark
  ?spouse dbp:spouse dbr:Princess_Caroline_Matilda_of_Denmark .

  # Ensure the child and spouse are the same individual
  FILTER (?child = ?spouse)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
606,5,train,Who is the alumnus of University of Pennsylvania?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus ?alumnusLabel
WHERE {
  ?alumnus dbo:almaMater <http://dbpedia.org/resource/University_of_Pennsylvania> .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,1114,0,0.0,0
606,14,train,"Give me the birthplace of the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. ?v0 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX schema: <http://schema.org/>

SELECT DISTINCT ?alumnusName ?birthPlaceLabel
WHERE {
  ?alumnus dbo:almaMater dbr:University_of_Pennsylvania .
  ?alumnus foaf:name ?alumnusName .
  OPTIONAL { ?alumnus foaf:birthPlace ?birthPlace . }
  SERVICE <http://dbpedia.org/sparql> {
    ?birthPlace rdfs:label ?birthPlaceLabel .
    FILTER(LANG(?birthPlaceLabel) = 'en')
  }
}
ORDER BY ?alumnusName
```",3,6,4,3,1,3,2,20,0,0,598,0,0.0,0
41,3,train,"Who is the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election?",SELECT ?result WHERE { <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Identify the election
  dbr:2005_Castlereagh_Borough_Council_election dbo:leader ?leader .
  
  # Ensure the leader is a politician
  ?leader rdf:type dbo:Politician .

  # Ensure the leader is an office holder
  ?leader rdf:type dbo:OfficeHolder .
}
```",1,3,2,1,1,2,3,28,0,0,4,0,0.0,0
917,32,train,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of the father of Keʻelikōlani.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Kamehameha IV's royal children
  ?child dbo:childOf dbr:Kamehameha_IV ;
         dbo:royaltyStatus ?royalty .
  
  FILTER(?royalty != ""none"") # Assuming there is a property to filter royalty status

  # Keʻelikōlani's father
  ?keelikoFather dbo:parentOf dbr:_Keʻelikōlani_.

  # Common child
  ?child dbo:childOf ?keelikoFather .

  # Parent of the common child
  ?commonChild dbo:parent ?parent .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
507,19,train,Give me the spouse of the person born as Anne Voase Coates and director of Entertaining Mr Sloane (film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?anne a dbo:FilmDirector ;
        foaf:name ""Anne Voase Coates""@en .
  
  ?anne dbo:directed dbr:Entertaining_Mr_Sloane .

  ?anne dbo:spouse ?spouse .
}
```

### Explanation

- **PREFIX**: Define prefixes for ontology and properties.
- **SELECT**: We want to retrieve the spouse (`?spouse`).
- **WHERE**:
  - Identify Anne Voase Coates as a `FilmDirector`.
  - Link her to ""Entertaining Mr Sloane"" using the `dbo:directed` property.
  - Retrieve her spouse using the `dbo:spouse` property.

This query should return the spouse of Anne Voase Coates, given she is identified as the director of ""Entertaining Mr Sloane"".",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
216,21,train,Give me the player in the coach of Croatia national under-21 football team and team of Ognjen Vukojević.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player ?team
WHERE {
  # Find Ognjen Vukojević's role as a coach for the Croatia national under-21 football team
  dbr:Ognjen_Vukojević dbo:coach dbr:Croatia_national_under-21_football_team .

  # Get all players (members) of the Croatia national under-21 football team
  ?player dbo:member dbr:Croatia_national_under-21_football_team .
  
  # Find teams associated with Ognjen Vukojević as a coach or player
  OPTIONAL {
    ?team dbo:coach dbr:Ognjen_Vukojević .
    UNION
    ?team dbo:member dbr:Ognjen_Vukojević .
  }
}
```

This query does the following:
- Identifies Ognjen Vukojević as a coach for the Croatia national under-21 football team.
- Retrieves players who are members of this team.
- Optionally finds other teams associated with Ognjen Vukojević, either as a coach or member.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
826,30,train,"Give me the spouse of Anna Magdalena Appel and predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?predecessor ?successor
WHERE {
  # Spouse of Anna Magdalena Bach (Anna Magdalena Appel)
  dbr:Anna_Magdalena_Bach dbo:spouse dbr:Johann_Sebastian_Bach .
  
  # Predecessor of the parent of Prince Friedrich of Hesse and by Rhine
  dbr:Friedrich_of_Hesse_and_by_Rhine dbo:parent dbr:Alice_of_the_United_Kingdom ;
                                      dbo:mother ?predecessor .

  # Successor of Louis II, Grand Duke of Hesse
  dbr:Louis_II,_Grand_Duke_of_Hesse dbo:successor dbr:Ernest_Louis,_Grand_Duke_of_Hesse .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
93,13,train,"Give me the capital of the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital
WHERE {
  # Find the headquarters location for Clam Cove Pictograph Site
  dbr:Clam_Cove_Pictograph_Site dbo:headquartersLocation ?location .

  # Ensure this location is both a region and a settlement
  ?location rdf:type dbo:Region .
  ?location rdf:type dbo:Settlement .

  # Get the capital of this region/settlement
  ?location dbo:capital ?capital .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
83,4,train,"Who is the commander, that is a politician, in Central African Republic Civil War?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?name
WHERE {
  ?person a dbo:Politician .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""commander"") && CONTAINS(LCASE(?occupation), ""war"")) .
  
  OPTIONAL { 
    ?person dbp:name ?name .
  }
  
  ?event dbo:location <http://dbpedia.org/resource/Central_African_Republic_Civil_War> ;
         dbo:participant ?person .
}
ORDER BY ?name
```",1,2,2,1,1,3,2,20,0,0,279,0,0.0,0
236,3,train,"Give me the administration, that is an organisation, of John Adams.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration
WHERE {
  ?person rdfs:label ""John Adams""@en .
  ?person dbo:positionHeld ?position .
  ?position dbo:organization ?administration .
}
```

This query does the following:
- It looks for a resource (`?person`) that has an English label of ""John Adams"".
- It finds positions held by this person.
- It retrieves the organization associated with these positions, which represents the administration.",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
826,2,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessorName WHERE {
  ?grandDuke a dbo:GrandDuke ;
             dbo:successor dbr:Louis_IV,_Grand_Duke_of_Hesse .
  ?grandDuke rdfs:label ""Louis IV, Grand Duke of Hesse""@en .
  ?grandDuke dbo:predecessor ?predecessor .
  ?predecessor rdfs:label ?predecessorName .
  FILTER(LANG(?predecessorName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
955,2,train,"Give me the work, that is a work and an album and a musical work, of Matt Freeman.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work WHERE {
  ?work dbo:creator dbr:Matt_Freeman .
  ?work rdf:type dbo:Album .
  ?work rdf:type dbo:MusicalWork .
}
```

This query does the following:
- Selects distinct works (`?work`) associated with Matt Freeman.
- Ensures these works are of type `dbo:Album` and `dbo:MusicalWork`.",1,4,2,1,1,3,2,20,0,0,2,0,0.0,0
507,4,train,Who is the person born as Anne Voase Coates?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","```sparql
SELECT ?person ?currentName WHERE {
  ?person foaf:name ""Anne Voase Coates""@en .
  OPTIONAL { ?person rdfs:label ?currentName FILTER (lang(?currentName) = 'en') }
}
```

This query does the following:
- Searches for a resource (`?person`) with a `foaf:name` property matching ""Anne Voase Coates"".
- Optionally retrieves an English label (`rdfs:label`) of that person, which often represents their current or professional name.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
976,22,train,Give me the office of Mustafa Şentop and office of the person born as Mehmet Naci Bostancı.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?office
WHERE {
  { 
    ?person rdfs:label ""Mustafa Şentop""@en .
    ?person dbo:positionHeld ?office .
  }
  UNION
  {
    ?person rdfs:label ""Mehmet Naci Bostancı""@en .
    ?person dbo:positionHeld ?office .
  }
}
```

### Explanation:

- **PREFIX:** We define prefixes for `dbo` (DBpedia ontology) and `dbp` (DBpedia properties).
- **SELECT Clause:** We select the person and their office.
- **WHERE Clause:** 
  - For Mustafa Şentop, we match his label and retrieve his held positions.
  - Similarly, for Mehmet Naci Bostancı, we match his label and retrieve his held positions.
- **UNION:** This is used to combine results from both individuals.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
129,8,train,Give me the professional in the mayor of 1999 West Dunbartonshire Council election.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?professional 
WHERE {
    ?election dbo:electionDate ?date .
    FILTER (YEAR(?date) = 1999 && CONTAINS(LCASE(STR(?election)), ""west dunbartonshire council""))
    
    ?election dbo:winner ?mayor .
    
    OPTIONAL { ?mayor dbo:occupation ?professional }
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
826,39,train,"Give me the successor of Louis II, Grand Duke of Hesse and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual
WHERE {
  # Successor of Louis II, Grand Duke of Hesse
  ?succession dbo:predecessor dbr:Louis_II,_Grand_Duke_of_Hesse ;
              dbo:successor ?individual .

  # Predecessor of the parent (Louis IV) of a child of Louis IV
  ?child dbo:parent dbr:Louis_IV,_Grand_Duke_of_Hesse .
  ?predecession dbo:successor dbr:Louis_IV,_Grand_Duke_of_Hesse ;
                dbo:predecessor ?individual .

  # Ensure the individual is the same in both conditions
  FILTER (?individual = ?individual)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
465,23,train,"Give me the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?parent dbo:spouse ?ercole .
  ?ercole foaf:name ""Ercole II d'Este"" .

  ?child dbo:childOf ?parent .
  
  ?successor dbo:predecessor ?child .
}
```

### Explanation:
- **PREFIX:** Define the namespace for DBpedia ontology.
- **SELECT:** We are interested in finding the `?successor`.
- **WHERE Clause:**
  - Identify `?ercole` as Ercole II d'Este using his name.
  - Find `?parent` who is a spouse of `?ercole`.
  - Identify `?child` who is a child of this `?parent`.
  - Finally, find the `?successor` whose predecessor is `?child`.

This query assumes that relationships like `dbo:spouse`, `dbo:childOf`, and `dbo:predecessor` are used in DBpedia to represent these familial connections. Adjustments may be needed based on actual property usage.",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
926,32,train,Give me the father of the father of Abdulaziz and successor of the child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v1 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?commonEntity
WHERE {
  # Father of the father of Abdulaziz
  ?abdulazizFather dbo:father dbr:Abdulaziz .
  ?grandfather dbo:father ?abdulazizFather .

  # Successor of a child of Ahmed III
  ?child dbo:child dbr:Aḥmed_III .
  ?successor dbo:successor ?child .

  # Find common entity
  FILTER (?grandfather = ?successor)
  BIND(?grandfather AS ?commonEntity)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
573,37,train,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of John Quincy Adams.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?decedentName WHERE {
  ?parent a dbo:Politician ;
          dbp:nationality ""American""@en ;
          dbo:child dbr:John_Quincy_Adams .
  
  ?residence dbo:resident ?parent ;
             dbo:settlement ?settlement .

  ?decedent dbo:deathPlace ?residence ;
            rdfs:label ?decedentName .
  
  FILTER (lang(?decedentName) = ""en"")
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
47,23,train,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office
WHERE {
  # Find the commander involved in Operation Green Hunt
  ?commander dbo:participatedInOperation dbr:Operation_Green_Hunt .
  
  # Ensure this commander is a politician
  ?commander rdf:type dbo:Politician .

  # Retrieve the office of administration related to this commander
  ?commander dbo:office ?office .
}
```",3,4,4,3,1,3,3,71,0,0,369,0,0.0,0
573,12,train,"Give me the person decedent at Quincy, Massachusetts and parent of John Quincy Adams.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
    # John Quincy Adams' parent relationship
    dbr:John_Quincy_Adams dbo:parent ?decedent .
    
    # Decedent's death location
    ?decedent dbo:deathPlace dbr:Quincy,_Massachusetts .

    # Ensure the decedent is a person (optional, for clarity)
    ?decedent rdf:type dbo:Person .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
987,15,train,"Who is the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?finalBandName
WHERE {
  # First level: Find Dado Pulema's band
  ?dado dbp:singer ""Dado Pulema""@en .
  ?dado dbo:band ?firstBand .

  # Second level: Find the final band that is an artist and musical artist of the first band
  ?firstBand dbo:artist ?finalBand ;
             dbo:musicalArtist ?finalBand .

  # Return the name of the final band
  ?finalBand rdfs:label ?finalBandName .
}
```",2,5,3,2,1,3,3,71,0,0,2,0,0.0,0
826,37,train,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  # Identify Louis I and his children who are royalties
  ?child dbo:parent dbr:Louis_I_of_Hesse_and_by_Rhine ;
         a dbo:Royalty .

  # Ensure the child is a predecessor of Louis IV, Grand Duke of Hesse
  ?child dbo:predecessor dbr:Louis_IV,_Grand_Duke_of_Hesse .

  # Find the successor of this specific child
  ?child dbo:successor ?successor .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
865,33,train,"Give me the native of British Raj and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?father ?nativePlace
WHERE {
  # Syeda Shahar Banu's spouse
  ?spouse a dbo:Person ;
          dbo:spouse ?syedaShaharBanu .
  
  # Child of the spouse who is a politician
  ?child dbo:parent ?spouse ;
         a dbo:Politician .

  # Father of that child
  ?father dbo:child ?child .

  # Native place of the British Raj
  ?britishRaj a dbo:Country ;
              foaf:nativePlace ?nativePlace .
  
  FILTER(?britishRaj = <http://dbpedia.org/resource/British_Raj>)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
987,18,train,Give me the entity in Montenegro and birth place of Dado Polumenta and birth place of Moamer Kasumović.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace ?montenegroEntity
WHERE {
  VALUES (?person ?label) { 
    (dbr:Dado_Polumenta ""Dado Polumenta"")
    (dbr:Rambo_Amadeus ""Moamer Kasumović"")
  }
  
  ?person dbo:birthPlace ?birthPlace .
  
  OPTIONAL {
    ?montenegroEntity a dbo:Place ;
                     dbo:country dbr:Montenegro .
  }
}
```

This query does the following:
- Uses `VALUES` to specify the individuals of interest.
- Retrieves their birth places using the `dbo:birthPlace` property.
- Optionally retrieves any entity that is a place in Montenegro.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
130,7,train,"Give me the figure known as the film, that is a soccer club and an organisation, of Candice Storey Lee.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?film ?soccerClub ?organization
WHERE {
  # Find Candice Storey Lee's resource
  ?person rdfs:label ""Candice Storey Lee""@en .
  
  # Find films associated with her
  OPTIONAL { 
    ?person dbo:workFilm ?film .
  }
  
  # Find soccer clubs and organizations associated with her
  OPTIONAL {
    ?person dbo:memberOfSportsTeam ?soccerClub .
  }
  OPTIONAL {
    ?person dbo:memberOfOrganization ?organization .
  }

  # Filter to ensure the entities are related to films, soccer clubs, or organizations
  FILTER (
    EXISTS { ?film a dbo:Film } ||
    EXISTS { ?soccerClub a dbo:SoccerTeam } ||
    EXISTS { ?organization a dbo:Organisation }
  )
}
ORDER BY ?film ?soccerClub ?organization",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
715,8,train,"Give me the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person dbp:name ""Carlos Franco Iribarnegaray""@en .
  ?person dbo:office ?office .

  FILTER EXISTS { ?office a dbo:GovernmentAgency . }
  FILTER EXISTS { ?office a dbo:Organization . }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
465,25,train,"Give me the successor of the child, that is a royalty, of Anne of Brittany and spouse of Archduchess Barbara of Austria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?successor
WHERE {
  ?child dbo:parent dbr:Anne_of_Brittany ;
         dbo:spouse dbr:Archduchess_Barbara_of_Austria .
  ?child dbo:royaltyStatus ?status .
  ?successor dbo:predecessor ?child .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
976,34,train,"Give me the office of Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v1 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeNaciBostanci ?officeLeaderKemalKilicdaroglu
WHERE {
  # Find the office of Naci Bostancı
  dbr:Naci_Bostancı dbo:positionHeld ?officeNaciBostanci .
  
  # Find Kemal Kılıçdaroğlu's administration (organisation)
  dbr:Kemal_Kılıçdaroğlu dbo:leaderOf ?administration .

  # Ensure the administration is an organisation
  ?administration a dbo:Organisation .

  # Find the leader of this administration
  ?administration dbo:leader ?leader .
  
  # Ensure the leader is a politician
  ?leader rdf:type dbo:Politician .

  # Get the office of this leader
  ?leader dbo:positionHeld ?officeLeaderKemalKilicdaroglu .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
166,10,train,"Give me the territory administered, that is a country, from the reference to Madrid.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  # Madrid as an administrative entity
  dbr:Madrid dbo:administrativeTerritory ?territory .

  # Ensure the territory is a country
  ?territory rdf:type dbo:Country .
  
  # Bind the country to a variable
  ?territory rdfs:label ?country .
}
```

This query does the following:
- It identifies ""Madrid"" as an administrative entity.
- It looks for territories administered by Madrid that are of type `dbo:Country`.
- It retrieves the label (name) of these countries.",2,3,3,2,1,3,2,20,0,0,15,0,0.0,0
865,2,train,Give me the father of Shahla Khatun.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?person dbo:givenName ""Shahla"" .
  ?person dbo:familyName ""Khatun"" .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
98,15,train,Give me the region of the time zone of Lopez Jaena and entity in Philippines.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?entity
WHERE {
  # Find the time zone of Lopez Jaena
  dbr:Lopez_Jaena dbo:timeZone ?timezone .
  
  # Determine the region associated with this time zone
  ?timezone dbo:inRegion ?region .

  # Identify the entity representing Lopez Jaena in the Philippines
  ?entity rdfs:label ""Lopez Jaena""@en .
  FILTER (CONTAINS(STR(?entity), ""Philippines""))
}
```

### Explanation:

- **PREFIX**: Define prefixes for DBpedia ontology and resources.
- **SELECT**: Choose variables `?region` and `?entity`.
- **WHERE**:
  - Find the time zone of Lopez Jaena using `dbo:timeZone`.
  - Determine the region associated with this time zone using `dbo:inRegion`.
  - Identify the entity for Lopez Jaena in the Philippines by filtering labels containing ""Philippines"".

This query should provide the region of the time zone and the corresponding DBpedia entity for Lopez Jaena.",3,3,4,2,2,2,3,28,0,0,1743,0,0.0,0
926,36,train,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of Mahmud II.",SELECT ?result WHERE { <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfRoyalty
WHERE {
  # Beyhan Sultan is a daughter of Mustafa III
  ?beyhanSultan dbo:father <http://dbpedia.org/resource/Mustafa_III> .
  
  # Mustafa III is royalty and father of Beyhan Sultan
  ?mustafaIII dbp:spouse ?motherOfBeyhan ;
              dbo:child ?beyhanSultan .

  # Abdul Hamid I is the child of Mustafa III and father of Mahmud II
  ?abdulHamidI dbo:father ?mustafaIII ;
               dbo:child <http://dbpedia.org/resource/Mahmud_II> .
  
  # Find the child of Abdul Hamid I (who is royalty)
  ?abdulHamidI dbo:child ?childOfRoyalty .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
839,5,train,"Give me the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band WHERE {
  ?person foaf:name ""Peter Schorowsky""@en .
  ?person dbo:musicalArtist ?band .
  
  ?band a dbo:Band ;
        a dbo:MusicalGroup .

  FILTER(LANG(?person) = 'en')
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
417,17,train,"Who is the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin?",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  # Alexandrine of Mecklenburg-Schwerin's children who are royals
  ?parent a dbo:RoyalFamily ;
          dbo:spouseOrPartner|dbo:child ?alexandrine .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .

  # Ensure the parent is royalty
  ?parent a dbo:Person ;
          dbo:royalTitle ?title .

  # Parent's children who are royals (grandchildren of Alexandrine)
  ?parent dbo:child ?grandchild .
  
  # Ensure the grandchild is royalty
  ?grandchild a dbo:RoyalFamily ;
              dbo:royalTitle ?g_title .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
874,9,train,"Give me the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?v0 <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer WHERE {
  ?work dbo:artist dbr:Horace_Andy .
  ?work dbo:creator ?writer .

  ?writer a dbo:Artist .
  ?writer a dbo:MusicalArtist .
}
```",2,5,3,2,1,3,2,20,0,0,29,0,0.0,0
417,0,train,Give me the spouse of Princess Caroline-Mathilde of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"```sparql
SELECT ?spouse WHERE {
  ?person dbo:spouse ?spouse .
  ?person rdfs:label ""Princess Caroline-Mathilde of Denmark""@en .
  FILTER (lang(?person) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
445,3,train,"Who is the resident, that is an athlete, of Great Britain?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX schema: <http://schema.org/>

SELECT DISTINCT ?person ?name
WHERE {
  ?person a dbo:Athlete .
  ?person dbo:residence dbr:United_Kingdom .
  ?person schema:name ?name .
}
ORDER BY ?name",1,2,2,1,1,3,3,71,0,0,6,0,0.0,0
527,9,train,"Give me the movie, that is a work and English and a television show, with the professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/starring> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT DISTINCT ?movieTitle
WHERE {
  ?work a dbo:Film ;
        dbo:type dbo:TelevisionShow ;
        dcterms:language ""English""@en .
  
  ?work rdfs:label ?movieTitle .
  FILTER (lang(?movieTitle) = 'en')

  ?work dbo:starring ?actor .
}
```",2,5,3,2,1,3,2,20,0,0,298,0,0.0,0
329,16,train,"Give me the birthplace of Eric Cross (writer) and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?ericBirthplace ?organizationInEricBirthplace 
         ?robertBirthplace ?organizationInRobertBirthplace ?countryInRobertBirthplace
WHERE {
  # Birthplace of Eric Cross (writer)
  dbr:Eric_Cross_(writer) dbo:birthPlace ?ericBirthplace .
  
  OPTIONAL {
    ?organizationInEricBirthplace a dbo:Organisation ;
                                  dbo:location ?ericBirthplace .
  }
  
  # Birthplace of Robert Bates (loyalist)
  dbr:Robert_Bates_(loyalist) dbo:birthPlace ?robertBirthplace .

  OPTIONAL {
    ?organizationInRobertBirthplace a dbo:Organisation ;
                                    dbo:location ?robertBirthplace .
  }

  OPTIONAL {
    ?countryInRobertBirthplace a dbo:Country ;
                               dbo:location ?robertBirthplace .
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
826,16,train,"Who is the child, that is a royalty, of the reference, that is a royalty, to Louis I?","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childName WHERE {
  ?parent dbo:spouse ?louisI .
  FILTER (?louisI = dbpedia:Louis_I_of_France) .

  ?parent rdf:type dbo:RoyalPerson .
  
  ?parent dbo:child ?child .
  ?child rdf:type dbo:RoyalPerson .
  
  ?child rdfs:label ?childName .
  FILTER (lang(?childName) = 'en')
}
```",2,4,3,2,1,3,3,71,0,0,8,0,0.0,0
124,0,train,Give me the commander in Mahdist War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander
WHERE {
  ?war a dbo:MilitaryConflict ;
       rdfs:label ""Mahdist War""@en .
  
  OPTIONAL { 
    ?war dbo:commander ?commander .
  }
}
```",1,1,2,1,1,3,3,71,15,0,0,1.0,1.0,1.0
554,5,train,Give me the birth place of The Legendary Tigerman.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace
WHERE {
  ?person rdfs:label ""The Legendary Tigerman""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
445,21,train,"Give me the entity in United Kingdom and entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?ukEntity ?residenceCountry
WHERE {
  # Anna Sharkey's nationality is the United Kingdom
  ?anna a dbo:Person ;
        dbo:nationality ?ukEntity .
  
  FILTER (str(?ukEntity) = ""United_Kingdom"")

  # Anna Sharkey's residence that is also a country
  ?anna dbo:residence ?residence .
  ?residence rdf:type dbo:Country .

  BIND(str(?residence) AS ?residenceCountry)
}
```",3,4,4,2,2,3,3,71,0,0,102,0,0.0,0
507,16,train,"Give me the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movieWork
WHERE {
  ?movieWork a dbo:Film .
  ?movieWork a dbo:Work .
  
  ?person dbo:birthday ""1919-06-17""^^xsd:date .
  ?movieWork dbo:starring ?person .
}
```",2,4,3,2,1,3,3,71,0,0,11,0,0.0,0
98,1,train,Give me the birth place of Paolo Ballesteros.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Paolo Ballesteros""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
495,1,train,Give me the father of Princess Charlotte of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Charlotte_of_Württemberg> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?princess a dbo:Person ;
            dbp:mother ?mother .
  ?mother dbo:spouse ?father .
  ?princess rdfs:label ""Princess Charlotte of Württemberg""@en .
}
```

This query does the following:
- Identifies Princess Charlotte of Württemberg using her label.
- Finds her mother and then identifies her father through the spouse relationship.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
839,22,train,"Give me the band of Kevin Russell (musician) and band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?kevinBand ?bandOfKevinBand ?charlieBand
WHERE {
  # Find Kevin Russell's band
  ?kevinRussell a dbo:Musician ;
                foaf:name ""Kevin Russell"" .
  
  ?kevinRussell dbp:memberOf ?kevinBand .

  OPTIONAL {
    ?kevinBand a dbo:MusicalArtist ;
               dbp:band ?bandOfKevinBand .
  }

  # Find Charlie Huhn's band
  ?charlieHuhn a dbo:Musician ;
               foaf:name ""Charlie Huhn"" .
  
  ?charlieHuhn dbp:memberOf ?charlieBand .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
326,2,train,"Give me the region coded, that is a settlement, as 442/760.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/areaCode> ""442/760"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?region
WHERE {
  ?region dbo:regionCode ?code .
  ?region dbo:settlement true .
  FILTER (str(?code) = ""442/760"")
}
```

This query selects regions that have a specific region code and are identified as settlements. The `FILTER` function ensures the code matches exactly ""442/760.""",1,2,2,1,1,2,2,9,0,0,168,0,0.0,0
791,39,train,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and predecessor of Emperor Antoku.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfChild
WHERE {
  # Find Emperor Antoku and his predecessor
  dbr:Emperor_Antoku dbo:predecessor ?predecessor .
  
  # The father of the predecessor must be royalty and an office holder
  ?predecessor dbo:father ?father .
  ?father a dbo:Monarch ;
          dbo:officeHolder ?office .

  # Find the child of this father who is royalty
  ?father dbo:child ?child .
  ?child a dbo:Monarch .

  # The result we want is this child
  BIND(?child AS ?fatherOfChild)
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
715,2,train,Give me the leader of Ministry of the Air (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?ministry a dbo:GovernmentMinistry ;
            dbo:country dbr:Spain ;
            rdfs:label ""Ministry of the Air""@en .
  
  OPTIONAL { 
    ?ministry dbo:head ?leader .
  }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
987,24,train,Give me the entity in Montenegro and birth place of the actor of All for Free.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInMontenegro ?birthPlace
WHERE {
  # Find the actor of ""All for Free""
  ?actor dbo:starring dbr:All_for_Free .
  
  # Get the birthplace of this actor
  ?actor dbo:birthPlace ?birthPlace .

  # Find an entity located in Montenegro
  ?entityInMontenegro dbp:country dbr:Montenegro .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
965,13,train,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
    # Prince Louis of Battenberg's URI
    VALUES ?princeLouis { <http://dbpedia.org/resource/Louis_of_Battenberg> }

    # Find children who are royalty
    ?child dbo:fatherOrMother ?princeLouis .
    ?child a dbo:RoyalFamilyMember .

    # Determine the parent of these royal children
    ?child dbo:fatherOrMother ?parent .
}
```

### Explanation

- **PREFIX**: Define prefixes for common DBpedia properties.
- **VALUES**: Specify Prince Louis of Battenberg's URI directly to avoid ambiguity.
- **WHERE Clause**:
  - Identify children (`?child`) of Prince Louis who are members of the royal family (`dbo:RoyalFamilyMember`).
  - Find the parent (`?parent`) of these identified children.

This query will return the distinct parents of any child of Prince Louis of Battenberg who is a member of the royalty.",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
507,21,train,"Give me the professional in Film director, television director and spouse of the person born as Anne Voase Coates.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v1 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?filmDirectorRole ?tvDirectorRole ?spouseName WHERE {
  # Identify Anne Voase Coates
  dbr:Anne_Voase_Coates a dbo:FilmDirector ;
                        foaf:name ""Anne Voase Coates"" .

  # Retrieve her role as a Film Director
  OPTIONAL { 
    dbr:Anne_Voase_Coates dbo:filmRole ?filmDirectorRole .
  }

  # Retrieve her role as a Television Director
  OPTIONAL {
    dbr:Anne_Voase_Coates dbo:televisionRole ?tvDirectorRole .
  }

  # Retrieve information about her spouse
  OPTIONAL {
    dbr:Anne_Voase_Coates foaf:mbox ?spouseEmail ;
                          foaf:name ?spouseName .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
955,14,train,"Give me the band of the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?band
WHERE {
  ?reference a dbo:Band ;
             a dbo:Group ;
             a dbo:Organisation .
  
  ?reference dbo:member ?bandMember .

  ?bandMember a dbo:MusicalArtist ;
              a dbo:Artist .

  ?reference dbo:associatedBand dbr:Street_Dogs .

  OPTIONAL { ?bandMember dbo:band ?band }
}
```",3,8,4,3,1,3,2,20,0,0,3,0,0.0,0
892,15,train,Give me the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v1 <http://dbpedia.org/property/occupation> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession
WHERE {
  ?person rdfs:label ""Enrico Crolla""@en .
  OPTIONAL { ?person dbo:occupation ?profession . }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
826,31,train,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?successor ?spouseOfChild
WHERE {
  # Find Louis II, Grand Duke of Hesse
  ?louis2 a dbo:GrandDuke ;
          foaf:name ""Louis II, Grand Duke of Hesse""@en .

  # Find his successor
  ?louis2 dbo:successor ?successor .

  # Find Anna Magdalena Appel's father
  ?annaMagdalenaAppel a dbo:Person ;
                     dbp:father ?father .

  # Find a child of this father
  ?child dbo:parent ?father .

  # Find the spouse of that child
  ?child dbo:spouse ?spouseOfChild .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
527,4,train,Give me the host of Hyperland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?result . },"```sparql
SELECT ?hostName WHERE {
  ?hyperland dbo:wikiPageRedirects dbpedia-en:Hyperland .
  ?hyperland rdf:type dbo:TelevisionSeries .
  ?hyperland dbp:seriesHost ?host .
  ?host foaf:name ?hostName .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
158,1,train,Give me the party of Théodore Steeg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Théodore_Steeg> <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Théodore Steeg""@en .
  ?person dbo:partyAffiliation ?party .
}
```

This query does the following:
- It selects the political party (`?party`) associated with Théodore Steeg.
- It identifies Théodore Steeg using his name and ensures he is of type `dbo:Person`.
- It retrieves the party affiliation using the property `dbo:partyAffiliation`.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
47,30,train,Give me the office of Bidesh Ranjan Bose and office of the awardee of Padma Vibhushan and office of Suvendu Adhikari.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?individual ?office
WHERE {
  # Offices of Bidesh Ranjan Bose
  { 
    dbr:Bidesh_Ranjan_Bose dbo:office ?office .
    BIND(dbr:Bidesh_Ranjan_Bose AS ?individual)
  }
  
  UNION
  
  # Offices of Padma Vibhushan awardees
  {
    ?individual dbo:honorAwarded dbr:Padma_Vibhushan .
    ?individual dbo:office ?office .
  }
  
  UNION
  
  # Offices of Suvendu Adhikari
  { 
    dbr:Suvendu_Adhikari dbo:office ?office .
    BIND(dbr:Suvendu_Adhikari AS ?individual)
  }
}
ORDER BY ?individual
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
791,26,train,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor
WHERE {
  # Step 1: Identify Emperor Go-Shirakawa
  dbr:Emperor_Go-Shirakawa dbo:child ?child .

  # Step 2: Find the child's child (grandchildren)
  ?child dbo:child ?grandchild .

  # Step 3: Filter grandchildren who are office holders and royalty
  ?grandchild a dbo:Royalty ;
              dbo:officeHolder ?office .

  # Step 4: Determine the predecessor of the grandchild in their role
  OPTIONAL {
    ?office dbo:predecessor ?predecessor .
  }
}
```",3,5,4,3,1,3,3,71,0,0,3,0,0.0,0
5,12,train,Give me the birthplace of Gerald Regan and entity in the award of Coro de la Pontificia Universidad Católica de Puerto Rico.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Gerald_Regan> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?awardEntity
WHERE {
  # Gerald Regan's birthplace
  ?geraldRegan a dbo:Person ;
               foaf:name ""Gerald Regan""@en ;
               dbo:birthPlace ?birthPlace .

  # Entity associated with the award Coro de la Pontificia Universidad Católica de Puerto Rico
  ?awardEntity dbp:award ""Coro de la Pontificia Universidad Católica de Puerto Rico"" .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
933,1,train,Give me the reference to Alan Warner.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  VALUES ?alanWarner { dbr:Alan_Warner }
  ?alanWarner dbo:wikiPageWikiLink ?reference .
}
```

This query selects references linked to Alan Warner's DBpedia page using the `dbo:wikiPageWikiLink` predicate. It assumes that Alan Warner is represented by the resource `dbr:Alan_Warner`.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
917,14,train,Give me the child of the father of Kamehameha IV.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child
WHERE {
  ?kamehamehaIV dbo:father ?father .
  ?father dbo:child ?child .
  VALUES ?kamehamehaIV { <http://dbpedia.org/resource/Kamehameha_IV> }
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
18,16,train,"Give me the alumnus of the figure known, that is an educational institution, as Saints and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alumnusName WHERE {
  ?person dbo:almaMater dbr:Saints_Institution ; # Replace with the correct DBpedia resource for ""Saints""
           foaf:name ?alumnusName .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
987,31,train,"Give me the birth place of Moamer Kasumović and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?kadhafiBirthPlace ?bandBirthPlace
WHERE {
  # Moamer Kadhafi's birthplace
  dbpedia:Moammar_Gaddafi dbo:birthPlace ?kadhafiBirthPlace .

  # Dado Polumenta's band that is both an artist and a musical artist
  dbpedia:Dado_Polumenta dbo:memberOf ?band .
  ?band rdf:type dbo:Band ;
        rdf:type dbo:MusicalArtist .

  # Band's birthplace (assuming bands have a location or founding place)
  OPTIONAL { ?band dbo:foundingPlace ?bandBirthPlace . }
}
```",4,7,5,3,2,3,3,71,0,0,3,0,0.0,0
839,16,train,"Give me the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  # Identify Peter Schorowsky
  ?person a dbo:Person ;
          foaf:name ""Peter Schorowsky""@en .
  
  # Find bands where Peter is a member
  ?person dbo:member ?band .

  # Ensure the band is both a Band and a MusicalGroup
  ?band a dbo:Band, dbo:MusicalGroup .
}
```",2,4,3,2,1,3,3,71,0,0,4,0,0.0,0
933,32,train,Give me the reference to the birth name of Alan Warner (musician) and band of the band of Alan Warner (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?band
WHERE {
  # Identify Alan Warner as a musician
  dbr:Alan_Warner_(musician) dbo:birthName ?birthName .
  
  OPTIONAL {
    # Find the band associated with Alan Warner
    dbr:Alan_Warner_(musician) dbo:member ?band .
  }
}
```

This query does the following:
- Selects `?birthName` and `?band`.
- Matches triples where Alan Warner (identified as a musician) has a birth name.
- Optionally matches triples where Alan Warner is a member of a band.",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
933,35,train,"Give me the band of the band of Alan Warner (musician) and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandOfBand
WHERE {
  # Find Alan Warner as a musician
  ?alanWarner dbo:occupation dbr:Musician .
  
  # Ensure the resource is specifically about Alan Warner (musician)
  ?alanWarner rdfs:label ""Alan Warner""@en .

  # Find the band associated with Alan Warner
  ?alanWarner dbp:band ?band .

  # Ensure the band is a group or organization
  ?band rdf:type dbo:Band .
  
  # Find another entity related to this band, which is also a group/organization
  ?band dbp:band ?bandOfBand .
  ?bandOfBand rdf:type/(dbo:Band|dbo:Organization) .

}
```",4,7,5,2,2,3,3,71,0,0,4,0,0.0,0
459,14,train,"Give me the governor of Oklahoma and governor of the administration, that is a politician, of Brad Henry.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorOfOklahoma ?administration
WHERE {
  # Identify Brad Henry and his role as governor of Oklahoma
  dbr:Brad_Henry a dbo:Politician ;
                 dbo:governmentRole [
                   a dbo:GovernmentFunction ;
                   dbo:officeHolder ?person ;
                   dbo:country dbr:United_States_of_America ;
                   dbo:stateOrTerritory dbr:Oklahoma ;
                   rdfs:label ?governorOfOklahoma .
                 ] .

  # Find the administration during which he served
  OPTIONAL {
    ?person dbo:memberOf ?administration .
  }
}
```

### Explanation

- **PREFIX**: Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT**: Ensure unique results for governorship and administration.
- **WHERE Clause**:
  - Match Brad Henry as a politician with his role as governor of Oklahoma.
  - Use `dbo:governmentRole` to find the specific office he held, filtering by state (Oklahoma).
  - Optionally match the administration (`dbo:memberOf`) during which he served.

This query should provide the required information about Brad Henry's governorship and the corresponding administration.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
281,3,train,"Give me the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warName
WHERE {
  # Roy Boehm as an agent of the event (assuming a property like dbo:agent)
  ?event dbo:agent dbr:Roy_Boehm .
  
  # The event is classified as both an Event and a MilitaryConflict
  ?event rdf:type dbo:Event ;
         rdf:type dbo:MilitaryConflict .

  # Get the name of the war
  ?event rdfs:label ?warName .
}
```",1,3,2,1,1,2,3,28,0,0,20,0,0.0,0
274,10,train,Give me the professional in the designer of Tetris Classic.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?designerName ?profession
WHERE {
  # Find the designer of Tetris Classic
  ?tetrisClassic dbo:creator ?designer .
  
  # Get the name of the designer
  ?designer foaf:name ?designerName .

  # Get the professional role or occupation of the designer
  OPTIONAL { 
    ?designer dbo:occupation ?profession .
  }

  # Filter to ensure we are talking about Tetris Classic
  FILTER(STRSTARTS(STR(?tetrisClassic), ""http://dbpedia.org/resource/Tetris_Classic""))
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
839,30,train,"Give me the band of Peter Schorowsky and band of Kevin Russell (musician) and band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandPeter ?bandKevin ?bandCharlie ?musicalArtistBand
WHERE {
  # Band of Peter Schorowsky
  OPTIONAL { 
    dbr:Peter_Schorowsky dbo:memberOf ?bandPeter .
  }
  
  # Band of Kevin Russell (musician)
  OPTIONAL { 
    dbr:Kevin_Russell_(musician) dbo:memberOf ?bandKevin .
  }

  # Band of Charlie Huhn
  OPTIONAL {
    dbr:Charlie_Huhn dbo:memberOf ?bandCharlie .
    
    # Find any band that is a musical artist related to Charlie Huhn's band
    OPTIONAL {
      ?bandCharlie dbo:musicalArtist ?musicalArtistBand .
    }
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
926,35,train,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandfatherAbdulaziz ?childOfGrandfatherAbdulaziz ?mustafaIII_father ?childOfMustafaIIIFather
WHERE {
  # Abdulaziz's father
  ?abdulaziz dbo:father ?fatherAbdulaziz .
  
  # Abdulaziz's grandfather (father of his father)
  ?fatherAbdulaziz dbo:father ?grandfatherAbdulaziz .

  # Child of Abdulaziz's grandfather who is a royalty
  ?childOfGrandfatherAbdulaziz dbo:parent ?grandfatherAbdulaziz .
  FILTER EXISTS { ?childOfGrandfatherAbdulaziz dbo:royalTitle ?title . }

  # Mustafa III's father
  dbp:Mustafa_III dbo:father ?mustafaIII_father .

  # Child of Mustafa III's father
  ?childOfMustafaIIIFather dbo:parent ?mustafaIII_father .
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
773,23,train,Give me the spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?spouse
WHERE {
  # Step 1: Identify Bernard as the son of Charles the Fat
  ?bernard dbo:childOf ?charlesTheFat .
  
  FILTER (str(?charlesTheFat) = ""Charles_the_Fat"") .

  # Step 2: Find Bernard's parent
  OPTIONAL { ?bernard dbo:parent ?parent . }

  # Step 3: Determine the father of Bernard's parent
  OPTIONAL { ?parent dbo:father ?grandfather . }
  
  # Step 4: Identify the spouse of this grandfather
  OPTIONAL { ?grandfather dbo:spouse ?spouse . }
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
791,10,train,Give me the father of Emperor Go-Toba and spouse of Taira no Tokuko.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father ?spouse
WHERE {
  ?emperor rdfs:label ""Emperor Go-Toba""@en .
  ?emperor dbo:father ?father .

  ?tokuko rdfs:label ""Taira no Tokuko""@en .
  ?tokuko dbo:spouse ?spouse .
}
```

This query assumes that the labels for Emperor Go-Toba and Taira no Tokuko are available in DBpedia with English language tags. The `dbo:father` and `dbo:spouse` properties are used to find the respective relationships.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
926,26,train,Give me the successor of the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v0 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?successor
WHERE {
  ?şermiKadin a dbo:Person ;
              foaf:name ""Şermi Kadın""@en .
  
  ?spouse dbo:spouse ?şermiKadin .

  ?child foaf:parent ?spouse .

  ?successor dbp:successor ?child .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
978,13,train,"Give me the band member of the professional, that is a musical artist and an artist, in the award of Michel Claparède.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/occupation> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  ?professional dbo:award dbr:Micheel_Claparède_Award .
  ?professional a dbo:MusicalArtist ;
                a dbo:Artist .
  ?bandMembership dbo:member ?bandMember .
  ?bandMembership dbo:musicalArtist ?professional .
}
```

This query assumes:
- `dbo:award` is the property linking professionals to awards.
- `dbr:Micheel_Claparède_Award` is the resource for the award of Michel Claparède.
- `dbo:MusicalArtist` and `dbo:Artist` are classes representing musical artists and artists, respectively.
- `dbo:member` links a band membership to its members.
- `dbo:musicalArtist` links a band membership to the professional.",3,5,4,3,1,3,2,20,0,0,9007,0,0.0,0
36,15,train,"Give me the person born as Ayo Makun and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personBornAsAyoMakun ?claimToFameFilm
WHERE {
  ?person foaf:name ""Ayo Makun""@en .
  ?person dbo:birthName ?birthName .
  FILTER(?birthName = ""Ayo Makun"") .

  ?lepa dbo:alias ?lepaAlias .
  FILTER(?lepaAlias = ""Lepacious Bose""@en) .

  ?lepa dbo:spouse ?spouse .
  ?spouse foaf:name ?spouseName .
  FILTER(?spouseName = ""Ayo Makun""@en) .

  ?lepa dbo:claimToFame ?claimToFame .
  ?claimToFame a dbo:Film .

  BIND(?person AS ?personBornAsAyoMakun)
  BIND(?claimToFame AS ?claimToFameFilm)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
917,18,train,Give me the child of Kekūanāoʻa and child of Kekūanāoʻa and parent of Albert Kamehameha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Find children of Kekūanāoʻa
  dbr:Kekūanāoʻa dbo:child ?child .
  
  # Ensure this child is a parent of Albert Kamehameha
  ?child dbo:child dbr:Albert_Kamehameha .
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
926,12,train,Give me the successor of Mustafa III and child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor
WHERE {
  ?mustafa3 dbo:successor ?successor .
  FILTER(STR(?mustafa3) = ""Mustafa III"") .

  ?ahmed3 dbp:child ?successor .
  FILTER(STR(?ahmed3) = ""Ahmed III"") .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
417,28,train,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?spouse
WHERE {
  ?parent dbo:child dbr:Count_Ingolf_of_Rosenborg .
  ?parent rdf:type dbo:RoyalFamilyMember .
  
  ?parent dbo:child dbr:Aleksandrine_of_Mecklenburg-Schwerin ;
          dbo:child dbr:Christian_X_of_Denmark .

  ?parent dbo:spouse ?spouse .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
978,12,train,Give me the band member of the person born as Nicholas Bracegirdle and band member of Enya.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Enya> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMemberName WHERE {
  # Find Nicholas Bracegirdle's URI in DBpedia
  ?person rdfs:label ""Nicholas Bracegirdle""@en .
  
  # Ensure the person is a band member of Enya
  ?person dbo:memberOf ?band .
  ?band rdfs:label ""Enya""@en .

  # Find other members of the same band
  ?otherMember dbo:memberOf ?band .
  ?otherMember rdfs:label ?bandMemberName .

  FILTER(?person != ?otherMember) # Exclude Nicholas Bracegirdle himself

  # Optional: Filter out non-human entities if necessary
  OPTIONAL { ?otherMember a dbo:Band . }
}
ORDER BY ?bandMemberName
LIMIT 10",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
935,7,train,Give me the death place of the awardee of Sitara-i-Imtiaz.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?deathPlace
WHERE {
  ?person dbo:award dbr:Sitara-i-Imtiaz .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",2,2,3,2,1,3,2,20,18,108,0,0.14285714285714285,1.0,0.25
216,3,train,Give me the mayor of Ros Bates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?mayorName ?office
WHERE {
  ?person foaf:name ""Ros Bates""@en .
  OPTIONAL { 
    ?person dbo:officeHolder ?office .
    ?office dbo:positionTitle ?title .
    FILTER(CONTAINS(LCASE(?title), ""mayor""))
  }
  OPTIONAL {
    ?office dbo:incumbent ?mayor .
    ?mayor foaf:name ?mayorName .
  }
}
```",1,1,2,1,1,2,3,28,0,68,4,0.0,0.0,0
83,4,train,Give me the player in Greg Boehme and player in Albert Edward (soccer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Greg_Boehme> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Albert_Edward_(soccer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player
WHERE {
  ?team1 dbo:member ?player .
  ?team2 dbo:member ?player .

  VALUES ?team1 { 
    dbr:Greg_Boehme 
    dbr:Albert_Edward_(soccer)
  }
  
  FILTER(?team1 != ?team2)

  OPTIONAL {
    ?team1 rdfs:label ""Greg Boehme""@en .
  }

  OPTIONAL {
    ?team2 rdfs:label ""Albert Edward (soccer)""@en .
  }
}
GROUP BY ?player
HAVING(COUNT(DISTINCT ?team1) > 1)
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
987,11,train,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?bandName ?birthPlace
WHERE {
    ?person foaf:name ""Šako Polumenta"" .
    ?person dbo:member ?band .
    
    ?band rdf:type dbp:Band ;
          rdfs:label ?bandName ;
          dbo:genre ?genre .

    FILTER EXISTS { ?band rdf:type dbo:MusicalArtist }
    FILTER EXISTS { ?band rdf:type dbo:Artist }

    OPTIONAL {
        ?band dbo:birthPlace ?birthPlace .
    }
}
```",2,4,3,2,1,3,3,71,0,0,6,0,0.0,0
158,3,train,"Give me the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person dbr:Adelbert_Cronkhite .
  ?person dbo:award ?award .

  ?award a dbo:Award .
  ?award dbo:country ?country .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
274,4,train,Give me the designer of Tetris Classic.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?designer WHERE {
  ?game a dbo:VideoGame .
  ?game rdfs:label ""Tetris Classic""@en .
  OPTIONAL { ?game dbo:creator ?designer . }
  FILTER (lang(?gameLabel) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
445,25,train,Give me the entity in the award of George H. Cameron and death place of Patrick Moore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award (SAMPLE(?deathPlace) AS ?deathPlace)
WHERE {
  # George H. Cameron's award
  OPTIONAL { 
    dbr:George_H._Cameron dbo:honoraryDegree ?award .
  }
  
  # Patrick Moore's death place
  OPTIONAL {
    dbr:Patrick_Moore dbo:placeOfBirth ?birthPlace ;
                      dbo:deathPlace ?deathPlace .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
158,11,train,"Give me the entity in the award, that is a country, of Adelbert Cronkhite and party of Théodore Steeg.",SELECT ?result WHERE { <http://dbpedia.org/resource/Théodore_Steeg> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?countryAdelbert ?partyThéodore
WHERE {
  # Adelbert Cronkhite's award and its country
  ?awardAdelbert dbo:recipient dbr:Adelbert_Cronkhite .
  ?awardAdelbert dbo:country ?countryAdelbert .

  # Théodore Steeg's party
  ?theoSteeg dbo:party ?partyThéodore .
  FILTER (str(?theoSteeg) = ""Theodore_Steeg"")

  # Ensure the same award is considered for both individuals if applicable
  OPTIONAL {
    ?awardAdelbert dbo:recipient dbr:Theodore_Steeg .
  }
}
```

This query does the following:
- Retrieves the country associated with an award received by Adelbert Cronkhite.
- Retrieves the political party of Théodore Steeg.
- Uses `OPTIONAL` to check if both individuals are linked to the same award, though this is not strictly necessary unless you want to ensure they share an award.",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
456,10,train,Give me the band of Alan Doyle and spouse of Danielle Spencer (Australian actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band ?spouse
WHERE {
  # Find Alan Doyle's band
  ?alan a dbo:Person ;
        foaf:name ""Alan Doyle""@en .
  OPTIONAL { 
    ?alan dbo:memberOfBand ?band .
  }

  # Find Danielle Spencer's spouse
  ?danielle a dbo:Person ;
            foaf:name ""Danielle Spencer""@en .
  OPTIONAL {
    ?danielle dbo:spouse ?spouse .
  }
}
```

### Explanation:
- **Prefixes**: We use `dbo` for DBpedia ontology and `foaf` for Friend of a Friend vocabulary.
- **Alan Doyle's Band**:
  - We identify Alan Doyle using his name.
  - We look for the band he is associated with using the property `dbo:memberOfBand`.
- **Spouse of Danielle Spencer**:
  - We identify Danielle Spencer using her name.
  - We find her spouse using the property `dbo:spouse`.

This query will return the band Alan Doyle is part of and the spouse of Danielle Spencer.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
124,13,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
  # Identify Frank Rhodes and his military involvement
  dbr:Frank_Rhodes dbo:militaryService [
    a dbo:MilitaryConflict ;
    dbo:participatingMilitaryForce ?militaryForce .
  ] .

  # Ensure the event is classified as both a military conflict and a societal event
  ?event a dbo:MilitaryConflict ;
         dbo:societalEvent true ;
         dbo:participatingMilitaryForce ?militaryForce .
}
```

This query does the following:
- It identifies Frank Rhodes and his involvement in military services.
- It filters for events that are both military conflicts and societal events.
- It selects distinct military forces involved in such events.",2,5,3,2,1,3,3,71,0,0,1091,0,0.0,0
216,30,train,"Give me the player in Mario Ivanković and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in Igor Bišćan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player ?team
WHERE {
  # Mario Ivanković is a player in Igor Bišćan's team
  dbr:Mario_Ivanković dbo:playsFor ?team .
  dbr:Igor_Bišćan dbo:playsFor ?team .

  # Find the person born on 1983-12-20 who has multiple roles
  ?person dbp:birthday ""1983-12-20""^^xsd:date ;
          dbo:sportsManager ?managerRole ;
          dbo:soccerPlayer ?playerRole ;
          dbo:soccerManager ?soccerManagerRole .

  # Ensure the person is a player in Igor Bišćan's team
  ?person dbo:playsFor ?team .

  # Bind the person to the variable ?player for output
  BIND(?person AS ?player)
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
365,4,train,Give me the reference to Полтавская губерния.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?englishName ?description ?category
WHERE {
  VALUES ?resource { dbr:Полтавская_губерния }
  
  OPTIONAL { ?resource rdfs:label ?englishName FILTER (lang(?englishName) = 'en') . }
  OPTIONAL { ?resource dbo:abstract ?description FILTER (lang(?description) = 'en') . }
  OPTIONAL { ?resource rdf:type ?category . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
987,19,train,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandBirthPlace ?kasumovicBirthPlace
WHERE {
  # Find the band associated with Šako Polumenta
  ?band dbo:member dbr:Šako_Polumenta .
  
  # Ensure the band is both an artist and a musical artist
  ?band rdf:type dbo:Band ;
        rdf:type dbo:MusicalArtist .

  # Get the birthplace of the band
  OPTIONAL { ?band dbo:birthPlace ?bandBirthPlace . }

  # Find Moamer Kasumović's birthplace
  dbr:Moamer_Kasumović dbo:birthPlace ?kasumovicBirthPlace .
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
433,6,train,"Give me the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtist WHERE {
  ?scottLaFaro a dbo:Person ;
               foaf:name ""Scott LaFaro""@en .
  
  ?scottLaFaro dbo:associatedBandMember ?band ;
               dbo:musicalArtist ?musicalArtist .

  ?associatedArtist dbo:associatedBandMember ?band ;
                    a dbo:MusicalArtist, dbo:Artist .

  FILTER (lang(?scottLaFaroLabel) = ""en"")
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
200,2,train,Give me the name of Angelcorpse.,SELECT ?result WHERE { <http://dbpedia.org/resource/Angelcorpse> <http://xmlns.com/foaf/0.1/name> ?result . },"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?name
WHERE {
  ?band rdfs:label ""Angelcorpse""@en .
  ?band rdfs:label ?name .
}
```

This query selects the label (name) of the entity identified as ""Angelcorpse"" in English.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
926,6,train,Give me the child of Ahmed III.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:spouse ?spouse .
  FILTER (str(?person) = ""http://dbpedia.org/resource/Ahmed_III"")
  
  OPTIONAL { ?person dbo:child ?child . }
}
```",1,1,2,1,1,3,3,71,10,1,2,0.9090909090909091,0.8333333333333334,0.8695652173913043
987,0,train,Give me the birth place of Dado Polumenta.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:FootballPlayer ;
          foaf:name ""Dado Pršo""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```

This query:
- Uses `dbo:FootballPlayer` to ensure we are querying about the correct type of person.
- Matches the name ""Dado Pršo"" using the `foaf:name` property with language tag `@en`.
- Retrieves the birthplace using the `dbo:birthPlace` property.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
442,3,train,Give me the actor of This Side of Heaven.,SELECT ?result WHERE { <http://dbpedia.org/resource/This_Side_of_Heaven> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actorName
WHERE {
  ?movie rdfs:label ""This Side of Heaven""@en .
  ?movie dbo:starring ?actor .
  ?actor rdfs:label ?actorName .
  FILTER(LANG(?actorName) = 'en')
}
```",1,1,2,1,1,2,2,9,0,5,5,0.0,0.0,0
236,1,train,Give me the party member of Democratic-Republican Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic-Republican_Party> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?party rdf:type dbo:PoliticalParty .
  ?party rdfs:label ""Democratic-Republican Party""@en .

  ?member dbo:memberOf ?party .
}
```

4. **Optimize Query Logic:** The query uses the `rdf:type` to ensure we are dealing with a political party and `rdfs:label` to specify the exact party name in English.

5. **Validate Completeness and Precision:** This query should accurately retrieve individuals who were members of the Democratic-Republican Party by matching the specified label and relationship.",1,1,2,1,1,3,2,20,0,0,590,0,0.0,0
978,11,train,"Give me the band member of the professional, that is a musical artist and an artist, in  and band member of Chicane (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chicane_(musician)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMemberName
WHERE {
  # Find band members of Chicane
  ?member dbo:bandMemberOfBand dbr:Chicane_(musician) .
  
  # Ensure the member is a musical artist and an artist
  ?member rdf:type dbo:MusicalArtist .
  ?member rdf:type dbo:Artist .

  # Get the name of the band member
  ?member rdfs:label ?bandMemberName .
  FILTER (LANG(?bandMemberName) = 'en')
}
```",3,5,4,2,2,3,2,20,0,0,2,0,0.0,0
267,9,train,"Give me the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team a dbo:SoccerClub ;
        dbo:season ?season .
  
  FILTER (
    EXISTS { ?season dbo:startDate ?start . 
             ?season dbo:endDate ?end .
             FILTER (xsd:date(""2020-07-01"") <= ?start && xsd:date(""2021-06-30"") >= ?end) }
  )
  
  ?team dbr:Tractor_S.C. ;
        dbo:manager ?manager .
}
```",2,3,3,2,1,3,2,20,0,0,31,0,0.0,0
987,29,train,Give me the birth place of Dado Polumenta and entity in Montenegro and birth place of the actor of All for Free.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceDado ?birthPlaceActor
WHERE {
  # For Dado Polumenta
  dbr:Dado_Polumenta dbo:birthPlace ?birthPlaceDado .
  
  OPTIONAL {
    ?birthPlaceDado dbo:country dbr:Montenegro .
  }
  
  # For the actor of ""All for Free""
  dbr:All_for_Free dbo:actor ?actor .
  ?actor dbo:birthPlace ?birthPlaceActor .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
417,23,train,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse
WHERE {
  # Find children of Knud, Hereditary Prince of Denmark
  ?child dbo:parent dbr:Knud,_Hereditary_Prince_of_Denmark .
  
  # Ensure the parent is royalty (assuming a property or class indicates royalty)
  OPTIONAL { 
    dbr:Knud,_Hereditary_Prince_of_Denmark dbp:royalty ""true""^^xsd:boolean .
  }
  
  # Get the spouse of Knud
  ?spouse dbo:spouse dbr:Knud,_Hereditary_Prince_of_Denmark .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
582,9,train,Give me the player in Kazuaki Nagasawa and reference to Japan.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?referenceToJapan
WHERE {
  # Find information about Kazuaki Nagasawa
  dbr:Kazuaki_Nagasawa a dbo:FootballPlayer ;
                        foaf:name ""Kazuaki Nagasawa"" ;
                        dbo:nationality dbr:Japan .

  OPTIONAL {
    # Check if he played for any team in Japan
    ?player dbo:team dbr:Team_in_Japan .
    FILTER(?player = dbr:Kazuaki_Nagasawa)
  }

  OPTIONAL {
    # Check other references to Japan, such as birthplace or residence
    ?player dbo:birthPlace dbr:Japan .
    FILTER(?player = dbr:Kazuaki_Nagasawa)
  }
  
  OPTIONAL {
    ?player dbo:residence dbr:Japan .
    FILTER(?player = dbr:Kazuaki_Nagasawa)
  }

  BIND(dbr:Kazuaki_Nagasawa AS ?player)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
826,32,train,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Louis I, Grand Duke of Hesse
  dbr:Louis_I,_Grand_Duke_of_Hesse dbo:child ?royalChild .
  
  # Ensure the child is royalty
  ?royalChild a dbo:Monarch .

  # Johann Heinrich Appel's child and their spouse
  ?appelsChild dbo:spouse ?spouse .
  dbr:Johann_Heinrich_Appel dbo:child ?appelsChild .

  # The royal child is the spouse of Johann Heinrich Appel's child
  ?royalChild = ?spouse .

  # Find the successor of the royal child
  ?royalChild dbo:successor ?successor .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
606,10,train,"Who is the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. ?v0 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?alumnusLabel WHERE {
  ?entity rdfs:label ""Penn Quakers""@en .
  FILTER NOT EXISTS { ?entity a dbo:SportsLeague } # Ensure it's not just the sports league
  OPTIONAL { ?entity dbo:alumniOf ?university . }
  OPTIONAL { ?entity dbo:sportTeamLeague ?league . }
  ?alumnus dbo:alumniOf ?entity .
  ?alumnus rdfs:label ?alumnusLabel .
  FILTER (LANG(?alumnusLabel) = ""en"")
}
ORDER BY ?alumnusLabel
```

This query does the following:
- Identifies entities labeled as ""Penn Quakers"".
- Ensures these are not solely sports leagues.
- Checks for affiliations with a university and/or a sports league.
- Retrieves alumni of such an entity, filtering results to English labels.",2,5,3,2,1,3,2,20,0,0,1114,0,0.0,0
978,14,train,Give me the band member of the person born as the name of Chicane (musician).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?personName ?bandName
WHERE {
  # Find Chicane's birth name
  dbr:Chicane dbo:birthName ?chicanesBirthName .

  # Find people with the same birth name as Chicane
  ?person foaf:name ?personName ;
          dbo:birthName ?chicanesBirthName .

  # Check if these individuals are part of any bands
  OPTIONAL {
    ?bandMemberMembership dbo:member ?person .
    ?bandMemberMembership dbo:band ?band .
    ?band foaf:name ?bandName .
  }
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
527,5,train,"Give me the work, that is a work and a book, of Tom Baker.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?workTitle
WHERE {
  # Find Tom Baker's works
  dbr:Tom_Baker dbo:performerIn ?work .
  
  # Ensure the work is also classified as a book
  ?work rdf:type dbo:Book .

  # Get the title of the work
  ?work rdfs:label ?workTitle .
  
  FILTER (lang(?workTitle) = 'en')
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
987,9,train,Give me the birth place of Dado Polumenta and birth place of Moamer Kasumović.,SELECT ?result WHERE { <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlaceDado ?birthPlaceMoamer
WHERE {
  ?dado a dbo:FootballPlayer ;
        foaf:name ""Dado Polumenta"" ;
        dbo:birthPlace ?birthPlaceDado .
  
  ?moamer a dbo:Politician ;
          foaf:name ""Slobodan Milošević"" ;  # Moamer Kasumović is known as Slobodan Milošević
          dbo:birthPlace ?birthPlaceMoamer .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
341,6,train,"Give me the writer of the work, that is a work and an album, of Serrano.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> ""Serrano""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?work dbo:author ?writer .
  ?work rdf:type dbo:Album .
  ?work dbo:creator dbr:Serrano .
}
```",2,4,3,2,1,2,2,9,0,0,283,0,0.0,0
892,17,train,"Give me the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?administration
WHERE {
  ?party a dbo:PoliticalParty ;
         a dbo:Organization ;
         dbo:member dbr:Andrea_Cozzolino .
  
  ?administration a dbo:AdministrativeRegion, dbo:Settlement ;
                  dbo:country dbr:Italy ;
                  dbo:administrativeRegion ?party .

}
```",2,8,3,2,1,3,3,71,0,0,14,0,0.0,0
41,14,train,Give me the party of the person born as David Declan Costello and party of Mark Durkan.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?partyLabel
WHERE {
  VALUES ?person { 
    dbr:David_Declan_Costello 
    dbr:Mark_Durkan 
  }
  
  ?person dbo:party ?party .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
715,3,train,Who is the native of Morocco?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name
WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Morocco .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,868,838,0,0.5087924970691676,1.0,0.6744366744366743
18,9,train,"Give me the parent of Liza Huber and alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  ?liza a dbo:Person ;
        foaf:name ""Liza Huber"" ;
        dbo:parent ?parent .
  
  ?alumnus a dbo:Person ;
           dbo:almaMater dbp:Marymount_College_Tarrytown ;
           dbo:parent ?parent .

  FILTER(?liza != ?alumnus)
}
```

This query does the following:
- Selects individuals who are parents of Liza Huber.
- Ensures these individuals are also alumni of Marymount College, Tarrytown.
- Uses a `FILTER` to ensure that we do not match Liza Huber herself as an alumnus.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
554,9,train,Give me the administration of the party member of Independent politician.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?politician ?administration
WHERE {
  ?politician a dbo:IndependentPolitician .
  ?politician dbo:partyMemberOf ?party .
  
  OPTIONAL {
    ?politician dbo:holdsPublicOffice ?office .
    ?office dbo:hasTerm ?term .
    ?term dbo:startDate ?start ;
          dbo:endDate ?end .
    
    FILTER (?start <= NOW() && (!BOUND(?end) || ?end > NOW()))
    
    ?term dbo:positionHeld ?administration .
  }
}
```",2,2,3,2,1,3,2,20,0,0,905,0,0.0,0
507,35,train,Give me the professional in the profession of Guy Ferland and spouse of the person born as Anne Voase Coates.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional
WHERE {
  # Find the profession of Guy Ferland
  ?guyFerland a dbo:Person ;
              foaf:name ""Guy Ferland"" ;
              dbp:profession ?profession .

  # Find someone who is a spouse of Anne Voase Coates
  ?spouse a dbo:Person ;
          dbo:spouse ?anneVoaseCoates ;
          dbp:profession ?sameProfession .
  
  # Ensure the person born as Anne Voase Coates
  ?anneVoaseCoates foaf:name ""Anne Voase Coates"" .

  # Match the profession and ensure it's the same
  FILTER (?profession = ?sameProfession)

  # Return the professional who matches both conditions
  BIND(?spouse AS ?professional)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
606,13,train,"Give me the figure known as the nickname of the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ""Barb City""@en . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?settlement WHERE {
  ?settlement dbp:nickname ""Barb City"" .
  ?settlement a dbo:PopulatedPlace .
}
```

This query selects settlements that have the nickname ""Barb City."" The `dbo:PopulatedPlace` class is used to ensure we are dealing with populated places, which include settlements.",3,4,4,3,1,3,2,20,0,0,1,0,0.0,0
192,14,train,Give me the child of the child of the parent of Anna of Hungary (Byzantine empress).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?grandchild
WHERE {
  ?anna a dbo:Empress ;
        foaf:name ""Anna of Hungary""@en .
  
  ?parent dbo:child ?anna .

  OPTIONAL { ?sibling dbo:child ?parent . }
  
  OPTIONAL { ?cousin dbo:child ?sibling . }

  ?grandchild dbo:child ?cousin .
}
```",3,3,4,3,1,3,2,20,0,0,7,0,0.0,0
417,36,train,"Give me the spouse of Princess Caroline-Mathilde of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild
WHERE {
  # Princess Caroline-Mathilde of Denmark and her spouse
  dbr:Princess_Caroline_Matilda_of_Denmark dbo:spouse ?spouse .
  
  # Child of the spouse who is royalty
  ?spouse dbo:child ?child .
  FILTER EXISTS { ?child a dbo:Monarch } .

  # Grandchild (child of the child) who is royalty
  ?child dbo:child ?grandchild .
  FILTER EXISTS { ?grandchild a dbo:Monarch } .

  # Alexandrine of Mecklenburg-Schwerin and her parent
  dbr:Aleksandra_of_Mecklenburg-Schwerin dbo:parent ?parent .
  FILTER EXISTS { ?parent a dbo:RoyalFamilyMember } .
  
  # Ensure the grandchild is related to Alexandrine's lineage
  ?grandchild dbo:parent ?parent .
  ?parent dbo:parent dbr:Aleksandra_of_Mecklenburg-Schwerin .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
93,2,train,Give me the headquarter of Clam Cove Pictograph Site.,SELECT ?result WHERE { <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?result . },"```sparql
SELECT ?headquarter WHERE {
  <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> dbo:headquarters ?headquarter .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
465,26,train,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?spouseName
WHERE {
  # Elizabeth of Austria's parent(s)
  ?parent dbo:child dbr:Elizabeth_of_Austria_(1526–1545) .

  # Children of the parent who are royalty
  ?royalChild rdf:type dbo:RoyalFamilyMember .
  ?royalChild dbo:parent ?parent .

  # Spouse of the royal child
  ?royalChild dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseName .
  
  FILTER (lang(?spouseName) = 'en')
}
```",3,4,4,3,1,3,3,71,0,0,7,0,0.0,0
456,20,train,Give me the spouse of Danielle Spencer (Australian actress) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
SELECT DISTINCT ?spouse ?shadowProfessional WHERE {
  # Part 1: Find the spouse of Danielle Spencer
  { 
    ?danielle dbo:spouse ?spouse .
    ?danielle rdfs:label ""Danielle Spencer""@en .
    FILTER(CONTAINS(LCASE(?danielle), ""australian actress""))
  }
  
  UNION
  
  # Part 2: Find the professional known as The Shadow
  {
    ?shadowProfessional foaf:name ?name .
    ?alias rdf:type dbo:Pseudonym .
    ?alias dbo:givenName ""The"" ;
           dbo:familyName ""Shadow"" .
    ?shadowProfessional dbo:pseudonym ?alias .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
274,15,train,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie and associated musical artist of Cecil Taylor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Find Dizzy Gillespie
  ?dizzy a dbo:MusicalArtist ;
         foaf:name ""Dizzy Gillespie"" ;
         dbo:birthName ""John Birks Gillespie"" .

  # Find band members of Dizzy Gillespie
  ?dizzy dbo:bandMember ?bandMember .

  # Find Cecil Taylor
  ?cecil a dbo:MusicalArtist ;
         foaf:name ""Cecil Taylor"" .

  # Find associated musical artists with Cecil Taylor
  ?cecil dbo:associatedMusicalArtist ?associatedArtist .

  # Ensure the band member is also an associated artist of Cecil Taylor
  FILTER (?bandMember = ?associatedArtist)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
456,0,train,Give me the spouse of Danielle Spencer (Australian actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  ?person foaf:name ""Danielle Spencer""@en .
  ?person dbo:nationality dbr:Australia .
  ?person dbo:occupation dbr/Australian_actress .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
933,2,train,Give me the band of The Ramong Sound.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  VALUES ?ramones { dbr:The_Ramones }
  ?member dbo:member ?ramones .
  ?member a dbo:Band ;
          rdfs:label ?band .
  FILTER (lang(?band) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
36,17,train,Give me the person born as Ayo Makun and person born in the birth year of Deanne Bray.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personAyoMakun ?personDeanneBray
WHERE {
  # Find Ayo Makun by birth name
  ?personAyoMakun dbo:birthName ""Ayo Makun""@en .
  
  # Find Deanne Bray and her birth year
  ?personDeanneBray dbo:birthYear ?birthYear .

  # Link the two persons through the birth year of Deanne Bray
  ?personAyoMakun dbo:birthYear ?birthYear .
}
```",3,3,4,2,2,2,3,28,1,2610,0,0.00038299502106472615,1.0,0.0007656967840735068
417,37,train,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and child of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  ?leader dbp:country ""Greenland"" .
  ?father dbo:spouse ?leader .
  ?father dbo:child ?child .
  
  FILTER EXISTS { ?child a dbo:Monarch } .

  ?alexandrine dbo:child ?child .
  ?alexandrine rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
976,18,train,Give me the office of Naci Bostancı and office of Meral Akşener and office of Mustafa Şentop.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeLabel WHERE {
  {
    SELECT DISTINCT ?person ?officeLabel WHERE {
      VALUES ?person { 
        dbr:Naci_Bostancı
        dbr:Meral_Akşener
        dbr:Mustafa_Şentop
      }
      ?person dbo:office ?office .
      SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
    }
  }
}
ORDER BY ?person",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
216,33,train,"Give me the player in Igor Bišćan and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?playerInIgorBiscan ?playerInCoach ?soccerPlayerSportsManagerSoccerManager
WHERE {
  # Find the player associated with Igor Bišćan
  dbr:Igor_Bišćan dbo:teamMember ?playerInIgorBiscan .
  
  # Find the organization associated with Džemal Berberović
  dbr:Džemal_Berberović dbo:memberOf ?organisation .

  # Ensure the organisation is a sports club and soccer club
  ?organisation rdf:type dbo:SportsClub ;
                rdf:type dbo:FootballTeam .
  
  # Find a person who is both a soccer player and sports manager, and also a soccer manager of the organization
  ?playerInCoach dbo:occupation dbr:Soccer_player ;
                 dbo:occupation dbr:Sports_manager ;
                 dbo:managerOf ?organisation .

  ?soccerPlayerSportsManagerSoccerManager rdf:type dbo:Soccer_player ;
                                          dbo:occupation dbr:Sports_manager ;
                                          dbo:occupation dbr:Soccer_manager ;
                                          dbo:managerOf ?organisation .
  
  # Ensure the person is the same in both roles
  FILTER (?playerInCoach = ?soccerPlayerSportsManagerSoccerManager)
}
```",4,10,5,3,2,3,3,71,0,0,3,0,0.0,0
5,2,train,Give me the award of Renata Adler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  ?person foaf:name ""Renata Adler""@en .
  ?person dbo:awardsReceived ?award .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
443,13,train,Give me the birthplace of Ulf Lundell and landmark at elevation of the award of William Shepherd.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?landmark WHERE {
  # Part 1: Ulf Lundell's birthplace
  dbr:Ulf_Lundell dbo:birthPlace ?birthPlace .

  # Part 2: Landmark at the elevation of William Shepherd's award
  OPTIONAL {
    dbr:William_Shepherd dbo:award ?award .
    ?award dbo:elevation ?elevation .
    ?landmark dbo:elevation ?elevation .
  }
}
```

This query does the following:
- Retrieves Ulf Lundell's birthplace using `dbo:birthPlace`.
- Finds an award associated with William Shepherd and its elevation.
- Matches a landmark that has the same elevation as the award.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
122,2,train,Who is the band of Gift of Gab (rapper)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName WHERE {
  ?rapper a dbo:MusicalArtist ;
          foaf:name ""Gift of Gab""@en .
  ?rapper dbo:memberOfBand ?band .
  ?band foaf:name ?bandName .
}
```",1,1,2,1,1,2,2,9,0,0,4,0,0.0,0
212,6,train,Give me the birthplace of the professional in .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthPlace
WHERE {
  ?person rdf:type dbo:Person .
  ?person foaf:name ""Professional Name""@en .  # Replace ""Professional Name"" with the actual name.
  ?person dbo:birthPlace ?birthPlace .
}
```

### Explanation:

- **PREFIX:** Define prefixes for commonly used namespaces (`dbo` for DBpedia ontology and `rdf` for RDF).
- **SELECT:** Choose to return the birthplace variable (`?birthPlace`).
- **WHERE Clause:**
  - Ensure the subject is a person using `rdf:type dbo:Person`.
  - Match the professional's name with `foaf:name ""Professional Name""@en`. Replace `""Professional Name""` with the actual name of the professional.
  - Retrieve the birthplace using `dbo:birthPlace`.

### Note:

- Replace `""Professional Name""` with the specific name of the professional you are interested in.
- Ensure that the professional's name is correctly formatted and matches how it appears in DBpedia.",2,2,3,2,1,2,2,9,0,0,13346,0,0.0,0
965,24,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Parent of George Mountbatten, 2nd Marquess of Milford Haven
  dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbo:child dbr:?child1 .
  
  # Parent of the child that is royalty of Prince Louis of Battenberg
  dbr:Prince_Louis_of_Battenberg dbo:child ?royalChild .
  ?royalChild a dbo:RoyalFamilyMember .

  # Common parent who is also royalty
  ?parent dbo:child ?child1 ;
          dbo:child ?royalChild .
  
  # Ensure the common parent is royalty
  ?parent a dbo:RoyalFamilyMember .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
5,11,train,"Give me the birthplace of the person born, that is a politician, as  and entity in Canada.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace
WHERE {
  ?person a dbo:Politician ;
          dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?birthPlace dbp:country ""Canada"" }
}
```

This query does the following:
- Selects individuals (`?person`) who are politicians.
- Retrieves their birthplace (`?birthPlace`).
- Ensures that the birthplace is in Canada by filtering with `dbp:country`.",3,4,4,2,2,3,2,20,0,0,2,0,0.0,0
459,8,train,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorName
WHERE {
  # Find Cliff Roquemore's death place
  dbr:Cliff_Roquemore dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .
  
  # Get the governor of that settlement
  ?deathPlace dbo:governor ?governor .
  ?governor rdfs:label ?governorName .
  
  FILTER (lang(?governorName) = 'en')
}
```",2,3,3,2,1,2,3,28,0,0,2,0,0.0,0
232,0,train,Give me the artistic movement of Ella Cheever Thayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ella_Cheever_Thayer> <http://dbpedia.org/ontology/movement> ?result . },"```sparql
SELECT ?artisticMovement WHERE {
  dbpedia:en:Ella_Cheever_Thayer dbo:artisticMovement ?artisticMovement .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
98,14,train,Give me the region of Philippine Standard Time and birth place of the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?pstRegion
WHERE {
  # Find the birthplace of Paolo Elito M. Ballesteros IV
  OPTIONAL {
    dbr:Paolo_Elito_M._Ballesteros_IV dbo:birthPlace ?birthPlace .
  }
  
  # Find the region associated with Philippine Standard Time
  OPTIONAL {
    dbr:Philippine_Standard_Time dbo:timeZoneRegion ?pstRegion .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
456,3,train,"Give me the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?workTitle
WHERE {
  # Find works where Ross Newton is involved as an actor
  ?work dbo:starring dbr:Ross_Newton .
  
  # Ensure the work is a movie
  OPTIONAL { 
    ?work dbo:type dbr:Film .
  }
  
  # Ensure the work is also a television show
  OPTIONAL {
    ?work dbo:type dbr:TelevisionShow .
  }

  # Bind the title of the work to a variable
  ?work rdfs:label ?workTitle .

  FILTER (lang(?workTitle) = 'en')
}
GROUP BY ?workTitle
HAVING (COUNT(DISTINCT ?type) = 2)
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
274,9,train,Give me the associated musical artist of Cecil Taylor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?artist WHERE {
  ?cecil a dbo:MusicalArtist ;
         foaf:name ""Cecil Taylor"" .
  ?cecil dbo:associatedMusicalArtist ?artist .
}
```

This query selects the associated musical artists of Cecil Taylor by matching his DBpedia entry with the `dbo:associatedMusicalArtist` property.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
645,32,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Francisco Largo Caballero as a member of the military force
  dbr:Francisco_Largo_Caballero dbo:member ?militaryForce .
  
  # Carlos Asensio Cabanillas as a commander in the same military force
  dbr:Carlos_Asensio_Cabanillas dbo:commander ?militaryForce .

  # The military force is an event, a military conflict, and a societal event
  ?militaryForce rdf:type dbo:Event .
  ?militaryForce rdf:type dbo:MilitaryConflict .
  ?militaryForce rdf:type dbo:SocietalEvent .
}",4,7,5,2,2,3,3,71,0,0,23,0,0.0,0
18,13,train,Give me the professional in the award of Ana María Sánchez de Ríos and parent of Liza Huber.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?professional WHERE {
  ?award dbo:recipient ?anaMaría .
  ?anaMaría rdfs:label ""Ana María Sánchez de Ríos""@en .

  ?parent dbo:child ?lizaHuber .
  ?lizaHuber rdfs:label ""Liza Huber""@en .

  ?parent dbo:profession ?professional .

  FILTER (?award = ?parent)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
93,0,train,Give me the capital of Alaska.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alaska> <http://dbpedia.org/ontology/capital> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital
WHERE {
  dbr:Alaska dbo:capital ?capital .
}
```

This query uses the `dbo:capital` predicate to find the capital of Alaska, represented by `dbr:Alaska`.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
442,2,train,"Give me the work of Roosevelt, Theodore.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Roosevelt, Theodore""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?workTitle
WHERE {
  # Identify Theodore Roosevelt in DBpedia
  dbr:Theodore_Roosevelt a dbo:Person .

  # Match works associated with him, such as books or articles
  OPTIONAL { 
    dbr:Theodore_Roosevelt dbo:author ?work .
    ?work rdfs:label ?workTitle .
    FILTER (lang(?workTitle) = 'en')
  }
}
ORDER BY ?workTitle
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
579,3,train,"Give me the residence, that is English and a settlement, of Alan Clyne.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residenceName
WHERE {
  ?person dbo:residence ?residence .
  ?residence rdf:type dbp:EnglishSettlement .
  ?residence rdfs:label ?residenceName .
  FILTER (lang(?residenceName) = 'en') .

  ?person rdfs:label ""Alan Clyne""@en .
}
```

This query will return the name of Alan Clyne's residence, ensuring it is an English settlement.",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
839,35,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the band, that is a musical artist, of Charlie Huhn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?kevinBand ?charlieHuhnBand ?charliesBandBand
WHERE {
  # Kevin Richard Russell's band
  OPTIONAL {
    ?kevin a dbo:MusicalArtist ;
           foaf:name ""Kevin Richard Russell"" .
    ?kevin dbo:bandMemberOf ?kevinBand .
  }

  # Charlie Huhn's band and that band's band
  OPTIONAL {
    ?charlieHuhn a dbo:MusicalArtist ;
                 foaf:name ""Charlie Huhn"" .
    ?charlieHuhn dbo:bandMemberOf ?charlieHuhnBand .

    OPTIONAL {
      ?charlieHuhnBand a dbo:MusicalArtist ;
                       dbo:bandMemberOf ?charliesBandBand .
    }
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
124,39,train,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of Battle of Tamai.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personMilitaryForce ?battleMilitaryForce
WHERE {
  # Identify the person born on 1850-06-24
  ?person a dbo:Person ;
          dbo:birthDate ""1850-06-24""^^xsd:date .

  # Find military force associated with this person that is both a societal event and a military conflict
  ?personMilitaryForce a dbo:MilitaryConflict, dbo:SocietalEvent ;
                       dbo:associatedWith ?person .

  # Identify the military forces involved in the Battle of Tamai
  dbr:Battle_of_Tamai dbo:militaryConflicts ?battleMilitaryForce .
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
216,16,train,Give me the administration of the designer of Woolfe: The Red Hood Diaries and office of Tim Nicholls.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?designerAdministration ?timNichollsOffice
WHERE {
  # Find the designer of Woolfe: The Red Hood Diaries and their administration
  ?game dbp:title ""Woolfe: The Red Hood Diaries""@en .
  ?game dbo:creator ?designer .
  OPTIONAL { ?designer dbo:memberOf ?administration . }
  
  # Find Tim Nicholls' office
  ?timNicholls a dbo:Person ;
               foaf:name ""Tim Nicholls""@en .
  OPTIONAL { ?timNicholls dbo:officeHeld ?office . }

  BIND(IF(BOUND(?administration), STR(?administration), ""Unknown"") AS ?designerAdministration)
  BIND(IF(BOUND(?office), STR(?office), ""Unknown"") AS ?timNichollsOffice)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
579,0,train,Give me the native of Edinburgh.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:nativePlace dbr:Edinburgh .
}
```

This query uses the `dbo:nativePlace` property to find individuals whose native place is Edinburgh. The variable `?person` will hold the results.",1,1,2,1,1,3,2,20,0,0,1711,0,0.0,0
465,28,train,Give me the successor of the child of Alfonso I d'Este and spouse of Archduchess Barbara of Austria and successor of Renée of France.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?child dbo:parent dbr:Alfonso_I_d%27Este ;
         dbo:spouse dbr:Archduchess_Barbara_of_Austria ;
         dbo:successor dbr:Renée_of_France .
  
  ?child dbo:successor ?individual .
  ?individual dbo:successor ?successor .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
791,14,train,"Give me the father of the child, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?fatherName
WHERE {
  ?emperor rdfs:label ""Emperor Takakura""@en .
  ?child dbo:childOf ?emperor ;
         rdf:type dbo:Royalty .
  ?parent dbo:father ?child .
  ?parent rdfs:label ?fatherName .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
826,26,train,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?successor
WHERE {
  # Step 1: Identify Louis I and find a reference who is royalty
  ?reference rdf:type dbo:Monarch .
  ?reference dbo:spouse ?louisI .
  
  FILTER(?louisI = dbpedia:Louis_I_of_France) .

  # Step 2: Find the child of this reference who is also royalty
  ?child dbo:childOf ?reference ;
         rdf:type dbo:Monarch .

  # Step 3: Determine the successor of this child
  ?child dbo:successor ?successor .
}
```",3,5,4,3,1,3,3,71,0,0,4,0,0.0,0
267,13,train,"Give me the coach of the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://dbpedia.org/ontology/coach> ?result . ?v0 <http://dbpedia.org/ontology/team> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coach
WHERE {
  # Find the soccer club associated with Tractor S.C. during the 2020–21 season
  dbr:Tractor_S.C._(football)_season_2020%E2%80%9321 dbo:manager ?coach .
  
  # Ensure that the coach is related to a player who is part of a soccer club
  ?player dbo:playsFor ?soccerClub .
  ?soccerClub a dbo:SoccerClub .

  # Link the coach to the soccer club
  ?coach dbo:manages ?soccerClub .
}
```

This query assumes that:
- `dbr:Tractor_S.C._(football)_season_2020%E2%80%9321` is the resource for Tractor S.C. in the specified season.
- The property `dbo:manager` links a team to its coach during a specific season.
- The player's association with a soccer club and the coach's management of that club are represented by `dbo:playsFor` and `dbo:manages`, respectively.",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
445,15,train,"Give me the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?result . ?v1 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?countryName
WHERE {
  ?athlete dbo:nationality dbr:United_Kingdom .
  ?athlete dbo:residence ?residence .
  ?residence a dbo:Country .
  BIND (STR(?residence) AS ?countryURI)
  OPTIONAL { 
    ?residence rdfs:label ?countryName .
    FILTER (langMatches(lang(?countryName), ""EN""))
  }
}
```",2,4,3,2,1,3,3,71,0,35,2,0.0,0.0,0
865,17,train,Who is the child of the father of Abul Maal Abdul Muhith?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child
WHERE {
  # Find Abul Maal Abdul Muhith's father
  ?person foaf:name ""Abul Maal Abdul Muhith""@en .
  ?person dbo:father ?father .

  # Find the children of this father
  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,3,0,0,1.0,1.0,1.0
573,11,train,"Give me the person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . }","```sparql
SELECT DISTINCT ?region ?decedentAt
WHERE {
  # Bind Charlie Baker to a variable
  wd:Q1234567 dbo:administratorOf ?region .
  
  # Find decedents at these administrations
  OPTIONAL { 
    ?region dbo:decedentAt ?decedentAt .
  }
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia resource identifier for Charlie Baker.",2,3,3,2,1,3,3,71,0,0,968,0,0.0,0
965,18,train,"Give me the parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentLouise ?parentGeorge ?spouseLouis
WHERE {
  # Parent of Louise Mountbatten
  ?louise dbo:birthName ""Louise Mountbatten""@en .
  ?louise dbo:parent ?parentLouise .

  # Parent of George Mountbatten, 2nd Marquess of Milford Haven
  ?george dbo:birthName ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  ?george dbo:parent ?parentGeorge .

  # Spouse of Prince Louis of Battenberg
  ?louis dbo:birthName ""Prince Louis of Battenberg""@en .
  ?louis dbp:spouse ?spouseLouis .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
773,22,train,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of Louis the German.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?parent
WHERE {
  ?spouse a dbo:Spouse ;
          dbo:spouse ?louisTheGerman .
  
  FILTER(?louisTheGerman = dbpedia:Louis_the_German) .

  ?child dbo:childOf ?parent ;
         rdf:type dbo:Monarch ;
         dbo:spouse ?spouse .

}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
976,8,train,Who is the person born as Mehmet Naci Bostancı?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
SELECT ?person ?name WHERE {
  ?person dbo:birthName ""Mehmet Naci Bostancı""@en .
  OPTIONAL { ?person foaf:name ?name . }
}
```

This query selects entities (`?person`) that have a `dbo:birthName` of ""Mehmet Naci Bostancı"" and optionally retrieves their name if available.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
124,21,train,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of Battle of Atbara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander
WHERE {
  # Find commanders of A Field Battery, Royal Australian Artillery in military conflicts
  ?battery a dbo:MilitaryUnit ;
           dbo:participatedIn ?conflict1 .
  
  FILTER (strstarts(str(?battery), ""Royal_Australian_Artillery""))

  OPTIONAL { 
    ?conflict1 dbo:commander ?commander .
  }

  # Find commanders involved in the Battle of Atbara
  dbr:Battle_of_Atbara a dbo:MilitaryConflict ;
                       dbo:participatedIn ?conflict2 .

  OPTIONAL {
    ?conflict2 dbo:commander ?commander .
  }
  
  # Ensure commander is common to both conflicts
  FILTER (?commander = ?commander)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
888,14,train,Give me the awardee of the award of the commander in 2022 Ukrainian eastern counteroffensive.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:event dbr:2022_Ukrainian_eastern_counteroffensive .
  ?award dbo:recipient ?awardee .
  FILTER (YEAR(?date) = 2022)
}
```",3,3,4,3,1,3,2,20,0,0,44,0,0.0,0
47,5,train,"Give me the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?awardName WHERE {
  ?person foaf:name ""Mantu Ghosh""@en .
  ?person dbo:award ?award .
  ?award foaf:name ?awardName .
}
```

This query does the following:
- It selects the names of awards (`?awardName`) associated with Mantu Ghosh.
- It identifies `?person` as Mantu Ghosh using his name in English.
- It finds all awards (`dbo:award`) linked to this person and retrieves their names.",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
917,6,train,Who is the father of Keʻelikōlani?,SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherName WHERE {
  ?keelikolani a dbo:Person ;
               rdfs:label ""Keʻelikōlani""@en .
  ?keelikolani dbo:father ?father .
  ?father rdfs:label ?fatherName .
  FILTER(LANG(?fatherName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
98,2,train,Who is the successor of Emperor Nijō?,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Nijō> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?successor WHERE {
  wd:Q123456 rdfs:label ""Emperor Nijō""@en .
  wd:Q123456 wdt:P39* ?emperorSuccession .
  ?emperorSuccession wdt:P1376 ?successor .
  FILTER(LANG(?successor->rdfs:label) = 'en')
}
```

**Explanation:**
- `wd:Q123456` is a placeholder for the DBpedia resource ID of Emperor Nijō. You would need to replace this with the actual resource ID.
- `rdfs:label ""Emperor Nijō""@en` ensures we are referring to the correct entity in English.
- `wdt:P39* ?emperorSuccession` navigates through properties related to emperors, assuming P39 is a property that links emperors in succession (you may need to verify or adjust this based on DBpedia's schema).
- `?emperorSuccession wdt:P1376 ?successor` uses the property P1376, which typically denotes ""successor"" relationships.
- The `FILTER(LANG(?successor->rdfs:label) = 'en')` ensures that the successor's label is in English.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
839,8,train,"Give me the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band
WHERE {
  ?person foaf:name ""Charlie Huhn""@en .
  ?band dbo:musicalArtist ?person ;
        a dbo:Band .
}
```

This query does the following:
- It selects the variable `?band` which represents the band associated with Charlie Huhn.
- In the `WHERE` clause, it matches a person (`?person`) whose name is ""Charlie Huhn"" using the `foaf:name` property.
- It then finds bands (`?band`) that have this person as a musical artist using the `dbo:musicalArtist` property and ensures that these entities are of type `dbo:Band`.",1,2,2,1,1,3,3,71,0,0,4,0,0.0,0
365,2,train,"Give me the commander, that is an office holder, in Ukrainian–Soviet War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderName ?officeTitle
WHERE {
  ?war dbr:Ukrainian%E2%80%93Soviet_War .
  ?war dbo:commander ?commander .
  ?commander rdfs:label ?commanderName .
  FILTER (LANG(?commanderName) = 'en') .

  OPTIONAL {
    ?commander dbo:officeHolder ?office .
    ?office rdfs:label ?officeTitle .
    FILTER (LANG(?officeTitle) = 'en')
  }
}
```",1,2,2,1,1,3,2,20,0,0,5,0,0.0,0
93,8,train,Give me the death place of the governor of Bob Bartlett.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace
WHERE {
  # Find Bob Bartlett and his associated governor
  dbr:Bob_Bartlett dbo:governmentRole [
    a dbo:GovernmentRole ;
    dbo:officeHolder ?governor .
  ] .

  # Filter for governors of Alaska
  ?governor dbo:stateOrTerritory dbr:Alaska .

  # Get the death place of the governor
  ?governor dbo:deathPlace ?deathPlace .
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
976,17,train,Who is the person born as the birth name of Naci Bostancı?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?birthName
WHERE {
  ?person rdfs:label ""Naci Bostancı""@en .
  ?person foaf:name ?commonName .
  FILTER(?commonName = ""Naci Bostancı"")
  OPTIONAL { 
    ?person dbo:birthName ?birthName .
  }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
935,5,train,Give me the office of Sanaullah Khan Zehri.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office
WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Sanaullah Khan Zehri""@en .
  ?office dbo:officeHolder ?person .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
445,7,train,Who is the commander in Battle of Saint-Mihiel?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderName WHERE {
  ?battle dbo:wikiPageRedirects dbr:Battle_of_Saint-Mihiel .
  ?battle dbo:commander ?commander .
  ?commander rdfs:label ?commanderName .
  FILTER (lang(?commanderName) = 'en')
}
```

### Explanation

- **PREFIX**: Define prefixes for DBpedia ontology and resources.
- **SELECT**: Choose the variable `?commanderName` to return the names of commanders.
- **WHERE**:
  - Match any battle that redirects to ""Battle of Saint-Mihiel.""
  - Find the commander associated with this battle using `dbo:commander`.
  - Retrieve the label (name) of the commander in English.

This query will retrieve the names of individuals who commanded during the Battle of Saint-Mihiel, as recorded in DBpedia.",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
417,35,train,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName
WHERE {
  # Find Count Ingolf of Rosenborg
  ?countIngolf a dbo:Person ;
               dbp:name ""Count Ingolf of Rosenborg"" .

  # Find his parent who is royalty
  ?parent dbo:child ?countIngolf .
  FILTER EXISTS { ?parent dbo:nationality dbr:RoyalFamily } .

  # Find the spouse of this parent
  ?spouse dbo:spouseOrPartner ?parent ;
          dbp:name ?spouseName .

  # Find Frederick Francis III, Grand Duke of Mecklenburg-Schwerin
  ?frederick a dbo:Person ;
             dbp:name ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin"" .

  # Find his child who is royalty
  ?child dbo:child ?frederick .
  FILTER EXISTS { ?child dbo:nationality dbr:RoyalFamily } .

  # Find the grandchild (child of the child) who is royalty
  ?grandChild dbo:child ?child .
  FILTER EXISTS { ?grandChild dbo:nationality dbr:RoyalFamily } .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
892,9,train,Give me the entity in Italy and landmark at elevation of 58.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
    ?landmark a dbo:Lighthouse .
    ?landmark dbo:elevationAboveSeaLevel ?elevation .
    ?landmark dbo:country dbr:Italy .
    FILTER (?elevation = 58)
}
```

### Explanation:
- **PREFIX**: Defines common prefixes for DBpedia ontology and resources.
- **SELECT ?landmark**: We are interested in the landmark entity.
- **WHERE Clause**:
  - `?landmark a dbo:Lighthouse`: Ensures we're looking at landmarks (specifically lighthouses, as an example of a type of landmark).
  - `?landmark dbo:elevationAboveSeaLevel ?elevation`: Matches the elevation property.
  - `?landmark dbo:country dbr:Italy`: Filters landmarks located in Italy.
- **FILTER**: Ensures the elevation is exactly 58 meters.

This query will return all lighthouses (or other specified types of landmarks) in Italy that are at an elevation of 58 meters. Adjust the class type (`dbo:Lighthouse`) if you have a specific type of landmark in mind.",2,2,3,1,2,3,3,71,0,0,11,0,0.0,0
865,10,train,Give me the native of British Raj and father of Shahla Khatun.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?shahlaKhatun dbo:mother dbr:Shahla_Khatun .
  ?shahlaKhatun dbo:father ?father .
  
  ?father dbo:nationality ?nationality .
  FILTER(CONTAINS(LCASE(?nationality), ""british raj"") || CONTAINS(LCASE(?nationality), ""india""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
955,6,train,Give me the band of Nate Albert and band of Johnny Rioux.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nate_Albert> . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Rioux> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nateBand ?johnnyBand
WHERE {
  ?nateAlbert a dbo:Musician ;
              foaf:name ""Nate Albert""@en .
  ?nateAlbert dbo:band ?nateBand .

  ?johnnyRioux a dbo:Musician ;
               foaf:name ""Johnny Rioux""@en .
  ?johnnyRioux dbo:band ?johnnyBand .
}
```

### Explanation

- **PREFIXes:** We define prefixes for ontology (`dbo`) and properties (`dbp`).
- **SELECT Clause:** We select the bands associated with Nate Albert and Johnny Rioux.
- **WHERE Clause:** 
  - For each musician, we specify that they are of type `dbo:Musician`.
  - We use `foaf:name` to match their names in English.
  - We retrieve the band using `dbo:band`.

This query assumes that the musicians' names and their association with bands are correctly represented in DBpedia. Adjustments might be needed if different properties or structures are used.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
987,2,train,Give me the entity in Montenegro.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . },"```sparql
SELECT DISTINCT ?entity WHERE {
  ?entity dbo:country dbr:Montenegro .
}
```",1,1,2,1,1,3,3,71,909,0,0,1.0,1.0,1.0
465,38,train,"Give me the successor of the child, that is a royalty, of Anne of Brittany and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Anne of Brittany's child who is royalty
  ?anneChild a dbo:Person ;
            dbo:parent dbr:Anne_of_Brittany ;
            dbo:royalty true .

  # Ferdinand I's child who is royalty
  ?ferdinandChild a dbo:Person ;
                  dbo:parent dbr:Ferdinand_I,_Holy_Roman_Emperor ;
                  dbo:royalty true .

  # Spouse relationship between the children
  ?anneChild dbo:spouse ?successor .
  ?successor dbo:spouse ?ferdinandChild .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
715,10,train,Give me the leader of Ministry of the Air (Spain) and commander in Rif War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader ?commander
WHERE {
  # Leader of Ministry of the Air (Spain)
  OPTIONAL {
    ?ministry a dbo:AirForce ;
              dbo:country dbr:Spain .
    ?ministry dbo:head ?leader .
  }

  # Commander in Rif War
  OPTIONAL {
    ?rifWar a dbo:MilitaryConflict ;
            dbo:commander ?commander .
    FILTER(CONTAINS(LCASE(STR(?rifWar)), ""rif war""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
987,6,train,Who is the actor of All for Free?,SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?movie dbo:title ""All for Free""@en .
  ?movie rdf:type dbo:Film .
  ?movie dbo:starring ?actor .
}
```

This query does the following:
- Selects variables representing actors (`?actor`).
- Matches a movie with the title ""All for Free"" in English.
- Ensures that this entity is of type `dbo:Film`.
- Retrieves actors linked to this film via the `dbo:starring` property.",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
645,28,train,Give me the military force of Spanish Civil War and leader of Ministry of the Army (Spain) and commander in the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?ministryLeader ?commander
WHERE {
  # Find military forces involved in the Spanish Civil War
  ?militaryForce dbo:partOf dbr:Spanish_Civil_War .
  
  # Find leader of the Ministry of the Army (Spain)
  ?ministryLeader dbo:position dbr:Ministry_of_the_Army_(Spain) ;
                  dbo:leaderOf ?armyEntity .

  # Find Carlos Asensio Cabanillas as a commander
  ?commander rdfs:label ""Carlos Asensio Cabanillas""@en .
  ?commander dbo:commanderOf ?militaryForce .

  OPTIONAL {
    ?ministryLeader dbo:startDate ?start ;
                    dbo:endDate ?end .
    FILTER (?start <= ""1939-04-01""^^xsd:date && ?end >= ""1936-07-17""^^xsd:date)
  }
}
ORDER BY ?militaryForce
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
917,24,train,Give me the child of Kekūanāoʻa and child of the father of Keʻelikōlani.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfKekuanaoa ?childOfFatherOfKeelikolani
WHERE {
  # Find the child of Kekūanāoʻa
  dbr:Kekūanāoʻa dbo:child ?childOfKekuanaoa .

  # Find the father of Keʻelikōlani
  OPTIONAL {
    dbr:Keʻelikōlani dbo:father ?fatherOfKeelikolani .
    
    # Find a child of the father of Keʻelikōlani
    ?fatherOfKeelikolani dbo:child ?childOfFatherOfKeelikolani .
  }
}
```",3,3,4,2,2,3,3,71,3,3,0,0.5,1.0,0.6666666666666666
192,1,train,"Give me the child of Mary of Hungary, Queen of Naples.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_of_Hungary,_Queen_of_Naples> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?childLabel WHERE {
  ?mary a dbo:Queen ;
        foaf:name ""Mary of Hungary"" ;
        dbp:title ""Queen of Naples""@en .
  
  ?mary dbo:child ?child .

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

### Explanation

- **PREFIX:** Define prefixes for DBpedia ontology (`dbo`) and properties (`dbp`).
- **SELECT Clause:** Choose variables `?child` (the child) and `?childLabel` (label of the child in English).
- **WHERE Clause:**
  - Identify Mary of Hungary as a Queen with specific name and title.
  - Use `dbo:child` to find her children.
  - Utilize `SERVICE wikibase:label` to get labels for the results, ensuring they are in English.

This query should effectively retrieve the child or children of Mary of Hungary, Queen of Naples, from DBpedia.",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
582,3,train,"Give me the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?reference WHERE {
  # Find all references associated with Hirotaka Sugawara
  ?sugawara dbo:wikiPageWikiLink ?reference .
  
  FILTER (strstarts(str(?sugawara), str(dbr:Hirotaka_Sugawara)))

  # Ensure the reference is related to a scientist
  ?reference dbo:author ?scientist .
  ?scientist rdf:type dbo:Scientist .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
98,10,train,Give me the birth place of the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Paolo Elito M. Ballesteros IV""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
935,10,train,"Give me the office of the native of Balochistan, Pakistan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office
WHERE {
  ?person a dbo:Person .
  ?person dbo:nativePlace dbr:Balochistan_Pakistan .
  OPTIONAL { ?person dbo:officeHolder ?office . }
}
```",2,2,3,2,1,3,2,20,0,0,35,0,0.0,0
18,4,train,Who is the professional in Actress?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person ?name WHERE {
  ?person a dbo:Actor ;
          foaf:name ?name .
  OPTIONAL { 
    ?person dbo:occupation dbr:Actress .
  }
}
ORDER BY ?name
```",1,1,2,1,1,2,3,28,677,6471,18564,0.094711807498601,0.03518528143027909,0.05130925764523097
236,9,train,"Give me the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration
WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolderOf ?office .
  ?office dbo:location dbr:Quincy,_Massachusetts ;
          dbo:organization ?administration .
}
```

### Explanation:

- **PREFIXes:** Define common prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT ?administration:** We want to retrieve distinct administrations associated with the person.
- **WHERE Clause:**
  - `?person a dbo:Politician ;` identifies individuals who are politicians.
  - `dbo:officeHolderOf ?office .` links these individuals to their offices.
  - `?office dbo:location dbr:Quincy,_Massachusetts ;` ensures the office is located in Quincy, Massachusetts.
  - `dbo:organization ?administration .` retrieves the administration (organization) associated with the office.

This query should effectively capture the required information based on your question.",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
433,31,train,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of Bill Evans.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?commonArtist WHERE {
  # Paul Chambers' associated musical artists who are also artists
  ?paulChambers dbo:musicalArtist ?artist1 .
  FILTER(STRSTARTS(LCASE(?paulChambers), ""http://dbpedia.org/resource/paul_chambers""))
  ?artist1 rdf:type dbo:Artist .

  # Bill Evans' associated musical artists who are also artists
  ?billEvans dbo:musicalArtist ?artist2 .
  FILTER(STRSTARTS(LCASE(?billEvans), ""http://dbpedia.org/resource/bill_evans""))
  ?artist2 rdf:type dbo:Artist .

  # Find common artists
  FILTER (?artist1 = ?artist2)
  BIND(?artist1 AS ?commonArtist)
}
ORDER BY ?commonArtist",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
579,6,train,Give me the native of Edinburgh and person born as Isobel Jane Miller Richard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Isobel Jane Miller Richard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name
WHERE {
  # Find people native to Edinburgh
  ?person dbo:birthPlace dbr:Edinburgh .
  
  OPTIONAL {
    # Check if the person has a full name matching ""Isobel Jane Miller Richard""
    ?person foaf:name ?name .
    FILTER(CONTAINS(LCASE(?name), ""isobel"") && CONTAINS(LCASE(?name), ""jane"") &&
           CONTAINS(LCASE(?name), ""miller"") && CONTAINS(LCASE(?name), ""richard""))
  }
}
ORDER BY ?name",2,2,3,1,2,3,2,20,1,1710,0,0.0005844535359438924,1.0,0.0011682242990654205
865,29,train,"Give me the father of Shahla Khatun and native of British Raj and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfShahlaKhatun ?politicianChild
WHERE {
  # Shahla Khatun's father who is native to the British Raj
  ?shahlaKhatun dbo:mother dbr:Shahla_Khatun .
  ?fatherOfShahlaKhatun dbo:child ?shahlaKhatun ;
                       dbo:nationality dbr:British_Raj .

  # Abu Ahmad Abdul Hafiz's child who is a politician
  ?abuAhmadAbdulHafiz dbo:child ?politicianChild .
  ?politicianChild rdf:type dbo:Politician .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
645,24,train,"Give me the leader of Ministry of the Army (Spain) and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?militaryForce ?event WHERE {
  # Identify Francisco Largo Caballero as the leader of the Ministry of the Army in Spain
  dbr:Francisco_Largo_Caballero dbo:positionHeld dbr:Ministry_of_the_Army_(Spain) .
  
  # Find events related to military forces under his leadership
  ?militaryForce dbo:leader dbr:Francisco_Largo_Caballero ;
                a dbo:MilitaryUnit .

  # Ensure the event is both a military conflict and a societal event
  ?event dbo:participatedIn ?militaryForce ;
         a dbo:MilitaryConflict, dbo:SocietalEvent .
  
  # Bind Francisco Largo Caballero as the leader in the result
  BIND(dbr:Francisco_Largo_Caballero AS ?leader)
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
130,3,train,"Give me the film, that is a soccer club and an organisation, of Candice Storey Lee.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?film WHERE {
  # Find films directed by Candice Storey Lee
  ?film dbo:director dbr:Candice_Storey_Lee .
  
  # Ensure the film is also a soccer club
  ?film rdf:type dbo:SoccerClub .

  # Ensure the film is also an organization
  ?film rdf:type dbo:Organization .
}
```

### Explanation

- **PREFIX**: Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT ?film**: Retrieve distinct films that meet all conditions.
- **WHERE Clause**:
  - `?film dbo:director dbr:Candice_Storey_Lee`: Matches films directed by Candice Storey Lee.
  - `?film rdf:type dbo:SoccerClub`: Ensures the film is classified as a soccer club.
  - `?film rdf:type dbo:Organization`: Ensures the film is also an organization.

This query assumes that there are films which can be categorized both as soccer clubs and organizations, which might be rare or non-existent. Adjustments may be needed based on actual data availability.",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
465,4,train,Give me the child of Alfonso I d'Este.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:spouse|dbo:child ?alfonso .
  ?alfonso rdfs:label ""Alfonso I d'Este""@en .
  FILTER (lang(?alfonso) = 'en')
  ?alfonso dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
715,24,train,Give me the leader of Ministry of the Air (Spain) and commander in the force of Francisco Largo Caballero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?commander 
WHERE {
  # Find the leader of Ministry of the Air (Spain)
  ?ministry dbo:head ?leader .
  FILTER(STRSTARTS(LCASE(?ministry), ""dbr:ministry_of_the_air_(spain)""))

  # Find commanders in the force under Francisco Largo Caballero
  ?force dbo:commander ?commander .
  ?francisco dbo:commanded ?force .
  FILTER(STRSTARTS(LCASE(?francisco), ""dbr:francisco_largo_caballero""))
}
```

This query does the following:
- Selects variables `?leader` and `?commander`.
- Matches triples where a ministry has a head (`dbo:head`) as the leader.
- Filters to ensure it's specifically the Ministry of the Air in Spain.
- Finds forces commanded by Francisco Largo Caballero and their commanders.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
41,11,train,"Give me the party of the work, that is an office holder, of yes.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work ?party ?officeHolder
WHERE {
  ?person a dbo:OfficeHolder .
  ?person dbo:partyAffiliation ?party .
  ?work dbo:creator ?person .
}
```",2,3,3,2,1,2,3,28,0,0,35,0,0.0,0
965,35,train,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  # Prince George of Battenberg
  ?prince a dbo:NoblePerson ;
          foaf:name ""Prince George of Battenberg"" ;
          dbo:spouse ?spouse .

  # Spouse of Princess Victoria of Hesse and by Rhine
  ?victoria a dbo:Princess ;
            foaf:name ""Princess Victoria of Hesse and by Rhine"" ;
            dbo:spouse ?vSpouse .

  # Connect Prince George's spouse to the spouse of Princess Victoria
  ?spouse dbp:spouseOf ?vSpouse .

  # Retrieve the parent of Prince George
  ?prince dbo:parent ?parent .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
456,8,train,"Give me the band, that is a musical artist, of Dean Brody.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band
WHERE {
  ?person dbo:musicalArtist dbr:Dean_Brody .
  ?person dbo:band ?band .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
917,9,train,Give me the parent of Albert Kamehameha and child of Kekūanāoʻa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
SELECT ?individual WHERE {
  ?albert dbo:parent ?individual .
  FILTER (str(?albert) = ""Albert Kamehameha"") .

  ?keku dbp:child ?individual .
  FILTER (str(?keku) = ""Kekūanāoʻa"") .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
965,21,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
    ?george a dbo:Marquess ;
            dbo:parent ?parent .
    
    ?princess a dbo:Princess ;
              rdfs:label ""Victoria of Hesse and by Rhine""@en .

    ?princess dbo:spouse ?spouse1 .
    ?spouse1 dbo:spouse ?spouse2 .

    FILTER(?george = <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven>)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
507,22,train,Give me the spouse of Anne V. Coates and professional in the profession of Guy Ferland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?profession
WHERE {
  # Find Anne V. Coates and her spouse
  ?anne a dbo:Person ;
        foaf:name ""Anne V. Coates""@en .
  ?anne dbo:spouse ?spouse .

  # Find Guy Ferland's profession
  ?guy a dbo:Person ;
       foaf:name ""Guy Ferland""@en .
  ?guy dbo:profession ?profession .
}
```

This query does the following:
- It selects two variables, `?spouse` and `?profession`.
- It identifies Anne V. Coates as a person and retrieves her spouse.
- It identifies Guy Ferland as a person and retrieves his profession.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
274,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professionalName WHERE {
  ?organization dbo:employee ?person .
  ?person foaf:name ?professionalName .
  FILTER (regex(?organization, ""YourOrganizationHere"", ""i"")) # Replace with the specific organization
}
```

Replace `""YourOrganizationHere""` with the actual name or identifier of the organization you're interested in. If you have more details about what kind of professionals or context you are referring to, please provide them for a more precise query.",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
329,0,train,Give me the birthplace of Eric Cross (writer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace
WHERE {
  ?person rdfs:label ""Eric Cross (writer)""@en .
  ?person dbo:occupation dbr:Writer .
  ?person foaf:bornIn ?birthPlace .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
47,38,train,Give me the office of the awardee of Banga Bhushan and office of the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office
WHERE {
  {
    ?person dbo:award dbr:Banga_Bhushan.
    ?person dbo:positionHeld ?office.
  }
  UNION
  {
    ?person dbo:award dbr:Padma_Vibhushan.
    ?person dbo:positionHeld ?office.
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
917,11,train,"Give me the parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent
WHERE {
  # Kamehameha IV's URI
  VALUES ?kamehamehaIV { <http://dbpedia.org/resource/Kamehameha_IV> }

  # Find children of Kamehameha IV who are royalty
  ?child dbo:childOf ?kamehamehaIV .
  ?child rdfs:subClassOf* dbo:Royalty .

  # Get the parent of that child
  ?parent dbo:parentOf ?child .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
433,32,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonArtist WHERE {
  # Find Scott LaFaro's associated musical artist who is also an artist
  ?scottLaFaro dbo:associatedMusicalArtist ?artist1 .
  FILTER (str(?scottLaFaro) = ""Scott LaFaro"") .
  ?artist1 a dbo:Musician ;
           a dbo:Artist .

  # Find Paul Chambers' associated musical artist who is also an artist
  ?paulChambers dbo:associatedMusicalArtist ?artist2 .
  FILTER (str(?paulChambers) = ""Paul Laurence Dunbar Chambers Jr."") .
  ?artist2 a dbo:Musician ;
           a dbo:Artist .

  # Find the common artist between these two sets
  VALUES ?commonArtist { ?artist1 ?artist2 }
}
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
326,9,train,"Give me the birthplace, that is a state and British, of the professional in Writer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/occupation> ""Writer""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writerLabel (SAMPLE(?birthPlace) AS ?birthplace)
WHERE {
  ?writer a dbo:Writer ;
          rdfs:label ?writerLabel ;
          dbo:occupation dbo:Writing .
  
  ?writer dbo:birthPlace ?birthPlace .

  ?birthPlace rdf:type dbr:State ;
              dbo:country dbr:United_Kingdom .

  FILTER (lang(?writerLabel) = 'en')
}
GROUP BY ?writerLabel
ORDER BY ?writerLabel",2,4,3,2,1,3,2,20,0,0,38,0,0.0,0
917,34,train,"Give me the child of Kekūanāoʻa and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?parent
WHERE {
  # Kekūanāoʻa's child who is royalty
  ?child dbo:parent dbr:Kekūanāoʻa .
  
  # The child must be a parent of someone who was a mayor in the Hawaiian Kingdom
  ?child dbo:child ?mayorChild .
  ?mayorChild dbo:occupation dbr:Hawaiian_Kingdom_mayors .

  # Ensure the child is royalty
  ?child dbo:nationality dbr:Royal_House_of_Kamehameha .
  
  # Bind the parent of the child (which is Kekūanāoʻa)
  BIND(?child AS ?parent)
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
47,6,train,Give me the awardee of Banga Bhushan.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . },"```sparql
SELECT ?awardee WHERE {
  ?award dcterms:title ""Banga Bhushan""@en .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
976,28,train,"Give me the office of Meral Akşener and office of the leader, that is a politician, of Grand National Assembly of Turkey and office of Naci Bostancı.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?office
WHERE {
  # Meral Akşener's office
  { 
    ?mAkPerson a dbo:Politician ;
               foaf:name ""Meral Akşener""@en .
    ?mAkPerson dbo:office ?office .
  }
  
  UNION
  
  # Leader of the Grand National Assembly of Turkey's office
  {
    ?gnaLeader a dbo:Politician ;
               dbp:leaderOf <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> .
    ?gnaLeader dbo:office ?office .
  }
  
  UNION
  
  # Naci Bostancı's office
  {
    ?nBPerson a dbo:Politician ;
              foaf:name ""Naci Bostancı""@en .
    ?nBPerson dbo:office ?office .
  }
}
ORDER BY ?person",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
433,5,train,"Give me the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Ornette Coleman as a subject
  dbr:Ornette_Coleman 
    dbo:musicalArtist ?associatedArtist ;
    dbo:artist ?associatedArtist .

  # Ensure the associated artist is both a musical artist and an artist
  FILTER EXISTS { ?associatedArtist a dbo:MusicalArtist . }
  FILTER EXISTS { ?associatedArtist a dbo:Artist . }
}
```",1,3,2,1,1,3,3,71,0,0,10,0,0.0,0
965,6,train,"Give me the child, that is a royalty, of Prince Louis of Battenberg.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  # Prince Louis of Battenberg as a parent
  dbr:Prince_Louis_of_Battenberg dbo:spouse ?parent .
  
  # The child who is royalty
  ?parent dbo:child ?child .
  ?child rdf:type dbo:Monarch .

  # Get the name of the child
  ?child rdfs:label ?childName .
  
  FILTER (LANG(?childName) = 'en')
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
130,5,train,"Give me the administration, that is American, of .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> """"@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?administration a dbo:Government.
  ?administration dbo:nationality dbr:United_States .
}
```

This query does the following:
- Selects administrations (`?administration`) that are instances of `dbo:Government`.
- Filters these to include only those with a nationality linked to the United States (`dbr:United_States`).",1,2,2,1,1,3,2,20,0,0,43,0,0.0,0
773,15,train,Give me the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v1 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandFather
WHERE {
  ?bernard dbo:sonOf ?charlesTheFat .
  FILTER (str(?charlesTheFat) = ""Charles_the_Fat"") .
  
  ?charlesTheFat dbo:father ?grandFather .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
456,33,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and spouse of Danielle Spencer (Australian actress).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?spouse
WHERE {
  # Find Lamont Cranston and his alter ego ""The Shadow""
  dbr:Lamont_Cranston dbo:alias dbr:The_Shadow .
  
  # Find Danielle Spencer's spouse
  OPTIONAL {
    dbr:Danielle_Spencer dbo:spouse ?spouse .
  }
}
```

This query does the following:
- Identifies Lamont Cranston and his alias ""The Shadow.""
- Attempts to find any spouse information for Danielle Spencer using an `OPTIONAL` clause, which allows the query to return results even if some data is missing.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
892,31,train,Give me the entity in the profession of the true self of Enrico Crolla and landmark at elevation of 58.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v2 <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
SELECT ?profession ?landmark WHERE {
  # Find Enrico Crolla's profession
  ?enricoCrolla a dbo:Person ;
                foaf:name ""Enrico Crolla""@en .
  ?enricoCrolla dbo:occupation ?profession .

  # Find landmarks with elevation of 58
  ?landmark a dbo:Landmark ;
            geo:elevation ?elevation .
  FILTER (?elevation = 58)
}
```",4,4,5,3,2,3,3,71,0,0,11,0,0.0,0
573,27,train,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentName WHERE {
  ?work dbo:author dbr:John_Quincy_Adams .
  dbr:John_Quincy_Adams dbo:parent ?parent .
  
  ?parent a dbo:Politician ;
          dbo:officeHolder ?office .

  OPTIONAL { ?parent rdfs:label ?parentName . FILTER (lang(?parentName) = ""en"") }
}
```

This query does the following:
- Identifies works authored by John Quincy Adams.
- Retrieves his parents.
- Filters these parents to ensure they are politicians and office holders.
- Optionally retrieves their names in English.",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
715,30,train,"Give me the commander in Spanish Civil War and commander in Rif War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderSpanishCivilWar ?commanderRifWar ?leaderOffice
WHERE {
  # Commander in the Spanish Civil War
  ?person dbo:commanderOf dbr:Spanish_Civil_War .
  BIND(?person AS ?commanderSpanishCivilWar)

  # Commander in the Rif War
  OPTIONAL { 
    ?person dbo:commanderOf dbr:Rif_War .
    BIND(?person AS ?commanderRifWar)
  }

  # Leader of an office associated with Carlos Franco Iribarnegaray
  ?office dbo:leader ?person ;
          a dbo:Government_Agency, dbo:Organization .

  FILTER(?office = dbr:Office_of_Carlos_Franco_Iribarnegaray) .
  BIND(?person AS ?leaderOffice)
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
917,36,train,"Give me the parent of Albert Kamehameha and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Find Albert Kamehameha's parent
  dbr:Albert_Kamehameha dbo:parent ?parent .

  # Find the child of this parent who is a royalty and related to Kamehameha III
  ?parent dbo:child ?child .
  
  # Ensure the child is a royalty
  ?child rdf:type dbo:Monarch .

  # Ensure the child has a connection to Kamehameha III
  ?child dbo:spouse|dbo:child dbr:Kamehameha_III .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
124,26,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
  ?medal a dbo:Award ;
         rdfs:label ""British South Africa Company Medal""@en .
  
  ?recipient dbo:award ?medal .

  ?war dbo:awardee ?recipient ;
       a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .

  ?war dbo:militaryForce ?militaryForce .
}
```",3,6,4,3,1,3,3,71,0,0,1434,0,0.0,0
5,4,train,"Give me the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Rubén Colón Tarrats""@en .
  
  ?person dbo:associatedBand ?band .

  ?band a dbo:MusicalGroup ;
        foaf:name ?bandName .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
976,31,train,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of Meral Akşener.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/leader> ?v0 . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?kemalOffice ?meralOffice
WHERE {
  # For Kemal Kılıçdaroğlu
  OPTIONAL {
    ?kemal dbr:Kemal_Kılıçdaroğlu .
    ?kemal dbo:leaderOf ?administration1 .
    ?administration1 a dbo:Organisation .
    ?kemal dbo:office ?kemalOffice .
  }

  # For Meral Akşener
  OPTIONAL {
    ?meral dbr:Meral_Akşener .
    ?meral dbo:leaderOf ?administration2 .
    ?administration2 a dbo:Organisation .
    ?meral dbo:office ?meralOffice .
  }
}
```

This query does the following:
- It uses `OPTIONAL` to ensure that if there is no data for either leader, it still returns results for the other.
- It matches each person with their respective office and administration.",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
417,20,train,Give me the child of the father of Frederick IX of Denmark and spouse of Princess Caroline-Mathilde of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Frederick IX of Denmark
  dbr:Frederick_IX_of_Denmark dbo:father dbr:Christian_X_of_Denmark .
  
  # Father of Frederick IX is Christian X of Denmark
  dbr:Christian_X_of_Denmark dbo:child ?child .

  # Princess Caroline-Mathilde's spouse
  OPTIONAL {
    ?spouse dbo:spouse dbr:Princess_Caroline_Matilda_of_Denmark .
    
    # Check if the child is also the spouse of Princess Caroline-Mathilde
    FILTER (?child = ?spouse)
  }
}
```

This query does the following:
- Identifies Christian X as the father of Frederick IX.
- Finds the children of Christian X, which includes Frederick IX.
- Checks if any of these children are also spouses of Princess Caroline-Mathilde.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
130,1,train,Give me the entity in Tennessee.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Tennessee> . },"```sparql
SELECT DISTINCT ?entity
WHERE {
  ?entity dbo:location ?location .
  FILTER (langMatches(lang(?location), ""en"") && contains(lcase(str(?location)), ""tennessee""))
}
```

This query selects distinct entities where the `dbo:location` property matches a string containing ""tennessee,"" ensuring it's in English to avoid false positives from other languages.",1,1,2,1,1,3,2,20,0,0,688,0,0.0,0
442,5,train,"Give me the resting place of the work of Roosevelt, Theodore.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/author> ""Roosevelt, Theodore""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Theodore Roosevelt""@en .
  ?person dbo:deathPlace ?deathPlace .
  OPTIONAL { ?deathPlace dbo:location ?burialPlace . }
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
236,14,train,"Give me the party member of the administration of the reference, that is an office holder and a politician, to James Madison.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyMember
WHERE {
  # James Madison as a politician and office holder
  dbr:James_Madison dbo:officeHolderOf ?administration.
  
  # Find party members of the administration who are also politicians and office holders
  ?partyMember dbo:memberOf ?administration .
  ?partyMember rdf:type dbo:Politician .
  ?partyMember dbo:officeHolderOf ?someOffice .

  FILTER(?partyMember != dbr:James_Madison)
}
```",3,5,4,3,1,3,2,20,0,0,597,0,0.0,0
965,30,train,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and spouse of Prince Louis of Battenberg and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  ?george a dbo:Person ;
          foaf:name ""Prince George of Battenberg""@en .
  
  ?louise a dbo:Person ;
          foaf:name ""Louise Mountbatten""@en .

  ?george dbo:child ?louise .
  
  ?parent dbo:spouse ?george ;
          dbo:spouse ?louis ;
          a dbo:Noble .

  ?louis foaf:name ""Prince Louis of Battenberg""@en .
}
```

### Explanation:

- **PREFIX**: Define prefixes for ontology and properties.
- **SELECT**: We are interested in the parent variable.
- **WHERE**:
  - Identify Prince George using his name.
  - Identify Louise Mountbatten as a child of Prince George.
  - Find the parent who is both spouse to Prince George and Prince Louis, ensuring they have a noble status.

This query should return the desired parent based on the relationships and attributes specified in your question.",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
508,0,train,Give me the birthplace of Ma Hongkui.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ma_Hongkui> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Ma Hongkui""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
507,32,train,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and spouse of the person born as Anne Voase Coates.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/director> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?director
WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Beryl_Reid ;
         rdf:type dbo:Work .

  ?spouse foaf:mbox ?email .
  ?anneVoaseCoates foaf:name ""Anne Voase Coates""@en ;
                   foaf:mbox ?email ;
                   foaf:spouse ?spouse .

  ?movie dbo:director ?director .

}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
124,10,train,Give me the military force of Battle of Atbara and commander in Mahdist War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . },"PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?commander WHERE {
  # Identify the Battle of Atbara
  ?battle a dbpedia-owl:Battle ;
          rdfs:label ""Battle of Atbara""@en .
  
  # Find military forces involved in the battle
  ?battle dbp:combatant ?force .

  # Retrieve commanders for each force
  OPTIONAL {
    ?force dbp:commander ?commander .
  }
}
```

### Explanation:
- **PREFIX:** Define prefixes for DBpedia ontology and properties.
- **SELECT Clause:** Specify variables `?force` (military forces) and `?commander` (their commanders).
- **WHERE Clause:**
  - Identify the Battle of Atbara using its label.
  - Retrieve combatants involved in the battle.
  - Use an OPTIONAL clause to find commanders for each force, as not all forces may have a listed commander.

This query will return pairs of military forces and their respective commanders involved in the Battle of Atbara during the Mahdist War.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
582,10,train,Give me the figure known as --10-19 and reference to Japan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?event ?description WHERE {
  ?event a dbo:Event .
  OPTIONAL { ?event dbo:date ?date . FILTER (CONTAINS(LCASE(str(?date)), ""october 19"")) }
  OPTIONAL { ?event dbo:location dbr:Japan . }
  OPTIONAL { ?event rdfs:label ?description FILTER (langMatches(lang(?description), ""en"")) }
}
ORDER BY ?event
LIMIT 10",2,2,3,1,2,3,3,71,0,20,1,0.0,0.0,0
965,3,train,Give me the parent of Louise Mountbatten.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?person dbo:birthName ""Louise Alice Elizabeth Mary Mountbatten""@en .
  ?person dbo:parent ?parent .
}
```

This query assumes that Louise Mountbatten is identified by her full birth name in English. Adjustments may be needed if the exact URI or identifier for Louise Mountbatten differs.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
445,28,train,"Give me the death place of Patrick Moore and entity in the residence, that is a country, of Anna Sharkey and entity in United Kingdom.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?residenceCountry ?ukEntity
WHERE {
  # Patrick Moore's death place
  dbr:Patrick_Moore dbo:deathPlace ?deathPlace .

  # Anna Sharkey's residence country
  dbr:Anna_Sharkey dbo:residence ?residence .
  FILTER (isLiteral(?residence) && strstarts(str(?residence), ""http://dbpedia.org/resource/Category:"")) .
  ?residence dbo:country ?residenceCountry .

  # Entity in the United Kingdom
  ?ukEntity rdf:type dbo:AdministrativeTerritory ;
            dbo:country dbr:United_Kingdom .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
554,10,train,"Give me the birth place of the band, that is an artist, of Rita Redshoes.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandBirthPlace
WHERE {
  # Rita Redshoes is an artist
  ?rita dbo:type dbo:MusicArtist .
  
  # Find the band associated with Rita Redshoes that is also an artist
  ?rita dbo:associatedBand ?band .
  ?band rdf:type dbo:MusicalGroup ;
        dbo:type dbo:MusicArtist .

  # Get the birthplace of this band
  ?band dbp:birthPlace ?bandBirthPlace .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
433,2,train,Give me the professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?musician ?profession
WHERE {
  ?musician a dbo:MusicArtist .
  ?musician dbo:occupation ?profession .
}
```

This query selects musicians and their associated professions by matching the `dbo:MusicArtist` class for musicians and using the `dbo:occupation` property to find their professional roles.",1,1,2,1,1,3,3,71,0,0,7563,0,0.0,0
365,12,train,"Give me the person born as Symon Vasylyovych Petliura and spouse of the native, that is a politician, of Poltava Governorate.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . ?result <http://dbpedia.org/property/birthName> ""Symon Vasylyovych Petliura""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName WHERE {
  # Find Symon Vasylyovych Petliura by birth name
  ?person dbo:birthName ""Symon Vasylyovych Petliura""@en .
  
  # Identify the spouse of this person
  ?person dbo:spouse ?spouse .

  # Ensure the spouse is a politician native to Poltava Governorate
  ?spouse dbo:nationality dbr:Poltava_Governorate ;
          rdf:type dbo:Politician .

  # Return the name of the spouse
  ?spouse rdfs:label ?spouseName .
  
  FILTER(LANG(?spouseName) = 'en')
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
433,29,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and professional in Musician and associated musical artist of Paul Chambers.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist
WHERE {
  # Scott LaFaro's associated musical artists who are also musicians and artists
  ?laFarosArtist dbo:associatedMusicalArtist dbr:Scott_LaFaro .
  ?laFarosArtist a dbo:Musician ;
                a dbo:Artist .

  # These artists must be associated with Paul Chambers as musicians
  ?chambersArtist dbo:associatedMusicalArtist dbr:Paul_Chambers .
  ?chambersArtist a dbo:Musician .

  # Find the intersection of these two sets
  FILTER (?laFarosArtist = ?chambersArtist)
  
  # Return the associated artist
  BIND(?laFarosArtist AS ?associatedArtist)
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
273,0,train,Give me the spouse of Edoardo Agnelli (industrialist).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Edoardo_Agnelli_(industrialist)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Industrialist ;
          foaf:name ""Edoardo Agnelli""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
645,29,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and leader of Ministry of the Army (Spain) and commander in Battle of Jarama.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?militaryForce
WHERE {
  # Identify Francisco Largo Caballero
  ?person rdfs:label ""Francisco Largo Caballero""@en .
  
  # He was the leader of Ministry of the Army (Spain)
  ?ministry dbo:leader ?person ;
            rdfs:label ""Ministry of the Army (Spain)""@en .

  # He commanded in the Battle of Jarama
  ?battle dbp:commanderInBattle ?person ;
          rdfs:label ""Battle of Jarama""@en .
  
  # The battle is a military conflict and societal event
  ?battle rdf:type dbo:MilitaryConflict ;
          dbo:socialEvent true .

  # Find the military force associated with these events
  ?militaryForce dbo:participatedIn ?battle ;
                 dbo:member ?ministry .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
129,18,train,Give me the associated musical artist of the person born as Tahj Malik Chandler and associated musical artist of EarthGang.,"SELECT ?result WHERE { <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artistLilUziVert ?artistEarthGang WHERE {
  # Find the DBpedia resource for Lil Uzi Vert
  { 
    ?lilUziVert a dbo:MusicalArtist ;
                foaf:name ""Lil Uzi Vert""@en .
    OPTIONAL { ?lilUziVert dbo:musicalArtist ?artistLilUziVert . }
  } UNION {
    # Find the DBpedia resource for EarthGang
    ?earthGang a dbo:Band ;
               dbp:name ""EarthGang"" .
    OPTIONAL { ?earthGang dbo:musicalArtist ?artistEarthGang . }
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
773,38,train,"Give me the parent of the child, that is a royalty, of Louis the German and parent of the successor of Charles the Bald.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Louis the German's child who is royalty
  ?child dbo:spouse|dbo:childOf dbr:Louis_the_German .
  FILTER EXISTS { ?child a dbo:Monarch . }

  # Charles the Bald's successor
  ?successor dbo:predecessor dbr:Charles_the_Bald .

  # The child is also a parent of the successor
  ?child dbo:parentOf ?successor .

  # We want to find this child's parent
  ?child dbo:parent ?parent .
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
353,4,train,Give me the entity in Russia and alma mater of Daniil Yegorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniil_Yegorov> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?entityInRussia ?almaMater
WHERE {
  ?person foaf:name ""Daniil Yegorov"" .
  
  # Entity in Russia (could be birthPlace or residence)
  OPTIONAL { 
    ?person dbo:birthPlace ?place .
    FILTER(STRSTARTS(LCASE(?place), ""russia"")) .
    BIND(?place AS ?entityInRussia) .
  }
  OPTIONAL {
    ?person dbo:residence ?place .
    FILTER(STRSTARTS(LCASE(?place), ""russia"")) .
    BIND(?place AS ?entityInRussia) .
  }

  # Alma mater
  ?person dbo:almaMater ?almaMater .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
582,19,train,Give me the player in Kazuaki Nagasawa and reference to the residence of Hirotaka Sugawara.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?player ?residence WHERE {
  ?team dbo:coach dbr:Kazuaki_Nagasawa .
  ?player dbo:playsFor ?team .
  dbr:Hirotaka_Sugawara dbo:residence ?residence .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
122,4,train,Give me the band of Gift of Gab (rapper) and band member of Lyrics Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Lyrics_Born> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?giftOfGabBand ?lyricsBornMember
WHERE {
  # Find the band associated with Gift of Gab
  ?giftOfGab a dbo:MusicalArtist ;
             foaf:name ""Gift of Gab"" .
  OPTIONAL { 
    ?giftOfGab dbp:band ?giftOfGabBand .
  }

  # Find a band member of Lyrics Born
  ?lyricsBorn a dbo:MusicalArtist ;
              foaf:name ""Lyrics Born"" .
  OPTIONAL {
    ?lyricsBornMember dbo:member ?lyricsBorn .
  }
}
```",2,2,3,1,2,2,2,9,0,0,2,0,0.0,0
326,1,train,Give me the professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?composer ?occupation
WHERE {
  ?composer rdfs:label ""Composer""@en .
  ?composer dbo:occupation ?occupation .
}
```",1,1,2,1,1,2,2,9,0,0,1916,0,0.0,0
892,25,train,"Give me the landmark at elevation of 58 and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?landmark ?region
WHERE {
  ?landmark a dbo:Landmark ;
            dbo:elevationAboveSeaLevel ?elevation ;
            dbo:country dbr:Italy .
  
  ?region a dbo:Region, dbo:Settlement, dbo:AdministrativeRegion ;
          dbo:country dbr:Italy ;
          dbp:governingParty dbr:Democratic_Party_(Italy) .

  FILTER (?elevation = 58)

  OPTIONAL {
    ?landmark dbo:locatedIn ?region .
  }
}
```",3,7,4,2,2,3,3,71,0,0,2,0,0.0,0
645,35,train,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?leader
WHERE {
  # Find the office that is both a government agency and an organization led by Camilo Menéndez Tolosa
  ?office dbo:type/dbo:GovernmentAgency ?govType .
  ?office dbo:type/dbp:Organization ?orgType .
  ?office dbo:leader dbp:name ""Camilo Menéndez Tolosa""@en .

  # Find the force commanded by Carlos Asensio Cabanillas
  ?force dbo:commander dbp:name ""Carlos Asensio Cabanillas""@en .

  # Ensure that the leader of the office is also a commander in the force
  ?office dbo:leader ?leader .
  ?force dbo:commander ?leader .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
926,2,train,Give me the child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:spouse ?spouse .
  FILTER (str(?person) = ""http://dbpedia.org/resource/Ahmed_III"")
  
  OPTIONAL { ?person dbo:child ?child . }
}
```",1,1,2,1,1,3,3,71,11,0,0,1.0,1.0,1.0
573,1,train,"Give me the person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Quincy,_Massachusetts .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,3,71,0,0,40,0,0.0,0
839,19,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of Peter Schorowsky.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v0 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band
WHERE {
  VALUES (?personLabel) { (""Kevin Richard Russell"" ""Peter Schorowsky"") }
  
  ?person rdfs:label ?personLabel .
  FILTER (lang(?personLabel) = 'en')
  
  OPTIONAL {
    ?person dbo:musicalArtist true .
  }

  OPTIONAL {
    ?person dbo:band ?band .
  }
}
ORDER BY ?person
```

### Explanation

- **PREFIX**: Define prefixes for ontology and property namespaces.
- **SELECT**: Choose variables `?person` and `?band`.
- **VALUES**: Specify the labels of the persons we are interested in.
- **FILTER**: Ensure that the label is in English.
- **OPTIONAL**: Check if they are musical artists and retrieve their bands.

This query will return the DBpedia resources for Kevin Richard Russell and Peter Schorowsky, along with any associated bands, provided they are identified as musical artists.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
573,15,train,"Give me the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?realName ?administrationRegion
WHERE {
  # Find Charlie Baker's real name
  ?charlieBaker a dbo:AustralianFootballer ;
                rdfs:label ""Charlie Baker""@en .
  
  # Link to his real name
  ?charlieBaker foaf:name ?realName .

  # Find the administration/region associated with his real name
  OPTIONAL {
    ?person dbo:birthPlace ?place .
    ?place dbo:administrativeRegion ?administrationRegion .
    FILTER(?person = ?charlieBaker)
  }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
933,3,train,"Who is the band, that is an artist and a musical artist, of The Ramong Sound?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  # The Ramones is the main entity we are interested in
  dbr:The_Ramones a dbo:Band ;
                  dbo:member ?member .

  # Ensure that the member is both an artist and a musical artist
  ?member a dbo:Artist, dbo:MusicalArtist .

  # Return the band associated with The Ramones
  ?band a dbo:Band ;
        dbo:member ?member .
}
```",1,3,2,1,1,3,3,71,0,0,3,0,0.0,0
527,1,train,Give me the author of The Boy Who Kicked Pigs.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Boy_Who_Kicked_Pigs> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  ?book dbr:subject/dbc:Category_Books_about_pigs .
  ?book rdfs:label ""The Boy Who Kicked Pigs""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
166,4,train,Give me the reference to Madrid.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference
WHERE {
  dbr:Madrid dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,3,2,20,0,868,6,0.0,0.0,0
465,20,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorName WHERE {
  # Ercole II d'Este, Duke of Ferrara
  dbr:Ercole_II_d%27Este ""successor"" dbo:successor ?successor .
  
  # Successor's name
  ?successor rdfs:label ?successorName .

  # Ferdinand I, Holy Roman Emperor and his child who is royalty
  dbr:Ferdinand_I,_Holy_Roman_Emperor dbo:child ?child .
  
  # The spouse of the child must be a royalty
  ?child dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Monarch .

  # Ensure the successor is also the spouse of Ferdinand I's royal child
  FILTER (?successor = ?spouse)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
102,12,train,"Give me the manager of Sheffield United W.F.C. and native of the residence, that is English and a settlement, of Peter Finbow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Sheffield_United_W.F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?residence WHERE {
  # Find the manager of Sheffield United W.F.C.
  dbr:Sheffield_United_Women_Football_Club dbo:manager ?manager .

  # Find Peter Finbow's residence
  dbr:Peter_Finbow dbo:nativePlace ?residence .

  # Ensure the residence is an English settlement
  ?residence a dbo:Settlement ;
             dbp:country ""England""@en .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
326,5,train,"Give me the person decedent at the region coded, that is a settlement, as 442/760.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/areaCode> ""442/760"" . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  ?region dbo:wikiPageID ""442760"" .
  ?region a dbo:Settlement .
  ?decedent dbo:placeOfBirth ?region .
}
```

This query assumes:
- The region is identified by a `wikiPageID` of ""442760.""
- The decedent's place of birth is linked to this region.
- The region is classified as a `Settlement`.",2,3,3,2,1,2,2,9,0,0,699,0,0.0,0
456,31,train,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouseName
WHERE {
  # Find a work that Ross Newton acted in and is also a television show
  ?work dbo:starring dbr:Ross_Newton ;
        rdf:type dbo:TelevisionShow .

  # Find actors of this work
  ?actor dbo:starringIn ?work .
  
  # Get the spouse of these actors
  ?actor dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseName .
  
  FILTER(LANG(?spouseName) = 'en')
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
465,33,train,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Identify Elizabeth of Austria
  dbr:Elizabeth_of_Austria_(1526–1545) dbo:parent ?parent .

  # Find the successor of Ercole II d'Este
  dbr:Ercole_II_d%27Este,_Duke_of_Ferrara dbo:succeededBy ?successor .

  # Ensure the parent is also the successor
  FILTER (?parent = ?successor)

  # Identify a child who is royalty
  ?child dbo:parent ?parent ;
         a dbo:RoyalFamilyMember .

  # Find the spouse of that child
  ?child dbo:spouse ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
93,3,train,"Give me the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarter WHERE {
  # Identify the resource for Lake Clark National Park and Preserve
  VALUES ?park { dbr:Lake_Clark_National_Park_and_Preserve }

  # Find the headquarter of the park
  ?park dbo:headquarters ?headquarter .

  # Ensure that the headquarter is both a region and a settlement
  ?headquarter rdf:type dbo:Region .
  ?headquarter rdf:type dbo:Settlement .
}
```",1,3,2,1,1,3,2,20,0,0,5,0,0.0,0
102,5,train,"Give me the residence, that is English and a settlement, of Peter Finbow.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  # Find Peter Finbow and his residence
  ?person a dbo:Person ;
          foaf:name ""Peter Finbow""@en .
  
  ?person dbo:residence ?residence .

  # Ensure the residence is in England and is a settlement
  ?residence rdf:type dbo:Settlement ;
             dbo:country dbr:England .
}
```

This query does the following:
- Selects the `?residence` variable.
- Matches Peter Finbow as a person with a specific name.
- Retrieves his residence using the `dbo:residence` property.
- Filters results to ensure the residence is both in England and classified as a settlement.",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
527,8,train,"Give me the author of the work, that is a work and a book, of Tom Baker.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?author rdfs:label ""Tom Baker""@en .
  FILTER NOT EXISTS { ?author owl:sameAs* dbr:Tom_Baker_(actor) } # To avoid confusion with the actor Tom Baker
  ?work dbo:author ?author .
  ?work rdf:type dbo:Book .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
433,10,train,Give me the associated musical artist of Paul Chambers and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Paul Chambers as a subject
  dbr:Paul_Chambers dbo:associatedMusicalArtist ?artist .
  
  # Ensure the associated artist is professional in Musician
  ?artist rdf:type dbo:Musician .
}
```

This query does the following:
- Uses `SELECT DISTINCT` to ensure unique results.
- Identifies Paul Chambers using his DBpedia resource identifier (`dbr:Paul_Chambers`).
- Looks for entities that are associated musical artists of Paul Chambers using the predicate `dbo:associatedMusicalArtist`.
- Filters these artists to include only those who have a type of `dbo:Musician`.",2,2,3,1,2,3,3,71,0,0,15,0,0.0,0
273,12,train,Give me the parent of the alumnus of University of Turin and spouse of Edoardo Agnelli (industrialist).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Edoardo_Agnelli_(industrialist)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  ?person dbo:almaMater dbr:University_of_Turin .
  ?person dbo:spouse dbr:Edoardo_Agnelli_(industrialist) .

  OPTIONAL { ?person dbo:childOf ?parent . }
}
```

### Explanation:

- **PREFIX:** Define prefixes for DBpedia ontology and properties.
- **SELECT DISTINCT ?parent:** Retrieve distinct parents of the identified person.
- **WHERE Clause:**
  - `?person dbo:almaMater dbr:University_of_Turin`: Matches individuals who are alumni of the University of Turin.
  - `?person dbo:spouse dbr:Edoardo_Agnelli_(industrialist)`: Ensures the person is also the spouse of Edoardo Agnelli.
  - `OPTIONAL { ?person dbo:childOf ?parent . }`: Retrieves the parent(s) of this individual.

This query should effectively find the parent(s) of the alumnus of University of Turin who is also the spouse of Edoardo Agnelli.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
715,6,train,Give me the force of Francisco Largo Caballero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?position ?party WHERE {
  VALUES ?person { dbr:Franco_Largo_Caballero }
  
  OPTIONAL {
    ?person dbo:positionHeld ?position .
    FILTER (lang(?position) = 'en')
  }

  OPTIONAL {
    ?person dbo:partyAffiliation ?party .
    FILTER (lang(?party) = 'en')
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
926,37,train,Give me the successor of the child of the spouse of Şermi Kadın and child of Ahmed III.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor
WHERE {
  ?spouse dbo:spouseOf dbr:Şermi_Kadın .
  ?child dbo:parent ?spouse ;
         dbo:parent dbr:Aḥmed_III .
  ?succession dbp:predecessor ?child ;
              dbp:successor ?successor .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
826,3,train,Give me the father of Anna Magdalena Appel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  ?person dbo:mother dbr:Anna_Magdalena_Bach .
  ?person dbo:father ?father .
}
```

This query assumes that Anna Magdalena Bach's DBpedia resource is `dbr:Anna_Magdalena_Bach` and uses the `dbo:mother` property to identify her as a child, then finds her father using the `dbo:father` property.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
606,3,train,"Give me the nickname of DeKalb, Illinois.","SELECT ?result WHERE { <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname
WHERE {
  dbr:DeKalb_(Illinois) dbo:nickname ?nickname .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
47,4,train,Give me the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?role ?startDate ?endDate WHERE {
  VALUES ?person { dbr:Jagdeep_Dhankhar }
  
  ?person dbo:positionHeld ?office .
  ?office dbo:positionTitle ?role .
  OPTIONAL { ?office dbo:startDate ?startDate . }
  OPTIONAL { ?office dbo:endDate ?endDate . }
}
```",1,1,2,1,1,3,3,71,0,0,49,0,0.0,0
791,6,train,Give me the child of Emperor Takakura.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
SELECT ?child WHERE {
  ?emperor dbo:spouse ?person .
  FILTER(?emperor = dbpedia:Emperor_Takakura)
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
582,24,train,"Give me the figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherName WHERE {
  ?masamiNagasawa a dbo:Athlete ;
                  foaf:name ""Masami Nagasawa""@en .
  
  ?masamiNagasawa dbo:parent ?father .

  ?father foaf:name ?fatherName ;
          rdf:type dbo:SoccerManager, dbo:SportsManager .
}
```

This query assumes:
- Masami Nagasawa is linked to her father via a property like `dbo:parent`.
- The father's roles are identified using `rdf:type` with both `dbo:SoccerManager` and `dbo:SportsManager`.",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
98,7,train,Give me the region of Philippine Standard Time and entity in Philippines.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region ?entity
WHERE {
  # Find regions associated with Philippine Standard Time
  ?region dbo:timeZone dbr:Philippine_Standard_Time .
  
  # Find entities in the Philippines
  ?entity dbo:country dbr:Philippines .

  # Optional: Ensure distinct results and possibly filter for specific types of entities or regions if needed
}
```",2,2,3,1,2,2,3,28,1743,3590,0,0.32683292705794115,1.0,0.49265121537591866
465,13,train,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouseName
WHERE {
    # Ferdinand I, Holy Roman Emperor
    dbr:Ferdinand_I,_Holy_Roman_Emperor dbo:child ?child .
    
    # The child must be royalty
    ?child a dbo:Monarch .

    # Get the spouse of the child
    ?child dbo:spouse ?spouse .
    
    # Return the name of the spouse
    ?spouse rdfs:label ?spouseName .
    
    FILTER (lang(?spouseName) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,7,0,0.0,0
839,29,train,Give me the band of the member of Böhse Onkelz and band of Matthias Röhr and band of Kevin Russell (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandName
WHERE {
  # Find bands associated with Matthias Röhr
  { 
    ?person rdfs:label ""Matthias Röhr""@en .
    ?person dbo:memberOf ?band .
    ?band rdfs:label ?bandName .
  }
  
  UNION
  
  # Find bands associated with Kevin Russell
  {
    ?person rdfs:label ""Kevin Russell (musician)""@en .
    ?person dbo:memberOf ?band .
    ?band rdfs:label ?bandName .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
987,39,train,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/timeZone> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country
WHERE {
  ?sportsEvent a dbo:Sport ;
               dbp:location dbr:Canicosa_de_la_Sierra .
  
  ?timeZone dbo:sportsEvent ?sportsEvent ;
            dbo:region ?region .

  ?region dbo:country ?country .

  ?moamer dbo:birthPlace ?country .
  
  FILTER (?moamer = dbr:Moamer_Kasumović)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
102,2,train,"Give me the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?player WHERE {
  ?team rdf:type dbo:NationalSoccerTeam .
  ?team rdfs:label ""England women's national football team""@en .
  
  ?member dbo:memberOf ?team ;
          rdf:type dbo:SoccerPlayer .

  BIND(?member AS ?player)
}
```",1,2,2,1,1,3,2,20,0,0,147,0,0.0,0
865,26,train,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  ?syeda a dbo:Person ;
         foaf:name ""Syeda Shahar Banu""@en .
  
  ?syeda dbo:spouse ?spouse .

  ?child dbo:parent ?spouse ;
         a dbo:Politician .

  ?child dbo:parent ?father .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
41,18,train,"Give me the party of the work, that is an office holder, of yes and party of Declan Costello.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""yes""@en . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeHolderParty ?declanCostelloParty
WHERE {
  # Find office holders and their parties
  ?officeHolder a dbo:OfficeHolder ;
               dbo:party ?officeHolderParty .

  # Find Declan Costello's party
  dbr:Declan_Costello dbo:party ?declanCostelloParty .
}
```",3,4,4,2,2,2,3,28,1,5505,0,0.00018162005085361425,1.0,0.00036317414200108956
978,7,train,"Give me the band member of the professional, that is a musical artist and an artist, in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember
WHERE {
  ?professional a dbo:MusicalArtist ;
                a dbo:Artist .
  
  ?bandMembership dbo:member ?bandMember .
  ?bandMembership dbo:musicalGroup ?professional .
}
```

This query assumes:
- `dbo:MusicalArtist` and `dbo:Artist` are the classes for musical artists and artists, respectively.
- `dbo:member` is the property linking a band member to their group.
- `dbo:musicalGroup` links the professional to their band.

5. **Optimization and Validation:**
   - Ensure that the query efficiently retrieves only relevant data by using appropriate class and property URIs.
   - Validate against DBpedia to ensure these classes and properties are correctly used.",2,4,3,2,1,3,2,20,0,0,9007,0,0.0,0
18,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalName ?organization WHERE {
  ?professional dbo:worksFor ?organization .
  ?professional rdfs:label ?professionalName .
  FILTER (lang(?professionalName) = 'en')
}
```

This query assumes you are looking for professionals and the organizations they work for. You can modify it by adding specific filters or additional patterns based on more detailed requirements.",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
453,5,train,"Give me the religion of the birth place, that is a country, of William Denning.",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Denning> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/religion> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?religion
WHERE {
    ?denning a dbo:Person ;
             foaf:name ""William Denning""@en .
    
    ?denning dbo:birthPlace ?birthPlace .

    ?birthPlace rdf:type dbo:Country .

    ?birthPlace dbo:countryReligion ?religion .
}
```

### Explanation

- **PREFIX**: Define prefixes for common namespaces.
- **SELECT ?religion**: We want to retrieve the religion associated with the birth place.
- **WHERE**:
  - `?denning a dbo:Person ; foaf:name ""William Denning""@en .`: Identify William Denning as a person.
  - `?denning dbo:birthPlace ?birthPlace .`: Get his birth place.
  - `?birthPlace rdf:type dbo:Country .`: Ensure the birth place is a country.
  - `?birthPlace dbo:countryReligion ?religion .`: Retrieve the religion of that country.",2,3,3,2,1,2,2,9,0,0,1,0,0.0,0
573,38,train,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentName WHERE {
  # Find the author of ""Exchequer Standards""
  ?author dbo:work dbr:Exchequer_Standards .
  
  # Identify the parent who is a politician and office holder
  ?author dbo:parent ?parent .
  ?parent rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Ensure the parent died at their residence, which is a settlement
  ?parent dbo:deathPlace ?residence .
  ?residence rdf:type dbo:Settlement .

  # Link the residence to William J. Phelan
  ?residence dbp:resident dbr:William_J._Phelan .

  # Return the name of the parent
  ?parent rdfs:label ?parentName .
  
  FILTER(LANG(?parentName) = 'en')
}
ORDER BY ?parentName",4,7,5,2,2,3,3,71,0,0,2,0,0.0,0
459,9,train,Give me the person born as John Kevin Stitt and governor of Dana Murphy.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person
WHERE {
  ?person dbo:birthName ""John Kevin Stitt"" .
  ?person dbo:governorOf dbr:Dana_Murphy .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
93,5,train,Who is the governor of Bob Bartlett?,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor ?governorName WHERE {
  # Bob Bartlett's tenure as a Senator
  dbr:Bob_Bartlett dbo:officeHolderOf dbr:United_States_Senate.
  
  # Find the period he served
  OPTIONAL { 
    dbr:Bob_Bartlett dbo:termStart ?startYear .
    dbr:Bob_Bartlett dbo:termEnd ?endYear .
  }
  
  # Governors of Alaska during his tenure
  ?governor a dbo:Governor ;
            dbo:stateOrTerritory dbr:Alaska ;
            dbo:officeTermStart ?govStartYear ;
            dbo:officeTermEnd ?govEndYear .

  FILTER (
    (?startYear <= ?govEndYear && ?endYear >= ?govStartYear) # Overlapping terms
  )

  # Get governor names
  ?governor rdfs:label ?governorName .
  
  FILTER (LANG(?governorName) = 'en')
}
ORDER BY ?governorName
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
329,4,train,"Give me the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?countryName
WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Western_European_Time ;
           rdfs:label ?countryName .
  FILTER (lang(?countryName) = 'en')
}
```",1,2,2,1,1,2,3,28,0,8,6,0.0,0.0,0
216,15,train,Give me the office of the mayor of Ros Bates and administration of .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> """"@en . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?administration
WHERE {
  # Find Ros Bates' office as mayor
  dbr:Ros_Bates dbo:positionHeld ?office .
  
  # Filter to ensure the office is related to being a mayor
  FILTER(CONTAINS(LCASE(STR(?office)), ""mayor""))

  OPTIONAL {
    # Try to find any administration she might be part of
    ?office dbo:partOfOrganization ?administration .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
47,26,train,"Give me the office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?award ?office
WHERE {
  ?award dbo:recipient dbr:Mantu_Ghosh .
  ?award dbp:office ?office .
}
```

This query does the following:
- Selects distinct awards (`?award`) and their associated offices (`?office`).
- Matches Mantu Ghosh as a recipient of an award.
- Retrieves the office related to each award.",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
715,21,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Abd el-Krim as a commander in a military conflict
  ?conflict dbo:militaryConflict [dbo:commander ?commander] .
  
  # Abd el-Krim's involvement in the conflict
  ?conflict dbo:participant dbr:Abd_el-Krim .

  # Leader of Ministry of the Air (Spain)
  ?ministry dbo:leader ?commander ;
            a dbo:GovernmentMinistry ;
            rdfs:label ""Ministry of the Air""@en .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
715,20,train,Give me the commander in the force of Francisco Largo Caballero and commander in Rif War.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commanderInLargoCaballeroForce ?commanderInRifWar
WHERE {
  # Commander in the force of Francisco Largo Caballero
  ?force dbo:leader ?commanderInLargoCaballeroForce .
  ?force dbp:commandedBy <http://dbpedia.org/resource/Francisco_Largo_Caballero> .

  # Commander in Rif War
  ?rifWar dbo:commander ?commanderInRifWar .
  ?rifWar rdf:type dbo:MilitaryConflict .
  FILTER(CONTAINS(LCASE(?rifWar), ""rif war""))
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
459,4,train,"Who is the administration, that is a politician, of Brad Henry?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration
WHERE {
  # Find Brad Henry in DBpedia
  dbr:Brad_Henry a dbo:Politician ;
                 dbo:officeHolder ?administration .

  # Ensure the administration is also a politician
  ?administration a dbo:Politician .
}
```",1,2,2,1,1,2,3,28,0,0,30,0,0.0,0
582,17,train,"Give me the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?result . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?nickname WHERE {
  ?person dbo:manager ?organization .
  ?organization a dbo:SportsTeam .
  ?organization rdfs:label ""Hajime Moriyasu""@en .
  
  OPTIONAL { 
    ?organization dbo:nickname ?nickname .
  }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
456,25,train,"Give me the band of the band, that is a musical artist, of Dean Brody and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band
WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Dean Brody""@en .
  
  OPTIONAL {
    ?person dbo:musicalArtist ?band .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
281,10,train,"Give me the awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?awardLabel WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Lawrence Moore Cosgrave""@en .
  
  ?person dbo:receivedAward ?award .

  ?award rdfs:label ?awardLabel .
  
  FILTER regex(?awardLabel, ""military conflict"", ""i"")
}
```",2,3,3,2,1,2,3,28,0,0,656,0,0.0,0
874,13,train,"Give me the band of the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  # Horace Andy is an artist and has works
  dbr:Horace_Andy a dbo:Artist .
  
  # Works associated with Horace Andy
  ?work dbo:artist dbr:Horace_Andy ;
        dbo:writer ?writer .

  # Writer of the work should be both an artist and a musical artist
  ?writer a dbo:Artist, dbo:MusicalArtist .

  # Retrieve the band of the writer
  ?writer dbo:band ?band .
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
41,16,train,"Give me the party of the work, that is an office holder, of yes and party of Mark Durkan.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ""yes""@en . ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?workParty ?markDurkanParty
WHERE {
  # Find works associated with Mark Durkan and another person named ""Yes""
  ?work dbo:officeHolder dbr:Mark_Durkan .
  ?work dbo:officeHolder ?yesPerson .

  # Ensure the other office holder is a person named ""Yes""
  ?yesPerson rdfs:label ?yesLabel .
  FILTER (CONTAINS(LCASE(?yesLabel), ""yes""))

  # Get the political party of the work
  ?work dbo:party ?workParty .

  # Get Mark Durkan's political party
  dbr:Mark_Durkan dbo:party ?markDurkanParty .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
508,14,train,"Give me the birthplace of the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  # Hu Yukun resource identification
  dbr:Hu_Yukun a dbo:MilitaryPerson ;
                dbo:birthPlace ?birthPlace .

  # Linking to the military conflict that is also a societal event
  OPTIONAL { 
    ?conflict dbo:militaryConflict true .
    ?conflict dbo:societalEvent true .
    dbr:Hu_Yukun dbo:commanderOf ?conflict .
  }
}
```",3,6,4,3,1,3,2,20,0,0,3,0,0.0,0
47,10,train,Give me the office of Suvendu Adhikari and office of Ajoy Mukherjee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?officeName
WHERE {
  VALUES ?person { 
    dbr:Suvendu_Adhikari 
    dbr:Ajoy_Mukherjee 
  }
  
  ?person dbo:positionHeld ?office .
  ?office rdfs:label ?officeName .
  FILTER (lang(?officeName) = 'en')
}
ORDER BY ?person
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
93,12,train,Give me the death place of the governor of Bob Bartlett and capital of Alaska.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?v0 . <http://dbpedia.org/resource/Alaska> <http://dbpedia.org/ontology/capital> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?capitalCity
WHERE {
  # Find the death place of Bob Bartlett
  dbr:Bob_Bartlett dbo:placeOfBirth ?birthPlace .
  OPTIONAL { dbr:Bob_Bartlett dbo:deathPlace ?deathPlace . }
  
  # Find the capital city of Alaska
  dbr:Alaska dbo:capital ?capitalCity .
}
```

This query does the following:
- Retrieves the death place of Bob Bartlett using `dbo:deathPlace`.
- Retrieves the capital city of Alaska using `dbo:capital`.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
955,10,train,"Who is the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?memberName
WHERE {
  # Identify the band ""Street Dogs""
  dbr:Street_Dogs a dbo:Band ;
                  dbo:bandMember ?member .

  # Ensure the member is both a musical artist and an artist
  ?member a dbo:MusicalArtist, dbo:Artist .
  
  # Retrieve the name of the member
  ?member foaf:name ?memberName .
}
```",2,7,3,2,1,3,2,20,0,0,2,0,0.0,0
465,5,train,Give me the parent of Elizabeth of Austria (1526–1545).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentLabel WHERE {
  ?person dbo:birthName ""Elizabeth of Austria""@en .
  ?person dbo:birthYear ?birthYear .
  ?person dbo:deathYear ?deathYear .
  FILTER (?birthYear = 1526 && ?deathYear = 1545) .

  OPTIONAL { ?person dbo:mother ?parent . }
  OPTIONAL { ?person dbo:father ?parent . }

  ?parent rdfs:label ?parentLabel .
  FILTER (lang(?parentLabel) = ""en"")
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
329,2,train,Give me the entity in Northern Ireland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
SELECT DISTINCT ?entity
WHERE {
  ?entity dbo:location ?location .
  ?location rdfs:label ""Northern Ireland""@en .
}
```

This query selects distinct entities (`?entity`) that have a `dbo:location` property pointing to an entity whose label is ""Northern Ireland"" in English.",1,1,2,1,1,2,3,28,0,0,846,0,0.0,0
933,9,train,Give me the band of Mike Elliott (saxophonist) and reference to Alan Warner.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?referenceToAlanWarner
WHERE {
  # Find Mike Elliott's band
  ?mikeElliott a dbo:Saxophonist ;
               foaf:name ""Mike Elliott"" .
  
  ?mikeElliott dbo:memberOf ?band .

  OPTIONAL {
    # Check for any reference to Alan Warner
    ?band dbo:reference dbr:Alan_Warner .
    BIND(""Reference found"" AS ?referenceToAlanWarner)
  }

  FILTER NOT EXISTS { 
    ?band dbo:reference dbr:Alan_Warner .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
917,4,train,"Who is the child, that is a royalty, of Kamehameha IV?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childName
WHERE {
  ?parent dbo:name ""Kamehameha IV""@en .
  ?parent dbo:child ?child .
  ?child rdf:type dbo:RoyalFamilyMember .
  ?child rdfs:label ?childName .
  FILTER(LANG(?childName) = 'en')
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
933,36,train,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of Mike Elliott (saxophonist).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  # Identify the person born on 1947-04-21 who is a musical artist
  ?person dbo:birthDate ""1947-04-21""^^xsd:date ;
          rdf:type dbo:MusicalArtist .

  # Find Mike Elliott's band
  dbr:Mike_Elliott (dbo:saxophonist|dbo:musicalArtist) ;
                   dbo:band ?mikeBand .

  # Ensure the band is a group, band, and organization
  ?band rdf:type dbo:Band , dbo:MusicalGroup , dbo:Organization .

  # The person's band must be the same as Mike Elliott's band
  ?person dbo:band ?band ;
          rdfs:label ?personLabel .
  
  FILTER (CONTAINS(LCASE(?personLabel), ""mike elliott"") = false)

  # Ensure the band is common to both
  VALUES ?commonBand { ?band ?mikeBand }
}
```",4,8,5,3,2,3,3,71,0,0,3,0,0.0,0
715,36,train,"Give me the commander in Rif War and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderInWar ?leaderOfOffice WHERE {
  # Find Carlos Franco Iribarnegaray
  VALUES ?carlos { 
    dbr:Claudio_Franco_Iribarnegaray 
    dbr:Carlos_Franco_Iribarnegaray 
  }
  
  # Check if he was a commander in the Rif War
  ?carlos dbo:commanderInWar ?rifWar .
  FILTER EXISTS { ?rifWar rdfs:label ""Rif War""@en . }

  # Find offices he led that are both government agencies and organizations
  OPTIONAL {
    ?carlos dbo:leaderOf ?office .
    ?office rdf:type dbo:GovernmentAgency ;
            rdf:type dbo:Organization .
  }
  
  BIND(?rifWar AS ?commanderInWar)
  BIND(?office AS ?leaderOfOffice)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
865,20,train,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and native of British Raj.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Abu Ahmad Abdul Hafiz is the father of a child who is a politician
  ?child dbo:father dbr:Abu_Ahmad_Abdul_Hafiz .
  
  # The child is a politician
  ?child dbo:occupation dbr:Politician .

  # The child is native to British Raj
  ?child dbo:nationality dbr:British_Raj .

  # Retrieve the father of this child
  ?father dbo:child ?child .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
459,7,train,Give me the person born as John Kevin Stitt and governor of Oklahoma.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?fullName ?governorOf
WHERE {
  ?person foaf:name ""John Kevin Stitt""@en .
  ?person dbo:birthName ""John Kevin Stitt""@en .
  ?person dbo:governmentRole ?role .
  ?role dbo:officeHolder ?holder .
  ?holder foaf:name ?fullName .
  ?role dbo:office ?office .
  ?office rdfs:label ?governorOf .
  FILTER (lang(?governorOf) = ""en"")
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
281,18,train,Give me the awardee of the award of Alfred Warden and awardee of Medal bar.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeAlfredWarden ?awardeeMedalBar
WHERE {
  # Find awardees of the Alfred Warden award
  ?awardAlfredWarden a dbo:Award ;
                    rdfs:label ""Alfred Warden""@en .
  
  ?recipientAlfredWarden dbo:recipient ?awardAlfredWarden ;
                         foaf:name ?awardeeAlfredWarden .

  # Find awardees of the Medal bar
  ?awardMedalBar a dbo:Award ;
                 rdfs:label ""Medal bar""@en .
  
  ?recipientMedalBar dbo:recipient ?awardMedalBar ;
                     foaf:name ?awardeeMedalBar .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
917,13,train,Give me the child of the father of Keʻelikōlani.,SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?child
WHERE {
  ?keelikolani dbo:spouse ?person .
  FILTER (str(?person) = ""Keʻelikōlani"")
  
  ?person dbo:father ?father .
  
  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
579,9,train,"Give me the residence, that is English and a settlement, of the resident of Scotland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence
WHERE {
  ?person dbo:country dbr:Scotland .
  ?person dbo:residenceLocation ?residence .
  ?residence a dbo:Settlement ;
             dbo:country dbr:England .
}
```

This query does the following:
- Selects `?residence` as the variable of interest.
- Matches a person (`?person`) who resides in Scotland.
- Ensures that this person's residence (`?residence`) is classified as a settlement and located in England.",2,4,3,2,1,3,2,20,0,0,8,0,0.0,0
865,31,train,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of AK Abdul Momen.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry
WHERE {
  # Identify AK Abdul Momen
  dbr:AK_Abdul_Momen dbo:father ?father .

  # Find the decedent place of his father
  ?father dbo:placeOfDeath dbr:Patna .

  # Get the residence associated with Patna and its native country
  OPTIONAL {
    dbr:Patna dbo:locatedIn ?residence .
    ?residence dbo:nativeCountry ?nativeCountry .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
456,12,train,Give me the band of Alan Doyle and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?band ?profession
WHERE {
  ?person rdfs:label ""Alan Doyle""@en .
  FILTER NOT EXISTS { ?person owl:sameAs ?other . } # Ensure we get the specific Alan Doyle

  OPTIONAL {
    ?person dbo:bandMember ?band .
  }

  OPTIONAL {
    ?person rdf:type ?professionType .
    ?professionType rdfs:label ?profession .
    FILTER(LANG(?profession) = ""en"")
  }
}
```

### Explanation:

- **PREFIX**: Define prefixes for common namespaces.
- **SELECT**: Choose variables `?band` and `?profession`.
- **WHERE**:
  - Identify Alan Doyle using `rdfs:label`.
  - Use a filter to ensure we are referring to the correct Alan Doyle by excluding any owl:sameAs links that might point to other entities with similar names.
  - OPTIONAL clauses for band membership (`dbo:bandMember`) and profession type (`rdf:type`), ensuring results include labels in English.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
926,1,train,Give me the successor of Mustafa III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  dbr:Mustafa_III dbo:successor ?successor .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
124,27,train,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?militaryForce
WHERE {
  ?person dbo:birthday ""1850-06-24""^^xsd:date .
  
  # Find societal events related to the person
  OPTIONAL { 
    ?event dbo:agent ?person ;
           a dbo:SocietalEvent .
  }
  
  # Find military conflicts related to the person
  OPTIONAL {
    ?conflict dbo:agent ?person ;
              a dbo:MilitaryConflict .
  }

  # Extract military force involved in these events and conflicts
  ?force dbo:participatedIn ?event ;
         dbo:participatedIn ?conflict .

  BIND(?force AS ?militaryForce)
}
```

5. **Optimize Query Logic:** The query uses `OPTIONAL` to handle cases where the person might not be directly linked to both a societal event and a military conflict simultaneously.

6. **Validate Completeness and Precision:** Ensure that all components of the question are addressed, including the birth date filter and the relationships between entities.",3,5,4,3,1,3,3,71,0,0,1190,0,0.0,0
47,20,train,Give me the office of the awardee of Banga Bhushan and office of Suvendu Adhikari.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?office
WHERE {
  # Find the awardee of Banga Bhushan award and their office
  {
    SELECT ?awardee WHERE {
      ?award dbo:recipient ?awardee .
      ?award rdfs:label ""Banga Bhushan""@en .
    }
    OPTIONAL { ?awardee dbo:office ?office . }
  }

  # Find Suvendu Adhikari and their office
  UNION
  {
    SELECT ?person WHERE {
      ?person rdfs:label ""Suvendu Adhikari""@en .
    }
    OPTIONAL { ?person dbo:office ?office . }
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
130,12,train,"Give me the entity in the administration, that is American, of  and figure known as Vanderbilt Commodores.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> """"@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/state> ?v0 . ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Vanderbilt_Commodores> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?role WHERE {
  # Find entities related to Vanderbilt Commodores
  ?team dbo:member ?person .
  ?team rdfs:label ""Vanderbilt Commodores""@en .

  # Check if the person is part of an administration role
  OPTIONAL { ?person dbo:position ?role . }

  # Ensure the person has American nationality
  ?person dbp:nationality dbr:United_States .
  
  # Bind the entity and its administrative role to variables
  BIND(?person AS ?entity)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
926,30,train,"Give me the child of the father, that is a royalty, of Mustafa III and successor of Mustafa III and father of Mahmud II.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child
WHERE {
  ?mustafaIII dbo:father ?child .
  ?child rdf:type dbo:Monarch .
  
  ?mustafaIII dbo:successor ?successor .
  ?successor rdfs:label ""Mahmud II""@en .

  ?successor dbo:father ?mahmudII .
  ?mahmudII rdfs:label ""Mahmud II""@en .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
124,25,train,"Give me the military force of Battle of Tamai and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleTamaiForce ?kitchenerEventForce
WHERE {
  # Military force involved in the Battle of Tamai
  dbr:Battle_of_Tamai dbo:militaryCommander ?commander .
  ?commander dbo:participatedInMilitaryEngagement ?battleTamaiForce .

  OPTIONAL {
    ?battleTamaiForce a dbo:MilitaryUnit .
  }

  # Societal event and military conflict associated with Herbert Kitchener
  dbr:Herbert_Kitchener_1st_Earl_Kitchener dbo:militaryCommander ?kitchenerCommander .
  ?kitchenerCommander dbo:participatedInMilitaryEngagement ?kitchenerEventForce .

  OPTIONAL {
    ?kitchenerEventForce a dbo:MilitaryUnit .
  }

  FILTER (?battleTamaiForce != ?kitchenerEventForce)
}
```",3,5,4,2,2,3,3,71,0,0,4,0,0.0,0
326,3,train,"Give me the birthplace, that is a state and British, of David Jessel.",SELECT ?result WHERE { <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
SELECT ?birthplace WHERE {
  ?person dbo:birthPlace ?birthplace .
  ?person foaf:name ""David Jessel"" .
  
  FILTER EXISTS { ?birthplace rdf:type dbpedia-owl:State . }
  FILTER EXISTS { 
    ?birthplace dbo:nationality ?nationality .
    ?nationality rdfs:label ""United Kingdom""@en
  }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
645,38,train,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeLeader ?militaryForceLeader
WHERE {
  # Find the office associated with Camilo Menéndez Tolosa
  ?office a dbo:GovernmentAgency ;
          a dbo:Organization ;
          dbo:member dbr:Camilo_Menéndez_Tolosa .
  
  # Get the leader of this office
  ?office dbo:leader ?officeLeader .

  # Find the military force associated with Francisco Largo Caballero's events
  ?event a dbo:MilitaryConflict, dbo:SocietalEvent ;
         dbo:militaryForce ?militaryForce ;
         dbo:participant dbr:Francisco_Largo_Caballero .
  
  # Get the leader of this military force
  ?militaryForce dbo:leader ?militaryForceLeader .
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
47,14,train,Give me the office of the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?office 
WHERE {
  ?person dbo:award dbr:Padma_Vibhushan .
  OPTIONAL { ?person dbo:officeHolder ?office . }
}
```",2,2,3,2,1,3,3,71,0,135,77,0.0,0.0,0
445,26,train,Give me the death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace
WHERE {
  ?award dbo:dateEstablished ""1820-03-10""^^xsd:date .
  ?award dbo:recipient ?person .
  ?person dbo:deathPlace ?deathPlace .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
216,7,train,Give me the administration of  and office of Tim Nicholls.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> """"@en . <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?office
WHERE {
  # Find the resource for Tim Nicholls
  ?tim a dbo:Person ;
      foaf:name ""Tim Nicholls""@en ;
      dbo:holdsPoliticalOffice ?office .

  OPTIONAL {
    ?office dbo:partOf ?administration .
  }
}
```

4. **Optimize Query Logic:** The query is structured to first identify Tim Nicholls and then find the office he holds, with an optional clause to retrieve any administration associated with that office.

5. **Validate Completeness and Precision:** This query should return the offices held by Tim Nicholls and any administrations related to those offices, aligning well with the question's requirements.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
192,11,train,"Give me the child of Mary of Hungary, Queen of Naples and spouse of the spouse, that is a royalty, of Charles Martel of Anjou.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_of_Hungary,_Queen_of_Naples> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Mary of Hungary, Queen of Naples and her children
  dbr:Mary_of_Hungary,_Queen_of_Naples dbo:spouse ?marySpouse .
  ?maryChild dbo:parent dbr:Mary_of_Hungary,_Queen_of_Naples ;
             a dbo:Royal .

  # Charles Martel of Anjou and his spouse
  dbr:Charles_Martel_of_Anjou dbo:spouse ?charlesSpouse .

  # Match the child with the spouse's spouse
  FILTER (?maryChild = ?charlesSpouse)

  BIND(?maryChild AS ?child)
}
```

### Explanation:

- **PREFIX:** Define prefixes for DBpedia ontology and resources.
- **SELECT:** We are interested in finding the `?child`.
- **WHERE Clause:**
  - Identify Mary of Hungary's spouse and her children who are royalty.
  - Identify Charles Martel's spouse.
  - Use a `FILTER` to ensure that the child is also the spouse of Charles Martel.
- **BIND:** Assign the matched child to the variable `?child`.",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
874,2,train,"Give me the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?artist a dbo:MusicalArtist ;
          foaf:name ""Horace Andy""@en .
  
  ?album dbo:artist ?artist ;
         dbo:title ?work .

  FILTER (lang(?work) = 'en')
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
773,36,train,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of Louis the German.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfChild
WHERE {
  # Carloman of Bavaria and his father
  ?carloman dbo:father ?father .
  FILTER (str(?carloman) = ""Carloman_of_Bavaria"") .

  # Father is an office holder and royalty
  ?father a dbo:Monarch ;
          dbo:officeHolder ?office .
  
  # Louis the German's spouse
  ?louis dbp:spouse ?spouse .
  FILTER (str(?louis) = ""Louis_the_German"") .

  # Child of the spouse who is royalty
  ?child dbp:parent ?spouse ;
         a dbo:Monarch .

  # Parent of that child
  ?child dbo:parent ?parentOfChild .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
433,23,train,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artistName
WHERE {
  ?person a dbo:MusicalArtist ;
          a dbo:Artist ;
          dbp:birthday ?birthday .
  
  ?association dbo:associatedWith dbr:Paul_Chambers .

  FILTER EXISTS { ?person ?p ?association }
  FILTER EXISTS { ?association ?o ?person }

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

}
```",3,5,4,3,1,3,3,71,0,0,31,0,0.0,0
41,13,train,"Give me the party of Declan Costello and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?costelloParty ?leaderParty
WHERE {
  # Declan Costello's party
  dbr:Declan_Costello dbo:party ?costelloParty .

  # Leader of the 2005 Castlereagh Borough Council election
  ?leader a dbo:Politician ;
          dbo:officeHolderOf dbr:2005_Castlereagh_Borough_Council_election ;
          dbo:party ?leaderParty .
}
```

This query does the following:
- Retrieves Declan Costello's political party.
- Identifies the leader of the 2005 Castlereagh Borough Council election who is a politician and an office holder, along with their political party.",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
281,1,train,Give me the awardee of Medal bar.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipientName WHERE {
  ?medal a dbo:Award .
  ?medal rdfs:label ""Medal of Honor""@en .
  ?medal dbo:recipient ?recipient .
  ?recipient foaf:name ?recipientName .
}
```",1,1,2,1,1,2,3,28,0,0,656,0,0.0,0
465,11,train,Give me the successor of the child of Alfonso I d'Este.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v0 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?successor
WHERE {
  ?alfonso a dbo:Duke ;
           foaf:name ""Alfonso I d'Este""@en .
  
  ?alfonso dbo:child ?child .

  ?child dbo:successor ?successor .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
124,29,train,"Give me the commander in Mahdist War and military force of Battle of Atbara and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?battleForce ?warForce
WHERE {
  # Frank Rhodes and his involvement in the Mahdist War
  dbr:Frank_Rhodes dbo:militaryConflict dbr:Mahdist_War .

  # The Battle of Atbara as part of the Mahdist War
  dbr:Battle_of_Atbara dbo:partOf dbr:Mahdist_War ;
                       dbo:commander ?commander ;
                       dbo:militaryForce ?battleForce .

  # Military force involved in the entire Mahdist War
  dbr:Mahdist_War dbo:militaryForce ?warForce .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
130,10,train,"Give me the administration, that is American, of the award of Živko Ključe.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?country
WHERE {
  # Find the award related to Živko Ključe
  dbr:Živko_Klju%C4%87e dbo:award dbr:Award .

  # Identify its administration
  dbr:Award dbo:administeredBy ?administration .
  
  # Get the country of the administration and filter for America
  ?administration dbo:country dbr:United_States ; 
                  rdfs:label ?adminLabel .
  
  FILTER (lang(?adminLabel) = 'en')
}
ORDER BY ?administration",2,3,3,2,1,3,2,20,0,0,43,0,0.0,0
443,3,train,Give me the award of William Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award
WHERE {
  dbr:William_Shepherd dbo:award ?award .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
124,30,train,"Give me the military force of Battle of Tamai and commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleForce ?battleCommander ?kitchenerEvent ?kitchenerForce
WHERE {
  # Battle of Tamai and Mahdist War
  dbr:Battle_of_Tamai dbo:militaryConflictsOf dbr:Mahdist_War .
  
  OPTIONAL {
    dbr:Battle_of_Tamai dbo:participatingMilitaryUnit ?battleForce .
    dbr:Mahdist_War dbo:commander ?battleCommander .
  }
  
  # Herbert Kitchener's societal event and military conflict
  dbr:Herbert_Kitchener_1st_Earl_Kitchener dbo:societalEvent ?kitchenerEvent .
  OPTIONAL {
    ?kitchenerEvent dbo:militaryConflict ?militaryConflict .
    ?militaryConflict dbo:participatingMilitaryUnit ?kitchenerForce .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
216,0,train,Give me the office of Tim Nicholls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  ?person foaf:name ""Tim Nicholls""@en .
  ?person dbo:positionHeld ?office .
}
```

This query assumes that:
- `foaf:name` is used to identify Tim Nicholls.
- `dbo:positionHeld` is the property linking a person to their office or position.",1,1,2,1,1,2,3,28,0,0,15,0,0.0,0
892,12,train,Give me the entity in Province of Reggio Emilia and landmark at elevation of 58.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?landmark WHERE {
  ?entity dbo:location dbr:Province_of_Reggio_Emilia .
  ?landmark dbo:elevation ""58""^^xsd:int ;
            dbo:locatedIn ?entity .
}
```

### Explanation:
- **PREFIX**: Defines common prefixes for DBpedia ontology and resources.
- **SELECT**: Retrieves the entity and its landmark.
- **WHERE**:
  - Matches entities located in the Province of Reggio Emilia.
  - Finds landmarks with an elevation of 58 that are associated with these entities.

This query should return the desired results when executed against a SPARQL endpoint containing DBpedia data.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
102,7,train,Give me the manager of the player in Ellie Roebuck.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager
WHERE {
  ?player a dbo:Athlete ;
          foaf:name ""Ellie Roebuck""@en .
  OPTIONAL { 
    ?player dbo:managedBy ?manager .
  }
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
582,12,train,Give me the player in Kazuaki Nagasawa and figure known as --10-19.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?property ?value
WHERE {
  VALUES ?entity { 
    dbr:Kazuaki_Nagasawa 
    dbr:--10-19 
  }
  
  ?entity ?property ?value .
}
GROUP BY ?property ?value
HAVING (COUNT(DISTINCT ?entity) = 2)
ORDER BY ?property",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
216,25,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in Mario Ivanković.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?teamName
WHERE {
  ?person dbo:birthDate ?birthdate .
  FILTER (YEAR(?birthdate) = 1983 && MONTH(?birthdate) = 12 && DAY(?birthdate) = 20)
  
  ?person dbo:sportsManager ?managerRole .
  ?person dbo:soccerManager ?soccerManagerRole .
  ?person dbo:soccerPlayer ?playerRole .

  ?person dbp:team ?team .
  ?team rdfs:label ?teamName .

  ?team dbp:member ?marioIvankovic .
  ?marioIvankovic rdfs:label ""Mario Ivanković""@en .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
917,37,train,"Give me the child of the father of the spouse, that is a royalty, of Leleiohoku I and child of Kekūanāoʻa.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Leleiohoku I and their spouse
  dbr:Leleiohoku_I dbo:spouse ?spouse .
  
  # Father of the spouse
  ?father dbo:parent ?spouse ;
          a dbo:Person .

  # Child of this father who is royalty
  ?child dbo:parent ?father ;
         a dbo:Royalty .

  # Ensure the child is also a child of Kekūanāoʻa
  dbr:Kekūanāoʻa dbo:child ?child .
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
459,0,train,Give me the governor of Oklahoma.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor WHERE {
  dbr:Oklahoma dbo:stateGovernor ?governor .
}
```

This query selects the governor of Oklahoma by matching the `dbo:stateGovernor` property for the resource representing Oklahoma.",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
417,11,train,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?spouseName
WHERE {
  # Identify Count Ingolf of Rosenborg
  ?countIngolf a dbo:Count ;
               foaf:name ""Ingolf of Rosenborg"" .

  # Find his parent(s)
  ?parent dbo:childOf ?countIngolf .

  # Filter parents who are royalty
  ?parent rdf:type dbo:RoyalFamilyMember .

  # Get the spouse of these royal parents
  ?parent dbo:spouse ?spouse .
  
  # Retrieve the name of the spouse
  ?spouse foaf:name ?spouseName .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
236,13,train,"Give me the party member of the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember
WHERE {
  ?administration dbo:member ?person .
  ?person a dbo:Politician ;
          dbo:officeHolder true ;
          dbo:residence dbr:Quincy,_Massachusetts .

  OPTIONAL { ?person dbo:politicalParty ?party . }
  
  FILTER EXISTS { ?person dbo:deathPlace ?place . }
}
```",3,6,4,3,1,3,2,20,0,0,269,0,0.0,0
573,6,train,"Give me the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""William J. Phelan""@en .
  
  ?person dbo:residence ?residence .

  FILTER EXISTS { 
    ?residence a dbo:Settlement .
  }
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
926,15,train,Give me the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  ?neşerekKadın a dbo:Person ;
                foaf:name ""Neşerek Kadın""@en .
  
  ?neşerekKadın dbo:spouse ?spouse .

  ?spouse foaf:parent ?father .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
606,8,train,Give me the birthplace of the alumnus of University of Pennsylvania.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus ?birthPlace
WHERE {
  ?alumnus dbo:almaMater dbr:University_of_Pennsylvania .
  ?alumnus dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,2,20,598,762,0,0.43970588235294117,1.0,0.6108273748723186
216,37,train,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of Ognjen Vukojević.",SELECT ?result WHERE { <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  ?player a dbo:SoccerPlayer .
  ?player a dbo:SportsManager .
  ?player a dbo:SoccerManager .

  ?player dbo:coachOf ?team .
  
  ?team a dbo:Organization ;
        a dbo:SportsClub ;
        a dbo:SoccerClub .

  OPTIONAL { ?team dbr:Džemal_Berberović . }
  OPTIONAL { ?team dbr:Ognjen_Vukojević . }

}
```

This query attempts to find players who are also coaches, involved in soccer as both players and managers, associated with teams that are sports clubs and specifically soccer clubs. It includes optional checks for associations with Džemal Berberović and Ognjen Vukojević.",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
443,8,train,Give me the landmark at elevation of the award of William Shepherd.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?elevation
WHERE {
  # Find the award associated with William Shepherd
  ?award dbo:recipient dbr:William_Shepherd .
  
  # Find a landmark related to the location of the award (assuming it's a geographical or institutional context)
  OPTIONAL { 
    ?award dbo:location ?location .
    ?location dbo:landmark ?landmark .
  }
  
  # Get the elevation of the landmark
  ?landmark dbo:elevation ?elevation .
}
```

This query assumes:
- The award has a `recipient` property linking to William Shepherd.
- The award's location might have an associated landmark.
- The landmark has an `elevation` property.

Adjustments may be needed based on actual DBpedia schema details and available data. This is a starting point for constructing the query.",2,2,3,2,1,2,3,28,0,0,349,0,0.0,0
573,28,train,"Give me the parent of John Quincy Adams and person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfJohnQuincyAdams ?decedentAtQuincy ?decedentInBakerRegion
WHERE {
  # Parent of John Quincy Adams
  ?johnQuincyAdams dbo:birthName ""John Quincy Adams"" .
  ?parentOfJohnQuincyAdams dbo:child ?johnQuincyAdams .

  # Person decedent at Quincy, Massachusetts
  ?decedentAtQuincy dbo:deathPlace dbr:Quincy,_Massachusetts .
  
  # Charlie Baker's administration region
  ?charlieBaker dbo:birthName ""Charlie Baker"" .
  ?bakerRegion dbo:headOfGovernment ?charlieBaker .
  ?decedentInBakerRegion dbo:deathPlace ?bakerRegion .

}
```

### Explanation:

- **PREFIX:** Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT:** Choose distinct results to avoid duplicates.
- **WHERE Clause:**
  - Identify John Quincy Adams using `dbo:birthName`.
  - Find his parent using the relationship `dbo:child`.
  - Locate individuals who died in Quincy, Massachusetts.
  - Determine Charlie Baker's administration region and find decedents from that region.

This query captures all elements of your question by identifying relationships and entities as specified. Adjustments may be needed based on actual DBpedia data availability and structure.",4,5,5,2,3,3,3,71,0,0,2,0,0.0,0
465,8,train,"Give me the child, that is a royalty, of Anne of Brittany.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?childName WHERE {
  ?anne a dbo:Person ;
        foaf:name ""Anne of Brittany""@en .
  
  ?anne dbo:child ?child .
  ?child foaf:name ?childName .
  ?child dbo:royalty true .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
456,36,train,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of Danielle Spencer (Australian actress).",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandName
WHERE {
  # Alan Doyle's band
  ?alanDoyle a dbo:Band ;
             dbo:member ?doyleMember .
  
  # Danielle Spencer's spouse
  ?danielleSpencer foaf:name ""Danielle Spencer"" ;
                   foaf:mbox <mailto:danielle.spencer@example.com> ; # Assuming we have an email or identifier
                   foaf:spouse ?spouse .

  # Spouse's band
  ?spouse a dbo:BandMember ;
          dbo:band ?spouseBand .
  
  # Check if the spouse is in Alan Doyle's band
  FILTER (?doyleMember = ?spouse)
  
  # Get the name of the band
  ?bandName rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
926,19,train,Give me the successor of Mustafa III and father of the father of Abdulaziz.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?successor ?grandfather
WHERE {
  # Find Mustafa III and his successor
  ?mustafaIII a dbo:Sultan ;
              rdfs:label ""Mustafa III""@en .
  
  ?mustafaIII dbo:successor ?successor .

  # Find Abdulaziz's father, then grandfather
  ?abdulaziz a dbo:Person ;
             rdfs:label ""Abdulaziz, King of Saudi Arabia""@en .
  
  ?abdulaziz dbo:father ?father .
  ?father dbo:father ?grandfather .

  # Ensure the successor and grandfather are the same person
  FILTER (?successor = ?grandfather)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
83,5,train,Who is the governor of Dilma Rousseff?,SELECT ?result WHERE { <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?governorName WHERE {
  # Dilma Rousseff's presidency period
  VALUES ?presidencyPeriod { 
    [startYear: ""2011"" endYear: ""2016""]
  }

  # Linking Dilma Rousseff to her role as President of Brazil
  dbr:Dilma_Rousseff dbo:positionHeld dbr:President_of_Brazil .

  # Finding governors during her presidency
  ?governor dbo:officeHolder dbr:Governor_of_?state .
  ?governor dbo:termStart ?startYear .
  ?governor dbo:termEnd ?endYear .

  FILTER (?startYear <= ""2016""^^xsd:gYear && ?endYear >= ""2011""^^xsd:gYear)

  # Getting the governor's name
  ?governor rdfs:label ?governorName .
  
  FILTER (LANG(?governorName) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
507,12,train,"Give me the director of Entertaining Mr Sloane (film) and professional in Film director, television director.","SELECT ?result WHERE { <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?directorName
WHERE {
  # Identify the film and its director
  dbr:Entertaining_Mr_Sloane (dbo:director) ?director .
  
  # Get the name of the director
  ?director foaf:name ?directorName .

  # Ensure the director is a professional in either Film or Television directing
  OPTIONAL { ?director dbo:occupation dbr:Film_director . }
  OPTIONAL { ?director dbo:occupation dbr:Television_director . }

  FILTER EXISTS {
    ?director dbo:occupation dbr:Film_director .
  } || EXISTS {
    ?director dbo:occupation dbr:Television_director .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
892,38,train,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of the award of Anna Ishii.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity
WHERE {
  ?entity a dbo:Region ;
          dbo:nationality dbr:Italy ;
          dbo:settlementType dbr:Settlement ;
          dbo:administrativeRegion dbr:Administrative_Region .
  
  ?entity dbo:partyAffiliation dbr:Democratic_Party_(Italy) .

  OPTIONAL { 
    ?landmark dbo:elevation ?elevation .
    ?award dbo:recipient dbr:Anna_Ishii .
    ?award dbo:location ?landmark .
    FILTER(?elevation > 0)
  }
}
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
18,8,train,Give me the professional in the award of Ana María Sánchez de Ríos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?award dbo:recipient dbr:Ana_María_Sánchez_de_Ríos .
  ?person dbo:receivedAward ?award .
  ?person dbo:occupation ?professional .
}
```

This query assumes:
- `dbo:recipient` links an award to its recipient.
- `dbo:receivedAward` connects a person to the awards they have received.
- `dbo:occupation` provides the profession of a person.",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
47,39,train,"Give me the office of the awardee of the entity, that is an award, in India and office of Bidesh Ranjan Bose.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardOffice ?bideshRanjanBoseOffice
WHERE {
  # Find the award given in India and its awardee's office
  ?award a dbo:Award ;
         dbo:country dbr:India .
  
  ?awardEvent dbo:recipient ?awardee .
  ?awardee dbo:office ?awardOffice .

  # Find Bidesh Ranjan Bose's office
  OPTIONAL {
    dbr:Bidesh_Ranjan_Bose dbo:office ?bideshRanjanBoseOffice .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
267,10,train,Give me the birth date of the reference to Dan Cathy.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . ?v0 <http://dbpedia.org/ontology/birthDate> ?result . }","```sparql
SELECT ?birthDate WHERE {
  ?person foaf:name ""Dan Cathy""@en .
  ?person dbo:birthDate ?birthDate .
}
```",2,2,3,2,1,3,2,20,1,0,0,1.0,1.0,1.0
874,1,train,Give me the band of Robert Hart (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Robert_Hart_(musician)> . },"```sparql
SELECT ?band WHERE {
  ?person foaf:name ""Robert Hart""@en .
  ?person dbo:associatedBand ?band .
}
```

This query does the following:
- Selects the band (`?band`) associated with Robert Hart.
- Uses `foaf:name` to identify the person by name, assuming DBpedia uses this property for names.
- Uses `dbo:associatedBand` as a potential property linking musicians to their bands. This might need adjustment based on actual DBpedia schema.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
456,38,train,"Give me the band of the band, that is a musical artist, of Dean Brody and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandName WHERE {
  ?deanBrody a dbo:MusicalArtist ;
             foaf:name ""Dean Brody""@en .
  
  ?deanBrody dbo:musicalArtist ?band .

  ?band foaf:name ?bandName .

  OPTIONAL {
    ?band dbo:alias ?alterEgo .
    FILTER (CONTAINS(LCASE(?alterEgo), LCASE(""the shadow"")))
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
281,2,train,Give me the awardee of Volunteer Decoration.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award .
  ?award rdfs:label ""Volunteer Decoration""@en .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,2,3,28,0,0,12,0,0.0,0
976,0,train,Give me the office of Mustafa Şentop.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office
WHERE {
  dbpedia:Mustafa_Sentop dbo:positionHeld ?office .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
865,12,train,Give me the father of Shahla Khatun and father of AK Abdul Momen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?fatherOfShahlaKhatun ?fatherOfAKAbdulMomen
WHERE {
  ?shahlaKhatun dbo:father ?fatherOfShahlaKhatun .
  FILTER(STR(?shahlaKhatun) = ""http://dbpedia.org/resource/Shahla_Khatun"")

  ?akAbdulMomen dbo:father ?fatherOfAKAbdulMomen .
  FILTER(STR(?akAbdulMomen) = ""http://dbpedia.org/resource/A.K._Abdul_Momen"")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
955,7,train,Give me the band of the writer of Don't Forget Your Roots (album).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
   PREFIX dbr: <http://dbpedia.org/resource/>

   SELECT DISTINCT ?band
   WHERE {
     # Find the album resource for ""Don't Forget Your Roots""
     dbr:Don_t_Forget_Your_Roots dbo:album dbr:Don_t_Forget_Your_Roots .
     
     # Get all writers of this album
     dbr:Don_t_Forget_Your_Roots dbo:writer ?writer .

     # Find the band associated with each writer
     ?writer dbo:band ?band .
   }",2,2,3,2,1,3,2,20,0,0,18,0,0.0,0
456,19,train,Give me the professional in  and spouse of the actor of Pacific Drive.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?movie dbo:title ""Pacific Drive""@en .
  ?movie dbo:actor ?actor .
  ?actor dbo:spouse ?spouse .
  ?spouse dbo:profession ?professional .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
926,0,train,Give me the father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  wd:Q12345 wdt:P22 ?father .
}
```

Explanation:
- `wd:Q12345` is a placeholder for the DBpedia resource ID of Mahmud II. You would need to replace this with the actual resource identifier from DBpedia.
- `wdt:P22` is the property used in DBpedia to denote ""parent.""",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
456,37,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and band of Alan Doyle.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character ?alterEgo ?bandMember ?bandName
WHERE {
  # Lamont Cranston as The Shadow
  OPTIONAL {
    dbr:Lamont_Cranston dbo:alias dbr:The_Shadow .
    dbr:The_Shadow dbo:profession ?alterEgo .
  }
  
  # Alan Doyle and his band
  OPTIONAL {
    dbr:Alan_Doyle dbo:memberOfBand ?bandMember .
    ?bandMember dbo:name ?bandName .
    FILTER(?bandName = ""Great Big Sea"")
  }
}
```

This query attempts to retrieve:
- The alter ego of Lamont Cranston (The Shadow).
- The band associated with Alan Doyle, specifically filtering for ""Great Big Sea"".",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
433,20,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and associated musical artist of Paul Chambers.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonArtist WHERE {
  # Scott LaFaro's associated musical artist who is also an artist and a musical artist
  ?scottLaFaro dbo:musicalArtist ?artist1 .
  FILTER (str(?scottLaFaro) = ""Scott LaFaro"") .
  
  ?artist1 rdf:type dbo:MusicalArtist .
  ?artist1 rdf:type dbo:Artist .

  # Paul Chambers' associated musical artist
  ?paulChambers dbo:musicalArtist ?artist2 .
  FILTER (str(?paulChambers) = ""Paul Chambers"") .

  ?artist2 rdf:type dbo:MusicalArtist .

  # Find the common musical artist
  ?artist1 rdfs:label ?commonArtistLabel .
  ?artist2 rdfs:label ?commonArtistLabel .

  FILTER(LANG(?commonArtistLabel) = 'en')
}
ORDER BY ?commonArtist",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
791,23,train,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?royalSpouse
WHERE {
  # Find Emperor Takakura's spouse
  ?emperor rdf:type dbo:Emperor ;
           rdfs:label ""Takakura""@en .
  
  ?emperor dbo:spouse ?firstSpouse .

  # Find the first spouse's spouse who is royalty
  ?firstSpouse dbo:spouse ?royalSpouse .
  
  FILTER EXISTS { 
    ?royalSpouse rdf:type/rdfs:subClassOf* dbo:RoyalFamilyMember .
  }
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
933,7,train,"Who is the person born, that is a musical artist, on 1947-04-21?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?person ?name
WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthday ?birthDate .
  ?person foaf:name ?name .
  
  FILTER (YEAR(?birthDate) = 1947 && MONTH(?birthDate) = 4 && DAY(?birthDate) = 21)
}
```",1,2,2,1,1,3,3,71,0,0,4,0,0.0,0
433,11,train,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?musicalArtist WHERE {
  ?person dbo:birthName ""Paul Laurence Dunbar Chambers Jr."" .
  ?person a dbo:MusicalArtist .
  ?person a dbo:Artist .
  ?person rdfs:label ?musicalArtist .
  FILTER(LANG(?musicalArtist) = 'en')
}
```",2,4,3,2,1,3,3,71,0,0,31,0,0.0,0
216,34,train,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and team of Ognjen Vukojević.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/coach> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player
WHERE {
  ?team a dbo:SoccerClub ;
        dbo:coach dbr:Ognjen_Vukojević .
  
  ?team dbo:member ?player .

  ?croatiaTeam a dbo:SoccerTeam ;
               dbo:country dbr:Croatia ;
               dbo:ageGroup ""U21""^^xsd:string .

  ?croatiaTeam dbo:coach dbr:Ognjen_Vukojević .
  
  FILTER EXISTS { ?team dbo:sportTeam dbr:Croatia_U21 }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
124,37,train,"Give me the military force of Battle of Atbara and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleMilitaryForce ?warMilitaryForce
WHERE {
  # Military force involved in the Battle of Atbara
  dbr:Battle_of_Atbara dbo:militaryForce ?battleMilitaryForce .

  # Find wars that are societal events and military conflicts
  ?war a dbo:MilitaryConflict ;
       dbo:conflict [dbo:participatedIn ?societalEvent] .
  
  # Ensure the war involves an awardee of the British South Africa Company Medal
  ?medalAwardee dbo:awardedBy dbr:British_South_Africa_Company_Medal ;
               dbo:participatedIn ?war .

  # Get military force involved in that war
  ?war dbo:militaryForce ?warMilitaryForce .
}
```",4,7,5,3,2,3,3,71,0,0,7,0,0.0,0
573,34,train,"Give me the parent of John Quincy Adams and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent ?realName ?region
WHERE {
  # John Quincy Adams' parent
  ?johnQuincyAdams dbo:birthName ""John Quincy Adams""@en .
  ?johnQuincyAdams dbo:father ?parent .

  # Charlie Baker's real name
  ?charlieBaker dbp:sportsTeam <http://dbpedia.org/resource/Australian_football> ;
                rdfs:label ?realName .
  FILTER (LANG(?realName) = 'en')

  # Administration where a person is decedent at a region
  ?administration dbo:decedentAtRegion ?region .

  # Linking the administration to Charlie Baker's real name
  ?charlieBaker dbp:birthPlace ?place .
  ?place dbo:administrativeTerritory ?administration .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
433,9,train,Give me the associated musical artist of Paul Chambers and associated musical artist of Bill Evans.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  {
    # Find associated artists of Paul Chambers
    dbr:Paul_Chambers dbo:associatedBand ?band .
    ?band dbo:member ?artist .
  }
  UNION
  {
    # Find associated artists of Bill Evans
    dbr:Bill_Evans dbo:associatedBand ?band .
    ?band dbo:member ?artist .
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
935,2,train,"Give me the award, that is an award, of Syed Sohail Hussain Naqvi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Syed Sohail Hussain Naqvi""@en .
  ?person dbo:honoraryAward ?award .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
888,10,train,Give me the award of the commander in 2022 Ukrainian eastern counteroffensive.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?award ?recipient WHERE {
  ?event dbo:location dbr:Ukraine .
  ?event dbo:date ?date .
  FILTER (YEAR(?date) = 2022)
  
  ?event dbo:relatedEvent dbr:2022_Ukrainian_eastern_counteroffensive .

  ?award dbo:awardedTo ?recipient .
  ?award dbo:givenFor ?event .
  
  ?award rdfs:label ?awardLabel .
  FILTER (CONTAINS(LCASE(?awardLabel), ""commander""))
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
987,32,train,"Give me the birth place of the actor of All for Free and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorBirthPlace ?bandBirthPlace WHERE {
  # Find the actor of ""All for Free""
  ?movie dbo:title ""All for Free""@en .
  ?movie dbo:starring ?actor .

  # Get the birthplace of this actor
  ?actor dbo:birthPlace ?actorBirthPlace .

  # Find Šako Polumenta and his associated band
  dbr:Šako_Polumenta dbo:associatedBand ?band .
  
  # Ensure the band is both an artist and a musical artist
  ?band rdf:type dbo:Artist ;
        rdf:type dbo:MusicalArtist .

  # Get the birthplace of this band (assuming it's represented as an entity with a birthplace)
  OPTIONAL { ?band dbo:birthPlace ?bandBirthPlace }
}
```",4,6,5,2,2,3,3,71,0,0,4,0,0.0,0
456,24,train,Give me the band of Alan Doyle and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band ?profession 
WHERE {
  # Find Alan Doyle's band
  ?person rdfs:label ""Alan Doyle""@en .
  ?person dbo:musicGroup ?band .

  # Find The Shadow's profession
  OPTIONAL {
    ?shadow rdfs:label ""The Shadow (alter ego)""@en .
    ?shadow dbo:profession ?profession .
  }
}
```

### Explanation:
- **PREFIX**: Define prefixes for ontology and property namespaces.
- **SELECT DISTINCT**: Choose distinct results to avoid duplicates.
- **WHERE Clause**:
  - Identify Alan Doyle using `rdfs:label` and find his associated band with `dbo:musicGroup`.
  - Use an `OPTIONAL` clause to handle the alter ego ""The Shadow"" and retrieve his profession.

This query will return the band associated with Alan Doyle and the profession of The Shadow's alter ego.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
965,33,train,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Find the person born on 1854-05-24 who is a politician and spouse of Prince Louis of Battenberg
  ?person dbo:birthDate ""1854-05-24""^^xsd:date ;
          rdf:type dbo:Politician ;
          dbo:spouse dbr:Prince_Louis_of_Battenberg .

  # Find the child of this person who is royalty
  ?child dbo:parent ?person ;
         rdf:type dbo:RoyalFamilyMember .

  # Find the parent of that royal child
  ?royalChild dbo:parent ?child .
  ?parent dbo:child ?royalChild .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
987,28,train,"Give me the birth place of Moamer Kasumović and entity in Montenegro and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceKalamovic ?entityInMontenegro ?bandBirthplace
WHERE {
  # Birthplace of Moamer Kalamović (Slobodan Milošević)
  dbr:Slobodan_Milošević dbo:birthPlace ?birthPlaceKalamovic .

  # Entity in Montenegro related to the birthplace of a band associated with Šako Polumenta
  ?entityInMontenegro rdf:type dbo:Place ;
                     dbo:country dbr:Montenegro .
  
  OPTIONAL {
    ?band dbo:member ŝako_polumenta ;
          dbo:birthPlace ?bandBirthplace ;
          rdf:type dbo:Band ;
          dbo:genre ?genre .
    
    FILTER (CONTAINS(LCASE(?genre), ""music"") || CONTAINS(LCASE(?genre), ""artist""))
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
18,7,train,"Give me the alumnus of Marymount College, Tarrytown and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus ?profession
WHERE {
  ?alumnus dbo:almaMater dbr:Marymount_College_(Tarrytown) .
  OPTIONAL { ?alumnus dbo:occupation ?profession . }
}
```

4. **Optimize Query Logic:** The query uses `OPTIONAL` to account for cases where the profession might not be specified.

5. **Validate Completeness and Precision:** This query will return all alumni of Marymount College, Tarrytown along with their professions if available.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
417,5,train,"Who is the leader, that is a royalty, of Colony of Greenland?",SELECT ?result WHERE { <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?leaderName WHERE {
  ?colony dbo:headOfState ?leader .
  ?colony rdfs:label ""Colony of Greenland""@en .
  
  FILTER NOT EXISTS { ?colony rdf:type dbo:Country } # Ensuring it's a colony, not a country
  
  ?leader rdf:type dbo:Monarch . # Leader must be royalty
  OPTIONAL { ?leader foaf:name ?leaderName }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
124,14,train,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Herbert Kitchener, 1st Earl Kitchener
  dbr:Herbert_Kitchener_1st_Earl_Kitchener dbo:militaryCommanderOf ?force.

  # The force is a military conflict and a societal event
  ?force rdf:type dbo:MilitaryConflict .
  ?force rdf:type dbo:SocietalEvent .

  # Bind the force to a variable for output
  BIND(?force AS ?militaryForce)
}
```",2,4,3,2,1,3,3,71,0,0,1190,0,0.0,0
465,7,train,"Give me the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?child a dbo:DauphinOfFrance ;
         foaf:name ""Charles Orlando""@en .
  ?child dbo:child ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
892,36,train,"Give me the entity in Italy and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region ?party
WHERE {
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          rdf:type dbo:Settlement ;
          rdf:type dbo:AdministrativeRegion .

  ?party a dbo:PoliticalParty, dbo:Organization ;
         dbp:member dbr:Andrea_Cozzolino .

  ?region dbo:administrativeRegionOf ?party .
}
```",4,10,5,3,2,3,3,71,0,0,587,0,0.0,0
773,0,train,Give me the spouse of Louis the German.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseName
WHERE {
  ?person dbo:spouse ?spouse .
  ?person rdfs:label ""Louis the German""@en .
  FILTER NOT EXISTS { ?spouse rdfs:label ?ignoredLabel }
  BIND (REPLACE(STR(?spouse), ""http://dbpedia.org/resource/"", """") AS ?spouseName)
}
```

Explanation:
- `PREFIX dbo:` and `PREFIX dbr:` are used to define common namespaces for DBpedia ontology and resources.
- The query selects the spouse's name (`?spouseName`) by matching a person who is labeled as ""Louis the German"" in English.
- It uses the `dbo:spouse` property to find the spouse of Louis the German.
- A `FILTER NOT EXISTS` clause ensures that we do not retrieve any labels for the spouse, focusing only on the resource URI.
- The `BIND` function extracts and formats the spouse's name from the URI.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
839,25,train,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of Peter Schorowsky.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandCharlieHuhn ?bandPeterSchorowsky
WHERE {
  # Find Charlie Huhn's band
  ?charlieHuhn a dbo:MusicalArtist ;
               dbo:member ?bandCharlieHuhn .
  
  FILTER (str(?charlieHuhn) = ""Charlie_Huhn"") .

  # Find Peter Schorowsky's band
  ?peterSchorowsky a dbo:MusicalArtist ;
                   dbo:member ?bandPeterSchorowsky .
  
  FILTER (str(?peterSchorowsky) = ""Peter_Schorowsky"") .

  # Ensure the bands are related through a common musical artist
  ?commonArtist a dbo:MusicalArtist ;
                dbo:member ?bandCharlieHuhn ;
                dbo:member ?bandPeterSchorowsky .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
933,38,train,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and reference to the birth name of Alan Warner (musician).",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName ?birthName
WHERE {
  # Find Alan Warner (musician) and his birth name
  dbr:Alan_Warner_(musician) dbo:birthName ?birthName .

  # Find the band associated with Alan Warner
  dbr:Alan_Warner_(musician) dbo:band ?band .
  
  # Ensure the band is both a group and an organisation
  ?band rdf:type dbo:Band ;
        rdf:type dbo:MusicalGroup ;
        rdf:type dbo:Organisation .

  # Get the name of the band
  ?band rdfs:label ?bandName .
  FILTER (lang(?bandName) = 'en')
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
507,20,train,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and spouse of Anne V. Coates.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?director WHERE {
  ?movie a dbo:Film ;
         dbo:work _:work .
  
  ?movie dbo:starring dbp:BerylReid ;
         dbo:director ?director .

  ?anneVCoates dbo:spouse ?spouse .
  FILTER (str(?spouse) = ""Anne V. Coates"") .
  
  ?movie dbo:starring ?spouse .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
839,2,train,Give me the band of Matthias Röhr.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . },"```sparql
SELECT ?band WHERE {
  ?person foaf:name ""Matthias Röhr""@en .
  ?person dbp:band ?band .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
773,9,train,Give me the parent of Carloman of Bavaria and spouse of Louis the German.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfCarloman ?spouseOfLouis
WHERE {
  # Find the parent of Carloman of Bavaria
  ?carloman a dbo:Person ;
            rdfs:label ""Carloman of Bavaria""@en .
  
  ?carloman dbo:child ?parentOfCarloman .

  # Find the spouse of Louis the German
  ?louis a dbo:Person ;
         rdfs:label ""Louis the German""@en .

  ?louis dbp:spouse ?spouseOfLouis .
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
47,32,train,Give me the office of the awardee of Banga Bhushan and office of the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeOffice ?administrationOffice
WHERE {
  # Find Jagdeep Dhankhar as an awardee of Banga Bhushan
  ?person dbo:honoraryTitle dbr:Banga_Bhushan_Award .
  
  # Ensure the person is Jagdeep Dhankhar
  FILTER(?person = dbr:Jagdeep_Dhankhar) .

  # Get the office held by the awardee (Jagdeep Dhankhar)
  ?person dbo:office ?awardeeOffice .

  # Get the current administration office of Jagdeep Dhankhar
  ?person dbo:currentAdministrativePost ?administrationOffice .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
373,4,train,"Give me the professional in Singer, songwriter and writer of 2300 Jackson Street (song).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer, songwriter""@en . <http://dbpedia.org/resource/2300_Jackson_Street_(song)> <http://dbpedia.org/property/writer> ?result . }","```sparql
SELECT DISTINCT ?professional WHERE {
  ?song dcterms:title ""2300 Jackson Street"" .
  ?song dbo:lyricsBy ?professional .
  FILTER (regex(str(?professional), ""Singer|Songwriter|Writer"", ""i""))
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
839,7,train,Give me the professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?musician ?profession
WHERE {
  ?musician a dbo:MusicArtist .
  ?musician dbo:occupation ?profession .
}
```

This query selects musicians and their associated professions by matching the `dbo:MusicArtist` class for musicians and using the `dbo:occupation` predicate to find their professional roles.",1,1,2,1,1,3,3,71,0,0,7563,0,0.0,0
773,26,train,"Give me the parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Identify Louis the Pious
  ?louis a dbo:Monarch ;
         foaf:name ""Louis the Pious""@en .

  # Step 2: Find his children
  ?child dbo:childOf ?louis .

  # Step 3: Filter for royalty
  ?child a dbo:Royalty .

  # Step 4: Determine successors
  ?successor dbp:predecessor ?child .

  # Step 5: Identify parents of successors
  ?parent dbo:childOf ?successor .
}
```",3,4,4,3,1,3,3,71,0,0,4,0,0.0,0
892,10,train,Give me the entity in Italy and entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?italyEntity ?reggioEmiliaEntity
WHERE {
  # Find an entity in Italy
  ?italyEntity a dbo:Place ;
               dbo:country dbr:Italy .

  # Find an entity specifically in the Province of Reggio Emilia
  ?reggioEmiliaEntity a dbo:Place ;
                     dbo:location dbr:Province_of_Reggio_Emilia .
}
```",2,2,3,1,2,3,3,71,0,0,40,0,0.0,0
216,1,train,Give me the player in Mario Ivanković.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?playerRole ?teamName WHERE {
  ?marioIvankovic a dbo:Person ;
                  foaf:name ""Mario Ivanković""@en .
  
  OPTIONAL { 
    ?marioIvankovic dbo:role ?playerRole .
  }
  
  OPTIONAL {
    ?marioIvankovic dbo:team ?team .
    ?team rdfs:label ?teamName .
    FILTER (lang(?teamName) = ""en"")
  }
}
```

### Explanation:

- **PREFIXes:** Define common prefixes for DBpedia ontology (`dbo`) and FOAF vocabulary.
- **SELECT Clause:** Retrieves the player role and team name associated with Mario Ivanković.
- **WHERE Clause:**
  - Identifies Mario Ivanković as a `dbo:Person` with the name ""Mario Ivanković"".
  - Uses `OPTIONAL` clauses to find his role (`dbo:role`) and any teams he might have played for (`dbo:team`), along with their names.
- **FILTER:** Ensures that team names are in English.",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
47,12,train,Give me the office of Ajoy Mukherjee and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office
WHERE {
  VALUES ?person { 
    dbr:Ajoy_Mukherjee 
    dbr:Bidesh_Ranjan_Bose 
  }
  
  ?person dbo:officeHeld ?office .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
645,5,train,"Who is the native, that is a president and a politician, of Restoration (Spain)?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?person ?name
WHERE {
  ?person rdf:type dbo:Politician .
  ?person dbo:nativePlace dbr:Restoration_(Spain) .
  ?person dbo:presidentOf ?country .
  
  OPTIONAL { 
    ?person foaf:name ?name .
  }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
507,33,train,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of Anne V. Coates.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v3 <http://dbpedia.org/property/starring> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?directorName
WHERE {
  ?person dbo:birthday ""1919-06-17""^^xsd:date .
  ?person foaf:mbox ?email .  # Assuming there's a way to identify the person uniquely, like an email or another identifier.
  ?person dbo:spouse dbr:Anne_V._Coates .

  ?movie dbo:type dbr:Film ;
         dbo:workExample ?work .

  ?work dbo:director ?director .
  
  ?director foaf:name ?directorName .
}
```

This query assumes:
- The person has a unique identifier (like an email) to ensure we're identifying the correct individual.
- Movies are linked as both `dbo:type` of Film and have a `dbo:workExample`.
- Directors are identified through their `foaf:name`.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
433,33,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and associated musical artist of Paul Chambers.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalArtist
WHERE {
  # Find associated musical artists of Ornette Coleman
  ?artist1 dbo:musicalArtistOrchestra ?orchestra .
  ?orchestra dbo:member ?associatedArtist1 .
  
  FILTER (?artist1 = dbp:Ornette_Coleman) .

  # Ensure the associated artist is both an artist and a musical artist
  ?associatedArtist1 rdf:type dbo:MusicalArtist ;
                    rdf:type dbo:Artist .

  # Find associated musical artists of Paul Chambers
  ?artist2 dbo:musicalArtistOrchestra ?orchestra2 .
  ?orchestra2 dbo:member ?associatedArtist2 .

  FILTER (?artist2 = dbp:Paul_Chambers) .

  # Ensure the associated artist is both a musical artist and an artist
  ?associatedArtist2 rdf:type dbo:MusicalArtist ;
                    rdf:type dbo:Artist .

  # Find the final associated artist of the first associated artist
  ?finalArtist1 dbo:musicalArtistOrchestra ?orchestra3 .
  ?orchestra3 dbo:member ?finalArtist .

  FILTER (?associatedArtist1 = ?finalArtist1) .

  # Ensure the final artist is both an artist and a musical artist
  ?finalArtist rdf:type dbo:MusicalArtist ;
               rdf:type dbo:Artist .
}",4,8,5,3,2,3,3,71,0,0,10,0,0.0,0
98,5,train,Give me the parent of the successor of Emperor Nijō.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Emperor_Nijō> <http://dbpedia.org/ontology/successor> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?emperorNijo a dbo:Emperor ;
               rdfs:label ""Nijō""@en .
  
  ?successor dbo:successorOf ?emperorNijo ;
             dbo:parent ?parent .

}
```

This query does the following:
- Identifies Emperor Nijō using his label.
- Finds his successor and then retrieves the parent of that successor.",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
507,26,train,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/director> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?director
WHERE {
  ?movie a dbo:Film ;
         a dbo:CreativeWork .
  
  ?movie dbo:directedBy ?director .

  ?director dbp:birthday ""1919-06-17""^^xsd:date .
}
```",3,5,4,3,1,3,3,71,0,0,11,0,0.0,0
124,9,train,Give me the commander in Mahdist War and military force of Battle of Tamai.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderName ?militaryForce
WHERE {
  # Find the commander of the Mahdist War
  ?war dbo:partOf ?conflict .
  ?conflict rdfs:label ""Mahdist War""@en .

  OPTIONAL {
    ?battle dbo:participatedIn ?conflict .
    ?battle rdfs:label ""Battle of Tamai""@en .
    
    # Find the commander at the Battle of Tamai
    ?battle dbo:commander ?commander .
    ?commander rdfs:label ?commanderName .

    # Find military force details at the Battle of Tamai
    ?battle dbo:militaryForce ?militaryForce .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
443,11,train,Give me the birthplace of the work of yes.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?album a dbo:Album .
  ?album dbo:title ""The Work of Yes"" .
  ?album dbo:artist ?band .
  ?band dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,0,993,0,0.0,0
102,8,train,"Give me the native of the residence, that is English and a settlement, of Peter Finbow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeOfResidence
WHERE {
  # Identify Peter Finbow's residence
  dbr:Peter_Finbow dbo:residence ?residence .

  # Ensure the residence has a native label in English
  ?residence rdfs:label ?label .
  FILTER (LANG(?label) = ""en"")

  # Check if the place is classified as a settlement
  ?residence rdf:type dbo:Settlement .

  # Get the native of the residence
  ?residence dbp:nativeName ?nativeOfResidence .
}
```",2,4,3,2,1,3,2,20,0,0,100,0,0.0,0
917,33,train,"Give me the parent of Albert Kamehameha and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonIndividual
WHERE {
  # Albert Kamehameha's parent
  ?albertKamehameha a dbr:Albert_Kamehameha_III ;
                    dbo:parent ?parentOfAlbert .

  # Leleiohoku I's spouse and their father
  ?leleiohokuI a dbr:Leleiohoku_I ;
              dbo:spouse ?spouseOfLeleiohoku .
  ?spouseOfLeleiohoku dbo:father ?fatherOfSpouse .

  # Child of the father who is royalty
  ?childOfFather a dbo:Child ;
                dbo:parent ?fatherOfSpouse ;
                dbo:title ?title .
  FILTER (CONTAINS(LCASE(?title), ""royalty""))

  # Find common individual satisfying both conditions
  VALUES ?commonIndividual { ?parentOfAlbert ?childOfFather }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
216,14,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?team
WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:sportManagerOf ?team ;
          dbo:birthDate ?birthdate .
  
  FILTER (YEAR(?birthdate) = 1983 && MONTH(?birthdate) = 12 && DAY(?birthdate) = 20)

  OPTIONAL { 
    ?person dbo:soccerManagerOf ?team .
  }

  FILTER EXISTS {
    ?person a dbo:SportsManager ;
            a dbo:SoccerPlayer ;
            a dbo:SoccerManager .
  }
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
917,8,train,Give me the father of Kamehameha IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father
WHERE {
  ?child dbo:father ?father .
  ?child rdfs:label ""Kamehameha IV""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
773,30,train,"Give me the parent of Carloman of Bavaria and parent of the child, that is a royalty, of Louis the German and spouse of Louis the German.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?parentOfCarloman ?royalChildParent ?spouseOfLouis
WHERE {
  # Parent of Carloman of Bavaria
  ?carloman dbo:birthName ""Carloman of Bavaria""@en .
  ?carloman dbo:parent ?parentOfCarloman .

  # Child of Louis the German who is royalty
  ?louis rdf:type dbo:Person ;
         rdfs:label ""Louis the German""@en .
  ?child dbo:child ?louis ;
         rdf:type dbo:RoyalFamilyMember .
  ?child dbo:parent ?royalChildParent .

  # Spouse of Louis the German
  ?spouse dbo:spouse ?louis .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
130,6,train,Give me the entity in Tennessee and figure known as Vanderbilt Commodores.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Vanderbilt_Commodores> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Tennessee> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?location WHERE {
  ?entity rdfs:label ""Vanderbilt Commodores""@en .
  OPTIONAL { ?entity dbo:locatedIn dbr:Tennessee . }
  FILTER (lang(?entity) = 'en')
}
```

### Explanation:
- **PREFIX:** Defines common prefixes for DBpedia ontology and resources.
- **SELECT Clause:** Selects the entity (`?entity`) and its location (`?location`).
- **WHERE Clause:**
  - Matches entities with the label ""Vanderbilt Commodores"" in English.
  - Uses an `OPTIONAL` clause to find if there is a relationship indicating that the entity is located in Tennessee.
- **FILTER:** Ensures that the language of the label is English.

This query will return the Vanderbilt Commodores and any associated location data related to Tennessee from DBpedia.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
216,31,train,"Give me the player in Mario Ivanković and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/coach> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerInMarioIvankovic ?coachPlayer
WHERE {
  # Find the player in relation to Mario Ivanković
  dbr:Mario_Ivanković dbo:teamMember ?playerInMarioIvankovic .
  
  # Find Croatia U21 as an organization and soccer club
  dbr:Croatia_U21 dbo:type dbr:Soccer_Club ;
                  a dbo:Organization .

  # Find the coach of Croatia U21 who is also a player
  dbr:Croatia_U21 dbo:coach ?coach .
  ?coach dbo:teamMember ?coachPlayer .
  
  FILTER (?playerInMarioIvankovic != ?coachPlayer)
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
341,4,train,Give me the band member of Beyoncé and writer of In Love & War (Amerie album).,SELECT ?result WHERE { <http://dbpedia.org/resource/In_Love_&_War_(Amerie_album)> <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Beyoncé> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person
WHERE {
  # Find band members of Beyoncé
  { 
    ?beyoncetriples a dbo:MusicalArtist ;
                   dbo:bandMember ?person .
    FILTER (str(?beyoncetriples) = ""Beyoncé"")
  }
  
  UNION
  
  # Find writers of the song ""In Love & War"" from Amerie's album
  {
    ?song dbr:Amerie_albums#In_Love_&_War a dbo:Song ;
          dbo:lyricsBy ?person .
    FILTER (str(?song) = ""In Love & War"")
  }
}
```

This query uses two main patterns:

- The first pattern identifies individuals who are band members of Beyoncé.
- The second pattern finds the writer(s) of the song ""In Love & War"" from Amerie's album.

The `UNION` operator is used to combine results from both patterns, ensuring that we capture any individual who fits either criterion. The `DISTINCT` keyword ensures that each person is listed only once in the result set.",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
582,0,train,Give me the reference to Japan.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?property ?value
WHERE {
  VALUES ?country { dbr:Japan }
  ?country ?property ?value .
}
```

This query selects properties and their values for the entity representing Japan in DBpedia. It uses a `VALUES` clause to specify Japan as the subject, ensuring that only triples related to Japan are retrieved.",1,1,2,1,1,3,3,71,0,0,15,0,0.0,0
965,8,train,"Give me the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthDate WHERE {
  # Identify Prince George of Battenberg
  dbr:Prince_George_of_Battenberg dbo:nobleTitle ?title .
  
  # Find other nobles with a noble title
  ?person dbo:nobleTitle ?nobleTitle .

  # Ensure the person is not Prince George himself
  FILTER(?person != dbr:Prince_George_of_Battenberg)

  OPTIONAL { 
    ?person dbo:birthDate ?birthDate .
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
433,30,train,Give me the associated musical artist of Bill Evans and professional in the profession of Bob Marley and associated musical artist of Paul Chambers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?billEvansArtist ?bobMarleysProfession ?paulChambersArtist
WHERE {
  # Find associated musical artist of Bill Evans
  ?billEvans dbo:musicalArtist ?billEvansArtist .
  FILTER (str(?billEvans) = ""Bill Evans"")

  # Find profession of Bob Marley
  ?bobMarley dbo:profession ?bobMarleysProfession .
  FILTER (str(?bobMarley) = ""Bob Marley"")

  # Find associated musical artist of Paul Chambers
  ?paulChambers dbo:musicalArtist ?paulChambersArtist .
  FILTER (str(?paulChambers) = ""Paul Chambers"")
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
826,18,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and spouse of Anna Magdalena Appel and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor
WHERE {
  # Louis IV, Grand Duke of Hesse
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:successorOf ?predecessor .
  
  # Spouse relationship with Anna Magdalena Appel
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:spouse dbr:Anna_Magdalena_Appel .

  # Louis II, Grand Duke of Hesse as successor to the predecessor
  ?predecessor dbo:successorOf dbr:Louis_II,_Grand_Duke_of_Hesse .
}
```

This query does the following:
- Identifies the predecessor of Louis IV by looking for entities that are succeeded by him.
- Ensures that this predecessor is also a predecessor to Louis II, establishing the continuity in succession.
- Confirms the spousal relationship between Louis IV and Anna Magdalena Appel.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
865,11,train,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?nativePerson
WHERE {
  # Ram Jaipal Singh Yadav's residence
  dbpedia:Ram_Jaipal_Singh_Yadav dbo:residence ?residence .

  # Ensure the residence is a country
  ?residence rdf:type dbo:Country .

  # Find natives of that country
  ?nativePerson dbo:nativePlace ?residence .
}
```",2,3,3,2,1,3,3,71,0,0,1898,0,0.0,0
987,22,train,"Give me the entity in the region, that is a country, of Central European Time and birth place of Dado Polumenta.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  # Find countries in the Central European Time zone
  ?cetZone a dbo:TimeZone ;
           dbo:timeDifference ?offset .
  FILTER(?offset = ""+01:00"" || ?offset = ""+02:00"") # CET and CEST offsets

  ?country dbo:timezone dbr:CET ; # Link country to CET timezone
           a dbo:Country .

  # Find Dado Polumenta's birthplace
  dbr:Dado_Polumenta dbp:birthPlace ?birthPlace .
  
  # Ensure the birthplace is in the same country as identified by CET
  ?birthPlace dbo:country ?country .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
773,19,train,Give me the parent of Carloman of Bavaria and spouse of the father of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfCarloman ?spouseOfFatherOfCharlesTheFat
WHERE {
  # Find the parent of Carloman of Bavaria
  OPTIONAL {
    dbr:Carloman_of_Bavaria dbo:parent ?parentOfCarloman .
  }

  # Find the father of Charles the Fat and his spouse
  OPTIONAL {
    dbr:Charles_the_Fat dbo:father ?fatherOfCharlesTheFat .
    ?fatherOfCharlesTheFat dbo:spouse ?spouseOfFatherOfCharlesTheFat .
  }
}
```",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
267,11,train,"Give me the coach of the player, that is a soccer club, in Rasoul Khatibi and person born on 1953-03-01.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/coach> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1953-03-01""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?coachName WHERE {
  # Find Rasoul Khatibi and his birth date
  dbr:Rasoul_Khatibi a dbo:SoccerPlayer ;
                     dbo:birthDate ?birthDate .

  FILTER (YEAR(?birthDate) = 1953 && MONTH(?birthDate) = 3 && DAY(?birthDate) = 1)

  # Find the soccer club associated with Rasoul Khatibi
  dbr:Rasoul_Khatibi dbo:team ?soccerClub .
  
  # Ensure the team is a soccer club
  ?soccerClub a dbo:SoccerTeam .

  # Find the coach of the soccer club
  ?soccerClub dbo:coach ?coach .

  # Get the name of the coach
  ?coach foaf:name ?coachName .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
136,5,train,Give me the region coded as the area code of Levenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ?v0 . <http://dbpedia.org/resource/Levenhagen> <http://dbpedia.org/ontology/areaCode> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region
WHERE {
  ?levenhagen a dbo:Settlement .
  ?levenhagen rdfs:label ""Levenhagen""@en .
  
  OPTIONAL { 
    ?levenhagen dbo:areaServed ?areaCode .
    ?areaCode dbo:country dbr:Germany .
    ?areaCode dbo:region ?region .
  }
}
```",2,2,3,2,1,2,2,9,0,0,9,0,0.0,0
456,26,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  ?character a dbo:FictionalCharacter .
  ?character rdfs:label ""Lamont Cranston""@en .
  
  OPTIONAL { 
    ?character dbo:profession ?alterEgo .
    FILTER (CONTAINS(LCASE(STR(?alterEgo)), ""detective"") || CONTAINS(LCASE(STR(?alterEgo)), ""the shadow""))
  }
  
  OPTIONAL {
    ?mediaType dbo:genre ?character .
    VALUES ?mediaType { dbr:Radio dbr:Film dbr:Television }
  }
}
```",3,4,4,3,1,3,3,71,0,0,39640,0,0.0,0
582,38,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and figure known as the nickname of Japan national football team.",SELECT ?result WHERE { <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?player WHERE {
  # Masami Nagasawa's father
  ?nagasawaFather dbo:child dbr:Masami_Nagasawa .
  
  # The player is an athlete, soccer manager, and sports manager
  ?nagasawaFather a dbo:Athlete ;
                 a dbo:SoccerManager ;
                 a dbo:SportsManager .

  # The player has the nickname of Japan national football team
  ?player rdfs:label ?nickname .
  FILTER(CONTAINS(LCASE(?nickname), ""japan national football team""))

  # Linking the father to the player
  ?nagasawaFather foaf:name ?playerName .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
433,8,train,Give me the profession of Bob Marley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession
WHERE {
  dbpedia:Bob_Marley dbo:occupation ?profession .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
216,12,train,Give me the player in Mario Ivanković and team of Ognjen Vukojević.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player1 ?team1 ?player2 ?team2
WHERE {
  ?player1 a dbo:FootballPlayer ;
           foaf:name ""Mario Ivanković""@en .
  OPTIONAL { ?player1 dbp:currentclub ?team1 . }
  
  ?player2 a dbo:FootballPlayer ;
           foaf:name ""Ognjen Vukojević""@en .
  OPTIONAL { ?player2 dbp:currentclub ?team2 . }
}
```

This query does the following:
- Uses `PREFIX` to define common namespaces for DBpedia properties.
- Selects variables for both players and their respective teams.
- Matches Mario Ivanković and Ognjen Vukojević as instances of `dbo:FootballPlayer`.
- Retrieves the current club/team (`dbp:currentclub`) for each player using an `OPTIONAL` clause to handle cases where this information might not be available.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
933,29,train,Give me the reference to the birth name of Alan Warner (musician) and band of Mike Elliott (saxophonist) and band of The Ramong Sound.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthNameAlanWarner ?bandMikeElliott ?bandTheRamongSound
WHERE {
  # Alan Warner's birth name
  OPTIONAL { 
    dbr:Alan_Warner_(musician) dbo:birthName ?birthNameAlanWarner .
  }
  
  # Mike Elliott's band(s)
  OPTIONAL {
    dbr:Mike_Elliott_(saxophonist) dbo:memberOfBand ?bandMikeElliott .
  }

  # The Ramong Sound's band
  OPTIONAL {
    dbr:The_Ramong_Sound dbo:memberOfBand ?bandTheRamongSound .
  }
}
```

This query uses `OPTIONAL` clauses to ensure that even if some information is missing (e.g., a birth name or band association), the query will still return results for other available data. The use of `DISTINCT` ensures that duplicate entries are not returned.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
170,4,train,Give me the awardee of People's Artist of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dcterms:title ""People's Artist of Russia""@en .
  ?award dbo:recipient ?awardee .
}
```

### Explanation

- **Prefixes:** We use `dbo` for DBpedia ontology and `dbr` for resources.
- **Select Clause:** We are interested in the variable `?awardee`, which represents individuals who have received the award.
- **WHERE Clause:**
  - The first triple pattern identifies the resource representing ""People's Artist of Russia"" by its title.
  - The second triple pattern links this award to its recipients using the `dbo:recipient` property.

This query assumes that the award is represented with a specific title and that awardees are linked via the `dbo:recipient` predicate. Adjustments may be needed if DBpedia uses different properties or structures for this data.",1,1,2,1,1,2,3,28,0,0,24,0,0.0,0
36,13,train,"Give me the person born in 1971 and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v0 . ?v0 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName WHERE {
  # Find Lepa Brena's claim to fame film
  dbr:Lepa_Brena dbo:claimToFameFilm ?film .
  
  # Find actors in that film
  ?film dbo:starring ?actor .

  # Filter actors born in 1971
  ?actor dbp:birthdayYear ""1971""^^xsd:gYear .

  # Get the actor's name
  ?actor rdfs:label ?actorName .
  
  FILTER (lang(?actorName) = 'en')
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
445,14,train,Give me the entity in the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?award
WHERE {
  ?person a dbo:Person ;
          foaf:name ""George H. Cameron""@en .
  OPTIONAL { ?person dbo:award ?award . }
}
```

### Explanation

- **PREFIX**: Define prefixes for ontology and properties.
- **SELECT ?award**: We are interested in the awards associated with George H. Cameron.
- **WHERE Clause**:
  - Identify `?person` as a DBpedia Person (`dbo:Person`) with the name ""George H. Cameron"".
  - Use an optional pattern to find any awards linked to this person.

This query will return all entities that are awards received by George H. Cameron, if available in the dataset.",2,2,3,2,1,3,3,71,0,0,87241,0,0.0,0
459,15,train,"Give me the person born as John Kevin Stitt and governor of the death place, that is a settlement, of Cliff Roquemore.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find John Kevin Stitt and his birth name
  ?person a dbo:Person ;
          foaf:name ""John Kevin Stitt""@en ;
          dbp:birthName ?birthName .

  # Ensure he is the governor of some place
  ?governorship dbo:governingBody ?place ;
                dbo:incumbent ?person .
  
  # Find Cliff Roquemore's death place
  ?cliffRoquemore a dbo:Person ;
                  foaf:name ""Cliff Roquemore""@en ;
                  dbp:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .
  
  # Match the governor's place with Cliff Roquemore's death place
  FILTER (?place = ?deathPlace)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
987,21,train,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and entity in Montenegro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandName ?birthPlace
WHERE {
  ?band a dbo:Band ;
        dbo:member dbr:Sako_Polumenta ;
        dbo:genre ?genre .
  
  OPTIONAL { ?band dbo:birthPlace ?birthPlace . }
  
  FILTER EXISTS { ?band dbo:artist dbr:MusicalArtist } .
  FILTER EXISTS { ?band dbp:country dbr:Montenegro } .

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
216,17,train,Give me the administration of  and party of the awardee of Australian Defence Medal.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> """"@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?administration ?party 
WHERE {
  # Find the Australian Defence Medal resource
  ?medal a dbo:Award ;
         rdfs:label ""Australian Defence Medal""@en .
  
  # Find individuals who received this medal
  ?awardEvent dbo:recipient ?awardee ;
              dbo:award ?medal .

  OPTIONAL {
    # Get administration information (assuming it's linked to the award event)
    ?awardEvent dbo:administeredBy ?administration .
  }
  
  OPTIONAL {
    # Get political party of the awardee
    ?awardee dbo:partyAffiliation ?party .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
935,3,train,Give me the awardee of Sitara-i-Imtiaz.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipientName WHERE {
  ?award a dbo:Award .
  ?award rdfs:label ""Sitara-i-Imtiaz""@en .
  ?award dbo:recipient ?recipient .
  ?recipient foaf:name ?recipientName .
}
```",1,1,2,1,1,3,2,20,0,0,52,0,0.0,0
715,35,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leaderOfOffice ?commanderInForce
WHERE {
  # Find the office led by Carlos Franco Iribarnegaray
  ?office dbo:leader dbr:Carlos_Franco_Iribarnegaray ;
          a dbo:GovernmentAgency, dbo:Organization .
  
  # Get the leader of that office
  ?office dbo:leader ?leaderOfOffice .

  # Find the military conflict commanded by Abd el-Krim
  ?conflict dbo:commander dbr:Abd_el-Krim ;
            a dbo:MilitaryConflict .

  # Get the commander in that force
  ?conflict dbo:commander ?commanderInForce .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
274,8,train,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember
WHERE {
  # Identify the person by birth name and confirm they are a musical artist
  dbr:John_Birks_Gillespie dbo:birthName ""John Birks Gillespie"" .
  dbr:John_Birks_Gillespie a dbo:MusicalArtist .

  # Find band members associated with this person
  ?bandMember dbo:member dbr:John_Birks_Gillespie .
}
```

5. **Optimize Query Logic:** The query is structured to directly find the relevant entity and its relationships, ensuring efficiency.

6. **Validate Completeness and Precision:** The query accurately reflects the question's requirements by identifying John Birks Gillespie as a musical artist and retrieving his band members.",2,3,3,2,1,2,3,28,0,0,67,0,0.0,0
98,8,train,Give me the region of the time zone of Lopez Jaena.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region
WHERE {
  ?place a dbo:Settlement .
  ?place rdfs:label ""Lopez Jaena""@en .
  
  OPTIONAL { 
    ?place dbo:location ?location .
    ?location geo:timezone ?timezone .
    ?timezone dbp:region ?region .
  }
}
```",2,2,3,2,1,2,3,28,0,0,1874,0,0.0,0
465,6,train,"Give me the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Ferdinand I, Holy Roman Emperor
  dbr:Ferdinand_I,_Holy_Roman_Emperor dbo:spouse ?spouse .
  
  # Find children of Ferdinand I
  ?spouse dbo:child ?child .

  # Ensure the child is royalty
  ?child a dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,11,0,0.0,0
232,6,train,Give me the claim to fame of the person born as Emily Katherine Jacques.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Emily Katherine Jacques""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?achievement WHERE {
  VALUES ?person { dbr:Kate_Winslet }
  
  OPTIONAL {
    ?person dbo:award ?award .
    BIND(CONCAT(""Awarded: "", STR(?award)) AS ?achievement)
  }

  OPTIONAL {
    ?film dbo:starring ?person ;
          dbo:title ?title .
    FILTER (CONTAINS(LCASE(STR(?title)), ""winslet""))
    BIND(CONCAT(""Starred in film: "", STR(?title)) AS ?achievement)
  }
  
  FILTER (?achievement != """")
}
```",2,2,3,2,1,2,2,9,0,2,2,0.0,0.0,0
839,21,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of Matthias Röhr.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?personLabel ?bandLabel
WHERE {
  {
    # Kevin Richard Russell
    ?person1 rdfs:label ""Kevin Richard Russell""@en .
    ?person1 dbo:musicalArtist ?artist1 .
    ?artist1 dbo:band ?band1 .
    ?band1 rdfs:label ?bandLabel1 .
    FILTER(LANG(?bandLabel1) = 'en')
  }
  
  UNION
  
  {
    # Matthias Röhr
    ?person2 rdfs:label ""Matthias Röhr""@de .
    ?person2 dbo:musicalArtist ?artist2 .
    ?artist2 dbo:band ?band2 .
    ?band2 rdfs:label ?bandLabel2 .
    FILTER(LANG(?bandLabel2) = 'en')
  }
  
  # Bind labels for output
  BIND(CONCAT(""Kevin Richard Russell's band: "", ?bandLabel1) AS ?personBand1)
  BIND(CONCAT(""Matthias Röhr's band: "", ?bandLabel2) AS ?personBand2)

}
ORDER BY ?personLabel",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
417,13,train,Give me the child of the father of Frederick IX of Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?childName
WHERE {
  # Find Frederick IX of Denmark's URI
  ?frederickIX dbo:father ?father .
  
  # Identify who Frederick IX is
  VALUES ?frederickIX { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> }
  
  # Get the father of Frederick IX
  ?father a dbo:Person ;
          dbo:child ?child .

  # Return the name of the child
  ?child rdfs:label ?childName .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
645,27,train,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leaderName
WHERE {
  # Find a person native to Restoration (Spain)
  ?person dbo:nativePlace dbr:Restoration_(Spain) .
  
  # The office that is both a government agency and an organization
  ?office a dbo:GovernmentAgency ;
          a dbo:Organization .

  # The leader of the office
  ?office dbo:leader ?leader .
  ?leader foaf:name ?leaderName .

  # Ensure the person is associated with the office in some capacity (e.g., as a leader)
  OPTIONAL { ?person dbo:positionHeld ?office . }
}
```",3,5,4,3,1,3,3,71,0,0,15,0,0.0,0
47,9,train,Give me the office of Suvendu Adhikari and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?officeName
WHERE {
  {
    # Offices held by Suvendu Adhikari
    dbr:Suvendu_Adhikari dbo:officeHeld ?office .
    ?office rdfs:label ?officeName .
    FILTER (LANG(?officeName) = 'en')
  }
  UNION
  {
    # Offices held by Bidesh Ranjan Bose
    dbr:Bidesh_Ranjan_Bose dbo:officeHeld ?office .
    ?office rdfs:label ?officeName .
    FILTER (LANG(?officeName) = 'en')
  }
}
ORDER BY ?person ?officeName",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
200,4,train,Give me the reference to Angelcorpse and band member of Order from Chaos.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Angelcorpse""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Order_from_Chaos> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName WHERE {
  # Find members of Angelcorpse
  ?person dbo:bandMemberOf dbr:Angelcorpse .
  
  # Check if the same person is a member of Order from Chaos
  ?person dbo:bandMemberOf dbr:Order_from_Chaos .

  # Return the name of the band member
  ?person rdfs:label ?memberName .
  
  FILTER (lang(?memberName) = 'en')
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
443,1,train,Give me the birthplace of Ulf Lundell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Ulf Lundell""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
507,25,train,Give me the director of Entertaining Mr Sloane (film) and professional in the profession of Guy Ferland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?director ?profession
WHERE {
  # Find the director of ""Entertaining Mr Sloane""
  dbr:Entertaining_Mr_Sloane_film dbo:director ?director .

  # Find the profession of Guy Ferland
  dbr:Guy_Ferland dbo:occupation ?profession .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
326,8,train,"Give me the person decedent at the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personDecedent ?country
WHERE {
  ?award dbo:recipient dbr:Adelbert_Cronkhite .
  ?award dbo:decedent ?personDecedent .
  ?personDecedent dbo:nationality ?country .
  FILTER (isLiteral(?country) && datatype(?country) = xsd:string)
}
```

This query does the following:
- Selects the decedent (`?personDecedent`) and their nationality (`?country`).
- Matches awards received by Adelbert Cronkhite.
- Ensures that the decedent's nationality is a literal string, representing a country.",2,3,3,2,1,3,2,20,0,0,3795,0,0.0,0
216,32,train,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of Croatia national under-21 football team.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person
WHERE {
  ?person dbo:sport dbr:Soccer .
  ?person dbo:occupation dbr:Sports_Manager .
  ?person dbo:occupation dbr:Soccer_Manager .

  ?team1 dbo:coach ?person .
  ?team1 rdfs:label ""Bosnia and Herzegovina national under-18 football team""@en .

  ?team2 dbo:coach ?person .
  ?team2 rdfs:label ""Croatia national under-21 football team""@en .
}
```

This query does the following:
- Selects a distinct person who is involved in soccer, sports management, and soccer management.
- Matches this person as a coach for both specified teams using their labels.",4,7,5,2,2,3,3,71,0,0,3,0,0.0,0
124,19,train,"Give me the military force of Battle of Tamai and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?commander WHERE {
  # Identify the Battle of Tamai and its associated war
  dbr:Battle_of_Tamai dbo:partOf ?war .
  
  # Ensure the war is both a societal event and a military conflict
  ?war rdf:type dbo:SocietalEvent ;
       rdf:type dbo:MilitaryConflict .

  # Find the military force involved in the Battle of Tamai
  dbr:Battle_of_Tamai dbo:participatedInMilitaryForce ?militaryForce .
  
  # Ensure the military force is related to A Field Battery, Royal Australian Artillery
  ?militaryForce dbo:hasMember dbr:A_Field_Battery,_Royal_Australian_Artillery .

  # Find the commander of the military force
  OPTIONAL { ?militaryForce dbo:commandedBy ?commander }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
606,9,train,"Give me the nickname of the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://dbpedia.org/property/nickname> ""Barb City""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?settlementLabel
WHERE {
  ?settlement dbo:nickName ""Barb City""@en .
  ?settlement rdfs:label ?settlementLabel .
  FILTER(LANG(?settlementLabel) = 'en')
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
606,2,train,"Give me the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?settlementLabel ?description WHERE {
  ?settlement a dbo:Settlement ;
              rdfs:label ?settlementLabel .
  OPTIONAL { ?settlement dbo:wikiPageDescription ?description . }
  FILTER (lang(?settlementLabel) = 'en' && CONTAINS(LCASE(?settlementLabel), ""barb city""))
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
839,27,train,"Give me the band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandName WHERE {
  ?band a dbo:Band ;
        dbo:musicalArtist ?musicalArtist .
  ?professional dbo:occupation dbp:Musician ;
                dbo:memberOf ?band .
  FILTER (isLiteral(?musicalArtist))
}
```

Explanation:
- `?band` is the band we are interested in.
- `dbo:Band` and `dbo:musicalArtist` are used to ensure the band is a musical artist.
- `?professional` represents the professional associated with the band, having an occupation of ""Musician.""
- The `FILTER (isLiteral(?musicalArtist))` ensures that we only consider bands where the musical artist property holds a literal value.",3,4,4,3,1,3,3,71,0,0,706,0,0.0,0
715,22,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in Rif War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office ?roleInOffice ?rifWarCommanderRole
WHERE {
  # Identify Carlos Franco Iribarrenegaray's resource in DBpedia
  VALUES ?carlos { dbr:Carlos_Franco_Iribarrenegaray }

  # Find the office where he was a leader, which is both a government agency and an organization
  ?office dbo:leader ?carlos .
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .

  # Get his role in that office
  OPTIONAL { ?office dbo:headPosition ?roleInOffice }

  # Find his role as commander in the Rif War
  ?rifWarCommanderRole dbo:commanderInWar dbr:Rif_War .
  ?rifWarCommanderRole dbo:person ?carlos .

}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
865,0,train,Give me the native of British Raj.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ?placeLabel .
  FILTER (CONTAINS(LCASE(?placeLabel), ""india"") || CONTAINS(LCASE(?placeLabel), ""pakistan"") || 
          CONTAINS(LCASE(?placeLabel), ""bangladesh"") || CONTAINS(LCASE(?placeLabel), ""sri lanka"") ||
          CONTAINS(LCASE(?placeLabel), ""nepal"") || CONTAINS(LCASE(?placeLabel), ""bengal"") ||
          CONTAINS(LCASE(?placeLabel), ""punjab"") || CONTAINS(LCASE(?placeLabel), ""rajasthan"") ||
          CONTAINS(LCASE(?placeLabel), ""bihar"") || CONTAINS(LCASE(?placeLabel), ""assam"") ||
          CONTAINS(LCASE(?placeLabel), ""madras"") || CONTAINS(LCASE(?placeLabel), ""bombay"") ||
          CONTAINS(LCASE(?placeLabel), ""berar"") || CONTAINS(LCASE(?placeLabel), ""central provinces""))
  FILTER (CONTAINS(LCASE(?personLabel), ""born in"") && 
          ?person dbo:birthDate ?birthDate .
          FILTER (?birthDate >= ""1858-01-01""^^xsd:date && ?birthDate <= ""1947-08-15""^^xsd:date))
  OPTIONAL { ?person rdfs:label ?personLabel . }
}
ORDER BY ?name
LIMIT 100",1,1,2,1,1,3,3,71,0,0,1898,0,0.0,0
382,1,train,Give me the landmark at elevation of 100.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""100""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark ?name WHERE {
    ?landmark a dbo:Landmark .
    OPTIONAL { ?landmark rdfs:label ?name . FILTER (lang(?name) = 'en') }
    ?landmark dbo:elevation ?elevation .
    FILTER (?elevation = 100)
}
ORDER BY ?name
```

This query does the following:
- Selects landmarks that are instances of `dbo:Landmark`.
- Optionally retrieves their English labels (`rdfs:label`) for better readability.
- Filters these landmarks to include only those with an elevation of exactly 100 meters.
- Orders the results by name for easier reading.",1,1,2,1,1,3,2,20,0,0,727,0,0.0,0
573,31,train,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentAtAdminRegion ?personDecedentAtQuincy
WHERE {
  # Find Charlie Baker's real name
  dbr:Charlie_Baker_(Australian_footballer) dbo:birthName ?realName .

  # Find person decedent at the administration region of Charlie Baker's real name
  ?adminRegion dbo:administrativeRegionFor ?realName .
  ?personDecedentAtAdminRegion dbo:deathPlace ?adminRegion .

  # Find person decedent at Quincy, Massachusetts
  dbr:Quincy,_Massachusetts dbo:location ?quincyLocation .
  ?personDecedentAtQuincy dbo:deathPlace ?quincyLocation .
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
715,16,train,"Give me the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?mayorRole ?officeHolderRole ?politicianRole ?presidentRole
WHERE {
  ?person a dbo:Politician .
  ?person dbo:officeHolderOf ?office .
  ?office dbo:country dbr:Spain .
  
  OPTIONAL { ?person dbo:positionHeld ?mayorRole . }
  OPTIONAL { ?person dbo:officeHolderOf ?officeHolderRole . }
  OPTIONAL { ?person dbo:politicianPartyMember ?politicianRole . }
  OPTIONAL { ?person dbo:presidentOf ?presidentRole . }

  FILTER EXISTS {
    ?event dbo:date ""1933-01-01""^^xsd:date .
    ?event dbo:election dbr:Spanish_general_election,_1933 .
    ?person dbo:heldPositionDuring ?event .
  }
}
ORDER BY ?person
LIMIT 10",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
645,36,train,"Give me the commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?leader
WHERE {
  # Find the commander in Battle of Jarama
  ?battle dbo:commander ?commander .
  FILTER (str(?battle) = ""Battle_of_Jarama"") .

  # Find a person from Restoration, Spain
  ?person dbo:nationality dbr:Spain ;
          dbo:birthPlace dbr:Restoration_(Spain) .

  # Find the leader of an office that is both a government agency and an organization
  ?office dbo:leader ?leader ;
          rdf:type dbo:GovernmentAgency , dbo:Organization .
  
  # Link the person to the office (assuming some relationship exists)
  ?person dbo:memberOf ?office .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
935,11,train,Give me the headquarter of Provincial Assembly of Balochistan and death place of the awardee of Sitara-i-Imtiaz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Provincial_Assembly_of_Balochistan> <http://dbpedia.org/ontology/location> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?headquarter ?deathPlace ?awardeeName
WHERE {
  # Part 1: Headquarter of Provincial Assembly of Balochistan
  OPTIONAL {
    dbr:Provincial_Assembly_of_Balochistan dbo:location ?headquarter .
  }

  # Part 2: Death place of awardees of Sitara-i-Imtiaz
  {
    SELECT DISTINCT ?awardee ?deathPlace ?awardeeName
    WHERE {
      ?awardee dbo:honoraryTitle dbr:Sitara_i_Imtiaz .
      OPTIONAL { ?awardee dbo:deathPlace ?deathPlace . }
      OPTIONAL { ?awardee rdfs:label ?awardeeName FILTER (lang(?awardeeName) = ""en"") }
    }
  }
}
```

### Explanation:

- **Headquarter of Provincial Assembly of Balochistan**:
  - We use `dbr:Provincial_Assembly_of_Balochistan` to refer to the entity.
  - The predicate `dbo:location` is used to find its headquarter.

- **Death Place of Awardee of Sitara-i-Imtiaz**:
  - We select individuals (`?awardee`) who have received the `Sitara-i-Imtiaz` award using `dbo:honoraryTitle`.
  - The optional clause retrieves their death place with `dbo:deathPlace`.
  - Another optional clause fetches the name of the awardee in English using `rdfs:label`.

This query is designed to return distinct results for both parts, ensuring that we capture all relevant information.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
433,21,train,"Give me the professional in Musician and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?associatedArtist WHERE {
  # Identify Paul Laurence Dunbar Chambers Jr. and his profession as a musician
  dbr:Paul_Laurence_Dunbar_Chambers_Jr_ (dbo:profession) ?professional .
  
  FILTER (?professional = dbo:Musician)

  # Find associated musical artists who are both musicians and artists
  ?associatedArtist dbo:genre ?genre .
  ?associatedArtist a dbo:MusicalArtist .
  ?associatedArtist a dbo:Artist .

  # Ensure the professional is related to Paul Laurence Dunbar Chambers Jr.
  ?professional dbo:associatedBandOrMusician ?associatedArtist .
}
```",3,5,4,2,2,3,3,71,0,0,15,0,0.0,0
508,12,train,"Give me the birthplace of the commander, that is Saudi, in Central Plains War and birthplace of Ma Hongkui.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ma_Hongkui> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderBirthplace ?maHongkuiBirthplace
WHERE {
  # Find the commander from Saudi Arabia involved in the Central Plains War
  ?commander a dbo:MilitaryPerson ;
             dbo:nationality dbr:Saudi_Arabia ;
             dbo:participatedIn dbr:Central_Plains_War .
  
  # Get the birthplace of this commander
  ?commander dbo:birthPlace ?commanderBirthplace .

  # Find Ma Hongkui and his birthplace
  dbr:Ma_Hongkui a dbo:MilitaryPerson ;
                 dbo:birthPlace ?maHongkuiBirthplace .
}
```",3,4,4,2,2,3,2,20,0,0,3,0,0.0,0
917,20,train,Give me the parent of Albert Kamehameha and child of the father of Keʻelikōlani.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?commonEntity
WHERE {
  # Find the parent of Albert Kamehameha
  ?albertKamehameha dbo:parent ?parentOfAlbert .
  
  # Find the father of Keʻelikōlani and his children
  ?keelikolani dbo:father ?fatherOfKeelikolani .
  ?fatherOfKeelikolani dbo:child ?childOfFather .

  # Match the parent of Albert Kamehameha with a child of the father of Keʻelikōlani
  FILTER (?parentOfAlbert = ?childOfFather)
  
  # Bind the common entity to return it
  BIND(?parentOfAlbert AS ?commonEntity)

  # Ensure we are querying specific individuals by their DBpedia URIs
  VALUES ?albertKamehameha { <http://dbpedia.org/resource/Albert_Kamehameha> }
  VALUES ?keelikolani { <http://dbpedia.org/resource/Keʻelikōlani> }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
554,7,train,Give me the leader of the administration of Francisco da Costa Gomes.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader ?role
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Francisco da Costa Gomes""@en .
  
  OPTIONAL {
    ?administration dbo:headOfState ?person ;
                    dbo:primeMinister ?leader .
    ?leader a dbo:Person ;
            foaf:name ?name .
    BIND(CONCAT(?name, "" ("", STR(?role), "")"") AS ?leader)
  }
  
  OPTIONAL {
    ?administration dbo:headOfState ?person ;
                    dbp:president ?leader .
    ?leader a dbo:Person ;
            foaf:name ?name .
    BIND(""President"" AS ?role)
  }
}
```

This query attempts to find any administration where Francisco da Costa Gomes was the head of state and retrieves the leader (e.g., prime minister or president) associated with that administration.",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
715,5,train,"Who is the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personName
WHERE {
    ?person dbo:officeHolderOf dbr:1933_Spanish_general_election .
    ?person a dbo:Mayor .
    ?person a dbo:OfficeHolder .
    ?person a dbo:Politician .
    ?person a dbo:President .

    OPTIONAL { ?person foaf:name ?personName . }
}
```

### Explanation:
- **PREFIXes:** Define common prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT ?personName:** Retrieve distinct names of individuals matching the criteria.
- **WHERE Clause:**
  - `?person dbo:officeHolderOf dbr:1933_Spanish_general_election`: Ensures the person is associated with the 1933 Spanish general election.
  - `?person a dbo:Mayor`, `dbo:OfficeHolder`, `dbo:Politician`, `dbo:President`: Ensure the person holds all specified roles.
- **OPTIONAL Clause:** Retrieves the name of the person if available.

This query assumes that DBpedia has structured data linking individuals to these specific roles and events. Adjustments may be needed based on actual schema details in DBpedia.",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
978,1,train,Give me the band member of Chicane (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chicane_(musician)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  VALUES ?chicane { dbr:Chicane_(musician) }
  ?bandMember dbo:memberOfBand ?chicane .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
124,28,train,"Give me the military force of Battle of Tamai and military force of Battle of Atbara and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battle1MilitaryForce ?battle2MilitaryForce ?commander ?war
WHERE {
  # Battle of Tamai military force
  dbr:Battle_of_Tamai dbo:militaryConflicts ?battle1.
  ?battle1 dbo:militaryForce ?battle1MilitaryForce.

  # Battle of Atbara military force
  dbr:Battle_of_Atbara dbo:militaryConflicts ?battle2.
  ?battle2 dbo:militaryForce ?battle2MilitaryForce.

  # War involving A Field Battery, Royal Australian Artillery
  dbr:A_Field_Battery,_Royal_Australian_Artillery dbo:participatedIn ?war.
  
  # Commander of the war
  OPTIONAL {
    ?war dbo:commander ?commander.
  }
  
  # Ensure the war is both a societal event and a military conflict
  FILTER (dbo:SocietalEvent(?war) && dbo:MilitaryConflict(?war))
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
573,36,train,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at Massachusetts.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent
WHERE {
  # Find John Quincy Adams and his works
  ?work dbo:author dbr:John_Quincy_Adams .
  
  # Identify the parent of John Quincy Adams
  dbr:John_Quincy_Adams foaf:parent ?parent .

  # Ensure the parent was a politician and an office holder
  ?parent dbo:officeHolder ?office .
  ?parent dbo:politician ?politics .

  # Check if the person is a decedent at Massachusetts
  ?parent dbo:placeOfBirth dbr:Massachusetts .

  FILTER EXISTS { ?office . } # Ensure there's an office held
  FILTER EXISTS { ?politics . } # Ensure they were involved in politics
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
715,33,train,"Give me the commander in Rif War and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commanderInRifWar ?commanderInForceOfMayor WHERE {
  # Commander in Rif War
  ?commanderInRifWar dbo:occupation dbr:Military_person .
  ?commanderInRifWar dbo:commandedMilitaryEngagement dbr:Rif_War .

  # Commander in the force of the mayor
  ?commanderInForceOfMayor dbo:occupation dbr:Military_person .
  ?commanderInForceOfMayor dbo:commandedMilitaryEngagement ?mayorForce .
  
  # Office holder, politician, and president from the 1933 Spanish general election
  ?officeHolder a dbo:OfficeHolder ;
               dbo:politicalParty ?party ;
               dbo:electedAs dbr:President_of_Spain ;
               dbp:electionYear ""1933""^^xsd:gYear .

  FILTER (?commanderInRifWar = ?officeHolder)
  FILTER (?commanderInForceOfMayor = ?officeHolder)

}
```",4,7,5,3,2,3,3,71,0,0,4,0,0.0,0
212,3,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?name WHERE {
  ?professional a dbo:Doctor .
  ?professional foaf:name ?name .
}
```

This query retrieves professionals who are classified as doctors and their names. You can adjust the `a dbo:Doctor` part to match other professions by changing it to the appropriate DBpedia ontology class (e.g., `dbo:Engineer`, `dbo:Scientist`).

4. **Optimize Query Logic:** The query is straightforward, focusing on retrieving professionals of a specific type and their names.

5. **Validate Completeness and Precision:** Ensure that the domain or profession you are interested in is correctly represented by the appropriate DBpedia class.

If you have more specific details about the context or field, please provide them for a more tailored query.",1,1,2,1,1,2,2,9,0,0,39640,0,0.0,0
715,15,train,"Give me the force, that is a military conflict, of the native of Morocco.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?conflict
WHERE {
  ?person dbo:nationality dbr:Morocco .
  ?person dbo:memberOf ?organization .
  ?organization dbo:member ?person .
  ?conflict dbo:participatingOrganizations ?organization .
}
```",2,3,3,2,1,3,3,71,0,0,15,0,0.0,0
129,15,train,Give me the associated musical artist of Saba (rapper) and professional in the mayor of 1999 West Dunbartonshire Council election.,SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artistSaba ?artistElectionCandidate WHERE {
  # Find Saba the rapper and his associated musical artist
  { 
    ?saba a dbo:MusicalArtist ;
          foaf:name ""Saba (rapper)"" .
    OPTIONAL { ?saba dbo:associatedBandOrMusicalArtist ?artistSaba . }
  }

  UNION

  # Find professional from the 1999 West Dunbartonshire Council election and their associated musical artist
  {
    ?candidate dbp:electedAsMemberOf ""West Dunbartonshire Council"" ;
               dbp:electionYear ""1999"" .
    OPTIONAL { ?candidate dbo:associatedBandOrMusicalArtist ?artistElectionCandidate . }
  }
}
```

5. **Optimize Query Logic:** 
   - Use `OPTIONAL` to handle cases where the associated musical artist might not be present.
   - Use `UNION` to combine results from both queries.

6. **Validate Completeness and Precision:**
   - Ensure that the query captures both entities and their respective associated artists.
   - Check for correct use of properties like `dbo:associatedBandOrMusicalArtist`.",3,3,4,2,2,2,3,28,0,0,7,0,0.0,0
606,12,train,Give me the birthplace of the alumnus of University of Pennsylvania and figure known as Barb City.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person dbo:almaMater dbr:University_of_Pennsylvania ;
          foaf:name ""Barb City""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```

### Explanation

- **PREFIX**: We define prefixes for common namespaces used in DBpedia.
- **SELECT**: We are interested in the birthplace (`?birthPlace`).
- **WHERE**:
  - `?person dbo:almaMater dbr:University_of_Pennsylvania`: Finds individuals who attended the University of Pennsylvania.
  - `foaf:name ""Barb City""@en`: Ensures the person is known as ""Barb City.""
  - `dbo:birthPlace ?birthPlace`: Retrieves the birthplace of the identified individual.

This query assumes that ""Barb City"" refers to a unique individual who attended the University of Pennsylvania. If there are multiple matches, additional filters or disambiguation might be necessary.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
267,2,train,Who is the manager of 2020–21 Tractor S.C. season?,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?manager WHERE {
  ?team rdf:type dbo:FootballClub .
  ?team rdfs:label ""Tractor S.C.""@en .
  ?season dbo:club ?team ;
          dbo:seasonStartYear ?startYear ;
          dbo:seasonEndYear ?endYear .
  FILTER (?startYear = 2020 && ?endYear = 2021) .
  ?team dbo:manager ?manager .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
933,23,train,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalBand
WHERE {
  # Step 1: Find the band of ""The Ramones""
  ?ramones dbo:band ?firstBand .
  
  FILTER (str(?ramones) = str(dbpedia:The_Ramones)) .

  # Ensure it's an artist and a musical artist
  ?firstBand rdf:type dbo:MusicalArtist ;
             rdf:type dbo:Artist .

  # Step 2: Find the band of that resulting band
  ?firstBand dbo:band ?finalBand .
  
  # Ensure this final band is also an artist and a musical artist
  ?finalBand rdf:type dbo:MusicalArtist ;
             rdf:type dbo:Artist .
}
```",3,5,4,3,1,3,3,71,0,0,30,0,0.0,0
507,3,train,Give me the birth name of Anne V. Coates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName
WHERE {
  ?person foaf:name ""Anne V. Coates""@en .
  OPTIONAL { ?person foaf:givenName ?birthName . }
}
```

This query assumes that `foaf:name` is used to identify Anne V. Coates and `foaf:givenName` might contain her birth name, which is common in DBpedia for representing given names.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
976,25,train,Give me the office of Meral Akşener and office of the person born as Mehmet Naci Bostancı.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?officeLabel
WHERE {
  VALUES (?person ?personLabel) { 
    (<http://dbpedia.org/resource/Meral_Akşener> ""Meral Akşener"")
    (<http://dbpedia.org/resource/Recep_Tayyip_Erdogan> ""Erdoğan (born Mehmet Naci Bostancı)"")
  }
  
  ?person rdfs:label ?personLabel .
  ?person dbo:officeHeld ?office .
  ?office rdfs:label ?officeLabel .
}
ORDER BY ?person
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
791,3,train,Give me the reference to Emperor Takakura.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . }","```sparql
SELECT ?reference WHERE {
  ?subject rdfs:label ""Emperor Takakura""@en .
  ?subject a dbo:Monarch .
  OPTIONAL { ?subject foaf:isPrimaryTopicOf ?reference }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
579,11,train,"Give me the native of the residence, that is English and a settlement, of Alan Clyne and person born as Isobel Jane Miller Richard.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/property/birthName> ""Isobel Jane Miller Richard""@en . <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native
WHERE {
  # Alan Clyne's residence
  ?alanResidence dbo:residence ?person1 .
  ?person1 foaf:name ""Alan Clyne""@en .

  # Isobel Jane Miller Richard's residence
  ?isobelResidence dbo:residence ?person2 .
  ?person2 foaf:name ""Isobel Jane Miller Richard""@en .

  # Ensure the residences are the same settlement
  FILTER (?alanResidence = ?isobelResidence)

  # The residence must be a settlement in England
  ?settlement rdf:type dbo:Settlement ;
              dbo:country dbr:England .
  FILTER (?settlement = ?alanResidence && ?settlement = ?isobelResidence)

  # Find the native of this settlement
  ?native dbo:nativePlace ?settlement .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
373,1,train,"Give me the professional in Singer, songwriter.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer, songwriter""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?person
WHERE {
  ?person dbo:occupation ?occupation1 .
  ?person dbo:occupation ?occupation2 .

  FILTER (
    (str(?occupation1) = ""Singer"" || str(?occupation1) = ""singer"") &&
    (str(?occupation2) = ""Songwriter"" || str(?occupation2) = ""songwriter"")
  )
}
```",1,1,2,1,1,2,2,9,0,0,1543,0,0.0,0
865,3,train,Who is the person decedent at Patna?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . },"```sparql
SELECT ?person
WHERE {
  ?person dbo:placeOfDeath dbr:Patna .
}
```",1,1,2,1,1,3,3,71,0,0,66,0,0.0,0
273,10,train,Give me the alumnus of the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus
WHERE {
  ?university a dbo:University ;
              rdfs:label ""Università degli Studi di Torino""@it .
  
  ?university dbo:alumnus ?alumnus .
}
```

### Explanation:

- **PREFIX:** Define prefixes for common namespaces to simplify the query.
- **SELECT ?alumnus:** We want to retrieve the alumni of the university.
- **WHERE Clause:**
  - Identify the university by its label in Italian (`""Università degli Studi di Torino""@it`).
  - Match the `dbo:alumnus` property to find individuals who are alumni.

This query will return a list of individuals who are alumni of the Università degli Studi di Torino when executed against DBpedia.",2,2,3,2,1,3,2,20,0,0,141,0,0.0,0
326,14,train,"Give me the person decedent at the award, that is a country, of the awardee of French Legion of Honor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?decedent ?award
WHERE {
  ?award a dbo:Award ;
         dbo:recipient ?awardee .
  
  OPTIONAL { 
    ?award dbo:decedent ?decedent .
    FILTER (isBlank(?decedent) && EXISTS { ?decedent a dbo:Country })
  }
  
  FILTER (?award = dbr:French_Legion_of_Honor)
}
```",3,4,4,3,1,3,2,20,0,0,4699,0,0.0,0
892,1,train,Give me the landmark at elevation of 58.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?landmarkLabel
WHERE {
  ?landmark a dbo:Landmark .
  ?landmark dbp:elevation ""58""^^xsd:integer .
  OPTIONAL { ?landmark rdfs:label ?landmarkLabel . FILTER (lang(?landmarkLabel) = 'en') }
}
ORDER BY ?landmarkLabel",1,1,2,1,1,3,3,71,0,0,258,0,0.0,0
36,4,train,Give me the birth year of Deanne Bray.,SELECT ?result WHERE { <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?result . },"```sparql
SELECT ?birthYear WHERE {
  ?person foaf:name ""Deanne Bray""@en .
  ?person dbo:birthYear ?birthYear .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
888,6,train,Give me the commander in Southern Ukraine campaign and awardee of Hero of Ukraine.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Hero of Ukraine""@en . <http://dbpedia.org/resource/Southern_Ukraine_campaign> <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commanderName ?heroTitle
WHERE {
  # Find commanders involved in the Southern Ukraine campaign
  ?campaign dbo:location dbr:Southern_Ukraine .
  ?campaign dbo:commander ?commander .

  # Get the name of the commander
  ?commander rdfs:label ?commanderName .
  
  # Check if the commander is an awardee of ""Hero of Ukraine""
  OPTIONAL {
    ?commander dbo:awardedTitle dbr:Hero_of_Ukraine .
    ?heroTitle rdfs:label ?titleLabel .
    FILTER (CONTAINS(LCASE(?titleLabel), LCASE(""Hero of Ukraine"")))
  }
  
  # Filter to ensure we only get commanders who are also awardees
  FILTER EXISTS { ?commander dbo:awardedTitle dbr:Hero_of_Ukraine . }

  # Ensure the labels are in English and remove unnecessary prefixes
  FILTER (LANG(?commanderName) = 'en')
}
ORDER BY ?commanderName",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
170,13,train,Give me the entity in the work of International Energy Agency and birth place of Era Ziganshina.,SELECT ?result WHERE { <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . },"SELECT ?entity WHERE {
  # Part 1: Entity related to the work of International Energy Agency
  { 
    <http://dbpedia.org/resource/International_Energy_Agency> dbo:work ?entity .
  }
  
  UNION
  
  # Part 2: Birthplace of Era Ziganshina
  { 
    OPTIONAL {
      ?era foaf:name ""Era Ziganshina""@en .
      ?era dbo:birthPlace ?birthPlace .
      BIND(?birthPlace AS ?entity)
    }
  }
}
```",3,3,4,2,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
5,5,train,Give me the award of Coro de la Pontificia Universidad Católica de Puerto Rico.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?choir rdf:type dbo:MusicalGroup .
  ?choir rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  OPTIONAL { ?choir dbo:award ?award . }
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
200,5,train,Give me the reference to the name of Angelcorpse.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Angelcorpse> <http://xmlns.com/foaf/0.1/name> ?v0 . },"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?reference
WHERE {
  ?entity rdfs:label ""Angelcorpse""@en .
  ?entity rdfs:label ?reference .
}
```

This query does the following:
- It uses the `rdfs:label` property to find entities labeled as ""Angelcorpse"" in English.
- It retrieves the reference name of that entity.",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
507,13,train,"Give me the director of the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/director> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?director
WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Beryl_Reid .
  
  ?movie rdf:type dbo:CreativeWork .

  ?movie dbo:director ?director .
}
```

This query does the following:
- Selects distinct directors (`?director`) of movies.
- Ensures that the movie is an instance of `dbo:Film` (a movie) and also a `dbo:CreativeWork`.
- Checks if Beryl Reid (`dbr:Beryl_Reid`) starred in the movie.",2,4,3,2,1,3,3,71,0,0,9,0,0.0,0
955,11,train,Give me the band of the writer of Don't Forget Your Roots (album) and band of Johnny Rioux.,SELECT ?result WHERE { <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Rioux> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writerBand ?riouxBand
WHERE {
  # Find the writer of ""Don't Forget Your Roots""
  ?album dbo:title ""Don't Forget Your Roots"" .
  ?album dbo:artist ?writer .

  # Get the band associated with the writer
  OPTIONAL { 
    ?writer dbo:band ?writerBand .
  }

  # Find Johnny Rioux and his band
  dbr:Johnny_Rioux dbo:band ?riouxBand .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
465,27,train,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Step 1: Identify Charles Orlando, Dauphin of France
  dbr:Charles_Orlando,_Dauphin_of_France dbo:parent ?parent .

  # Step 2: Find children of the parent
  ?child dbo:parent ?parent .
  
  # Step 3: Filter for royalty among children
  ?child a dbo:Monarch ;
         rdfs:label ?childLabel .
  
  # Step 4: Get successor of the royal child
  ?successor dbo:predecessorOrPredeceasedBy ?child .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
507,9,train,Give me the spouse of Anne V. Coates and director of Entertaining Mr Sloane (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?director
WHERE {
  # Find the spouse of Anne V. Coates
  ?anne dbo:spouse ?spouse .
  FILTER (str(?anne) = ""Anne_V._Coates"")

  # Find the director of Entertaining Mr Sloane
  ?film dbo:director ?director .
  FILTER (str(?film) = ""Entertaining_Mr_Sloane_(film)"")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
826,22,train,Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of Anna Magdalena Appel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor
WHERE {
  # Find Prince Friedrich's parent
  ?princeFriedrich dbo:spouse ?parent .
  
  # Ensure the person is Prince Friedrich of Hesse and by Rhine
  ?princeFriedrich rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en .

  # Find the spouse of Anna Magdalena Appel
  ?annaMagdalena dbp:spouse ?parent .
  
  # Ensure the person is Anna Magdalena Appel
  ?annaMagdalena rdfs:label ""Anna Magdalena Appel""@en .

  # Find the predecessor (parent) of Prince Friedrich's parent
  ?parent dbo:parent ?predecessor .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
926,38,train,"Give me the child of the father, that is a royalty, of Mustafa III and successor of the child of Ahmed III.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  # Find Mustafa III's children who are royalty
  ?mustafaChild dbo:parent dbr:Mustafa_III ;
                a dbo:Monarch .

  # Find Ahmed III's child
  ?ahmedChild dbo:parent dbr:Aḥmad_III .

  # Find the successor of Ahmed III's child
  ?successor dbp:succeededBy ?ahmedChild .

  # Ensure the child is both Mustafa III's royal child and the successor
  FILTER (?mustafaChild = ?successor)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
365,6,train,Give me the person born as Symon Vasylyovych Petliura and spouse of Olha Petliura.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Symon Vasylyovych Petliura""@en . <http://dbpedia.org/resource/Olha_Petliura> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?spouseName WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Symon Vasylyovych Petliura""@en .
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ""Olha Petliura""@en .
  BIND(STR(?spouse) AS ?spouseName)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
273,8,train,Give me the parent of the alumnus of University of Turin.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?alumnus ?parent
WHERE {
  ?alumnus dbo:almaMater dbp:University_of_Turin .
  OPTIONAL { ?alumnus dbo:parent ?parent . }
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
281,6,train,Give me the commander in New Guinea campaign and awardee of Medal bar.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?medal
WHERE {
  ?campaign dbo:location dbr:New_Guinea .
  ?campaign dbo:commander ?commander .
  
  ?commander dbo:award ?medal .
  ?medal dbo:type ?medalType .

  FILTER(CONTAINS(LCASE(?medalType), ""bar""))
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
41,1,train,Give me the party of Declan Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  ?person foaf:name ""Declan Costello""@en .
  ?person dbo:politicalParty ?party .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
554,2,train,Who is the party member of Independent politician?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?personName WHERE {
  ?person dbo:partyMember ?party .
  ?party dbo:politicalAffiliation ?affiliation .
  FILTER (str(?affiliation) = ""Independent"")
  OPTIONAL { ?person foaf:name ?personName }
}
```",1,1,2,1,1,3,2,20,0,0,2968,0,0.0,0
926,16,train,Give me the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?result <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child
WHERE {
  ?person foaf:name ""Şermi Kadın""@en .
  
  OPTIONAL { 
    ?spouse dbo:spouse ?person .
    
    ?child dbo:parent ?spouse ;
           a dbo:Person .
}",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
124,38,train,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?kitchenerMilitaryForce ?rhodesWar
WHERE {
  # Herbert Kitchener's military force associated with a societal event and military conflict
  ?kitchenerMilitaryForce dbo:type ?type1 .
  ?kitchenerMilitaryForce dbo:commander dbr:Herbert_Kitchener,_1st_Earl_Kitchener .
  
  FILTER (
    (EXISTS { ?kitchenerMilitaryForce dbo:societalEvent ?event . })
    && 
    (EXISTS { ?kitchenerMilitaryForce dbo:militaryConflict ?conflict . })
  )
  
  # Frank Rhodes' war associated with an event, military conflict, and societal event
  ?rhodesWar dbo:type ?type2 .
  ?rhodesWar dbo:commander dbr:Frank_Rhodes_(British_Army_officer) .

  FILTER (
    (EXISTS { ?rhodesWar dbo:event ?event . })
    &&
    (EXISTS { ?rhodesWar dbo:militaryConflict ?conflict . })
    &&
    (EXISTS { ?rhodesWar dbo:societalEvent ?societalEvent . })
  )
}
```",4,9,5,2,2,3,3,71,0,0,1085,0,0.0,0
508,10,train,"Give me the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?war a dbo:MilitaryConflict ;
      a dbo:SocietalEvent .
  
  ?commander dbo:nationality dbr:Saudi_Arabia ;
             dbo:commanderOf ?war .

  OPTIONAL { 
    ?war dbo:participant dbr:Hu_Yukun .
  }
}
```

This query does the following:
- Selects commanders who are of Saudi nationality.
- Ensures that these commanders were involved in wars classified as both military conflicts and societal events.
- Optionally checks if Hu Yukun was a participant in such a war.",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
573,18,train,"Give me the person decedent at Massachusetts and person decedent at Quincy, Massachusetts and parent of John Quincy Adams.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?personDecedentMassachusetts ?personDecedentQuincy ?parentJohnQuincyAdams
WHERE {
  # Person decedent at Massachusetts
  ?personDecedentMassachusetts dbo:placeOfDeath ?massachusetts .
  ?massachusetts rdfs:label ""Massachusetts""@en .

  # Person decedent at Quincy, Massachusetts
  ?personDecedentQuincy dbo:placeOfDeath ?quincy .
  ?quincy rdfs:label ""Quincy, Massachusetts""@en .

  # Parent of John Quincy Adams
  ?parentJohnQuincyAdams dbo:child ?johnQuincyAdams .
  ?johnQuincyAdams foaf:name ""John Quincy Adams""@en .
}",3,3,4,1,3,3,3,71,0,0,2,0,0.0,0
18,6,train,Give me the parent of Liza Huber and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent ?profession
WHERE {
  ?person foaf:name ""Liza Huber"" .
  ?person dbo:child ?child .
  ?child foaf:name ""Liza Huber"" .
  ?parent dbo:spouse ?child .
  OPTIONAL { ?parent dbo:occupation ?profession . }
}
```

This query does the following:
- Identifies a person named Liza Huber.
- Finds her child relationship to identify herself in the dataset.
- Searches for parents by looking at spouse relationships (assuming parent-child relationships are not directly available).
- Optionally retrieves the profession of each identified parent.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
465,39,train,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Identify Charles Orlando and his parent
  dbr:Charles_Orlando_dauphin_of_France dbo:father ?parent .
  
  # Identify the spouse of Charles Orlando's parent, Archduchess Barbara of Austria
  ?parent dbo:spouse dbr:Barbara_of_Austria .

  # Find children of Charles Orlando's parent (his siblings)
  ?parent dbo:child ?sibling .

  # Filter to find siblings who are royalty
  ?sibling a dbo:RoyalFamilyMember .
  
  # Find the successor of this royal sibling
  ?sibling dbo:successor ?successor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
839,11,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band
WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Kevin Richard Russell"" .
  
  ?person dbo:memberOfBand ?band .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
129,4,train,"Give me the actor, that is an organisation, of Dreamville Presents: Revenge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
    ?event dbr:Dreamville_Presents:_Revenge ;
           dbo:performer ?actor .
    
    ?actor a dbo:Organization .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
18,18,train,"Give me the alumnus of the figure known, that is an educational institution, as Saints and parent of Liza Huber.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . ?result <http://dbpedia.org/ontology/almaMater> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alumnus
WHERE {
  ?institution rdfs:label ""Saints""@en .
  ?alumnus dbo:almaMater ?institution .
  
  OPTIONAL {
    ?lizaHuber foaf:name ""Liza Huber""@en ;
               dbo:parent ?alumnus .
  }
}
```

This query does the following:
- Identifies an institution labeled as ""Saints.""
- Finds individuals who are alumni of this institution.
- Optionally checks if any of these alumni is a parent of Liza Huber.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
124,32,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Frank Rhodes' involvement in wars
  ?war dbo:commander dbr:Frank_Rhodes ;
       a dbo:MilitaryConflict, dbo:SocietalEvent .

  # A Field Battery's involvement in wars
  ?batteryWar dbo:participatedIn dbr:A_Field_Battery,_Royal_Australian_Artillery ;
              a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Ensure the same war is involved with both entities
  FILTER (?war = ?batteryWar)

  # Get the military force associated with the war
  ?militaryForce dbo:participatedIn ?war .
}
```",4,9,5,2,2,3,3,71,0,0,9,0,0.0,0
573,16,train,"Give me the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?result . ?v1 <http://dbpedia.org/property/occupation> ""Politician""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?residence WHERE {
  ?politician a dbo:Politician ;
             dbp:nationality dbr:United_States .
  ?politician dbo:residence ?residence .
  ?residence a dbo:Settlement .
}
```",2,4,3,2,1,3,3,71,41,662,0,0.05832147937411095,1.0,0.11021505376344086
582,35,train,Give me the figure known as the nickname of Japan national football team and reference to the residence of Hirotaka Sugawara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname ?residence
WHERE {
  # Get the nickname of Japan national football team
  dbr:Japan_national_football_team dbo:nickname ?nickname .

  # Get the residence of Hirotaka Sugawara
  OPTIONAL { 
    dbr:Hirotaka_Sugawara dbo:residenceLocation ?residence .
  }
}
```

### Explanation:
- **PREFIX**: Defines common prefixes for DBpedia resources and ontology.
- **SELECT**: Specifies that we want to retrieve the nickname of the Japan national football team and the residence of Hirotaka Sugawara.
- **WHERE**:
  - The first pattern matches the Japan national football team's nickname.
  - The `OPTIONAL` clause is used for Hirotaka Sugawara's residence, as this information might not always be available.

This query should provide the desired results when executed against a DBpedia dataset.",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
926,8,train,"Give me the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?fatherName
WHERE {
  ?mustafaIII dbo:father ?father .
  ?father rdfs:label ?fatherName .
  FILTER (CONTAINS(LCASE(?fatherName), ""mustafa iii""))
  
  OPTIONAL { 
    ?father rdf:type dbo:Monarch .
  }
  
  FILTER EXISTS { ?father rdf:type dbo:Monarch . }
}
```

This query does the following:
- Identifies Mustafa III and his father using `dbo:father`.
- Retrieves the label (name) of the father.
- Ensures that the father is a monarch by checking if he has a type of `dbo:Monarch`.",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
965,16,train,"Give me the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?politician a dbo:Politician ;
              dbp:birthday ""1854-05-24""^^xsd:date .
  
  ?politician dbo:child ?child .

  ?child a dbo:RoyalFamilyMember ; # Assuming royalty is represented by this class
         rdfs:label ?childLabel .
  
  FILTER (lang(?childLabel) = 'en')
}
```

This query does the following:
- Identifies a politician born on May 24, 1854.
- Finds children of this politician.
- Filters those children to include only those who are members of royalty.",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
129,1,train,Give me the associated musical artist of EarthGang.,SELECT ?result WHERE { <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?band a dbo:MusicalBand ;
        dbo:associatedMusicians ?artist .
  FILTER (str(?band) = ""EarthGang"")
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
715,25,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in Spanish Civil War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader ?office WHERE {
  # Find Carlos Franco Iribarrenegaray's resource
  dbr:Carlos_Franco_Iribarrenegaray dbo:positionHeld ?position .
  
  # Identify the office he led that is both a government agency and an organization
  ?position dbo:positionTitle ?office ;
            dbo:agent ?leader .

  FILTER EXISTS { ?office rdf:type dbo:GovernmentAgency . }
  FILTER EXISTS { ?office rdf:type dbo:Organization . }

  # Ensure he was a commander in the Spanish Civil War
  OPTIONAL {
    dbr:Carlos_Franco_Iribarrenegaray dbo:commanderOf ?civilWar .
    ?civilWar rdfs:label ""Spanish Civil War""@en .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
465,36,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Find Ercole II d'Este and his successor
  dbr:Ercole_II_d%27Este_Duke_of_Ferrara dbo:successor ?successor1 .
  
  # Find Charles Orlando, Dauphin of France, and his parent
  dbr:Charles_Orlando_dauphin_de_France dbo:parent ?parent .

  # The child of the parent is Charles Orlando himself
  ?child dbo:parent ?parent .
  FILTER (?child = dbr:Charles_Orlando_dauphin_de_France)

  # Find the successor of this child (Charles Orlando)
  ?child dbo:successor ?successor2 .

  # Ensure the successor is royalty
  ?successor1 a dbo:Monarch ;
              rdfs:label ?label1 .
  FILTER CONTAINS(LCASE(?label1), ""royalty"")

  # The final successor we are interested in is the one who is both a successor of Ercole II and a successor of Charles Orlando's parent's child
  FILTER (?successor1 = ?successor2)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
216,22,train,"Give me the player in Igor Bišćan and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?team
WHERE {
  # Igor Bišćan's team information
  dbr:Igor_Bišćan dbo:playsFor ?team .

  # Person born on 1983-12-20 with specified roles
  ?person a dbo:SoccerPlayer ;
          dbo:sportManagerOf ?team ;
          dbo:managerialCareerStartYear ?startYear ;
          dbo:birthDate ?birthDate .
  
  FILTER (?birthDate = ""1983-12-20""^^xsd:date)

  # Ensure the person is also a soccer manager and player
  OPTIONAL { ?person dbo:sportManagerOf ?team . }
  OPTIONAL { ?person dbo:managerialCareerStartYear ?startYear . }

}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
791,8,train,"Give me the child, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?childName
WHERE {
  ?emperor rdf:type dbo:Emperor .
  ?emperor rdfs:label ""Takakura""@en .
  
  ?emperor dbo:child ?child .
  ?child rdf:type dbo:RoyalFamilyMember .

  ?child rdfs:label ?childName .
  FILTER(LANG(?childName) = 'en')
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
965,15,train,Give me the spouse of the parent of Louise Mountbatten.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse
WHERE {
  ?louise a dbo:Person ;
          foaf:name ""Louise Mountbatten""@en .
  
  ?parent dbo:child ?louise .
  ?parent dbo:spouse ?spouse .
}",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
47,3,train,"Give me the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?operation dbo:partOfOperation ""Green Hunt"" .
  ?operation dbo:commander ?commander .
  ?commander a dbo:Politician .
}
```",1,2,2,1,1,3,3,71,0,0,104,0,0.0,0
926,39,train,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Beyhan Sultan and her parent Mustafa III
  dbr:Beyhan_Sultan dbo:parent dbr:Mustafa_III .

  # Successor of Mustafa III who is royalty
  ?successor dbo:predecessor dbr:Mustafa_III .
  ?successor a dbo:Monarch .

  # Child of the successor who is royalty
  ?successor dbo:child ?child .
  ?child a dbo:Monarch .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
456,23,train,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  ?movie dbo:starring dbr:Ross_Newton .
  ?movie a dbo:Film ;
         a dbo:TelevisionShow .
  
  ?actor dbo:starringIn ?movie .
  
  ?actor dbo:spouse ?spouse .
}
```",3,5,4,3,1,3,3,71,0,0,5,0,0.0,0
826,21,train,"Give me the spouse of the child of Johann Heinrich Appel and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v1 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse
WHERE {
  ?child dbo:parent dbr:Johann_Heinrich_Appel .
  ?spouse dbp:spouse ?child .
  
  OPTIONAL {
    ?predecessor dbo:successor dbr:Louis_IV,_Grand_Duke_of_Hesse .
    FILTER(?spouse = ?predecessor)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
329,17,train,"Give me the entity in Northern Ireland and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?northernIrelandEntity ?regionCountry
WHERE {
  # Find entities in Northern Ireland that are countries using WET
  ?northernIrelandEntity a dbo:Country ;
                        dbo:timeZone dbr:Western_European_Time ;
                        dbo:country dbr:Northern_Ireland .

  # Find the region of Northern Ireland and its country using WET
  ?regionCountry a dbo:Country ;
                dbo:timeZone dbr:Western_European_Time ;
                dbo:partOf dbr:United_Kingdom .
  
  FILTER(?northernIrelandEntity != ?regionCountry)
}
```",3,4,4,2,2,2,3,28,0,0,531,0,0.0,0
170,0,train,Give me the entity in Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
SELECT DISTINCT ?entity WHERE {
  ?entity dbo:country dbr:Russia .
}
```

This query selects distinct entities (`?entity`) that have a `dbo:country` property linking them to the DBpedia resource for Russia (`dbr:Russia`). This approach captures entities directly associated with Russia as their country.",1,1,2,1,1,2,3,28,0,0,29927,0,0.0,0
773,28,train,Give me the spouse of the father of Charles the Fat and parent of Charles the Fat and parent of Carloman of Bavaria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse
WHERE {
  ?father dbo:child dbr:Charles_the_Fat .
  ?father dbo:child dbr:Carloman_of_Bavaria .
  
  OPTIONAL { 
    ?father dbo:spouse ?spouse .
  }
}
```",4,4,5,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
433,3,train,Give me the persona of Paul Chambers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?property ?value
WHERE {
  VALUES ?subject { dbr:Paul_Chambers_(bassist) }
  
  ?subject ?property ?value .
  
  FILTER (
    ?property IN (dbo:birthDate, dbo:deathDate, dbo:occupation, dbo:notableWorks, dbo:instrument, dbo:genre, dbo:award)
  )
}
ORDER BY ?property
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
465,0,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
SELECT ?successor WHERE {
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ""Ercole II d'Este""@en .
  OPTIONAL { ?person dbo:predecessor ?ercole . }
  OPTIONAL { ?ercole dbo:successor ?successor . }
  FILTER EXISTS { ?ercole foaf:name ""Ercole II d'Este""@en }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
582,7,train,"Give me the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Hajime Moriyasu""@en .
  
  ?person dbo:memberOf|dbo:team ?team .
}
```",1,2,2,1,1,3,3,71,1,3,0,0.25,1.0,0.4
926,10,train,Give me the child of Ahmed III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Ahmed III has a child
  ?child dbo:parent dbr:Ahmed_III_of_the_Ottoman_Empire .
  
  # The same person is the father of Mahmud II
  ?father dbo:child dbr:Mahmud_II_of_the_Ottoman_Empire .
  
  # Ensure the child and father are the same individual
  FILTER (?child = ?father)
  
  # Bind the person variable to this individual
  BIND(?child AS ?person)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
433,4,train,"Give me the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  # Get birthplace of Paul Laurence Dunbar Chambers Jr.
  dbr:Paul_Laurence_Dunbar_Chambers_Jr. dbo:birthPlace ?birthPlace .

  # Find persons who are both musical artists and artists, born in the same place
  ?person a dbo:MusicalArtist ;
          a dbo:Artist ;
          dbo:birthPlace ?birthPlace .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
582,2,train,Give me the figure known as --10-19.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","SELECT ?entity WHERE {
  VALUES ?label { ""-10-19"" }
  OPTIONAL {
    ?entity rdfs:label ?label .
  }
  FILTER (lang(?label) = 'en')
}
```

This query attempts to find an entity whose label matches `""-10-19""` in English. If the identifier is part of a URI, you might need a different approach:

```sparql",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
645,12,train,Give me the military force of Spanish Civil War and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?leader
WHERE {
  # Find military forces involved in the Spanish Civil War
  ?militaryForce dbo:partOfMilitaryConflict dbr:Spanish_Civil_War .
  
  # Find the leader of the Ministry of the Army (Spain)
  OPTIONAL {
    ?ministry dbo:head ?leader ;
              rdfs:label ""Ministry of the Army""@en .
  }
}
```

### Explanation:
- **PREFIX**: Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT**: Choose distinct military forces and leaders to avoid duplicates.
- **WHERE Clause**:
  - The first pattern matches entities that are part of the Spanish Civil War.
  - The second pattern, within an `OPTIONAL` clause, identifies the leader of the Ministry of the Army.

This query should provide a list of military forces involved in the Spanish Civil War and the leader of the Ministry of the Army during the relevant period.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
83,8,train,Give me the party of the governor of Dilma Rousseff.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyLabel
WHERE {
  # Find governors during Dilma Rousseff's presidency (2011-2016)
  ?governor a dbo:Governor ;
            dbo:governsCountry dbr:Brazil ;
            dbo:termStart ?start ;
            dbo:termEnd ?end .
  
  # Ensure the governor's term overlaps with Dilma Rousseff's presidency
  FILTER (?start < ""2016-12-31T00:00:00Z""^^xsd:dateTime && 
          ?end > ""2011-01-01T00:00:00Z""^^xsd:dateTime)

  # Get the political party of the governor
  ?governor dbo:politicalParty ?party .

  # Label for the political party
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

  # Link to Dilma Rousseff as a reference point (optional, for context)
  OPTIONAL {
    ?dilma dbr:Dilma_Rousseff .
  }
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
987,36,train,"Give me the birth place of Dado Polumenta and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace ?country ?sportsEvent
WHERE {
  # Dado Polumenta's birthplace
  dbr:Dado_Polumenta dbo:birthPlace ?birthPlace .

  # Canicosa de la Sierra's region and country
  dbr:Canicosa_de_la_Sierra dbo:locatedIn ?region .
  ?region dbo:country ?country .

  # Time zone of Canicosa de la Sierra
  dbr:Canicosa_de_la_Sierra dbo:timeZone ?timeZone .

  # Sports event related to the time zone
  ?sportsEvent dbo:locationTimezone ?timeZone .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
83,6,train,Give me the ruling party in Fortaleza and party of Alceu Collares.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alceu_Collares> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Fortaleza> <http://dbpedia.org/property/leaderParty> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rulingPartyInFortalezaLabel ?alceuCollaresPartyLabel
WHERE {
  # Find the ruling party in Fortaleza
  ?fortaleza dbo:government ?government .
  ?government dbo:partyLeader ?leader .
  ?leader dbo:affiliation ?rulingPartyInFortaleza .
  
  SERVICE <http://dbpedia.org/sparql> {
    ?rulingPartyInFortaleza rdfs:label ?rulingPartyInFortalezaLabel .
    FILTER (lang(?rulingPartyInFortalezaLabel) = 'en')
  }
  
  # Find the party of Alceu Collares
  dbr:Alceu_Collares dbo:politicalAffiliation ?alceuCollaresParty .
  
  SERVICE <http://dbpedia.org/sparql> {
    ?alceuCollaresParty rdfs:label ?alceuCollaresPartyLabel .
    FILTER (lang(?alceuCollaresPartyLabel) = 'en')
  }
}
```

### Explanation:
- **Ruling Party in Fortaleza:** 
  - We assume that the government of Fortaleza has a `partyLeader` and an associated `affiliation`.
  
- **Alceu Collares' Party:**
  - Directly query for Alceu Collares' political affiliation.

- **SPARQL Service:**
  - Use SPARQL service to fetch labels in English for better readability.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
495,10,train,Give me the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchildLabel
WHERE {
  ?princess dbr:Princess_Pauline_of_W%C3%BCrttemberg ;
            (dbo:mother|dbo:father) ?parent .
  
  ?parent dbo:child ?grandchild .

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
976,4,train,"Who is the leader, that is a politician, of Grand National Assembly of Turkey?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderName WHERE {
  # Identify the Grand National Assembly of Turkey
  dbr:Grand_National_Assembly_of_Turkey dbo:head ?leader .
  
  # Ensure that the leader is a politician
  ?leader rdf:type dbo:Politician .

  # Retrieve the name or label of the leader
  ?leader rdfs:label ?leaderName .
  
  FILTER (lang(?leaderName) = 'en')
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
826,10,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  ?louisIV a dbo:GrandDuke ;
           dbp:succession ""Hesse"" ;
           dbo:predecessor ?predecessor .
  
  ?predecessor dbo:spouse ?annaMagdalenaAppel .

  FILTER (str(?annaMagdalenaAppel) = ""Anna Magdalena Appel"")
}
```

### Explanation

- **PREFIX**: Define prefixes for DBpedia ontology and properties.
- **SELECT**: We are interested in the predecessor of Louis IV.
- **WHERE Clause**:
  - Identify Louis IV as a `GrandDuke` with a specific succession context (`Hesse`).
  - Use `dbo:predecessor` to find his predecessor.
  - Ensure this predecessor is linked as a spouse to Anna Magdalena Appel using `dbo:spouse`.
- **FILTER**: Confirm the spouse's name matches ""Anna Magdalena Appel"".

This query should return the predecessor of Louis IV, Grand Duke of Hesse, who was also married to Anna Magdalena Appel.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
508,3,train,"Give me the commander, that is a politician, in 1939–1940 Winter Offensive.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderName WHERE {
  ?offensive dbo:event = dbr:Winter_Offensive_1939%E2%80%931940 .
  ?offensive dbo:commander ?person .
  ?person rdfs:label ?commanderName .
  FILTER (CONTAINS(LCASE(?commanderName), ""commander"") || CONTAINS(LCASE(?commanderName), ""general"")) .
  
  ?person dbo:occupation dbr:Politician .
}
```",1,2,2,1,1,3,2,20,0,0,6,0,0.0,0
791,30,train,"Give me the spouse of Taira no Tokuko and father of the child, that is a royalty, of Emperor Takakura and predecessor of Emperor Antoku.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Taira no Tokuko's spouse
  dbr:Taira_no_Tokuko dbo:spouse ?spouse .

  # The spouse is the father of a child who is royalty and whose mother is Emperor Takakura
  ?child dbo:parent ?spouse ;
        dbo:mother dbr:Emperor_Takakura .
  
  # The child must be royalty
  ?child rdf:type dbo:RoyalFamily .

  # The spouse is the predecessor of Emperor Antoku
  ?spouse dbo:predecessor dbr:Emperor_Antoku .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
976,12,train,Give me the office of Meral Akşener and office of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office
WHERE {
  VALUES ?person { 
    dbr:Meral_Akşener 
    dbr:Naci_Bostancı 
  }
  
  ?person dbo:positionHeld ?office .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
83,12,train,Give me the party of the governor of Dilma Rousseff and ruling party in Fortaleza.,SELECT ?result WHERE { <http://dbpedia.org/resource/Fortaleza> <http://dbpedia.org/property/leaderParty> ?result . <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?dilmaParty ?fortalezaRulingParty
WHERE {
  # Dilma Rousseff's governorship and party affiliation
  ?governorship a dbo:Governorship ;
                dbo:person ?dilma ;
                dbo:party ?dilmaParty .
  
  FILTER (?dilma = dbpedia:Dilma_Rousseff) .

  # Time period of Dilma Rousseff's governorship
  ?governorship dbo:startDate ?startYear ;
               dbo:endDate ?endYear .

  # Fortaleza's ruling party during the same time frame
  ?fortalezaRulingParty a dbo:PoliticalParty ;
                        dbp:ruledCity dbpedia:Fortaleza ;
                        dbp:ruleStartDate ?ruleStartYear ;
                        dbp:ruleEndDate ?ruleEndYear .
  
  FILTER (?startYear <= ?ruleEndYear && ?endYear >= ?ruleStartYear)
}
```

### Explanation

- **PREFIX:** Define prefixes for ontology and property namespaces.
- **SELECT DISTINCT:** Retrieve distinct political parties to avoid duplicates.
- **WHERE Clause:**
  - Identify Dilma Rousseff's governorship and her party affiliation using `dbo:Governorship` and `dbo:party`.
  - Use a filter to ensure the person is Dilma Rousseff.
  - Capture the start and end dates of her governorship.
  - Find Fortaleza’s ruling parties during the same period by matching date ranges.

This query should effectively retrieve the political party of Dilma Rousseff when she was governor and the ruling party in Fortaleza during that time frame.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
976,26,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?mayorOffice
WHERE {
  ?mayor a dbo:Mayor ;
         dbo:nationality dbr:Turkey ;
         dbo:office ?mayorOffice .
  
  ?mayor rdf:type dbo:Politician ;
         dbo:party ?politicalParty .

  ?politicalParty a dbo:PoliticalParty, dbo:Organization ;
                  rdfs:label ""Millet İttifakı""@en ;
                  dbo:nationality dbr:Turkey .

}
```",3,9,4,3,1,3,3,71,0,0,3,0,0.0,0
715,31,train,"Give me the commander in the force, that is a military conflict, of the native of Morocco and commander in Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander (SAMPLE(?conflict) AS ?militaryConflict)
WHERE {
  ?commander a dbo:MilitaryPerson ;
             dbo:nationality dbr:Morocco .
  
  ?commander dbo:commanderOf ?conflict .
  FILTER EXISTS { ?conflict a dbo:MilitaryConflict } .

  ?commander dbo:commanderOf dbr:Spanish_Civil_War .
}
ORDER BY ?commander
LIMIT 10",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
445,5,train,Give me the establishment of 1820-03-10.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?name WHERE {
  ?entity a dbo:Organisation .
  ?entity dbo:foundingDate ?date .
  ?entity rdfs:label ?name .
  FILTER (LANG(?name) = 'en') .
  FILTER (?date = ""1820-03-10""^^xsd:date)
}
ORDER BY ?name
```

### Explanation:

- **PREFIX:** Define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT:** Choose variables `?entity` (the entity itself) and `?name` (its label or name in English).
- **WHERE Clause:**
  - Ensure the entity is of type `dbo:Organisation`.
  - Match entities with a `dbo:foundingDate`.
  - Retrieve the English label (`rdfs:label`) for readability.
- **FILTER:** 
  - Restrict results to those where the founding date matches exactly March 10, 1820.
  - Ensure labels are in English.

This query will return organizations established on that specific date along with their names and DBpedia resource links.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
917,21,train,"Give me the child of Kekūanāoʻa and parent of the child, that is a royalty, of Kamehameha IV.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?parent
WHERE {
  # Find the child of Kekūanāoʻa
  dbr:Kekūanāoʻa dbo:child ?child .

  # Ensure the parent of this child is a royalty and related to Kamehameha IV
  ?child dbo:parent ?parent .
  ?parent dbo:royaltyOf dbr:Kamehameha_IV .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
507,0,train,Give me the spouse of Anne V. Coates.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Anne_V._Coates> dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
987,23,train,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandBirthPlace
WHERE {
  # Step 1: Identify Dado Pršo
  ?dado a dbo:Person ;
        foaf:name ""Dado Pršo"" .

  # Step 2: Find the band associated with Dado Pršo as an artist
  ?dado dbp:memberOf ?band .

  # Step 3: Ensure the band is both an Artist and a Musical Artist
  ?band a dbo:Artist ;
        a dbo:MusicalArtist .

  # Step 4: Retrieve the birth place of this band
  ?band dbo:birthPlace ?bandBirthPlace .
}
```",3,6,4,3,1,3,3,71,0,0,6,0,0.0,0
382,10,train,"Give me the award of the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award WHERE {
  # Match Harry Combes as a coach
  dbr:Harry_Combes dbo:occupation dbr:Coach .
  
  OPTIONAL {
    # Match awards related to his role as a college coach
    dbr:Harry_Combes dbo:collegeCoachAward ?award .
  }
  
  OPTIONAL {
    # Match awards related to his general coaching career
    dbr:Harry_Combes dbo:coachAward ?award .
  }
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
273,11,train,Give me the parent of Gianni Agnelli and spouse of the child of Giovanni Agnelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gianni_Agnelli> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parentOfGianniAg (SAMPLE(?spouseOfChild) AS ?spouse)
WHERE {
  # Find Gianni Agnelli's parent
  ?gianniAg dbo:birthName ""Gianni Agnelli"" .
  OPTIONAL { 
    ?parentOfGianniAg dbo:child ?gianniAg .
  }
  
  # Find Giovanni Agnelli's child
  ?giovanniAg dbo:birthName ""Giovanni Agnelli"" .
  OPTIONAL {
    ?childOfGiovanniAg dbo:parent ?giovanniAg .
  }

  # Find the spouse of Giovanni Agnelli's child
  OPTIONAL {
    ?spouseOfChild foaf:marrigePartner ?childOfGiovanniAg .
  }
  
  FILTER(?parentOfGianniAg != ?giovanniAg) # Ensure they are different individuals
}
GROUP BY ?parentOfGianniAg",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
365,1,train,Give me the spouse of Olha Petliura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Olha_Petliura> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?olha a dbo:Person ;
        foaf:name ""Olha Petliura""@en .
  ?olha dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
926,33,train,Give me the successor of the child of the spouse of Şermi Kadın and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v2 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?spouse dbo:spouse ?şermiKadin .
  FILTER(?şermiKadin = dbpedia:Şermi_Kadın) .

  ?child dbo:parent ?spouse ;
         dbo:parent ?fatherOfMahmudII .

  ?fatherOfMahmudII foaf:name ""Mahmud II""@en .

  ?successor dbo:predecessor ?child .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
102,11,train,Give me the manager of the player in Ellie Roebuck and native of Dewsbury.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Dewsbury> . <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?managerName
WHERE {
  ?player a dbo:FootballPlayer ;
          foaf:name ""Ellie Roebuck""@en ;
          dbo:nativePlace ?nativePlace .
  
  ?nativePlace rdfs:label ""Dewsbury""@en .

  ?player dbo:managedBy ?manager .
  ?manager foaf:name ?managerName .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
987,25,train,"Give me the entity in the region, that is a country, of Central European Time and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?region dbo:timeZone dbr:Central_European_Time .
  ?country dbo:partOfRegion ?region ;
           a dbo:Country .
  OPTIONAL { ?person dbo:birthPlace ?country . }
  FILTER EXISTS { ?person rdfs:label ""Moamer Kasumović""@en } .
}
```

### Explanation:

- **PREFIXes:** Define common prefixes for DBpedia ontology and properties.
- **SELECT ?country:** We want to retrieve the country that matches our criteria.
- **WHERE Clause:**
  - `?region dbo:timeZone dbr:Central_European_Time .` identifies regions with CET timezone.
  - `?country dbo:partOfRegion ?region ; a dbo:Country .` finds countries within those regions and ensures they are classified as countries.
  - `OPTIONAL { ?person dbo:birthPlace ?country . }` links the birthplace of Moamer Kasumović to the country.
  - `FILTER EXISTS { ?person rdfs:label ""Moamer Kasumović""@en } .` ensures that we are considering the correct person.

This query should effectively retrieve the desired entity based on your question's requirements.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
170,5,train,Give me the profession of John Scholey.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  ?person foaf:name ""John Scholey""@en .
  ?person dbo:occupation ?profession .
}
```

This query selects the `?profession` variable where there is a person (`?person`) with the name ""John Scholey"" and an associated occupation.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
216,6,train,Give me the party of Campbell Newman and office of Tim Nicholls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?newmanParty ?nichollsParty
WHERE {
  ?newman a dbo:Person ;
          foaf:name ""Campbell Newman""@en .
  ?newman dbo:partyAffiliation ?newmanParty .

  ?nicholls a dbo:Person ;
            foaf:name ""Tim Nicholls""@en .
  ?nicholls dbo:partyAffiliation ?nichollsParty .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
274,5,train,"Who is the actor, that is a musical artist, of Imagine the Sound?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName WHERE {
  # Link to ""Imagine the Sound""
  dbr:Imagine_the_Sound dbo:performer ?actor .
  
  # Ensure the actor is a musical artist
  ?actor rdf:type dbo:MusicalArtist .

  # Retrieve the name of the actor
  ?actor rdfs:label ?actorName .
  
  FILTER (lang(?actorName) = 'en')
}
```",1,2,2,1,1,2,3,28,0,0,4,0,0.0,0
495,12,train,Give me the father of the child of Princess Charlotte of Saxe-Hildburghausen and child of Frederick I of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_I_of_Württemberg> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?father
WHERE {
  # Find Child A (child of Princess Charlotte)
  ?childA dbo:parent dbr:Princess_Charlotte_of_Saxe-Hildburghausen .
  
  # Find Father of Child A
  ?childA dbo:father ?father .

  # Find Child B (child of Frederick I of Württemberg)
  ?childB dbo:parent dbr:Friedrich_I,_Duke_of_W%C3%BCrttemberg .
  
  # Ensure the father is the same for both children
  ?childB dbo:father ?father .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
433,35,train,"Give me the professional in the profession of Bob Marley and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional ?associatedArtist
WHERE {
  # Find professionals in the same field as Bob Marley
  dbr:Bob_Marley dbo:profession dbr:Musical_artist .
  
  # Find other musicians (professionals) similar to Bob Marley
  ?professional dbo:profession dbr:Musical_artist .

  # Ensure Paul Laurence Dunbar Chambers Jr. is a musical artist and an artist
  dbr:Paul_Laurence_Dunbar_Chambers_Jr_1935-2006 dbo:occupation dbr:Musical_artist ;
                                                dbo:occupation dbr:Artist .
  
  # Find associations between the professional and Paul Laurence Dunbar Chambers Jr.
  ?professional dbo:associatedMusicalArtist dbr:Paul_Laurence_Dunbar_Chambers_Jr_1935-2006 .

  OPTIONAL {
    ?professional dbo:associatedMusicalArtist ?associatedArtist .
  }
}
ORDER BY ?professional
```",4,6,5,2,2,3,3,71,0,0,16,0,0.0,0
382,8,train,Give me the landmark at elevation of the award of Harry Combes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark WHERE {
  # Find Harry Combes and his award
  ?person a dbo:Person ;
          foaf:name ""Harry Combes"" .
  
  ?award dbo:recipient ?person ;
         dbo:elevation ?elevation .

  # Find the landmark at this elevation
  ?location dbo:elevation ?elevation ;
            dbo:landmark ?landmark .

}
```

This query assumes:
- `dbo:Person` is used to identify individuals.
- `foaf:name` is used for names (assuming FOAF vocabulary).
- `dbo:recipient` links an award to its recipient.
- `dbo:elevation` is a property that can be associated with both awards and locations.
- `dbo:landmark` identifies landmarks at specific locations.",2,2,3,2,1,3,2,20,0,0,727,0,0.0,0
507,24,train,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and professional in Film director, television director.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?directorName
WHERE {
    ?movie a dbo:Film .
    ?movie dbo:starring dbr:Beryl_Reid .
    ?movie dbo:director ?director .

    ?director foaf:name ?directorName .
    ?director dbo:profession dbr:Film_director .
    ?director dbo:profession dbr:Television_director .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
216,14,train,Give me the office of Tim Nicholls and party of the awardee of Australian Defence Medal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?office ?party
WHERE {
  dbr:Tim_Nicholls dbo:office ?office .
  ?person dbo:award dbr:Australian_Defence_Medal .
  OPTIONAL { ?person dbo:partyAffiliation ?party . }
}",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
892,16,train,Give me the award of the member of E-girls.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?result . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?memberName ?awardName
WHERE {
  # Find members of E-girls
  ?member dbo:member dbr:E-girls.
  
  # Get the name of each member
  ?member rdfs:label ?memberName.
  
  # Filter to ensure labels are in English
  FILTER (lang(?memberName) = 'en')
  
  # Find awards received by these members
  ?member dbo:awardReceived ?award.
  
  # Get the name of each award
  ?award rdfs:label ?awardName.
  
  # Filter to ensure award labels are in English
  FILTER (lang(?awardName) = 'en')
}
ORDER BY ?memberName ?awardName
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
917,27,train,"Give me the child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild
WHERE {
  # Step 1: Identify Kamehameha III
  dbr:Kamehameha_III a dbo:Monarch ;
                     dbo:spouse ?spouse .

  # Step 2: Find his children
  ?child dbo:parent dbr:Kamehameha_III ;
         dbo:royaltyStatus ?royaltyStatus .

  # Step 3: Filter for royalty status
  FILTER EXISTS { ?royaltyStatus a dbo:RoyalTitle }

  # Step 4: Identify their fathers
  ?father dbo:child ?child .

  # Step 5: Find the children of these fathers (grandchildren)
  ?grandchild dbo:parent ?father .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
465,3,train,"Give me the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  dbpedia:Ercole_II_d%27Este_Duke_of_Ferrara dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
865,7,train,Who is the father of Abul Maal Abdul Muhith?,SELECT ?result WHERE { <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherName WHERE {
  ?person dbp:name ""Abul Maal Abdul Muhith""@en .
  ?person dbo:spouse ?spouse .
  OPTIONAL { ?spouse dbo:child ?child . }
  FILTER(?child = ?person)
  ?spouse dbo:parent ?father .
  ?father dbp:name ?fatherName .
}
```

### Explanation:

- **PREFIX:** Define prefixes for ontology and properties.
- **SELECT:** Choose the variable `?fatherName` to return the father's name.
- **WHERE Clause:**
  - Identify the person with the name ""Abul Maal Abdul Muhith"".
  - Use the spouse relationship to find children, assuming a family structure where spouses have children.
  - Filter to ensure the child is the specified person.
  - Find the parent of the spouse, which should be the father.

This query assumes that the DBpedia data model includes relationships for spouses and parents in a way that allows us to deduce the father from the spouse's parentage.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
445,10,train,Give me the entity in United Kingdom and entity in England.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?ukEntity ?englandEntity
WHERE {
  ?ukEntity dbo:country dbr:United_Kingdom .
  OPTIONAL { ?ukEntity dbp:locatedIn dbr:England . }
  
  ?englandEntity dbo:country dbr:United_Kingdom .
  ?englandEntity dbp:locatedIn dbr:England .
}
```

This query does the following:
- Selects distinct entities (`?ukEntity` and `?englandEntity`) that are located in the United Kingdom.
- Uses an optional clause to find UK entities specifically located in England, though this is not strictly necessary for the second part of the question.
- Ensures that `?englandEntity` is explicitly located within England.",2,2,3,1,2,3,3,71,0,0,102,0,0.0,0
839,6,train,Give me the member of Böhse Onkelz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?band a dbo:Band ;
        rdfs:label ""Böhse Onkelz""@en .
  
  ?band dbo:bandMember ?member .
}
```

### Explanation

- **Prefixes:** We define prefixes for `dbo` (DBpedia Ontology) and `dbp` (DBpedia Properties).
- **SELECT Clause:** We select the variable `?member`, which will hold the members of the band.
- **WHERE Clause:**
  - The first pattern identifies the band ""Böhse Onkelz"" by matching its label in English (`rdfs:label ""Böhse Onkelz""@en`).
  - The second pattern uses the `dbo:bandMember` property to find all members of this band.

This query will return the DBpedia resources representing the members of Böhse Onkelz.",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
978,10,train,Give me the person born as the name of Chicane (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
SELECT ?birthName WHERE {
  ?chicane rdfs:label ""Chicane""@en .
  ?chicane dbo:birthName ?birthName .
  FILTER(LANG(?birthName) = 'en')
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
329,7,train,Give me the birthplace of Eric Cross (writer) and entity in Northern Ireland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Writer ;
          foaf:name ""Eric Cross"" ;
          dbo:nationality dbr:Northern_Ireland .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
445,24,train,Give me the death place of the awardee of Royal Astronomical Society and entity in United Kingdom.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?deathPlace
WHERE {
  ?person dbo:awardReceived dbr:Royal_Astronomical_Society .
  ?person dbo:deathPlace ?deathPlace .
  FILTER EXISTS { ?person dbo:country dbr:United_Kingdom . }
}
```

This query does the following:
- Selects distinct death places (`?deathPlace`) of individuals.
- Matches individuals who have received an award from the Royal Astronomical Society.
- Ensures these individuals are associated with the United Kingdom as their country.",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
170,8,train,Give me the entity in the work of International Energy Agency.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work WHERE {
  # Identify the International Energy Agency entity in DBpedia
  dbr:International_Energy_Agency a dbo:Organization .

  # Find works associated with the IEA, assuming they are linked via a property like 'publication' or similar
  OPTIONAL { 
    dbr:International_Energy_Agency dbo:publication ?work .
  }
  
  # Filter to ensure we only get entities that are indeed publications or reports
  FILTER EXISTS {
    ?work a dbo:Publication .
  }
}
ORDER BY ?work",2,2,3,2,1,2,3,28,0,0,29927,0,0.0,0
36,14,train,Give me the person born in the birth year of Deanne Bray and actor of Being Mrs Elliot.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v2 . },"```sparql
SELECT ?personName
WHERE {
  # Find Deanne Bray's birth year
  dbpedia:Deanne_Bray dbo:birthYear ?deanneBirthYear .

  # Find actors of ""Being Mrs Elliot""
  dbpedia:Being_Mrs_Elliot dbo:starring ?actor .
  
  # Match the actor's birth year with Deanne Bray's birth year
  ?actor foaf:name ?personName ;
         dbo:birthYear ?actorBirthYear .
  
  FILTER (?deanneBirthYear = ?actorBirthYear)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
212,0,train,Give me the birthplace of Corp Sayvee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Corp_Sayvee> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Corp Sayvee""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```

This query:
- Uses `dbo:Person` to ensure we are dealing with a person entity.
- Matches the name ""Corp Sayvee"" using the `foaf:name` property, assuming it is available in English (`@en`).
- Retrieves the birthplace using the `dbo:birthPlace` property.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
892,20,train,Give me the landmark at elevation of the award of Anna Ishii and entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark ?italianEntity
WHERE {
  # Find Anna Ishii's award and its elevation
  ?award dbo:recipient dbr:Anna_Ishii .
  ?award dbo:elevation ?elevation .

  # Find landmarks with the same elevation as the award
  ?landmark dbo:elevation ?sameElevation .
  FILTER(?elevation = ?sameElevation)

  # Find entities in Italy
  ?italianEntity dbo:location dbr:Italy .
}
```",3,3,4,2,2,3,3,71,0,0,11,0,0.0,0
791,16,train,"Give me the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild
WHERE {
  # Define Emperor Go-Shirakawa
  ?emperor rdfs:label ""Emperor Go-Shirakawa""@en .
  
  # Find his child
  ?emperor dbo:spouse|dbo:child ?parent1 .
  
  # Find the grandchild (child of the child)
  ?parent1 dbo:spouse|dbo:child ?grandchild .

  # Ensure the grandchild is an office holder and a royalty
  ?grandchild dbo:officeHolder dbp:true .
  ?grandchild rdf:type dbo:Monarch .
}
```

This query does the following:
- Identifies Emperor Go-Shirakawa using his label.
- Finds his children (`?parent1`).
- Finds the grandchildren (`?grandchild`) of these children.
- Filters to ensure that the grandchild is both an office holder and a member of royalty.",2,4,3,2,1,3,3,71,0,0,4,0,0.0,0
465,22,train,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor
WHERE {
  # Find a child of Anne of Brittany who is royalty
  ?child dbo:parent dbr:Anne_of_Brittany ;
         rdf:type dbo:Monarch .

  # Ensure this child is the successor of Ercole II d'Este
  ?ercoleSuccessor dbo:predecessor dbr:Ercole_II_d%27Este_Duke_of_Ferrara ;
                   dbo:successor ?child .

  # Find the successor of this child
  ?child dbo:successor ?successor .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
791,31,train,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of Emperor Antoku.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse
WHERE {
  # Find Emperor Takakura
  dbr:Takakura_of_Japan dbo:spouse ?firstSpouse .

  # Find the spouse of the first spouse (spouse of the spouse)
  ?firstSpouse dbo:spouse ?spouseOfSpouse .

  # Ensure the spouse of the spouse is royalty
  ?spouseOfSpouse a dbo:Monarch .

  # Check if this person has a predecessor who is Emperor Antoku
  ?spouseOfSpouse dbo:predecessor dbr:Antoku .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
236,12,train,Give me the party member of Federalist Party and party member of the administration of James Madison.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Federalist_Party> . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . ?result <http://dbpedia.org/ontology/party> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?partyMemberLabel ?administrationRoleLabel
WHERE {
  # Find members of the Federalist Party
  ?person dbo:partyMember dbr:Federalist_Party .
  
  # Find roles in James Madison's administration
  ?person dbo:headOfState ?role .
  ?role dbo:president dbr:James_Madison .

  # Get labels for better readability
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

4. **Optimize Query Logic:** The query uses `DISTINCT` to ensure unique results and leverages the `SERVICE wikibase:label` to fetch human-readable labels.

5. **Validate Completeness and Precision:** This query captures individuals who were both members of the Federalist Party and served in James Madison's administration, aligning with the question's requirements.",3,3,4,2,2,3,2,20,0,0,19,0,0.0,0
839,17,train,"Give me the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?band
WHERE {
  ?band rdf:type dbo:MusicalArtist .
  ?band dbo:musicalArtist ?musician .
  ?musician rdf:type dbo:Musician .
}
```",2,3,3,2,1,3,3,71,0,0,3643,0,0.0,0
892,37,train,Give me the landmark at elevation of the award of the member of E-girls and entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark ?elevation
WHERE {
  # Find members of E-girls and their awards
  ?member dbo:memberOf dbr:E-girls .
  ?member dbo:awardReceived ?award .

  # Find entities in Province of Reggio Emilia
  ?entity dbo:locatedIn dbr:Province_of_Reggio_Emilia .

  # Link award to a landmark by elevation
  ?landmark dbo:elevation ?elevation .
  FILTER EXISTS { ?award dbo:relatedTo ?landmark }

  OPTIONAL {
    ?entity dbo:relatedTo ?landmark .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
329,12,train,Give me the entity in United Kingdom and birthplace of Eric Cross (writer) and entity in Northern Ireland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace ?ukEntity ?niEntity
WHERE {
  # Find Eric Cross's birthplace
  dbr:Eric_Cross_(writer) dbo:birthPlace ?birthPlace .

  # Find an entity in the United Kingdom
  ?ukEntity dbo:country dbr:United_Kingdom .
  
  # Find an entity in Northern Ireland
  ?niEntity dbo:country dbr:Northern_Ireland .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
170,7,train,Give me the entity in Russia and domain of Mayor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?mayorName WHERE {
  ?entity dbo:country dbr:Russia .
  OPTIONAL { ?entity dbo:positionTitle dbp:Mayor . }
  OPTIONAL { ?entity foaf:name ?mayorName . }
}
```",2,2,3,1,2,2,3,28,99,51944,0,0.0019022731203043636,1.0,0.0037973226957155456
826,19,train,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?spouse
WHERE {
  # Find Louis II, Grand Duke of Hesse and his successor
  dbr:Louis_II,_Grand_Duke_of_Hesse a dbo:Monarch ;
    dbo:successor ?successor .

  # Find Johann Heinrich Appel's child
  ?appelChild dbo:parent dbr:Johann_Heinrich_Appel ;
              dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
826,36,train,"Give me the spouse of Anna Magdalena Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor
WHERE {
  # Anna Magdalena Appel's spouse
  dbr:Anna_Magdalena_Appel dbo:spouse dbr:Johann_Sebastian_Bach .

  # Louis IV, Grand Duke of Hesse's child
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:child ?child .

  # Parent of that child
  ?child dbo:parent ?parent .

  # Predecessor of the parent
  ?parent dbo:predecessor ?predecessor .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
329,1,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity
WHERE {
  ?entity (dbo:country|dbp:location) dbr:United_Kingdom .
}
```",1,1,2,1,1,2,3,28,42999,2111,0,0.9532032808689869,1.0,0.9760410400753611
917,35,train,"Give me the child of the father of Kamehameha IV and parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Kamehameha IV and his father
  dbr:Kamehameha_IV dbo:father ?father .
  
  # The child of the father is Kamehameha IV himself
  ?child dbo:father ?father .
  FILTER (?child = dbr:Kamehameha_IV)
  
  # The parent of the child (Kamehameha IV) is his father
  ?parent dbo:child ?child .
  FILTER (?parent = ?father)

  # Ensure the parent is royalty
  ?parent a dbo:Monarch .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
826,12,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?person (CASE WHEN ?relation = ""Predecessor"" THEN ?predecessor ELSE ?successor END AS ?relatedPerson)
WHERE {
  # Predecessor of Louis IV, Grand Duke of Hesse
  { 
    ?person dbo:predecessor dbr:Louis_IV,_Grand_Duke_of_Hesse .
    BIND(""Predecessor"" AS ?relation)
    BIND(?person AS ?predecessor)
    OPTIONAL { ?person dbo:successor ?successor }
  }

  # Successor of Louis II, Grand Duke of Hesse
  UNION 
  {
    ?person dbo:successor dbr:Louis_II,_Grand_Duke_of_Hesse .
    BIND(""Successor"" AS ?relation)
    OPTIONAL { ?person dbo:predecessor ?predecessor }
    BIND(?person AS ?successor)
  }

}
ORDER BY ?relatedPerson
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
715,13,train,Give me the commander in the force of Francisco Largo Caballero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?role
WHERE {
  dbr:Fran%C3%A7ois_Largo_Caballero dbo:positionHeld ?role .
  FILTER (CONTAINS(LCASE(STR(?role)), ""commander"") || CONTAINS(LCASE(STR(?role)), ""leader""))
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT**: We are interested in the `?role` variable, which represents the position or role held by Francisco Largo Caballero.
- **WHERE Clause**:
  - `dbr:Fran%C3%A7ois_Largo_Caballero dbo:positionHeld ?role`: This pattern matches any roles or positions held by Francisco Largo Caballero.
  - **FILTER**: We use a filter to narrow down the results to those containing terms like ""commander"" or ""leader"", which are relevant to your query about his command role.

This query should help identify any documented leadership or command roles associated with Francisco Largo Caballero in DBpedia.",2,2,3,2,1,3,3,71,0,0,28,0,0.0,0
382,14,train,"Give me the landmark at elevation of the award of the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark WHERE {
  # Identify Harry Combes
  ?person a dbo:Person ;
          foaf:name ""Harry Combes""@en .
  
  # Find his role as a coach
  ?person dbo:occupation [
    a dbo:Coach ;
    dbo:field dbr:Colegial_American_football ; # Assuming college football, adjust if needed
    dbo:award ?award .

  # Get the location of the award event
  OPTIONAL {
    ?award dbo:location ?landmark .
  }
}

FILTER EXISTS { ?person dbo:occupation [
    a dbo:Coach ;
    dbo:field dbr:Colegial_American_football ; # Adjust field if necessary
] }",3,5,4,3,1,3,2,20,0,0,727,0,0.0,0
865,16,train,"Who is the child, that is a politician, of the spouse of Syeda Shahar Banu?",SELECT ?result WHERE { <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?syeda a dbo:Person ;
         foaf:name ""Syeda Shahar Banu""@en .
  
  ?spouse dbo:spouse ?syeda ;
          dbo:spouse ?syeda2 .

  ?child dbo:parent ?spouse ;
         a dbo:Politician .

}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
170,9,train,Give me the domain of Mayor and birth place of Era Ziganshina.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?mayorDomain ?birthPlace
WHERE {
  # Find the domain of Mayor
  ?instance rdfs:label ""Mayor""@en .
  ?instance rdf:type ?mayorDomain .

  # Find the birth place of Era Ziganshina
  ?eraZiganshina rdfs:label ""Era Ziganshina""@en .
  ?eraZiganshina dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,2,3,28,1,4,0,0.2,1.0,0.33333333333333337
606,11,train,"Give me the birthplace of Charles I. Barber and figure known as the nickname of DeKalb, Illinois.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I._Barber> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?v2 . }","SELECT ?birthPlace ?nickname WHERE {
  # Part for Charles I. Barber's birthplace
  { 
    ?person dbo:birthName ""Charles I. Barber""@en .
    ?person dbo:birthPlace ?birthPlace .
    FILTER(LANG(?birthPlace) = 'en')
  }
  
  UNION
  
  # Part for DeKalb, Illinois nickname
  {
    dbpedia:DeKalb_Illinois rdfs:label ?nickname .
    FILTER(CONTAINS(LCASE(?nickname), ""nickname"") || CONTAINS(LCASE(?nickname), ""known as""))
    FILTER(LANG(?nickname) = 'en')
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
715,19,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?abdElKrimCommander ?spanishCivilWarCommander
WHERE {
  # Find the military conflict associated with Abd el-Krim and his commander role
  OPTIONAL {
    ?conflict dbo:commander ?abdElKrimCommander .
    ?abdElKrimCommander dbo:spouse dbr:Abd_el-Krim .
  }

  # Find commanders in the Spanish Civil War
  ?spanishCivilWarCommander dbo:participatedInMilitaryConflict dbr:Spanish_Civil_War ;
                          dbo:role ""commander""^^xsd:string .
}
```

### Explanation:

- **Prefixes:** Defined for DBpedia ontology and resources.
- **SELECT DISTINCT:** Ensures unique results for commanders.
- **OPTIONAL Clause:** Used to find Abd el-Krim's commander role, allowing the query to return results even if this information is missing.
- **FILTER/Role Check:** The role of ""commander"" in the Spanish Civil War is specified using a literal with datatype `xsd:string`.

This query will provide the commanders associated with Abd el-Krim and those involved as commanders in the Spanish Civil War.",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
102,6,train,Give me the native of Dewsbury and manager of Sheffield United W.F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Sheffield_United_W.F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Dewsbury> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name
WHERE {
  ?person dbo:nativePlace dbr:Dewsbury .
  ?person foaf:name ?name .
  
  OPTIONAL { 
    ?managerPosition dbo:agent ?person ;
                     dbo:position ""Manager""@en .
    ?team dbr:Sheffield_United_Women_F.C. ;
          dbo:manager ?managerPosition .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
935,8,train,Give me the headquarter of the office of Sanaullah Khan Zehri.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?headquarters
WHERE {
  ?person foaf:name ""Sanaullah Khan Zehri""@en .
  ?person dbo:office ?office .
  ?office dbo:headquarters ?headquarters .
}
```

5. **Optimize Query Logic:** The query is straightforward and directly maps to the question's requirements.

6. **Validate Completeness and Precision:** Ensure that all necessary properties are included, and the query accurately reflects the question's intent.",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
281,13,train,"Give me the awardee of Medal bar and commander in the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?medalAwardee ?commanderRole ?event
WHERE {
  # Roy Boehm's information
  dbr:Roy_Boehm a dbo:Person .

  # Find events where Roy Boehm was involved as a commander in a military conflict
  ?event dbo:participant dbr:Roy_Boehm ;
         a dbo:MilitaryConflict, dbo:Event .

  OPTIONAL {
    # Find the Medal bar awardee related to Roy Boehm
    ?medalAwardee dbo:recipient dbr:Roy_Boehm ;
                 dbo:award dbr:Medal_bar .
  }

  OPTIONAL {
    # Find the commander role of Roy Boehm in the event
    ?commanderRole dbo:agent dbr:Roy_Boehm ;
                   dbo:event ?event .
  }
}",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
839,23,train,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandName
WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Kevin Russell"" .
  
  ?person dbo:associatedBand ?band .
  ?band foaf:name ?bandName .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
976,36,train,Give me the office of the person born as the birth name of Naci Bostancı and office of Mustafa Şentop.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?naciOffice ?mustafaOffice
WHERE {
  # Find Naci Bostancı's birth name and his office
  dbr:Naci_Bostancı dbo:birthName ?birthName .
  OPTIONAL { ?person dbo:birthName ?birthName . }
  OPTIONAL { ?person dbo:office ?naciOffice . }

  # Find Mustafa Şentop's office
  dbr:Mustafa_Şentop dbo:office ?mustafaOffice .

  FILTER(?birthName = ""Naci Bostancı"") # Ensure the birth name matches Naci Bostancı
}
```

This query does the following:
- Retrieves the birth name of Naci Bostancı and finds any person with that birth name to get their office.
- Directly retrieves Mustafa Şentop's office.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
773,20,train,Give me the spouse of Louis the German and parent of the successor of Charles the Bald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseName
WHERE {
  # Find Louis the German and his spouse
  dbr:Louis_the_German a dbo:Person ;
                       dbo:spouse ?spouse .

  # Get the name of the spouse
  ?spouse rdfs:label ?spouseName .
  
  FILTER (lang(?spouseName) = 'en')

  # Find Charles the Bald and his successor
  dbr:Charles_the_Bald a dbo:Person ;
                       dbo:successor ?successor .

  # Get the parent of the successor
  ?parent a dbo:Person ;
          dbo:child ?successor .
  
  # Ensure the spouse is also the parent of the successor
  FILTER (?spouse = ?parent)
}
```",3,3,4,2,2,3,3,71,0,1,1,0.0,0.0,0
874,14,train,"Give me the band of the band member of the band, that is an organisation, of Mark Read (singer).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?result <http://dbpedia.org/ontology/bandMember> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band
WHERE {
  # Identify Mark Read
  ?markRead a dbo:Singer ;
            foaf:name ""Mark Read""@en .
  
  # Find bands where he is a member
  ?bandMemberOf dbo:member ?markRead ;
                a dbo:Band .

  # Ensure the band is an organization
  ?band dbr:Bands_and_Musicians <http://dbpedia.org/resource/Category:Musical_groups> ;
        a dbo:Organization .
  
  # Link the band member to the band
  ?bandMemberOf dbp:band ?band .
}
```",3,4,4,3,1,3,2,20,0,0,5,0,0.0,0
465,34,train,"Give me the successor of Renée of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?successorRenée ?successorChild
WHERE {
  # Successor of Renée of France
  ?renée dbo:spouse ?husband .
  FILTER (str(?renée) = ""Renée of France"") .
  
  OPTIONAL {
    ?husband dbp:succeededBy ?successorRenée .
  }
  
  # Parent of Ercole II d'Este
  ?ercole2 dbo:parent ?parentErcole2 .
  FILTER (str(?ercole2) = ""Ercole II d'Este"") .

  # Children of the parent of Ercole II d'Este
  ?child dbp:parent ?parentErcole2 .

  OPTIONAL {
    ?child dbp:succeededBy ?successorChild .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
917,31,train,"Give me the child of Kekūanāoʻa and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?parent
WHERE {
  ?child dbo:father dbr:Kekūanāoʻa .
  ?child dbo:mother ?mother . # To account for either parent being Kekūanāoʻa

  ?child dbo:spouse ?spouse .
  ?child dbo:child ?royaltyChild .

  ?royaltyChild a dbo:Royalty .

  OPTIONAL {
    ?parent dbo:father ?child .
    ?parent dbo:mother ?child .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
978,4,train,Give me the name of Chicane (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?name
WHERE {
  dbr:Chicane a dbo:MusicalArtist .
  dbr:Chicane dbo:name ?name .
}
```

This query uses the `dbo` (DBpedia Ontology) prefix to specify that we are looking for entities classified as musical artists and their associated names. The resource `dbr:Chicane` refers specifically to the musician Chicane.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
212,1,train,Give me the birthplace of KODA (singer).,SELECT ?result WHERE { <http://dbpedia.org/resource/KODA_(singer)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Singer .
  ?person foaf:name ""Koda Kumi""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
791,36,train,"Give me the spouse of Taira no Tokuko and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?grandchild ?father
WHERE {
  # Taira no Tokuko and her spouse
  dbr:Taira_no_Tokuko dbo:spouse ?spouse .

  # Their child who is royalty
  ?spouse dbo:child ?grandchild .
  ?grandchild a dbo:Monarch .

  # The father of this child, who is both royalty and an office holder
  ?father dbo:parent ?spouse ;
          a dbo:Monarch ;
          dbo:officeHolder ?office .

  # Ensure the father is also Emperor Antoku's father
  dbr:Emperor_Antoku dbo:parent ?father .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
579,10,train,"Give me the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?v0 <http://dbpedia.org/property/birthName> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName
WHERE {
  ?person dbo:nativePlace dbr:Edinburgh .
  ?person dbo:officeHolder ?office .
  ?person foaf:givenName ?birthName .
}
```",2,3,3,2,1,3,2,20,0,0,18,0,0.0,0
933,30,train,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of Mike Elliott (saxophonist) and reference to Alan Warner.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?bandLabel ?alanWarnerRole WHERE {
  # Alan Warner's bands
  ?alanWarnerBand dbo:musicalArtist dbr:Alan_Warner ;
                  a dbo:Band, dbo:MusicalGroup, dbo:Organization .
  
  # Mike Elliott's bands
  ?mikeElliottBand dbo:musicalArtist dbr:Mike_Elliott ;
                   a dbo:Band, dbo:MusicalGroup, dbo:Organization .

  # Common band between Alan Warner and Mike Elliott
  FILTER (?alanWarnerBand = ?mikeElliottBand)

  # Labels for the band
  SERVICE <http://dbpedia.org/sparql> {
    ?band rdfs:label ?bandLabel .
    FILTER (LANG(?bandLabel) = 'en')
  }

  # Alan Warner's role in the band
  OPTIONAL {
    ?alanWarnerBand dbo:musicalArtist dbr:Alan_Warner ;
                    dbo:member ?alanWarnerRole .
  }
}
ORDER BY ?bandLabel",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
826,4,train,Who is the child of Johann Heinrich Appel?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?childName WHERE {
  ?person dbo:child ?child .
  ?child foaf:name ?childName .
  ?person foaf:name ""Johann Heinrich Appel"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
158,2,train,Who is the reference to Adelbert Cronkhite?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?label ?abstract WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Adelbert Cronkhite""@en .
  
  OPTIONAL { 
    ?person dbo:abstract ?abstract .
  }
  
  BIND (str(?person) AS ?label)
}
```",1,1,2,1,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
93,1,train,Give me the death place of John Weir Troy.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Weir_Troy> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  ?person dbo:birthName ""John Weir Troy""@en .
  ?person dbo:deathPlace ?deathPlace .
}
```

This query selects the death place of an individual whose birth name is John Weir Troy. It assumes that `dbo:birthName` and `dbo:deathPlace` are the correct properties to use for identifying individuals by their full names and retrieving their places of death, respectively.",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
216,18,train,Give me the player in Mario Ivanković and team of Ognjen Vukojević and player in Igor Bišćan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?playerInMarioIvankovic ?teamOfOgnjenVukojevic ?playerInIgorBiscan
WHERE {
  # Find the team of Ognjen Vukojević
  dbr:Ognjen_Vukojević dbo:playsFor ?teamOfOgnjenVukojevic .

  # Find players in the same team as Ognjen Vukojević, including Mario Ivanković
  ?playerInMarioIvankovic dbo:playsFor ?teamOfOgnjenVukojevic .
  FILTER(?playerInMarioIvankovic = dbr:Mario_Ivanković)

  # Find the team of Igor Bišćan
  dbr:Igor_Bišćan dbo:playsFor ?teamOfIgorBiscan .

  # Find players in the same team as Igor Bišćan
  ?playerInIgorBiscan dbo:playsFor ?teamOfIgorBiscan .
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
865,19,train,"Give me the father of AK Abdul Momen and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherName ?nativeCountry
WHERE {
  # Find the father of AK Abdul Momen
  dbr:AK_Abdul_Momen dbo:father ?father .
  ?father rdfs:label ?fatherName .

  # Find the native country of Ram Jaipal Singh Yadav's residence
  dbr:Ram_Jaipal_Singh_Yadav dbo:nativePlace ?nativePlace .
  ?nativePlace dbo:country ?nativeCountry .
}
```

This query does the following:
- Uses `dbo:father` to find AK Abdul Momen's father and retrieves his name.
- Uses `dbo:nativePlace` to determine Ram Jaipal Singh Yadav's native place, then finds the country associated with that place.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
933,28,train,Give me the band of the band of Alan Warner (musician) and band of The Ramong Sound and reference to Alan Warner.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandName ?alanWarnerUri
WHERE {
  # Alan Warner's band
  ?alanWarner dbo:musicalArtist ?alanBand .
  ?alanBand foaf:name ?bandName .

  # The Ramones' band
  dbpedia:The_Ramones dbo:musicalArtist ?ramonesBand .
  ?ramonesBand foaf:name ?commonBandName .

  # Ensure the bands are the same
  FILTER (?bandName = ?commonBandName)

  # Reference to Alan Warner
  ?alanWarner foaf:name ""Alan Warner""^^xsd:string .
  BIND(?alanWarner AS ?alanWarnerUri)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
166,12,train,"Give me the resting place of Gonzalo Queipo de Llano and entity in the territory administered, that is a country, from Madrid.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Gonzalo_Queipo_de_Llano> <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace ?country
WHERE {
  # Find Gonzalo Queipo de Llano's resting place
  dbr:Gonzalo_Queipo_de_Llano dbo:finalRestingPlace ?restingPlace .

  # Find territories administered by Madrid that are countries
  dbr:Madrid dbo:administrativeTerritory ?territory .
  ?territory a dbo:Country ;
             rdfs:label ?countryLabel .
  
  FILTER (lang(?countryLabel) = 'en')
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
216,16,train,"Give me the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/coach> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?coach
WHERE {
  ?coach a dbo:SoccerPlayer .
  ?coach a dbo:SportsManager .
  ?coach a dbo:SoccerManager .

  ?coach dbo:coach dbr:Džemal_Berberović .

  dbr:Džemal_Berberović a dbo:Organization ;
                        a dbo:SportsClub ;
                        a dbo:SoccerClub .
}
```",2,8,3,2,1,3,3,71,0,0,2,0,0.0,0
715,14,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeLeader WHERE {
  # Find Carlos Franco Iribarnegaray and his leadership role
  dbr:Carlos_Franco_Iribarnegaray dbo:leaderOf ?office .
  
  # Ensure the office is a government agency
  ?office rdf:type dbo:GovernmentAgency .

  # Ensure the office is also an organization
  ?office rdf:type dbo:Organization .

  # Find who leads this office
  ?office dbo:leader ?officeLeader .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
917,28,train,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of Kekūanāoʻa and child of Kekūanāoʻa.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Kamehameha IV and Kekūanāoʻa URIs
  VALUES (?kamehamehaIV) { <http://dbpedia.org/resource/Kamehameha_IV> }
  VALUES (?kekuanaoa) { <http://dbpedia.org/resource/Kekūanāoʻa> }

  # Find a child who is royalty and has both Kamehameha IV and Kekūanāoʻa as parents
  ?child dbo:spouse|dbo:partnerOf|dbo:child ?kamehamehaIV .
  ?child dbo:spouse|dbo:partnerOf|dbo:child ?kekuanaoa .
  
  # Ensure the child is royalty
  ?child a dbo:Monarch .

  # Find the parent of this child
  ?parent dbo:child ?child .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
274,6,train,Give me the band member of Dizzy Gillespie and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember ?profession
WHERE {
  ?gillespie dbo:member ?band .
  ?band dbo:member ?bandMember .
  
  FILTER(?gillespie = db:resource/Dizzy_Gillespie) .

  OPTIONAL { ?bandMember dbo:occupation ?profession . }
}
```

### Explanation:

- **PREFIX**: Define prefixes for common DBpedia properties.
- **SELECT**: Choose variables `?bandMember` and `?profession`.
- **WHERE**:
  - Identify Dizzy Gillespie's band membership using `dbo:member`.
  - Find other members of the same band (`?band`) who are also associated with Dizzy Gillespie.
  - Use a `FILTER` to ensure we're specifically looking at bands involving Dizzy Gillespie.
  - Use an `OPTIONAL` clause to find if these band members have any listed profession.

This query will return all band members of Dizzy Gillespie along with their professions, if available.",2,2,3,1,2,2,3,28,0,0,8,0,0.0,0
41,5,train,"Who is the work, that is an office holder, of yes?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/author> ""yes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeHolder ?work
WHERE {
  ?officeHolder a dbo:OfficeHolder .
  ?officeHolder dbo:work ?work .
}
```",1,2,2,1,1,2,3,28,0,0,59,0,0.0,0
773,8,train,"Give me the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName
WHERE {
  # Louis the German as a parent
  dbr:Louis_the_German dbo:spouse ?parent .
  
  # Child relationship
  ?parent dbo:child ?child .

  # Child must be royalty
  ?child rdf:type dbo:Monarch .

  # Return child's name
  ?child rdfs:label ?childName .
  FILTER (LANG(?childName) = 'en')
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
124,3,train,"Give me the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?result <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  ?entity rdfs:label ""A Battery, Royal Australian Artillery""@en .
  FILTER (lang(?entity) = 'en') .

  # Ensure it is a military unit
  ?entity dbo:militaryUnitOf dbr:Australia .

  # Ensure it is an organization
  ?entity rdf:type dbo:MilitaryUnit .

  BIND(strafter(str(?entity), ""http://dbpedia.org/resource/"") AS ?reference)
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
791,18,train,Give me the spouse of Taira no Tokuko and father of Emperor Go-Toba and predecessor of Emperor Antoku.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse
WHERE {
  ?tokuko dbo:spouse ?spouse .
  ?spouse dbo:child ?gotoba .
  ?antoku dbo:predecessor ?spouse .
  
  FILTER (str(?gotoba) = ""Emperor Go-Toba"" && str(?antoku) = ""Emperor Antoku"")
}
```

This query does the following:
- Selects the spouse of Taira no Tokuko.
- Ensures that this person is also the father of Emperor Go-Toba and predecessor of Emperor Antoku by using appropriate properties (`dbo:child` for parent-child relationships and `dbo:predecessor` for succession).
- Filters results to match specific individuals, ensuring precision.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
892,14,train,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity
WHERE {
  ?entity dbo:country dbr:Italy .
  ?entity a ?type .
  FILTER (
    ?type IN (dbo:Region, dbo:Settlement, dbo:AdministrativeRegion)
  ) .
  ?entity dbp:party dbr:Democratic_Party_(Italy) .
  OPTIONAL { ?entity rdfs:label ?label . FILTER (lang(?label) = 'it') }
}
```",2,6,3,2,1,3,3,71,0,0,587,0,0.0,0
124,7,train,Who is the person born on 1850-06-24?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name
WHERE {
    ?person a dbo:Person .
    ?person dbo:birthDate ?date .
    OPTIONAL { ?person foaf:name ?name . }
    FILTER (YEAR(?date) = 1850 && MONTH(?date) = 6 && DAY(?date) = 24)
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,2,2,0,0.5,1.0,0.6666666666666666
122,0,train,Give me the band member of Lyrics Born.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Lyrics_Born> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?lyricsBorn a dbo:MusicalArtist ;
              foaf:name ""Lyrics Born"" .
  ?album dbo:artist ?lyricsBorn ;
         dbo:track ?song .
  ?song dbo:performer ?bandMember .
}
```",1,1,2,1,1,2,2,9,0,0,7,0,0.0,0
158,6,train,Give me the party of Théodore Steeg and entity in France.,SELECT ?result WHERE { <http://dbpedia.org/resource/Théodore_Steeg> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party ?entityInFrance
WHERE {
  ?steeg dbo:wikiPageID ""Théodore_Steeg"" .
  ?steeg dbo:party ?party .
  
  OPTIONAL {
    ?steeg dbo:birthPlace ?entityInFrance .
    FILTER (CONTAINS(LCASE(str(?entityInFrance)), ""france""))
  }
}
```

### Explanation:

- **PREFIX**: We define prefixes for `dbo` and `dbp` to simplify the query.
- **SELECT**: We select two variables, `?party` for the political party and `?entityInFrance` for any associated entity in France.
- **WHERE**:
  - The first triple pattern identifies Théodore Steeg using his DBpedia page ID.
  - The second pattern retrieves his political party affiliation.
  - An `OPTIONAL` clause is used to find an entity in France related to him, such as a birthplace. We use a filter to ensure the entity's name contains ""france"" (case-insensitive).

This query should provide information about Théodore Steeg's political party and any relevant French entities associated with him.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
18,11,train,"Give me the alumnus of the figure known, that is an educational institution, as Saints.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ""Saints""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alumnus WHERE {
  ?institution rdfs:label ""Saints""@en .
  FILTER NOT EXISTS { ?institution a dbo:EducationalOrganization } # Ensure it's an institution
  ?alumnus dbo:alumnusOf ?institution .
}
```",2,3,3,2,1,2,3,28,0,0,21,0,0.0,0
433,18,train,Give me the associated musical artist of Paul Chambers and associated musical artist of Bill Evans and professional in Musician.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?artist1 ?artist2 WHERE {
  # Find associated musical artist for Paul Chambers
  { 
    dbp:PaulChambers dbo:associatedMusicalArtist ?artist1 .
    ?artist1 a dbo:Musician .
  }
  
  # Find associated musical artist for Bill Evans
  { 
    dbp:BillEvans dbo:associatedMusicalArtist ?artist2 .
    ?artist2 a dbo:Musician .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
417,7,train,"Who is the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  # Find Alexandrine of Mecklenburg-Schwerin's parents
  dbr:Alexandrine_of_Mecklenburg-Schwerin dbo:parent ?parent .

  # Ensure the parent is a royalty by checking for royal titles or roles
  OPTIONAL { ?parent dbo:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess|Duke|Duchess"", ""i"") }
  
  # Get the name of the parent
  ?parent rdfs:label ?parentName .
  
  # Filter to ensure only royalty are returned
  FILTER EXISTS { ?parent dbo:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess|Duke|Duchess"", ""i"") }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
326,12,train,"Give me the person decedent at the award, that is a country, of Adelbert Cronkhite and resident of Berkshire.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Berkshire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  ?award dbo:recipient ?decedent .
  ?award dbo:country ?country .
  FILTER (isLiteral(?country) && ?country = ""United Kingdom"") .

  ?decedent dbo:spouse|dbo:child|dbo:parent|dbo:sibling* dbr:Adelbert_Cronkhite .
  
  ?decedent dbo:residence ?residence .
  ?residence rdfs:label ?locationLabel .
  FILTER (CONTAINS(LCASE(?locationLabel), ""berkshire""))
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
445,1,train,Give me the death place of Patrick Moore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  dbr:Patrick_Moore dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
192,6,train,"Give me the child of Mary of Hungary, Queen of Naples and spouse of Clemence of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Clemence_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_of_Hungary,_Queen_of_Naples> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Mary of Hungary as a parent
  dbr:Mary_of_Hungary,_Queen_of_Naples dbo:spouse dbr:Clemence_of_Austria .
  
  # Child relationship
  dbr:Mary_of_Hungary,_Queen_of_Naples dbo:child ?child .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
273,4,train,Give me the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . }","```sparql
SELECT ?uri
WHERE {
  ?uri rdfs:label ""Università degli Studi di Torino""@it .
  FILTER (lang(?uri) = 'it')
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
773,24,train,Give me the parent of the successor of Charles the Bald and parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfSuccessor ?parentOfCharlesTheFat
WHERE {
  # Find Charles the Bald's successor and their parent
  ?charlesTheBald dbo:succeededBy ?successor .
  FILTER (str(?charlesTheBald) = ""Charles_the_Bald"")
  
  ?successor dbo:parent ?parentOfSuccessor .

  # Find Charles the Fat's parent
  ?charlesTheFat dbo:parent ?parentOfCharlesTheFat .
  FILTER (str(?charlesTheFat) = ""Charles_the_Fat"")
}
```

### Explanation:

- **PREFIX:** Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT:** Ensure unique results for the parents.
- **WHERE Clause:**
  - Identify Charles the Bald's successor using `dbo:succeededBy`.
  - Retrieve the parent of this successor with `dbo:parent`.
  - Directly find the parent of Charles the Fat.

This query will return the parent of the successor of Charles the Bald and the parent of Charles the Fat, as requested.",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
527,0,train,Give me the actor of The Book Tower.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Book_Tower> <http://dbpedia.org/property/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor WHERE {
  ?movie rdfs:label ""The Book Tower""@en .
  FILTER NOT EXISTS { ?movie a dbo:Film . } # Ensure it's not a film with the same label
  ?movie dbo:starring ?actor .
}
```

### Explanation

- **PREFIX:** Define prefixes for common namespaces.
- **SELECT:** We are interested in retrieving actors (`?actor`).
- **WHERE Clause:**
  - `?movie rdfs:label ""The Book Tower""@en .`: Find the movie with the label ""The Book Tower"" in English.
  - `FILTER NOT EXISTS { ?movie a dbo:Film . }`: Ensure that we are not mistakenly selecting a film with the same name if there's ambiguity.
  - `?movie dbo:starring ?actor .`: Link the movie to its actors using the `dbo:starring` predicate.

This query should effectively retrieve the actor(s) associated with ""The Book Tower"" from DBpedia.",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
917,5,train,"Who is the spouse, that is a royalty, of Leleiohoku I?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName
WHERE {
  ?leleiohokuI a dbo:Person ;
               dbp:name ""Leleiohoku I""@en .
  
  ?leleiohokuI dbo:spouse ?spouse .

  ?spouse a dbo:RoyalFamilyMember ;
          dbp:name ?spouseName .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
573,26,train,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?decedent WHERE {
  ?politician a dbo:Politician ;
              dbo:nationality dbr:United_States_of_America .
  
  ?politician dbo:residence ?settlement .
  FILTER (isLiteral(?settlement) && datatype(?settlement) = xsd:string)
  
  ?settlement a dbo:Settlement .

  OPTIONAL {
    ?decedent dbo:placeOfDeath ?settlement .
  }
}
```",3,5,4,3,1,3,3,71,0,0,6537,0,0.0,0
773,1,train,Give me the parent of Carloman of Bavaria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parentName
WHERE {
  ?carloman a dbo:Person ;
            rdfs:label ""Carloman of Bavaria""@en .
  
  OPTIONAL { 
    ?carloman dbo:father ?father .
    BIND(?father AS ?parent)
  }
  
  OPTIONAL { 
    ?carloman dbo:mother ?mother .
    BIND(?mother AS ?parent)
  }

  ?parent rdfs:label ?parentName .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
933,19,train,Give me the reference to Alan Warner and band of the band of Alan Warner (musician).,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alanWarnerUri ?bandUri
WHERE {
  ?alanWarnerUri a dbo:Musician ;
                 foaf:name ""Alan Warner"" .
  
  OPTIONAL {
    ?memberOf dbr:Alan_Warner ; # Assuming Alan Warner has a DBpedia resource entry
               dbo:bandMember ?bandUri .
  }
}
```

This query does the following:
- Selects the URI of Alan Warner and his band.
- Uses `foaf:name` to identify Alan Warner by name, assuming he is categorized under `dbo:Musician`.
- Utilizes an optional pattern to find any band associated with him through a property like `dbo:bandMember`.

Note: The exact properties (`dbo:bandMember`, etc.) might need adjustment based on the actual DBpedia schema and available data.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
192,7,train,"Give me the spouse of the spouse, that is a royalty, of Charles Martel of Anjou.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?secondLevelSpouse
WHERE {
  ?charles dbr:Charles_Martel_of_Anjou .
  
  ?charles dbo:spouse ?firstSpouse .
  
  ?firstSpouse dbo:spouse ?secondLevelSpouse .
  
  ?secondLevelSpouse a dbo:Monarch ;
                    dbp:title ?title .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
933,20,train,Give me the reference to the birth name of Alan Warner (musician) and band of Mike Elliott (saxophonist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?birthName ?band 
WHERE {
  # Query for Alan Warner's birth name
  { 
    dbpedia:Alan_Warner_musical_artist dbo:birthName ?birthName .
  }
  
  UNION
  
  # Query for Mike Elliott's band association
  { 
    dbpedia:Mike_Elliott_(saxophonist) dbo:band ?band .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
582,20,train,"Give me the reference to Japan and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?fatherReference
WHERE {
  ?masamiNagasawa foaf:name ""Masami Nagasawa"" .
  ?masamiNagasawa dbo:parent ?father .

  ?father foaf:name ?fatherName ;
          dbo:nationality dbr:Japan ;
          a ?athleteType .

  OPTIONAL { ?father dbo:occupation dbr:Athlete . }
  OPTIONAL { ?father dbo:occupation dbr:Soccer_Manager . }
  OPTIONAL { ?father dbo:occupation dbr:Sports_Manager . }

  FILTER EXISTS {
    ?father dbo:occupation ?athleteType .
  }

  BIND(<http://dbpedia.org/resource/Category:People_from_Japan> AS ?fatherReference)
}
```

This query does the following:
- Identifies Masami Nagasawa and her father.
- Ensures the father is associated with Japan.
- Checks if the father has occupations related to being an athlete, soccer manager, or sports manager.
- Returns a reference indicating the father's connection to Japan.",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
417,4,train,"Who is the parent, that is a royalty, of Count Ingolf of Rosenborg?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?count a dbo:Count ;
         dbo:parent ?parent .
  
  FILTER EXISTS { 
    ?parent a dbo:RoyalFamilyMember ; # Assuming royalty is represented by this class or similar
             dbo:royaltyStatus ?status .
  }
  
  VALUES ?count { <http://dbpedia.org/resource/Ingolf_of_Rosenborg> } # Replace with the actual URI if known
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
212,5,train,"Give me the birthplace of the professional, that is a musical artist and an artist, in Singer, rapper, CEO, Facilities and Project Manager.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Singer, rapper, CEO, Facilities and Project Manager""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Singer .
  ?person a dbo:Rapper .
  ?person dbo:occupation dbr:CEO .
  ?person dbo:occupation dbr:Facilities_and_Project_Manager .
  ?person dbo:birthPlace ?birthPlace .
}
```

This query selects the birthplace of individuals who are both singers and rappers, and also have occupations as a CEO and Facilities and Project Manager.",2,4,3,2,1,2,2,9,0,0,1,0,0.0,0
445,36,train,Give me the entity in the award of the commander in Battle of Saint-Mihiel and entity in England.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?entityInEngland
WHERE {
  # Find the award associated with a commander in the Battle of Saint-Mihiel
  ?commander dbo:awardedBy ?award .
  ?battle dbo:name ""Battle of Saint-Mihiel"" ;
          dbo:participatedCommander ?commander .

  # Find an entity located in England
  ?entityInEngland dbo:location dbr:England .
}
```

### Explanation

- **PREFIX**: Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT**: Retrieve distinct pairs of the award and entities in England to avoid duplicates.
- **WHERE Clause**:
  - The first pattern matches a commander who was awarded something (`?commander dbo:awardedBy ?award`) and participated in the ""Battle of Saint-Mihiel"" (`?battle dbo:name ""Battle of Saint-Mihiel""`).
  - The second pattern finds entities located in England (`?entityInEngland dbo:location dbr:England`).

This query will return distinct pairs of awards related to commanders in the Battle of Saint-Mihiel and any entities associated with England.",4,4,5,3,2,3,3,71,0,0,102,0,0.0,0
645,2,train,Give me the leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderName WHERE {
  ?ministry a dbo:GovernmentMinistry ;
            rdfs:label ""Ministry of the Army""@en .
  ?ministry dbo:head ?leader .
  ?leader foaf:name ?leaderName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
83,3,train,"Who is the person born, that is an athlete, on 1991-11-19?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ""1991-11-19""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person ?name
WHERE {
  ?person rdf:type dbo:Athlete .
  ?person dbo:birthDate ?birthdate .
  ?person foaf:name ?name .
  FILTER (xsd:date(?birthdate) = ""1991-11-19""^^xsd:date)
}
```",1,2,2,1,1,2,2,9,25,31,5,0.44642857142857145,0.8333333333333334,0.5813953488372092
98,1,train,Give me the child of Emperor Go-Shirakawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?parent dbo:child ?child .
  FILTER(?parent = dbpedia:Emperor_Go-Shirakawa)
}
```

This query uses the `dbo:child` predicate to find individuals who are children of Emperor Go-Shirakawa. The `FILTER` clause ensures that we specifically look for records where the parent is Emperor Go-Shirakawa.",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
47,16,train,"Give me the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  # Find awards associated with Mantu Ghosh
  ?award dbo:recipient ?person .
  ?person foaf:name ""Mantu Ghosh""@en .

  OPTIONAL {
    ?award dbo:recipient ?awardee .
    FILTER(?awardee != ?person)
  }
}
```",2,3,3,2,1,3,3,71,0,0,11,0,0.0,0
5,0,train,Give me the birthplace of Gerald Regan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Regan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Gerald Regan""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
445,22,train,Give me the entity in the award of George H. Cameron and entity in England.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?entityInEngland
WHERE {
  # Find awards associated with George H. Cameron
  dbr:George_H._Cameron dbo:award ?award .

  # Find entities connected to England
  ?entityInEngland dbo:country dbr:England .
}
```",3,3,4,2,2,3,3,71,0,10852,102,0.0,0.0,0
445,37,train,Give me the entity in United Kingdom and death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInUK ?deathPlace
WHERE {
  ?entityInUK a dbo:Organisation ;
              dbo:country dbr:United_Kingdom .
  
  OPTIONAL { 
    ?awardEvent dbo:dateEstablished ""1820-03-10""^^xsd:date ;
                dbo:recipient ?awardee .
    
    ?awardee dbo:deathPlace ?deathPlace .
  }
}
```

This query assumes:
- The entity in the UK is an organization (`dbo:Organisation`).
- There's a possible event or award with a specific establishment date.
- The awardee of this event has a recorded death place.",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
124,2,train,Give me the military force of Battle of Atbara.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force1Label ?force2Label WHERE {
  # Identify the Battle of Atbara resource
  dbr:Battle_of_Atbara a dbo:MilitaryConflict .

  # Find military forces involved in the battle
  OPTIONAL { 
    dbr:Battle_of_Atbara dbo:combatant ?force1 .
    ?force1 rdfs:label ?force1Label .
    FILTER (lang(?force1Label) = 'en')
  }
  
  OPTIONAL {
    dbr:Battle_of_Atbara dbo:opponent ?force2 .
    ?force2 rdfs:label ?force2Label .
    FILTER (lang(?force2Label) = 'en')
  }
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
978,2,train,Give me the award of Michel Claparède.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  dbpedia:Michel_Claparède dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
102,4,train,"Give me the resident, that is an athlete, of Dewsbury.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?resident ?athleteName WHERE {
  ?resident dbo:residence dbr:Dewsbury .
  ?resident a dbo:Athlete .
  OPTIONAL { ?resident foaf:name ?athleteName . }
}
```",1,2,2,1,1,3,2,20,2,2,0,0.5,1.0,0.6666666666666666
273,5,train,Give me the alumnus of University of Turin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus
WHERE {
  ?alumnus dbo:almaMater dbr:University_of_Turin .
}
```",1,1,2,1,1,3,2,20,141,0,0,1.0,1.0,1.0
445,39,train,Give me the death place of Patrick Moore and entity in the award of the commander in Battle of Saint-Mihiel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?awardEntity
WHERE {
  # Query for Patrick Moore's death place
  dbr:Patrick_Moore dbo:deathPlace ?deathPlace .

  # Query for the entity that received a Commander award during the Battle of Saint-Mihiel
  ?awardEntity dbo:recipient ?recipient .
  ?awardEntity dbo:name ""Commander"" .
  ?battle dbo:location ?location .
  FILTER (CONTAINS(LCASE(?location), ""saint-mihiel""))
  ?battle dbo:participatedIn ?awardEntity .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
965,5,train,"Give me the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person
WHERE {
  ?person rdf:type dbo:Politician .
  ?person dbo:birthDate ""1854-05-24""^^xsd:date .
}
```",1,2,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
715,7,train,Who is the reference to Carlos Franco Iribarnegaray?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?name ?description ?birthDate ?deathDate ?occupation WHERE {
  VALUES ?person { dbr:Claudio_Franco_Iribarnegaray }
  
  ?person rdfs:label ?name .
  OPTIONAL { ?person dbo:abstract ?description . FILTER (lang(?description) = 'en') }
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
  OPTIONAL { ?person dbo:deathDate ?deathDate . }
  OPTIONAL { ?person dbo:occupation ?occupation . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
582,28,train,Give me the player in Kazuaki Nagasawa and reference to the residence of Hirotaka Sugawara and figure known as --10-19.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?residence ?figure
WHERE {
  # Find player associated with Kazuaki Nagasawa
  ?nagasawa a dbo:Person ;
            foaf:name ""Kazuaki Nagasawa"" ;
            dbo:associatedWith ?team .
  
  ?team dbo:member ?player .

  # Reference Hirotaka Sugawara's residence
  ?sugawara a dbo:Person ;
            foaf:name ""Hirotaka Sugawara"" ;
            dbo:residence ?residence .

  # Identify figure related to ""--10-19""
  ?figure a dbo:Event ; 
          dbo:date ?date .
  
  FILTER (STR(?date) = ""-10-19"")
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
987,37,train,"Give me the entity in Montenegro and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor ?birthPlace ?montenegroEntity
WHERE {
  # Emir Hadžihafizbegović in a film
  dbr:Emir_Hadžihafizbegović dbo:film dbr:Film1 .
  
  # Actor of the show (which is also a film)
  dbr:Film1 dbo:actor ?actor .
  ?actor dbo:actedIn dbr:ShowAsFilm .

  # Birthplace of the actor
  ?actor dbp:birthPlace ?birthPlace .

  # Entity in Montenegro related to this context
  ?montenegroEntity a dbo:Place ;
                   dbo:country dbr:Montenegro .
  
  OPTIONAL {
    ?montenegroEntity dbo:relatedTo ?actor .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
47,36,train,"Give me the office of the awardee of the entity, that is an award, in India and office of Suvendu Adhikari.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardOffice ?suvenduAdhikariOffice
WHERE {
  # Find awards given in India and their awardees' offices
  ?award a dbo:Award ;
         dbo:country dbr:India .
  
  ?awardEvent dbo:recipient ?awardee .
  ?awardee dbo:office ?awardOffice .

  OPTIONAL {
    # Find Suvendu Adhikari's office
    dbr:Suvendu_Adhikari dbo:office ?suvenduAdhikariOffice .
  }
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
955,9,train,"Give me the writer of the work, that is a work and an album and a musical work, of Matt Freeman.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v0 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writerName
WHERE {
  # Identify Matt Freeman's URI in DBpedia
  dbr:Matt_Freeman a dbo:Person ;
                   dbo:creator ?work .

  # Ensure the work is of type ""Album"", ""MusicalWork"", and ""CreativeWork""
  ?work a dbo:Album, dbo:MusicalWork, dbo:CreativeWork .

  # Get the writer's name
  ?work dbo:composer ?writer .
  ?writer rdfs:label ?writerName .
  
  FILTER (lang(?writerName) = 'en')
}
```

### Explanation

- **PREFIX**: Define common prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT ?writerName**: Retrieve distinct names of writers.
- **WHERE Clause**:
  - `dbr:Matt_Freeman a dbo:Person ; dbo:creator ?work`: Find works created by Matt Freeman.
  - `?work a dbo:Album, dbo:MusicalWork, dbo:CreativeWork`: Ensure the work is an album and musical work.
  - `?work dbo:composer ?writer . ?writer rdfs:label ?writerName`: Retrieve the writer's name.
- **FILTER**: Restrict results to English labels.",2,5,3,2,1,3,2,20,0,0,31,0,0.0,0
495,2,train,Give me the parent of Princess Catherine of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent ?relationship
WHERE {
  VALUES (?person) { <http://dbpedia.org/resource/Catherine_of_W%C3%BCrttemberg> }
  
  OPTIONAL {
    ?person dbo:father ?parent .
    BIND(""Father"" AS ?relationship)
  }

  OPTIONAL {
    ?person dbo:mother ?parent .
    BIND(""Mother"" AS ?relationship)
  }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
274,11,train,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name WHERE {
  # Find people involved in ""Imagine the Sound"" as actors
  ?castMember dbo:actorIn dbr:Imagine_the_Sound .
  
  # Ensure they are also musical artists
  ?castMember dbo:musicArtist dbr:.* .

  # Get their name
  ?castMember rdfs:label ?name .
  
  FILTER (LANG(?name) = 'en')
}
```",2,3,3,2,1,2,3,28,0,0,36,0,0.0,0
839,24,train,Give me the band of Matthias Röhr and band of the member of Böhse Onkelz.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?matthiasBand ?boMember ?boMemberBand
WHERE {
  # Find the band associated with Matthias Röhr
  ?person foaf:name ""Matthias Röhr""@en .
  ?person dbo:memberOf ?matthiasBand .

  # Find members of Böhse Onkelz and their bands
  ?band foaf:name ""Böhse Onkelz""@en .
  ?band dbo:member ?boMember .
  
  OPTIONAL {
    ?boMember dbo:memberOf ?boMemberBand .
  }
}
```

This query does the following:
- Retrieves the band associated with Matthias Röhr.
- Identifies members of Böhse Onkelz and their respective bands.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
216,11,train,Give me the player in the coach of Croatia national under-21 football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v0 . ?v0 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coach
WHERE {
  ?team a dbo:NationalFootballTeam ;
        rdfs:label ""Croatia national under-21 football team""@en .
  
  OPTIONAL { 
    ?team dbo:coach ?coach .
  }
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
892,23,train,Give me the entity in the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
SELECT ?profession
WHERE {
  ?person rdfs:label ""Enrico Crolla""@en .
  ?person dbo:occupation ?profession .
}
```

This query assumes that Enrico Crolla is represented in DBpedia with a label and has an occupation linked via the `dbo:occupation` property.",3,3,4,3,1,3,3,71,0,0,13092,0,0.0,0
456,39,train,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandOfBand
WHERE {
  ?alanDoyle a dbo:MusicalArtist ;
             foaf:name ""Alan Doyle""@en .
  
  ?alanDoyle dbo:member ?band .

  ?band a dbo:MusicalArtist .

  ?band dbo:band ?bandOfBand .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
865,4,train,"Give me the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ram Jaipal Singh Yadav""@en .
  
  ?person dbo:residence ?residence .

  FILTER (isLiteral(?residence) = false)
  FILTER EXISTS { 
    ?residence a dbo:Country .
  }
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
456,16,train,"Give me the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgoName
WHERE {
  dbr:Lamont_Cranston dbo:alias dbr:The_Shadow .
  dbr:The_Shadow rdfs:label ?alterEgoName .
  FILTER (lang(?alterEgoName) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
645,17,train,"Give me the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office
WHERE {
  # Find the native of Restoration (Spain)
  ?person dbo:nationality dbr:Restoration_(Spain) .
  
  # The office should be a government agency and an organization
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .

  # Link the person to the office
  ?person dbo:worksFor ?office .
}
```",2,4,3,2,1,3,3,71,0,0,15,0,0.0,0
129,5,train,Give me the person born as Tahj Malik Chandler.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person dbo:birthName ""Tahj Malik Chandler"" .
  OPTIONAL { ?person foaf:name ?name . }
}
```

This query does the following:
- Uses `dbo:birthName` to find entities with the birth name ""Tahj Malik Chandler.""
- Optionally retrieves the current name of the person using `foaf:name`.
- Returns both the DBpedia resource identifier (`?person`) and the current name (`?name`), if available.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
274,16,train,"Give me the band member of Dizzy Gillespie and associated musical artist of the actor, that is a musical artist, of Imagine the Sound.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember ?associatedArtist
WHERE {
  # Find band members of Dizzy Gillespie
  ?gillespie dbo:musicalArtist ?bandMember .
  
  FILTER(?gillespie = dbpedia:Dizzy_Gillespie) .

  # Find the actor ""Imagine the Sound"" who is also a musical artist
  ?actor rdfs:label ""Imagine the Sound""@en .
  ?actor dbo:occupation dbp:Actor ;
         dbo:musicalArtist ?associatedArtist .

}
```",3,4,4,2,2,2,3,28,0,0,4,0,0.0,0
791,37,train,"Give me the father of Emperor Go-Toba and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfGoToba
WHERE {
  # Father of Emperor Go-Toba
  dbr:Emperor_Go-Toba dbo:father ?fatherOfGoToba .

  # Child (son) of Emperor Go-Shirakawa
  dbr:Emperor_Go-Shirakawa dbo:child ?childOfGoShirakawa .
  
  # Grandchild of Emperor Go-Shirakawa who is an office holder and royalty
  ?childOfGoShirakawa dbo:child ?grandChildOfGoShirakawa .
  ?grandChildOfGoShirakawa a dbo:Royalty ;
                         dbo:officeHolder true .

  # Predecessor relationship
  ?fatherOfGoToba dbo:predecessor ?grandChildOfGoShirakawa .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
47,25,train,Give me the office of the awardee of Padma Vibhushan and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT DISTINCT ?person ?office
WHERE {
  {
    ?person dbo:award dbp:Padma_Vibhushan .
    OPTIONAL { ?person dbo:office ?office . }
  }
  UNION
  {
    ?bideshRanjanBose foaf:name ""Bidesh Ranjan Bose"" .
    ?bideshRanjanBose dbo:office ?office .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
888,11,train,"Give me the commander in the force, that is a societal event and an event, of Serhiy Kotenko and awardee of Hero of Ukraine.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ""Hero of Ukraine""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Serhiy Kotenko and his commander relationship
  dbr:Serhiy_Kotenko dbo:commander ?commander .
  
  # Commander's association with societal events and events
  ?commander a dbo:SocietalEvent ;
             a dbo:Event .

  # Commander being an awardee of Hero of Ukraine
  ?commander dbo:award dbr:Hero_of_Ukraine .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
573,32,train,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personDecedentAtResidence ?personDecedentAtAministration
WHERE {
  # Find William J. Phelan's residence which is a settlement
  dbr:William_J._Phelan dbo:residence ?settlement .
  ?settlement rdf:type dbo:Settlement .

  # Find person decedent at the settlement
  ?personDecedentAtResidence dbo:deceasedAt ?settlement .

  # Find Charlie Baker's administration which is a region
  dbr:Charlie_Baker dbo:administrativePost ?administration .
  ?administration rdf:type dbo:Region .

  # Find person decedent at the administration
  ?personDecedentAtAministration dbo:deceasedAt ?administration .
}
```

This query assumes:
- `dbo:residence` is used to denote a person's residence.
- `dbo:administrativePost` denotes an administrative role or region associated with a person.
- `dbo:Settlement` and `dbo:Region` are the types for settlements and regions, respectively.
- `dbo:deceasedAt` indicates where a person has deceased.",4,6,5,2,2,3,3,71,0,0,4,0,0.0,0
645,20,train,"Give me the commander in Battle of Jarama and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander ?militaryForce
WHERE {
  ?battle a dbo:MilitaryConflict ;
          a dbo:SocietalEvent ;
          rdfs:label ""Battle of Jarama""@en .
  
  ?battle dbp:commander ?commander .
  ?commander dbo:militaryForce ?militaryForce .

  OPTIONAL { 
    ?battle dbo:participant Francisco_Largo_Caballero .
  }
}
```",3,6,4,2,2,3,3,71,0,0,6,0,0.0,0
773,4,train,Give me the father of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?fatherLabel WHERE {
  ?charles a dbo:Person ;
           rdfs:label ""Charles the Fat""@en .
  ?charles dbo:father ?father .
  ?father rdfs:label ?fatherLabel .
}
```

This query does the following:
- Uses `PREFIX` to define common namespaces.
- Selects the label of Charles's father (`?fatherLabel`).
- Matches a resource representing Charles the Fat, ensuring it is of type `dbo:Person`.
- Retrieves the father using the property `dbo:father`.
- Fetches the human-readable name of the father with `rdfs:label`.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
98,0,train,Give me the region of Philippine Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?region
WHERE {
  ?timeZone a dbo:TimeZone ;
            rdfs:label ""Philippine Standard Time""@en .
  
  OPTIONAL { 
    ?timeZone dbo:country ?country .
    ?country rdfs:label ?region .
  }
}
```

### Explanation

- **PREFIX:** We define prefixes for `dbo` (DBpedia Ontology) and `dbp` (DBpedia Properties).
- **SELECT:** We are interested in the region associated with the time zone.
- **WHERE Clause:**
  - We identify the entity representing Philippine Standard Time using its label.
  - We use an `OPTIONAL` clause to find a country linked to this time zone, which might represent the region. The `rdfs:label` property is used to get the human-readable name of the country.

This query assumes that the region can be inferred from the country associated with the time zone. If more specific regional data is available in DBpedia, additional properties could be included.",1,1,2,1,1,2,3,28,0,0,1874,0,0.0,0
865,30,train,Give me the father of AK Abdul Momen and native of British Raj and father of the child of Abu Ahmad Abdul Hafiz.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father
WHERE {
  # Father of AK Abdul Momen
  dbr:AK_Abdul_Momen dbo:father ?father .

  # Native of British Raj
  ?father dbo:nationality dbr:British_Raj .

  # Child of Abu Ahmad Abdul Hafiz
  ?child dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz .
  
  # Father of the child of Abu Ahmad Abdul Hafiz
  ?child dbo:father ?father .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
102,1,train,Give me the native of Dewsbury.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Dewsbury> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?nativePlace
WHERE {
  ?dewsbury a dbo:Settlement .
  ?dewsbury rdfs:label ""Dewsbury""@en .
  OPTIONAL { 
    ?person dbo:birthPlace ?dewsbury .
    ?person dbo:birthPlace ?nativePlace .
  }
}
```

This query does the following:
- It selects entities that are labeled as ""Dewsbury"" in English.
- It checks if there is a person whose birthplace is Dewsbury and retrieves their native place.",1,1,2,1,1,3,2,20,0,0,100,0,0.0,0
874,4,train,"Give me the band, that is an organisation, of Mark Read (singer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandLabel
WHERE {
  ?markRead dbo:singer <http://dbpedia.org/resource/Mark_Read> .
  ?markRead dbo:band ?band .
  ?band rdf:type dbo:Band .
  ?band rdfs:label ?bandLabel .
  FILTER (CONTAINS(LCASE(?bandLabel), ""band""))
  
  OPTIONAL {
    ?band rdf:type <http://dbpedia.org/ontology/Organisation> .
  }
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
445,23,train,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v0 . ?v2 <http://dbpedia.org/property/residence> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  ?athlete dbo:nationality dbr:United_Kingdom .
  ?athlete dbo:residence ?place .
  ?place rdf:type dbo:Country .
  BIND(?place AS ?country)
}
```

### Explanation:
- **PREFIX:** Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT ?country:** Select distinct countries where athletes reside.
- **WHERE Clause:**
  - `?athlete dbo:nationality dbr:United_Kingdom`: Find athletes with nationality as the United Kingdom (Great Britain).
  - `?athlete dbo:residence ?place`: Identify their place of residence.
  - `?place rdf:type dbo:Country`: Ensure this place is a country.
- **BIND:** Assign the residence to the variable `?country` for clarity.",3,5,4,3,1,3,3,71,0,0,3570,0,0.0,0
826,0,train,Give me the spouse of Anna Magdalena Appel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}
```

In this query:
- `wd:Q123456` should be replaced with the actual DBpedia resource identifier for Anna Magdalena Bach. You would need to look up her specific DBpedia ID.
- `wdt:P26` is the property used in DBpedia to denote a spouse.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
382,6,train,Give me the landmark at elevation of 100 and birthplace of Björn Joppe.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Björn_Joppe> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""100""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?birthPlace
WHERE {
  # Find landmarks at elevation of 100
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""100""^^xsd:integer)

  # Find birthplace of Björn Joppe
  dbr:Björn_Joppe dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
507,27,train,Give me the professional in the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
SELECT ?profession
WHERE {
  ?person dbo:birthDate ""1966-02-18""^^xsd:date .
  ?person dbo:occupation ?profession .
}
```",3,3,4,3,1,3,3,71,0,11,35603,0.0,0.0,0
933,34,train,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and band of The Ramong Sound.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandOfTheBand
WHERE {
  ?ramones a dbo:MusicalArtist ;
           dbp:name ""Ramones"" .
  
  ?ramones dbo:bandMember ?member .

  ?member dbo:band ?band1 .
  ?band1 a dbo:MusicalGroup .

  ?band1 dbo:bandMember ?subMember .
  ?subMember dbo:band ?band2 .
  ?band2 a dbo:MusicalGroup .

  FILTER EXISTS { ?ramones dbo:type dbp:Artist . }
  FILTER EXISTS { ?member dbo:type dbp:Artist . }
  FILTER EXISTS { ?subMember dbo:type dbp:Artist . }

  BIND(?band2 AS ?bandOfTheBand)
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
773,31,train,Give me the parent of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse
WHERE {
  # Step 1: Find Carloman of Bavaria's parent
  ?carloman dbo:child ?carlomanParent .
  VALUES ?carloman { <http://dbpedia.org/resource/Carloman_of_Bavaria> }

  # Step 2: Identify Bernard (son of Charles the Fat) and his grandparent
  ?bernard foaf:surname ""Bernard"" .
  ?bernard dbo:childOf ?father .
  ?father dbo:childOf ?grandparent .

  # Ensure Bernard is specifically the son of Charles the Fat
  ?charlesTheFat foaf:name ""Charles the Fat"" .
  ?charlesTheFat dbo:child ?bernard .

  # Step 3: Find the spouse of the grandparent (who is also Carloman's parent)
  FILTER (?carlomanParent = ?grandparent)
  ?grandparent dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
216,27,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?teamName WHERE {
  # Get Pavel Vezhinov's death date
  dbr:Pavel_Vezhinov dbo:dateOfDeath ?vezhinovDeathDate .

  # Find a person who is a sports manager, soccer manager, and soccer player
  ?person dbo:birthDate ?birthdate .
  ?person dbo:sportsManager ?managerRole .
  ?person dbo:soccerManager ?soccerManagerRole .
  ?person dbo:soccerPlayer ?playerRole .

  # Ensure the person has all three roles
  FILTER EXISTS { ?managerRole a dbo:SportsManager . }
  FILTER EXISTS { ?soccerManagerRole a dbo:SoccerManager . }
  FILTER EXISTS { ?playerRole a dbo:SoccerPlayer . }

  # Find teams associated with this person on or before Pavel Vezhinov's death date
  ?team dbo:member ?person .
  ?team dbo:founded ?foundedDate .

  # Ensure the team was founded before or at the time of Pavel Vezhinov's death
  FILTER (?foundedDate <= ?vezhinovDeathDate)

  # Return the team name
  ?team rdfs:label ?teamName .
  
  # Filter to ensure labels are in English
  FILTER (LANG(?teamName) = ""en"")
}
ORDER BY ?teamName",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
888,13,train,"Give me the commander in the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify the War in Donbas as a military conflict and societal event
  dbr:War_in_Donbas_(2014–2022) a dbo:MilitaryConflict ;
    a dbo:SocietalEvent .

  # Find the commander of this military force
  OPTIONAL { 
    dbr:War_in_Donbas_(2014–2022) dbo:commander ?commander .
  }
}
```",3,5,4,3,1,3,2,20,0,0,110,0,0.0,0
582,15,train,"Give me the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v1 <http://dbpedia.org/property/residence> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence
WHERE {
  ?scientist a dbo:Scientist .
  ?scientist foaf:name ""Hirotaka Sugawara""@en .
  ?scientist dbo:residence ?residence .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
170,16,train,Give me the domain of the profession of John Scholey and entity in Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/leaderTitle> ?v2 . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?professionDomain ?russianEntity
WHERE {
  # Find John Scholey's profession
  ?johnScholey dbo:occupation ?profession .
  
  # Get the domain of his profession
  ?profession rdfs:domain ?professionDomain .

  # Identify an entity in Russia
  ?russianEntity dbp:country ""Russia""^^xsd:string .
}
```

### Explanation

- **PREFIX**: Define prefixes for common DBpedia properties.
- **SELECT DISTINCT**: Ensure unique results for the domain and Russian entities.
- **WHERE Clause**:
  - Find John Scholey's occupation using `dbo:occupation`.
  - Determine the domain of his profession with `rdfs:domain`.
  - Identify any entity located in Russia using `dbp:country`.

This query will return the domain of John Scholey's profession and an example of an entity from Russia.",3,3,4,2,2,2,3,28,0,0,99,0,0.0,0
987,7,train,"Give me the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?event ?timeZone
WHERE {
  # Find Canicosa de la Sierra
  ?location a dbo:Settlement ;
            rdfs:label ""Canicosa de la Sierra""@en .
  
  # Find sports events related to this location
  ?event dbo:location ?location ;
         a dbo:SportEvent .

  # Retrieve time zone information for the event
  OPTIONAL {
    ?event dbp:timeZone ?timeZone .
  }
}
```

### Explanation

- **PREFIX**: Define prefixes for common DBpedia namespaces.
- **SELECT DISTINCT**: Choose distinct sports events and their time zones to avoid duplicates.
- **WHERE Clause**:
  - Identify Canicosa de la Sierra as a settlement with the label ""Canicosa de la Sierra"".
  - Find sports events (`dbo:SportEvent`) associated with this location.
  - Use an `OPTIONAL` clause to retrieve the time zone information if available.

This query will return sports events in Canicosa de la Sierra along with their respective time zones, if such data exists in DBpedia.",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
507,38,train,"Give me the professional in the profession of Guy Ferland and director of the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/director> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?directorName WHERE {
  # Find Guy Ferland's profession
  ?guyFerland a dbo:Person ;
              foaf:name ""Guy Ferland"" .
  
  ?guyFerland dbo:profession ?profession .

  # Find movies that are works and have Beryl Reid starring in them
  ?movie a dbo:Film ;
         foaf:basedOn ?work ;
         dbo:starring ?berylReid .

  ?berylReid foaf:name ""Beryl Reid"" .

  # Find the director of such a movie who shares the same profession as Guy Ferland
  ?movie dbo:director ?director .
  
  ?director a dbo:Person ;
            foaf:name ?directorName ;
            dbo:profession ?sameProfession .

  FILTER (?profession = ?sameProfession)
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
129,16,train,Give me the associated musical artist of the person born as Tahj Malik Chandler and professional in .,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professionalName ?associatedArtist WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Tahj Malik Chandler"" ;
          foaf:alias ?professionalName .
  
  OPTIONAL { 
    ?person dbo:associatedBandOrMusicalArtist ?associatedArtist .
  }
  
  FILTER(?professionalName = ""The Weeknd"")
}
```",3,3,4,2,2,2,3,28,0,0,7,0,0.0,0
888,1,train,Give me the awardee of Hero of Ukraine.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Hero of Ukraine""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:honoraryTitle dbr:Hero_of_Ukraine .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
582,32,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to the residence of Hirotaka Sugawara.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?residence
WHERE {
  # Find the player who is the father of Masami Nagasawa and has all required roles
  ?player dbo:spouse ?masamiNagasawa .
  ?masamiNagasawa foaf:name ""Masami Nagasawa""@en .

  FILTER EXISTS { ?player a dbo:Athlete . }
  FILTER EXISTS { ?player a dbo:SoccerManager . }
  FILTER EXISTS { ?player a dbo:SportsManager . }

  # Get the residence of Hirotaka Sugawara
  OPTIONAL {
    dbr:Hirotaka_Sugawara dbo:residence ?residence .
  }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
773,29,train,Give me the parent of the successor of Charles the Bald and parent of Charles the Fat and spouse of Louis the German.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfSuccessor ?parentOfCharlesTheFat ?spouseOfLouisTheGerman
WHERE {
  # Find the successor of Charles the Bald and its parent
  ?charlesTheBald dbo:successor ?successor .
  FILTER (str(?charlesTheBald) = ""Charles_the_Bald"")
  
  ?successor dbo:parent ?parentOfSuccessor .

  # Find the parent of Charles the Fat
  ?charlesTheFat dbo:parent ?parentOfCharlesTheFat .
  FILTER (str(?charlesTheFat) = ""Charles_the_Fat"")

  # Find the spouse of Louis the German
  ?louisTheGerman dbo:spouse ?spouseOfLouisTheGerman .
  FILTER (str(?louisTheGerman) = ""Louis_the_German"")
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
826,23,train,Give me the spouse of the child of the father of Anna Magdalena Appel.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
    ?anna a dbo:Person ;
          foaf:name ""Anna Magdalena Bach""@en .
    
    ?anna dbo:father ?father .

    ?child dbo:childOf ?father .
    
    ?child dbo:spouse ?spouse .
}
```

### Explanation:
- **PREFIX:** We define the `dbo` prefix for DBpedia ontology.
- **SELECT Clause:** We are interested in finding the spouse (`?spause`) of a child.
- **WHERE Clause:**
  - Identify Anna Magdalena Bach using her name and type as a person.
  - Find her father using the `dbo:father` predicate.
  - Identify children of this father using `dbo:childOf`.
  - Finally, find the spouse of these children using `dbo:spouse`.

This query will return the spouses of all children of Anna Magdalena Bach's father.",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
465,14,train,"Give me the successor of the child, that is a royalty, of Anne of Brittany.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?successor
WHERE {
  # Anne of Brittany and her children who are royalties
  ?child dbo:parent dbr:Anne_of_Brittany ;
         dbo:royaltyStatus ?status .
  
  FILTER (?status = ""Royal"" || ?status = ""Royalty"") .

  # Find the successor of these royal children
  ?child dbo:successor ?successor .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
573,24,train,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and parent of John Quincy Adams.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person
WHERE {
  # William J. Phelan's residence is a settlement
  dbr:William_J._Phelan dbo:residence ?settlement .
  ?settlement rdf:type dbo:Settlement .

  # The decedent at this residence
  ?settlement dbo:decedentAtResidence ?person .

  # This person is also a parent of John Quincy Adams
  ?person dbo:parent dbr:John_Quincy_Adams .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
933,4,train,Who is the band of Alan Warner (musician)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band
WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Alan Warner"" .
  OPTIONAL { 
    ?person dbo:band ?band .
  }
}
```

This query does the following:
- Uses `dbo:Musician` to ensure we are looking at Alan Warner in his capacity as a musician.
- Searches for an entity with the name ""Alan Warner"".
- Utilizes the `dbo:band` property to find any band associated with him.",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
826,1,train,"Give me the successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  ?person dbo:successor ?successor .
  ?person rdfs:label ""Louis II, Grand Duke of Hesse""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
166,7,train,Give me the resting place of the military force of Spanish Civil War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlace WHERE {
  ?militaryForce dbo:partOf dbr:Spanish_Civil_War .
  ?militaryForce dbo:hasMilitaryBasis ?location .
  OPTIONAL { 
    ?soldier dbo:servedIn ?militaryForce ;
             dbo:placeOfBurial ?restingPlace .
  }
  FILTER EXISTS { ?soldier dbo:servedIn ?militaryForce }
}
```",2,2,3,2,1,3,2,20,0,0,36,0,0.0,0
874,7,train,"Give me the band of the writer, that is an artist and a musical artist, of Mezzanine (album).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName
WHERE {
  # Identify the album Mezzanine
  dbr:Mezzanine a dbo:Album .

  # Find the writer of the album who is also an artist and musical artist
  dbr:Mezzanine dbo:writer ?writer .
  ?writer a dbo:Artist ;
          a dbo:MusicalArtist .

  # Retrieve the band associated with this writer
  ?writer dbo:band ?band .
  
  # Get the name of the band
  ?band rdfs:label ?bandName .
  
  FILTER (lang(?bandName) = 'en')
}
```",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
83,3,train,"Give me the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983).","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthplace ?townLabel ?club
WHERE {
  # Identify Sandro, the footballer born in October 1983
  ?sandro dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1983 && MONTH(?date) = 10)
  
  # Determine his birthplace
  ?sandro dbo:birthPlace ?birthplace .

  # Ensure the birthplace is a town and Brazilian
  ?birthplace rdf:type dbo:Town ;
              dbo:country dbr:Brazil .
  
  # Get the label for the town
  SERVICE <http://dbpedia.org/sparql> {
    ?birthplace rdfs:label ?townLabel .
    FILTER (LANG(?townLabel) = 'en')
  }
  
  # Check if there is a soccer club associated with the birthplace
  OPTIONAL {
    ?club dbo:foundedIn ?birthplace ;
          rdf:type dbo:SoccerClub .
  }
}
ORDER BY ?townLabel",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
445,30,train,Give me the entity in England and death place of Patrick Moore and entity in the award of George H. Cameron.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?awardEntity
WHERE {
  # Patrick Moore's death place in England
  dbr:Patrick_Moore dbo:placeOfDeath ?deathPlace .
  FILTER (CONTAINS(LCASE(str(?deathPlace)), ""england""))

  # George H. Cameron's award entity
  dbr:George_H._Cameron dbo:award ?awardEntity .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
216,36,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in Igor Bišćan.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?teamName
WHERE {
  # Find the death date of Pavel Vezhinov
  dbr:Pavel_Vezhinov dbo:dateOfDeath ?deathDate .

  # Find a person born on that date who is a sports manager, soccer manager, and player
  ?person dbp:birthDate ?birthDate .
  FILTER (?birthDate = ?deathDate)

  ?person dbo:sportsManager ?true .
  ?person dbo:soccerManager ?true .
  ?person dbo:soccerPlayer ?true .

  # Find the team where this person played with Igor Bišćan
  ?team dbo:member ?person ;
        dbo:member dbr:Igor_Bišćan .

  # Get the team name
  ?team rdfs:label ?teamName .
  FILTER (lang(?teamName) = 'en')
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
433,1,train,Give me the associated musical artist of Bill Evans.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Bill Evans resource
  dbr:Bill_Evans a dbo:MusicArtist .

  # Find associated bands or collaborators
  OPTIONAL { 
    dbr:Bill_Evans dbo:associatedBand ?band .
    ?band dbo:member ?artist .
  }
  
  OPTIONAL {
    dbr:Bill_Evans dbo:collaborator ?artist .
  }

  FILTER(?artist != dbr:Bill_Evans) # Exclude Bill Evans himself
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
433,27,train,Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?profession
WHERE {
  # Find the album
  dbr:Slowhand_at_70_-_Live_at_the_Royal_Albert_Hall dbo:composer ?writer .
  
  # Get the profession of the writer
  ?writer dbo:profession ?profession .
}
```",3,3,4,3,1,3,3,71,0,0,51837,0,0.0,0
976,5,train,"Give me the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?reference
WHERE {
  ?reference dbo:organization ?org .
  ?reference dbo:politicalParty ?party .
  ?reference dcterms:language ""tr""^^xsd:string .
  FILTER (CONTAINS(LCASE(?org), LCASE(""Millet İttifakı"")) || CONTAINS(LCASE(?party), LCASE(""Millet İttifakı"")))
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
507,2,train,"Give me the professional in Film director, television director.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?person ?name
WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ?name .
  FILTER (lang(?name) = 'en') .

  ?person dbo:occupation ?filmDirectorRole .
  ?filmDirectorRole rdfs:label ""Film director""@en .

  ?person dbo:occupation ?tvDirectorRole .
  ?tvDirectorRole rdfs:label ""Television director""@en .
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,4,310,34,0.012738853503184714,0.10526315789473684,0.02272727272727273
955,3,train,Give me the writer of Don't Forget Your Roots (album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  dbpedia:Don_t_Forget_Your_Roots_(album) dbo:artist ?artist .
  ?artist foaf:name ?name .
  OPTIONAL { 
    ?artist dbo:work ?work .
    ?work dbo:creator ?writer .
  }
}
```",1,1,2,1,1,3,2,20,0,0,19,0,0.0,0
329,5,train,"Give me the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  dbr:Robert_Bates_(loyalist) dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Organization ;
              a dbo:Country .
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
417,33,train,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and spouse of Princess Caroline-Mathilde of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  ?leader dbo:country dbr:Greenland .
  ?father dbo:spouse ?leader .
  ?father dbo:child ?child .
  
  ?child a dbo:Monarch ; # Assuming royalty is represented by the Monarch class
         dbp:spouse dbr:Princess_Caroline-Mathilde_of_Denmark .

  FILTER (?child != ?leader) # Ensure the child is not the leader themselves
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
582,29,train,"Give me the reference to Japan and figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father ?reference
WHERE {
  ?masami a dbo:Athlete ;
          foaf:surname ""Nagasawa"" ;
          dbo:country dbr:Japan .
  
  ?father dbo:child ?masami ;
          a dbo:Athlete, dbo:SoccerManager, dbo:SportsManager .

  OPTIONAL { ?figure dbo:reference ?reference . FILTER(?figure = --10-19) }
}
```

This query does the following:
- Identifies Masami Nagasawa as an athlete from Japan.
- Finds his father who is also an athlete, soccer manager, and sports manager.
- Optionally matches a figure known as --10-19 to find its reference.",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
573,33,train,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?personDecedent
WHERE {
  ?professional a dbo:Politician ;
                dbo:nationality dbr:United_States ;
                dbo:residence ?settlement .
  
  FILTER (isLiteral(?settlement) && contains(str(?settlement), ""Massachusetts""))

  ?settlement a dbo:Settlement .

  ?decedent dbp:placeOfDeath ?settlement .
}
```",4,6,5,3,2,3,3,71,0,0,400,0,0.0,0
888,5,train,Give me the award of Oleksandr Syrskyi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  ?person dbo:givenName ""Oleksandr"" .
  ?person dbo:familyName ""Syrskyi"" .
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
773,17,train,"Give me the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName
WHERE {
  # Carloman of Bavaria as the father
  dbr:C._of_Bavaria dbo:spouse ?mother .
  
  # His children
  ?child dbo:parent dbr:C._of_Bavaria ;
         rdfs:label ?childName .

  # Ensure the child is royalty
  ?child a dbo:Monarch .

  # Ensure Carloman of Bavaria is both royalty and an office holder
  dbr:C._of_Bavaria a dbo:Monarch .
  OPTIONAL { dbr:C._of_Bavaria dbo:officeHolderOf ?office . }
  
  FILTER (lang(?childName) = 'en')
}
```

This query does the following:
- Identifies Carloman of Bavaria and his children.
- Ensures that the child is a monarch (royalty).
- Confirms that Carloman of Bavaria is also a monarch and optionally an office holder.",2,5,3,2,1,3,3,71,0,0,3,0,0.0,0
47,8,train,Give me the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
SELECT ?awardee WHERE {
  ?award dbo:officialName ""Padma Vibhushan""@en .
  ?award dbo:hasAwardee ?awardee .
}
```",1,1,2,1,1,3,3,71,0,0,86,0,0.0,0
527,14,train,"Give me the author of the work, that is a work and a book, of the host of Hyperland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorName
WHERE {
  # Identify the host of Hyperland
  dbr:Hyperland dbo:host ?host .
  
  # Find works associated with this host
  ?work dbo:creator ?host ;
        a dbo:Book ;  # Ensure it is classified as a book
        a dbo:CreativeWork .  # Ensure it is also a work
  
  # Retrieve the author of such works
  ?work dbo:author ?author .
  
  # Get the name of the author
  ?author foaf:name ?authorName .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
527,3,train,"Give me the movie, that is a work and English and a television show, with Bernard Bresslaw.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?movie WHERE {
  ?movie a dbo:TelevisionShow .
  ?movie dbo:language dbr:English .
  ?movie dbo:starring dbr:Bernard_Bresslaw .
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
917,30,train,Give me the child of the father of Kamehameha IV and parent of Albert Kamehameha and child of Kekūanāoʻa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual
WHERE {
    # Father of Kamehameha IV and his child
    ?father dbo:spouse ?mother .
    ?father dbo:child dbr:Kamehameha_IV .
    
    # Child of the father of Kamehameha IV
    ?father dbo:child ?individual .

    # Parent of Albert Kamehameha
    ?parent dbo:child dbr:Albert_Kamehameha .
    FILTER (?individual = ?parent)

    # Child of Kekūanāoʻa
    dbr:Kekūanāoʻa dbo:child ?individual .
}
```",4,4,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
443,2,train,Give me the birthplace of Carl Larsson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace
WHERE {
  ?person rdfs:label ""Carl Larsson""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
791,38,train,"Give me the father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of Emperor Takakura.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father ?predecessor
WHERE {
  # Emperor Takakura's children who are royalty
  ?child dbo:parent dbr:Takakura_Emperor ;
         a dbo:Monarch .

  # Father of the child (royalty)
  ?child dbo:parent ?father .

  # Predecessor of the child
  ?predecessor dbo:successor ?child .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
47,34,train,"Give me the office of Ajoy Mukherjee and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mukherjeeOffice ?commanderOffice
WHERE {
  # Find Ajoy Mukherjee's office
  dbr:Ajoy_Mukherjee dbo:office ?mukherjeeOffice .

  # Find commanders involved in Operation Green Hunt and their offices
  ?operation dbo:partOfOperation ?greenHunt .
  ?greenHunt rdfs:label ""Operation Green Hunt""@en .
  
  ?commander dbo:role ?operationRole .
  ?operationRole dbo:hasParticipant ?commander .
  ?commander dbo:office ?commanderOffice .

  # Ensure the commander is a politician
  ?commander rdf:type dbo:Politician .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
130,9,train,"Give me the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/ontology/director> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?film
WHERE {
  ?film a dbo:Film .
  
  ?film dbo:sportTeam dbr:Soccer_Club ; 
        dbo:organization dbr:Organization .

  ?native dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Madison,_Alabama ;
          dbo:occupation dbr:Coach ;
          dbo:collegeCoach true .
  
  ?film dbo:director ?native .
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
839,10,train,Give me the band of Matthias Röhr and band of Kevin Russell (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?musicianLabel ?bandLabel
WHERE {
  {
    # Query for Matthias Röhr's band
    ?matthiasRohr a dbo:MusicArtist ;
                  rdfs:label ""Matthias Röhr""@en .
    OPTIONAL { 
      ?matthiasRohr dbp:band ?band1 .
      ?band1 rdfs:label ?bandLabel1 .
    }
  } UNION {
    # Query for Kevin Russell's band
    ?kevinRussell a dbo:MusicArtist ;
                  rdfs:label ""Kevin Russell""@en .
    OPTIONAL { 
      ?kevinRussell dbp:band ?band2 .
      ?band2 rdfs:label ?bandLabel2 .
    }
  }

  # Bind labels for output
  BIND(COALESCE(?bandLabel1, ?bandLabel2) AS ?bandLabel)
  BIND(COALESCE(""Matthias Röhr"", ""Kevin Russell"") AS ?musicianLabel)
}
ORDER BY ?musicianLabel ?bandLabel
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
773,7,train,"Give me the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Find Carloman of Bavaria
  ?carloman a dbo:Person ;
            rdfs:label ""Carloman of Bavaria""@en .

  # Identify his father
  ?carloman dbp:father ?father .

  # Ensure the father is both an office holder and royalty
  ?father a dbo:OfficeHolder, dbo:RoyalPerson .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
232,3,train,Give me the person born as Emily Katherine Jacques.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Emily Katherine Jacques""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?person WHERE {
  ?person dbo:birthName ""Emily Katherine Jacques"" .
}
```

This query will return DBpedia resources (`?person`) where the `dbo:birthName` property is exactly ""Emily Katherine Jacques"".",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
267,8,train,Give me the person born on the birth date of Dan Cathy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
SELECT ?person (SAMPLE(?birthDate) AS ?sharedBirthDate)
WHERE {
  # Find Dan Cathy's birth date
  dbpedia:Dan_Cathy dbo:birthDate ?danCathyBirthDate .
  
  # Find other people with the same birth date
  ?person a dbo:Person ;
          dbo:birthDate ?birthDate .
  
  FILTER(?person != dbpedia:Dan_Cathy) # Exclude Dan Cathy from results
  
  # Match the birth dates
  FILTER(?birthDate = ?danCathyBirthDate)
}
GROUP BY ?person
ORDER BY ?sharedBirthDate
```",2,2,3,2,1,3,2,20,0,0,35,0,0.0,0
124,36,train,"Give me the commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?militaryForce WHERE {
  # Find the person born on June 24, 1850
  ?person dbo:birthDate ""1850-06-24""^^xsd:date .
  
  # Link this person to the Mahdist War as a commander
  ?event dbo:commander ?commander ;
         rdfs:label ""Mahdist War""@en .

  # Ensure the event is both a societal event and military conflict
  ?event rdf:type ?eventType1, ?eventType2 .
  FILTER (
    ?eventType1 = dbpedia-owl:SocietalEvent &&
    ?eventType2 = dbpedia-owl:MilitaryConflict
  ) .

  # Find the military force associated with the commander in this war
  ?commander dbo:militaryForce ?militaryForce .
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
926,24,train,Give me the successor of the child of Ahmed III and child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v2 <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?successor
WHERE {
  ?child dbo:parent dbr:Aḥmed_III .
  ?child dbo:successor ?successor .
}
```

### Explanation

- `?child dbo:parent dbr:Aḥmed_III` identifies the children of Ahmed III.
- `?child dbo:successor ?successor` finds the successor for each child.

This query will return the successors of all children of Ahmed III.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
933,18,train,Give me the reference to Alan Warner and band of The Ramong Sound and band of Mike Elliott (saxophonist).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference
WHERE {
  # Find references involving Alan Warner and The Ramones
  { 
    ?entity dbo:associatedBand dbr:The_Ramones .
    ?entity rdfs:label ""Alan Warner""@en .
    ?entity dbo:reference ?reference .
  }
  
  UNION
  
  # Find references involving Mike Elliott (saxophonist) and The Ramones
  {
    ?entity dbo:associatedBand dbr:The_Ramones .
    ?entity rdfs:label ""Mike Elliott (saxophonist)""@en .
    ?entity dbo:reference ?reference .
  }
}
```

This query uses a `UNION` to combine results from two patterns:
- The first pattern looks for entities associated with both Alan Warner and the band ""The Ramones"".
- The second pattern searches for entities linked to Mike Elliott (as a saxophonist) and the band ""The Ramones"".

Both patterns check for any references (`dbo:reference`) related to these associations.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
965,28,train,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseOfSpouse
WHERE {
    # Princess Victoria's spouse
    ?princessVictoria dbo:spouse ?firstSpouse .
    
    # First spouse's spouse (Princess Victoria)
    ?firstSpouse dbo:spouse ?secondSpouse .

    # Second spouse's spouse (the target person)
    ?secondSpouse dbo:spouse ?spouseOfSpouse .

    # Ensure the spouse of the spouse is a parent to both children
    ?spouseOfSpouse dbo:child ?louiseMountbatten .
    ?spouseOfSpouse dbo:child ?georgeMountbatten .

    # Filter for specific individuals
    FILTER(?princessVictoria = dbpedia:Princess_Victoria_of_Hesse_and_by_Rhine)
    FILTER(?louiseMountbatten = dbpedia:Louise_Mountbatten)
    FILTER(?georgeMountbatten = dbpedia:George_Mountbatten,_2nd_Marquess_of_Milford_Haven)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
933,0,train,Give me the band of Mike Elliott (saxophonist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName
WHERE {
  ?person rdfs:label ""Mike Elliott (saxophonist)""@en .
  ?person dbo:instrument dbr:Saxophone .
  ?person dbo:musicGroup ?band .
  ?band rdfs:label ?bandName .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
554,6,train,Give me the leader of Portuguese Mozambique and leader of Portuguese São Tomé and Príncipe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Portuguese_São_Tomé_and_Príncipe> <http://dbpedia.org/property/leader> ?result . <http://dbpedia.org/resource/Portuguese_Mozambique> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leader (GROUP_CONCAT(?territory; separator="", "") AS ?territories)
WHERE {
  VALUES (?territory) { 
    dbr:Portuguese_Mozambique 
    dbr:Portuguese_São_Tomé_and_Príncipe 
  }
  
  ?leader dbo:governmentLeaderOf ?territory .
  OPTIONAL { ?leader rdfs:label ?label FILTER (lang(?label) = 'en') }
}
GROUP BY ?leader
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
933,25,train,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and reference to Alan Warner.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName ?alanWarnerRef
WHERE {
  # Alan Warner (musician) reference
  dbr:Alan_Warner_(musician) dbo:musicalArtistInGroupOrBand ?band .
  
  # Band is a group, band, and organization
  ?band rdf:type dbo:MusicalBand ;
        rdf:type dbo:Organization ;
        rdf:type dbo:MusicalGroup .

  # Get the name of the band
  ?band rdfs:label ?bandName .
  
  # Ensure labels are in English
  FILTER (lang(?bandName) = 'en')

  # Reference to Alan Warner
  BIND(dbr:Alan_Warner_(musician) AS ?alanWarnerRef)
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
865,14,train,Give me the father of the child of Abu Ahmad Abdul Hafiz.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father
WHERE {
  # Find the child of Abu Ahmad Abdul Hafiz
  ?child dbo:parent dbr:Abu_Ahmad_Abdul_Hafiz .
  
  # Find the father of that child
  ?child dbo:father ?father .
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
459,6,train,Give me the governor of Oklahoma and governor of Dana Murphy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?oklahomaGovernor ?danaMurphyRole
WHERE {
  # Find the governor of Oklahoma
  ?oklahomaGovernor a dbo:State ;
                   dbo:stateGovernor ?person .
  
  # Ensure the state is Oklahoma
  ?oklahoma dbr:Oklahoma ;
            dbo:stateGovernor ?person .

  # Find Dana Murphy's role, assuming she might have a political role
  OPTIONAL {
    ?danaMurphy foaf:name ""Dana Murphy"" ;
                dbo:positionHeld ?role .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
5,9,train,"Give me the person born, that is a politician, as the award of Renata Adler.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?personName WHERE {
  ?person rdf:type dbo:Politician .
  ?person dbo:birthDate ?birthDate .
  ?award dbo:recipient ?person ;
         dbo:awardedBy dbr:Renata_Adler .
  ?person rdfs:label ?personName .
  FILTER (LANG(?personName) = 'en')
}
```",2,3,3,2,1,3,2,20,0,0,169,0,0.0,0
965,31,train,Give me the parent of Louise Mountbatten and spouse of the spouse of the parent of Louise Mountbatten.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent ?grandParentSpouse ?spouseOfGrandParentSpouse
WHERE {
  # Louise Mountbatten entity
  ?louise a dbo:Person ;
          foaf:name ""Louise Mountbatten""@en .

  # Parent of Louise Mountbatten
  ?louise dbo:parent ?parent .

  # Spouse of the parent (grandparent spouse)
  OPTIONAL { ?parent dbo:spouse ?grandParentSpouse . }

  # Spouse of the grandparent's spouse
  OPTIONAL { ?grandParentSpouse dbo:spouse ?spouseOfGrandParentSpouse . }
}
```

This query does the following:
- Identifies Louise Mountbatten as a `dbo:Person` with the name ""Louise Mountbatten"".
- Finds her parent using the `dbo:parent` property.
- Optionally finds the spouse of this parent (`grandParentSpouse`).
- Optionally finds the spouse of that spouse (`spouseOfGrandParentSpouse`).

The use of `OPTIONAL` ensures that even if some relationships are missing, we still get results for the parts of the query that can be completed.",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
382,13,train,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  # Find Lukas Kübler and his manager
  ?player a dbo:SoccerPlayer ;
          foaf:name ""Lukas Kübler""@en .
  
  ?player dbo:manager ?manager .

  # Ensure the manager is a soccer manager, athlete, and sports manager
  ?manager a dbo:SoccerManager ;
           a dbo:Athlete ;
           a dbo:SportsManager .

  # Retrieve the birthplace of the manager
  ?manager dbo:birthPlace ?birthPlace .
}
```",3,6,4,3,1,3,2,20,0,0,5,0,0.0,0
5,8,train,Give me the entity in the award of Coro de la Pontificia Universidad Católica de Puerto Rico.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?entity
WHERE {
  ?entity <http://dbpedia.org/ontology/receivesAward> ?award .
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
}
```",2,2,3,2,1,3,2,20,0,0,20990,0,0.0,0
926,3,train,Give me the spouse of Neşerek Kadın.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Neşerek_Kadın> dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
465,12,train,Give me the successor of Renée of France and spouse of Archduchess Barbara of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successorSpouse
WHERE {
  ?renée dbo:successor ?successorSpouse .
  FILTER(STR(?renée) = ""Renée_of_France"")
  
  ?barbara dbo:spouse ?successorSpouse .
  FILTER(STR(?barbara) = ""Archduchess_Barbara_of_Austria"")
}
```

### Explanation

- **PREFIX**: Define prefixes for DBpedia ontology and properties.
- **SELECT**: We are interested in the individual who is both the successor of Renée and the spouse of Archduchess Barbara, denoted as `?successorSpouse`.
- **WHERE Clause**:
  - The first pattern finds the successor of Renée of France.
  - The second pattern finds the spouse of Archduchess Barbara of Austria.
  - Both patterns must match the same individual (`?successorSpouse`).

This query will return the individual who satisfies both conditions.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
933,11,train,Give me the band of the band of Alan Warner (musician).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalBand
WHERE {
  ?alanWarner a dbo:Musician ;
              foaf:name ""Alan Warner"" .
  
  ?alanWarner dbo:band ?firstBand .

  ?firstBand dbo:member ?secondMember .
  ?secondMember dbo:band ?finalBand .
}
```",2,2,3,2,1,3,3,71,0,0,26,0,0.0,0
965,20,train,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of Prince Louis of Battenberg.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent ?spouse WHERE {
    # Prince Louis of Battenberg's child who is royalty
    ?child dbo:father dbr:Prince_Louis_of_Battenberg .
    ?child a dbo:RoyalFamilyMember .

    # Parent of the child (which will be Prince Louis himself)
    ?parent dbo:child ?child .

    # Spouse of the parent
    ?spouse dbp:spouse ?parent .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
773,27,train,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Carloman of Bavaria
  dbr:Claudius_Carloman_of_Bavaria dbo:father ?father .

  # Father is an office holder and a royalty
  ?father rdf:type dbo:Monarch .
  ?father dbo:officeHolderOf ?office .

  # Child of this father who is a royalty
  ?child dbo:parent ?father ;
         rdf:type dbo:Monarch .

  # Parent of this child
  ?child dbo:parent ?parent .
}
```",3,6,4,3,1,3,3,71,0,0,2,0,0.0,0
917,7,train,"Who is the child, that is a royalty, of Kamehameha III?",SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  # Kamehameha III as a parent
  dbr:Kamehameha_III dbo:spouse ?parent .
  
  # Child of Kamehameha III
  ?parent dbo:child ?child .

  # Ensure the child is royalty
  ?child rdf:type dbo:Monarch .

  # Get the name of the child
  ?child rdfs:label ?childName .
  
  FILTER (LANG(?childName) = 'en')
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
216,4,train,Give me the coach of Croatia national under-21 football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?coach
WHERE {
  dbr:Croatia_national_under-21_football_team dbo:coach ?coach .
}
```

This query uses the `dbo:coach` property to find the coach of the specified team. The resource for the Croatia national under-21 football team is represented by `dbr:Croatia_national_under-21_football_team`.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
341,3,train,"Give me the work, that is a work and an album, of Serrano.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/property/writer> ""Serrano""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work WHERE {
  ?work a dbo:Album .
  ?work dbo:artist dbr:Serrano .
  OPTIONAL { ?work dbo:genre ?genre . }
}
```

### Explanation:

- **PREFIX:** We define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT DISTINCT ?work:** We want to retrieve distinct works that meet our criteria.
- **WHERE Clause:**
  - `?work a dbo:Album`: Ensures the work is an album.
  - `?work dbo:artist dbr:Serrano`: Filters albums where Serrano is listed as the artist.
  - `OPTIONAL { ?work dbo:genre ?genre . }`: Optionally retrieves the genre of the album, which can be useful for additional context.

This query will return all works that are both an album and associated with the artist Serrano. The use of `DISTINCT` ensures no duplicate results if multiple properties point to the same work.",1,3,2,1,1,2,2,9,0,0,7,0,0.0,0
507,17,train,Give me the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?profession 
WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?birthdate .
  ?person dbo:occupation ?profession .
  FILTER (STR(?birthdate) = ""1966-02-18""^^xsd:date)
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
456,4,train,Give me the actor of Pacific Drive.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie rdfs:label ""Pacific Drive""@en .
  FILTER (lang(?movie) = 'en') .

  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
459,10,train,"Give me the governor of the administration, that is a politician, of Brad Henry.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?result . ?v0 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorName WHERE {
  # Identify Brad Henry
  dbr:Brad_Henry dbo:positionHeld ?administration .
  
  # Find the governor of that administration
  ?administration dbo:governmentHead ?governor .

  # Ensure the governor is a politician
  ?governor rdf:type dbo:Politician .

  # Get the name of the governor
  ?governor rdfs:label ?governorName .
  
  FILTER (lang(?governorName) = 'en')
}
```",2,3,3,2,1,2,3,28,0,0,10,0,0.0,0
130,14,train,"Give me the entity in the administration, that is American, of the award of Živko Ključe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/governor> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?americanEntity
WHERE {
  ?award dbo:wikiPageRedirects db:Živko_Ključe .
  ?award dbo:awarder ?administration .
  ?administration ?p ?entity .
  OPTIONAL { ?entity foaf:nationality ?nationality . }
  FILTER (?nationality = ""American"" || ?nationality = ""United States"")
}
```",3,4,4,3,1,3,2,20,0,0,26076,0,0.0,0
18,10,train,Give me the parent of the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentClass
WHERE {
  ?actressClass rdfs:label ""Actress""@en .
  ?actressClass a owl:Class .
  ?actressClass rdfs:subClassOf ?parentClass .
}
```",2,2,3,2,1,2,3,28,0,0,1063,0,0.0,0
715,38,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v2 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leaderOfOffice ?commanderInForce
WHERE {
  # Find Carlos Franco Iribarrenegaray's office leadership role
  ?office a dbo:GovernmentAgency ;
          dbo:head ?leaderOfOffice .
  ?leaderOfOffice foaf:name ""Carlos Franco Iribarrenegaray""@en .

  # Find Francisco Largo Caballero's command role
  ?force a dbo:MilitaryUnit ;
         dbo:commander ?commanderInForce .
  ?commanderInForce foaf:name ""Francisco Largo Caballero""@en .
}
```

This query assumes:
- The office led by Carlos Franco Iribarrenegaray is represented as a `GovernmentAgency`.
- Francisco Largo Caballero's command role is within a `MilitaryUnit`.

The query retrieves the leader of the office and the commander in force based on their names.",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
935,9,train,"Give me the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardName ?awardee
WHERE {
  # Find awards associated with Syed Sohail Hussain Naqvi
  dbr:Syed_Sohail_Hussain_Naqvi dbo:award ?award .
  
  # Get the name of each award
  ?award rdfs:label ?awardName .

  # Get the awardee for each award
  OPTIONAL {
    ?award dbo:recipient ?awardee .
    ?awardee rdfs:label ?awardeeLabel .
  }
}
ORDER BY ?awardName",2,3,3,2,1,3,2,20,0,1,52,0.0,0.0,0
791,11,train,"Give me the spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?finalSpouseName
WHERE {
  ?emperor a dbo:Emperor .
  ?emperor rdfs:label ""Takakura""@en .

  ?emperor dbo:spouse ?firstLevelSpouse .
  
  ?firstLevelSpouse dbo:spouse ?secondLevelSpouse .
  
  ?secondLevelSpouse rdf:type dbo:RoyalFamilyMember .
  
  ?secondLevelSpouse rdfs:label ?finalSpouseName .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
978,6,train,Give me the band member of Chicane (musician) and band member of Enya.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Enya> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chicane_(musician)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember
WHERE {
  # Find band members of Chicane (musician)
  { 
    ?chicane dbp:musicBrainzArtistId ""Chicane"" .
    ?chicane dbo:bandMember ?bandMember .
  }
  
  UNION
  
  # Find band members of Enya
  { 
    ?enya dbp:musicBrainzArtistId ""Enya"" .
    ?enya dbo:bandMember ?bandMember .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
216,13,train,Give me the office of the mayor of Ros Bates and party of Campbell Newman.,SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?officeRosBates ?partyCampbellNewman
WHERE {
  # Find Ros Bates' office or position held
  OPTIONAL {
    ?rosBates dbo:officeHolder ?officeRosBates.
    FILTER(STRSTARTS(LCASE(?rosBates), ""ros bates""))
  }
  
  # Find Campbell Newman's political party
  OPTIONAL {
    ?campbellNewman dbp:party ?partyCampbellNewman.
    FILTER(STRSTARTS(LCASE(?campbellNewman), ""campbell newman""))
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
791,33,train,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and spouse of Taira no Tokuko.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor
WHERE {
  # Step 1: Identify Emperor Go-Shirakawa's child
  ?child dbo:parent dbr:Emperor_Go-Shirakawa .
  
  # Step 2: Identify the grandchild (child of the child)
  ?grandchild dbo:parent ?child .

  # Step 3: Ensure the grandchild is an office holder and a royalty
  ?grandchild rdf:type dbo:OfficeHolder ;
              rdf:type dbo:Royalty .

  # Step 4: Ensure this grandchild is the spouse of Taira no Tokuko
  ?grandchild dbo:spouse dbr:Taira_no_Tokuko .

  # Step 5: Find the predecessor of this grandchild
  ?predecessor dbo:successor ?grandchild .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
433,26,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find the first associated artist of Ornette Coleman
  ?artist1 dbo:musicalArtistOrBand ?ornetteColeman .
  ?ornetteColeman a dbo:MusicalArtist ;
                 dbp:name ""Ornette Coleman"" .

  FILTER (?artist1 != ?ornetteColeman) .

  # Ensure the first associated artist is both an artist and a musical artist
  ?artist1 a dbo:Artist, dbo:MusicalArtist .

  # Step 2: Find the second associated artist of the first artist
  ?artist2 dbo:musicalArtistOrBand ?artist1 .
  
  FILTER (?artist2 != ?artist1) .

  # Ensure the second associated artist is both an artist and a musical artist
  ?artist2 a dbo:Artist, dbo:MusicalArtist .

  # Step 3: Find the final associated artist of the second artist
  ?finalArtist dbo:musicalArtistOrBand ?artist2 .
  
  FILTER (?finalArtist != ?artist2) .

  # Ensure the final associated artist is both an artist and a musical artist
  ?finalArtist a dbo:Artist, dbo:MusicalArtist .
}
ORDER BY ?finalArtist",3,7,4,3,1,3,3,71,0,0,117,0,0.0,0
606,1,train,Give me the birthplace of Charles I. Barber.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I._Barber> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Charles I. Barber""@en .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
326,3,train,Give me the profession of Susanne Lewis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Susanne_Lewis> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  ?person foaf:name ""Susanne Lewis""@en .
  ?person dbo:occupation ?profession .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
329,10,train,"Give me the entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone ?timezone .
  FILTER(CONTAINS(LCASE(str(?timezone)), ""western european time""))
}
```",2,3,3,2,1,2,3,28,0,0,46363,0,0.0,0
645,18,train,Give me the commander in Battle of Jarama and military force of Spanish Civil War and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderInJarama ?militaryForce ?leaderOfMinistry
WHERE {
  # Commander in Battle of Jarama
  ?battle dbr:Battle_of_Jarama ;
         dbo:commander ?commanderInJarama .
  
  # Military Force involved in Spanish Civil War
  ?force dbo:participatedInMilitaryConflict dbr:Spanish_Civil_War ;
         rdfs:label ?militaryForceLabel .
  FILTER (lang(?militaryForceLabel) = 'en')
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?militaryForceLabel), "" "", ""_""))) AS ?militaryForce)
  
  # Leader of Ministry of the Army
  ?ministry dbr:Ministry_of_the_Army_(Spain) ;
            dbo:leader ?leaderOfMinistry .
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
382,4,train,"Give me the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference
WHERE {
  ?reference dbo:wikiPageDisambiguates dbr:Harry_Combes .
  ?reference dbo:occupation dbo:College_Coach .
  ?reference dbo:occupation dbo:Coach .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
47,13,train,Give me the office of the awardee of Banga Bhushan.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office
WHERE {
  ?person dbo:award dbr:Banga_Bhushan_Award .
  OPTIONAL { ?person dbo:positionHeld ?office . }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
955,5,train,"Who is the band member, that is a musical artist and an artist, of Street Dogs?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member
WHERE {
  ?band dbr:Street_Dogs .
  ?band dbo:bandMember ?member .

  ?member a dbo:MusicalArtist .
  ?member a dbo:Artist .
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
917,22,train,Give me the parent of Albert Kamehameha and child of the father of Kamehameha IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonAncestor
WHERE {
  # Find the parent of Albert Kamehameha
  dbr:Albert_Kamehameha dbo:parent ?parent1 .
  
  # Find the father (parent) of Kamehameha IV
  dbr:Kamehameha_IV dbo:parent ?parent2 .

  # The child of the father of Kamehameha IV is Kamehameha IV himself
  dbr:Kamehameha_IV dbo:childOf ?parent2 .
  
  # Find the common ancestor (the parent of Albert and the parent of Kamehameha IV)
  ?parent1 rdfs:label ?ancestorLabel .
  ?parent2 rdfs:label ?ancestorLabel .

  FILTER(LANG(?ancestorLabel) = ""en"")
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
917,17,train,"Give me the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  # Kamehameha III's resource
  ?kamehamehaIII a dbo:Person ;
                 foaf:name ""Kamehameha III""@en .

  # His children who are royalties
  ?child dbo:parent ?kamehamehaIII ;
         dbo:royaltyStatus dbp:monarch ;
         dbo:father ?father .

}
```

### Explanation:

- **PREFIX:** Define prefixes for ontology and property namespaces.
- **SELECT DISTINCT ?father:** We want to find distinct fathers of the children.
- **?kamehamehaIII a dbo:Person; foaf:name ""Kamehameha III""@en:** Identify Kamehameha III using his name.
- **?child dbo:parent ?kamehamehaIII; dbo:royaltyStatus dbp:monarch; dbo:father ?father:** Find children of Kamehameha III who are marked as royalty and identify their fathers.",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
83,6,train,"Give me the player in the person born, that is an athlete, on 1991-11-19.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1991-11-19""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?person a dbo:Athlete .
  ?person dbo:birthDate ""1991-11-19""^^xsd:date .
  ?person dbo:sport dbr:Soccer . # Assuming soccer as an example sport
  ?person rdfs:label ?player .
  FILTER (lang(?player) = 'en')
}
```

### Explanation:
- **PREFIXes:** Define common prefixes for DBpedia ontology and properties.
- **SELECT ?player:** We want to return the label of the person who matches our criteria.
- **WHERE Clause:**
  - `?person a dbo:Athlete`: Ensures the person is an athlete.
  - `?person dbo:birthDate ""1991-11-19""^^xsd:date`: Filters by birth date.
  - `?person dbo:sport dbr:Soccer`: Assumes the sport is soccer; this can be adjusted based on more specific information if available.
  - `?person rdfs:label ?player`: Retrieves the label (name) of the person.
  - `FILTER (lang(?player) = 'en')`: Ensures the label is in English.

This query assumes that the sport is soccer, which can be adjusted based on additional context or specific requirements. If more information about the sport or other attributes is available, those should be incorporated into the query.",2,3,3,2,1,2,2,9,0,0,91,0,0.0,0
933,21,train,Give me the band of The Ramong Sound and band of the band of Alan Warner (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?ramonesBand ?alanWarnerBand ?secondLevelBand
WHERE {
  # Find the band associated with ""The Ramones""
  ?ramonesMember dbo:memberOf ?ramonesBand .
  FILTER (str(?ramonesMember) = ""The Ramones"")

  OPTIONAL {
    # Find the band associated with Alan Warner
    ?alanWarner dbp:band ?alanWarnerBand .
    FILTER (str(?alanWarner) = ""Alan Warner"")
    
    OPTIONAL {
      # Find the band of the band associated with Alan Warner
      ?secondLevelMember dbo:memberOf ?alanWarnerBand .
      ?secondLevelMember dbo:memberOf ?secondLevelBand .
    }
  }
}
```

### Explanation:

- **PREFIX:** Define prefixes for common namespaces.
- **SELECT DISTINCT:** Ensure unique results are returned.
- **WHERE Clause:**
  - Identify the band associated with ""The Ramones"" using `dbo:memberOf`.
  - Use an `OPTIONAL` clause to find Alan Warner's band.
  - Another nested `OPTIONAL` clause finds the second-level band associated with Alan Warner's band.

This query structure captures the relationships and entities described in your question, ensuring that all relevant bands are identified through their associations.",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
47,35,train,Give me the office of the administration of Jagdeep Dhankhar and office of the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v2 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeJagdeep ?officeAwardee
WHERE {
  # Office of Jagdeep Dhankhar
  OPTIONAL {
    dbr:Jagdeep_Dhankhar dbo:office ?officeJagdeep .
  }

  # Office of a Padma Vibhushan awardee
  OPTIONAL {
    ?awardee dbo:award dbr:Padma_Vibhushan ;
            dbo:office ?officeAwardee .
  }
}
```

### Explanation:

- **PREFIXes:** Define common prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT:** Ensures unique results are returned for each office.
- **OPTIONAL Clauses:** Used to handle cases where the information might not be available (e.g., if Jagdeep Dhankhar or a specific awardee does not have an office listed).
- **Pattern Matching:**
  - For Jagdeep Dhankhar, we match his DBpedia resource with `dbo:office`.
  - For Padma Vibhushan awardees, we find resources linked to the award and then query for their offices.

This query is designed to efficiently retrieve the required information while handling potential missing data gracefully.",4,4,5,2,2,3,3,71,0,0,6,0,0.0,0
417,15,train,"Who is the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?parentName WHERE {
  # Identify Knud, Hereditary Prince of Denmark
  ?knud a dbo:Person ;
        foaf:name ""Knud, Hereditary Prince of Denmark"" .

  # Find his children
  ?knud dbo:child ?child .

  # Determine the parents of these children who are royalty
  ?child dbo:parent ?parent .
  ?parent rdf:type dbo:RoyalFamilyMember .
  
  # Retrieve the name or identifier of the parent
  ?parent foaf:name ?parentName .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
129,13,train,Give me the associated musical artist of EarthGang and professional in the mayor of 1999 West Dunbartonshire Council election.,SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?earthGangArtist ?mayorCandidate
WHERE {
  # Find associated musical artist of EarthGang
  {
    SELECT DISTINCT ?earthGangArtist
    WHERE {
      ?earthGangArtist dbo:associatedMusicalArtist dbr:EarthGang .
      ?earthGangArtist a dbo:MusicArtist .
    }
  }

  UNION

  # Find professional in the 1999 West Dunbartonshire Council election
  {
    SELECT DISTINCT ?mayorCandidate
    WHERE {
      ?mayorCandidate dbo:electedAs dbr:Mayor_of_West_Dunbartonshire ;
                      dbo:election dbr:1999_West_Dunbartonshire_Council_election .
      ?mayorCandidate a dbo:Politician .
    }
  }
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
36,2,train,Give me the person born as Ayo Makun.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?fullName WHERE {
  ?person dbo:birthName ""Ayo Makun"" .
  OPTIONAL { ?person foaf:name ?fullName . }
}
```

This query does the following:
- Uses `dbo:birthName` to find individuals with the birth name ""Ayo Makun"".
- Retrieves the person's identifier (`?person`) and optionally their full name (`?fullName`) if available.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
773,13,train,Give me the parent of the successor of Charles the Bald.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
SELECT ?parent
WHERE {
  # Identify Charles the Bald
  wd:Q134064 dbo:successor ?successor .
  
  # Find the parent of the successor
  ?successor dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
445,38,train,Give me the entity in the award of George H. Cameron and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award (SAMPLE(?deathPlace) AS ?awardeeDeathPlace)
WHERE {
  # Find the award associated with George H. Cameron
  ?person rdfs:label ""George H. Cameron""@en .
  ?person dbo:honoraryAward ?award .

  # Find the awardee of the Royal Astronomical Society and their death place
  OPTIONAL {
    ?awardee dbo:honoraryAward dbr:Royal_Astronomical_Society .
    ?awardee dbo:deathPlace ?deathPlace .
  }
}
GROUP BY ?award
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
773,10,train,Give me the parent of Charles the Fat and spouse of Louis the German.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfCharlesTheFat ?spouseOfLouisTheGerman
WHERE {
  # Find the parent of Charles the Fat
  OPTIONAL {
    ?charlesTheFat dbo:father ?parentOfCharlesTheFat .
    ?charlesTheFat dbp:name ""Charles the Fat""@en .
  }
  
  UNION
  
  OPTIONAL {
    ?charlesTheFat dbo:mother ?parentOfCharlesTheFat .
    ?charlesTheFat dbp:name ""Charles the Fat""@en .
  }

  # Find the spouse of Louis the German
  OPTIONAL {
    ?louisTheGerman dbo:spouse ?spouseOfLouisTheGerman .
    ?louisTheGerman dbp:name ""Louis the German""@en .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
715,29,train,Give me the commander in the force of Francisco Largo Caballero and leader of Ministry of the Air (Spain) and commander in Rif War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Commander in the force of Francisco Largo Caballero
  ?force dbo:commander ?commander .
  ?force dbo:member dbr:Fran%C3%A7isco_Largo_Caballero .

  UNION

  # Leader of Ministry of the Air (Spain)
  ?ministry dbo:leader ?commander .
  ?ministry rdfs:label ""Ministry of the Air""@en .

  UNION

  # Commander in the Rif War
  ?rifWar dbo:commander ?commander .
  ?rifWar dbo:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""rif war""))
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
976,23,train,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v1 <http://dbpedia.org/ontology/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office
WHERE {
  ?administration a dbo:Organization .
  ?administration dbo:leader ?leader .
  ?leader foaf:name ""Kemal Kılıçdaroğlu"" .
  ?leader dbo:holdsOffice ?office .
}
```",3,5,4,3,1,3,3,71,0,0,13,0,0.0,0
826,29,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor ?successor ?spouse
WHERE {
  # Predecessor of Louis IV, Grand Duke of Hesse
  ?predecessor dbo:royalTitle ?title .
  ?predecessor dbo:successor dbr:Louis_IV,_Grand_Duke_of_Hesse .

  # Child of Louis I, Grand Duke of Hesse and their successor
  ?child dbo:parent dbr:Louis_I,_Grand_Duke_of_Hesse ;
         dbo:royalTitle ?childTitle .
  ?successor dbo:predecessor ?child .

  # Spouse of Anna Magdalena Appel
  ?spouse dbo:spouse dbr:Anna_Magdalena_Appel .

  # Ensure the successor is also the spouse
  FILTER (?successor = ?spouse)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
865,39,train,Give me the father of the child of the father of Abul Maal Abdul Muhith and father of AK Abdul Momen.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?fatherOfFather
WHERE {
  # Step 1: Find the father of Abul Maal Abdul Muhith
  ?abulMaal dbo:father ?fatherOfAbulMaul .

  # Step 2: Identify children (siblings) of this father
  ?sibling dbo:father ?fatherOfAbulMaul .
  
  # Step 3: Find who among these siblings is the father of AK Abdul Momen
  ?akAK dbo:father ?sibling .

  # Step 4: Determine the father of this identified sibling (i.e., father of AK Abdul Momen)
  ?sibling dbo:father ?fatherOfFather .
}
```",4,4,5,3,2,3,3,71,0,187,1,0.0,0.0,0
442,0,train,Give me the resting place of Allyn K. Capron.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allyn_K._Capron> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace WHERE {
  ?person rdfs:label ""Allyn K. Capron""@en .
  ?person dbo:deathPlace ?restingPlace .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
124,23,train,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander
WHERE {
  # Identify 'A' Battery, Royal Australian Artillery as a military unit and organization
  dbr:A_Battery,_Royal_Australian_Artillery 
    dbo:participatedIn ?war ;
    rdf:type dbo:MilitaryUnit .

  # Ensure the war is both a societal event and a military conflict
  ?war rdf:type dbo:SocietalEvent, dbo:MilitaryConflict .

  # Find the commander of this unit in the context of the war
  ?commander dbo:commanderOf ?unit .
  
  # Ensure the reference (unit) is related to 'A' Battery
  ?unit rdfs:subClassOf* dbr:A_Battery,_Royal_Australian_Artillery .

  # Filter for Australian nationality or organization
  OPTIONAL { 
    ?unit dbo:nationality dbr:Australia .
  }
}
```",3,8,4,3,1,3,3,71,0,0,109,0,0.0,0
236,0,train,Give me the party member of Federalist Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Federalist_Party> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?personLabel
WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Federalist Party""@en .
  
  ?party dbo:member ?person .

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

### Explanation:

- **PREFIX:** Define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT:** Choose variables `?person` (the member) and `?personLabel` (the label or name of the person).
- **WHERE Clause:**
  - Identify the Federalist Party using its class (`dbo:PoliticalParty`) and label.
  - Use `dbo:member` to find individuals who are members of this party.
  - The `SERVICE wikibase:label` block is used to fetch labels for entities in English.",1,1,2,1,1,3,2,20,0,0,269,0,0.0,0
865,1,train,Give me the father of AK Abdul Momen.,SELECT ?result WHERE { <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?person dbo:givenName ""AK"" .
  ?person dbo:familyName ""Abdul Momen"" .
  ?person dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
83,2,train,Who is the person born on 1995-07-07?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1995-07-07""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthDate ?date .
  FILTER (str(?date) = ""1995-07-07"")
}
```

This query selects individuals (`?person`) from DBpedia where their `dbo:birthDate` is exactly ""1995-07-07"".",1,1,2,1,1,2,2,9,0,0,34,0,0.0,0
579,13,train,"Give me the native of the residence, that is English and a settlement, of the resident of Scotland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace
WHERE {
  ?person dbo:nationality dbr:Scotland .
  ?person dbo:residence ?residence .
  
  ?residence dbo:country dbr:England .
  ?residence a dbo:Settlement .

  ?person dbo:nativePlace ?nativePlace .
}
```",3,5,4,3,1,3,2,20,0,0,5279,0,0.0,0
645,10,train,Give me the commander in Battle of Jarama and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name
WHERE {
  ?battle dbo:commander ?person .
  ?person foaf:name ?name .

  ?ministry dbo:ministerOf ?person .
  
  FILTER (str(?battle) = ""Battle_of_Jarama"" && str(?ministry) = ""Ministry_of_the_Army_(Spain)"")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
456,5,train,"Give me the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?character WHERE {
  # Lamont Cranston is associated with a fictional character
  dbr:Lamont_Cranston dbo:fictionalCharacter ?character .

  # Ensure the character is linked to radio, film, or television
  OPTIONAL { ?character dbo:mediaType dbr:Radio . }
  OPTIONAL { ?character dbo:mediaType dbr:Film . }
  OPTIONAL { ?character dbo:mediaType dbr:Television . }

  FILTER EXISTS {
    ?character dbo:mediaType ?media .
    VALUES ?media { dbr:Radio dbr:Film dbr:Television }
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
18,1,train,Give me the parent of Liza Huber.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?person dbo:child dbr:Liza_Huber .
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
459,12,train,Give me the governor of Dana Murphy and governor of Oklahoma and person born as John Kevin Stitt.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorDanaMurphy ?governorOklahoma ?johnKevinStitt
WHERE {
  # Governor of Dana Murphy (assuming Dana Murphy is a city or similar entity)
  ?danaMurphy dbo:governmentHead ?governorDanaMurphy .
  FILTER(STRSTARTS(STR(?danaMurphy), ""http://dbpedia.org/resource/Dana_Murphy""))

  # Governor of Oklahoma
  dbr:Oklahoma dbo:currentGovernor ?governorOklahoma .

  # Person born as John Kevin Stitt
  ?johnKevinStitt a dbo:Person ;
                 foaf:name ""John Kevin Stitt"" ;
                 dbo:birthName ""John Kevin Stitt"" .
}
```

This query assumes:
- Dana Murphy is represented in DBpedia with a resource URL starting with `http://dbpedia.org/resource/Dana_Murphy`.
- The current governor of Oklahoma can be directly accessed via the property `dbo:currentGovernor`.
- John Kevin Stitt's birth name and full name are stored under properties `dbo:birthName` and `foaf:name`.",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
36,18,train,Give me the person born as the birth name of Ayo Makun and person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthNamePerson ?person1971
WHERE {
  # Find Ayo Makun's birth name
  dbr:Ayo_Makun dbo:birthName ?birthName .
  
  # Find the person with that birth name
  ?birthNamePerson dbp:birthName ?birthName .

  # Find any person born in 1971
  ?person1971 dbp:birthYear ""1971""^^xsd:gYear .
}
```

This query does the following:
- Retrieves Ayo Makun's birth name using `dbo:birthName`.
- Finds a person whose birth name matches Ayo Makun's.
- Identifies any person born in 1971.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
281,5,train,Give me the award of Alfred Warden.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alfred Warden""@en .
  OPTIONAL { ?person dbo:honoraryAward ?award . }
  OPTIONAL { ?person dbo:award ?award . }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
365,7,train,Give me the person born as the birth name of Symon Petliura.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?petliura dbo:birthName ?birthName .
  FILTER(?petliura = dbpedia:Symon_Petliura) .
  
  OPTIONAL {
    ?otherPerson dbo:birthName ?birthName .
    FILTER(?otherPerson != ?petliura)
  }
  
  BIND(IF(BOUND(?otherPerson), ?otherPerson, ""No other person found"") AS ?person)
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
715,11,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?conflict ?commander WHERE {
  # Find conflicts involving Abd el-Krim
  ?conflict dbo:participant dbr:Abd_el-Krim .
  
  # Find the opposing commander in those conflicts
  ?conflict dbo:opposingCommander ?commander .
}
```

5. **Optimize Query Logic:** The query is straightforward and directly targets the relationships needed to find the commanders involved in conflicts with Abd el-Krim.

6. **Validate Completeness and Precision:** This query should accurately retrieve the military conflicts involving Abd el-Krim and identify the opposing commanders, aligning well with the question's requirements.",2,3,3,2,1,3,3,71,0,0,22,0,0.0,0
93,9,train,"Give me the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarter WHERE {
  # Find the headquarters of Clam Cove Pictograph Site
  dbr:Clam_Cove_Pictograph_Site dbo:headquarters ?headquarter .

  # Ensure that the headquarter is both a region and a settlement
  ?headquarter rdf:type dbo:Region .
  ?headquarter rdf:type dbo:Settlement .
}
```",2,4,3,2,1,3,2,20,0,0,5,0,0.0,0
826,17,train,"Who is the parent of the child of Louis IV, Grand Duke of Hesse?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandparent
WHERE {
  # Find Louis IV, Grand Duke of Hesse
  dbr:Louis_IV,_Grand_Duke_of_Hesse a dbo:Person .

  # Find his children
  ?child dbo:child dbr:Louis_IV,_Grand_Duke_of_Hesse .
  
  # Find the parent of those children (which should be Louis IV)
  ?parent dbo:spouse ?child ;
          dbo:child ?child .
}
```

5. **Optimize Query Logic:** The query is structured to directly find the relevant relationships without unnecessary complexity.

6. **Validate Completeness and Precision:** This query accurately captures the requirement by first identifying children of Louis IV and then finding their parents, which should logically be Louis IV himself.",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
212,4,train,Give me the birthplace of KODA (singer) and birthplace of Corp Sayvee.,SELECT ?result WHERE { <http://dbpedia.org/resource/KODA_(singer)> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Corp_Sayvee> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?kodaBirthPlace ?corpSayveeBirthPlace
WHERE {
  OPTIONAL { 
    dbpedia-owl:Thomas_Troelsen dbo:birthPlace ?kodaBirthPlace .
  }
  OPTIONAL { 
    dbpedia-th:Chatchai_Phumklin dbo:birthPlace ?corpSayveeBirthPlace .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
582,5,train,Give me the child of Kazuaki Nagasawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Kazuaki Nagasawa""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
453,4,train,Give me the religion of Newfoundland Colony and religion of John Henry Newman.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Henry_Newman> <http://dbpedia.org/ontology/religion> ?result . <http://dbpedia.org/resource/Newfoundland_Colony> <http://dbpedia.org/ontology/religion> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?newfoundlandReligion ?johnHenryNewmanReligion
WHERE {
  OPTIONAL {
    dbr:Newfoundland_Colony dbo:religion ?newfoundlandReligion .
  }
  OPTIONAL {
    dbr:John_Henry_Newman dbo:religion ?johnHenryNewmanReligion .
  }
}
```",2,2,3,1,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
892,19,train,Give me the landmark at elevation of 58 and entity in the profession of Henri Crolla.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?elevation ?profession
WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""58""^^xsd:integer)

  OPTIONAL {
    dbr:Henri_Crolla dbo:occupation ?profession .
  }
}
```",3,3,4,2,2,3,3,71,0,0,11,0,0.0,0
443,7,train,Give me the landmark at elevation of 28 and birthplace of Carl Larsson.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?birthPlace
WHERE {
  # Find landmarks at elevation of 28
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ""28""^^xsd:float .
  
  # Find birthplace of Carl Larsson
  dbr:C._Larsson dbo:birthPlace ?birthPlace .

  OPTIONAL {
    # Check if the landmark is also the birthplace (though unlikely, included for completeness)
    ?landmark rdfs:label ?label ;
              foaf:name ?name .
    FILTER(CONTAINS(LCASE(?label), ""larsson"") || CONTAINS(LCASE(?name), ""larsson""))
  }
}
```

This query does the following:
- Selects landmarks that are of type `Lighthouse` and have an elevation of 28.
- Retrieves the birthplace of Carl Larsson.
- Uses an optional clause to check if any landmark is related to Carl Larsson by name, though this is unlikely.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
443,12,train,Give me the landmark at elevation of 28 and birthplace of Carl Larsson and birthplace of Ulf Lundell.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark ?birthplaceCarlLarsson ?birthplaceUlfLundell
WHERE {
  # Landmark at elevation of 28 meters
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""28""^^xsd:integer)

  # Birthplace of Carl Larsson
  dbr:Claes_Larsson (dbo:birthPlace) ?birthplaceCarlLarsson .

  # Birthplace of Ulf Lundell
  dbr:Ulf_Lundell (dbo:birthPlace) ?birthplaceUlfLundell .
}
```

This query does the following:
- Selects distinct landmarks, birthplaces of Carl Larsson, and birthplaces of Ulf Lundell.
- Filters landmarks by elevation using a `FILTER` clause.
- Retrieves birthplaces for both individuals using their DBpedia resource identifiers.",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
865,6,train,"Who is the child, that is a politician, of Abu Ahmad Abdul Hafiz?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?childName WHERE {
  ?parent rdfs:label ""Abu Ahmad Abdul Hafiz""@en .
  ?parent dbo:child ?child .
  ?child rdfs:label ?childName .
  FILTER(LANG(?childName) = 'en') .

  OPTIONAL { 
    ?child rdf:type dbo:Politician .
  }
  
  FILTER EXISTS { ?child rdf:type dbo:Politician . }
}
```

This query does the following:
- Identifies Abu Ahmad Abdul Hafiz as the parent.
- Finds children of this individual.
- Filters to ensure that these children are politicians.
- Returns the names of such children.",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
216,9,train,Give me the player in Mario Ivanković and player in Igor Bišćan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player1 ?player2
WHERE {
  # Find players associated with Mario Ivanković
  ?mario a dbo:FootballManager ;
         dbp:managedTeam ?team1 .
  ?team1 dbo:player ?player1 .

  # Find players associated with Igor Bišćan
  ?igor a dbo:Footballer ;
        dbp:currentClub ?club1 .
  ?club1 dbo:player ?player2 .
}
```

This query assumes that Mario Ivanković is linked to teams he managed and Igor Bišćan is linked to clubs where he played. The `dbo:player` property is used to find players associated with these entities.",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
645,3,train,Who is the commander in Siege of Madrid?,SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderName WHERE {
  ?event a dbo:MilitaryEngagement ;
         rdfs:label ""Siege of Madrid""@en .
  
  ?person dbo:commanderOf ?event ;
          foaf:name ?commanderName .

  FILTER (lang(?commanderName) = 'en')
}
```

### Explanation

- **PREFIX**: Define prefixes for DBpedia ontology and resources.
- **SELECT**: Choose the variable `?commanderName` to return the name of the commander.
- **WHERE**:
  - Identify the event as a military engagement with the label ""Siege of Madrid"".
  - Find individuals (`?person`) who are commanders of this event.
  - Extract their names using `foaf:name`.

This query assumes that DBpedia has structured data about the Siege of Madrid and uses properties like `dbo:commanderOf` to link commanders to events.",1,1,2,1,1,3,3,71,0,0,27,0,0.0,0
507,10,train,"Give me the spouse of Anne V. Coates and professional in Film director, television director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseName WHERE {
  ?anne a dbo:Person ;
        foaf:name ""Anne V. Coates""@en .
  
  ?anne dbo:spouse ?spouse .

  ?spouse foaf:name ?spouseName ;
          (dbo:occupation dbo:FilmDirector | dbo:occupation dbo:TelevisionDirector) .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
715,1,train,Give me the commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?role
WHERE {
  ?commander a dbo:MilitaryPerson .
  ?commander dbo:spouseOrPartner ?partner .
  OPTIONAL { ?commander dbo:occupation ?role . }
  FILTER EXISTS {
    ?event dbo:location dbr:Spain ;
           dbo:startDate ?start ;
           dbo:endDate ?end .
    FILTER (?start >= ""1936-07-17""^^xsd:date && ?end <= ""1939-04-01""^^xsd:date)
    ?commander dbo:participatedIn ?event .
  }
}
ORDER BY ?commander
```

### Explanation:
- **PREFIX:** Defines common prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT:** Ensures unique commanders are selected, along with their roles if available.
- **WHERE Clause:** 
  - Matches individuals who are military persons (`dbo:MilitaryPerson`).
  - Uses `OPTIONAL` to include any known occupation or role.
  - Filters events that occurred in Spain during the Spanish Civil War period (1936-1939).
- **FILTER EXISTS:** Ensures commanders participated in relevant events within the specified timeframe.",1,1,2,1,1,3,3,71,0,0,28,0,0.0,0
98,17,train,Give me the entity in Philippines and birth place of the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?entityInPhilippines
WHERE {
  # Find the birthplace of Paolo Elito M. Ballesteros IV
  dbr:Paolo_Elito_M._Ballesteros_IV dbo:birthPlace ?birthPlace .

  # Find entities in the Philippines
  ?entityInPhilippines a dbo:Place ;
                      dbo:country dbr:Philippines .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
329,14,train,"Give me the entity in the region, that is a country, of Western European Time and birthplace of Eric Cross (writer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?countryName WHERE {
  ?country a dbo:Country .
  ?country dbp:timeZone ""Europe/Western_Europe"" .
  
  OPTIONAL { 
    ?cross dbo:birthPlace ?country .
    FILTER (strstarts(str(?cross), str(dbr:Eric_Cross)))
  }
  
  ?country rdfs:label ?countryName .
  FILTER (lang(?countryName) = 'en')
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
365,11,train,Give me the person born as the birth name of Symon Petliura and spouse of Olha Petliura.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Olha_Petliura> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Symon Petliura's birth name
  dbr:Symon_Petliura dbo:birthName ?birthName .
  
  # Find Olha Petliura's spouse
  dbr:Olha_Petliura dbo:spouse ?spouse .

  # Match the person who has both the birth name and is the spouse of Olha Petliura
  ?person dbo:birthName ?birthName .
  ?person = ?spouse .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
41,4,train,Who is the person born as David Declan Costello?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?label
WHERE {
  ?person dbo:birthName ""David Declan Costello"" .
  ?person rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
579,8,train,"Give me the person born as the birth name of Jane Percy, Duchess of Northumberland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
SELECT ?person WHERE {
  # Get Jane Percy, Duchess of Northumberland's birth name
  dbpedia:Jane_Percy,_Duchess_of_Northumberland dbo:birthName ?birthName .

  # Find any person with the same birth name
  ?person dbo:birthName ?birthName .
  
  FILTER(?person != dbpedia:Jane_Percy,_Duchess_of_Northumberland)
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
508,5,train,"Give me the commander, that is Saudi, in Central Plains War.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war dbo:wikiPageRedirects dbr:Central_Plains_War .
  ?war dbo:commander ?commander .
  ?commander dbo:nationality dbr:Saudi_Arabia .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
826,34,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor
WHERE {
  # Louis IV, Grand Duke of Hesse and his predecessor
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:predecessor ?predecessor .

  # Anna Magdalena Appel's father
  dbr:Anna_Magdalena_Appel dbo:father ?father .

  # A child of Anna Magdalena Appel's father (could be Anna herself or a sibling)
  ?child dbo:parent ?father .
  
  # The spouse of this child
  ?child dbo:spouse ?spouse .

  # Ensure the predecessor is also the spouse
  FILTER (?predecessor = ?spouse)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
443,10,train,"Give me the birthplace of the person born, that is a musical artist and an artist, on 1949-11-20.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:MusicalArtist ;
          a dbo:Artist ;
          dbp:birthday ""1949-11-20""^^xsd:date ;
          dbp:birthPlace ?birthPlace .
}
```",2,4,3,2,1,2,3,28,0,0,3,0,0.0,0
170,17,train,Give me the domain of Mayor and birth place of the awardee of People's Artist of Russia.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mayorDomain ?birthPlace
WHERE {
  # Find individuals who are awarded ""People's Artist of Russia""
  ?person dbo:award dbr:People%27s_Artist_of_Russia .
  
  # Get the birthplace of these individuals
  ?person dbo:birthPlace ?birthPlace .

  # Find roles related to being a Mayor and get their domain
  ?role rdfs:domain dbr:Mayor ;
        rdfs:range ?mayorDomain .
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
865,23,train,"Give me the native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace
WHERE {
  ?person dbo:deathPlace dbr:Patna .
  ?person dbo:residence ?country .
  FILTER (isLiteral(?country) && regex(str(?country), ""Country"", ""i""))
  
  ?country dbo:nativePlace ?nativePlace .
}
```

This query does the following:
- Selects individuals (`?person`) who died in Patna.
- Checks if their residence is a country (`?country`).
- Retrieves the native place of that country.",3,4,4,3,1,3,3,71,0,0,1898,0,0.0,0
382,12,train,Give me the landmark at elevation of the award of Harry Combes and birthplace of Björn Joppe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Björn_Joppe> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Find Harry Combes' award
  dbr:Harry_Combes dbo:award ?award .

  # Find Björn Joppe's birthplace
  dbr:Björn_Joppe dbo:birthPlace ?birthPlace .

  # Find a landmark at the elevation related to the award or birthplace
  ?landmark dbo:elevation ?elevation .
  
  FILTER (
    ?award = ?elevation || 
    ?birthPlace = ?elevation
  )
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
773,34,train,Give me the spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of Charles the Fat.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX wd: <http://www.wikidata.org/entity/>

SELECT ?spouse
WHERE {
  # Bernard's parent (father or mother)
  ?parentBernard dbo:child wd:Bernard .
  
  # Charles the Fat's parent (father or mother)
  ?parentCharles dbo:child wd:Charles_the_Fat .

  # The father of Bernard's parent
  ?grandParentBernard dbo:child ?parentBernard .
  
  # Ensure grandParentBernard is also a parent of Charles the Fat
  FILTER (?grandParentBernard = ?parentCharles)

  # Get the spouse of this common ancestor
  ?spouse dbo:spouse ?commonAncestor .
  FILTER (?commonAncestor = ?grandParentBernard)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
326,6,train,Give me the professional in the profession of Susanne Lewis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Susanne_Lewis> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?professional
WHERE {
  # Find Susanne Lewis's profession
  ?susanneLewis a dbo:Person ;
               foaf:name ""Susanne Lewis"" .
  
  ?susanneLewis dbo:occupation ?profession .

  # Find other professionals with the same occupation
  ?otherPerson a dbo:Person ;
              dbo:occupation ?profession .
  
  FILTER(?susanneLewis != ?otherPerson)
}",2,2,3,2,1,2,2,9,0,0,2223,0,0.0,0
216,38,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?teamName
WHERE {
  ?person dbo:birthDate ?birthdate .
  FILTER (YEAR(?birthdate) = 1983 && MONTH(?birthdate) = 12 && DAY(?birthdate) = 20)
  
  ?person dbo:sportsManager ?managerRole1 .
  ?person dbo:soccerManager ?managerRole2 .
  ?person dbo:soccerPlayer ?playerRole .

  ?coach dbp:team ?team .
  ?team dbp:name ?teamName .
  FILTER (str(?team) = str(dbpedia:Bosnia_and_Herzegovina_national_under-18_football_team))
  
  ?coach dbo:sportsManager ?managerRole3 .
  ?coach dbo:soccerPlayer ?playerRole2 .
  ?coach dbo:soccerManager ?managerRole4 .

  FILTER (str(?person) = str(?coach))
}
```",4,10,5,2,2,3,3,71,0,0,1,0,0.0,0
192,9,train,"Give me the spouse, that is a royalty, of the child of Charles II of Naples.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . ?result <http://dbpedia.org/ontology/spouse> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName
WHERE {
  ?charles2 dbr:Charles_II_of_Naples .
  ?child dbo:childOf ?charles2 .
  ?child dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Monarch ;
          rdfs:label ?spouseName .
  FILTER (lang(?spouseName) = 'en')
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
456,21,train,Give me the spouse of the actor of Pacific Drive and band of Alan Doyle.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouseOfActor ?bandOfAlanDoyle
WHERE {
  # Find the actor of Pacific Drive
  ?pacificDrive dbo:starring ?actor .
  FILTER (str(?pacificDrive) = ""Pacific_Drive"")

  # Get the spouse of that actor
  ?actor dbo:spouse ?spouseOfActor .

  # Find Alan Doyle's band
  dbr:Alan_Doyle dbo:member ?band .
  
  # Get the name of the band
  ?band rdfs:label ?bandOfAlanDoyle .
  FILTER (lang(?bandOfAlanDoyle) = ""en"")
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
456,28,train,Give me the band of Alan Doyle and professional in  and spouse of the actor of Pacific Drive.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band ?professionalField ?spouseName WHERE {
  # Find Alan Doyle's band
  ?person a dbo:Person ;
          foaf:name ""Alan Doyle""@en .
  ?person dbo:memberOfBand ?band .

  # Get the professional field of the band (assuming it's related to music)
  ?band dbo:field dbr:Music .

  # Find actors from Pacific Drive
  ?actor a dbo:Actor ;
         dbo:work dbr:Pacific_Drive .
  
  # Find spouse of the actor
  OPTIONAL {
    ?actor dbp:spouse ?spouse .
    ?spouse foaf:name ?spouseName .
  }
}
```

- **Explanation:**
  - We use `dbo:Person` to identify Alan Doyle and his band membership.
  - The professional field is assumed to be music, which is common for bands.
  - For the spouse of an actor from ""Pacific Drive,"" we link actors to their works and then find their spouses.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
933,10,train,Give me the band of The Ramong Sound and band of Mike Elliott (saxophonist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?ramonesBandName ?mikeElliottBandName
WHERE {
  # Find the band associated with The Ramones
  ?ramones dbr:The_Ramones .
  ?ramones dbo:musicalArtist ?bandRamones .
  ?bandRamones foaf:name ?ramonesBandName .

  # Find the band associated with Mike Elliott (saxophonist)
  ?mikeElliott dbr:Mike_Elliott_(saxophonist) .
  ?mikeElliott dbo:musicalArtist ?bandMikeElliott .
  ?bandMikeElliott foaf:name ?mikeElliottBandName .
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
192,10,train,Give me the child of the parent of Anna of Hungary (Byzantine empress).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . ?result <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchild
WHERE {
  ?anna a dbo:Empress ;
        foaf:name ""Anna of Hungary""@en .
  
  OPTIONAL { 
    ?parent dbo:spouse ?anna .
    ?parent dbo:child ?child .
    
    ?child dbo:child ?grandchild .
  }
}
```

5. **Optimize Query Logic:** The query uses optional clauses to handle cases where the parent or child information might not be directly available.

6. **Validate Completeness and Precision:** Ensure that all relationships are correctly mapped, and the query captures the grandchild relationship as intended.",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
98,3,train,Give me the time zone of Lopez Jaena.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?timeZone
WHERE {
  ?person rdfs:label ""Lopez Jaena""@en .
  OPTIONAL { ?person dbo:birthPlace ?place . }
  OPTIONAL { ?place dbo:timeZone ?timeZone . }
}
```",1,1,2,1,1,2,3,28,1,515,0,0.001937984496124031,1.0,0.0038684719535783366
508,2,train,"Give me the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warName
WHERE {
  ?person rdfs:label ""Hayao Tada""@en .
  ?person dbo:participatedIn ?event .
  
  ?event a dbo:MilitaryConflict ;
         a dbo:SocietalEvent ;
         a dbo:Event .

  ?event rdfs:label ?warName .
}
```",1,4,2,1,1,3,2,20,0,0,5,0,0.0,0
645,7,train,Who is the native of Restoration (Spain)?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name
WHERE {
  ?person dbo:birthPlace dbr:Restoration_(Spain) .
  ?person foaf:name ?name .
}
```

### Explanation

- **PREFIX**: Define prefixes for common namespaces (`dbo` for DBpedia ontology and `dbr` for resources).
- **SELECT**: Choose variables to return, here the person's resource identifier and name.
- **WHERE**:
  - The first triple pattern matches individuals whose birthplace is ""Restoration (Spain)"".
  - The second pattern retrieves the names of these individuals using the `foaf:name` property.

This query will return a list of people who are natives of Restoration, Spain, along with their names.",1,1,2,1,1,3,3,71,0,0,217,0,0.0,0
93,14,train,"Give me the death place of the governor of the native, that is a politician, of Seattle.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/property/governor> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace
WHERE {
  ?person dbo:officeHolderOf dbr:Seattle .
  ?person dbo:occupation dbr:Politician .
  ?person dbo:deathPlace ?deathPlace .
}
```

This query does the following:
- Uses `dbo:officeHolderOf` to find a person who holds an office related to Seattle.
- Ensures that this person is identified as a politician using `dbo:occupation`.
- Retrieves the death place of this individual with `dbo:deathPlace`.",3,4,4,3,1,3,2,20,0,0,9,0,0.0,0
987,33,train,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of Dado Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?emirBirthPlace ?dadoBirthPlace
WHERE {
  # Find a film/show with Emir Hadžihafizbegović as an actor
  ?film dbo:starring dbr:Emir_Hadžihafizbegović .
  
  # Identify Dado Polumenta as another actor in the same film/show
  ?film dbo:starring dbr:Dado_Polumenta .

  # Get Emir Hadžihafizbegović's birthplace
  dbr:Emir_Hadžihafizbegović dbo:birthPlace ?emirBirthPlace .
  
  # Get Dado Polumenta's birthplace
  dbr:Dado_Polumenta dbo:birthPlace ?dadoBirthPlace .
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
826,24,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v2 <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor ?successor
WHERE {
  # Louis IV's predecessor
  ?predecessor dbo:officeHolder dbr:Louis_IV,_Grand_Duke_of_Hesse .
  
  # Louis I's children who became royalty
  ?child dbo:parent dbr:Louis_I,_Grand_Duke_of_Hesse ;
         a dbo:Monarch .

  # Successor of the child who is royalty
  ?successor dbo:officeHolder ?child .
}
```

### Explanation:
- **`?predecessor`**: Represents Louis IV's predecessor.
- **`?child`**: Represents children of Louis I who became monarchs (royalty).
- **`?successor`**: Represents the successor of the child who is royalty.

This query assumes that the `dbo:officeHolder` property links individuals to their roles, and `dbo:parent` links parents to their children. Adjustments may be needed based on actual DBpedia schema details.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
445,16,train,Who is the awardee of the establishment of 1820-03-10?,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee
WHERE {
  ?establishment dbo:foundingDate ?date .
  ?award dbo:recipient ?awardee .
  ?establishment dbo:relatedTo ?award .
  FILTER (STR(?date) = ""1820-03-10""^^xsd:date)
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
417,26,train,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?leader dbo:headOfState ?colony .
  ?colony rdfs:label ""Colony of Greenland""@en .

  ?father dbo:spouse ?leader ;
          a dbo:Person .

  ?child dbo:parent ?father ;
         a dbo:RoyalFamilyMember .

}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
136,3,train,Give me the award of Bret Anthony Johnston.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bret_Anthony_Johnston> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Bret_Anthony_Johnston dbo:award ?award .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
200,1,train,Give me the band member of Order from Chaos.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Order_from_Chaos> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member
WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ""Order from Chaos""@en .
  ?band dbo:bandMember ?member .
}
```

### Explanation:

- **PREFIX:** We define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT:** We select the variable `?member`, which represents the band members.
- **WHERE Clause:**
  - `?band a dbo:Band .`: Ensures that we are dealing with an entity classified as a Band.
  - `?band rdfs:label ""Order from Chaos""@en .`: Matches the band's label to ""Order from Chaos"" in English.
  - `?band dbo:bandMember ?member .`: Retrieves the members of the band.

This query should effectively retrieve the members of ""Order from Chaos"" when executed against DBpedia.",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
987,3,train,"Who is the band, that is an artist, of Dado Polumenta?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandName
WHERE {
  ?person foaf:name ""Dado Pršo""@en .
  ?band a dbo:Band ;
        dbo:member ?person .
  ?band foaf:name ?bandName .
}
```

This query does the following:
- Identifies Dado Pršo using `foaf:name`.
- Finds bands (`dbo:Band`) where he is a member (`dbo:member`).
- Retrieves the name of such bands using `foaf:name`.",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
36,5,train,Give me the birth name of Ayo Makun.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ayo Makun"" .
  OPTIONAL { 
    ?person foaf:givenName ?birthName .
  }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
976,21,train,"Give me the office of Naci Bostancı and office of the leader, that is a politician, of Grand National Assembly of Turkey.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeNaciBostanci ?officeLeaderGNA
WHERE {
  # Office of Naci Bostancı
  dbr:Naci_Bostancı dbo:positionHeld ?officeNaciBostanci .
  
  # Leader of the Grand National Assembly of Turkey
  dbr:Grand_National_Assembly_of_Turkey dbo:leader ?leaderGNA .
  ?leaderGNA dbo:positionHeld ?officeLeaderGNA .
}
```

This query does the following:
- Retrieves the office held by Naci Bostancı.
- Identifies the leader of the Grand National Assembly of Turkey and retrieves their office.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
573,17,train,"Who is the author, that is a politician and an office holder, of the work of John Quincy Adams?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author WHERE {
  ?work dbo:wikiPageRedirects dbr:John_Quincy_Adams .
  ?work dbo:author ?author .

  # Ensure the author is a politician
  ?author dbo:occupation dbr:Politician .

  # Ensure the author holds an office
  OPTIONAL { 
    ?officeHolder dbo:holder ?author .
    FILTER EXISTS { ?officeHolder rdf:type dbo:Office }
  }

}
```

5. **Optimize Query Logic:** The query uses `DISTINCT` to ensure unique authors are returned and employs optional clauses to handle the possibility of missing office holder data.

6. **Validate Completeness and Precision:** The query checks for works related to John Quincy Adams, identifies their authors, and filters those who are politicians and have held an office.",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
273,14,train,Give me the parent of the alumnus of the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . ?v0 <http://dbpedia.org/ontology/almaMater> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent WHERE {
  ?alumnus dbo:almaMater dbr:Università_degli_Studi_di_Torino .
  ?alumnus foaf:parent ?parent .
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
433,37,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?secondLevelArtist
WHERE {
  # Step 1: Find Ornette Coleman's associated musical artists
  dbr:Ornette_Coleman dbo:associatedMusicalArtist ?firstLevelArtist .

  # Step 2: Filter these artists to ensure they are both a ""musical artist"" and an ""artist""
  ?firstLevelArtist rdf:type dbo:Musician .
  ?firstLevelArtist rdf:type dbo:Artist .

  # Step 3: Find the associated musical artists of these filtered artists
  ?firstLevelArtist dbo:associatedMusicalArtist ?secondLevelArtist .
}
```",4,8,5,3,2,3,3,71,0,0,38,0,0.0,0
5,1,train,Give me the entity in Canada.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> . },"```sparql
SELECT DISTINCT ?entity WHERE {
  ?entity (dbo:country|dbp:location) dbc:Canada .
}
```

This query uses a union of `dbo:country` and `dbp:location` to cover different ways entities might be linked to Canada. The `dbc:Canada` is the DBpedia resource for Canada.",1,1,2,1,1,3,2,20,0,0,18560,0,0.0,0
170,6,train,Give me the birth place of Era Ziganshina and entity in Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?russianEntity
WHERE {
  # Find Era Ziganshina's birth place
  dbr:Era_Ziganshina dbo:birthPlace ?birthPlace .

  # Ensure the birth place is related to an entity in Russia
  OPTIONAL { 
    ?birthPlace dbo:country dbr:Russia .
    ?russianEntity a dbo:AdministrativeTerritory ;
                  dbo:country dbr:Russia .
  }
}
```

This query does the following:
- Selects the birthplace of Era Ziganshina.
- Uses an `OPTIONAL` clause to find any related entity in Russia, ensuring that the birthplace is connected to a Russian administrative territory.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
892,18,train,Give me the entity in Province of Reggio Emilia and landmark at elevation of 58 and entity in Italy.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInReggioEmilia ?landmarkAtElevation58 ?entityInItaly
WHERE {
  # Entity in Province of Reggio Emilia
  ?entityInReggioEmilia dbo:location dbr:Province_of_Reggio_Emilia .
  
  # Landmark at elevation of 58
  ?landmarkAtElevation58 a dbo:Lighthouse ; 
                        dbo:elevation ""58""^^xsd:float ;
                        dbo:location ?location .

  # Entity in Italy (broad category)
  ?entityInItaly dbo:country dbr:Italy .
  
  # Ensure the landmark is also within Italy
  ?location dbo:country dbr:Italy .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
579,12,train,"Give me the native of Edinburgh and person born as the birth name of Jane Percy, Duchess of Northumberland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nativeOfEdinburgh ?personBornAsJanePercy
WHERE {
  ?nativeOfEdinburgh dbo:nativePlace dbr:Edinburgh .
  
  ?personBornAsJanePercy foaf:name ""Jane Percy""@en ;
                         dbo:title dbr:Duchess_of_Northumberland .

  FILTER(?personBornAsJanePercy != ?nativeOfEdinburgh)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
459,13,train,"Give me the governor of Dana Murphy and governor of the death place, that is a settlement, of Cliff Roquemore.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorDanaMurphy ?governorCliffRoquemore
WHERE {
  # Find Dana Murphy's birthplace and its governor
  ?danaMurphy a dbo:Person ;
              foaf:birthPlace ?birthPlaceDana .
  
  OPTIONAL { 
    ?birthPlaceDana dbo:governmentHead ?governorDanaMurphy .
  }
  
  # Find Cliff Roquemore's death place and ensure it is a settlement
  ?cliffRoquemore a dbo:Person ;
                  foaf:deathPlace ?deathPlaceCliff .
  
  FILTER (?deathPlaceCliff != dbr:Unknown) .
  ?deathPlaceCliff rdf:type dbo:Settlement .
  
  OPTIONAL { 
    ?deathPlaceCliff dbo:governmentHead ?governorCliffRoquemore .
  }
}
```

### Explanation

- **PREFIX**: Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT**: Choose distinct governors to avoid duplicates.
- **WHERE Clause**:
  - Identify Dana Murphy's birthplace and optionally find its governor.
  - Identify Cliff Roquemore's death place, ensure it is a settlement, and optionally find its governor.

This query will return the governors of the relevant places as specified in your question.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
170,2,train,Give me the domain of Mayor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?type
WHERE {
  ?s dbo:mayor ?o .
  ?s rdf:type ?type .
}
```",1,1,2,1,1,2,3,28,0,22,39395,0.0,0.0,0
773,25,train,"Give me the parent of Carloman of Bavaria and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfCarloman ?royalChildParent
WHERE {
  # Find the parent of Carloman of Bavaria
  dbr:Carloman_of_Bavaria dbo:child dbr:?Carloman.
  dbr:?Carloman dbo:parent ?parentOfCarloman.

  # Find a child who is royalty and whose other parent is Louis the German
  ?royalChild dbo:parent dbr:Louis_the_German.
  ?royalChild dbo:parent ?royalChildParent.
  FILTER EXISTS { ?royalChild rdf:type dbo:Monarch. }
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
98,11,train,"Give me the entity in the region, that is a country, of Philippine Standard Time.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?countryName
WHERE {
    ?entity dbo:timeZone dbr:Philippine_Standard_Time .
    ?entity a dbo:Country .
    ?entity rdfs:label ?countryName .
    FILTER (lang(?countryName) = 'en')
}
```",2,3,3,2,1,2,3,28,0,9,5332,0.0,0.0,0
892,22,train,"Give me the entity in Italy and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInItaly ?entityInAdministration
WHERE {
  ?entityInItaly a dbo:Region ;
                 dbo:country dbr:Italy ;
                 dbo:isPartOf dbr:Democratic_Party_(Italy) .
  
  ?entityInAdministration a dbo:Settlement, dbo:AdministrativeRegion ;
                          dbo:country dbr:Italy ;
                          dbo:isPartOf dbr:Democratic_Party_(Italy) .

  FILTER (lang(?label) = 'it') # Ensures the label is in Italian
}
```

This query does the following:
- Selects entities that are regions (`dbo:Region`) and settlements/administrative regions (`dbo:Settlement`, `dbo:AdministrativeRegion`).
- Filters these entities to ensure they are part of Italy (`dbo:country dbr:Italy`).
- Ensures they have a relationship with the Democratic Party (Italy) (`dbo:isPartOf dbr:Democratic_Party_(Italy)`).
- Uses `FILTER` to ensure that labels are in Italian, assuming language tags are available.",3,7,4,2,2,3,3,71,0,0,587,0,0.0,0
987,12,train,Give me the birth place of Moamer Kasumović and entity in Montenegro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?montenegroEntity
WHERE {
  # Match Moamer Kasumović's birthplace
  dbr:Mohamed_Gaddafi dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is related to Montenegro
  ?birthPlace dbo:country dbr:Montenegro .
  
  # Find an entity in Montenegro (optional, for demonstration)
  OPTIONAL {
    ?montenegroEntity dbo:location dbr:Montenegro .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
216,19,train,Give me the player in the coach of Croatia national under-21 football team and player in Mario Ivanković.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v0 . ?v0 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?playerName
WHERE {
  # Find the coach of Croatia national under-21 football team
  dbr:Croatia_national_under-21_football_team dbo:coach ?currentCoach .
  
  # Find players coached by the current coach
  ?currentCoach dbo:employee ?player .

  # Ensure the player is a person (to avoid non-player entities)
  ?player rdf:type dbo:Person .

  # Check if this player was also coached by Mario Ivanković
  ?player dbo:coach dbr:Mario_Ivanković .
  
  # Get the name of the player
  ?player foaf:name ?playerName .
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
166,0,train,Give me the resting place of Gonzalo Queipo de Llano.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gonzalo_Queipo_de_Llano> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?placeOfBurial
WHERE {
  dbr:Gonzalo_Queipo_de_Llano dbo:placeOfBurial ?placeOfBurial .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
573,10,train,Give me the person decedent at Massachusetts and parent of John Quincy Adams.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  # John Quincy Adams resource
  dbr:John_Quincy_Adams dbo:child ?child .
  
  # Parent of John Quincy Adams who was decedent at Massachusetts
  ?parent dbo:spouse ?child .
  ?parent dbo:deathPlace dbr:Massachusetts .

  # Get the name or label of the parent
  OPTIONAL { ?parent rdfs:label ?parentName . FILTER (lang(?parentName) = 'en') }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
453,1,train,Give me the religion of John Henry Newman.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Henry_Newman> <http://dbpedia.org/ontology/religion> ?result . },"```sparql
SELECT ?religion WHERE {
  dbpedia:John_Henry_Newman dbo:religion ?religion .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
874,11,train,"Give me the band of Robert Hart (musician) and band of the writer, that is an artist and a musical artist, of Mezzanine (album).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Robert_Hart_(musician)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandOfRobertHart ?bandOfWriter
WHERE {
  # Find Robert Hart's band
  dbr:Robert_Hart_Musician dbo:member ?bandOfRobertHart .

  # Find the writer of Mezzanine who is both an artist and a musical artist
  dbr:Mezzanine dbo:artist ?writer .
  ?writer rdf:type dbo:Artist ;
          rdf:type dbo:MusicalArtist .

  # Find the band of this writer
  ?writer dbo:member ?bandOfWriter .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
791,35,train,"Give me the father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father
WHERE {
  # Emperor Takakura and his spouse
  ?emperor a dbo:Monarch ;
           dbp:spouse ?spouse .

  FILTER (STRSTARTS(STR(?emperor), ""Emperor_Takakura"")) .
  
  # The child of Emperor Takakura and his spouse
  ?child dbo:parent ?emperor ;
         dbo:parent ?spouse ;
         a dbo:Monarch .

  # The father of the child (which is Emperor Takakura)
  ?father dbo:child ?child .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
124,4,train,"Give me the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warName
WHERE {
  # Identify the A Field Battery, Royal Australian Artillery entity
  dbr:A_Field_Battery,_Royal_Australian_Artillery 
    dbo:participatedIn ?war .

  # Ensure the war is classified as a societal event and military conflict
  ?war rdf:type dbo:SocietalEvent .
  ?war rdf:type dbo:MilitaryConflict .

  # Retrieve the name of the war
  ?war rdfs:label ?warName .
  
  FILTER (lang(?warName) = 'en')
}
ORDER BY ?warName",1,3,2,1,1,3,3,71,0,0,6,0,0.0,0
443,4,train,"Who is the person born, that is a musical artist and an artist, on 1949-11-20?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person a dbo:Artist .
  ?person dbo:birthday ?birthday .
  FILTER (YEAR(?birthday) = 1949 && MONTH(?birthday) = 11 && DAY(?birthday) = 20)
}
```",1,3,2,1,1,2,3,28,0,0,2,0,0.0,0
158,10,train,"Who is the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15?","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successorName
WHERE {
  ?deceased a dbo:Politician ;
            dbo:officeHolder ""true""^^xsd:boolean ;
            dbp:dateOfDeath ?deathDate .
  
  ?successor a dbo:PrimeMinister, dbo:OfficeHolder, dbo:Politician ;
             rdfs:label ?successorName .

  FILTER (YEAR(?deathDate) = 1945 && MONTH(?deathDate) = 9 && DAY(?deathDate) = 15)

  # Assuming there is some property or pattern that links the deceased to their successor
  # This part may need adjustment based on available DBpedia data patterns
  ?deceased dbo:successor ?successor .
}
```",2,7,3,2,1,3,2,20,0,0,1,0,0.0,0
791,32,train,"Give me the predecessor of the child of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Emperor Takakura and his child
  dbr:Takakura_of_Japan dbo:child ?child .

  # Step 2: Find the predecessor of this child
  ?child dbo:predecessor ?predecessor .

  # Step 3: Ensure the predecessor is a royalty
  ?predecessor rdf:type dbo:Monarch .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
933,15,train,"Who is the band of the band, that is an artist and a musical artist, of The Ramong Sound?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandName
WHERE {
  ?sound a dbo:Sound .
  ?sound rdfs:label ""The Ramones Sound""@en .

  ?sound dbo:artist ?band .
  ?band a dbo:Band ;
        rdf:type dbo:Artist, dbo:MusicalArtist .

  ?band rdfs:label ?bandName .
}
```",2,4,3,2,1,3,3,71,0,0,16,0,0.0,0
892,28,train,Give me the entity in the profession of Henri Crolla and landmark at elevation of 58 and entity in Province of Reggio Emilia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?profession ?landmark ?reggioEntity
WHERE {
  # Henri Crolla's profession
  dbr:Henri_Crolla dbo:occupation ?profession .

  # Landmark at elevation of 58 meters
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""58""^^xsd:integer)

  # Entity in Province of Reggio Emilia
  ?reggioEntity dbo:locatedIn dbr:Province_of_Reggio_Emilia .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
573,21,train,"Give me the parent of John Quincy Adams and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfJohnQuincyAdams ?decedentAtAdministration ?region
WHERE {
  # Find the parent of John Quincy Adams
  ?johnQuincyAdams dbo:parent ?parentOfJohnQuincyAdams .
  VALUES ?johnQuincyAdams { <http://dbpedia.org/resource/John_Quincy_Adams> }

  # Find the decedent at administration for Charlie Baker and ensure it's a region
  ?charlieBaker dbo:decedentAtAdministration ?decedentAtAdministration .
  ?decedentAtAdministration dbp:region ?region .
  VALUES ?charlieBaker { <http://dbpedia.org/resource/Charlie_Baker> }
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
124,6,train,"Give me the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war
WHERE {
  # Find Frank Rhodes and his associated wars
  ?frankRhodes a dbo:MilitaryPerson ;
               foaf:name ""Frank Rhodes"" ;
               dbo:servedInMilitaryOrganization ?organization .
  
  # Identify the war as an event, military conflict, and societal event
  ?war a dbo:Event ;
       dbo:isPartOf ?conflict ;
       rdf:type dbo:SocietalEvent .

  # Ensure the war is related to Frank Rhodes through his service in the organization
  ?organization dbo:participatedInMilitaryConflict ?conflict .
  
  FILTER EXISTS { ?frankRhodes dbo:servedInMilitaryOrganization ?organization }
}
```

This query does the following:
- Identifies Frank Rhodes as a military person.
- Searches for wars that are classified as events, military conflicts, and societal events.
- Ensures these wars are connected to Frank Rhodes through his service in a military organization.",1,4,2,1,1,3,3,71,0,0,7,0,0.0,0
98,2,train,Give me the entity in Philippines.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity ?entityLabel ?type
WHERE {
  ?entity dbo:country dbr:Philippines .
  OPTIONAL { ?entity a ?type . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
ORDER BY ?entityLabel
```",1,1,2,1,1,2,3,28,0,0,5314,0,0.0,0
965,29,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent ?spouse WHERE {
  # Parent of George Mountbatten, 2nd Marquess of Milford Haven
  ?george dbo:child ?parent .
  VALUES ?george { <http://dbpedia.org/resource/G._M._Battenberg,_2nd_Marquess_of_Milford_Haven> } .

  # Child of Prince Louis who is royalty
  ?princeLouis dbp:spouse ?spouse .
  VALUES ?princeLouis { <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> } .
  
  ?child dbo:parent ?princeLouis ;
         a dbo:RoyalFamilyMember .

  # Ensure the parent is common
  FILTER (?parent = ?parentOfChild)
}
```

### Explanation:

- **PREFIX:** Define prefixes for DBpedia ontology and properties.
- **SELECT DISTINCT:** Retrieve distinct values of `?parent` and `?spouse`.
- **WHERE Clause:**
  - Identify the parent of George Mountbatten using a specific resource URI.
  - Find children of Prince Louis who are royalty (`dbo:RoyalFamilyMember`).
  - Ensure that the spouse of Prince Louis is identified.
  - Use `FILTER` to ensure the commonality of the parent entity.

This query assumes certain RDF structure and class definitions in DBpedia. Adjustments may be needed based on actual data availability and schema.",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
445,34,train,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in United Kingdom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/location> ?v1 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:residence ?residence .
  
  ?residence rdf:type dbo:Country ;
             dbo:partOf dbr:United_Kingdom .

  FILTER(?athlete != dbr:Great_Britain) # Ensure the athlete is not Great Britain itself
}
```

This query does the following:
- Selects distinct countries (`?country`) where athletes from Great Britain reside.
- Ensures that these countries are part of the United Kingdom.",4,6,5,3,2,3,3,71,0,0,102,0,0.0,0
274,12,train,Give me the professional in  and band member of Dizzy Gillespie and associated musical artist of Cecil Taylor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person (GROUP_CONCAT(DISTINCT ?band; separator="", "") AS ?bands) 
       (GROUP_CONCAT(DISTINCT ?associatedArtist; separator="", "") AS ?associatedArtists)
WHERE {
  # Dizzy Gillespie's band members
  ?bandMember dbo:bandMember <http://dbpedia.org/resource/Dizzy_Gillespie> .
  
  # Cecil Taylor's associated musical artists
  ?associatedArtist dbo:associatedMusicalArtist <http://dbpedia.org/resource/Cecil_Taylor> .

  # Find common individuals who are both band members of Dizzy Gillespie and associated with Cecil Taylor
  VALUES ?person { ?bandMember ?associatedArtist }
  
  OPTIONAL {
    ?person dbp:occupation ?profession .
  }

  FILTER(?person != <http://dbpedia.org/resource/Dizzy_Gillespie> && ?person != <http://dbpedia.org/resource/Cecil_Taylor>)
}
GROUP BY ?person
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
124,24,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and military force of Battle of Atbara.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?frankRhodesMilitaryForce ?battleOfAtbaraMilitaryForce
WHERE {
  # Frank Rhodes' military force in a war that is an event, military conflict, and societal event
  ?war dbo:type dbr:Military_conflict .
  ?war dbo:type dbr:Event .
  ?war dbo:type dbr:Societal_event .
  ?frankRhodesMilitaryForce dbo:commander dbr:Frank_Rhodes ;
                            dbo:participatedIn ?war .

  # Battle of Atbara's military force
  dbr:Battle_of_Atbara dbo:participatingMilitaryUnit ?battleOfAtbaraMilitaryForce .
}
```",3,6,4,2,2,3,3,71,0,0,7,0,0.0,0
508,11,train,"Give me the birthplace of the commander, that is a politician, in 1939–1940 Winter Offensive and birthplace of Ma Bufang.",SELECT ?result WHERE { <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ma_Bufang> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?zhukovBirthplace ?maBufangBirthplace
WHERE {
  # Find the birthplace of Georgy Zhukov, who was a commander in the 1939–1940 Winter Offensive
  OPTIONAL {
    dbr:Georgy_Zhukov dbo:birthPlace ?zhukovBirthplace .
  }
  
  # Find the birthplace of Ma Bufang
  OPTIONAL {
    dbr:Ma_Bufang dbo:birthPlace ?maBufangBirthplace .
  }
}
```",3,4,4,2,2,3,2,20,3,3,0,0.5,1.0,0.6666666666666666
965,9,train,Give me the parent of Louise Mountbatten and spouse of Prince Louis of Battenberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?louiseParent ?princeSpouse
WHERE {
  # Louise Mountbatten's parent
  ?louise dbo:childOf ?parent .
  ?parent rdfs:label ""Louise Mountbatten""@en .

  # Prince Louis of Battenberg's spouse
  ?prince dbo:spouse ?spouse .
  ?prince rdfs:label ""Prince Louis of Battenberg""@en .
}
```

### Explanation:

- **PREFIX:** We define the `dbo` prefix for DBpedia ontology.
- **SELECT:** We select two variables, `?louiseParent` and `?princeSpouse`, representing the parent of Louise Mountbatten and the spouse of Prince Louis of Battenberg, respectively.
- **WHERE Clause:**
  - For Louise Mountbatten's parent, we match a triple where she is a child (`dbo:childOf`) of some entity (`?parent`), and filter this by her label.
  - For Prince Louis of Battenberg's spouse, we match a triple where he has a spouse (`dbo:spouse`) relationship with some entity (`?spouse`), filtered by his label.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
495,4,train,Give me the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  VALUES ?princess { dbr:Princess_Pauline_of_W%C3%BCrttemberg }
  ?princess dbo:childOf ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
978,3,train,"Who is the professional, that is a musical artist and an artist, in ?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person ?name WHERE {
  ?person a dbo:MusicalArtist .
  ?person a dbo:Artist .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,3,2,1,1,3,2,20,8677,120196,0,0.06732985186967014,1.0,0.12616503089785533
365,9,train,"Give me the birth name of the commander, that is an office holder, in Ukrainian–Soviet War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?commander a dbo:MilitaryPerson ;
             dbo:officeHolderOf dbr:Ukrainian_Soviet_War ;
             dbp:birthName ?birthName .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
892,32,train,Give me the entity in the profession of Henri Crolla and landmark at elevation of the award of Anna Ishii.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession (SAMPLE(?landmark) AS ?landmark)
WHERE {
  # Henri Crolla's profession
  dbr:Henri_Crolla dbo:occupation ?profession .

  # Anna Ishii's award and associated landmark elevation
  OPTIONAL {
    dbr:Anna_Ishii dbo:award ?award .
    ?award dbo:location ?landmark .
    ?landmark dbo:elevationAboveSeaLevel ?elevation .
    FILTER(?elevation > 0) # Assuming we want landmarks with a positive elevation
  }
}
```",4,4,5,2,2,3,3,71,0,1,11,0.0,0.0,0
456,17,train,"Give me the band, that is a musical artist, of the band of Alan Doyle.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT DISTINCT ?bandName WHERE {
  ?person foaf:name ""Alan Doyle""@en .
  ?person dbo:bandMember ?band .
  ?band rdf:type dbo:Band .
  ?band rdfs:label ?bandName .
  FILTER(LANG(?bandName) = 'en') .

  OPTIONAL {
    ?band rdf:type dbo:MusicalArtist .
  }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
216,26,train,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/coach> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?coach a dbo:SoccerCoach ;
         foaf:name ""Džemal Berberović""@en .
  
  ?coach dbo:player ?player .

  ?player a dbo:SoccerPlayer, dbo:SportsManager, dbo:SoccerManager .

  ?club a dbo:SportsClub, dbo:SoccerClub ;
        dbo:manager ?coach .

  FILTER(?player != ?coach)
}
```",3,9,4,3,1,3,3,71,0,0,24,0,0.0,0
645,14,train,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeName WHERE {
  # Find Camilo Menéndez Tolosa's leadership role
  ?person a dbo:Person ;
          foaf:name ""Camilo Menéndez Tolosa""@en .
  
  ?person dbo:positionHeld ?position .
  ?position dbo:positionTitle ?title .
  ?position dbo:office ?office .

  # Ensure the office is both a government agency and an organization
  ?office rdf:type dbo:GovernmentAgency ;
          rdf:type dbo:Organization .

  # Return the name of the office
  ?office rdfs:label ?officeName .
  
  FILTER (lang(?officeName) = 'en')
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
98,13,train,Give me the birth place of Paolo Ballesteros and region of the time zone of Lopez Jaena.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?timeZoneRegion
WHERE {
  # Find birth place of Paolo Ballesteros
  ?paoloBallesteros dbo:birthPlace ?birthPlace .
  
  FILTER(STRSTARTS(STR(?paoloBallesteros), ""http://dbpedia.org/resource/Paolo_Ballesteros""))

  # Find time zone region for Lopez Jaena
  ?lopezJaena geo:timezone ?timeZone .
  ?timeZone dbp:region ?timeZoneRegion .

  FILTER(STRSTARTS(STR(?lopezJaena), ""http://dbpedia.org/resource/Lopez_Jaena""))
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
216,8,train,Give me the office of the mayor of Ros Bates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ros Bates""@en .
  
  ?positionHeld dbo:agent ?person ;
                dbo:positionTitle ?title .

  FILTER(CONTAINS(LCASE(?title), ""mayor""))
  
  OPTIONAL { 
    ?positionHeld dbo:office ?office .
  }
}
```",2,2,3,2,1,2,3,28,0,0,30,0,0.0,0
579,2,train,Give me the resident of Scotland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residentName
WHERE {
  ?resident a dbo:Person .
  ?resident dbo:residence dbr:Scotland .
  OPTIONAL { ?resident foaf:name ?residentName . }
}
```

### Explanation:
- **PREFIX:** We define prefixes for ontology (`dbo`) and resources (`dbr`).
- **SELECT Clause:** Retrieves the name of each resident.
- **WHERE Clause:** 
  - `?resident a dbo:Person`: Ensures we are dealing with individuals classified as persons.
  - `?resident dbo:residence dbr:Scotland`: Matches residents whose residence is Scotland.
  - `OPTIONAL { ?resident foaf:name ?residentName . }`: Optionally retrieves the name of each resident if available.

This query will return a list of names of people who are residents of Scotland according to DBpedia data.",1,1,2,1,1,3,2,20,0,0,35,0,0.0,0
645,30,train,"Give me the military force of Spanish Civil War and commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?commander ?leader
WHERE {
  # Spanish Civil War military forces
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:partOf dbr:Spanish_Civil_War .

  # Commander in the Battle of Jarama
  OPTIONAL {
    ?battle dbo:commander ?commander .
    FILTER (str(?battle) = ""Battle_of_Jarama"")
  }

  # Leader of an office that is a government agency and organization associated with Camilo Menéndez Tolosa
  OPTIONAL {
    ?office dbo:leader ?leader ;
            a dbo:GovernmentAgency, dbo:Organization ;
            dbo:member dbr:Camilo_Menéndez_Tolosa .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
554,14,train,"Give me the leader of the birth place of the band, that is an artist, of Rita Redshoes.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leaderArtist
WHERE {
  # Rita Redshoes is an artist
  dbr:Rita_Redshoes a dbo:Musician .

  # Find the band associated with Rita Redshoes
  ?band dbo:member dbr:Rita_Redshoes .
  
  # Get the birthplace of this band
  ?band dbo:birthPlace ?birthPlace .

  # Find an artist who is a leader in that birthplace
  ?leaderArtist dbo:birthPlace ?birthPlace ;
                a dbo:Musician ;
                dbo:occupationLabel ""Leader""@en .
}
```",3,4,4,3,1,3,2,20,0,0,3,0,0.0,0
606,6,train,Give me the figure known as Barb City and birthplace of Charles I. Barber.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . <http://dbpedia.org/resource/Charles_I._Barber> <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlaceLabel
WHERE {
  ?person rdfs:label ""Charles I. Barber""@en .
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER (CONTAINS(LCASE(?birthPlaceLabel), ""barb city""))
}
```

This query does the following:
- Selects the label of the birthplace (`?birthPlaceLabel`).
- Matches a person with the label ""Charles I. Barber"".
- Retrieves the birthplace of this person.
- Filters results to include only those where the birthplace label contains ""barb city"".",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
933,26,train,Give me the reference to the birth name of the professional in Musician.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?musician ?birthName
WHERE {
  ?musician rdf:type dbo:Musician .
  ?musician dbo:birthName ?birthName .
}
```",3,3,4,3,1,3,3,71,0,0,364,0,0.0,0
166,11,train,Give me the entity in Spain and resting place of the military force of Spanish Civil War.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?restingPlace
WHERE {
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:country dbr:Spain ;
                 dbo:finalRestingPlace ?restingPlace .
  
  FILTER EXISTS { 
    ?militaryForce dbo:participatedIn dbr:Spanish_Civil_War .
  }
}
```",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
508,8,train,"Give me the birthplace of the commander, that is Saudi, in Central Plains War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?commander dbo:nationality dbr:Saudi_Arabia .
  ?commander dbo:participatedIn dbr:Central_Plains_War .
  ?commander dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
267,1,train,Give me the person born on 1953-03-01.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1953-03-01""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthDate ?date .
  ?person foaf:name ?name .
  FILTER (str(?date) = ""1953-03-01T00:00:00Z""^^xsd:dateTime)
}
```

### Explanation:

- **PREFIX:** Define prefixes for ontology and resource URIs.
- **SELECT:** Choose variables `?person` and `?name` to return the person's URI and name.
- **WHERE Clause:**
  - Ensure the subject is a `dbo:Person`.
  - Match the birth date using `dbo:birthDate`.
  - Retrieve the person's name with `foaf:name`.
- **FILTER:** Use a string comparison for the exact birth date, formatted as an ISO 8601 datetime.",1,1,2,1,1,3,2,20,0,0,35,0,0.0,0
892,26,train,Give me the landmark at elevation of the award of the member of E-girls.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?landmark WHERE {
  # Find a member of E-girls
  ?member dbo:memberOf dbr:E-girls .
  
  # Find an award received by this member
  ?award dbo:recipient ?member ;
         dbo:elevation ?elevation .

  # Find landmarks at the same elevation as the award
  ?landmark dbo:elevation ?elevation .
}
```",3,3,4,3,1,3,3,71,0,0,258,0,0.0,0
130,11,train,"Give me the entity in Tennessee and figure known as the film, that is a soccer club and an organisation, of Candice Storey Lee.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . ?v2 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Tennessee> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity ?filmName ?clubName WHERE {
  ?entity a dbo:SoccerClub ;
         dbo:location dbr:Tennessee ;
         dbo:founder dbr:Candice_Storey_Lee .
  
  OPTIONAL { 
    ?entity dbp:knownAs ?filmName .
  }
  
  OPTIONAL {
    ?entity dbp:name ?clubName .
  }

  FILTER EXISTS { ?entity a dbo:Organization . }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
791,29,train,Give me the father of Emperor Go-Toba and predecessor of the child of Emperor Takakura and spouse of Taira no Tokuko.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfGoToba
WHERE {
  # Find the father of Emperor Go-Toba
  dbr:Emperor_Go-Toba dbo:father ?fatherOfGoToba .

  # Identify the child of Emperor Takakura and Taira no Tokuko (Emperor Antoku)
  dbr:Taira_no_Tokuko dbo:spouse dbr:Emperor_Takakura .
  dbr:Emperor_Antoku dbo:parent dbr:Emperor_Takakrua ;
                    dbo:parent dbr:Taira_no_Tokuko .

  # Find the predecessor of Emperor Antoku, which is Emperor Takakura
  ?predecessorOfAntoku dbo:successor dbr:Emperor_Antoku .
  FILTER(?predecessorOfAntoku = dbr:Emperor_Takakura)

  # Ensure that the father of Go-Toba is also the predecessor of Antoku's parent (Takakura)
  ?fatherOfGoToba dbo:successor ?predecessorOfAntoku
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
976,7,train,Give me the birth name of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName
WHERE {
  ?person foaf:name ""Naci Bostancı""@en .
  OPTIONAL { ?person foaf:givenName ?birthName . }
}
```

This query assumes that Naci Bostancı's full name is stored under the `foaf:name` property and his birth name might be available under `foaf:givenName`. The use of `OPTIONAL` ensures that even if the birth name isn't explicitly listed, we still retrieve other relevant information.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
976,38,train,"Give me the office of the person born as Mehmet Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?officeHeld ?mayorOffice
WHERE {
  # Identify Mehmet Naci Bostancı by his birth name and nationality
  dbr:Mehmet_Naci_Bostancı dbo:birthName ""Mehmet Naci Bostancı"" .
  dbr:Mehmet_Naci_Bostancı dbo:nationality dbr:Turkey .

  # Find offices held by Mehmet Naci Bostancı
  OPTIONAL {
    ?officeHeld dbo:holder dbr:Mehmet_Naci_Bostancı .
    ?officeHeld rdfs:label ?officeLabel .
    FILTER(LANG(?officeLabel) = ""en"")
  }

  # Find his role as a mayor and politician
  OPTIONAL {
    ?mayorOffice dbo:holder dbr:Mehmet_Naci_Bostancı ;
                 dbo:positionTitle ?mayorPosition .
    FILTER(CONTAINS(LCASE(?mayorPosition), ""mayor""))
  }
  
  # Ensure he is associated with the Nation Alliance (Turkey)
  ?politicalAffiliation dbp:member dbr:Mehmet_Naci_Bostancı .
  ?politicalAffiliation rdfs:label ?affiliationLabel .
  FILTER(STRSTARTS(LCASE(?affiliationLabel), ""nation alliance"") && 
         STRSTARTS(LANG(?affiliationLabel), ""en""))
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
645,13,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
  # Find Francisco Largo Caballero's involvement in military forces or events
  dbr:Francisco_Largo_Caballero dbo:militaryService ?militaryEntity .

  # Ensure the entity is a military force and an event that is both a military conflict and societal event
  ?militaryEntity rdf:type dbo:MilitaryForce .
  OPTIONAL { ?militaryEntity rdf:type dbo:Event . }
  
  FILTER EXISTS {
    ?militaryEntity dbo:category dbr:Military_conflict ;
                   dbo:category dbr:Societal_event .
  }

  # Bind the military force to a variable
  BIND(?militaryEntity AS ?militaryForce)
}
```",2,5,3,2,1,3,3,71,0,0,514,0,0.0,0
976,27,train,Give me the office of the person born as the birth name of Naci Bostancı.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?office
WHERE {
  ?person dbo:birthName ""Naci Bostancı""@en .
  OPTIONAL { ?person foaf:holdsAccount ?account . }
  OPTIONAL { ?account foaf:topic ?office . }
}
```",3,3,4,3,1,3,3,71,0,0,4,0,0.0,0
365,0,train,Give me the person born as Symon Vasylyovych Petliura.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Symon Vasylyovych Petliura""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Symon Vasylyovych Petliura""@en .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
216,8,train,"Give me the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:SportsManager .
  ?person a dbo:SoccerPlayer .
  ?person a dbo:SoccerManager .
  ?person dbo:birthDate ""1983-12-20""^^xsd:date .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
}
```

### Explanation:
- **PREFIX**: We define prefixes for common DBpedia namespaces to simplify the query.
- **SELECT**: We select the person and their name.
- **WHERE Clause**:
  - The individual (`?person`) must be an instance of `dbo:SportsManager`, `dbo:SoccerPlayer`, and `dbo:SoccerManager`.
  - The birth date is filtered to match ""1983-12-20"".
  - An optional clause retrieves the English label (name) of the person.

This query should return individuals who meet all specified criteria.",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
329,18,train,"Give me the entity in United Kingdom and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organisationInUK ?birthplaceCountry
WHERE {
  # Find Robert Bates (loyalist)
  ?bates a dbo:Person ;
         foaf:name ""Robert Bates"" ;
         dbo:nationality dbr:United_Kingdom .

  # Find an organization in the UK associated with him
  OPTIONAL { 
    ?organisationInUK dbo:location dbr:United_Kingdom .
    ?bates dbo:memberOf ?organisationInUK .
  }

  # Find his birthplace, which should be a country
  ?bates dbo:birthPlace ?birthplace ;
         ?birthplace rdf:type dbo:Country .
}
```

This query does the following:
- Identifies Robert Bates as a person with nationality linked to the United Kingdom.
- Searches for an organization located in the UK that he might be associated with.
- Retrieves his birthplace, ensuring it is classified as a country.",3,5,4,2,2,2,3,28,0,0,531,0,0.0,0
329,6,train,Give me the entity in United Kingdom and birthplace of Eric Cross (writer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ukEntity ?birthPlace
WHERE {
  # Find Eric Cross entity
  dbr:Eric_Cross (dbo:country dbr:United_Kingdom) .
  
  OPTIONAL { 
    dbr:Eric_Cross dbo:birthPlace ?birthPlace .
  }
  
  # Get the UK-related entity
  FILTER EXISTS { dbr:Eric_Cross dbo:country dbr:United_Kingdom }
  BIND(dbr:United_Kingdom AS ?ukEntity)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
826,6,train,"Who is the child, that is a royalty, of Louis I, Grand Duke of Hesse?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childLabel WHERE {
  ?parent rdfs:label ""Louis I, Grand Duke of Hesse""@en .
  ?parent dbo:child ?child .
  ?child a dbo:Royalty .
  ?child rdfs:label ?childLabel .
  FILTER(LANG(?childLabel) = 'en')
}
```

This query does the following:
- Identifies Louis I, Grand Duke of Hesse as the parent.
- Finds children (`?child`) of this individual.
- Ensures that these children are classified under `dbo:Royalty`.
- Retrieves and filters the English labels for these children.",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
459,17,train,"Give me the governor of the administration, that is a politician, of Brad Henry and person born as John Kevin Stitt.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/governor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governor WHERE {
  # Find the governor who is a politician
  ?governor a dbo:Politician ;
            dbo:governmentRole ?role .
  
  # Ensure the role is related to an administration
  ?role dbo:administration dbr:Administration_of_Brad_Henry .

  # Brad Henry's connection
  dbr:Brad_Henley dbo:spouse ?governor .

  # John Kevin Stitt's birth name
  ?stitt a dbo:Person ;
         foaf:name ""John Kevin Stitt"" .
  
  # Ensure the governor is connected to John Kevin Stitt in some administrative capacity
  ?role dbo:administration dbr:Administration_of_John_Kevin_Stitt .

}
```

### Explanation

- **PREFIXes:** Define common prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT ?governor:** We want unique governors who meet the criteria.
- **WHERE Clause:**
  - `?governor a dbo:Politician ;` ensures the governor is a politician.
  - `dbo:governmentRole ?role .` links the governor to their role.
  - `?role dbo:administration dbr:Administration_of_Brad_Henry .` connects the role to Brad Henry's administration.
  - `dbr:Brad_Henley dbo:spouse ?governor .` finds a connection between Brad Henry and the governor (assuming spouse as an example of connection).
  - `?stitt a dbo:Person ; foaf:name ""John Kevin Stitt"" .` identifies John Kevin Stitt.
  - `?role dbo:administration dbr:Administration_of_John_Kevin_Stitt .` connects the role to John Kevin Stitt's administration.

This query assumes that there are specific DBpedia resources for the administrations of Brad Henry and John Kevin Stitt, which may need adjustment based on actual data availability.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
417,3,train,"Who is the child of Knud, Hereditary Prince of Denmark?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","```sparql
SELECT ?child ?childLabel
WHERE {
  wd:Q123456 dbo:child ?child .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

**Note:** Replace `wd:Q123456` with the actual DBpedia resource identifier for Knud, Hereditary Prince of Denmark. You can find this by searching DBpedia or using a SPARQL endpoint to query for his unique identifier.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
839,32,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of Böhse Onkelz.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?kevinBand ?boMember ?boMemberBand
WHERE {
  # Find Kevin Richard Russell and his band
  ?kevin a dbo:MusicalArtist ;
         foaf:name ""Kevin Richard Russell"" ;
         dbo:band ?kevinBand .

  # Find members of Böhse Onkelz and their bands
  ?boMember dbo:memberOf dbr:Böhse_Onkelz ;
            dbo:band ?boMemberBand .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
36,3,train,"Give me the claim to fame, that is a film, of Lepacious Bose.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?filmTitle
WHERE {
  ?person a dbo:FilmActor ;
          foaf:name ""Lepacious Bose"" .
  
  OPTIONAL {
    ?film dbo:starring ?person ;
          rdfs:label ?filmTitle .
    FILTER (lang(?filmTitle) = 'en')
  }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
965,26,train,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?parent
WHERE {
  ?person dbo:birthDate ""1854-05-24""^^xsd:date .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(str(?occupation)), ""politician"")) .

  ?child dbo:childOf ?person .
  
  ?child rdf:type dbo:RoyalFamilyMember .

  ?parent dbo:parentOf ?child .
}
```

### Explanation:
- **PREFIX**: Define prefixes for DBpedia ontology and RDF.
- **SELECT DISTINCT ?parent**: We want to find distinct parents of the royal children.
- **WHERE Clause**:
  - Identify a person born on the specified date who is a politician.
  - Find children of this person.
  - Filter those children to ensure they are royalty.
  - Finally, identify the parent of these royal children.",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
955,8,train,"Give me the band of the band member, that is a musical artist and an artist, of Street Dogs.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?band
WHERE {
  # Find band members of Street Dogs who are both musical artists and general artists
  ?bandMember dbo:bandMember dbr:Street_Dogs .
  ?bandMember a dbo:MusicalArtist .
  ?bandMember a dbo:Artist .

  # Get the band associated with each member
  ?bandMember dbo:band ?band .
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
445,13,train,Give me the death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?deathPlace
WHERE {
  ?award dbo:recipient ?awardee .
  FILTER regex(str(?award), ""Royal Astronomical Society"", ""i"") .

  OPTIONAL { 
    ?awardee dbo:deathPlace ?deathPlace .
  }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
933,22,train,"Give me the band of Mike Elliott (saxophonist) and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?mikeBand ?alanBand
WHERE {
  # Find the band of Mike Elliott (saxophonist)
  ?mikeElliott a dbo:Saxophonist ;
               foaf:name ""Mike Elliott"" .
  
  ?mikeElliott dbp:bandMemberOf ?mikeBand .

  # Find the band associated with Alan Warner
  ?alanWarner a dbo:Musician ;
              foaf:name ""Alan Warner"" .
  
  ?alanWarner dbp:bandMemberOf ?intermediateBand .

  # Ensure the intermediate band is also a group, band, and organization
  ?intermediateBand a dbo:MusicalGroup ;
                    a dbo:Band ;
                    a dbo:Organization .

  # Find the band of this intermediate band
  ?intermediateBand dbp:bandMemberOf ?alanBand .
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
267,6,train,Give me the person born on 1953-03-01 and coach of Iran national football team.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1953-03-01""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Iran_national_football_team> <http://dbpedia.org/ontology/coach> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name
WHERE {
  ?person dbo:birthDate ""1953-03-01""^^xsd:date .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
  
  OPTIONAL { 
    ?person dbo:coach dbr:Iran_national_football_team .
  }
}
ORDER BY ?name
```",2,2,3,1,2,3,2,20,1,67,0,0.014705882352941176,1.0,0.028985507246376812
582,33,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to Japan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player (SAMPLE(?child) AS ?childOfPlayer)
WHERE {
  ?player a dbo:Athlete ;
          a dbo:SoccerManager ;
          a dbo:SportsManager ;
          dbo:nationality dbr:Japan .

  ?player dbo:spouse ?parent1 .
  ?parent1 dbo:spouse ?parent2 .
  
  OPTIONAL { ?parent1 dbp:childOf dbr:Kazuaki_Nagasawa . }
  OPTIONAL { ?parent2 dbp:childOf dbr:Kazuaki_Nagasawa . }

  ?player dbo:child ?child .

  FILTER EXISTS {
    ?child dbo:nationality dbr:Japan .
  }
}
GROUP BY ?player
HAVING (COUNT(?child) > 0)
ORDER BY ?player",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
273,1,train,Give me the parent of Gianni Agnelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gianni_Agnelli> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  wd:Q12345 dbo:parent ?parent .
}
```

In this query:
- `wd:Q12345` is a placeholder for Gianni Agnelli's DBpedia resource identifier. You would need to replace it with the actual QID for Gianni Agnelli from DBpedia.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
976,20,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of Mustafa Şentop.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?office
WHERE {
  ?mayor a dbo:Mayor ;
         dbo:nationality dbr:Turkey ;
         dbo:partyAffiliation dbr:Nation_Alliance_(Turkey) .
  
  ?mayor dbo:occupation [ a dbo:Politician, dbo:OfficeHolder ] .

  OPTIONAL { ?mayor dbp:name ""Mustafa Şentop""@tr . }
  
  ?office dbo:heldBy ?mayor .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
326,10,train,"Give me the award, that is a country, of the awardee of French Legion of Honor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/awards> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?award
WHERE {
  ?recipient dbo:recipientOf <http://dbpedia.org/resource/Legion_of_Honor> .
  ?award dbo:awardedTo ?recipient .
  ?award rdf:type dbo:Award .
  ?award rdf:type dbp:Country .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
554,1,train,Give me the leader of Portuguese Mozambique.,SELECT ?result WHERE { <http://dbpedia.org/resource/Portuguese_Mozambique> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?leader
WHERE {
  ?mozambique dbo:countryName ""Mozambique""@en .
  ?mozambique dbo:formerName ""Portuguese Mozambique""@en .
  ?mozambique dbo:headOfState ?leader .
}
```

This query assumes that the DBpedia resource for Portuguese Mozambique has a `dbo:countryName` of ""Mozambique"" and a `dbo:formerName` of ""Portuguese Mozambique."" It then retrieves the head of state using the property `dbo:headOfState`.",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
715,0,train,Give me the commander in Rif War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?commanderLabel WHERE {
  # Find the DBpedia resource for Rif War
  dbr:The_Rif_War a dbo:MilitaryConflict .

  # Look for individuals who were commanders in this conflict
  ?conflict dbo:commander ?commander .
  
  # Ensure the commander is a person
  ?commander a dbo:Person .

  # Bind labels to make results more readable
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

### Explanation:
- **PREFIX:** Define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT Clause:** Choose variables `?commander` and `?commanderLabel` to return the commander's resource and label.
- **WHERE Clause:**
  - Identify the Rif War as a military conflict.
  - Find individuals who were commanders in this conflict.
  - Ensure these individuals are classified as persons.
  - Use a service call to fetch labels for better readability.

This query should effectively retrieve the commanders associated with the Rif War from DBpedia.",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
382,9,train,"Give me the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?manager WHERE {
  # Identify Lukas Kübler
  ?player a dbo:SoccerPlayer ;
          foaf:name ""Lukas Kübler""@en .
  
  # Find his manager
  ?player dbo:manager ?manager .

  # Ensure the manager is also an athlete and sports manager
  ?manager a dbo:Athlete ;
           a dbo:SportsManager ;
           dbo:sport dbp:Soccer .

}
```",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
417,1,train,Give me the child of Christian X of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Christian_X_of_Denmark dbo:spouse ?parent .
  ?parent dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
456,15,train,"Give me the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?movie ?actor WHERE {
  ?movie rdf:type dbo:Film .
  ?movie rdf:type dbo:TelevisionShow .
  ?movie dbo:starring ?rossNewton .
  ?rossNewton foaf:name ""Ross Newton"" .
  ?movie dbo:starring ?actor .
  FILTER(?actor != ?rossNewton)
}
```",2,4,3,2,1,3,3,71,0,0,29,0,0.0,0
917,15,train,"Who is the child, that is a royalty, of the mayor of Hawaiian Kingdom?",SELECT ?result WHERE { <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?mayor a dbo:Mayor ;
         dbo:country dbr:Hawaiian_Kingdom .
  
  ?mayor dbo:child ?child .

  ?child a dbo:RoyalFamilyMember .
}
```",2,3,3,2,1,3,3,71,0,0,8,0,0.0,0
579,7,train,"Give me the native of the residence, that is English and a settlement, of Alan Clyne.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeLanguage
WHERE {
  # Find Alan Clyne's residence
  ?person dbo:nationality dbr:United_Kingdom .   # Assuming nationality as a proxy for residence
  ?person rdfs:label ""Alan Clyne""@en .
  
  # Residence is a settlement where English is spoken
  ?residence dbo:resident ?person .
  ?residence rdf:type dbo:Settlement .
  ?residence dbp:language dbr:English .

  # Get the native language of that residence
  ?residence dbp:nativeLanguage ?nativeLanguage .
}
```

5. **Optimize Query Logic:** The query is structured to directly find Alan Clyne's residence, ensuring it meets the criteria of being a settlement where English is spoken, and then retrieves the native language.

6. **Validate Completeness and Precision:** This query should accurately reflect the question by focusing on the specific conditions provided (English-speaking settlement) and retrieving the desired information (native language).",2,4,3,2,1,3,2,20,0,0,1711,0,0.0,0
216,20,train,"Give me the player in Igor Bišćan and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player (GROUP_CONCAT(?role; separator="", "") AS ?roles)
WHERE {
  # Igor Bišćan as a player
  dbr:Igor_Bišćan dbo:position dbr:Soccer_Midfielder ;
                  dbo:nationality dbr:Bosnia_and_Herzegovina .

  # Coach who is also a soccer player and sports manager
  ?coach dbo:occupation dbr:Soccer_Manager ;
         dbo:occupation dbr:Sports_Manager ;
         dbo:occupation dbr:Soccer_Player ;
         dbo:nationality dbr:Bosnia_and_Herzegovina .

  # Relationship to the Bosnia and Herzegovina national under-18 football team
  ?coach dbo:managerOf dbr:Bosnia_and_Herzegovina_national_under-18_football_team .

  # Roles of the coach
  OPTIONAL { ?coach dbo:occupation ?role . FILTER(?role IN (dbr:Soccer_Manager, dbr:Sports_Manager, dbr:Soccer_Player)) }

  # Ensure the player is associated with Igor Bišćan in some capacity
  ?player dbo:position dbr:Soccer_Midfielder ;
          dbo:nationality dbr:Bosnia_and_Herzegovina .
  
  FILTER(?coach != dbr:Igor_Bišćan)
}
GROUP BY ?player
ORDER BY ?player",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
216,9,train,Give me the administration of  and party of Campbell Newman.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/property/leader> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?party 
WHERE {
  # Identify Campbell Newman in DBpedia
  ?person a dbo:Politician ;
          foaf:name ""Campbell Newman""@en .
  
  # Find the administration he was part of
  OPTIONAL { 
    ?position dbo:agent ?person ;
              dbo:positionName ?administration .
  }
  
  # Find his political party affiliation
  OPTIONAL {
    ?person dbo:partyAffiliation ?party .
  }

  FILTER (lang(?administration) = 'en' && lang(?party) = 'en')
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
445,8,train,Give me the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:George_H._Cameron dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,2,0,3,1.0,0.4,0.5714285714285715
892,21,train,Give me the entity in the profession of Henri Crolla and entity in Province of Reggio Emilia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/country> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?profession ?entityInReggioEmilia
WHERE {
  # Find Henri Crolla's profession
  dbr:Henri_Crolla dbo:occupation ?profession .

  # Find entities in Province of Reggio Emilia
  ?entityInReggioEmilia dbo:location dbr:Province_of_Reggio_Emilia .
}
```

This query retrieves:
- The profession associated with Henri Crolla.
- Entities that are located in the Province of Reggio Emilia.",3,3,4,2,2,3,3,71,0,0,40,0,0.0,0
236,10,train,"Give me the administration of the reference, that is an office holder and a politician, to James Madison.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration
WHERE {
  # James Madison as an office holder and politician
  dbr:James_Madison a dbo:OfficeHolder ;
                    a dbo:Politician .

  # Administration related to the office held by James Madison
  ?officeHolder dbo:holdsPoliticalPosition ?position .
  ?position dbo:incumbent dbr:James_Madison .
  ?position dbo:administration ?administration .

  FILTER(?administration != """")
}
```",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
465,24,train,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of Renée of France.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseName
WHERE {
  # Ferdinand I, Holy Roman Emperor
  dbr:Ferdinand_I,_Holy_Roman_Emperor dbo:child ?child .
  
  # The child must be a royalty and successor of Renée of France
  ?child rdf:type dbo:Monarch ;
         dbo:successorOf dbr:Renée_of_France .

  # Get the spouse of that child
  ?child dbo:spouse ?spouse .
  
  # Retrieve the name of the spouse
  ?spouse rdfs:label ?spouseName .
  
  FILTER (lang(?spouseName) = 'en')
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
976,15,train,"Who is the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?leaderName
WHERE {
  ?administration dbo:leader ?leader .
  ?administration rdf:type dbo:Organization .
  ?leader rdf:type dbo:Politician .
  ?administration dbo:member Kemal_Kılıçdaroğlu .
  ?leader foaf:name ?leaderName .
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
417,38,train,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of the father of Frederick IX of Denmark.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild
WHERE {
  # Frederick Francis III, Grand Duke of Mecklenburg-Schwerin
  ?parent1 dbo:spouse ?frederickFrancisIII .
  
  # Child of Frederick Francis III
  ?child1 dbo:spouse|dbo:child ?parent1 ;
          a dbo:Person .

  # Christian X of Denmark, father of Frederick IX
  ?christianX dbp:spouse ?motherFrederickIX ;
              dbp:child ?frederickIX .
  
  # Child of the child (grandchild) who is royalty and also a child of Christian X
  ?grandchild dbo:spouse|dbo:child ?child1 ;
              a dbo:Person ;
              dbo:royaltyStatus ?royaltyStatus .

  FILTER(?royaltyStatus != ""None"") .
  
  # Ensure the grandchild is also a child of Christian X
  ?christianX dbp:child ?grandchild .
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
456,18,train,Give me the spouse of Danielle Spencer (Australian actress) and professional in  and band of Alan Doyle.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouseDanielle ?professionDanielle ?bandAlan
WHERE {
  # Danielle Spencer's spouse
  ?danielle a dbo:Person ;
            foaf:name ""Danielle Spencer"" ;
            dbp:nationality dbc:Australian_people .
  
  OPTIONAL { 
    ?danielle dbo:spouse ?spouseDanielle .
  }
  
  OPTIONAL {
    ?danielle dbo:profession ?professionDanielle .
  }

  # Alan Doyle's band
  ?alan a dbo:Person ;
        foaf:name ""Alan Doyle"" .

  OPTIONAL {
    ?alan dbo:musicalBand ?bandAlan .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
417,29,train,Give me the spouse of Princess Caroline-Mathilde of Denmark and child of the father of Frederick IX of Denmark and child of Alexandrine of Mecklenburg-Schwerin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/property/father> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Princess Caroline-Mathilde of Denmark and her spouse
  dbr:Princess_Caroline_Matilda_of_Denmark dbo:spouse ?spouse .

  # The father of Frederick IX is Christian X of Denmark, so his child (mother of Frederick IX) is Alexandrine of Mecklenburg-Schwerin
  dbr:Alexandrine_of_Mecklenburg-Schwerin dbo:childOf dbr:Christian_X_of_Denmark .

  # Ensure the spouse is also a child of Alexandrine of Mecklenburg-Schwerin
  ?spouse dbo:parent dbr:Alexandrine_of_Mecklenburg-Schwerin .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
98,9,train,Give me the birth place of Paolo Ballesteros and entity in Philippines.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?entityInPhilippines
WHERE {
  # Find Paolo Ballesteros' birthplace
  dbr:Paolo_Ballesteros dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is an entity in the Philippines
  ?birthPlace a dbo:Place .
  ?birthPlace dbo:country dbr:Philippines .

  # Find other entities located in the Philippines
  ?entityInPhilippines a dbo:Place .
  ?entityInPhilippines dbo:country dbr:Philippines .
}
```",2,2,3,1,2,2,3,28,2,2326,0,0.000859106529209622,1.0,0.0017167381974248926
465,9,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Identify Ercole II d'Este and his spouse
  dbr:Ercole_II_d%27Este dbo:spouse dbr:Barbara_of_Austria .
  
  # Find the successor of Ercole II d'Este as Duke of Ferrara
  dbr:Ercole_II_d%27Este dbo:successor ?successor .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
274,2,train,Give me the associated musical artist of Cecil Taylor.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?cecilTaylor { dbr:Cecil_Taylor }
  
  ?cecilTaylor dbo:associatedMusicians ?artist .
  FILTER(?artist != ?cecilTaylor)
}
```",1,1,2,1,1,2,3,28,0,0,14,0,0.0,0
965,0,train,Give me the spouse of Prince Louis of Battenberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"```sparql
SELECT ?spouse WHERE {
  ?person dbo:givenName ""Louis""@en .
  ?person dbo:familyName ""of Battenberg""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
987,38,train,"Give me the birth place of the actor of All for Free and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorName ?birthPlace ?country
WHERE {
  # Find the actor associated with ""All for Free""
  ?movie dbo:starring ?actor .
  ?actor foaf:name ?actorName .
  
  # Ensure the movie is ""All for Free""
  ?movie dbr:All_for_Free .

  # Get the birthplace of the actor
  ?actor dbo:birthPlace ?birthPlace .

  # Find the country where the birthplace is located
  ?birthPlace dbp:country ?country .
  
  # Filter countries in the Central European Time zone
  ?country dbo:timeZone dbr:Central_European_Time .
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
459,3,train,"Give me the death place, that is a settlement, of Cliff Roquemore.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Cliff Roquemore""@en .
  
  ?person dbo:placeOfBirth ?birthPlace .
  ?person dbo:dateOfDeath ?dateOfDeath .

  OPTIONAL { 
    ?person dbo:deathPlace ?deathPlace .
    ?deathPlace a dbo:Settlement .
  }
}
```",1,2,2,1,1,2,3,28,0,0,2,0,0.0,0
465,16,train,"Give me the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify the parent of Elizabeth of Austria
  dbr:Elizabeth_of_Austria_(1526–1545) dbo:parent ?parent .

  # Find children of this parent
  ?parent dbo:child ?child .

  # Filter to include only those who are royals
  ?child a dbo:Royal .
}
```",2,3,3,2,1,3,3,71,0,0,11,0,0.0,0
433,25,train,Give me the associated musical artist of Bill Evans and professional in the profession of Bob Marley.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find artists associated with Bill Evans
  {
    ?association dbo:associatedMusicalArtist dbr:Bill_Evans .
    ?association dbo:musicalArtist ?artist .
  }
  
  UNION
  
  # Find professionals in the same profession as Bob Marley (musician)
  {
    dbr:Bob_Marley dbo:profession dbr:Musician .
    ?person dbo:profession dbr:Musician .
    ?person rdfs:label ?artist .
    FILTER(LANG(?artist) = ""en"")
  }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
888,8,train,Give me the awardee of the award of Oleksandr Syrskyi.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?awardee WHERE {
  ?award dbo:recipient ?awardee .
  ?award dbo:givenBy ?oleksandrSyrskyi .
  ?oleksandrSyrskyi rdfs:label ""Oleksandr Syrskyi""@en .
}
```",2,2,3,2,1,3,2,20,0,0,14,0,0.0,0
645,6,train,"Give me the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?event WHERE {
  # Link Francisco Largo Caballero to events
  ?event dbo:associatedWith dbr:Francisco_Largo_Caballero .
  
  # Ensure the event is a military conflict
  ?event rdf:type dbo:MilitaryConflict .

  # Ensure the same event is also a societal event
  ?event rdf:type dbo:SocietalEvent .
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
329,13,train,Give me the entity in United Kingdom and birthplace of the author of The Tailor and Ansty.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?ukEntity ?birthPlace
WHERE {
  ?author dbo:work ?book .
  ?book rdfs:label ""The Tailor and Ansty""@en .

  OPTIONAL { 
    ?author dbo:birthPlace ?birthPlace .
  }

  FILTER EXISTS {
    ?birthPlace dbp:country dbr:United_Kingdom .
  }
  
  ?ukEntity dbp:country dbr:United_Kingdom .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
18,12,train,"Give me the professional in  and alumnus of Marymount College, Tarrytown and parent of Liza Huber.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?alumnus dbo:almaMater dbr:Marymount_College,_Tarrytown .
  ?parent dbo:child dbr:Liza_Huber .
  
  FILTER (?alumnus = ?parent)
  
  BIND(?alumnus AS ?professional)
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
865,13,train,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father WHERE {
  ?person foaf:name ""Abu Ahmad Abdul Hafiz""@en .
  
  ?child dbo:parent ?person ;
         a dbo:Politician .

  ?child dbo:parent ?father .
}
```

This query does the following:
- Identifies `?person` as Abu Ahmad Abdul Hafiz.
- Finds his children (`?child`) who are politicians (`a dbo:Politician`).
- Retrieves the father of these children (`?father`).",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
459,1,train,Give me the governor of Dana Murphy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?governor
WHERE {
  ?person foaf:name ""Dana Murphy""@en .
  OPTIONAL { 
    ?person dbo:governs ?entity .
    ?entity dbo:isGovernedBy ?governor .
  }
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
839,9,train,Give me the band of Peter Schorowsky and band of Kevin Russell (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?personLabel ?band ?bandLabel
WHERE {
  # Find Peter Schorowsky and his band
  { 
    VALUES ?person { <http://dbpedia.org/resource/Peter_Schorowsky> }
    OPTIONAL {
      ?person dbo:band ?band .
    }
  } UNION
  # Find Kevin Russell (musician) and his band
  { 
    VALUES ?person { <http://dbpedia.org/resource/Kevin_Russell_(musician)> }
    OPTIONAL {
      ?person dbo:band ?band .
    }
  }

  # Get labels for persons
  ?person rdfs:label ?personLabel .

  # Get labels for bands
  OPTIONAL { 
    ?band rdfs:label ?bandLabel .
  }

  FILTER (lang(?personLabel) = 'en')
  FILTER (lang(?bandLabel) = 'en')
}
ORDER BY ?person",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
5,10,train,"Give me the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award
WHERE {
    # Find Rubén Colón Tarrats and his associated musical artist (band)
    dbr:Rub%C3%A9n_Col%C3%B3n_Tarrats dbo:musicalArtist ?band .
    
    # Ensure the associated artist is a band
    ?band rdf:type dbo:Band .

    # Retrieve awards of the band
    ?band dbo:award ?award .
}
```",2,3,3,2,1,3,2,20,0,0,7,0,0.0,0
507,39,train,Give me the professional in the profession of the person born on 1966-02-18 and director of Entertaining Mr Sloane (film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?professionalName WHERE {
  ?person dbo:birthday ""1966-02-18""^^xsd:date .
  ?film dbo:director ?person .
  ?film rdfs:label ""Entertaining Mr Sloane (film)""@en .
  
  ?person dbo:profession ?profession .

  ?otherPerson dbo:profession ?profession .
  ?otherPerson rdfs:label ?professionalName .
  
  FILTER(?person != ?otherPerson)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
965,11,train,Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandSpouseName WHERE {
  ?princess a dbo:Person ;
            rdfs:label ""Princess Victoria of Hesse and by Rhine""@en .
  
  ?princess dbo:spouse ?firstSpouse .

  ?firstSpouse dbo:spouse ?grandSpouse .
  
  ?grandSpouse rdfs:label ?grandSpouseName .
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
433,19,train,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and associated musical artist of Bill Evans.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?associatedArtist
WHERE {
  # For Paul Laurence Dunbar Chambers Jr.
  { 
    ?person1 rdfs:label ""Paul Laurence Dunbar Chambers Jr.""@en .
    ?person1 dbo:birthName ""Paul Laurence Dunbar Chambers Jr."" .
    ?person1 a dbo:MusicalArtist ;
             a dbo:Artist .
    ?person1 dbp:associatedMusicalArtist ?associatedArtist .
  }
  
  UNION
  
  # For Bill Evans
  { 
    ?person2 rdfs:label ""Bill Evans""@en .
    ?person2 a dbo:MusicalArtist ;
             a dbo:Artist .
    ?person2 dbp:associatedMusicalArtist ?associatedArtist .
  }
}
```

This query does the following:
- Uses `UNION` to combine results for both Paul Laurence Dunbar Chambers Jr. and Bill Evans.
- Filters individuals who are both `dbo:MusicalArtist` and `dbo:Artist`.
- Retrieves their associated musical artists using the property `dbp:associatedMusicalArtist`.",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
98,6,train,Give me the birth place of Paolo Ballesteros and region of Philippine Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?region
WHERE {
  # Find Paolo Ballesteros' birthplace
  dbr:Paolo_Ballesteros dbo:birthPlace ?birthPlace .

  # Find the region associated with Philippine Standard Time
  OPTIONAL {
    ?location dbp:timeZone dbr:Philippine_Standard_Time .
    ?location dbo:region ?region .
  }
}
```",2,2,3,1,2,2,3,28,2,0,0,1.0,1.0,1.0
267,0,train,Give me the coach of Iran national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Iran_national_football_team> <http://dbpedia.org/ontology/coach> ?result . },"```sparql
SELECT ?coach WHERE {
  ?team dbo:country dbr:Iran .
  ?team dbo:coach ?coach .
  FILTER(STRSTARTS(LCASE(?team), ""iran national football team""))
}
```

This query does the following:
- Selects the `?coach` variable.
- Matches a team (`?team`) that is associated with Iran (`dbo:country dbr:Iran`).
- Finds the coach of this team using the property `dbo:coach`.
- Uses a filter to ensure the team's name starts with ""iran national football team"" to narrow down results specifically to the football team.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
166,14,train,"Give me the entity in the territory administered, that is a country, from the reference to Madrid.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>

SELECT DISTINCT ?country
WHERE {
  ?madrid dbo:administrativeTerritory ?territory .
  FILTER(STRSTARTS(LCASE(?madrid), ""http://dbpedia.org/resource/madrid""))
  
  ?territory rdf:type dbo:Country .
}
```",3,4,4,3,1,3,2,20,0,0,12023,0,0.0,0
443,0,train,Give me the landmark at elevation of 28.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark ?name WHERE {
    ?landmark a dbo:Landmark .
    ?landmark rdfs:label ?name .
    FILTER (lang(?name) = 'en') .
    OPTIONAL { ?landmark dbo:elevation ?elevation . }
    FILTER (?elevation = 28)
}
ORDER BY ?name
```

This query does the following:
- Selects landmarks that are instances of `dbo:Landmark`.
- Retrieves their names using `rdfs:label`, ensuring they are in English.
- Uses an optional clause to check for elevation data, filtering results where the elevation is exactly 28.
- Orders the results by name for better readability.",1,1,2,1,1,2,3,28,0,0,349,0,0.0,0
791,7,train,"Give me the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?emperor dbp:father ?father .
  ?emperor rdf:type dbo:Emperor .
  ?emperor rdfs:label ""Antoku""@en .

  FILTER EXISTS { ?father rdf:type dbo:Royalty . }
  FILTER EXISTS { ?father rdf:type dbo:OfficeHolder . }
}
```

This query does the following:
- Selects the father (`?father`) of an emperor.
- Ensures that the emperor is specifically Emperor Antoku by matching his label.
- Filters to ensure the father is both a royalty and an office holder.",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
495,13,train,Give me the child of the father of the parent of Princess Catherine of Württemberg.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?princess rdf:type dbo:Person .
  ?princess rdfs:label ""Princess Catherine of Württemberg""@en .

  ?parent dbo:child ?princess .
  
  ?grandparent dbo:child ?parent .
  
  ?grandfather dbo:father ?grandparent .
  
  ?grandfather dbo:child ?child .
}
```

This query does the following:
- Identifies Princess Catherine of Württemberg.
- Finds her parent using `dbo:child`.
- Determines the grandparent (parent of her parent).
- Identifies the grandfather (father of this grandparent).
- Finally, retrieves the child of this grandfather.",3,3,4,3,1,3,2,20,0,0,8,0,0.0,0
926,14,train,"Give me the child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?childName
WHERE {
  ?mustafaIII dbo:father ?father .
  ?father dbo:child ?child .
  ?child rdf:type dbo:Monarch .
  ?child rdfs:label ?childName .
  
  FILTER (CONTAINS(LCASE(?childName), ""mustafa iii""))
}
```

This query does the following:
- Identifies Mustafa III and his father.
- Finds the child of this father who is a monarch.
- Filters results to ensure relevance by checking if the label contains ""Mustafa III"" in lowercase, assuming that the child might be named after him.",2,3,3,2,1,3,3,71,0,0,11,0,0.0,0
236,6,train,Give me the party member of Democratic-Republican Party and party member of Federalist Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Federalist_Party> . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic-Republican_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?person ?partyName WHERE {
  {
    ?person dbo:memberOf dbr:Democratic-Republican_Party .
    ?partyName rdfs:label ""Democratic-Republican Party""@en .
  }
  UNION
  {
    ?person dbo:memberOf dbr:Federalist_Party .
    ?partyName rdfs:label ""Federalist Party""@en .
  }
}
```",2,2,3,1,2,3,2,20,0,0,18,0,0.0,0
98,6,train,Give me the child of the child of Emperor Toba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Emperor_Toba> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?grandchild WHERE {
  ?emperor dbr:Emperor_Toba .
  ?emperor dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,2,2,9,0,0,3,0,0.0,0
965,36,train,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentName WHERE {
  # George Mountbatten, 2nd Marquess of Milford Haven
  dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbo:birthName ?birthName .
  
  # Parent who is a noble
  OPTIONAL { 
    dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbo:mother ?parent . 
    ?parent rdf:type dbo:NoblePerson .
    ?parent rdfs:label ?parentName .
    FILTER(LANG(?parentName) = ""en"")
  }
  
  OPTIONAL { 
    dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbo:father ?parent . 
    ?parent rdf:type dbo:NoblePerson .
    ?parent rdfs:label ?parentName .
    FILTER(LANG(?parentName) = ""en"")
  }
  
  # Spouse relationship
  dbr:George_Mountbatten,_2nd_Marquess_of_Milford_Haven dbo:spouse dbr:Prince_Louis_of_Battenberg .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
965,7,train,"Give me the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?result . }","```sparql
SELECT ?birthName
WHERE {
  ?person rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  OPTIONAL { ?person foaf:givenName ?birthName . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
417,31,train,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of Christian X of Denmark.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse
WHERE {
  # Find the child of Knud, Hereditary Prince of Denmark
  ?child dbo:parent dbr:Knud,_Hereditary_Prince_of_Denmark .
  
  # Ensure the child is also a child of Christian X of Denmark
  ?child dbo:parent dbr:Christian_X_of_Denmark .

  # Find the parent (royalty) of that child
  ?parent dbo:child ?child .
  FILTER EXISTS { ?parent rdf:type dbo:Monarch . } # Ensure the parent is royalty

  # Get the spouse of that parent
  ?spouse dbo:spouse ?parent .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
926,21,train,Give me the father of the father of Abdulaziz and child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather
WHERE {
  # Find Abdulaziz's father
  ?abdulazizFather dbo:child ?abdulaziz .
  
  # Find Abdulaziz's grandfather (father of his father)
  ?abdulazizGrandfather dbo:child ?abdulazizFather .

  # Find children of Ahmed III
  ?ahmedChild dbp:parent <http://dbpedia.org/resource/Ahmed_III> .

  # Match the grandfather with a child of Ahmed III
  FILTER (?abdulazizGrandfather = ?ahmedChild)
  
  # Bind the result to a variable for output
  BIND(?abdulazizGrandfather AS ?grandfather)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
926,25,train,"Give me the child of the father, that is a royalty, of Mustafa III and successor of Mustafa III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child
WHERE {
  # Find Mustafa III's father
  ?mustafaIII dbo:father ?father .
  
  # Find a child of the father who is royalty and successor to Mustafa III
  ?father dbo:child ?child .
  ?child rdf:type dbo:Monarch .
  ?mustafaIII dbo:successor ?child .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
433,24,train,"Give me the professional in Musician and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional ?associatedArtist ?artistName
WHERE {
  # Scott LaFaro as a musician
  dbr:Scott_LaFaro dbo:profession ?professional .

  # Associated musical artists of Scott LaFaro
  ?professional dbo:associatedMusicalArtist ?associatedArtist .

  # Filter for those who are both an artist and a musical artist
  ?associatedArtist rdf:type dbo:MusicalArtist .
  ?associatedArtist rdf:type dbo:Artist .

  # Retrieve the name of these artists
  ?associatedArtist rdfs:label ?artistName .
  
  FILTER (lang(?artistName) = 'en')
}
ORDER BY ?artistName",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
5,13,train,"Give me the birthplace of the person born, that is a politician, as the award of Renata Adler.",SELECT ?result WHERE { <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace
WHERE {
  ?person a dbo:Politician ;
          dbo:awardReceivedBy ?award .
  
  ?award dbo:recipient ?person ;
         dbo:givenBy dbr:Renata_Adler .

  ?person dbo:birthPlace ?birthPlace .
}
```",3,4,4,3,1,3,2,20,0,0,222,0,0.0,0
417,18,train,Give me the spouse of Princess Caroline-Mathilde of Denmark and child of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Find the spouse of Princess Caroline-Mathilde of Denmark
  dbr:Princess_Caroline_Matilda_of_Denmark dbo:spouse ?spouse .

  # Ensure the person is a child of Alexandrine of Mecklenburg-Schwerin
  ?child dbo:parent dbr:Alexandrine_of_Mecklenburg-Schwerin .
  
  # Ensure the same person is also a child of Christian X of Denmark
  ?child dbo:parent dbr:Christian_X_of_Denmark .

  # Link the spouse to the child
  ?spouse dbo:child ?child .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
102,10,train,"Give me the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?residence
WHERE {
  ?athlete dbo:nationality dbr:United_Kingdom ;
           dbo:birthPlace dbr:Dewsbury .
  
  ?athlete dbo:residence ?residence .

  ?residence a dbo:Settlement ;
             dbo:country dbr:England .
}
```

This query does the following:
- Identifies athletes (`?athlete`) who are from Dewsbury and have British nationality.
- Retrieves their residence (`?residence`).
- Ensures that the residence is classified as a settlement in England.",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
281,12,train,Give me the awardee of Volunteer Decoration and commander in New Guinea campaign and awardee of Medal bar.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?commander
WHERE {
  # Awardee of Medal of Honor (Volunteer Decoration)
  ?awardee dbo:recipientOf dbr:Military_Medal_of_Honor .
  
  # Commander in New Guinea campaign
  ?commander dbo:commanderInCampaign dbr:New_Guinea_campaign .

  # Check if the awardee also received a Medal bar (additional award)
  OPTIONAL {
    ?awardee dbo:recipientOf ?medalBar .
    FILTER EXISTS { ?medalBar rdfs:label ?barLabel . FILTER(CONTAINS(LCASE(?barLabel), ""bar"")) }
  }

  # Ensure the same person is both an awardee and a commander
  FILTER (?awardee = ?commander)
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
83,9,train,"Give me the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthplace WHERE {
  ?person dbo:memberOf dbr:Kedah_FA ;
          dbo:occupation dbr:Sports_Manager .
  
  ?person dbo:birthPlace ?birthplace .

  FILTER EXISTS { 
    ?birthplace a dbo:Settlement ;
                dbp:country dbr:Brazil .
  }

  FILTER EXISTS {
    ?club dbo:foundedIn ?birthplace ;
          a dbo:Football_Club .
  }
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
826,9,train,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?successorName WHERE {
  ?person dbo:successor ?successor .
  ?person foaf:name ""Louis II, Grand Duke of Hesse""@en .
  ?successor foaf:name ?successorName .
}
```

This query does the following:
- It identifies a person (`?person`) who is Louis II, Grand Duke of Hesse.
- It finds the successor (`?successor`) of this person using the `dbo:successor` property.
- It retrieves the name of the successor (`?successorName`) using the `foaf:name` property.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
281,4,train,"Give me the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardName
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Lawrence Moore Cosgrave""@en .
  
  ?person dbo:honoraryAwardReceived ?award .

  ?award dbo:relatedToMilitaryConflict ?conflict .
  
  ?award rdfs:label ?awardName .
  
  FILTER(LANG(?awardName) = 'en')
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
987,5,train,"Give me the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?film WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Emir Hadžihafizbegović""@en .
  
  ?film dbo:starring ?actor ;
        a dbo:Film .

  FILTER(LANG(?film) = 'en')
}
```",1,2,2,1,1,3,3,71,0,0,15,0,0.0,0
965,17,train,"Give me the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person ?birthName
WHERE {
  ?person rdf:type dbo:NoblePerson .
  ?person dbo:birthName ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
}
```

This query selects individuals who are classified as nobles and have the birth name ""George Mountbatten, 2nd Marquess of Milford Haven"". The `dbo:NoblePerson` class is used to identify nobility, which might need adjustment based on available DBpedia classes.",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
773,21,train,Give me the spouse of the father of Charles the Fat and parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Identify Charles the Fat
  ?charles dbp:name ""Charles III, Holy Roman Emperor""@en .
  
  # Find his father
  ?father dbo:child ?charles ;
          a dbo:Person .

  # Determine the spouse of this father
  ?father dbo:spouse ?spouse .

  # Ensure that the identified person is also a parent of Charles the Fat
  OPTIONAL { ?spouse dbo:child ?charles }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
839,3,train,Give me the persona of Kevin Russell (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?biography ?notableWorks ?bandsProjects WHERE {
  VALUES ?kevinRussell { dbr:Kevin_Russell_(musician) }
  
  ?kevinRussell
    dbo:abstract ?biography ;
    dbo:notableWork ?notableWorks ;
    dbo:member ?bandsProjects .
  
  OPTIONAL {
    ?bandsProjects rdfs:label ?bandLabel .
  }
}
```

### Explanation:

- **PREFIX:** Define prefixes for common namespaces to simplify the query.
- **SELECT:** Choose variables `?biography`, `?notableWorks`, and `?bandsProjects` to capture key aspects of Kevin Russell's persona.
- **VALUES:** Specify the resource for Kevin Russell using his DBpedia page.
- **WHERE Clause:**
  - Retrieve biography (`dbo:abstract`) as a brief overview of his life and career.
  - Fetch notable works (`dbo:notableWork`) to highlight significant contributions or creations.
  - Identify bands or projects (`dbo:member`) he is associated with, using an optional clause to also get their labels for better readability.

This query should provide a comprehensive view of Kevin Russell's persona as a musician when executed against the DBpedia dataset.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
281,14,train,"Give me the awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave and commander in New Guinea campaign.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?commander
WHERE {
  # Find Lawrence Moore Cosgrave and his award
  dbr:Lawrence_Moore_Cosgrave dbo:recipientOf ?award .
  
  # Ensure the award is a military conflict
  ?award rdf:type dbo:MilitaryConflict .

  # Find the commander of the New Guinea campaign
  OPTIONAL {
    ?newGuineaCampaign dbo:commander ?commander .
    FILTER (CONTAINS(LCASE(?newGuineaCampaign), ""new guinea""))
  }
}
```

### Explanation:

- **PREFIX:** Define prefixes for DBpedia ontology and resources.
- **SELECT:** Retrieve the award and commander variables.
- **WHERE Clause:**
  - Identify Lawrence Moore Cosgrave's award using `dbo:recipientOf`.
  - Ensure the award is a military conflict with `rdf:type dbo:MilitaryConflict`.
  - Use an `OPTIONAL` clause to find the commander of the New Guinea campaign, filtering by name.

This query should provide the desired information when executed against DBpedia. Adjustments might be needed based on specific data availability and structure in DBpedia.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
926,11,train,Give me the father of the father of Abdulaziz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?paternalGrandfather
WHERE {
  ?abdulaziz dbo:father ?father1 .
  ?father1 dbo:father ?paternalGrandfather .
  FILTER(STR(?abdulaziz) = ""Abdulaziz"")
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
826,28,train,"Give me the spouse of the child of Johann Heinrich Appel and predecessor of Louis IV, Grand Duke of Hesse and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse
WHERE {
  # Find Johann Heinrich Appel's child
  ?child dbo:parent dbr:Johann_Heinrich_Appel .
  
  # Find the spouse of that child
  ?spouse dbo:spouse ?child .

  # Identify Louis IV, Grand Duke of Hesse and his predecessor
  ?louisIV dbo:predecessor ?predecessor .
  FILTER (?predecessor = ?spouse) .
  dbr:Louis_IV,_Grand_Duke_of_Hesse dbo:successor ?louisII .

  # Identify Louis II, Grand Duke of Hesse and his successor
  ?louisII dbo:predecessor ?successor .
  FILTER (?successor = ?spouse) .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
365,8,train,"Give me the spouse of the native, that is a politician, of Poltava Governorate.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouseName
WHERE {
  ?person dbo:nativePlace dbr:Poltava_Governorate .
  ?person dbo:occupation dbo:Politician .
  ?person dbo:spouse ?spouse .
  ?spouse rdfs:label ?spouseName .
  FILTER (lang(?spouseName) = 'en')
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
