id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
465,68,test,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v7 . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find Anne of Brittany's child who became royalty
SELECT ?child WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?anne_of_brittany .
  ?anne_of_brittany a dbpedia:Person;
    rdfs:label ""Anne of Brittany""@en .
}

# Step 2: Find the successor of that child
SELECT ?successor WHERE {
  ?child a dbpedia:Person;
    dbpedia:succeededBy ?successor .
}

# Step 3: Identify Ercole II d'Este's child who became royalty
SELECT ?child WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?ercole_ii_d_este .
  ?ercole_ii_d_este a dbpedia:Person;
    rdfs:label ""Ercole II, Duke of Ferrara""@en .
}

# Step 4: Find the successor of that child
SELECT ?successor WHERE {
  ?child a dbpedia:Person;
    dbpedia:succeededBy ?successor .
}

# Combine results to find common successors
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
CONSTRUCT { ?person a dbpedia:Person; rdfs:label ?name . }
WHERE {
  ?child rdf:type dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent rdfs:label ""Anne of Brittany""@en .
  ?child2 rdf:type dbpedia:Person;
    dbpedia:parent ?parent2 .
  ?parent2 rdfs:label ""Ercole II, Duke of Ferrara""@en .
  ?successor a dbpedia:Person;
    dbpedia:succeededBy ?common_successor .
  ?child rdf:_i ?child_index . 
  ?child2 rdf:_i ?child_index .
  FILTER ( (?child_index < ?child2) )  # Ensure child comes before their successor
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
417,64,test,"Give me the child of Christian X of Denmark and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find Christian X's children and their spouses
SELECT ?child ?spouse
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Christian X of Denmark""@en;
    dbpedia:children ?children .
  ?child dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person;
    rdfs:label ?royaltyLabel@en .
}

# Step 2: Find Knud and Alexandrine's children who are royals
SELECT ?grandchild
WHERE {
  ?grandparent a dbpedia:Person;
    rdfs:label ""Knud, Hereditary Prince of Denmark""@en;
    dbpedia:parents ?parents .
  ?parents a dbpedia:Family ;
            dbpedia:children ?children .
  ?children a dbpedia:Person;
    rdfs:label ?royaltyLabel@en .
}

# Step 3: Combine the results to find the child of Christian X and spouse who is also a grandchild of Knud and Alexandrine
CONSTRUCT {
  ?individual a dbpedia:Person;
    rdfs:label ?fullName@en;
    dbpedia:birthPlace ?birthPlace ;
    dbpedia:deathPlace ?deathPlace .
}
WHERE {
  ?child in (
    SELECT ?child ?spouse
    WHERE {
      ?child a dbpedia:Person;
        dbpedia:parent ?parent .
      ?parent a dbpedia:Person;
        rdfs:label ""Christian X of Denmark""@en;
        dbpedia:children ?children .
      ?child dbpedia:spouse ?spouse .
      ?spouse a dbpedia:Person;
        rdfs:label ?royaltyLabel@en
      }
    )
  ) .
  ?grandchild in (
    SELECT ?grandchild
    WHERE {
      ?grandparent a dbpedia:Person;
        rdfs:label ""Knud, Hereditary Prince of Denmark""@en;
        dbpedia:parents ?parents .
      ?parents a dbpedia:Family ;
             dbpedia:children ?children .
      ?children a dbpedia:Person;
        rdfs:label ?royaltyLabel@en
      }
    )
  ) .
  ?child dbpedia:parent ?grandparent .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
917,67,test,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and parent of Albert Kamehameha and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v5 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childOfKIII WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?father .
  ?father a dbpedia:Person; rdfs:label ""Kamehameha III"" .
  ?childOfKIII a dbpedia:Person;
    dbpedia:child ?Albert_Kamehameha .
  ?Albert_Kamehameha a dbpedia:Person; rdfs:label ""Albert Kamehameha"" .
}

# Since Leleiohoku I is not directly related to royalty through marriage, we cannot find a direct spouse-child relationship.
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
5,18,test,"Give me the entity in the award of Coro de la Pontificia Universidad Católica de Puerto Rico and birthplace of the person born, that is a politician, as the award of Renata Adler.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?politician ?award
WHERE {
  ?politician a dbpedia:Person;
    dbpedia:birthPlace newyork.
  
  OPTIONAL { 
    ?politician dbpedia:awardedWith dbpedia:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  }
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
459,26,test,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore and governor of Dana Murphy and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?governor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?location .
  ?location rdfs:label ""Cliff Roquemore"" .
  ?person a dbpedia:Person;
    dbpedia:birthName ?name .
  ?name rdfs:label ""Kevin Stitt"" .
}",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
329,27,test,"Give me the entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist) and entity in the region, that is a country, of Western European Time and birthplace of Eric Cross (writer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlaceLabel ?deathPlaceLabel
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  OPTIONAL { ?person rdfs:label ?birthPlaceLabel }
  
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  OPTIONAL { ?person rdfs:label ?deathPlaceLabel }
  
  FILTER (lang(?birthPlaceLabel) = ""en"" ) ; # Ensure birthplace label is in English
  FILTER (lang(?deathPlaceLabel) = ""en"" ) ; # Ensure death place label is in English
  ?birthPlace geo:locatedIn dbpedia:Canada . ; # Robert Bates' birthplace is in Canada
  ?deathPlace geo:locatedIn dbpedia:United_Kingdom . ; # Eric Cross' death place is in the UK
  ?birthPlace rdfs:label ?birthPlaceLabel .
  ?deathPlace rdfs:label ?deathPlaceLabel .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
47,56,test,"Give me the office of the administration of Jagdeep Dhankhar and office of Bidesh Ranjan Bose and office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . },{sparql_query},6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
865,68,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"{""PREFIX"" : <http://dbpedia.org/ontology/
""> \nSELECT ?birthPlace WHERE { ?person a dbpedia:Person; dbpedia:birthPlace ?birthPlace . ?person ns:fatherOfAbu_Ahmad_Abdul_Hafiz . ?person dbo:deathPlace Patna }",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
865,67,test,"Give me the father of the child of the father of Abul Maal Abdul Muhith and native of British Raj and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?father_of_child WHERE {
  ?spouse a dbpedia:Person;
    dbpedia:sibling [ dbpedia:has_sister Abul_Maal_Abdul_Muhith ] .
  ?spouse dbpedia:partner [ a dbpedia:Person; rdfs:label ""Syeda Shahar Banu"" ] .
  ?child a dbpedia:Person;
    dbpedia:father ?father_of_child .
  ?father_of_child a dbpedia:Politician .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
965,69,test,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . }",{sparql_query},8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
839,69,test,"Give me the band of the member of Böhse Onkelz and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v7 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName WHERE {
  ?person a dbpedia:Musician;
    dbpedia:band ?bandName .
  ?person rdfs:label ""Böhse Onkelz""@de.
}
```

This query will return the band name of Böhse Onkelz.

Next, we need to find Kevin Russell's band. Since Kevin Russell is a member of The Black Crowes, we can use a similar approach:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName WHERE {
  ?person a dbpedia:Musician;
    dbpedia:band ?bandName .
  ?person rdfs:label ""Kevin Russell""@en.
}
```

This query will return the band name of Kevin Russell.

Finally, we need to connect these individuals to their respective bands. We can do this by joining the two results based on the band name:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# First, find the band of Böhse Onkelz
SELECT ?bo_band_name WHERE {
  ?person a dbpedia:Musician;
    dbpedia:band ?bandName .
  ?person rdfs:label ""Böhse Onkelz""@de.
}

# Then, find Kevin Russell's band
SELECT ?kr_band_name WHERE {
  ?person a dbpedia:Musician;
    dbpedia:band ?bandName .
  ?person rdfs:label ""Kevin Russell""@en.
}

# Join the results based on band names
UNION {
  ?bo_band_name AS ?band_of_bo
  ?kr_band_name AS ?band_of_kr
}
```

This union operation will give us both band names.",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
573,57,test,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify the author of ""Exchequer Standards""
SELECT ?author WHERE {
  ?work dbpedia:hasAuthor ?author .
  ?work rdfs:label ""Exchequer Standards"" .
}

# Step 2: Check if the author is a politician and office holder
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?author (dbpedia:P31 ?politician) WHERE {
  ?author dbpedia:P31 ?politician .
  ?politician a dbpedia:OfficeHolder .
}

# Step 3: Find the residence (settlement) where the author decedent
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?author ?residence WHERE {
  ?author dbpedia:P31 ?politician .
  ?politician dbpedia:deathPlace ?residence .
}

# Step 4: Identify the author's professional background as American
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?author WHERE {
  ?author rdfs:label ""American"" .
}

# Step 5: Link the author to their parent who is also a politician and office holder
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?author ?parent WHERE {
  ?author dbpedia:P31 ?parent .
  ?parent a dbpedia:OfficeHolder .
}

# Step 6: Ensure the parent's death place is in Massachusetts
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?parent WHERE {
  ?parent dbpedia:P31 <http://dbpedia.org/ontology/Massachusetts> .
}

# Combine all these queries to get the final answer
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
839,56,test,"Give me the band of the band, that is a musical artist, of the professional in Musician and band of the person born, that is a musical artist, as Kevin Richard Russell and band of Peter Schorowsky.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:band ?band .
  FILTER (lang(?birthPlace) = ""en"")  # Assuming we are interested in English-speaking artists
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
965,59,test,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?grandparentSpouse ?royaltyChild
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthDate ""1854-05-24""^^xsd:date;
    dbpedia:parent ?parent1 .
  ?parent1 a dbpedia:Person;
    dbpedia:child ?child1 .
  ?child1 a dbpedia:Person;
    dbpedia:isRoyalty true .
  
  ?parent2 a dbpedia:Person;
    dbpedia:parent ?parent1 .
  ?parent2 a dbpedia:Person;
    dbpedia:spouse ?grandparentSpouse .
}",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
987,65,test,"Give me the entity in the region, that is a country, of Central European Time and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/property/starring> ?v5 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Find countries in Central European Time (CET)
SELECT ?country WHERE {
  ?country rdfs:label ""Central European Time"" .
}

# Find the birth place of the actor from the film ""Armin"" (2018)
SELECT ?actorBirthPlace
WHERE {
  dbpedia:Armin director ?director .
  ?actor a dbpedia:Person; foaf:name ""Emir Hadžihafizbegović"" .
  ?actor dbpedia:birthPlace ?actorBirthPlace .
}

# Find the band Šako Polumenta was part of and their origin
SELECT ?bandName ?bandOrigin
WHERE {
  ?bandName a dbpedia:Band; rdfs:label ""Šako Polumenta"" .
  ?bandOrigin a dbpedia:Location; rdfs:label ""Birth place"" .
  ?bandName dbpedia:members ?bandMembers .
  SOME ?bandMember a dbpedia:Person; foaf:name ?name .
  ?bandMember dbpedia:birthPlace ?bandOrigin .
}

# Combine results
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
791,70,test,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v7 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v7 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify children of Go-Shirakawa who are office holders and royalty
SELECT ?child WHERE {
  ?person a dbpedia:Person;
    dbpedia:father dbpedia:Go-Shirakawa ;
    dbpedia:officeHolder true ;
    dbpedia:royalty true .
  ?child a dbpedia:Person;
    dbpedia:parent ?person .
}

# Step 2: Identify grandchildren who are office holders and royalty
SELECT ?grandchild WHERE {
  ?grandchild a dbpedia:Person;
    dbpedia:parent ?child ;
    dbpedia:officeHolder true ;
    dbpedia:royalty true .
}

# Step 3: Find the specific grandchild from step 2 who is the child of the child in step 1
# This step assumes we have already identified the relevant child from step 1 and can filter grandchildren accordingly

# Step 4: Identify father of Antoku who is royalty and office holder
SELECT ?father WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent dbpedia:Emperor Antoku ;
    dbpedia:officeHolder true ;
    dbpedia:royalty true .
  ?father a dbpedia:Person;
    dbpedia:name ""Taira no Kiyomori"" . # Example name, replace with actual data
}

# Step 5: Determine spouse of Emperor Antoku
SELECT ?spouse WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent dbpedia:Emperor Antoku ;
    dbpedia:spouse ?spouse .
}

# Step 6: Find the spouse of the father identified in step 4
SELECT ?grandParentSpouse WHERE {
  ?parent a dbpedia:Person;
    dbpedia:child ?father ;
    dbpedia:spouse ?grandParent .
  ?grandParentSpouse a dbpedia:Person;
    dbpedia:name ""Taira no Kiyomori's spouse"" . # Example name, replace with actual data
}

# Combine all the results to get the final answer
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
18,27,test,"Give me the professional in  and alumnus of the figure known, that is an educational institution, as Saints and parent of the professional in Actress.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?alumnusName ?schoolName ?childName
WHERE {
  ?alumnus a dbpedia:Person;
    dbpedia:birthPlace ""Shillong, India"";
    dbpedia:educationalInstitution ?school .
  ?school rdfs:label ""St. Anthony's High School, Shillong""@en .
  ?alumnus dbpedia:hasChild ?child .
  ?child a dbpedia:Person;
    dbpedia:gender ""Female""; # Assuming the child is an actress and female
    dbpedia:name ?childName .
}",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
773,63,test,"Give me the parent of the successor of Charles the Bald and spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v6 . ?v4 <http://dbpedia.org/property/father> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father ?father .
  ?father a dbpedia:Person; 
    rdfs:label ""Charles the Fat""@en .
  ?person a dbpedia:Person;
    dbpedia:spouse ?wife .
  ?wife a dbpedia:Person; 
    rdfs:label ""Ermentrude of Orleans""@en .
  ?parent a dbpedia:Person; 
    rdfs:label ""Odo, Count of Paris""@en .
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
236,18,test,"Give me the party member of the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts and party member of the administration of James Madison.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/party> ?v3 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?officeHolder ?partyMember
WHERE {
  ?officeHolder a dbpedia:OfficeHolder;
    dbpedia:officeLocation ""Quincy, Massachusetts"" .
  ?officeHolder a foaf:Person;
    dbpedia:affiliatedParty ?party .
  ?party a dbpedia:PoliticalParty .
  OPTIONAL { 
    ?officeHolder dbpedia:termInOffice ?termInOffice }
    FILTER (lang(?termInOffice) = ""en"") 
  }  
  UNION {
    ?officeHolder a dbpedia:Politician;
      dbpedia:deathPlace ""Quincy, Massachusetts"" .
    ?officeHolder a foaf:Person;
      dbpedia:affiliatedParty ?party .
    ?party a dbpedia:PoliticalParty .
  }
}
```

This query attempts to find individuals who held an office in Quincy, Massachusetts and were affiliated with a political party. It also considers those who died in Quincy as potential matches for broader context.",5,8,6,3,2,3,2,20,0,0,19,0,0.0,0
645,60,test,"Give me the commander in the force of the commander in Siege of Madrid and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander ?office
WHERE {
  ?commander a dbpedia:Person;
    dbpedia:birthPlace ""Restoration (Spain)"";
    dbpedia:deathPlace ?deathPlace .
  ?office a dbpedia:Office; 
    dbpedia:leader ?commander .
  OPTIONAL { ?commander foaf:commands ?forces }
  FILTER (lang(?commander) = ""en"" || lang(?office) = ""en"")
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
442,8,test,Give me the resting place of Allyn K. Capron and resting place of the actor of This Side of Heaven.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allyn_K._Capron> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/This_Side_of_Heaven> <http://dbpedia.org/ontology/starring> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?restingPlace
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthPlace <>; 
    dbpedia:deathPlace ?restingPlace .
  ?person2 a dbpedia:Person;
    dbpedia:birthPlace <>; 
    dbpedia:deathPlace ?restingPlace .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
216,61,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v5 . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?playerTeam ?organizationClub ?soccerClub
WHERE {
  ?player a dbpedia:Person;
    dbpedia:birthDate [isBefore ""1990-01-01""] ; # Pavel Vezhinov was born before 1990
    dbpedia:deathDate ""2008-04-06"" ;
    dbpedia:role dbpedia:SoccerPlayer;
    foaf:OrganizationMember ?organization .
  ?organization a dbpedia:Organization;
    dbpedia:type dbpedia:SportsClub ;
    dbpedia:name ""Džemal Berberović"" . # Organization name matches Džemal Berberović's sports club
  ?player dbpedia:playedFor ?playerTeam .
  ?organization foaf:homepageUrl ""http://example.com/organizationHomePage"" . # Placeholder URL to indicate an organization exists
}
```",6,15,7,3,2,3,3,71,0,0,1,0,0.0,0
365,18,test,"Give me the person born as the birth name of the commander, that is an office holder, in Ukrainian–Soviet War and spouse of the native, that is a politician, of Poltava Governorate.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?personName ?birthPlace ?deathPlace
WHERE {
  ?warBattle a dbpedia:Conflict;
    dbpedia:startDate ""1917-01-01""^^xsd:date;
    dbpedia:endDate ""1921-12-31""^^xsd:date .
  ?officeHolder a dbpedia:OfficeHolder;
    dbpedia:participatedIn ?warBattle .
  ?politician a dbpedia:Politician;
    dbpedia:residence ?birthPlace;
    dbpedia:spouse ?personName .
  ?officeHolder dbpedia:birthPlace ?birthPlace .
  ?politician dbpedia:deathPlace ?deathPlace .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
965,62,test,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of the parent of Louise Mountbatten and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . }",{sparql_query},7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
573,59,test,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://dbpedia.org/property/governor> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?administrationRegion ?politicianResidence
WHERE {
  ?charlie_baker a dbpedia:Person;
    dbpedia:name ""Charlie Baker"" .
  ?charlie_baker dbpedia:birthPlace ?administrationRegion .

  ?american_politician a dbpedia:Person;
    dbpedia:name ""American Politician's Name"" .
  ?american_politician a dbpedia:Person;
    dbpedia:nationality dbpedia:United_States .
  
  ?charlie_baker dbpedia:deathPlace ?politicianResidence .
  
  ?administrationRegion rdfs:label ?regionLabel .
  ?politicianResidence rdfs:label ?residenceLabel
}
```",6,9,7,3,2,3,3,71,0,0,400,0,0.0,0
839,61,test,"Give me the band of the member of the band, that is a band and a group, of Peter Schorowsky and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band1 AS ""Peter Schoewski's Band (Member)"" ,?band2 AS ""Peter Schoewski's Artist Band""
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Peter Schoewski"" .
  ?person dbpedia:isMemberOf dbpedia:Band ?band1 .
  ?band1 a dbpedia:Band .
  
  ?person a dbpedia:Person;
    dbpedia:isConnectedTo dbpedia:MusicArtist ?artist .
  ?artist a dbpedia:MusicArtist .
  
  ?band2 a dbpedia:Band .
}",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
987,71,test,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v8 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v7 . ?v8 <http://dbpedia.org/property/timeZone> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for the actor's birthplace in ""Sutjeska""
SELECT ?actorBirthPlace WHERE {
  ?movie a dbpedia:Film;
    dbpedia:mainActor ?actor .
  ?actor a dbpedia:Person;
    dbpedia:birthPlace ?actorBirthPlace .
}

# Query for the band Dado Polumenta was part of
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?bandName ?bandBirthPlace WHERE {
  ?artist a dbo:Artist;
    dbpedia:associatedBand ?band .
  ?band a dbo:MusicGroup;
    rdfs:label ?bandName .
}

# Query for the sports event in Canicosa de la Sierra
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?sportsEventBirthPlace WHERE {
  ?event a dbo:SportsEvent;
    dbpedia:location ?location .
  ?location rdfs:label ""Canicosa de la Sierra"" .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
326,20,test,"Give me the resident of the birthplace, that is a state and British, of the professional in Writer and person decedent at the award, that is a country, of the awardee of French Legion of Honor.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> ""Writer""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v4 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?awardeeName ?birthPlace
WHERE {
  ?awardee a dbpedia:Person;
    dbpedia:awardedBy dbpedia:French_Legion_of_Honor .
  ?awardee a foaf:Person;
    foaf:name ?awardeeName ;
    dbpedia:deathDate ?deathDate .
  ?birthPlace a dbpedia:Location;
    dbpedia:isPartOf dbpedia:United_Kingdom .
  ?awardee dbpedia:fieldOfActivity ""Writing"" .
  FILTER (lang(?deathDate) = ""fr"")  # Ensure the death date is in French
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
839,68,test,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/bandMember> ?v7 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name
WHERE {
  ?charlie_huhn a dbpedia:Musician;
    dbpedia:associatedBand ?band_of_charlie_huhn .
  ?peter_schorowsky a dbpedia:Musician;
    dbpedia:bandMemberOf ?band_of_peter_schorowsky .
  ?kevin_russell a dbpedia:Musician;
    dbpedia:personaBand ?band_of_kevin_russell .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
433,65,test,"Give me the professional in the profession of Bob Marley and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artistName ?musicalArtistName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Jamaica"" .
  ?person rdf:type dbpedia:Musician .
  ?person foaf:knows ?artistConnection .
  ?artistConnection a dbpedia:MusicalArtist ;
    dbpedia:associatedWith ?musicalGroup .
  ?musicalGroup rdfs:label ""Bob Marley and the Wailers"" .
  ?artistConnection rdf:type foaf:Person;
    foaf:name ""Paul Laurence Dunbar Chambers Jr."" .
}
```",7,13,8,3,3,3,3,71,0,0,4,0,0.0,0
773,62,test,"Give me the spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the successor of the child, that is a royalty, of Louis the Pious and parent of Charles the Fat.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouseOfFather ?parentOfLouisTheYounger
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father ?father .
  ?father a dbpedia:Person; 
    dbpedia:name ""Charles the Fat"" .
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person; 
    dbpedia:name ""Louis the Pious"" .
  ?parent a dbpedia:Person; 
    dbpedia:succeededBy ?successor .
  ?successor a dbpedia:Person; 
    dbpedia:name ""Louis the Younger"" .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
166,19,test,"Give me the entity in the territory administered, that is a country, from the reference to Madrid and resting place of the military force of Spanish Civil War.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?v4 <http://dbpedia.org/ontology/capital> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?country
WHERE {
  ?madrid dbpedia:capitalOf ?country .
  ?madrid dbo:locatedInCountry ?country .
  ?madrid rdfs:label ""Madrid""@en .
  OPTIONAL { 
    ?civilWar a dbo:Conflict ;
               dbpedia:conflict ""Spanish Civil War"" ;
               dbpedia:involvedParty ?army .
    ?army a dbo:MilitaryForce .
  }
}
```",5,6,6,3,2,3,2,20,0,0,4,0,0.0,0
582,71,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/property/nickname> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/property/nickname> ?v8 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?teamNickname
WHERE {
  ?person a dbpedia:Person;
    dbpedia:nickname ?teamNickname .
  ?person dbpedia:birthParent [ dbpedia:givenName ""Kazuaki"" ; dbpedia:surname ""Nagasawa"" ] .
  ?person a dbpedia:Person;
    dbpedia:memberOf dbpedia:FootballClub ;
    dbpedia:clubName ?team
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
433,63,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and professional in the profession of Bob Marley.",SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commonMusicalArtist
WHERE {
  ?paulChambers a dbpedia:Person;
    dbpedia:musicalArtist ?paulMusicalArtist .
  ?scottLafaro a dbpedia:Person;
    dbpedia:musicalArtist ?scottMusicalArtist .
  ?bobMarley a dbpedia:Person;
    dbpedia:musicalArtist ?commonMusicalArtist .
  ?paulMusicalArtist rdfs:subClassOf dbpedia:MusicalArtist .
  ?scottMusicalArtist rdfs:subClassOf dbpedia:MusicalArtist .
  ?commonMusicalArtist rdf:type dbpedia:MusicalArtist .
}",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
715,62,test,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in the force, that is a military conflict, of the native of Morocco and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for the mayor who was an office holder, politician, and president from 1933 Spanish general election
SELECT ?mayor WHERE {
  ?mayor a dbpedia:OfficeHolder;
    dbpedia:PoliticalAffiliation dbpedia:Spanish_People's_Party ;
    dbpedia:office_elected dbpedia:1933_Spanish_general_election .
  
  ?mayor a dbpedia:Politician;
    dbpedia:presidency_start_date ""1933-01-01""^^xsd:date .
}

# Query for the commander in the force of the mayor who was born in Morocco and led the Ministry of the Air (Spain)
SELECT ?commander WHERE {
  ?commander a dbpedia:MilitaryPerson;
    dbpedia:conflict dbpedia:Spanish_Moroccan_conflicts ;
    dbpedia:birthPlace ""Morocco"" .
  
  ?commander a dbpedia:Leader;
    dbpedia:role dbpedia:Ministry_of_the_Air_(Spain) .
}

# Combine results
CONSTRUCT {
  ?person1 ?attr1 .
  ?person2 ?attr2 .
}
WHERE {
  ?person1 rdf:type dbpedia:Person ;
    dbpedia:office_elected dbpedia:1933_Spanish_general_election;
    a [ ?attr1 ] .
  
  ?person2 rdf:type dbpedia:Person ;
    a [ dbpedia:MilitaryPerson; dbpedia:conflict dbpedia:Spanish_Moroccan_conflicts; dbpedia:birthPlace ""Morocco"" ; dbpedia:role dbpedia:Ministry_of_the_Air_(Spain) ] .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
47,57,test,"Give me the office of the awardee of Padma Vibhushan and office of Suvendu Adhikari and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query to find the office of the Padma Vibhushan awardee
SELECT ?padma_awardee_office WHERE {
  ?person a dbpedia:Person;
    dbpedia:PadmaVibhushanAward dbpedia:P158.
  ?person rdfs:label ?padma_awardee_name .
}

# Query to find the office of Suvendu Adhikari (assuming he has an award)
SELECT ?adhikari_office WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardRecipientOf dbpedia:P31.
  ?person rdfs:label ""Suvendu Adhikari""@en .
}

# Query to find Mantu Ghosh and his award
SELECT ?ghosh_award, ?ghosh_office WHERE {
  ?awardee a dbpedia:Person;
    dbpedia:MantuGhoshAward dbpedia:P158.
  ?awardee rdfs:label ""Mantu Ghosh""@en .
  OPTIONAL { ?awardee dbpedia:office ?ghosh_office }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
433,58,test,"Give me the associated musical artist of Paul Chambers and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query to find the associated musical artist of Paul Chambers
SELECT ?associated_artist WHERE {
  ?album dbpedia:hasArtist ?artist .
  ?artist rdfs:label ""Slowhand at 70 – Live at the Royal Albert Hall""@en .
  ?chambers dbpedia:performer ?album .
}

# Query to find the associated musical artist of Scott LaFaro
SELECT ?associated_artist WHERE {
  ?performance dbpedia:hasParticipant ?artist .
  ?performance dbpedia:involvesMusician ?musical_artist .
  ?lafaro dbpedia:performer ?performance .
  ?artist rdfs:label ""Scott LaFaro""@en .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
987,56,test,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and birth place of Moamer Kasumović and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v4 . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/timeZone> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
SELECT ?birthPlace ?deathPlace ?country
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Artist ; # Šako Polumenta is a musician
    dbpedia:genre ?musicGenre .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?birthPlace geo:location [ geo:lat ?lat ; geo:long ?long ] .
  ?deathPlace geo:location [ geo:lat ?lat ; geo:long ?long ] .
  ?country a dbpedia:Country ;
    dbpedia:name ""Spain"" . # Assuming Canicosa de la Sierra is in Spain
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
445,70,test,"Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the residence, that is a country, of Anna Sharkey and entity in the award of the commander in Battle of Saint-Mihiel.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/awards> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  OPTIONAL { 
    ?person dbpedia:conflict dbpedia:Indian_Relibellion_1857 .
  }
}
```",8,9,9,3,3,3,3,71,1,100979,0,9.902951079421667e-06,1.0,1.9805706023905488e-05
465,66,test,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . }","To execute these steps using SPARQL, we need to construct queries that follow the relationships described:

1. Find Alfonso I d'Este's child and their spouse.
2. Find Ferdinand I's child and their successor.
3. Combine the results from both parts to find the common individual.

Here are the SPARQL queries for each part:

**Part 1:**
```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child ?spouse
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Monarch;
    dbpedia:name ""Ferdinand I, Holy Roman Emperor"" .
  ?child a dbpedia:Person;
    dbpedia:spouse ?spouse .
}
```

**Part 2:**
```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchild_successor
WHERE {
  ?grandchild a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Monarch;
    dbpedia:name ""Ferdinand I, Holy Roman Emperor"" .
  ?grandchild a dbpedia:Royalty .
}
```

**Combining Results:**
To find the common individual between both parts, we need to join the results of the two queries. This can be done by using a `CONSTRUCT` query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

CONSTRUCT {
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen"" .
} 
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent1 .
  ?parent1 a dbpedia:Monarch;
    dbpedia:name ""Ferdinand I, Holy Roman Emperor"" .

  ?grandchild a dbpedia:Person;
    dbpedia:parent ?parent2 .
  ?parent2 a dbpedia:Monarch;
    dbpedia:name ""Ferdinand I, Holy Roman Emperor"" .
  ?child a dbpedia:Person;
    dbpedia:spouse ?spouse1 .
  ?spouse1 a dbpedia:Person;
    dbpedia:parent ?parent3 .

  ?grandchild a dbpedia:Royalty .
}
```

This SPARQL query will construct the graph to find the person named ""AK Abdul Momen"" who fits both criteria.",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
98,28,test,"Give me the birth place of the person born as Paolo Elito M. Ballesteros IV and region of the time zone of Lopez Jaena and entity in the region, that is a country, of Philippine Standard Time.","SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v5 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?v5 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","SELECT ?birthPlace ?country
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Paolo Elito M. Ballesteros IV"" .
  ?person dbpedia:nationality dbpedia:Philippines .
  ?region a dbpedia:Region; dbpedia:name ""Lopez Jaena"" .
  ?country a dbpedia:Country; dbpedia:name ""Philippines"" .
  ?region dbpedia:locatedIn ?country .
}",6,7,7,2,3,2,3,28,0,0,2,0,0.0,0
47,68,test,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of the award, that is an award, of Mantu Ghosh and office of the awardee of Padma Vibhushan.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for COAS or NSA during Operation Green Hunt (2009-2010)
SELECT ?commanderOffice WHERE {
  ?operation dbpedia:operation ""Operation Green Hunt"";
  ?operation dbpedia:startYear 2009;
  ?operation dbpedia:endYear 2010;
  ?commander a dbpedia:Person;
  ?commander dbpedia:role ""Chief of Army Staff"" OR ?commander dbpedia:role ""National Security Advisor""
  }
  
# Query for Mantu Ghosh's office (awardee of Padma Shri in 1977)
SELECT ?mantuGhoshOffice WHERE {
  ?person a dbpedia:Person;
  dbpedia:name ""Mantu Ghosh"";
  dbpedia:award ""Padma Shri"";
  ?person dbpedia:office ?mantuGhoshOffice
  }
  
# Query for the office of the awardee of Padma Vibhushan (latest award)
SELECT ?padmaVibhushanAwardeeOffice WHERE {
  ?person a dbpedia:Person;
  dbpedia:name ""Padma Vibhushan Awardee"";
  dbpedia:award ""Padma Vibhushan"";
  ?person dbpedia:office ?padmaVibhushanAwardeeOffice
  }
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
582,70,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to the residence of Hirotaka Sugawara.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?fatherPlayer ?teamNickname
WHERE {
  ?child a dbpedia:Person;
    dbpedia:nickname ""Kazuyoshi Miura"";
    dbpedia:father ?fatherPlayer .
  ?fatherPlayer a dbpedia:Person;
    dbpedia:role dbpedia:SoccerManager ;
    dbpedia:role dbpedia:Athlete ;
    dbpedia:role dbpedia:SportsManager .
  ?child dbpedia:hasTeam ?teamNickname .
  ?teamNickname a dbpedia:Organization ;
                 dbpedia:nickname ?teamNickname .
  ?child rdfs:label ""Kazuaki Nagasawa""@en .
  ?child dbpedia:birthPlace ""Japan""^^xsd:string .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
274,24,test,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound and professional in the designer of Tetris Classic.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v2 . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actorName ?musicalArtist
WHERE {
  ?actor dbpedia:role [ dbpedia:film ""Imagine the Sound"" ] .
  ?actor dbpedia:role [ dbpedia:gameDesign ""Tetris Classic"" ] .
  ?actor a dbpedia:Person;
    dbpedia:associatedBand ?musicalArtist .
}
```",4,5,5,2,2,2,3,28,0,0,6,0,0.0,0
582,63,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as the nickname of Japan national football team.","SELECT ?result WHERE { <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father ?nickname
WHERE {
  ?masami a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Father's Name"" . # Placeholder for actual name
    dbpedia:role dbpedia:SoccerManager ;
    dbpedia:role foaf:nickname ?nickname .
  ?hirotaka a dbpedia:Person;
    dbpedia:hasParent ?parent_scientist .
  ?parent_scientist a dbpedia:Person;
    dbpedia:name ""Scientist's Name"" . # Placeholder for actual name
    dbpedia:role dbpedia:Scientist .
  ?parent rdf:type foaf:FamilyMemberOf ?hirotaka .
  ?parent_scientist foaf:nickname ?nickname_jnt .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
98,24,test,"Give me the birth place of the person born as Paolo Elito M. Ballesteros IV and entity in the region, that is a country, of Philippine Standard Time.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?country
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Paolo Elito M. Ballesteros IV"" .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""Philippine Standard Time (PST)"" .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
839,71,test,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician and band of the member of the band, that is a band and a group, of Peter Schorowsky.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v8 . ?v7 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName1 ?bandMembers1
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace1 .
  ?person1 dbpedia:hasBandMember ?bandMember1 .
  ?bandMember1 a dbpedia:Musician;
    dbpedia:band ?bandName1 .

  ?person2 a dbpedia:Person;
    dbpedia:name ""Peter Schorowsky"" .
  ?person2 a dbpedia:Musician;
    dbpedia:band ?bandName2 .
}

SELECT ?bandName2 ?members
WHERE {
  ?band a dbpedia:Band;
    dbpedia:member ?member .
  ?member a dbpedia:Musician;
    dbpedia:name ""Peter Schorowsky"" .
  ?band rdfs:label ?bandName2 .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
456,58,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of The Shadow and spouse of Danielle Spencer (Australian actress).",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . },"Since there is no specific band associated with Alan Doyle other than himself as a solo artist, the SPARQL query would not return any results from DBpedia's ontology related to a band entity. Therefore, the SPARQL query remains:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:surname ""Doyle"" .
  ?person rdfs:label ?bandName .
}
```

This query attempts to find a person with the surname ""Doyle"" who has a label (which could be their stage name or band name) associated with them. However, since Alan Doyle is primarily known as a solo artist and not part of a band, this query will not yield meaningful results.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
445,67,test,Give me the entity in England and entity in the award of the commander in Battle of Saint-Mihiel and death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  OPTIONAL { ?person dbpedia:deathPlace ?deathPlace }
}
```",7,7,8,3,3,3,3,71,1,110631,0,9.03897606479138e-06,1.0,1.8077788724883172e-05
41,25,test,"Give me the party of Enda Kenny and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election and party of the person born as David Declan Costello.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Enda Kenny's party affiliation
SELECT ?party WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolder ""Enda Kenny"";
    dbpedia:politicalParty ?party .
}

# Parties of the 2005 Castlereagh Borough Council election
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?candidate ?party WHERE {
  ?election dbo:election ;
    dbo:year 2005;
    dbo:office ""Castlereagh Borough Council"" .
  ?candidate a dbpedia:OfficeHolder;
    dbpedia:office dbo:office ?office .
  ?candidate foaf:memberOf ?party .
}

# Party of David Declan Costello
SELECT ?party WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""David Declan Costello"";
    dbpedia:birthDate ""1937-01-01""^^xsd:date; # Placeholder birth date, replace with actual date
    dbpedia:politicalParty ?party .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
826,57,test,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?predecessor ?successor
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:succeededBy ?successor .
  ?person2 a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent1 a dbpedia:Person;
    dbpedia:predecessor ?predecessor .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
965,64,test,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of Louise Mountbatten and spouse of the spouse of the parent of Louise Mountbatten.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?fatherName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""George Mountbatten, 2nd Marquess of Milford Haven"";
    dbpedia:birthParent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ?parentLabel .
  OPTIONAL { ?parent dbpedia:spouse ?spouse }
  FILTER (regex(?parentLabel, ""Mountbatten"")).
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
192,20,test,"Give me the child of the child of the parent of Anna of Hungary (Byzantine empress) and spouse of the spouse, that is a royalty, of the child of Charles II of Naples.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?royaltyChild
WHERE {
  ?child1 a dbpedia:Person;
    dbpedia:parent ?grandParent .
  ?grandParent a dbpedia:Person;
    dbpedia:spouse ?husband .
  ?child2 a dbpedia:Person;
    dbpedia:parent ?child1 .
  ?child2 a dbpedia:Royalty .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
865,62,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of Shahla Khatun and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?nativeCountry
WHERE {
  ?person a dbpedia:Person;
    dbpedia:deathPlace ""Patna"" .
  ?person dbpedia:child ?child1 .
  ?child1 a dbpedia:Person; dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person; dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person;
    dbpedia:birthPlace ?nativeCountry
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
417,56,test,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of Christian X of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchildName ?royaltyStatus WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?child a dbpedia:Person;
    dbpedia:hasChild ?grandchild .
  ?grandchild a dbpedia:Person;
    dbpedia:isRoyalty ?royaltyStatus .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
47,70,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of the award, that is an award, of Mantu Ghosh and office of the administration of Jagdeep Dhankhar.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v7 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

// For Mantu Ghosh
SELECT ?awardeeOffice WHERE {
  ?award dbpedia:isAwardOf dbpedia:PadmaShri ;
    dbpedia:recipient ?awardee .
  ?awardee a dbpedia:Person;
    dbpedia:name ""Mantu Ghosh"" .
  ?awardee dbpedia:office ?awardeeOffice
}
INSERT INTO @awardeeOffice (awardeeOffice) VALUES ('Office value for Mantu Ghosh')

// For Jagdeep Dhankhar
SELECT ?awardeeOffice WHERE {
  ?award dbpedia:isAwardOf dbpedia:PadmaShri ;
    dbpedia:administeredBy ?administrator .
  ?administrator a dbpedia:Person;
    dbpedia:name ""Jagdeep Dhankhar"" .
  ?awardee a dbpedia:Person;
    dbpedia:name ?awardeeName .
  ?awardee dbpedia:office ?awardeeOffice
}
INSERT INTO @awardeeOffice (awardeeOffice) VALUES ('Office value for awardees under Jagdeep Dhankhar')

// Combine results
SELECT * FROM @awardeeOffice
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
508,18,test,"Give me the birthplace of the commander, that is Saudi, in Central Plains War and birthplace of the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdf:type dbpedia:Commander ;
    dbpedia:conflict dbpedia:Central_PlainsWith_Tokugawa .
  ?person rdf:type dbpedia:Politician .
}
```",5,10,6,3,2,3,2,20,0,0,3,0,0.0,0
892,60,test,"Give me the entity in the profession of the true self of Enrico Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . ?v4 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. }",PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?person ?party ?region WHERE { ?person a dbpedia:Person; dbpedia:affiliation dbpedia:P31 ; dbpedia:politicalParty ?party . ?person ns:name ?name . FILTER ( ?name = 'Enrico Crolla' ) . ?party rdfs:label ?partyLabel . ?region a dbpedia:AdministrativeDivision; dbpedia:locatedIn ?region . ?party rdfs:subPropertyOf dbpedia:P31 ; dbpedia:memberOf dbpedia:FiveStarMovement },6,12,7,3,2,3,3,71,0,0,587,0,0.0,0
917,71,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of the child, that is a royalty, of Kamehameha III and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v7 . ?result <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parentOfCharlotte WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Honolulu, Hawaii"";
    dbpedia:spouse dbpedia:Kalama_Kaʻeo_Kaleleonalani .
  ?person ns:child ?charlotte .
  ?charlotte a dbpedia:Person;
    dbpedia:name ""Charlotte Lunalilo Bishop"" .
}
```",9,12,10,3,3,3,3,71,0,0,2,0,0.0,0
976,57,test,"Give me the office of the person born as Mehmet Naci Bostancı and office of Mustafa Şentop and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v1 <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. }","SELECT ?office1 ?office2 ?mayorOffice
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:name ""Mehmet Naci Bostancı""@en .
  ?person1 dbpedia:memberOf dbpedia:Millet_İttifakı .

  ?person2 a dbpedia:Person;
    dbpedia:name ""Mustafa Şentop""@en .
  ?person2 dbpedia:memberOf dbpedia:Millet_İttifakı .

  ?mayor a dbpedia:OfficeHolder;
    dbpedia:office ?mayorOffice .
  ?mayor a dbpedia:Politician .
  ?mayor dbpedia:memberOf dbpedia:Millet_İttifakı .
}",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
773,68,test,"Give me the spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the successor of the child, that is a royalty, of Louis the Pious and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?wife
WHERE {
  ?father a dbpedia:Person;
    dbpedia:parent ?grandfather .
  ?grandfather a dbpedia:Person;
    dbpedia:child ?son .
  ?son a dbpedia:Person;
    dbpedia:name ""Bernard"" ;
    dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:spouse ?wife .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
839,63,test,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the member of Böhse Onkelz.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . },"To implement this reasoning in SPARQL, we need to construct queries that follow these steps:

1. For Charlie Huhn:
   ```sparql
   SELECT ?bandName WHERE {
     ?charlie_huhn a dbpedia:Person;
      dbpedia:musicalArtist ?musical_artist .
     ?musical_artist rdfs:label ?bandName .
   }
   ```

2. For Kevin Russell (musician) in Böhse Onkelz:
   ```sparql
   # Assuming Kevin Russell is known to be a member with a specific role, e.g., 'guitarist'
   SELECT ?bandName WHERE {
     ?kevin_russell a dbpedia:Person;
      dbpedia:musicalArtist ?musical_artist .
     ?musical_artist rdfs:label ?bandName .
     ?kevin_russell dbpedia:role ""guitarist"" .  # Placeholder for specific role
   }
   ```

3. For a member of Böhse Onkelz:
   ```sparql
   SELECT ?bandName WHERE {
     ?member a dbpedia:Person;
      dbpedia:musicalArtist ?band .
     ?band rdfs:label ?bandName .
   }
   ```

Combining these queries into a single coherent SPARQL query that covers all cases might be complex due to the need to handle different roles and specific individuals. However, the above queries outline the approach for each case.",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
83,19,test,"Give me the party of the governor of the commander, that is a politician, in Central African Republic Civil War and ruling party in the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983).","SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. }","SELECT ?governorParty ?soccerClub
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Sandro"" .
  ?person dbpedia:birthPlace [ a dbpedia:Location; rdfs:label ""São Paulo"" ] .
  ?person dbpedia:birthYear 1983.
  
  ?centralAfricanRepublicPresident a dbpedia:OfficeHolder;
    dbpedia:office dbpedia:President_of_the_Central_African_Republic ;
    dbpedia:term_start ""2012-03-24T00:00:00""^^xsd:dateTime .
  
  ?centralAfricanRepublicPresident dbpedia:successor ?governor .
  
  ?saoPaulo a dbpedia:Location; rdfs:label ""São Paulo"" .
  
  ?soccerClub a dbpedia:SportingEvent;
    dbpedia:organizer ?soccerClub ;
    dbpedia:location ?saoPaulo .
  
  ?soccerClub rdfs:label ""Corinthians"" .
}",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
917,60,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/property/father> ?v4 . },{sparql_query},6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
443,27,test,"Give me the birthplace of the work of yes and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and landmark at elevation of 28.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v2 <http://dbpedia.org/property/author> ""yes""@en . ?v3 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",5,7,6,2,3,2,3,28,1,100979,0,9.902951079421667e-06,1.0,1.9805706023905488e-05
459,25,test,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore and person born as John Kevin Stitt and governor of the administration, that is a politician, of Brad Henry.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . ?v4 <http://dbpedia.org/property/governor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_of_death_place ?administration_governor
WHERE {
  ?cliff_roquemore a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?deathPlace rdfs:label ?deathPlaceLabel .

  ?brad_henry a dbpedia:Person;
    dbpedia:office dbpedia:Governor_of_Oklahoma ;
    dbpedia:term_start ""2003-01-10""^^xsd:date .
  
  ?john_kevin_stitt a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .

  ?deathPlace rdfs:label ?deathPlaceLabel .
  FILTER (lang(?deathPlaceLabel) = ""en"")  # Assuming English labels
}",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
892,66,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of Henri Crolla and landmark at elevation of the award of Anna Ishii.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v0 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v6 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/elevation> ?v6 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX m5s: <http://dbpedia.org/ontology/M5S>
SELECT ?region WHERE {
  ?person dbpp:memberOf ?party .
  ?person dbpp:hasName ""Andrea Cozzolino"" .
  ?party rdfs:label ?partyLabel .
  ?party dbpp:basedIn ?region .
  ?party owl:sameAs [ dbpp:hasLabel ?partyLabel ] .
  ?party m5s:name ""Five Star Movement"" .
}

PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?profession WHERE {
  ?person a dbpedia:Person; dbpp:hasProfession ?profession .
  ?person foaf:name ""Henri Crolla"" .
}

# Placeholder for Anna Ishii's landmark query with unknown elevation
SELECT ?landmark WHERE {
  ?award rdfs:label ?awardLabel .
  ?award dbpp:isAwardOf ?person .
  ?person foaf:name ""Anna Ishii"" .
  FILTER (str(?elevation) = ""unknown"") .
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
892,64,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of the true self of Enrico Crolla and landmark at elevation of 58.","SELECT ?result WHERE { <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Find the political party of Andrea Cozzolino
SELECT ?party WHERE {
  dbpedia:Andrea_Crolla pfo:memberOf ?party .
}

# Assuming M5S is the party, find its administrative region
SELECT ?region WHERE {
  ?party rdfs:label ""Movimento 5 Stelle""@it;
    dbpedia:politicalPartyEra [ dbpedia:startYear 2009 ] .
  ?party dbpedia:hasMember ?person .
  ?person foaf:name ""Andrea Cozzolino"" .
}

# Assuming Enrico Crolla's profession is a lawyer
SELECT ?profession WHERE {
  ?person rdfs:label ""Enrico Crolla""@it;
    dbo:occupation ?profession .
  FILTER (lang(?profession) = ""it"") .
}

# Find a landmark at elevation 58 meters
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?landmark WHERE {
  ?landmark rdfs:label ?name ;
             dbo:elevationInMeters 58 .
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
573,63,test,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/governor> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find Charlie Baker (Australian footballer)
SELECT ?charlie_baker_real_name WHERE {
  ?player a dbpedia:SportsPerson;
    dbpedia:sport ""Australian rules football"";
    dbpedia:club Melbourne Football Club .
  ?player rdfs:label ""Charlie Baker""@en .
}

# Step 2: Find parent(s) of Charlie Baker
SELECT ?parent ?parent_role WHERE {
  ?player a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:OfficeHolder;
    dbpedia:office ?office .
  ?office rdfs:label ""Politician""@en .
}

# Step 3: Determine the office held by the parent politician
SELECT DISTINCT ?office WHERE {
  ?parent a dbpedia:OfficeHolder;
    dbpedia:office ?office .
  ?office rdfs:label ""Politician""@en .
}

# Step 4: Find residence of William J. Phelan (settlement)
SELECT ?william_j_phelan_residence WHERE {
  ?politician a dbpedia:Person;
    dbpedia:name ""William J. Phelan""@en;
    dbpedia:birthPlace ?will",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
433,69,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?associated_artist
WHERE {
  ?paul_chambers a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?paul_chambers dbpedia:role dbpedia:Musician; dbpedia:occupation dbpedia:Writer .
  ?scott_lafaro a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?scott_lafaro dbpedia:role dbpedia:Musician; dbpedia:occupation dbpedia:Performer .
  ?associated_artist a dbpedia:Musician .
  ?paul_chambers dbpedia:associatedWith ?associated_artist .
  ?scott_lafaro dbpedia:associatedWith ?associated_artist .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
933,66,test,"Give me the band of the band of Alan Warner (musician) and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of Alan Warner (musician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthName ?band1 ?band1AsOrganization
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1947-04-21""^^xsd:date;
    dbpedia:name ?birthName .
  ?person dbpedia:memberOf dbpedia:Band ;
    rdfs:label ?band1 .
  ?band1 a dbpedia:MusicGroup, dbpedia:Organization .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
507,64,test,Give me the spouse of the person born as the birth name of Anne V. Coates and director of Entertaining Mr Sloane (film) and professional in the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?anne_v_coates a dbpedia:Person;
    dbpedia:name ""Anne V. Coates""@en;
    dbpedia:birthDate 1966-02-18.
  
  ?anne_v_coates dbpedia:hasSpouse ?spouse .
  
  ?person1 a dbpedia:Person;
    dbpedia:name ?birthName@en;
    dbpedia:directed ""Entertaining Mr Sloane"" (film) .
  
  ?person1 dbpedia:birthDate 1966-02-18.
  
  ?person1 rdf:type dbpedia:FilmDirector .
  
  ?spouse rdfs:label ?birthName .
}",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
93,18,test,"Give me the death place of the governor of Bob Bartlett and capital of the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"Given the complexity and the need for specific historical data, a direct SPARQL query might not be straightforward without a structured database containing this information. However, a general approach to start searching could be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query to find the death place of a specific governor of Bob Bartlett
SELECT ?governorName ?deathPlace
WHERE {
  ?governor a dbpedia:Person;
    dbpedia:officeHolderRole [ owl:cardinality 1];
    dbpedia:officeHolder ?office .
  ?office rdfs:label ""Governor of Bob Bartlett""@en .
  ?governor dbpedia:diedAt ?deathPlace .
}

# Query to find the capital of the headquarter region and settlement of Clam Cove Pictograph Site
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?capital
WHERE {
  ?site a dbo:HistoricalSite;
    dbo:headquarter ?headquarterRegion .
  ?headquarterRegion a dbo:Region;
    dbo:capital ?capital .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
443,28,test,"Give me the landmark at elevation of the award of William Shepherd and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and birthplace of the work of yes.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/author> ""yes""@en . ?result <http://dbpedia.org/ontology/elevation> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?awardName ?elevation ?birthPlaceMusicalArtist ?birthPlaceArtist ?workBirthPlace
WHERE {
  ?award dbpedia:awardedBy William_Shepherd ;
    dbpedia:recipient William_Shepherd .
  ?award rdfs:label ?awardName .
  
  ?musicalArtist a dbpedia:Musician;
    dbpedia:birthdate ""1949-11-20""^^date ;
    dbpedia:birthPlace ?birthPlaceMusicalArtist .
  
  ?artist a dbpedia:Artist;
    dbpedia:birthdate ""1949-11-20""^^date ;
    dbpedia:birthPlace ?birthPlaceArtist .

  ?work yes:lyricist ?musicalArtist .
  
  ?work rdfs:isDefinedBy yes:Work ;
    dbpedia:creationPlace ?workBirthPlace .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
826,61,test,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v1 <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Royalty;
    dbpedia:succeededBy ?successor .
  FILTER (xsd:string(?child) = ""Charles d'Angoulême"")
  FILTER (xsd:string(?parent) = ""Louis VIII of France"")
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
373,9,test,"Give me the writer of the work, that is a single and a musical work and a work and a soundtrack, of  and professional in the profession of Beto Guedes.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> """"@en . <http://dbpedia.org/resource/Beto_Guedes> <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?writer
WHERE {
  ?work a dbpedia:Soundtrack;
    dbpedia:genre dbpedia:SoundtrackGenre ;
    dbpedia:author ?writer .
  ?work2 a dbpedia:Single;
    dbpedia:author ?writer .
  ?writer rdfs:label ""Beto Guedes"" .
}",4,8,5,2,2,2,2,9,0,0,78,0,0.0,0
826,67,test,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v6 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?predecessorOfGrandDuke WHERE {
  ?grandDuke a dbpedia:Monarch; dbpedia:title ""Louis IV, Grand Duke of Hesse"" .
  ?grandDuke dbpedia:hasParent ?parentOfGrandDuke .
  ?parentOfGrandDuke a dbpedia:Monarch; dbpedia:hasPredecessor ?predecessorOfParent .
  ?predecessorOfParent a dbpedia:Monarch .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
933,67,test,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of Mike Elliott (saxophonist).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1947-04-21"" .
  ?band a dbpedia:Band ;
    dbpedia:leader dbpedia:Mike_Elliott_Saxophonist ;
    dbpedia:has_member ?person .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
124,64,test,"Give me the military force of Battle of Tamai and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace ?war ?militaryForce
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1850-06-24"" .
  ?person rdfs:label ?name .
  ?name ns:prefLabel ""AK Abdul Momen"" .

  ?war a dbpedia:Event;
    dbpedia:type dbpedia:EraType; dbpedia:instanceOf dbpedia:MilitaryConflict ;
    dbpedia:participatedIn ?militaryUnit .

  ?militaryUnit a dbpedia:MilitaryUnit;
    dbpedia:type ""Artillery battery"" .
  
  ?militaryForce a dbpedia:MilitaryForce;
    dbpedia:participatedIn ?war .
}

AND {
  ?battle a dbpedia:Event;
    dbpedia:type dbpedia:MilitaryConflict ;
    dbpedia:participatedIn ?militaryUnit .
  
  ?battle rdfs:label ""Battle of Tamai"" .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
773,64,test,"Give me the spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of Carloman of Bavaria and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?charles_the_fat a dbpedia:Person;
    dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:isSpouseOf ?charles_the_fat .
  ?charles_the_fat a dbpedia:Monarch; # Charles the Fat is a monarch
    dbpedia:hasChild ?bernard .
  ?bernard a dbpedia:Person;
    dbpedia:hasSon ?carloman_of_bavaria .
  ?carloman_of_bavaria a dbpedia:Person;
    dbpedia:hasParent ?parent1, ?parent2 .
  ?parent1 a dbpedia:Person; # Parent of Carloman of Bavaria
    dbpedia:hasChild ?bernard . # Bernard is the child of this parent
    dbpedia:isOfficeHolder. # The parent is an office holder
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
47,60,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/governor> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?awardeeOffice ?politicianOffice 
WHERE { 
  ?person a dbpedia:Person; dbpedia:office ?awardeeOffice . 
  ?person a dbpedia:Person; dbpedia:role dbpedia:NaxaliteInsurgencyCombatant ; dbpedia:operation dbpedia:Operation_Green_Hunt . 
  ?politicianOffice a dbpedia:Office; dbpedia:holder ?politician . 
}",6,8,7,3,2,3,3,71,0,0,33,0,0.0,0
839,60,test,"Give me the band of the band, that is a musical artist, of the professional in Musician and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Kevin Russell""@en;
    dbpedia:role dbpedia:Musician .
  ?person rdfs:member ?band .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
216,65,test,"Give me the player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/coach> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query to find the Croatian national under-21 football team coach
SELECT ?coach
WHERE {
  ?team dbpedia:homeGround ""Maksimir Stadium"" .
  ?team dbpedia:manager ?coach .
}

# Query to find AK Abdul Momen and his manager(s)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?manager
WHERE {
  ?person a dbo:Person;
    dbpedia:birthDate ""1983-12-20"" .
  ?person rdf:type dbo:SoccerPlayer .
  ?manager a dbo:Manager;
    dbpedia:role dbo:SoccerManager .
}

# Query to find Džemal Berberović and his soccer club
SELECT ?player ?club
WHERE {
  ?player dbo:name ""Džemal Berberović"" .
  ?player rdf:type dbo:SoccerPlayer .
  ?player dbpedia:jerseyNumber ""10"" . # Assuming jersey number is a known attribute for Berberović
  ?club a dbo:SoccerClub;
    rdfs:label ?clubLabel .
  ?club dbo:hasManager ?manager .
}

# Combine the results to find the manager who fits all criteria
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

CONSTRUCT {
  ?allManager a dbo:Manager;
    dbpedia:role dbo:SoccerManager .
}
WHERE {
  ?player a dbo:SoccerPlayer;
    dbpedia:name ""Džemal Berberović"" .
  ?club a dbo:SoccerClub;
    rdfs:label ?clubLabel .
  ?club dbo:hasManager ?manager .
  OPTIONAL { ?manager rdf:type dbo:SoccerPlayer . }
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
417,59,test,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . }","SELECT ?wife
WHERE {
  ?grandmother a dbpedia:Person;
    dbpedia:parent ?grandfather .
  ?grandfather a dbpedia:Person;
    dbpedia:spouse ?wife .
  ?grandmother ns:childOf ?leader .
  ?leader a dbpedia:Person;
    dbpedia:title ""Leader of the Colony of Greenland"" .
}",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
933,58,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of Alan Warner (musician) and band of Mike Elliott (saxophonist).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?alan a dbpedia:MusicalArtist;
    dbpedia:birthDate ""1947-04-21"" .
  ?mike a dbpedia:Saxophonist .
  ?alan dbpedia:band ?band .
  ?mike dbpedia:band ?band .
}",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
955,20,test,"Give me the band of the writer of the work, that is a work and an album and a musical work, of Matt Freeman and band of the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Matt Freeman""@en .
  ?band a dbpedia:Band;
    dbpedia:members ?person ;
    rdfs:label ?bandName .
  ?work a dbpedia:MusicAlbum;
    dbpedia:title ""Street Dogs""@en .
  ?band rdfs:label ?bandName .
}
```",6,14,7,3,2,3,2,20,0,0,1,0,0.0,0
892,69,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of the true self of Enrico Crolla and landmark at elevation of the award of Anna Ishii.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/elevation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . }","PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>  
PREFIX dbo:<http://dbpedia.org/ontology/>  
SELECT ?partyRegion ?profession ?landmarkElevation
WHERE {
  ?andrea_cozzolino a dbpedia:Person ; dbpedia:memberOf ?politicalParty .
  ?politicalParty a dbpedia:PoliticalParty ; dbpedia:name ?partyName .
  ?partyName ns:language 'it' .
  ?enrico_crolla a dbpedia:Person ; dbpedia:occupation ?profession .
  ?anna_ishii a dbpedia:Person ; dbpedia:award ?award .
  ?award a dbo:Landmark ; dbo:elevation ?landmarkElevation .
}",8,14,9,3,3,3,3,71,0,0,2,0,0.0,0
582,66,test,"Give me the reference to the residence of Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?player a dbpedia:Person;
    dbpedia:sport ?sport .
  ?player foaf:name ""Hirotaka Sugawara"" .
  ?player dbpedia:residence ?birthPlace .
  ?player's father a dbpedia:Person;
    dbpedia:role dbpedia:SoccerManager ;
    dbpedia:role dbpedia:Athlete .
  ?team a dbpedia:Organization;
    dbpedia:nickname ""King Kazuo"" .
  ?player rdf:type dbpedia:FootballPlayer .
  ?team dbpedia:hasMember ?player .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
433,56,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of Bill Evans.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?artistGroup
WHERE {
  ?raconteur_a slim:associatedArtist ?artistGroup .
  ?bill_evans a dbpedia:Person;
    dbpedia:associatedArtist ?artistGroup .
  ?artistGroup rdfs:label ""Bill Evans"" . 
  ?raconteur_a rdfs:label ""Raconteur Slim"" .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
582,62,test,"Give me the figure known as --10-19 and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v6 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1975-10-19""^^xsd:date; 
    dbpedia:deathDate null; 
    dbpedia:occupation [dbpedia:hasRole some [a dbpedia:SportsManager; dbpedia:hasRole some [a dbpedia:Athlete]]]
    dbpedia:childKazuakiNagasawa ?kazuaki_nagasawa .
  ?person dbpedia:scientistOfHirotakaSugawara . 
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
917,65,test,"Give me the child of the father of Kamehameha IV and parent of the child, that is a royalty, of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v1 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v5 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person;
    dbpedia:child ?child .
}
```",7,9,8,3,3,3,3,71,1,15290,0,6.539794650447976e-05,1.0,0.00013078733978550878
47,69,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of Banga Bhushan and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/office> ?result . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v7 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://dbpedia.org/property/governor> ?v4 . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Awards in India
SELECT ?award WHERE {
  ?award a dbpedia:Award; dbpedia:awardedFor ""Innovation in Agriculture"" .
}

# Step 2: Banga Bhushan Awardees
SELECT ?person WHERE {
  ?person a dbpedia:Person; dbpedia:name ""AK Abdul Momen"" .
  ?person dbpedia:receiveAward dbpedia:Banga_Bhusan_Award .
}

# Step 3: Operation Green Hunt Commanders
SELECT ?commander WHERE {
  ?commander a dbpedia:Person; dbpedia:role ""Commander in Operation Green Hunt"" .
}

# Step 4: Combine the information to get offices
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

CONSTRUCT {
  ?awardOffice a dbpedia:Office;
    dbpedia:name ""Awards Office"" .
  ?bhushanOffice a dbpedia:Office;
    dbpedia:name ""Office of Banga Bhushan Awardees"" .
  ?greenHuntCommanderOffice a dbpedia:Office;
    dbpedia:name ""Office of the Commander in Operation Green Hunt"" .
}
WHERE {
  ?award dbpedia:awardedFor ""Innovation in Agriculture"" .
  ?person rdf:type dbpedia:Person; dbpedia:name ""AK Abdul Momen"" .
  ?person dbpedia:receiveAward ?award .
  ?commander rdf:type dbpedia:Person; dbpedia:role ""Commander in Operation Green Hunt"" .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
527,20,test,"Give me the actor of the movie, that is a work and English and a television show, with the professional in Actor and author of the work, that is a work and a book, of the host of Hyperland.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://dbpedia.org/property/author> ?v4 . ?v1 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorName ?movieTitle ?tvShowTitle ?bookTitle
WHERE {
  ?host a foaf:Person;
    dbpedia:birthDate ?birthDate .
  ?host dbpedia:appearInProgram ""Hyperland"" .
  
  ?actor a foaf:Person;
    dbpedia:birthDate ?birthDate .
    dbpedia:roleInFilm ?movieRole .
    dbpedia:film ?movie .
    dbpedia:filmLanguage ""en"" .
    
  ?actor dbpedia:roleInTelevisionProgram ?tvShowRole .
    dbpedia:televisionSeries ?tvShow .
  
  ?actor a foaf:Person;
    dbpedia:authorOfWork ?book .
    dbpedia:work ?book .
    rdfs:label ?bookTitle .
  
  ?movie dbo:hasActor ?actor .
  ?tvShow dbo:hasActor ?actor .
  ?book dbo:writtenBy ?actor
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
5,19,test,"Give me the birthplace of the person born, that is a politician, as  and entity in the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> """"@en . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Rubén Colón Tarrats""@en;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:member [ a dbpedia:Band ;
                    dbpedia:name ""Rubén Colón Tarrats""@en ].
}",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
865,66,test,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v6 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for Ram Jaipal Singh Yadav's native country
SELECT ?birthPlace WHERE {
  dbpedia:Ram_Jaipal_Singh_Yadav a dbpedia:Person;
    dbpedia:nationality ?birthPlace
}

# Query for Abu Ahmad Abdul Hafiz's child who is a politician and their father
SELECT ?childFather WHERE {
  ?politicianChild a dbpedia:Person;
    dbpedia:offspring ?child ;
    dbpedia:parent ?father .
  ?child a dbpedia:Person;
    dbpedia:name ""Abu Ahmad Abdul Hafiz"" .
  ?father a dbpedia:Person;
    rdfs:label ""Father of Abu Ahmad Abdul Hafiz's child who is a politician""
}

# Query for Abul Maal Abdul Muhith's child who is a politician and their father
SELECT ?grandChildFather WHERE {
  ?politicianGrandchild a dbpedia:Person;
    dbpedia:offspring ?grandchild .
  ?grandchild a dbpedia:Person;
    dbpedia:name ""Abul Maal Abdul Muhith"" .
  ?grandchildFather a dbpedia:Person;
    rdfs:label ""Father of Abul Maal Abdul Muhith's child who is a politician""
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
917,56,test,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of Kekūanāoʻa and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?royaltyPerson a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Kamehameha III""@en .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent ;
    rdfs:label ""Princess Victoria Kamāmalu""@en .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
645,69,test,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and commander in the force of the commander in Siege of Madrid.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/office> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?militaryForce
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Francisco Largo Caballero""@es;
    dbpedia:role ""Prime Minister of Spain (1936-1939)"" .
  ?event a dbpedia:Event;
    dbpedia:startDate ""1936-07-18"";
    dbpedia:endDate ""1939-02-27"";
    dbpedia:participatingSide dbpedia:Republican_Side_of_the_Spanish_Civil_War .
  ?person rdf:type dbpedia:Military_personnel;
    dbpedia:role ""Commander in Siege of Madrid"" .
  ?militaryForce a dbpedia:Military_force;
    dbpedia:name ""Military force during the Siege of Madrid""@en .
}
```",8,13,9,3,3,3,3,71,0,0,2,0,0.0,0
933,65,test,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of the band of Alan Warner (musician).",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ?birthName .
  ?person rdfs:label ""Alan Warner""@en .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
933,56,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to Alan Warner and band of the band of Alan Warner (musician).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v4 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","SELECT ?bandName
WHERE {
  ?person a dbpedia:MusicalArtist;
    dbpedia:birthDate ""1947-04-21"" ;
    dbpedia:name ?bandName .
}",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
18,26,test,"Give me the alumnus of the figure known, that is an educational institution, as Saints and professional in the award of Ana María Sánchez de Ríos and parent of Liza Huber.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alumnus
WHERE {
  ?alumnus a dbpedia:Person;
    dbpedia:birthPlace ""Saints"" ;
    dbpedia:awards [ owl:sameAs <http://dbpedia.org/property/Ana_Maria_Sanchez_de_Rios_Award> ] ;
    dbpedia:children [ owl:sameAs <http://dbpedia.org/resource/Liza_Huber> ] .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
933,61,test,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1947-04-21""^^xsd:date;
    dbpedia:occupation dbpedia:MusicalArtist ;
    dbpedia:groupMembership [ 
      a dbpedia:BandOrMusicGroup ;
      foaf:member ?person
    ] .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
839,70,test,"Give me the band of the band, that is a musical artist, of the professional in Musician and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of the person born, that is a musical artist, as Kevin Richard Russell.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:MusicalArtist;
    dbpedia:associatedBand ?bandName .
}

AND
{
  ?person a dbpedia:Person;
    rdfs:label ""Peter Schoewisky""@en .
  ?person dbpedia:birthPlace ?birthPlace .
}

UNION

{
  ?person a dbpedia:Person;
    rdfs:label ""Kevin Richard Russell""@en .
  ?person dbpedia:birthPlace ?birthPlace .
}",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
826,69,test,"Give me the spouse of the child of the father of Anna Magdalena Appel and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Louis IV, Grand Duke of Hesse"";
    dbpedia:spouse ?spouse .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
216,71,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.","SELECT ?result WHERE { ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/coach> ?v2 . ?v8 <http://dbpedia.org/ontology/birthDate> ?v7 . ?result <http://dbpedia.org/ontology/coach> ?v8 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://dbpedia.org/ontology/coach> ?v5 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?team
WHERE {
  ?person a dbpedia:Person;
    dbpedia:deathDate [ geo:isPartOfLocation ""Russia"" ] ;  # Pavel Vezhinov's death location is in Russia
    dbpedia:birthPlace [ geo:coordinates ?birthCoords ] ;
    dbpedia:role dbpedia:SoccerPlayer;
    dbpedia:sportsManager yes;
    dbpedia:managerRole dbpedia:SoccerManager .
  ?person a dbpedia:Person;
    dbpedia:deathDate [ geo:isPartOfLocation ""Croatia"" ] ;  # Croatia U21 team's location
    dbpedia:birthPlace [ geo:coordinates ?birthCoords ] ;
    dbpedia:role dbpedia:SoccerPlayer;
    dbpedia:sportsManager yes;
    dbpedia:managerRole dbpedia:SoccerManager .
  ?team a dbpedia:Organization, dbpedia:SoccerClub;
    dbpedia:hasMember ?person .
}
```",9,20,10,3,3,3,3,71,0,0,1,0,0.0,0
216,25,test,Give me the office of the mayor of Ros Bates and administration of  and party of the awardee of Australian Defence Medal.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . ?result <http://dbpedia.org/property/leader> """"@en . ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v3 . }","Given the complexity and the assumption that detailed historical data is available in DBpedia or similar, a simplified SPARQL query might look like this:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query to find the awardee of Australian Defence Medal
SELECT ?awardee WHERE {
  ?awardee a dbpedia:Person;
    dbpedia:awardedAustralianDefenceMedal true .
}

# Assuming we have found the person, we would then query for their political party affiliation
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?awardee ?party WHERE {
  ?awardee a dbpedia:Person;
    dbpedia:officeHolderOfRole [ rdf:type foaf:Office; rdfs:label ""Mayor of Ros Bates"" ] .
  ?awardee foaf:memberOf ?party .
}

# For detailed historical data, we might need to use more specific predicates and potentially external datasets
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
926,57,test,"Give me the father of Mahmud II and child of the father, that is a royalty, of Mustafa III and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father ?child WHERE {
  ?child a dbpedia:Monarch; dbpedia:title ""Mahmud II"" .
  ?child dbpedia:father ?father .
  ?father a dbpedia:Person; dbpedia:name ""Abdul Hamid I"" .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
507,68,test,"Give me the spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of Guy Ferland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v7 <http://dbpedia.org/ontology/director> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v7 <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?anneVCoates a dbpedia:Person;
    dbpedia:name ""Anne V. Coates"" .
  ?anneVCoates a dbpedia:Person;
    dbpedia:birthDate ""1919-06-17"" .
  ?anneVCoates a dbpedia:Person;
    dbpedia:director ""Guy Ferland"" .
  ?spouse a dbpedia:Person;
    dbpedia:spouseOf ?anneVCoates .
}",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
495,18,test,Give me the child of the father of the parent of Princess Catherine of Württemberg and father of the child of Princess Charlotte of Saxe-Hildburghausen.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childName
WHERE {
  ?grandfather a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:children [ dbpedia:hasChild ?child ] .
  ?child a dbpedia:Person;
    dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:children [ dbpedia:hasChild ?relatedChild ] .
  ?relatedChild a dbpedia:Person;
    dbpedia:parent ?charlotteParent .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
433,57,test,"Give me the professional in the profession of Bob Marley and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and associated musical artist of Paul Chambers.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person1 ?birthPlace ?deathPlace
WHERE {
  ?person1 a dbpedia:MusicalArtist ;
            dbpedia:associatedMusician ?artist .
  ?artist a dbpedia:Artist .
  
  ?person1 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person1 a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  
  ?artist a dbpedia:Artist ;
            dbpedia:musicalArtistOf ?person1 .
}",6,10,7,3,3,3,3,71,0,0,4,0,0.0,0
445,60,test,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country_of_athlete ?award_for_commander
WHERE {
  ?athlete a dbpedia:Athlete;
    dbpedia:nationality dbpedia:United_Kingdom .
  ?commander dbpedia:commandedInBattle dbpedia:Saint_Mihiel_Battle ;
    dbpedia:awardedWith ?award .
  ?award a dbpedia:Award .
}
```",6,8,7,3,2,3,3,71,0,0,102,0,0.0,0
124,62,test,"Give me the military force of Battle of Atbara and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?battle ?commander ?battery ?awardee
WHERE {
  ?battle a dbpedia:Event;
    dbpedia:instanceOf dbpedia:MilitaryConflict;
    dbpedia:participatedIn dbpedia:Battle_of_Atbara .

  ?commander a foaf:Person;
    dbpedia:birthPlace ?birthPlace ;
    dbpedia:deathPlace ?deathPlace ;
    dbpedia:role dbpedia:CommanderOf ?battle .

  ?battery a dbpedia:MilitaryUnit;
    dbpedia:partOf ?parentMilitaryForce;
    dbpedia:unitName ""A"" Battery, Royal Australian Artillery .

  ?awardee a foaf:Person;
    dbpedia:awarded dbpedia:British_South_Africa_Company_Medal .
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
773,59,test,"Give me the parent of the successor of the child, that is a royalty, of Louis the Pious and spouse of the father of the parent of Bernard (son of Charles the Fat).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/ontology/successor> ?v5 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v2 . },{sparql_query},6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
47,64,test,"Give me the office of Bidesh Ranjan Bose and office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> ?v3 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"SELECT ?office_bidesh_ranjan_bose ?office_administration_commander ?award_winner_office
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolder ?office_bidesh_ranjan_bose .
  ?operation a dbpedia:Operation; dbpedia:name ""Green Hunt Operation"" .
  ?operation dbpedia:commandedBy ?administration_commander .
  ?administration_commander a dbpedia:Person; dbpedia:role ""Administration Commander"" .
  ?awardee a dbpedia:Person;
    dbpedia:awardReceived ?award .
  ?award a dbpedia:Award .
  ?awardee dbpedia:officeHolder ?award_winner_office .
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
865,63,test,"Give me the father of the child of Abu Ahmad Abdul Hafiz and native of the residence, that is a country, of the person decedent at Patna and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childName ?fatherName
WHERE {
  ?politician a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:nationality dbpedia:India ;
    dbpedia:birthPlace ""Patna"" .
  ?politician dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:nameOfParent ?parentName .
  FILTER (regex(?parentName, ""Abu Ahmad"")) .
  ?child a dbpedia:Person;
    dbpedia:politicalOffice ?office .
  FILTER (regex(?office, ""politician"")) .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
715,67,test,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in Rif War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/property/office> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:presidentOfCountry Spain ;
    dbpedia:officeHolder true ;
    dbpedia:politician true ;
    dbpedia:mayor true ;
    foaf:name ""Carlos Franco Iribarnegaray"" .
  OPTIONAL { 
    ?person rdf:type dbo:RifWarCommander . 
  }
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
98,9,test,Give me the parent of the successor of Emperor Nijō and child of the child of Emperor Toba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Nijō> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Emperor_Toba> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?successor a dbpedia:Person;
    dbpedia:succeededBy ?nijou_successor .
  ?toba_child a dbpedia:Person;
    dbpedia:child ?toba_child_of_nijou .
  ?successor dbpedia:parent ?parent .
  ?toba_child_of_nijou dbpedia:parent ?toba_parent
  FILTER (??parent = ?toba_parent)
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
18,28,test,"Give me the parent of the professional in Actress and alumnus of the figure known, that is an educational institution, as Saints and professional in the award of Ana María Sánchez de Ríos.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v5 . ?v5 <http://dbpedia.org/property/nickname> ""Saints""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alumniInstitution
WHERE {
  ?person a dbpedia:Person;
    dbpedia:actor ?actor .
  ?actor rdfs:label ""AK Abdul Momen""@en .
  ?person dbpedia:alumniOf ?alumniInstitution .
  ?alumniInstitution rdfs:label ""Saints""@en .
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
554,18,test,Give me the leader of the birth place of The Legendary Tigerman and leader of the administration of the party member of Independent politician.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?result . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlaceLeader ?administrationLeader
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ""Faridpur""@en.
  
  ?person a dbpedia:Person;
    dbpedia:deathPlace <http://dbpedia.org/property/deathPlace#Bengal_Presidency> .
  
  ?administrationLeader a dbpedia:OfficeHolder; 
    dbpedia:office dbpedia:Bengal_Presidency; 
    dbpedia:inOffice ""1 January 1912""^^xsd:date.
}
```",5,5,6,3,2,3,2,20,0,0,3,0,0.0,0
341,8,test,"Give me the writer of the work, that is a work and an album, of Serrano and band member of Beyoncé.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Beyoncé> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> ""Serrano""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?writer ?album WHERE {
  ?artist a dbpedia:Artist ; dbpedia:name ""Serrano""@en .
  ?bandMember a dbpedia:Musician ; dbpedia:name ""Beyoncé band member""@en .
  ?album a dbpedia:Album ;
    dbpedia:artist ?artist ;
    dbpedia:releaseDate ?releaseDate .
  ?album rdfs:label ?albumLabel .
  FILTER (regex(str(?albumLabel), 'Serrano')) .
}
```

This query will:
- Identify Serrano as an artist.
- Identify a band member of Beyoncé.
- Find albums associated with both Serrano and the identified band member, filtering for albums where Serrano's name appears in the label.",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
965,66,test,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parentName ?spouseName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthParent ?parent .
  ?parent a dbpedia:Noble .
  ?person a dbpedia:Person;
    dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:isSpouseOf ?spouseRelation .
  ?spouseRelation a dbpedia:MarriageRelation;
    dbpedia:to ?spouse
  .
  ?person rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
130,20,test,"Give me the figure known as the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama and entity in the administration, that is American, of the award of Živko Ključe.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v2 <http://dbpedia.org/ontology/director> ?v1 . <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/governor> ?v4 . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?film ?soccerClub ?coachName ?adminEntity
WHERE {
  ?film a dbpedia:Film;
    foaf:AFFILIATION ?soccerClub .
  ?soccerClub a dbpedia:SoccerClub .

  ?coach a dbpedia:Coach;
    foaf:name ?coachName;
    dbpedia:nationality ""American"";
    dbpedia:residence ""Madison, Alabama"" .

  ?adminEntity a dbpedia:Organization;
    dbpedia:nationality ""American"";
    dbpedia:award ""Živko Ključe"" .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
216,70,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v7 . ?result <http://dbpedia.org/ontology/coach> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbppro: <http://dbpedia.org/property/>

SELECT ?playerCoach WHERE {
  ?player a dbppro:Footballer; dbpedia:role dbpedia:SoccerPlayer .
  ?player dbpedia:coach ?playerCoach .
  ?playerCoach a dbpedia:Person; dbpedia:role dbpedia:SportsManager .
  ?playerCoach a dbpedia:Person; dbpedia:role dbpedia:SoccerManager .
  ?player rdfs:label ""Džemal Berberović"" .
  ?playerCoach rdfs:label ""Name of the Coach"" .
  FILTER (xsd:date(?deathTime) = ""2023-04-07"") . # Pavel Vezhinov's death date
}
```",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
926,67,test,"Give me the father of Mahmud II and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v4 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father ?child ?royaltyRelation
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?father .
  ?father a dbpedia:Person;
    dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:parent ?royaltyParent .
  ?royaltyParent a dbpedia:Royalty .
  ?child a dbpedia:Person;
    dbpedia:parent ?royaltyParent .
}",7,9,8,3,3,3,3,71,0,32,1,0.0,0.0,0
124,57,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?militaryForce1 ?militaryForce2
WHERE {
  ?person1 a dbpedia:Person; dbpedia:awardedBritishSouthAfricaCompanyMedal .
  ?person1 dbpedia:conflictIn ?conflict1 .
  ?person2 a dbpedia:Person; dbpedia:commanderIn ?conflict2 .
  ?conflict1 a dbpedia:MilitaryConflict; dbpedia:conflictType ""Second Boer War"" .
  ?conflict2 a dbpedia:MilitaryConflict; dbpedia:conflictType ""Mahdist War"" .
  ?conflict1 dbpedia:involvesMilitaryForce ?militaryForce1 .
  ?conflict2 dbpedia:involvesMilitaryForce ?militaryForce2 .
}",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
865,56,test,"Give me the father of AK Abdul Momen and native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?fatherOfAKMomen ?countryOfResidence
WHERE {
  ?child a dbpedia:Person; dbpedia:father ?fatherOfAKMomen .
  ?child dbpedia:hasParentAbulMaalAbdulMuhith Abul_Maal_Abdul_Muhith .
  ?parentOfAbulMaalAbdulMuhith a dbpedia:Person; dbpedia:birthPlace ?countryOfResidence .
  ?fatherOfAKMomen a dbpedia:Person; dbpedia:birthPlace ?countryOfResidence .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
495,20,test,Give me the child of the father of the parent of Princess Catherine of Württemberg and father of the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?v4 . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childOfGeorgeWILLiam ?childOfPaulinesHusband
WHERE {
  ?father_of_Catherine a dbpedia:Person;
    dbpedia:parent ?grandParentCatherine .
  ?grandParentCatherine a dbpedia:Person;
    dbpedia:parent ?greatGrandParent .

  ?father_of_Pauline_a_Husband a dbpedia:Person;
    dbpedia:parent ?husbandOfPauline .
  ?husbandOfPauline a dbpedia:Person;
    dbpedia:spouse ?wifeOfPauline .
  
  ?child_of_GeorgeWILLiam a dbpedia:Person;
    dbpedia:child ?childOfGeorgeWILLiam .
  ?child_of_Pauline_a_Husband a dbpedia:Person;
    dbpedia:child ?childOfPaulinesHusband .
}
```",6,6,7,3,2,3,2,20,1,43143,0,2.3178193955127018e-05,1.0,4.63553134778074e-05
445,56,test,"Give me the entity in the award of the commander in Battle of Saint-Mihiel and death place of Patrick Moore and entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Commander award in the Battle of Saint-Mihiel
SELECT ?commander WHERE {
  ?commander a dbpedia:Person;
    dbpedia:awardWinner [ dbpedia:forBattle ""Saint-Mihiel, 1918""];
}

# Death place of Patrick Moore
SELECT ?deathPlace WHERE {
  ?person a dbpedia:Person; dbpedia:name ""Patrick Moore"" .
  ?person dbpedia:deathPlace ?deathPlace .
}

# Residence country of Anna Sharkey
SELECT ?country WHERE {
  ?person a dbpedia:Person; dbpedia:name ""Anna Sharkey"" .
  ?person dbpedia:nationality ?country .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
273,20,test,Give me the spouse of the child of the child of Edoardo Agnelli (1831-1871) and parent of the alumnus of the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v5 <http://dbpedia.org/ontology/almaMater> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find Edoardo Agnelli's children
SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?parent dbpedia:name ""Edoardo Agnelli"" .
}

# Step 2: Find spouses of those children
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?child ?spouse WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasSpouse ?spouse .
  ?child rdf:type <http://dbpedia.org/ontology/Child> . # Assuming Child is a subclass of Person in DBpedia
  FILTER( ?child IN ( ?children ) )
}

# Step 3: Find parents of Università degli Studi di Torino alumni
SELECT ?alumnus ?parent WHERE {
  ?alumnus a dbpedia:Person;
    dbpedia:alumniOfUniversita ""Università degli Studi di Torino"" .
  ?alumnus dbpedia:hasParent ?parent .
}

# Combine all the results to find the final answer
CONSTRUCT { ?childName ?spouseName ?parentName } WHERE {
  ?children <- SELECT ?child FROM <#step1> .
  ?spouses <- SELECT ?child ?spouse FROM <#step2> WHERE { ?child rdf:type <http://dbpedia.org/ontology/Child> } .
  ?alumni <- SELECT ?alumnus ?parent FROM <#step3> .
  ?childrenNames <- BIND( str(?children) AS ?childName ) .
  ?spousesNames <- BIND( str(?spouses) AS ?spouseName ) .
  ?parentsNames <- BIND( str(?parents) AS ?parentName ) .
  ?finalResult <- FILTER ( (?childName IN ?childrenNames) AND (?parentName IN ?parentsNames) )
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
865,61,test,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_of_politician WHERE {
  ?husband dbpedia:spouse ?wife .
  ?wife dbpedia:partner ?abul_maal_abdul_muhith .
  ?abul_maal_abdul_muhith a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?child a dbpedia:Person;
    dbpedia:parent ?father_of_politician .
  FILTER (xsd:boolean(?child rdf:type dbpedia:Politician))
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
965,70,test,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?royalParent
WHERE {
  ?child a dbpedia:Person;
    dbpedia:birthDate ""1854-05-24"";
    dbpedia:parent ?politicianParent .
  ?politicianParent a dbpedia:Person;
    dbpedia:offspring ?child .
  ?child a dbpedia:Royalty;
    foaf:father ?royalFather .
  ?royalFather a dbpedia:Person;
    dbpedia:name ""Prince Louis IV, Grand Duke of Hesse and by Rhine"" .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
978,19,test,"Give me the band member of the person born as the name of Chicane (musician) and band member of the professional, that is a musical artist and an artist, in .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandMember
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Chicane""@en;
    dbpedia:role dbpedia:Musician .
  ?person a dbpedia:Person;
    dbpedia:role dbpedia:Artist .
  ?person rdfs:label ?bandMember.
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
124,67,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?militaryForce1 ?militaryForce2
WHERE {
  ?person dbpedia:birthDate ""1850-06-24""^^xsd:date; 
  dbpedia:commanderIn ""Mahdist War"" .
  ?person dbpedia:awardedBy ""British South Africa Company Medal"" .
  ?person a dbpedia:Person;
    dbpedia:militaryConflict ""Second Boer War"" .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
645,64,test,"Give me the commander in the force of the commander in Siege of Madrid and military force of Spanish Civil War and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/office> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify the military force during the Siege of Madrid
SELECT ?militaryForce WHERE {
  dbpedia:Siege_of_Madrid relatedTo ?militaryForce .
}

# Step 2: Find the commander of that force
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?commander ?force WHERE {
  ?militaryForce a dbpedia:Military_force ;
    dbpedia:commander ?commander .
  ?militaryForce foaf:name ?forceName .
  FILTER (str(?forceName) = ""Siege of Madrid"") 
}

# Step 3: Identify the leader of the government office/agency during the Restoration period in Spain
SELECT ?officeLeader WHERE {
  dbpedia:Restoration_(Spain) timePeriod ?timePeriod .
  ?office a dbpedia:Government_agency ;
    dbpedia:leader ?officeLeader .
  ?timePeriod start ?startYear.
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
976,58,test,"Give me the office of Mustafa Şentop and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?officeMustafa ?mayor_office WHERE {
  ?politician a dbpedia:OfficeHolder;
    dbpedia:officeName ""Mustafa Şentop"";
    dbpedia:politicalParty dbpedia:NationAlliance_Turkey .
  ?politician foaf:name ?birth_name .
  OPTIONAL { ?politician dbpedia:birthPlace ?birth_place }
  ?mayor a dbpedia:OfficeHolder;
    dbpedia:officeName ?mayor_office;
    dbpedia:politicalParty dbpedia:NationAlliance_Turkey .
  ?mayor foaf:name ?mayor_name .
  OPTIONAL { ?mayor dbpedia:birthPlace ?birth_place }
  FILTER (lang(?birth_name) = ""turkish"" AND lang(?mayor_name) = ""turkish"")
  BIND(??bind AS ?birth_name_of_naci) WHERE {
    ?person a foaf:Person;
      foaf:name ?name .
    OPTIONAL { ?person dbpedia:birthName ?birth_name }
    FILTER (lang(?birth_name) = ""turkish"") 
    RETURN ?person
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
892,71,test,"Give me the landmark at elevation of the award of the member of E-girls and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of the true self of Enrico Crolla.","SELECT ?result WHERE { ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v8 <http://dbpedia.org/property/leaderParty> ?v7 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v7 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v8 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX ewg: <http://www.e-girls-world.com/vocabulary#>

SELECT ?awardName ?elevation ?partyRegion ?partyName ?landmark
WHERE {
  ?andrea cozzolino a ewg:EgirlMember ;
               dbpedia:awardedThing ?award .
  ?award a dbpedia:Award .
  ?award dbpedia:hasLocation ?location .
  ?location rdfs:label ?elevation .

  ?enrico_crolla a dbpedia:Person;
               ewg:trueSelfProfession ?profession .

  ?andrea_cozzolino ewg:memberOf ?party .
  ?party rdfs:label ?partyName .
  ?party a dbpedia:PoliticalParty .

  ?landmark a dbpedia:Landmark ;
             dbpedia:locatedIn ?region ;
             dbpedia:isPartOf ?administrativeRegion .
  
  ?region a dbpedia:Region;
           dbpedia:hasSettlement ?settlement ;
           dbpedia:isPartOf ?administrativeRegion .

  ?administrativeRegion a dbpedia:AdministrativeDivision .
}
```",9,15,10,3,3,3,3,71,0,0,2,0,0.0,0
445,57,test,Give me the entity in England and entity in the award of George H. Cameron and death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardeeName ?birthPlace ?deathPlace
WHERE {
  ?awardee a dbpedia:Person;
    dbpedia:awardRecipientOf [ property dbpedia:hasAward ""George H. Cameron"" ] .
  ?awardee dbpedia:birthPlace ?birthPlace .
  ?awardee a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
382,18,test,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler and landmark at elevation of the award of Harry Combes.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdf:type dbo:Athlete .
  ?person rdf:type dbo:SportsManager .
  ?person rdfs:label ""AK Abdul Momen""@en.
  ?person dbpedia:period ""British Raj"" .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
865,70,test,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child of the father of Abul Maal Abdul Muhith and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace ?politicianName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person2 a dbpedia:Person; 
    dbpedia:spouse [ foaf:partner ?person ].
  ?child a dbpedia:Person; 
    dbpedia:father ?politician .
  ?person2 a dbpedia:Person; 
    dbpedia:child ?child .
}
```

This SPARQL query will:
1. Identify the birthplace of Ram Jaipal Singh Yadav (assumed to be India).
2. Find the spouse of Abul Maal Abdul Muhith.
3. Determine the child of this spouse.
4. Identify the politician who is the father of this child.",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
433,70,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?associated_artist
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Raconteur Slim""@en .
  ?person a dbpedia:Artist ;
    dbpedia:musicalArtist ?associated_artist .

  ?other_person a dbpedia:Person;
    dbpedia:name ""Ornette Coleman""@en .
  ?other_person a dbpedia:Artist ;
    dbpedia:musicalArtist ?associated_artist .
}
```",8,14,9,3,3,3,3,71,0,0,4,0,0.0,0
645,58,test,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in Battle of Jarama.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?officeLeader
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Francisco Largo Caballero""@es .
  ?person dbpedia:birthPlace <http://dbpedia.org/property/birthPlace#Spain> .
  ?person rdfs:label ""Prime Minister of Spain""@en .
  ?office a dbpedia:Office; rdfs:label ""Government Agency/Organization""@en .
  ?office a dbpedia:Event; rdfs:label ""Spanish Civil War""@en .
}
```

This SPARQL query looks for individuals named Francisco Largo Caballero, born in Spain, who were labeled as the Prime Minister of Spain during the Spanish Civil War. It then connects this information to an office (government agency/organization) that is associated with the event of the Spanish Civil War.",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
158,20,test,"Give me the entity in the award, that is a country, of the reference to Adelbert Cronkhite and party of the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v5 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/successor> ?v5 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?countryAward ?successorPrimeMinister
WHERE {
  ?person a dbpedia:Person;
    dbpedia:deathDate ""1945-09-15"" .
  ?person dbpedia:officeHolder true .
  ?person dbpedia:politician true .
  ?successor a dbpedia:OfficeHolder ;
    dbpedia:office ""Prime Minister of Bangladesh"" ;
    dbpedia:termStarts ""1945-01-01"" .
  ?countryAward a dbpedia:CountryAward .
  ?person dbpedia:awarded ?countryAward .
}
```",6,12,7,3,2,3,2,20,0,0,1,0,0.0,0
36,26,test,"Give me the person born in 1971 and person born as the birth name of Ayo Makun and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?actor foaf:name ""Ayo Makun"" .
  ?film a dbpedia:Film;
    dbpedia:mainActor ?actor ;
    dbpedia:featuringRole ?role .
  ?role a dbpedia:CharacterRole .
  ?film rdf:type dbpedia:FeatureFilm .
  ?film dbpedia:productionYear 1971.
  ?actor rdfs:label ""Ayo Makun"" .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
933,60,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName1 ?birthDate1 ?deathDate1 WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ?birthDate1 .
  ?person a dbpedia:Person;
    dbpedia:deathDate ?deathDate1 .
  FILTER (?birthDate1 = ""1947-04-21"") .
  OPTIONAL { 
    ?person rdfs:label ?bandName1 . 
    ?person dbpedia:associatedBand ?band .
  }
}

SELECT ?bandName2 ?birthPlace ?deathPlace WHERE {
  ?band a dbpedia:MusicGroup;
    dbpedia:name ?bandName2 .
  ?band dbpedia:hasMember ?artist .
  ?artist a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?artist a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",6,12,7,3,2,3,3,71,0,0,4,0,0.0,0
926,69,test,"Give me the father of the father of the spouse of Neşerek Kadın and successor of the child of Ahmed III and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . },"Given the reasoning steps, the corresponding SPARQL query would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandfatherSpouseFather
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:parent ?mustafaIII .
  ?person2 a dbpedia:Person;
    dbpedia:spouse ?wifeOfMustafaIII .
  ?person3 a dbpedia:Person;
    dbpedia:parent ?wifeOfMustafaIII .
  ?grandfatherSpouseFather a dbpedia:Person;
    dbpedia:parent ?person3 .
  FILTER (xsd:anyURI(?mustafaIII) = ""http://dbpedia.org/ontology/Mustafa_III"")
  FILTER (xsd:anyURI(?wifeOfMustafaIII) = ""http://dbpedia.org/ontology/Neşerek_Kadın"")
  FILTER (xsd:anyURI(?grandfatherSpouseFather) = ""http://dbpedia.org/ontology/{?person3}"") 
}
```

This query starts by identifying Mustafa III as Neşerek Kadın's father. It then finds the spouse of Neşerek Kadın (`?wifeOfMustafaIII`). The next step is to find the parent of this spouse (`?person3`), which would be the father of the spouse of Neşerek Kadın. Finally, it filters to ensure we are looking at Mustafa III and Neşerek Kadın specifically and returns the URI of `?grandfatherSpouseFather`.",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
987,57,test,"Give me the entity in the region, that is a country, of Central European Time and birth place of Dado Polumenta and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?country WHERE {
  ?person1 a dbpedia:Person; dbpedia:birthPlace ?birthPlace1 .
  ?person2 a dbpedia:Person; dbpedia:birthPlace ?birthPlace2 .
  ?birthPlace1 ns:locatedIn ?country1 .
  ?birthPlace2 ns:locatedIn ?country2 .
  ?country1 rdfs:label ""Bosnia and Herzegovina""@en .
  ?country2 rdfs:label ""Bosnia and Herzegovina""@en .
  FILTER (?birthPlace1 = ?birthPlace2)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
41,28,test,"Give me the party of the person born as David Declan Costello and party of the work, that is an office holder, of yes and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> ""yes""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v1 . }",{sparql_query},6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
892,70,test,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and landmark at elevation of the award of the member of E-girls.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v5 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?result <http://dbpedia.org/ontology/elevation> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v6 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v5 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/province> ?v0 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },{sparql_query},8,14,9,3,3,3,3,71,0,0,2,0,0.0,0
445,66,test,"Give me the death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of Anna Sharkey and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen"" .
  ?person dbpedia:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?countryLabel .
  
  ?battle a dbpedia:Battle;
    dbpedia:commander [dbpedia:name ""Georges Clemenceau""] .
  ?battle dbpedia:location ?location .
  
  ?country a dbpedia:Country;
    dbpedia:name ""India"" .
  
  ?birthPlace rdf:type dbpedia:Residence ;
    rdfs:label ?residenceLabel .
  
  ?location a dbpedia:Location;
    rdfs:label ?locationLabel .
  
  ?person dbpedia:deathPlace ?deathPlace .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
445,62,test,"Give me the entity in United Kingdom and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and death place of the awardee of the establishment of 1820-03-10.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthPlace ?country_of_residence ?deathPlace
WHERE {
  ?person dbpedia:establishmentDate ""1820-03-10"" .
  ?person a dbpedia:Person;
    dbpedia:occupation rdf:type ?athleteType .
  FILTER (str(?athleteType) = ""Athlete"")
  
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person; dbpedia:residenceCountry ?country_of_residence .
  
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
507,59,test,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of the person born as the birth name of Anne V. Coates.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/director> ?result . ?v5 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?directorLabel ?movieTitle
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1919-06-17"" .
  ?spouse a dbpedia:Person;
    dbpedia:name ""Anne V. Coates"" .
  ?person dbpedia:spouse ?spouse .
  ?movie a dbpedia:Film; 
    dbpedia:director ?director .
  ?movie dbpedia:productionCompany ?productionCompany .
  ?director dbpedia:birthDate ""1919-06-17"" .
  ?person rdfs:label ?directorLabel .
  ?productionCompany rdfs:label ?productionCompanyLabel .
  FILTER (regex(str(?directorLabel), ""John"")) .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
326,9,test,"Give me the person decedent at the region coded, that is a settlement, as 442/760 and professional in the profession of Susanne Lewis.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Susanne_Lewis> <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/areaCode> ""442/760"" . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person ?birthPlace ?deathPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Susanne Lewis"" .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
  ?birthPlace rdfs:label ""442/760"" .
}
```",4,5,5,2,2,2,2,9,0,0,6,0,0.0,0
200,8,test,Give me the band member of the band of Revenge (Canadian band) and reference to Angelcorpse.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Revenge_(Canadian_band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Angelcorpse""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandMember WHERE {
  ?band dbpedia:genre ""Heavy metal music"";
  ?band dbpedia:name ""Revenge (Canadian band)"" .
  ?bandMember a dbpedia:Musician;
    dbpedia:band ?band .
  OPTIONAL { ?bandMember rdfs:seeAlso <http://www.angelcorpse.com/> }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
124,66,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1850-06-24"" ;
    dbpedia:serviceInMilitaryConflict ?war .
}

SELECT ?militaryForce WHERE {
  ?battery a dbpedia:Battery;
    dbpedia:unitName ""A Field Battery, Royal Australian Artillery"";
    dbpedia:militaryForce ?militaryForce .
}
```",7,14,8,3,3,3,3,71,0,0,9,0,0.0,0
791,64,test,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of Emperor Antoku.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_of_antoku 
WHERE {
  ?antoku a dbpedia:Person;
    dbpedia:emperorOf Japan .
  ?antoku dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:officeHolder true .
  ?father dbpedia:spouse ?mother_of_antoku .
  ?mother_of_antoku a dbpedia:Person;
    dbpedia:partner ?spouse_of_mother
  FILTER (xsd:boolean(?spouse_of_mother = ""Emperor Takakura""))
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
170,28,test,Give me the entity in the work of International Energy Agency and birth place of the awardee of People's Artist of Russia and domain of the profession of John Scholey.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"For the IEA entity:
```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?work WHERE {
  ?work a dbpedia:Report; dbpedia:subject ""International Energy Agency"" .
}
```

For John Scholey:
```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?profession
WHERE {
  ?person a dbo:Person;
    dbo:name ""John Scholey"";
    dbo:birthPlace ?birthPlace .
  ?person a dbo:Person;
    dbo:occupation ?profession .
}
```",6,6,7,2,3,2,3,28,0,0,3,0,0.0,0
715,64,test,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force, that is a military conflict, of the native of Morocco and commander in Spanish Civil War.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office ?militaryConflict
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Carlos Franco Iribarnegaray"" .
  ?person a dbpedia:Person;
    dbpedia:conflict ?militaryConflict .
  ?militaryConflict a dbpedia:War ;
    dbpedia:participatedInCountry Morocco .
  ?person dbpedia:birthPlace ?birthPlace .
  OPTIONAL { ?person rdfs:label ?office } .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
935,19,test,"Give me the headquarter of the office of the native of Balochistan, Pakistan and death place of the awardee of Sitara-i-Imtiaz.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/location> ?result . ?v0 <http://dbpedia.org/property/office> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?headquarter ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality dbpedia:Pakistani ;
    dbpedia:birthPlace <http://dbpedia.org/property/birthPlace_of_Balochistan> .
  ?person a dbpedia:Person;
    dbpedia:awardedSitara_i_Imtiaz true ;
    dbpedia:deathPlace ?deathPlace .
}",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
102,18,test,"Give me the native of the residence, that is English and a settlement, of Peter Finbow and manager of the player in the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/team> ?v2 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?player a dbpedia:SoccerPlayer;
    dbpedia:nationalTeam dbpedia:EnglandWomen'sNationalFootballTeam .
  ?manager a dbpedia:Person;
    dbpedia:name ""Peter Finbow"";
    dbpedia:managed ?player .
  ?player dbpedia:birthPlace ?birthPlace
}",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
554,20,test,"Give me the leader of the birth place of the band, that is an artist, of Rita Redshoes and leader of the administration of the party member of Independent politician.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . ?v2 <http://dbpedia.org/property/leader> ?result . ?v5 <http://dbpedia.org/property/leader> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . },{sparql_query},6,7,7,3,2,3,2,20,0,0,3,0,0.0,0
433,62,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in Musician.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v4 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for Paul Chambers' associated musical artist
SELECT ?associatedMusicalArtist WHERE {
  ?person dbpedia:hasDBpediaPage ""Paul Chambers"";
  ?person a dbpedia:Person;
    dbpedia:associatedMusicalArtist ?associatedMusicalArtist .
}

# Query for Ornette Coleman's associated musical artist
SELECT ?associatedMusicalArtist WHERE {
  ?person dbpedia:hasDBpediaPage ""Ornette Coleman"";
  ?person a dbpedia:Person;
    dbpedia:associatedMusicalArtist ?associatedMusicalArtist .
}

# Ensure the associated artists are both classified as both artists and musical artists
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?associatedMusicalArtist WHERE {
  ?artist a dbpedia:Artist .
  ?artist a dbpedia:MusicalArtist .
  ?person dbpedia:associatedMusicalArtist ?associatedMusicalArtist .
  ?associatedMusicalArtist rdf:type [ rdfs:subClassOf [ rdf:resource=""http://dbpedia.org/ontology/MusicalArtist"" ] ; rdf:label ""Musical Artist"" ] .
}",7,13,8,3,3,3,3,71,0,0,3,0,0.0,0
365,20,test,"Give me the spouse of the native, that is a politician, of the reference to Полтавская губерния and person born as the birth name of the commander, that is an office holder, in Ukrainian–Soviet War.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthName ?birthName .
  ?person dbpedia:role ""Office Holder"" .
  ?person dbpedia:conflict ""Ukrainian–Soviet War"" .
  ?person dbpedia:politics ""Ukrainian Soviet Socialist Republic"" .
  ?politician a dbpedia:Politician;
    dbpedia:spouse ?spouse .
  ?politician dbpedia:role ""Office Holder"" .
  ?politician dbpedia:conflict ""Ukrainian–Soviet War"" .
  ?politician dbpedia:politics ""Ukrainian Soviet Socialist Republic"" .
  ?person rdfs:seeAlso ?politician .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
645,62,test,"Give me the commander in the force of the commander in Siege of Madrid and leader of Ministry of the Army (Spain) and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?person WHERE { 
  ?person a dbpedia:Person; 
 dbpedia:birthPlace ?birthPlace . 
 ?person dbpedia:deathPlace ?deathPlace . 
 ?person dbpedia:role [ owl:subPropertyOf dbpedia:commander_in ] . 
 ?person dbpedia:role [ owl:subPropertyOf dbpedia:leader_of_Ministry_of_the_Army_Spain ] . 
 ?person dbpedia:role [ owl:subPropertyOf dbpedia:military_force_of ] . 
 ?person dbpedia:event dbpedia:Siege_of_Madrid . 
 ?person dbpedia:event dbpedia:Restoration_(Spain) .",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
527,18,test,"Give me the author of the work, that is a work and a book, of Tom Baker and actor of the movie, that is a work and English and a television show, with the professional in Actor.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?v1 <http://dbpedia.org/property/occupation> ""Actor""@en . }",PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?author WHERE { dbpedia:Doctor_Who tv:creator ?author },5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
124,61,test,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }",PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?birthPlace ?deathPlace WHERE { ?person a dbpedia:Person; dbpedia:birthDate 1850-06-24 . ?person a dbpedia:Person; dbpedia:awardedBy dbpedia:BritishSouthAfricaCompanyMedal . ?conflict a dbpedia:Event; dbpedia:militaryConflict dbpedia:SecondBoerWar; dbpedia:type dbpedia:MilitaryConflict . },6,11,7,3,2,3,3,71,0,0,1085,0,0.0,0
124,70,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war ?militaryForce
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1850-06-24""^^xsd:date;
    dbpedia:deathDate ?dDate .
  OPTIONAL { 
    ?person dbpedia:conflict dbpedia:Second_Boer_War ;
      dbpedia:role dbpedia:Commander_in_Chief_of_the_Australian_Force.
  }
  ?person a dbpedia:Person;
    dbpedia:militaryAllegiance dbpedia:British_Empire .
  ?war a dbpedia:Event;
    dbpedia:type dbpedia:Military_conflict ;
    dbpedia:participatedBy dbpedia:British_Empire .
  ?militaryForce a dbpedia:Military_force;
    dbpedia:roleInConflict ""Commander"" .
}
```",8,15,9,3,3,3,3,71,0,0,9,0,0.0,0
976,69,test,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v6 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v4 <http://dbpedia.org/ontology/leader> ?v2 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/property/office> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office_of_kili, ?office_of_nation_alliance_mayor, ?birth_name
WHERE {
  ?kili a dbpedia:Person;
    dbpedia:office dbpedia:Leader ;
    dbpedia:role dbpedia:PoliticalPartyLeader .
  ?nation_alliance a dbpedia:Organization;
    dbpedia:leader ?office_of_kili .
  
  ?mayor a dbpedia:OfficeHolder;
    dbpedia:office dbpedia:Mayor ;
    dbpedia:role dbpedia:Politician .
  ?nation_alliance a dbpedia:Organization;
    dbpedia:mayor ?office_of_nation_alliance_mayor .
  
  ?naci_bostanci a foaf:Person;
    foaf:givenName ?birth_name .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
645,65,test,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?leader ?militaryForce ?societalEvent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolder ?office .
  ?office a dbpedia:Government_Agency ;
    dbpedia:organization ?organization .
  
  ?person a dbpedia:Person;
    dbpedia:militaryForce ?militaryForce .
  
  ?militaryConflict a dbpedia:Military_Conflict ;
    dbpedia:startYear ""1874"" ;
    dbpedia:endYear ""1876"" ; # Example years for the Spanish Restoration
    dbpedia:societalEvent ?societalEvent .

  ?person rdfs:label ""Camilo Menéndez Tolosa""@es .
  ?person dbpedia:commanderIn ?militaryConflict .

  ?president a dbpedia:President;
    dbpedia:officeHolder ?presidentialOffice .
  
  ?presidentialOffice a dbpedia:Government_Agency ;
    dbpedia:organization ?societalEventOrganization .
  
  ?president rdfs:label ""Carlos Asensio Cabanillas""@es .
  ?president dbpedia:commanderIn ?militaryConflict .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
987,64,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of Moamer Kasumović and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> ?v5 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Moamer Kasumović"";
    dbpedia:birthPlace ?birthPlace .
}

SELECT ?birthPlace WHERE {
  ?band a dbpedia:Band;
    dbpedia:name ""Dado Polumenta"";
    dbpedia:birthPlace ?birthPlace .
}

SELECT ?artist WHERE {
  ?band a dbpedia:Band;
    dbpedia:name ""Dado Polumenta"";
    dbpedia:leadSinger ?artist .
  ?artist a dbpedia:Artist; # Ensuring the artist is also a musical artist
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
573,61,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?decedent WHERE {
  ?john_quincy_adams a dbpedia:Person;
    dbpedia:birthPlace <http://dbpedia.org/page/John_Quincy_Adam> .
  ?john_quincy_adams dbo:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:officesheld [dbo:officeHolderOffice dbo:office dbo:Politician] .
  ?decedent a dbpedia:Person;
    dbpedia:birthPlace <http://dbpedia.org/page/Decedent> .
    dbpedia:parentOf ?parent .
    dbpedia:officesheld [dbo:officeHolderOffice dbo:office dbo:Politician]
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
573,67,test,"Give me the person decedent at Massachusetts and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent ?deathPlace
WHERE {
  ?john_quincy_adams a dbpedia:Person;
    dbpedia:birthPlace Massachusetts .
  ?john_quincy_adams foaf:author ?author .
  ?author a dbpedia:CreativeWork;
    dbpedia:creator ?parent .
  ?parent a dbpedia:Person;
    dbpedia:deathPlace Massachusetts .
  ?parent a dbpedia:OfficeHolder .
  ?parent a dbpedia:Politician .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
216,63,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v6 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person
WHERE {
  ?person a dbpedia:SoccerPlayer;
    dbpedia:birthDate ""1983-12-20""^^xsd:date .
  ?person a dbpedia:SportsManager;
    dbpedia:manageOrganization ?organization .
  ?organization a dbpedia:FootballClub .
  ?person a dbpedia:Coach ;
    dbpedia:coachTeam dbpedia:CroatiaU21 .
  ?person rdfs:label ?name .
  FILTER (lang(?name) = ""bg"")  # Assuming the person's name is in Bosnian Cyrillic
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
582,67,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to Japan.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?result <http://dbpedia.org/property/nickname> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/father> ?v6 . ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?teamNickname
WHERE {
  ?player a dbpedia:Person;
    dbpedia:sportDiscipline dbpedia:Soccer ;
    dbpedia:birthPlace Japan ;
    dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:name ""Kazuaki Nagasawa"" ;
    dbpedia:role dbpedia:SoccerManager .
  ?player foaf:parent ?parent.
  ?parent a dbpedia:Person;
    dbpedia:name ""Kazuaki Nagasawa"" .
  ?player dbpedia:clubMemberOf ?team .
  ?team a dbpedia:Organization ;
    dbpedia:nickname ?teamNickname ;
    dbpedia:basedPlace Japan .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
459,28,test,"Give me the governor of the administration, that is a politician, of Brad Henry and governor of the death place, that is a settlement, of Cliff Roquemore and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for Brad Henry's governor
SELECT ?governorAdministration WHERE {
  ?person dbpprop:office dbpedia:Governor_of_Oklahoma ;
    dbpprop:officeHolder ?bradHenry .
  ?bradHenry foaf:name ""Brad Henry"" .
}

# Query for Cliff Roquemore's death place governor
SELECT ?governorDeathPlace WHERE {
  ?person dbpprop:deathPlace ?deathPlace ;
    dbpprop:office dbpedia:Governor_of_Oklahoma ;
    dbpprop:officeHolder ?cliffRoquemore .
  ?cliffRoquemore foaf:name ""Cliff Roquemore"" .
}

# Query for Kevin Stitt's birth name
SELECT ?birthName WHERE {
  ?person dbpprop:birthName ?birthName ;
    dbpprop:office dbpedia:Governor_of_Oklahoma ;
    dbpprop:officeHolder ?kevinStitt .
  ?kevinStitt foaf:name ""Kevin Stitt"" .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
445,63,test,"Give me the entity in the award of George H. Cameron and death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?result <http://dbpedia.org/ontology/location> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedBy dbpedia:Royal_Astronomical_Society .
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person dbpedia:residence dbpedia:England .
  ?person rdfs:label ""Sir Arthur Eddington""@en .
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
892,63,test,"Give me the entity in the profession of the true self of Enrico Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of the award of Anna Ishii.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/province> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession ?administration ?landmark
WHERE {
  ?person a dbpedia:Person;
    foaf:name ""Enrico Crolla"" .
  ?person dbpedia:occupation ?profession .
  ?politician a dbpedia:OfficeHolder; 
    dbpedia:office dbpedia:Italian_Parliamentary_Election; 
    dbpedia:party dbpedia:Democratic_Party_(Italy) .
  ?politician foaf:involves ?administration .
  ?award a dbpedia:Award;
    dbpedia:awardee Anna_Ishii .
  ?award rdfs:seeAlso ?landmark .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
445,58,test,Give me the entity in England and entity in the award of the commander in Battle of Saint-Mihiel and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },{sparql_query},6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
773,60,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?parent WHERE {
  ?child a dbpedia:Person; dbpedia:hasParent ?parent .
  ?child dbpedia:birthDate ""c. 846""^^xsd:date; dbpedia:deathDate ""2 June 882""^^xsd:date .
  ?child dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person; dbpedia:hasChild ?child .
  ?spouse rdf:type dbpedia:Royalty
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
216,62,test,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of Ognjen Vukojević.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/coach> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Find the coach of Croatia U21 (organization and soccer club)
SELECT ?coachOrganization ?soccerClub
WHERE {
  ?coach a dbpedia:Person;
    dbpedia:soccerCoach dbpedia:CroatiaU21 .
  ?coach dbpedia:worksFor ?coachOrganization .
  ?coach soccerClub ?soccerClub .
}

# Find the player-coach of Džemal Berberović (organization and soccer club)
SELECT ?playerCoachOrganization ?playerSoccerClub
WHERE {
  ?player a dbpedia:Person;
    dbpedia:sportRole dbpedia:soccerPlayer ;
    dbpedia:worksFor ?playerCoachOrganization .
  ?playerCoach a dbpedia:Person;
    dbpedia:sportRole dbpedia:sportsManager ;
    dbpedia:worksFor ?playerCoachOrganization .
  ?player soccerClub ?playerSoccerClub .
  ?playerCoach coachOf ?player
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
136,8,test,Give me the region coded as 03834 and landmark at elevation of the award of Bret Anthony Johnston.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ""03834"" . ?result <http://dbpedia.org/ontology/elevation> ?v2 . <http://dbpedia.org/resource/Bret_Anthony_Johnston> <http://dbpedia.org/property/awards> ?v2 . }",PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?birthPlace ?deathPlace WHERE { ?person a dbpedia:Person; dbpedia:birthPlace ?birthPlace . ?person a dbpedia:Person; dbpedia:deathPlace ?deathPlace },3,3,4,2,2,2,2,9,1,100979,0,9.902951079421667e-06,1.0,1.9805706023905488e-05
826,70,test,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?predecessorOfJohannHeinrichAppel
WHERE {
  ?johannHeinrichAppel a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person;
    dbpedia:name ""Johann Heinrich Appel"" .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
41,27,test,"Give me the party of Mark Durkan and party of the work, that is an office holder, of yes and party of the person born as David Declan Costello.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?partyAffiliation1 ?partyAffiliation2
WHERE {
  ?person1 a dbpedia:OfficeHolder;
    dbpedia:partyMember ?partyAffiliation1 .
  ?person2 a dbpedia:OfficeHolder;
    dbpedia:partyMember ?partyAffiliation2 .
  ?person1 ns:name ""Mark Durkan"" .
  ?person2 ns:givenName ""David"" ; ns:familyName ""Declan"" ; ns:name ""Costello""
}",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
839,59,test,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v5 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band1 ?band2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:name ""Kevin Russell""@en .
  ?person1 dbpedia:band ?band1 .

  ?person2 a dbpedia:Person;
    dbpedia:name ""Peter Schorowsky""@en .
  ?person2 dbpedia:band ?band2 .
  
  ?band1 rdfs:label ?band1_label .
  ?band2 rdfs:label ?band2_label .
  
  ?band1 = ?band2
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
715,65,test,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?leader ?role1 ?role2 
WHERE { 
  ?person1 a dbpedia:Person; dbpedia:officeHolder ?office . 
  ?office a dbpedia:GovernmentAgency . 
  ?person1 a dbpedia:Person; dbpedia:commanderInForce ?force . 
  ?force a dbpedia:MilitaryConflict . 
  ?person2 a dbpedia:Person; dbpedia:presidentOfCountry Spain; dbpedia:generalElection 1933 . 
  ?person1 ns:involvesRole ?role1 . 
  ?person2 ns:involvesRole ?role2 . 
}",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
456,70,test,"Give me the spouse of the actor of Pacific Drive and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and band of the band, that is a musical artist, of the band of Alan Doyle.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorSpouse
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:role dbpedia:The_Shadow .
  ?actor foaf:spouse ?actorSpouse .
  ?band a dbpedia:Band ;
    dbpedia:name ""Great Big Sea"" .
  ?alan_doe a dbpedia:Person;
    dbpedia:name ""Alan Doyle"" .
  ?alan_doe foaf:musicGenre [ owl:intersectionOf (dbpedia:Rock music) (dbpedia:Sea music)] .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
417,71,test,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v7 . ?result <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Christian X of Denmark""@en .
  ?child a dbpedia:Person;
    dbpedia:child ?grandchild .
  ?grandchild a dbpedia:Person;
    rdfs:label ""Princess Ingrid of Denmark""@en .
  ?child a dbpedia:Person;
    dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person;
    rdfs:label ""Prince Henry, Duke of Gloucester and Edinburgh""@en .
}",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
443,25,test,"Give me the birthplace of Carl Larsson and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and landmark at elevation of the award of William Shepherd.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v2 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find Carl Larsson's birthplace
SELECT ?birthPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  FILTER (?person = ""Carl Larsson"") 
}

# Step 2: Find a musical artist and an artist born on 1949-11-20
PREFIX date: <http://dbpedia.org/ontology/#date>
SELECT ?artistName ?birthPlace WHERE {
  ?artist a dbpedia:Artist;
    dbpedia:birthDate date:1949-11-20 .
  OPTIONAL { ?artist a dbpedia:MusicalArtist } # Check if the artist is also a musical artist
  FILTER (?artistName != ""Carl Larsson"") 
}

# Step 3: Find the landmark at the elevation of the award of William Shepherd
SELECT ?landmark ?elevation WHERE {
  ?award a dbpedia:Award;
    dbpedia:awardedTo ?person .
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  OPTIONAL { ?award dbpedia:hasElevation ?elevation }
  FILTER (?person = ""William Shepherd"") 
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
645,56,test,"Give me the military force of Spanish Civil War and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?militaryForce ?leader
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Carlos Asensio Cabanillas"" .
  ?person foaf:commands ?militaryForce .
  ?militaryForce a dbpedia:MilitaryForce; dbpedia:conflict ""Spanish Civil War"" .
  ?leader a dbpedia:OfficeHolder; dbpedia:office ?office .
  ?office a dbpedia:GovernmentAgency .
}",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
433,66,test,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find the writer of ""Slowhand at 70 – Live at the Royal Albert Hall""
SELECT ?writer WHERE {
  dbpedia:Album_Slowhand_At_70_Live_At_The_Royal_Albert_Hall dbo:wrote ?writer
}

# Step 2: Determine the profession of the identified writer
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?profession WHERE {
  ?writer rdfs:label ?profession .
}

# Step 3: Find the musical artist associated with the identified writer
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?musical_artist WHERE {
  ?writer dbo:associatedWithArtists ?musical_artist
}

# Step 4: Identify Paul Laurence Dunbar Chambers Jr. (Cat Stevens) and find his associated musical artist
SELECT ?associated_music_artist WHERE {
  dbpedia:Person_Paul_Laurence_Dunbar_Chambers_Jr. dbo:musicalArtist ?associated_music_artist
}

# Step 5: Identify Scott LaFaro and find his associated musical artist
SELECT ?associated_music_artist WHERE {
  dbpedia:Musician_Scott_Lafaro dbo:associatedWithArtists ?associated_music_artist
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
456,63,test,"Give me the professional in the alter ego of The Shadow and band of the band, that is a musical artist, of Dean Brody and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouseName
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person;
    rdfs:label ?spouseName .
  ?actor dbpedia:roleIn ""Wentworth"" .
  ?actor rdfs:name ""Ross Newton"" .
}
```

This query will return the label (name) of the spouse of Ross Newton, assuming such information is available in DBpedia.",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
200,9,test,Give me the band member of the band of Revenge (Canadian band) and reference to the name of Angelcorpse.,SELECT ?result WHERE { <http://dbpedia.org/resource/Revenge_(Canadian_band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Angelcorpse> <http://xmlns.com/foaf/0.1/name> ?v1 . },"To achieve this using a SPARQL query, we would need to:
1. Query for the band ""Revenge.""
2. Retrieve its members.
3. Check if any of these members are also associated with ""Angelcorpse.""

Assuming we have access to a knowledge base like DBpedia that contains music-related data, the SPARQL query might look something like this:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandMember WHERE {
  ?band dbpedia:hasBandMember ?bandMember .
  ?band rdfs:label ""Revenge""@en .
  ?bandMember rdfs:label ""Angelcorpse""@en .
}
```

This query searches for band members who are also labeled as being part of ""Angelcorpse"" while being associated with a band labeled as ""Revenge.""",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
417,70,test,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and child of the father of the leader, that is a royalty, of Colony of Greenland and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchildName ?spouseName
WHERE {
  ?parent a dbpedia:Person; dbpedia:isParentOf ?child .
  ?child a dbpedia:Person; dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person; dbpedia:isParentOf ?grandchild .
  ?grandchild a dbpedia:Person; dbpedia:hasFather ?leader .
  ?leader a dbpedia:Person; dbpedia:leads ?colony .
  ?colony dbpedia:isColony ""Greenland"" .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
507,67,test,"Give me the spouse of Anne V. Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of the person born on 1966-02-18.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://dbpedia.org/ontology/director> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouseName ?movieTitle
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Anne V. Coates"" .
  ?director a dbpedia:Person;
    dbpedia:birthDate ""1919-06-17""^^xsd:date;
    dbpedia:profession ""Film director"" .
  ?movie a dbpedia:Film; 
    dbpedia:productionCompany ?company .
  ?company a dbpedia:Organization;
    dbpedia:name ?spouseName .
  ?director rdfs:inClass dbpedia:Film_director .
  ?movie rdfs:subPropertyOf ?person .
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
465,60,test,"Give me the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . }","{PREFIX dbpedia: <http://dbpedia.org/ontology/>
    SELECT ?successor WHERE {
        ?parent a dbpedia:Person;
            dbpedia:hasChild ?child .
        ?child a dbpedia:Person;
            rdfs:label ""Alfonso I d'Este""@it;
            dbpedia:birthPlace ""Ferrara, Italy"";
            dbpedia:deathPlace ""Modena, Italy"" .
        ?parent dbpedia:hasParent ?grandparent .
        ?grandparent a dbpedia:Person;
            rdfs:label ""Ercole II d'Este""@it .
    }}
  
This SPARQL query looks for a person (Alfonso I d'Este) who is the child of Ercole II d'Este and has the label ""Alfonso I d'Este"" in Italian, which confirms his identity. The query also ensures that Alfonso I d'Este succeeded his father as Duke of Ferrara, fulfilling the criteria of being a royalty.",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
495,19,test,Give me the child of the father of William I of Württemberg and father of the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify William I of Württemberg's father
SELECT ?father_of_William_I WHERE {
  dbpedia:William_I_of_Württemberg a dbpedia:Monarch;
    dbpedia:father ?father_of_William_I .
}

# Step 2: Determine the children of William I of Württemberg
SELECT ?child_of_William_I WHERE {
  ?child a dbpedia:Person;
    dbpedia:childOf dbpedia:William_I_of_Württemberg .
}

# Step 3: Identify the parent(s) of Princess Pauline of Württemberg (1810–1856)
SELECT ?parent_of_Pauline WHERE {
  dbpedia:Princess_Pauline_of_Württemberg a dbpedia:Person;
    dbpedia:parent ?parent_of_Pauline .
}

# Step 4: Determine the children of the parent(s) of Princess Pauline of Württemberg
SELECT ?child_of_parent WHERE {
  ?child a dbpedia:Person;
    dbpedia:childOf ?parent_of_Pauline .
}

# Step 5: Find the common child between the two sets of children
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?common_child WHERE {
  ?child_of_William_I rdf:type dbpedia:Person .
  ?child_of_parent rdf:type dbpedia:Person .
  ?common_child a dbpedia:Person;
    dbpedia:childOf ?child_of_William_I .
    dbpedia:childOf ?child_of_parent .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
865,71,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v8 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v7 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v8 <http://dbpedia.org/property/father> ?v7 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace
WHERE {
  ?spouse a dbpedia:Person;
    dbpedia:sibling [ a dbpedia:Person; rdfs:label ""Abul Maal Abdul Muhith""; dbpedia:father ?father ] .
  ?father a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
892,57,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and entity in Italy and landmark at elevation of the award of the member of E-girls.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX ewg: <http://www.e-words.net/ontology#>
SELECT ?regionName ?elevationAward
WHERE {
  ?region a dbpedia:Region;
    dbpedia:country dbpedia:Italy .
  ?region rdfs:label ?regionName .
  ?member a ewg:EgirlMember ;
        ewg:awarded ?elevationAward .
  ?region dbpedia:PpartOf ?area .
  ?area a dbpedia:AdministrativeDivision .
  ?area dbpedia:party dbpedia:DemocraticPartyItaly .
  ?region rdfs:label ?regionName .
  FILTER (lang(?regionName) = ""it"")  # Ensure the region name is in Italian
}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
433,61,test,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?professional
WHERE {
  ?clapton a dbpedia:Artist ;
    dbpedia:associatedWork [ dbpedia:title ""Slowhand at 70 – Live at the Royal Albert Hall"" ] .
  ?coleman a dbpedia:Musician;
    dbpedia:musicalArtist ?musicalArtistOfColeman .
  ?clapton rdfs:seeAlso ?artistInfo .
  ?artistInfo dbpedia:associatedPerson ?clapton ;
    dbpedia:profession ?professional .
  ?musicalArtistOfColeman rdfs:seeAlso ?colemanInfo .
  ?colemanInfo a dbpedia:Person;
    dbpedia:associatedWork [ dbpedia:title ""Slowhand at 70 – Live at the Royal Albert Hall"" ] .
}
```",6,10,7,3,2,3,3,71,0,0,46,0,0.0,0
281,24,test,"Give me the awardee of the award of Alfred Warden and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee ?conflict
WHERE {
  ?awardee a dbpedia:Person;
    dbpedia:awardAlfredWardenAward ?award .
  ?award rdfs:label ""Alfred Warden Award"" .
  
  ?awardee a dbpedia:Person;
    dbpedia:militaryConflict ?conflict .
  ?conflict rdfs:label ""Battle of Arras"" .
  
  ?awardee foaf:name ""Lawrence Moore Cosgrave"" .
}",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
579,19,test,"Give me the native of the residence, that is English and a settlement, of Alan Clyne and person born as the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace ?officeHolderName
WHERE {
  ?residence a dbpedia:Residence;
    dbpedia:locatedIn ?location .
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace ;
    foaf:name ?officeHolderName ;
    dbpedia:officeHolderOfOffice ?officeHolderOffice .
  ?officeHolderOffice a dbpedia:OfficeHolderOffice .
  ?residence dbpedia:locatedIn ?location .
  ?person dbpedia:residence ?residence .
  FILTER (lang(?officeHolderName) = ""en"")  # Ensuring the office holder is English
}
```",5,8,6,3,2,3,2,20,0,0,18,0,0.0,0
442,9,test,"Give me the resting place of the actor of This Side of Heaven and resting place of the work of Roosevelt, Theodore.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/This_Side_of_Heaven> <http://dbpedia.org/ontology/starring> ?v3 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/author> ""Roosevelt, Theodore""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actorRestingPlace ?rooseveltRestingPlace
WHERE {
  ?actor dbpedia:role [ dbpedia:film ""This Side of Heaven"" ].
  ?actor a dbpedia:Person; dbpedia:deathPlace ?actorRestingPlace .
  ?roosevelt a dbpedia:Person; dbpedia:name ""Theodore Roosevelt""; dbpedia:deathPlace ?rooseveltRestingPlace .
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
41,24,test,"Give me the party of the person born as David Declan Costello and party of the work, that is an office holder, of yes.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","To extract this information from DBpedia, we can use the following SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?partyOfCostello ?officeHolderWork
WHERE {
  ?person a dbpedia:Person;
    foaf:name ""David Declan Costello"" .
  ?person dbpedia:politicalPartyMemberOf ?partyOfCostello .
  ?work a dbpedia:OfficeHolder; 
    dbpedia:officeHolder ?officeHolderWork .
  ?person rdfs:seeAlso ?work .
}
```

This query does the following:
- It finds all `Person` resources with the name ""David Declan Costello"".
- It retrieves the `politicalPartyMemberOf` property of this person to determine their party affiliation.
- It finds all `OfficeHolder` resources and retrieves the `officeHolder` property to identify the office holder of the work associated with David Declan Costello.",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
465,61,test,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?charles_orlando a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:spouse ?mary_of_hungary .
  ?child a dbpedia:Royalty .
  ?successor a dbpedia:Person;
    dbpedia:succeeds ?child .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
166,18,test,"Give me the entity in the territory administered, that is a country, from Madrid and resting place of the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"SELECT ?country ?restingPlace
WHERE {
  ?event a dbpedia:SocietalEvent;
    dbpedia:participatedInMilitaryConflict ?conflict .
  ?conflict a dbpedia:MilitaryConflict;
    dbpedia:startYear 1936;
    dbpedia:endYear 1939;
    dbpedia:involvedParty foaf:organization ?nationalistForces .
  ?event dbpedia:location ?location .
  ?location a dbpedia:GeographicalEntity;
    dbpedia:country ?country .
  ?nationalistForces a dbpedia:MilitaryOrganization;
    dbpedia:restingPlace ?restingPlace .
}",5,9,6,3,2,3,2,20,0,0,4,0,0.0,0
582,61,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/father> ?v5 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?teamNickname
WHERE {
  ?person a dbpedia:Person;
    dbpedia:nickName ?teamNickname .
  ?person dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Kazuaki Nagasawa"" .
  ?player a dbpedia:SportPerson;
    dbpedia:associatedTeam ?team .
  ?player dbpedia:father ?parent .
  ?player rdfs:label ""Hajime Moriyasu""@ja .
}
```

This SPARQL query will find the nickname of the team associated with Hajime Moriyasu by linking him to his father Kazuaki Nagasawa and then finding the team associated with Hajime Moriyasu.",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
216,56,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach of Croatia national under-21 football team and player in Mario Ivanković.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?manager
WHERE {
  ?pavelVezhinov a dbpedia:Person;
    dbpedia:deathPlace ?deathLocation .
  ?manager a dbpedia:SportsManager, dbpedia:SoccerManager, dbpedia:SoccerPlayer;
    foaf:playerFor ?team .
  ?team a dbpedia:SportsTeam;
    dbpedia:sport ""Football"";
    dbpedia:nationalTeam ""Croatia national under-21 football team"" .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
433,60,test,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . },"To extract this information from DBpedia, we can use the following SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?writerProfession
WHERE {
  ?album a dbpedia:Album;
    dbpedia:artist ?artist .
  ?artist a dbpedia:MusicArtist .
  ?writer dbpedia:write ?album ;
    rdfs:label ?writerLabel .
  ?writerLabel a dbpedia:Occupation .
}
```

This query will find the occupation of the writer of the album, which should match our criteria of being a musical artist and an artist.",6,8,7,3,2,3,3,71,0,0,16,0,0.0,0
715,71,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v7 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v8 <http://dbpedia.org/ontology/leader> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/property/office> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","SELECT ?commander_in_military_conflict ?office_holder
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace <http://dbpedia.org/ontology/Location>Morocco .
  ?person a dbpedia:OfficeHolder ;
    dbpedia:office ?office .
  ?office a dbpedia:GovernmentOffice ;
    dbpedia:officeType ""Mayor"" .
  ?person a dbpedia:Person;
    dbpedia:deathPlace <http://dbpedia.org/ontology/Location>Madrid .
  OPTIONAL {
    ?person a dbpedia:MilitaryConflict ;
      dbpedia:commanderIn ?commander_in_military_conflict .
  }
}",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
433,71,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://dbpedia.org/property/occupation> ?v8 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v8 . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlaceOfPaul ?deathPlaceOfPaul, ?birthPlaceOfArtist1 ?deathPlaceOfArtist1, ?birthPlaceOfArtist2 ?deathPlaceOfArtist2
WHERE {
  ?paulChambers a dbpedia:Person;
    dbpedia:birthPlace ?birthPlaceOfPaul .
  ?paulChambers dbpedia:role [ rdf:type dbpedia:MusicianRole ] ;
    dbpedia:associatedWith ?associatedArtist1 .

  ?associatedArtist1 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlaceOfArtist1 .
    rdfs:label [ substring(???) 'Paul Chambers' ] .

  ?associatedArtist1 dbpedia:associatedWith ?associatedArtist2 .

  ?associatedArtist2 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlaceOfArtist2 .
    rdfs:label [ substring(???) 'Ornette Coleman' ] .

  ?associatedArtist2 a dbpedia:MusicianRole;
    dbpedia:associatedWith ?paulChambers .
}
```",9,15,10,3,3,3,3,71,0,0,4,0,0.0,0
987,58,test,"Give me the birth place of Dado Polumenta and birth place of the actor of All for Free and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v0 <http://dbpedia.org/property/timeZone> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find Dado Polumenta's birthplace
SELECT ?birthPlace WHERE {
  dbpedia:Danish Polumenta a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
}

# Step 2: Find the actor of ""All for Free""
SELECT ?actor WHERE {
  dbpedia:All for Free a dbpedia:Film;
    dbpedia:actor ?actor .
}

# Step 3: Determine the country of Canicosa de la Sierra
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
SELECT ?country WHERE {
  geo:Canicosa de la Sierra a geo:Location;
    geo:country ?country .
}

# Step 4: Combine the results from steps 1 and 3
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
CONSTRUCT {
  ?actor dbpedia:birthPlace ?birthPlace
} WHERE {
  ?actor a dbpedia:Person;
    dbpedia:role dbpedia:ActorOf ?film .
  ?film a dbpedia:Film;
    dbpedia:title ""All for Free"" .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  ?country rdfs:label ?countryLabel .
  ?birthPlace geo:locatedIn ?location .
  ?location a geo:Location; geo:country ?country .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
606,19,test,"Give me the figure known as the nickname of DeKalb, Illinois and birthplace of the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?v2 . ?v0 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?nickname
WHERE {
  ?university a dbpedia:University;
    dbpedia:name ""University of Pennsylvania""@en .
  ?alumnus a dbpedia:Person;
    dbpedia:alumniOf ?university .
  ?alumnus dbpedia:birthPlace ?birthPlace .
  ?university dbpedia:nickname ?nickname .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
507,58,test,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and spouse of Anne V. Coates and professional in the profession of the person born on 1966-02-18.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/director> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?director
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:mainActor Beryl_Reid .
  ?movie dbpedia:directedBy ?director .
  ?director a foaf:Person;
    foaf:sparqlEndpoint <http://example.com/director-endpoint> ;  # Placeholder endpoint
    foaf:spouse Anne_V_Coates .
  ?director dbpedia:birthDate ""1966-02-18"" . 
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
417,58,test,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and child of the father of Frederick IX of Denmark and spouse of Princess Caroline-Mathilde of Denmark.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?parent a dbpedia:Royalty;
    dbpedia:hasChild ?child .
  ?grandparent a dbpedia:Royalty;
    dbpedia:hasSpouse ?spouse .
  ?child a dbpedia:Person;
    dbpedia:father ?grandparent .
  ?child dbpedia:mother ?spouse
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
865,57,test,"Give me the native of British Raj and father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v4 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?politicianChildsFather ?birthPlace ?deathPlace
WHERE {
  ?spouse dbpedia:spouseOf ?husband .
  ?husband a dbpedia:Person; rdfs:label ""Abu Ahmad Abdul Hafiz""@en .
  ?wife dbpedia:hasSpouse ?spouse .
  ?child a dbpedia:Person; dbpedia:parent ?couple .
  ?couple a dbpedia:Family; dbpedia:members ?child .
  ?child a dbpedia:Person; rdfs:label ""Syeda Shahar Banu""@en; dbpedia:hasSpouse ?wife .
  SOME ?politChild OF ?child WHERE { ?politChild a dbpedia:Politician } .
  ?politChild a dbpedia:Person; dbpedia:birthPlace ?birthPlace .
  ?politChild a dbpedia:Person; dbpedia:deathPlace ?deathPlace .
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
933,71,test,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthName
WHERE {
  ?person a dbpedia:MusicalArtist;
    dbpedia:birthDate ""1947-04-21"";
    dbpedia:band dbpedia:The Ramong Sound .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
826,58,test,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?result <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?predecessorParent
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child ;
    dbpedia:precededBy ?predecessor .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
976,67,test,"Give me the office of the person born as the birth name of Naci Bostancı and office of Mustafa Şentop and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. }","SELECT ?birthName ?office_Bostanci WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Naci Bostancı"";
    dbpedia:office ?office_Bostanci .
}

SELECT ?office_Sentop WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Mustafa Şentop"";
    dbpedia:office ?office_Sentop .
}

SELECT ?mayorOffice WHERE {
  ?organization a dbpedia:Organization;
    dbpedia:name ""Millet İttifakı""@en;
    dbpedia:hasMayor ?mayor .
  ?mayor a dbpedia:Person;
    dbpedia:office ?mayorOffice .
}",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
445,59,test,"Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","{ 
  prefix dbpedia: <http://dbpedia.org/ontology/> 

  select ?deathPlace
  where {
    ?person a dbpedia:Person;
      dbpedia:birthPlace ?birthPlace .
    ?person a dbpedia:Person;
      dbpedia:deathPlace ?deathPlace .
    ?person rdfs:label ""AK Abdul Momen""@en .
    ?person dbpedia:role ""Hero of Bangladesh Liberation War""@en .
    ?birthPlace geo:location [ geo:coordinates ?coords ] .
    ?deathPlace geo:location [ geo:coordinates ?deathCoords ] .
  }
}",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
888,18,test,"Give me the awardee of the award of Oleksandr Syrskyi and commander in the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee
WHERE {
  ?awardee a dbpedia:Person;
    dbpedia:award ""Oleksandr Syrskyi Award"";
    dbpedia:militaryRole dbpedia:MilitaryCommander ;
    dbpedia:conflict dbpedia:War_in_Donbas_2014–2022 .
}",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
443,24,test,"Give me the birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and birthplace of the work of yes.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/author> ""yes""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace1 ?deathPlace1
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace1 .
  ?work a dbpedia:MusicAlbum;
    dbpedia:releaseDate ""1968-01-01"";
    dbpedia:title ""Yes""@en;
    dbpedia:artist ?artist .
  ?artist a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen""@en .
  ?birthPlace1 geo:location ?location .
  ?work dbpedia:albumByArtist ?artist .
}",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
341,9,test,"Give me the band member of the awardee of List of awards and nominations received by Beyoncé and writer of the work, that is a work and an album, of Serrano.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Beyoncé> . ?v3 <http://dbpedia.org/property/writer> ""Serrano""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?bandMember
WHERE {
  ?album a dbpedia:Album;
    dbpedia:artist ?artist .
  ?artist ns:name ""Beyoncé Knowles-Carter"" .
  ?album rdf:about <http://dbpedia.org/page/Serrano_(album)> .
  ?album dbpedia:producer ?producer .
  ?producer ns:name ?bandMember .
}",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
465,64,test,"Give me the spouse of Archduchess Barbara of Austria and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse
WHERE {
  ?archduchess a dbpedia:Person;
    dbpedia:birthPlace ""Austria"";
    dbpedia:spouse ?spouse .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Ercole II d'Este, Duke of Ferrara"";
    dbpedia:offspring ?child .
  ?child a dbpedia:Person;
    dbpedia:successor ?successor .
  ?successor a dbpedia:Person;
    dbpedia:monarchyType ""Indian Royalty (British Raj)"";
    rdfs:label ""Royalty""
  .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
926,62,test,Give me the father of the father of the spouse of Neşerek Kadın and child of Ahmed III and successor of the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify Neşerek Kadın's spouse
SELECT ?spouse WHERE {
  dbpedia:Neşerek_Kadın a dbpedia:Person ;
    dbpedia:sibling [ dbpedia:hasSpouse ?spouse ]
}

# Step 2: Determine the father of Neşerek Kadın's spouse
SELECT ?fatherSpouse WHERE {
  ?spouse a dbpedia:Person ;
    dbpedia:parent ?fatherSpouse
}

# Step 3: Identify Ahmed III as the father
PREFIX dbpedia-fam: <http://dbpedia.org/ontology/familyRelation/>
SELECT ?father WHERE {
  ?fatherSpouse dbpedia-fam:hasParent ?father
  AND ?father a dbpedia:Person ;
    rdfs:label ""Ahmed III""
}

# Step 4: Find out who succeeded Ahmed III
PREFIX dbpedia-fam2: <http://dbpedia.org/ontology/familyRelation/v2/>
SELECT ?successor WHERE {
  ?father a dbpedia:Person ;
    dbpedia-fam2:succeededBy ?successor
}

# Step 5: Determine the child of the spouse of Şermi Kadın
PREFIX dbpedia-rel: <http://dbpedia.org/ontology/relation/>
SELECT ?child WHERE {
  ?spouse a dbpedia:Person ;
    dbpedia-rel:hasSpouse ?spouseOfShermiKadın
  ?child a dbpedia:Person ;
    dbpedia-rel:parent ?spouseOfShermiKadın
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
83,8,test,"Give me the player in Greg Boehme and player in the person born, that is an athlete, on 1991-11-19.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Greg_Boehme> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1991-11-19""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?playerInBoehme ?birthDateOfPerson
WHERE {
  ?boehme a dbpedia:Person;
    dbpedia:birthPlace ?birthPlaceBoehme .
  ?person a dbpedia:Person;
    dbpedia:birthdate ?birthDateOfPerson .
  FILTER (STR(?birthDateOfPerson) = ""1991-11-19"")
  AND (?person = ?boehme)
}",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
102,19,test,"Give me the native of the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury and manager of the player in Ellie Roebuck.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"SELECT ?managerName
WHERE {
  ?athlete a dbpedia:Athlete;
    dbpedia:birthPlace dbpedia:Dewsbury .
  ?athlete dbpedia:managedPerson ?player .
  ?player a dbpedia:Person;
    dbpedia:name ""Ellie Roebuck"" .
}",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
273,19,test,Give me the parent of the alumnus of the reference to Università degli Studi di Torino and spouse of the child of Giovanni Agnelli.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent
WHERE {
  ?alumnus a dbpedia:Person;
    dbpedia:alumniOf dbpedia:Università_dgli_Studi_di_Torino .
  ?spouse a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?alumnus ns:spouses/ns:siblings ?spouse .
}",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
874,18,test,"Give me the band of the band member of The Jones Gang and band of the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band1 ?band2
WHERE {
  ?work a dbpedia:MusicAlbum;
    dbpedia:artist ?artist .
  ?artist a dbpedia:Person;
    dbpedia:name ""Horace Andy"" .
  ?band1 a dbpedia:Band;
    dbpedia:members ?member1, ?member2, ... .
  ?member1 a dbpedia:Artist;
    dbpedia:name ""Member Name 1"" .
  ?member2 a dbpedia:Artist;
    dbpedia:name ""Member Name 2"" .
  ?band2 a dbpedia:Band;
    dbpedia:members ?member1, ?member2, ... .
}
```

This query will find the band (The Jones Gang) and any other bands that include members of The Jones Gang who are also artists. Since we are focusing on Horace Andy's work specifically, we assume he was a significant member of The Jones Gang.",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
456,59,test,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","Given that we are looking for the spouse of Ross Newton who played Lamont Cranston, and assuming we have access to a database with such information, the SPARQL query might look like this:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:role dbpedia:The_Shadow ;
    foaf:name ""Ross Newton"" .
  ?actor foaf:sparqlEndpoint ?endpoint .
  SERVICE ?endpoint {
    ?actor rdfs:label ?actorLabel .
    ?actor foaf:spouse ?spouse .
  }
}
```

This query uses the `dbpedia` namespace for the roles and `foaf` namespace for personal relationships. It looks for a person named Ross Newton who played The Shadow, then it tries to find the spouse of that person using the `foaf:sparqlEndpoint` property to potentially retrieve more detailed information.",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
329,28,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist) and birthplace of the author of The Tailor and Ansty.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v5 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v5 . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?birthPlaceCountry ?organization WHERE { ?person a dbpedia:Person; dbpedia:birthPlace ?birthPlace . ?birthPlace rdfs:label ?birthPlaceCountry . ?person2 a dbpedia:Person; dbpedia:birthPlace ?birthPlaceOrganization . ?birthPlaceOrganization a dbpedia:Organization . ?birthPlaceCountry rdfs:label ?birthPlaceCountry . FILTER (lang(?birthPlaceCountry) = 'en') },6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
892,67,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and landmark at elevation of the award of the member of E-girls and entity in Italy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v1 <http://dbpedia.org/property/awards> ?v5 . },"SELECT ?birthPlace ?deathPlace ?elevation
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Andrea Cozzolino"" .
  ?party a dbpedia:PoliticalParty ;
            dbpedia:name ""Five Star Movement"" .
  ?region a dbpedia:AdministrativeDivision ;
            dbpedia:name ""Rome"" .
  ?landmark a dbpedia:Landmark ;
             dbpedia:locatedIn ?region ;
             dbpedia:elevation ?elevation .
  ?award a dbpedia:Award .
  ?landmark dbpedia:hasMember ?person;
             dbpedia:awardedWith ?award .
}",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
582,68,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as the nickname of Japan national football team.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/property/residence> ?v4 . ?v5 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father ?fatherResidence
WHERE {
  ?father a dbpedia:Person;
    dbpedia:role dbpedia:SoccerManager ;
    dbpedia:role dbpedia:SportsManager ;
    dbpedia:parent ?child .
  ?child a dbpedia:Person;
    dbpedia:name ""Hirotaka Sugawara"" ;
    dbpedia:role dbpedia:Scientist ;
    dbpedia:nickname ""Japan national football team"" .
  ?father foaf:mother ?grandmother .
  ?grandmother a dbpedia:Person;
    dbpedia:name ?grandmotherName .
  ?child foaf:parent ?grandmother
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
445,68,test,"Give me the entity in the award of George H. Cameron and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and death place of the awardee of the establishment of 1820-03-10.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/location> ?v4 . ?v5 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find the award given by George H. Cameron
SELECT ?award WHERE {
  ?awardee dbpedia:P31 dbpedia:Received_Award ; dbpedia:recipient ?award .
  ?awardee a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen""@en;
    dbpedia:birthPlace ""British Raj""@en;
    dbpedia:deathPlace ?deathPlace .
}

# Step 2: Find the athlete from Great Britain who received this award
SELECT ?award ?recipient WHERE {
  ?recipient a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen""@en;
    dbpedia:nationality ""Great Britain""@en;
    dbpedia:birthPlace ""British Raj""@en;
    dbpedia:deathPlace ?deathPlace .
  ?award rdf:type dbpedia:Sports_Award ;
    dbpedia:name ?award_name .
}

# Step 3: Combine results to get the award details and the athlete's information
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
CONSTRUCT {
  ?awardee a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen""@en;
    dbpedia:birthPlace ""British Raj""@en;
    dbpedia:deathPlace ?deathPlace ;
    dbpedia:recipient ?award .
  ?award a dbpedia:Sports_Award ;
    dbpedia:name ?award_name .
}
WHERE {
  ?recipient a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen""@en;
    dbpedia:nationality ""Great Britain""@en;
    dbpedia:birthPlace ""British Raj""@en;
    dbpedia:deathPlace ?deathPlace .
  ?award rdf:type dbpedia:Sports_Award ;
    dbpedia:name ?award_name .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
573,66,test,"Give me the person decedent at the administration, that is a region, of Charlie Baker and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parentName ?decedentRegion ?decedentSettlement
WHERE {
  ?author a dbpedia:Person;
    dbpedia:hasParent ?parentName .
  ?author dbpedia:authorOf <http://dbpedia.org/page/John_Quincy_Admans_Writings> .
  ?politicianOfficeHolder a dbpedia:OfficeHolder;
    dbpedia:isPolitician true;
    dbpedia:office ?politicianOffice .
  ?author dbpedia:parentOf ?politicianOfficeHolder .
  ?decedentRegion a dbpedia:AdministrativeTerritory;
    dbpedia:hasAdministrate ?charlieBaker .
  ?decedentSettlement a dbpedia:Settlement;
    dbpedia:residenceOf ?williamJPhelan
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
773,57,test,"Give me the spouse of Louis the German and parent of the child, that is a royalty, of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"To extract this information from DBpedia, we can use the following SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse ?childName ?successorName ?parentOfSuccessor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Germany"";
    dbpedia:deathPlace ""East Francia"";
    dbpedia:father ""Louis the Pious"";
    dbpedia:mother ?wife .
  ?child a dbpedia:Person;
    dbpedia:parent ?person;
    dbpedia:successor ?successor .
  ?successor a dbpedia:Person;
    dbpedia:birthPlace ""East Francia"";
    dbpedia:deathPlace ""East Francia"" .
}
```

This query does the following:
- Identifies Louis the German's spouse (`?wife`).
- Finds children (`?child`) of Louis the German.
- Links each child to their successor (`?successor`).
- Ensures that the successor is also a royalty and traces back to the parents (`?parentOfSuccessor`).",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
373,8,test,Give me the professional in the profession of Beto Guedes and writer of 2300 Jackson Street (song).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/2300_Jackson_Street_(song)> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Beto_Guedes> <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia:Artist;
    dbpedia:hasWork [ rdf:type dbpedia:MusicSingle ;
                    dbpedia:title ""2300 Jackson Street"" ] .
  ?person rdfs:label ""Beto Guedes""@en .
}",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
554,19,test,"Give me the leader of the administration of Francisco da Costa Gomes and leader of the birth place of the band, that is an artist, of Rita Redshoes.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/leader> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?president ?birthPlaceAdmin
WHERE {
  ?president a dbpedia:Person;
    dbpedia:name ""Francisco da Costa Gomes""@pt .
  ?president dbpedia:presidencyStarts ""1976-07-09T00:00:00""^^xsd:date .
  ?president dbpedia:endOfTerm ""1980-03-06T00:00:00""^^xsd:date .
  ?birthPlaceAdmin a dbpedia:AdministrativeTerritory;
    dbpedia:name ""Birth Place of Rita Redshoes""@en .
  ?artist a dbpedia:Artist;
    dbpedia:name ""Rita Redshoes""@en .
  ?artist dbpedia:birthPlace ?birthPlace .
  ?birthPlaceAdmin dbpedia:contains ?birthPlace .
}",5,6,6,3,2,3,2,20,0,0,3,0,0.0,0
216,68,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://dbpedia.org/ontology/coach> ?v4 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/coach> ?v7 . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace ?managedClub
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Džemal Berberović""@en;
    dbpedia:birthDate ""1983-12-20""^^xsd:date;
    dbpedia:role ""player, coach""@en;
    dbpedia:club [ a dbpedia:Club; rdfs:label ?managedClub ] .
  ?managedClub a dbpedia:FootballClub .
  FILTER (lang(?managedClub) = ""en"") .
}
```",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
36,24,test,Give me the person born in the birth year of Deanne Bray and person born as the birth name of Ayo Makun.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthYear ?birthYear .
  ?person dbpedia:birthName ?birthName .
  FILTER (STR(?birthYear) = ""Deanne Bray's birth year"") .
  FILTER (STR(?birthName) = ""Ayo Makun's birth name"") .
}",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
826,62,test,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of the child of the father of Anna Magdalena Appel and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person;
    dbpedia:spouse ?spouse .
  ?child a dbpedia:Royalty ;
    dbpedia:child ?descendant .
  ?descendant a dbpedia:Person;
    dbpedia:succeededBy ?successor .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
129,24,test,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and associated musical artist of the person born as Tahj Malik Chandler.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musicalArtist1 ?musicalArtist2
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:birthName ""Tahj Malik Chandler"" .
  ?actor dbpedia:associatedWith ?musicalArtist1 .
  ?actor dbpedia:associatedWith ?musicalArtist2 .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
865,59,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""AK Abdul Momen""@en; # Assuming this is the label for AK Abdul Momen in DBpedia
    dbpedia:spouse ?wife .
  ?wife rdfs:label ""Syeda Shahar Banu""@en; # Assuming this is the label for Syeda Shahar Banu in DBpedia
    dbpedia:child ?politicianChild .
  ?politicianChild a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
445,71,test,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and death place of the awardee of the establishment of 1820-03-10 and entity in the award of the commander in Battle of Saint-Mihiel.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v7 <http://dbpedia.org/property/awards> ?v8 . ?v5 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/location> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country_of_residence ?commander_name
WHERE {
  ?athlete a dbpedia:Athlete;
    dbpedia:nationality dbpedia:United_Kingdom .
  ?awardedEvent a dbpedia:Event;
    dbpedia:establishmentDate ""1820-03-10"" .
  ?awardee a dbpedia:Person;
    dbpedia:award ?awardedEvent ;
    dbpedia:roleInBattle ""Commander"" .
  ?commander a dbpedia:Person;
    dbpedia:name ?commander_name ;
    dbpedia:countryOfResidence ?country_of_residence .
  ?awardee ns:inRole [ dbpedia:partOf ?battle ].
  ?battle a dbpedia:Battle;
    dbpedia:name ""Battle of Saint-Mihiel"" .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
965,63,test,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and parent of the person born, that is a noble, as Prince George of Battenberg and spouse of the spouse of the parent of Louise Mountbatten.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . }","SELECT ?parentOfLouiseSpouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""United Kingdom"";
    dbpedia:spouse ?spouseOfParent;
    dbpedia:parent ?parentOfLouise .
  ?spouseOfParent a dbpedia:Person;
    dbpedia:spouse ?spouse .
  ?parentOfLouise a dbpedia:Person;
    rdfs:label ""Alexander Mountbatten, 1st Marquess of Milford Haven""@en.
  ?parentOfLouise a dbpedia:Person;
    rdfs:label ""Princess Victoria of Hesse and by Rhine""@en.
}",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
606,18,test,"Give me the figure known as the nickname of the figure known, that is a settlement, as Barb City and birthplace of the alumnus of University of Pennsylvania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . ?v1 <http://dbpedia.org/property/nickname> ""Barb City""@en . ?v1 <http://dbpedia.org/property/nickname> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nickname 
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace dbpedia:Barb_City .
  ?person foaf:alumniOf dbpedia:University_of_Pennsylvania .
  ?person rdfs:label ?nickname .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
791,61,test,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v5 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find children of Emperor Go-Shirakawa who are both royalty and office holders.
SELECT ?child WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent dbpedia:Go-Shirakawa .
  ?child dbpedia:isRoyalty true .
  ?child dbpedia:officeHolder true
}

# Step 2: Find their children who are both royalty and office holders.
SELECT ?grandchild WHERE {
  ?grandchild a dbpedia:Person;
    dbpedia:parent ?child .
  ?grandchild a dbpedia:Person;
    dbpedia:isRoyalty true .
  ?grandchild dbpedia:officeHolder true
}

# Step 3: From the grandchildren found in step 2, find the one who is the child of the specific child identified in step 1.
# This requires additional information about the lineage which might not be directly queryable in a single sparql query without more specific identifiers or relations.

# Assuming we have already identified the specific child from step 1, let's denote it as ?specificChild
# We need to find the grandchildren of ?specificChild

SELECT ?grandchild WHERE {
  ?grandchild a dbpedia:Person;
    dbpedia:parent ?specificChild .
  ?grandchild a dbpedia:Person;
    dbpedia:isRoyalty true .
  ?grandchild dbpedia:officeHolder true
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
987,61,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v0 <http://dbpedia.org/property/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?v4 . },"Given the complexity and specificity of the query, we need to break it down into parts:

1. **Country of Canicosa de la Sierra**:
   ```sparql
   SELECT ?country WHERE { ?location geo:locatedIn ?country . FILTER (lang(?location) = ""es"" ) }
   ```

2. **Time Zone of Canicosa de la Sierra**:
   This requires a more detailed geographical database or time zone information, which might not be directly available in DBpedia. We'll assume the time zone based on its location.

3. **Sports Event in Canicosa de la Sierra**:
   ```sparql
   SELECT ?event WHERE {
     ?event a dbpedia:SportEvent;
       geo:locatedIn ?location . FILTER (lang(?location) = ""es"" ) }
   }
   ```

4. **Film with Emir Hadžihafizbegović**:
   ```sparql
   SELECT ?film WHERE {
     ?actor a dbpedia:Person;
       foaf:role ?role .
     ?film a dbpedia:Film;
       starring ?actor . 
     FILTER (regex(str(?role), ""Emir Hadžihafizbegović"")) }
   }
   ```

5. **Birthplace of the Actor**:
   ```sparql
   SELECT ?birthPlace WHERE {
     ?actor a dbpedia:Person;
       foaf:birthPlace ?birthPlace . }
   }
   ```

Combining these queries to get the final answer would require executing them in sequence and merging the results. However, due to the complexity and the need for external data (like precise time zones), this might not be fully achievable with a single SPARQL query.",6,9,7,3,2,3,3,71,0,0,18,0,0.0,0
5,20,test,"Give me the birthplace of the person born, that is a politician, as the award of Renata Adler and entity in the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v5 . <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?politicianBirthPlace
WHERE {
  ?politician a dbpedia:Person;
    dbpedia:awardWon dbpedia:RenataAdler_Award .
  ?band a dbpedia:MusicGroup;
    dbpedia:awardReceived dbpedia:Rubén_Colón_Tarrats_Award .
  ?politician dbpedia:birthPlace ?politicianBirthPlace .
}",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
445,65,test,"Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the residence, that is a country, of Anna Sharkey and entity in the award of George H. Cameron.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v4 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?deathPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen""@en;
    dbpedia:birthDate ""1820-03-10""^^xsd:date.
  ?person dbpedia:deathPlace ?deathPlace .
}
```

For Anna Sharkey:
```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?deathPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Anna Sharkey""@en;
    dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
}
```

For George H. Cameron:
```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?deathPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""George H. Cameron""@en;
    dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
826,60,test,"Give me the spouse of the child of the father of Anna Magdalena Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . }","SELECT ?spouseOfFather ?predecessorParent
WHERE {
  ?father a dbpedia:Person; dbpedia:name ""Johann Georg II von Hohenzollern"" .
  ?wife a dbpedia:Person; dbpedia:sibling [ dbpedia:hasSibling ?child ] .
  ?child a dbpedia:Person; dbpedia:name ""Anna Magdalena Appel"" .
  ?parent a dbpedia:Person; dbpedia:name ""Frederick VI, Landgrave of Hesse-Kassel"" .
  ?predecessorParent a dbpedia:Person; dbpedia:name ""William VIII of Hesse"" .
  ?father dbpedia:spouse ?wife .
  ?parent dbpedia:parent ?predecessorParent .
}",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
926,68,test,"Give me the child of the father, that is a royalty, of Mustafa III and successor of the child of the spouse of Şermi Kadın and father of the father of the spouse of Neşerek Kadın.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v6 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child ?successor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father Mustafa III .
  ?person a dbpedia:Monarch; 
    dbpedia:title ""Sultan of the Ottoman Empire"";
    dbpedia:succeededBy ?successor .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
773,71,test,"Give me the parent of the successor of the child, that is a royalty, of Louis the Pious and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat).",SELECT ?result WHERE { <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v7 . ?v8 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/successor> ?v5 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v4 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify Louis the Pious's children who were royals
SELECT ?child WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?p .
  ?p a dbpedia:Monarch; foaf:name ""Louis the Pious"" .
}

# Step 2: Determine the successor of each royal child
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?child ?successor WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?p .
  ?p a dbpedia:Monarch; foaf:name ""Louis the Pious"" .
  OPTIONAL { ?child rdf:succesorOf ?successor . }
}

# Step 3: Find the parent of these successors (which would be Louis the Pious himself)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
WHERE {
  ?successor a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Monarch; foaf:name ""Louis the Pious"" .
}

# Step 4: Identify Carloman of Bavaria and his relevant attributes
SELECT ?carloman WHERE {
  ?carloman a dbpedia:Person;
    dbpedia:birthPlace ""Bavaria"";
    dbpedia:deathPlace ""Ingelheim, Rhine"";
    dbpedia:parent ?parent .
  ?parent a dbpedia:Monarch; foaf:name ""Louis the Pious"" .
}

# Step 5: Identify the spouse of Louis the Pious
SELECT ?spouse WHERE {
  ?spouse a dbpedia:Person;
    dbpedia:spouseOf ?husband .
  ?husband a dbpedia:Monarch; foaf:name ""Louis the Pious"" .
}

# Step 6: Identify the parent of Bernard (son of Charles the Fat)
SELECT ?bernard WHERE {
  ?bernard a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Monarch; foaf:name ""Charles the Fat"" .
}

# Step 7: Combine all information to find the parent of the successor of the child that is a royalty of Louis the Pious
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?p . 
  ?p a dbpedia:Monarch; foaf:name ""Louis the Pious"" .
  ?successor rdf:succesorOf ?child .
  ?successor a dbpedia:Person;
    dbpedia:parent ?grandParent .
  ?grandParent a dbpedia:Monarch; foaf:name ""Louis the Pious"" .
  ?spouse a dbpedia:Person;
    dbpedia:spouseOf ?husband . 
  ?husband a dbpedia:Monarch; foaf:name ""Louis the Pious"" .
  ?bernard a dbpedia:Person;
    dbpedia:parent ?grandParentParent .
  ?grandParentParent a dbpedia:Monarch; foaf:name ""Charles the Fat"" .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
236,20,test,"Give me the party member of the administration of the reference, that is an office holder and a politician, to James Madison and party member of the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v4 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/party> ?v2 . ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?officeHolderName ?partyAdministrationName
WHERE {
  ?officeHolder a dbpedia:OfficeHolder;
    dbpedia:isPolitician yes .
  ?officeHolder dbpedia:belongsToParty ?party .
  ?party rdfs:label ?partyName .

  ?person a dbpedia:Person;
    dbpedia:deathPlace ""Quincy, Massachusetts"" .
  ?person dbpedia:isOfficeHolder yes .
  ?person dbpedia:isPolitician yes .

  ?officeHolder ns:memberOf ?partyAdministration .
  ?partyAdministration rdfs:label ?partyName .
}

# Filter for the specific individuals
FILTER (str(?officeHolderName) = ""James Madison"" || str(?officeHolderName) = ""John Quincy Adams"")
```",6,11,7,3,2,3,2,20,0,0,19,0,0.0,0
417,61,test,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify the father of the leader of the Colony of Greenland
SELECT ?father WHERE {
  dbpedia:Greenland rdfs:label ""Colony of Greenland""@en;
    dbpedia:leader ?leader .
  ?leader a dbpedia:Person;
    dbpedia:father ?father .
}

# Step 2: Identify the parent of Alexandrine of Mecklenburg-Schwerin
SELECT ?parent WHERE {
  dbpedia:Alexandrine_of_Mecklenburg-Schwerin rdfs:label ""Alexandrine of Mecklenburg-Schwerin""@en;
    dbpedia:parent ?parent .
}

# Step 3: Find the child of the identified father who is also a royalty
SELECT ?child WHERE {
  ?child a dbpedia:Person;
    dbpedia:father ?father ;
    dbpedia:royalty true .
  FILTER (SUBJECT(?child) = ?father)
}

# Step 4: Find the grandchild of the identified parent who is also a royalty
SELECT ?grandchild WHERE {
  ?grandchild a dbpedia:Person;
    dbpedia:parent ?parent ;
    dbpedia:royalty true .
  FILTER (SUBJECT(?grandchild) = ?child)
}

# Combine results from steps 3 and 4
UNION {
  SELECT ?child
  WHERE {
    ?child a dbpedia:Person;
      dbpedia:father ?father ;
      dbpedia:royalty true .
  }
  INTERSECT
  {
    SELECT ?grandchild
    WHERE {
      ?grandchild a dbpedia:Person;
        dbpedia:parent ?parent ;
        dbpedia:royalty true .
    }
  }
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
976,62,test,"Give me the office of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v4 <http://dbpedia.org/ontology/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office_politician ?office_official ?party_name
WHERE {
  ?politician a dbpedia:OfficeHolder;
    dbpedia:office ?office_politician .
  ?politician a dbpedia:Person;
    foaf:name ""Naci Bostancı""@en .
  ?official a dbpedia:Office;
    dbpedia:officeHolder ?politician .
  ?official a dbpedia:Organization ;
    dbpedia:politicalParty ?party_name .
  ?party_name rdfs:label ""Millet İttifakı""@en .
  ?politician foaf:member ?official .
  ?official foaf:leader ?kemal_kili
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
645,57,test,"Give me the commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find Camilo Menéndez Tolosa's role in the Battle of Jarama
SELECT ?role_in_battle WHERE {
  ?person a dbpedia:Person;
    dbpedia:participatedInBattle dbpedia:Battle_of_Jarama ;
    dbpedia:role ?role_in_battle .
  ?person dbpedia:name ""Camilo Menéndez Tolosa"" .
}

# Step 2: Find the government office he led
SELECT ?office WHERE {
  ?person a dbpedia:Person;
    dbpedia:heldOffice ?office ;
    dbpedia:officeType dbpedia:Government_agency .
  ?person dbpedia:name ""Camilo Menéndez Tolosa"" .
}

# Step 3: Find the president during the Restoration period in Spain
SELECT ?president WHERE {
  ?event a dbpedia:Event;
    dbpedia:occurredInCountry Spain ;
    dbpedia:period dbpedia:Restoration_of_Spain .
  ?person a dbpedia:Person;
    dbpedia:name ""King Alfonso XIII of Spain"" ;
    dbpedia:role dbpedia:President_of_Spain .
  ?event dbpedia:name ""Spanish Restoration"" .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
892,65,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of the award of the member of E-girls and entity in the profession of Henri Crolla.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity
WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality ""Italian"" .
  ?person a dbo:MemberOfOrganization ;
    dbpedia:organization dbpedia:Democratic_Party_(Italy) .
  ?place a dbpedia:Region ;
    dbpedia:type ""Settlement""; # Settlement type
    dbpedia:isPartOf dbpedia:Italy; # It's in Italy
    dbpedia:hasElevation ""0"" @elevation; # Elevation of the award (assumed to be 0 for simplicity)
    dbo:hasLandmark ?landmark. # It's a landmark
  ?person dwc:birthPlace ?birthPlace.
  ?person a dbo:EgirlsMember ; # Member of E-girls
    dcterms:identifier ""Henri Crolla"" .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
83,20,test,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA and party of the governor of the commander, that is a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leaderParty> ?result . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . },{sparql_query: Cannot be determined due to conflicting requirements},6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
715,68,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander ?conflict ?mayor ?president
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Carlos Franco Iribarnegaray"" .
  ?person rdfs:label ?nameLabel .
  ?conflict a dbpedia:MilitaryConflict ;
    dbpedia:participatedIn ?person .
  ?commander a dbpedia:Person;
    dbpedia:role ""Commander of the Force"" . 
  ?mayor a dbpedia:OfficeHolder ;
    dbpedia:office ""Mayor"" ;
    dbpedia:politicalOffice ""President of Spain"" .
  ?president a dbpedia:Person;
    dbpedia:name ""José Antonio Primo de Rivera"" .
  ?person foaf:wasBornIn ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
839,64,test,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of Peter Schorowsky and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace ;
    dbpedia:role dbpedia:Musician ;
    dbpedia:associatedBand ?bandName .
}
```

This query will return the band names associated with individuals who are musicians and have a role of Musician.",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
582,57,test,"Give me the reference to Japan and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and figure known as the nickname of Japan national football team.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?childName ?fatherName
WHERE {
  ?child a dbpedia:Person;
    dbpedia:nickname ""Japan national football team"" .
  ?child dbpedia:parent ?parent.
  ?parent a dbpedia:Person;
    foaf:name ?fatherName;
    dbpedia:role dbpedia:SoccerManager .
  ?parent dbpedia:occupation dbpedia:Athlete .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
791,67,test,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of Taira no Tokuko and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v6 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?child a dbpedia:Person;
    dbpedia:birthParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:offices dbpedia:Emperor_of_Japan ;
    dbpedia:spouse dbpedia:Taira_no_Tokuko .
  ?child dbpedia:hasChild ?grandchild .
  ?grandchild a dbpedia:Person;
    dbpedia:officeHolder true;
    dbpedia:royalty true .
  ?child = dbpedia:Emperor_Antoku
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
933,62,test,"Give me the reference to the birth name of the professional in Musician and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and band of The Ramong Sound.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ?name .
  ?person a dbpedia:Artist ;
    dbpedia:musicalArtist .
  ?person rdfs:label ""AK Abdul Momen""@en .
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
573,69,test,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v7 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v7 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find Charlie Baker (assuming fictional character)
SELECT ?charlieBakerRealName WHERE {
  ?charlieBaker a dbpedia:Person;
    rdfs:label ""Charlie Baker""@en .
}

# Assuming we found a Charlie Baker, let's proceed with the next steps
# Step 2: Identify his parent(s) who are politicians and office holders
SELECT DISTINCT ?parent1 ?parent2 WHERE {
  ?charlieBaker dbpedia:hasParent ?parent1 .
  ?parent1 a dbpedia:OfficeHolder;
    rdfs:label ""Politician""@en .
  ?charlieBaker dbpedia:hasParent ?parent2 .
  ?parent2 a dbpedia:OfficeHolder;
    rdfs:label ""Politician""@en .
}

# Step 3: Determine the work of John Quincy Adams authored by these parents
SELECT ?johnQuincyAdamsWork WHERE {
  ?parent1 dbpedia:authoredDocument [dbpedia:subject ""John Quincy Adams""] .
}

# Step 4: Extract the residence place of William J. Phelan, a settlement
SELECT ?williamJPhelanResidence WHERE {
  ?williamJPhelan a dbpedia:Person;
    rdfs:label ""William J. Phelan""@en .
  ?williamJPhelan dbpedia:resides [dbpedia:isPartOf ""Settlement""] .
}
```",8,12,9,3,3,3,3,71,0,0,2,0,0.0,0
978,18,test,"Give me the band member of the professional, that is a musical artist and an artist, in the award of Michel Claparède and band member of the person born as Nicholas Bracegirdle.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandMember ?bandName WHERE {
  ?person dbpedia:birthName ""Nicholas Bracegirdle"" .
  ?person a dbpedia:Person; dbpedia:role ""Band Member"" .
  ?band a dbpedia:MusicGroup; dbpedia:award ""Michel Claparède"" .
  ?person rdfs:member ?band .
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
433,67,test,"Give me the associated musical artist of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.",SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?associated_artist_2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:musicalArtist ?musical_artist_1 .
  ?person1 dbpedia:associatedMusicalArtist ?associated_artist_1 .
  ?associated_artist_1 a dbpedia:Person;
    dbpedia:artistRole dbpedia:Musician .
  ?person2 a dbpedia:Person;
    dbpedia:musicalArtist ?musical_artist_2 .
  ?person2 dbpedia:associatedMusicalArtist ?associated_artist_2 .
  ?associated_artist_1 rdfs:label ""Paul Chambers"" .
  ?musical_artist_1 rdfs:label ""Ornette Coleman"" .
  ?associated_artist_2 rdfs:label ?result_label .
}",7,11,8,3,3,3,3,71,0,0,4,0,0.0,0
456,68,test,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and band of the band, that is a musical artist, of Dean Brody and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v5 <http://dbpedia.org/property/starring> ?v4 . ?v5 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actorSpouse
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:role dbpedia:The_Shadow_Character ;
    dbpedia:birthDate ?birthdate .
  ?actor dbpedia:spouse ?actorSpouse .
  FILTER ( ?actor = <Actor_who_played_Lamont_Cranston> )
}",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
826,71,test,"Give me the spouse of the child of the father of Anna Magdalena Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v7 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v7 <http://dbpedia.org/ontology/parent> ?v8 . ?result <http://dbpedia.org/ontology/successor> ?v8 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse ?successorPredecessor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:spouse ?spouse .
  ?person a dbpedia:Person;
    dbpedia:succeededBy ?successor .
  ?successor a dbpedia:MonarchyPosition ;
    dbpedia:monarch ?monarch .
  ?monarch a dbpedia:Person;
    dbpedia:title ""Grand Duke of Hesse"" .
  FILTER (regex(str(?successor), ""Johann VI"")) .
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:title ""Louis I"" .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
935,18,test,"Give me the death place of the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi and headquarter of the office of Sanaullah Khan Zehri.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://dbpedia.org/ontology/location> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?deathPlace ?officeHeadquarter
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedWith dbpedia:SitaraeImtiaz ;
    dbpedia:birthPlace ?birthPlace .
  ?person foaf:name ""Syed Sohail Hussain Naqvi"" .
  
  ?official a dbpedia:OfficeHolder;
    dbpedia:officeHeadquarter ?officeHeadquarter .
  ?official foaf:name ""Sanaullah Khan Zehri"" .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
773,67,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of the successor of the child, that is a royalty, of Louis the Pious and spouse of Louis the German.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://dbpedia.org/ontology/successor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?father .
  ?father a dbpedia:Person;
    dbpedia:title ""Carloman of Bavaria"" .
  ?child a dbpedia:Person;
    dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person;
    dbpedia:title ""Louis the Pious"" .
  ?child a dbpedia:Person;
    dbpedia:sibling [ a dbpedia:Person; dbpedia:title ""Lothair"" ] .
  ?child a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
926,58,test,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of Mahmud II and successor of the child of Ahmed III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?parent a dbpedia:Person; dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person; dbpedia:title ""Mustafa III"" .
  ?child a dbpedia:Person; dbpedia:parent ?parent .
  ?child a dbpedia:Royalty .
  ?child dbpedia:successor ?parent
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
826,66,test,"Give me the spouse of the child of Johann Heinrich Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v6 . }","SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Johann Heinrich Appel"" .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent ;
    dbpedia:spouse ?spouse .
  ?child a dbpedia:Person;
    dbpedia:name ""Child of Johann Heinrich Appel"" .
  ?child a dbpedia:Royalty .
  ?spouse a dbpedia:Person;
    dbpedia:name ?name .
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
353,8,test,"Give me the entity in the country of Moskovsky City District, Nizhny Novgorod and alma mater of Daniil Yegorov.","SELECT ?result WHERE { <http://dbpedia.org/resource/Moskovsky_City_District,_Nizhny_Novgorod> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Daniil_Yegorov> <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?educationPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Daniil Yegorov""@en .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:almaMater ?educationPlace .
  FILTER (lang(?name) = ""en"" )  # Ensuring the name is in English
}",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
826,65,test,"Give me the spouse of the child of Johann Heinrich Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of the parent of Prince Friedrich of Hesse and by Rhine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v6 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Step 1: Identify Johann Heinrich Appel's child (Prince Friedrich of Hesse and by Rhine)
SELECT ?child WHERE {
  ?child a dbpedia:Person;
    dbpedia:name ""Prince Friedrich of Hesse and by Rhine"" .
}

# Step 2: Determine the spouse of the child
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?spouse WHERE {
  ?child foaf:sparqlEndpoint ?sparqlEndpoint .
  SERVICE ?sparqlEndpoint {
    ?child a dbpedia:Person;
      dbpedia:hasSpouse ?spouse .
  }
}

# Step 3: Check if the spouse is a royalty
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?spouse WHERE {
  ?spouse a dbpedia:Person;
    dbpedia:isRoyalty ""true"" .
}

# Step 4: Identify the parent of Prince Friedrich (Louis I)
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent WHERE {
  ?child dbpedia:parent ?parent .
}

# Step 5: Find the predecessor of Louis I
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?predecessor WHERE {
  ?parent dbpedia:hasParent ?predecessor .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
158,19,test,"Give me the entity in the award, that is a country, of Adelbert Cronkhite and party of the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?country WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedByCountry ?country .
}
```",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
36,25,test,"Give me the person born in the birth year of Deanne Bray and person born as Ayo Makun and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor WHERE {
  ?actor a dbpedia:Person;
    dbpedia:birthYear ""1981""^^xsd:gYear;  # Assuming Deanne Bray's birth year is 1981
    dbpedia:actInRoleWith dbpedia:ActorRoleRelation[?role] .
  ?role rdf:type dbpedia:Film .
  ?actor dbpedia:fullName ""Ayo Makun""@en .
  FILTER (lang(?actor) = ""en"") .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
987,62,test,"Give me the entity in Montenegro and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Find Dado Polumenta's bands
SELECT ?band WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Dado Polumenta"";
    dbpedia:associatedBand ?band .
}

# Find Emir Hadžihafizbegović's films
SELECT ?film WHERE {
  ?actor a dbpedia:Person;
    dbpedia:name ""Emir Hadžihafizbegović"";
    dbpedia:roleInFilm ?film .
}

# Combine the two sets of information to find common bands
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
CONSTRUCT {
  ?band1 a dbpedia:Band;
    dbpedia:name ?bandName1 .
  ?band2 a dbpedia:Band;
    dbpedia:name ?bandName2 .
}
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:associatedBand ?band1 .
  ?person2 a dbpedia:Person;
    dbpedia:roleInFilm ?film ;
    dbpedia:actor ?actor .
  ?film rdf:type dbpedia:Film;
    dbpedia:title ""TitleOfTheFilm"" . # Placeholder title
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
445,69,test,"Give me the death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?result <http://dbpedia.org/ontology/location> ?v3 . ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen"" .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
  OPTIONAL { 
    ?person rdfs:seeAlso <http://example.com/AK_Abdul_Momen_bio> . # Placeholder for detailed biography link
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
926,70,test,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v6 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royaltyFather ?grandfather
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:parent ?grandfatherParent .
  ?grandfatherParent a dbpedia:Person;
    dbpedia:rank ""Royalty"" .
  ?royaltyFather a dbpedia:Person;
    dbpedia:parent ?grandfather .
  ?grandfather a dbpedia:Person;
    dbpedia:rank ""Royalty"" .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
978,20,test,"Give me the band member of the professional, that is a musical artist and an artist, in the award of Michel Claparède and band member of the person born as the name of Chicane (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandMember
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Chicane""@en .
  ?person a dbpedia:Musician .
  ?person rdfs:member ?bandMember .
}",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
791,60,test,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:officeHolder true .
  ?parent a dbpedia:Royalty .
  ?child a dbpedia:Person;
    dbpedia:father ?parent .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
456,66,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of the actor of Pacific Drive and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"SELECT ?bandName
WHERE {
  ?actor dbpedia:role dbpedia:Actor ;
            dbpedia:inSeries ""Pacific Drive"" .
  ?spouse a dbpedia:Person;
    dbpedia:sibling ?actor .
  ?bandMember a dbpedia:Musician;
    dbpedia:band ?band .
  ?bandMember dbpedia:name ""Alan Doyle"" .
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
917,62,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of Kekūanāoʻa and child of the father of the spouse, that is a royalty, of Leleiohoku I.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v5 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandparent
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Caesar Kapaʻakea""@en ;
    dbpedia:birthPlace ""Hawaii""^^xsd:string .
  ?child a dbpedia:Person;
    dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person;
    rdfs:label ""John Owen Dominis""@en ;
    dbpedia:birthPlace ""Hawaii""^^xsd:string .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
507,70,test,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of the person born on 1966-02-18 and spouse of the person born as Anne Voase Coates.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v7 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v7 <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?director
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthDate ""1919-06-17""^^xsd:date;
    dbpedia:spouse ""Anne Voase Coates"" .
  ?person2 a dbpedia:Person;
    dbpedia:birthDate ""1966-02-18""^^xsd:date;
    dbpedia:profession ?profession .
  ?person1 dbpedia:marriedTo ?person2 .
  ?movie a dbpedia:Movie; 
    dbpedia:director ?director .
  ?person1 dbpedia:actedIn ?movie .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
212,8,test,Give me the birthplace of the professional in  and birthplace of Corp Sayvee.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Corp_Sayvee> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",3,3,4,2,2,2,2,9,1,100979,0,9.902951079421667e-06,1.0,1.9805706023905488e-05
329,25,test,"Give me the entity in the region, that is a country, of Western European Time and birthplace of the author of The Tailor and Ansty and entity in Northern Ireland.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v4 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?country ?birthPlace ?deathPlace
WHERE {
  ?country a dbpedia:Country;
    dbpedia:timeZone dbpedia:Western_European_Time .
  ?author a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?book a dbpedia:Book ;
    dbpedia:author ?author ;
    dbpedia:title ""The Tailor and Ansty"" .
  ?country dbpedia:locatedIn ?location .
  ?location a dbpedia:Location;
    rdfs:label ""Northern Ireland"" .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
826,56,test,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of Louis II, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?predecessorParentChild WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:precedessor ?predecessor
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
93,19,test,"Give me the death place of the governor of the native, that is a politician, of Seattle and capital of the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/capital> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person dbpedia:officeHolderRole dbpedia:Politician ;
    dbpedia:officeHolding dbpedia:GovernorOfNative .
  ?region a dbpedia:Region;
    dbpedia:headquarter Settlement ?headquarter .
  ?headquarter rdfs:label ""Lake Clark National Park and Preserve""@en .
}",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
865,58,test,"Give me the father of the child of the father of Abul Maal Abdul Muhith and native of British Raj and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"SELECT ?childName ?politicianStatus
WHERE {
  ?father a dbpedia:Person;
    dbpedia:parent ?grandfather .
  ?grandfather a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen"" .
  ?child a dbpedia:Person;
    dbpedia:parent ?father .
  ?child a dbpedia:Person;
    dbpedia:birthPlace ""British Raj"" .
  ?child a dbpedia:Person;
    dbpedia:role dbpedia:Politician .
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
976,70,test,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the person born as the birth name of Naci Bostancı and office of the leader, that is a politician, of Grand National Assembly of Turkey.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?v6 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v6 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v3 . ?v6 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for the office of the mayor affiliated with Millet İttifakı
SELECT ?mayorOffice WHERE {
  ?politician a dbpedia:Politician;
    dbpedia:officeHolderOf dbpedia:MunicipalityOfficer ;
    dbpedia:politicalParty dbpedia:Millet_İttifakı .
  ?politician foaf:name ""AKP Mayor Name"" . # Placeholder for the actual name
}

# Query for the office of Naci Bostancı as a politician in the Grand National Assembly of Turkey
SELECT ?bostanciOffice WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthName ""Naci Bostancı""@en ;
    dbpedia:officeHolderOf dbpedia:Grand_National_Assembly_of_Turkey .
  ?person foaf:name ""Naci Bostancı""@en . # Placeholder for the actual name
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
976,60,test,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v4 <http://dbpedia.org/ontology/leader> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office_of_kili ?birth_name_of_bostanci
WHERE {
  ?politician a dbpedia:Politician;
    dbpedia:office ?office_of_kili .
  ?person a dbpedia:Person;
    foaf:name ?birth_name_of_bostanci ;
    dbpedia:birthPlace ?birth_place_of_bostanci .
}",6,8,7,3,2,3,3,71,0,3424,1,0.0,0.0,0
507,65,test,"Give me the spouse of the person born as Anne Voase Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of Guy Ferland.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Anne Voase Coates"" .
  ?person a dbpedia:Film_Director ;
    dbpedia:birthDate 1919-06-17 ;
    foaf:surname ""Ferland"" .
  ?directedWork a dbpedia:Film;
    dbpedia:title ?title .
  ?directedWork dbpedia:director ?director .
  ?director foaf:sibling ?sibling .
  ?sibling a dbpedia:Person;
    dbpedia:name ?spouse
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
453,9,test,"Give me the religion of the birth place, that is a country, of William Denning and religion of the author, that is a cardinal and a cleric, of Apologia Pro Vita Sua.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cardinal>. <http://dbpedia.org/resource/William_Denning> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Apologia_Pro_Vita_Sua> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://dbpedia.org/ontology/religion> ?result . ?v3 <http://dbpedia.org/ontology/religion> ?result . },"SELECT ?birthPlaceReligion ?authorReligion
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:nationality dbpedia:United_Kingdom ;
    dbpedia:religion ?birthPlaceReligion .
  ?person2 a dbpedia:Person;
    dbpedia:name ""John Henry Newman"";
    dbpedia:religion ?authorReligion .
}",4,7,5,2,2,2,2,9,0,0,1,0,0.0,0
507,71,test,"Give me the professional in the profession of the person born on 1966-02-18 and spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ?v8 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v7 <http://dbpedia.org/property/occupation> ?v8 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/property/starring> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?directorName ?movieTitle
WHERE {
  ?spouse a dbpedia:Person;
    dbpedia:birthDate 1966-02-18.
  ?spouse ns:spouses ?partner .
  ?partner a dbpedia:Person;
    dbpedia:birthDate 1919-06-17.
  ?spouse rdfs:label ?directorName .
  ?movie a dbpedia:Film; 
    dbpedia:director ?directorName .
  FILTER (xsd:date(?movie.releaseDate) > xsd:date(""1966-02-18""))
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
41,26,test,"Give me the party of the work, that is an office holder, of yes and party of Declan Costello and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/author> ""yes""@en . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?officeHolderParty ?leaderParty
WHERE {
  ?election dbpedia:Election ;
    dbpedia:year 2005 ;
    dbpedia:location Castlereagh_Borough_Council .
  ?candidate a dbpedia:OfficeHolder;
    dbpedia:party ?officeHolderParty .
  ?politician a dbpedia:Politician;
    dbpedia:office ?office ;
    dbpedia:party ?leaderParty .
  ?candidate rdf:type ?candidateType .
  ?politician rdf:type ?politicianType .
  ?candidate ns:name ""Declan Costello"" .
  ?politician ns:name ""Leader of 2005 Castlereagh Borough Council"" .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
47,61,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardeeOffice1 ?awardeeOffice2
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Mantu Ghosh"" .
  ?person dbpedia:hasAward ?award .
  ?award a dbpedia:Award ;
    dbpedia:awardeeOffice ?awardeeOffice1 .
  ?award a dbpedia:Award ;
    dbpedia:awardeeOffice ?awardeeOffice2 .
}",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
987,63,test,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and entity in the region, that is a country, of Central European Time and birth place of the actor of All for Free.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?bandName ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Dado Polumenta""@en .
  ?person rdfs:member ?band .
  ?band a dbo:MusicArtist ;
         dbo:bandName ?bandName .
  ?band geoname:countryMemberOf dbo:CountriesByTimeZones#CET .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
216,24,test,Give me the administration of the designer of Woolfe: The Red Hood Diaries and party of the awardee of Australian Defence Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?designerName ?awardeeName
WHERE {
  ?movie dbpedia:mainActor ?designerName .
  ?award dbpedia:recipient ?awardeeName .
  ?award rdfs:label ""Australian Defence Medal"" .
  ?movie dbpedia:productionCompany ?productionCompany .
  ?productionCompany rdfs:label ?administration .
}",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
124,71,test,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/ontology/battle> ?v8 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?conflict ?commander
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1850-06-24"" .
  ?conflict a dbo:MilitaryConflict;
    dbpedia:startDate ""1880-01-01"" ;
    dbpedia:endDate ""1881-01-01"" .
  ?battery a raoa:AustralianBattery;
    dbpedia:name ""A"" Battery, Royal Australian Artillery .
  ?battery raoa:hasCommander ?commander .
  ?conflict dbo:participatedIn ?battery .
}
```",9,19,10,3,3,3,3,71,0,0,9,0,0.0,0
935,20,test,"Give me the headquarter of the office of the native of Balochistan, Pakistan and death place of the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/location> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/property/office> ?v5 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?headquarter ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality dbpedia:Balochistan .
  ?person dbpedia:awardedItem dbpedia:Nishan-e-Pakistan .
  ?person a dbpedia:OfficeHolder; 
    dbpedia:officeBasedAt ?headquarter .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
122,9,test,"Give me the band of the reference, that is a musical artist and an artist, to Gift of Gab and band member of the band of Gift of Gab (rapper).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Gift of Gab""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?person a dbpedia:MusicalArtist, dbpedia:BandMember ;
            dbpedia:name ?bandName .
  FILTER (?person = <http://dbpedia.org/resource/Gift_of_Gab>)
}
```",4,6,5,2,2,2,2,9,0,0,3,0,0.0,0
987,66,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of Šako Polumenta and birth place of the actor of All for Free.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/timeZone> ?v5 . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?eventLocation ?countryTimeZone
WHERE {
  ?event dbo:location ?eventLocation .
  ?event rdfs:label ?eventName .
  ?timeZone rdfs:label ?timezoneName .
  ?event dbpedia:timeZone ?timezoneName .
  ?person a dbpedia:Artist;
    dbpedia:birthPlace ?birthPlace .
  ?band a dbpedia:MusicArtistBand;
    dbpedia:artistName ""Šako Polumenta"" .
  ?actor a dbpedia:Actor;
    rdfs:label ""All for Free"" .
  FILTER (lang(?eventName) = ""en"")  # Assuming the event is in English
  FILTER (?eventLocation = ""Canicosa de la Sierra"")
  BIND (regex(str(?timezoneName), ""Canicosa de la Sierra"", ""i""))  # Timezone name matching Canicosa de la Sierra
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
976,68,test,"Give me the office of the person born as Mehmet Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v6 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v6 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/ontology/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?office_bostanci ?kili lider_office ?millet_ittifak_mayor 
WHERE { 
  ?person1 a dbpedia:Person; dbpedia:name ?name1 . 
  ?person1 dbpedia:birthPlace ?birthPlace1 . 
  ?person1 dbpedia:office ?office_bostanci . 
  ?person2 a dbpedia:Person; dbpedia:name ?name2 . 
  ?person2 a dbpedia:Politician; dbpedia:partyMemberOf dbpedia:Millet_İttifakı . 
  ?person2 dbpedia:office ?kili_lider_office . 
  ?organization a dbpedia:Organization; dbpedia:name ?org_name . 
  ?person3 a dbpedia:OfficeHolder; dbpedia:office ?millet_ittifak_mayor . 
  ?org_name dbpedia:parentOrganization dbpedia:Millet_İttifakı . 
}",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
508,19,test,"Give me the birthplace of the commander, that is a politician, in 1939–1940 Winter Offensive and birthplace of the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for AK Abdul Momen
SELECT ?birthPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen"";
    dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:conflict [a dbpedia:Event; dbpedia:name ""1939-1940 Winter Offensive""];
}

# Query for Hu Yukun
SELECT ?deathPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Hu Yukun"";
    dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:conflict [a dbpedia:Event; dbpedia:name ""1939-1940 Winter Offensive""];
}
```",5,9,6,3,2,3,2,20,0,0,3,0,0.0,0
507,63,test,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and professional in the profession of Guy Ferland and spouse of the person born as the birth name of Anne V. Coates.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://dbpedia.org/ontology/director> ?result . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?director
WHERE {
  ?movie a dbpedia:Movie;
    dbpedia:director ?director .
  ?actor dbpedia:act_in_film ?movie ;
            foaf:name ""Beryl Reid"" ;
            dbpedia:sameAs ?beryl_reid .
  ?spouse foaf:name ""Anne V. Coates"" .
  ?actor dbpedia:spouse ?spouse .
  ?beryl_reid a dbpedia:Person;
    dbpedia:birthName ""Anne V. Coates"" .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
645,67,test,"Give me the commander in Battle of Jarama and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"SELECT ?commander ?militaryForce ?presidentPolitician ?leaderOfOffice
WHERE {
  ?battle a dbpedia:Event;
    dbpedia:participatingMilitaryForces ?militaryForce .
  ?battle rdfs:label ""Battle of Jarama""@en .
  
  ?commander a dbpedia:Person;
    dbpedia:role ""Commander"" .
  
  ?commander dbpedia:involvement ?battle .

  ?presidentPolitician a dbpedia:Person;
    dbpedia:office dbpedia:President_of_Spain ;
    dbpedia:politicalParty ""Falange Española Tradicionalista y de las JONS""@en .
  
  ?presidentPolitician dbpedia:term ""Restoration (Spain)"" .

  ?leaderOfOffice a dbpedia:OfficeHolder;
    dbpedia:office dbpedia:Government_of_Spain ;
    dbpedia:role ""Leader""@en .
  
  ?leaderOfOffice dbpedia:term ""Restoration (Spain)"" .

  ?commander ns:involvement ?battle .
  ?presidentPolitician ns:office ?leaderOfOffice .
}",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
507,60,test,Give me the spouse of the person born as the birth name of Anne V. Coates and professional in the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?anne dbpedia:birthName ""Anne Valerie Coates"" .
  ?anne a dbpedia:Person;
    dbpedia:spouse ?spouse .
  FILTER (xsd:date(?anne dbpedia:birthday) = ""1966-02-18"")
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
645,66,test,"Give me the commander in the force of Carlos Asensio Cabanillas and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/ontology/battle> ?v6 . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?commander ?officeLeader WHERE { ?commander a dbpedia:Person; dbpedia:militaryBranch ?militaryBranch . ?officeLeader a dbpedia:Office; dbpedia:leader ?officeLeaderOf . ?militaryBranch ns:hasMember ?commander . ?officeLeader ns:isPartOf ?governmentAgencyOrOrganization . ?governmentAgencyOrOrganization a dbpedia:GovernmentalOrganisation . FILTER ( LANG(?commander) = 'es' ) . FILTER ( LANG(?officeLeader) = 'es' ) . ?militaryBranch rdfs:label 'Restoration (Spain)' . },7,12,8,3,3,3,3,71,0,0,2,0,0.0,0
465,59,test,"Give me the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify parents of Ercole II d'Este
SELECT ?parent1 WHERE {
  dbpedia:Ercole_II_d_Este a dbpedia:Person;
    dbpedia:parent ?parent1 .
}

# Step 2: Determine children of Ercole II d'Este
SELECT ?child WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent1 . 
}

# Step 3: Find the child who married and had a child with Elizabeth of Austria's parent
# Assume Elizabeth of Austria's parent is identified as Maximilian I, Holy Roman Emperor (for example)
SELECT ?child WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent1 .
  dbpedia:Maximilian_I_Holy_Roman_Emperor a dbpedia:Person;
    dbpedia:parent ?grandParent . 
  ?child dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:parent ?grandParent .
}

# Step 4: Identify the successor of the child found in step 3
SELECT ?successor WHERE {
  ?child a dbpedia:Person;
    dbpedia:succeededBy ?successor .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
917,63,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of Kamehameha IV and child of the father of Keʻelikōlani.",SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?royaltyParent 
WHERE { 
  ?child a dbpedia:Person; 
    dbpedia:father ?fatherRoyalty; 
    dbpedia:mother ?motherRoyalty; 
    dbpedia:office dbpedia:Hawaiian_Kingdom_Mayorship . 
  ?fatherRoyalty a dbpedia:Person; 
    dbpedia:parent ?grandFatherRoyalty . 
  ?grandFatherRoyalty a dbpedia:Person; 
    rdfs:label 'Keʻelikōlani' . 
}",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
917,69,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of the child, that is a royalty, of Kamehameha III and child of the father of Keʻelikōlani.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . },"Given the constraints and the lack of specific data linking a mayor of the Hawaiian Kingdom directly to this royal lineage through a royalty child-parent relationship, constructing a SPARQL query that returns the required information is not feasible with the provided details. 

Therefore, without additional context or specific individuals fitting the criteria, we cannot formulate a precise SPARQL query.",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
573,64,test,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/governor> ?v3 . }","{sparql_query: 
 PREFIX dbpedia: <http://dbpedia.org/ontology/>
  SELECT ?parent WHERE {
    ?john_quincy_adams a dbpedia:Person;
      dbpedia:birthDate ?birthdate;
      dbpedia:role dbpedia:Politician;
      dbpedia:role dbpedia:PoliOfficeHolder .
    ?john_quincy_adams foaf:parent ?parent .
  }
}
{sparql_query2: 
  PREFIX dbpedia: <http://dbpedia.org/ontology/>
  SELECT ?region WHERE {
    ?charlie_baker a dbpedia:Person;
      dbpedia:birthDate ?birthdate;
      dbpedia:deathPlace ?quincy ;
      dbpedia:realName ""Charlie Baker"" .
    ?quincy a dbpedia:Region .
  }
}",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
645,59,test,"Give me the commander in the force of the commander in Siege of Madrid and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?birthPlace ?deathPlace WHERE { ?person a dbpedia:Person; dbpedia:birthPlace ?birthPlace . ?person a dbpedia:Person; dbpedia:deathPlace ?deathPlace . FILTER ( (?person = dbpedia:Arthur Wellesley) OR ?person rdf:type dbpedia:British Army Officer ) . } UNION { ?president a dbpedia:OfficeHolder; dbpedia:office dbpedia:President_of_Bangladesh . ?president ns:involvesDbpediaEvent dbpedia:Siege_of_Madrid . },6,11,7,3,2,3,3,71,0,0,53,0,0.0,0
839,58,test,"Give me the band of the band, that is a musical artist, of the professional in Musician and band of the member of Böhse Onkelz and band of Kevin Russell (musician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v5 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:memberOf dbpedia:Böhse_Onkelz .
  ?person2 a dbpedia:Person;
    dbpedia:memberOf ?band .
  ?band rdfs:label ?bandName .
  FILTER (regex(str(?bandName), 'Böhse Onkelz')) 
  UNION
  FILTER (str(?bandName) = 'Kevin Russell Band') 
  UNION
  FILTER (str(?bandName) = 'The Bacon Brothers')
}
```

This query will:
- Find members of Böhse Onkelz.
- Identify bands those members are a part of.
- Filter to find the common band name(s) that match 'Böhse Onkelz', 'Kevin Russell Band', or 'The Bacon Brothers'.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
965,57,test,"Give me the spouse of Prince Louis of Battenberg and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v4 <http://dbpedia.org/property/father> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse ?child_name ?royalty_political_status ?nobles_parents
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen""@en;
    dbpedia:birthDate ""1854-05-24""^^xsd:date;
    dbpedia:parent ?parent1 .
  ?parent1 a dbpedia:Person;
    dbpedia:name ""Prince Louis of Battenberg""@en .
  ?child a dbpedia:Person;
    dbpedia:parent ?person1;
    dbpedia:birthDate ""1854-05-24""^^xsd:date;
    dbpedia:role dbpedia:Polarity; # Assuming royalty/noble roles are represented by some property like Polarity
    rdfs:label ""Child of Prince Louis and spouse""@en .
  ?child dbpedia:hasParent ?nobles_parents .
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
445,64,test,"Give me the death place of Patrick Moore and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?deathPlace ?country_of_residence ?award_for_st_mihiel
WHERE {
  ?patrick moore a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?patrick moore a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .

  ?patrick a foaf:Athlete; 
    foaf:residence ?country_of_residence .

  ?patrick rdfs:label ""Patrick Moore""@en; # Assuming his English name is used
    dbpedia:birthDate ""1920-03-12""^^xsd:date; # Example birth date, adjust as needed
    dbpedia:deathDate ""2012-03-09""^^xsd:date; # Example death date, adjust as needed

  ?battle a dbpedia:Event;
    dbpedia:name ""Battle of Saint-Mihiel"";
    dbpedia:commander ?award .

  ?patrick dbpedia:participatedIn ?battle .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
573,60,test,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/property/governor> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlaceOfCharlie ?parentOfJohnQuincyAdams
WHERE {
  ?johnQuincyAdams a dbpedia:Person;
    dbpedia:officeHolder ""6th President of the United States"";
    foaf:parent ?parentOfJohnQuincyAdams .
  ?charlieBaker a dbpedia:Person;
    dbpedia:name ""Charlie Baker (Australian footballer)"";
    dbpedia:birthPlace ?birthPlaceOfCharlie .
  ?parentOfJohnQuincyAdams a dbpedia:Person;
    foaf:child ?charlieBaker .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
926,61,test,"Give me the successor of the child of the spouse of Şermi Kadın and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childName ?successorName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent dbpedia:Mustafa III .
  ?person dbpedia:spouse dbpedia:Şermi Kadın .
  ?child a dbpedia:Child; 
    dbpedia:parent ?person .
  ?child dbpedia:succeededBy ?successor .
  FILTER (dbpedia:roleOf ?person = ""Monarch"")
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
582,60,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?result <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?teamNickname ?sugawaraResidence
WHERE {
  ?player dbpedia:playsFor ?team .
  ?player rdfs:label ""Hajime Moriyasu""@en .
  ?team rdfs:label ?teamNickname .

  ?scientist foaf:name ""Hirotaka Sugawara"" .
  ?scientist a dbpedia:Person; dbpedia:residence ?sugawaraResidence .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
459,27,test,"Give me the governor of the administration, that is a politician, of Brad Henry and governor of Oklahoma and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Kevin Stitt"" .
  ?person dbpedia:birthName ?birthName .
}",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
965,56,test,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of Louise Mountbatten and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseOfSpouse ?birthPlace ?deathPlace
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:spouse ?spouseOfSpouse .
  ?person1 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person2 a dbpedia:Person;
    dbpedia:spouse ?spouseOfSpouse .
  ?person2 a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person1 foaf:parent ?parent1.
  ?parent1 a dbpedia:Noble; # Assuming George Mountbatten's parents are nobles
  ?person2 foaf:parent ?parent2.
  ?parent2 a dbpedia:Noble .
  ?person1 ns:father ?mountbattenFather.
  ?mountbattenFather a dbpedia:Person;
    rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  ?person2 ns:child ?mountbattenChild.
  ?mountbattenChild a dbpedia:Person;
    rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
773,66,test,"Give me the parent of the successor of Charles the Bald and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of Charles the Fat.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v6 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parentOfSuccessor ?child
WHERE {
  ?successor a dbpedia:Monarch;
    dbpedia:succeededBy ?person .
  ?person a dbpedia:Person;
    dbpedia:father ?charlesTheFat .
  ?charlesTheFat a dbpedia:Monarch;
    dbpedia:spouse ?wifeOfCharlesTheFat .
  ?wifeOfCharlesTheFat a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Royalty;
    dbpedia:officeHolder true
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
216,69,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v7 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://dbpedia.org/ontology/coach> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v3 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace ?managerTeam
WHERE {
  ?pavel a dbpedia:Person;
    dbpedia:deathDate [ owl:sameAs ?deathDate ] .
  ?pavel dbpprop:playsFor ?soccerClub .
  ?soccerClub a dbpedia:SoccerClub ;
    dbpprop:hasManager ?manager .
  ?manager a dbpedia:Person;
    dbpprop:isManagerOf ?soccerClub .
  
  ?manager a foaf:Person;
    foaf:wasBornIn ?birthPlace .
  
  ?under18Team a dbpedia:SoccerTeam ;
    dbpprop:hasCoach ?coach .
  ?under18Team dbpprop:representsCountry ""Bosnia and Herzegovina"" .

  ?referenceClub a dbpedia:SoccerClub;
    dbpprop:hasCoach ?coach .

  ?coach a foaf:Person;
    foaf:wasBornIn ?birthPlace .
  
  ?coach dbpprop:coaches ?referenceClub .
  
  ?referenceClub dbpprop:representsOrganization [ owl:sameAs ?organization ] .
  
  ?referenceClub rdfs:label ""Croatia U21"" .
}",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
465,62,test,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Renée of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Maximilian II Holy Roman Emperor"";
    dbpedia:successor ?successor .
  ?successor a dbpedia:Person;
    dbpedia:name ?name_of_successor .
  ?person dbpedia:parent [ dbpedia:child ?child ].
  ?child a dbpedia:Person;
    dbpedia:name ""Maximilian II Holy Roman Emperor"" .
  ?person dbpedia:spouse ?spouse .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
216,64,test,"Give me the player in Mario Ivanković and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace ?managerRole ?playerRole
WHERE {
  ?pavelVezhinov a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?pavelVezhinov a dbpedia:SoccerPlayer;
    dbpedia:club ?club .
  ?pavelVezhinov a dbpedia:SoccerManager;
    dbpedia:managedTeam ?team .

  ?marioIvankovic a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?marioIvankovic a dbpedia:SoccerPlayer;
    dbpedia:club ?playerClub .
  ?marioIvankovic a dbpedia:SoccerCoach;
    dbpedia:managedOrganization ?team .

  ?pavelVezhinov rdfs:seeAlso ?link .
  ?marioIvankovic rdfs:seeAlso ?link .

  ?link a dbpedia:Person ;
    dbpedia:role ?managerRole ;
    dbpedia:role ?playerRole .
}

ORDER BY ?birthPlace
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
933,70,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of the professional in Musician and band of the band of Alan Warner (musician).","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/property/birthName> ?v6 . ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1947-04-21""^^xsd:date;
    dbpedia:role dbpedia:Musician .
  ?person rdfs:member ?band .
  ?band a dbpedia:Band .
}",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
573,68,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of the author, that is a politician and an office holder, of Exchequer Standards.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v7 . ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find the American politician
SELECT ?american_politician WHERE {
  ?politician a dbpedia:Politician;
    dbpedia:nationality dbpedia:United_States .
}

# Step 2: Get their residence (birthplace or significant political location)
SELECT ?residence WHERE {
  ?politician dbpedia:birthPlace ?residence .
}

# Step 3: Find the person decedent at the same residence
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?decedent WHERE {
  ?residence a dbo:Settlement ;
    dbpedia:containsPersonDead(?decedent) .
  ?politician dbpedia:residence ?residence .
}
```",8,13,9,3,3,3,3,71,0,0,2,0,0.0,0
645,68,test,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and commander in the force of the commander in Siege of Madrid.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. },"SELECT ?militaryForce
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Camilo Menéndez Tolosa"" .
  ?event a dbpedia:Event;
    dbpedia:name ""Siege of Madrid"" .
  ?event dbpedia:hasCombatant ?person .
  ?period a dbpedia:SocietalEvent;
    dbpedia:name ""Restoration (Spain)"" .
  ?person dbpedia:partOf ?period .
}",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
465,70,test,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v7 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?successor
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Royalty .
  ?child dbpedia:spouse ?spouse .
  ?spouse a foaf:Person .
  ?successor a dbpedia:Royalty;
    dbpedia:succeededBy ?child .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
965,58,test,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?grandparents
WHERE {
  ?child a dbpedia:Person;
    dbpedia:birthName ""George Alexander Louis Windsor"";
    dbpedia:parent ?parent1 .
  ?parent1 a dbpedia:Person;
    dbpedia:parent ?grandparent1 .
  ?grandparent1 a dbpedia:Person;
    rdfs:label ""King George V"" .
  ?grandparent1 a dbpedia:Person;
    dbpedia:parent ?grandparent2 .
  ?grandparent2 a dbpedia:Person;
    rdfs:label ""Queen Mary""
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
47,59,test,"Give me the office of the awardee of the award, that is an award, of Mantu Ghosh and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> ?v3 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?officeAWARD ?commanderOffice
WHERE {
  ?awardee a dbpedia:Person;
    dbpedia:hasAward ?award .
  ?award rdfs:label ""Mantu Ghosh Award""@en .
  ?awardee dbpedia:P31 [ a dbpedia:Event; rdfs:label ""Operation Green Hunt""@en ] .

  ?commander a dbpedia:Person;
    dbpedia:role dbpedia:P31 [ a dbpedia:Event; rdfs:label ""Operation Green Hunt""@en ] .

  ?commander dbpedia:P31 [ a dbpedia:Event; rdfs:label ""Operation Green Hunt""@en ] .
  
  ?awardee dbpedia:P31 [ a dbpedia:Event; rdfs:label ""Operation Green Hunt""@en ] .
  
  ?award rdfs:subPropertyOf dbpedia:hasAward ;
    dbpedia:isGivenTo ?awardee .
  
  ?commander dbpedia:P31 [ a dbpedia:Event; rdfs:label ""Operation Green Hunt""@en ] .
  
  ?commander dbpedia:office ?commanderOffice .
}
```

This query does the following:
- It finds individuals who have an award named ""Mantu Ghosh Award"".
- It links these individuals to the event ""Operation Green Hunt"".
- It also finds individuals who have the role of a commander in ""Operation Green Hunt"".
- Finally, it connects the commander to their office.",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
791,58,test,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of Taira no Tokuko and predecessor of the child of Emperor Takakura.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v5 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:isOfficeHolder true;
    dbpedia:isRoyalty true .
  ?child dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:name ""Taira no Tokuko"" .
  ?child dbpedia:hasChild ?grandchild .
  ?grandchild a dbpedia:Person;
    dbpedia:name ""Emperor Takakura"" .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,8,test,Give me the artistic movement of Ella Cheever Thayer and claim to fame of the person born as Emily Katherine Jacques.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ella_Cheever_Thayer> <http://dbpedia.org/ontology/movement> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Emily Katherine Jacques""@en . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?movement ?claim_to_fame
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Ella Cheever Thayer""@en .
  ?person a dbpedia:Person;
    dbpedia:birthName ""Emily Katherine Jacques""@en .
  ?person rdfs:label ?movement .
  ?person foaf:knows ?claim_to_fame .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
507,61,test,"Give me the professional in the profession of the person born on 1966-02-18 and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commonProfession
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthDate ""1966-02-18"" .
  ?person2 a dbpedia:Person;
    dbpedia:birthDate ""1919-06-17"" .
  ?person1 dbpedia:profession ?profession1 .
  ?person2 dbpedia:profession ?profession2 .
  FILTER (NOT EXISTS { ?x dbpedia:director ?movie. })
  AND (?profession1 = ?profession2)
}",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
365,19,test,"Give me the spouse of the native, that is a politician, of the reference to Полтавская губерния and person born as the birth name of Symon Petliura.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Symon Petliura"";
    dbpedia:birthPlace <http://dbpedia.org/property/birthPlace#Poltava_Governorate>;
    dbpedia:politicalOffice dbpedia:Governor; # Assuming he held the office of Governor in Poltava
    dbpedia:deathDate [ xsd:dateOf ""1926-03-25"" ] .
  ?spouse a dbpedia:Person;
    dbpedia:name ?spouseName .
  ?person rdfs:member ?familyMembers .
  FILTER (regex(str(?familyMembers), 'Spouse')) # Filter for spouse entries
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
47,66,test,"Give me the office of the awardee of Banga Bhushan and office of the awardee of the entity, that is an award, in India and office of the administration of Jagdeep Dhankhar.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for Banga Bhushan awardee's office
SELECT ?awardeeOffice WHERE {
  ?award dbpedia:P31 dbpedia:IndianNationalAward ;
    dbpedia:awardName ""Banga Bhushan"" .
  ?awardee a dbpedia:Person;
    dbpedia:office ?awardeeOffice .
  FILTER (?awardeeOffice != *)
}

# Query for the award entity (Banga Bhushan) itself
SELECT ?awardEntity WHERE {
  ?award dbpedia:P31 dbpedia:IndianNationalAward ;
    dbpedia:awardName ""Banga Bhushan"" .
  ?award rdfs:label ?awardEntity .
}

# Query for Jagdeep Dhankhar's office
SELECT ?dhankharOffice WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Jagdeep Dhankhar"" .
  ?person dbpedia:P31 dbpedia:GovernmentOfIndiaOffices ;
    dbpedia:office ?dhankharOffice .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
987,59,test,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"1. **Finding Dado Polumenta's band and their birth place:**
```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Dado Polumenta"" .
  ?person dbpedia:genre ""Rock music"" .
  ?band a dbpedia:Band;
    dbpedia:artist ?person ;
    dbpedia:genre ""Rock music"" .
  ?band dbpedia:birthPlace ?birthPlace
}
```

2. **Finding the actor of a film with Emir Hadžihafizbegović and their birth place:**
```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actorName ?filmTitle ?birthPlace
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:name ""Emir Hadžihafizbegović"" .
  ?film a dbpedia:Film;
    dbpedia:title ?filmTitle ;
    dbpedia:actor ?actor .
  OPTIONAL { ?film dbpedia:genre ""Drama"" } # Assuming the film is a drama
  ?actor dbpedia:birthPlace ?birthPlace
}
```",6,10,7,3,2,3,3,71,0,0,4,0,0.0,0
582,64,test,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and player in Kazuaki Nagasawa.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?birthPlace ?deathPlace
WHERE {
  ?person a dbo:Person;
    dbo:birthPlace ?birthPlace .
  OPTIONAL { ?person a dbo:Residence ; dbo:address ?address . }
  ?address rdfs:label ?deathPlace .
}
```

This query will return the birthplace and death place (if available) of each person based on their association with their respective organizations.",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
459,24,test,"Give me the governor of the administration, that is a politician, of Brad Henry and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/governor> ?result . ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?governor_name ?birth_name
WHERE {
  ?politician a dbpedia:Politician;
    dbpedia:office ?office .
  ?office rdfs:label ""Governor of Oklahoma""@en .
  ?politician dbpedia:name ""Brad Henry"" .
  ?office dbpedia:heldBy ?governor .
  ?governor a dbpedia:Person .
  ?biography a dbpedia:Biography;
    dbpedia:birthName ?birth_name .
  ?politician dbpedia:name ""Kevin Stitt"" .
}",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
645,70,test,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v1 <http://dbpedia.org/property/office> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?militaryForce ?governmentAgency
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Bangladesh"";
    dbpedia:deathPlace ""Dhaka"" .
  ?person rdfs:label ""AK Abdul Momen"" . 
  ?militaryForce a dbpedia:MilitaryUnit;
    dbpedia:commandedBy ?person .
  ?governmentAgency a dbpedia:GovernmentOffice;
    dbpedia:ledBy ?person .
}
```",8,15,9,3,3,3,3,71,0,0,2,0,0.0,0
987,70,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/timeZone> ?v5 . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Find the sports event in Canicosa de la Sierra
SELECT ?event WHERE {
  ?event a dbpedia:Event; location ""Canicosa de la Sierra"" .
}

# Determine the time zone of the event
# Assuming we find a specific event, we can infer the time zone from the event details
# For simplicity, let's assume a hypothetical time zone (e.g., UTC+1) for this example

# Find the country where the event took place
SELECT ?country WHERE {
  ?event a dbpedia:Event; location ""Canicosa de la Sierra"";
    dbpedia:locationCountry ?country .
}

# Actor Emir Hadžihafizbegović in a film with specific details
SELECT ?film ?actor_birthplace
WHERE {
  ?actor a dbpedia:Person;
    foaf:name ""Emir Hadžihafizbegović"";
    dbpedia:birthPlace ?actor_birth_place .
  ?film a dbpedia:Film;
    dbpedia:star ?actor ;
    dbpedia:releaseDate ?film_release_date .
  FILTER (regex(str(?film_release_date), ""20\d{2}""))  # Example filter for a film released in the 20th century
  BIND (?actor_birth_place as ?actor_birth_place)
}

# Band Šako Polumenta, an artist and musical artist
SELECT ?band_member_birthplace
WHERE {
  ?band a dbpedia:Band;
    dbpedia:artist ?band_artist .
  ?band_artist a dbpedia:MusicalArtist;
    dbpedia:birthPlace ?band_member_birth_place .
  BIND (?band_member_birth_place as ?band_member_birthplace)
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
917,58,test,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and child of the father of Keʻelikōlani and parent of Albert Kamehameha.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchildName ?royaltyStatus
WHERE {
  ?grandchild a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?child a dbpedia:Person;
    dbpedia:isDescendantOf ?grandparent .
  ?grandparent a dbpedia:Person;
    dbpedia:hasChild ?child_of_kamehameha_iii .
  ?child_of_kamehameha_iii a dbpedia:Person;
    dbpedia:isDescendantOf ?kamehameha_iii .
  ?child_of_kamehameha_iii rdfs:label ""Albert Kamehameha"" . 
  FILTER (regex(?child_of_kamehameha_iii, 'Albert')) .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
36,28,test,"Give me the actor of the claim to fame, that is a film, of Lepacious Bose and person born in the birth year of Deanne Bray and person born as the birth name of Ayo Makun.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthYear> ?v3 . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v1 . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v3 . ?v1 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify Lepacious Bose's film roles and associated actors
SELECT ?actor WHERE {
  ?role a dbpedia:FilmRole;
    dbpedia:actor ?actor .
  ?role dbpedia:star ?lepa_bose .
}

# Step 2: Determine Deanne Bray's birth year
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?birthYear WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ?birthYear .
  ?person rdfs:label ""Deanne Bray""@en .
}

# Step 3: Find actors born in the same year as Deanne Bray and with birth name Ayo Makun
PREFIX rdf:
SELECT ?actor WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ?birthYear .
  ?person rdfs:label ""Ayo Makun""@en .
  FILTER (?birthYear = ?birthYear_of_deanne_bray)
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
606,20,test,"Give me the birthplace of the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers and figure known as the nickname of the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> ?v4 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/property/nickname> ""Barb City""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:alumniOf dbpedia:University_of_Pennsylvania .
  ?person rdfs:label ""Barb City""@en .
  ?person dbpedia:birthPlace ?birthPlace .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
47,67,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of the award, that is an award, of Mantu Ghosh and office of Suvendu Adhikari.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardeeOffice ?awardName
WHERE {
  ?awardee a dbpedia:Person;
    dbpedia:office ?awardeeOffice .
  ?awardee dbpedia:recipientOf dbpedia:Award ;
    dbpedia:awardName ?awardName .
  FILTER (lang(?awardName) = ""en"")  # Only consider English awards
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
573,65,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at the administration, that is a region, of Charlie Baker and parent of the author, that is a politician and an office holder, of Exchequer Standards.","SELECT ?result WHERE { <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v4 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify Charlie Baker's profession and his residence (a settlement)
SELECT ?charlie_baker_profession ?charlie_baker_residence WHERE {
  ?charlie_baker a dbpedia:Person;
    dbpedia:occupation ?charlie_baker_profession ;
    dbpedia:birthPlace ?charlie_baker_residence .
}

# Step 2: Determine the region (administration) where Charlie Baker served
SELECT ?charlie_baker_administration WHERE {
  ?charlie_baker a dbpedia:Person;
    dbpedia:officeHolder ?office_holder ;
    dbpedia:serveInOffice dbpedia:Region ?charlie_baker_administration .
}

# Step 3: Find the parent of Charlie Baker who is also a politician and office holder
SELECT ?author WHERE {
  ?author a dbpedia:Person;
    dbpedia:parentOf ?charlie_baker ;
    dbpedia:officeHolder ?office_holder .
  FILTER (?office_holder = ?charlie_baker)
}

# Step 4: Extract the birthplace of the author found in Step 3
SELECT ?author_birthPlace WHERE {
  ?author a dbpedia:Person;
    dbpedia:birthPlace ?author_birthPlace .
  AND ?author = ?author_from_step_3
}
```",7,12,8,3,3,3,3,71,0,0,2,0,0.0,0
965,61,test,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find politicians born on 1854-05-24 with royal parents
SELECT ?politician ?royalParent
WHERE {
  ?politician a dbpedia:Person;
    dbpedia:birthday ""1854-05-24"";
    dbpedia:parent dbpedia:Royalty .
}

# Step 2: Find nobles born on 1854-05-24 with the birth name George Mountbatten, 2nd Marquess of Milford Haven
SELECT ?noble ?nobleParent
WHERE {
  ?noble a dbpedia:Person;
    dbpedia:birthday ""1854-05-24"";
    dbpedia:name ""George Mountbatten, 2nd Marquess of Milford Haven"" .
    OPTIONAL { ?noble dbpedia:parent ?nobleParent }
    FILTER (?nobleParent a dbpedia:Royalty)
}

# Step 3: Find common parents between the two groups
SELECT DISTINCT ?commonParent
WHERE {
  ?politicianParent a dbpedia:Person;
    dbpedia:child ?politician .
  ?nobleParent a dbpedia:Person;
    dbpedia:child ?noble .
  ?politicianParent = ?nobleParent .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
465,63,test,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find Anne of Brittany's child who became royalty
SELECT ?child WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?anne_of_brittany .
  ?anne_of_brittany a dbpedia:Person;
    rdfs:label ""Anne of Brittany""@en .
}

# Step 2: Find the successor of that child
SELECT ?successor WHERE {
  ?child a dbpedia:Person;
    dbpedia:succeededBy ?successor .
}

# Step 3: Identify Ercole II d'Este's child who became royalty
SELECT ?child WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?ercole_este_d_ferrara .
  ?ercole_este_d_ferrara a dbpedia:Person;
    rdfs:label ""Ercole II, Duke of Ferrara""@en .
}

# Step 4: Find the successor of that child
SELECT ?successor WHERE {
  ?child a dbpedia:Person;
    dbpedia:succeededBy ?successor .
}

# Combine results to find common successors
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
CONSTRUCT { ?person a dbpedia:Person; rdfs:label ?name . }
WHERE {
  ?child rdf:type dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Anne of Brittany""@en .
  OPTIONAL { ?child rdfs:label ?name . }
  UNION
  {
    ?child rdf:type dbpedia:Person;
      dbpedia:parent ?parent_ercole .
    ?parent_ercole a dbpedia:Person;
      rdfs:label ""Ercole II, Duke of Ferrara""@en .
    OPTIONAL { ?child rdfs:label ?name . }
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
791,71,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v2 <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_of_spouse AS ?result
WHERE {
  ?emperor dbpedia:father Emperor Antoku .
  ?emperor dbpedia:mother ?mother .
  ?mother a dbpedia:Person;
    dbpedia:spouse ?spouse .
  ?child a dbpedia:Person;
    dbpedia:parent ?emperor ;
    dbpedia:officeHolder ""true"" ;
    dbpedia:royalty ""true"" .
  ?child_s spouse ?spouse_of_child .
  ?spouse_of_child a dbpedia:Person;
    dbpedia:spouse ?spouse_of_spouse .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
98,25,test,Give me the birth place of the person born as Paolo Elito M. Ballesteros IV and entity in Philippines and region of the time zone of Lopez Jaena.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality dbpedia:Philippines .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  FILTER (lang(?birthPlace) = ""fil"") ; Ensure birth place is in Filipino language
  FILTER (lang(?deathPlace) = ""es"" ) ; Ensure death place is in Spanish language, typical for Spanish East Indies era
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
839,67,test,"Give me the band of the member of the band, that is a band and a group, of Peter Schorowsky and band of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/ontology/bandMember> ?v6 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

-- Step 1: Find bands associated with Peter Schofield
SELECT ?band WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Peter Schofield"";
    dbpedia:band ?band .
}

-- Step 2: Find bands associated with Kevin Russell
SELECT ?band WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Kevin Russell"";
    dbpedia:band ?band .
}

-- Step 3: Find a band that is both a musical artist and has a professional musician as a member
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?band
WHERE {
  ?band a dbo:MusicArtist ;
    dbpedia:hasMember [ a dbo:Musician ] .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
826,64,test,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successorSpouse ?childOfFather ?grandDukePredecessor
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthPlace ""Hesse, Germany"" .
  ?person1 dbpedia:father ?father .
  ?person2 a dbpedia:Person;
    dbpedia:siblingOf ?person1; 
    dbpedia:spouse ?successorSpouse .
  ?child a dbpedia:Person;
    dbpedia:parent ?person2; 
    dbpedia:birthPlace ""Hesse, Germany"" .
  ?child dbpedia:father ?person1 .
  ?grandDukePredecessor a dbpedia:Grand_Duke_of_Hesse ;
    dbpedia:succeededBy ?person1 .
}",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
216,58,test,"Give me the player in Igor Bišćan and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find Igor Bišćan
SELECT ?player WHERE {
  ?player dbpedia:birthPlace ""Bosnia and Herzegovina"" .
  ?player rdfs:label ""Igor Bišćan""@en .
}

# Step 2: Managers born after Pavel Vezhinov's death (1981)
SELECT ?manager WHERE {
  ?manager dbpedia:birthDate ?birthdate .
  FILTER (?birthdate > ""1981-01-01"") 
}

# Step 3: Join managers with players who coached the under-18 team
SELECT ?birthPlace ?deathPlace
WHERE {
  ?player a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
773,56,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of Charles the Fat and parent of Carloman of Bavaria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"SELECT ?birthPlace ?deathPlace
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person1 dbpedia:father ?father .
  ?father a dbpedia:OfficeHolder ;
            dbpedia:royalty .

  ?person2 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person2 dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:royalty .

  ?person1 ns:father ?person2 .
  ?person2 ns:child ?person1
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
124,69,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v7 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?warName ?militaryForce
WHERE {
  ?person dbpedia:birthDate ""1850-06-24""^^xsd:date;
    dbpedia:serveInMilitaryUnit ?militaryUnit .
  ?militaryUnit a dbpedia:MilitaryUnit ;
                 dbpedia:unitType ""British Army"" .
  ?war a dbpedia:SocietalEvent;
        dbpedia:militaryConflict ?militaryConflict .
  ?militaryUnit participateIn ?war ;
                  dbpedia:participatedInMilitaryConflict ?militaryConflict .
  ?war rdfs:label ?warName .
}
```",8,18,9,3,3,3,3,71,0,0,9,0,0.0,0
715,60,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace morocco .
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@es.
  ?person foaf:name ""Francisco Franco""@es .
  ?person dbpedia:conflict spanish_civil_war .
  ?commander a dbpedia:MilitaryPerson;
    dbpedia:role ""Commander"" .
  ?person dbpedia:ledOrganization ?organization .
  ?organization a dbpedia:GovernmentAgency, dbpedia:Organization .
}
```

This SPARQL query does the following:
- It filters for individuals born in Morocco who are labeled as Carlos Franco Iribarnegaray.
- It identifies Francisco Franco as the person with the matching name and role in the Spanish Civil War conflict.
- It looks for a commander role associated with Francisco Franco in the context of the Spanish Civil War.
- It ensures that the organization led by Francisco Franco is both a government agency and an organization.",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
433,59,test,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?associated_artist
WHERE {
  ?paul_chambers a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace ;
    dbpedia:occupation dbpedia:musician .
  ?associated_musician a dbpedia:Musician;
    dbpedia:associatedWith ?associated_artist .
  ?ortette_coleman a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace2 ;
    dbpedia:occupation dbpedia:musician .
  ?associated_musician_with_ornette a dbpedia:Musician;
    dbpedia:associatedWith ?associated_artist_with_ornette .
}
```",6,12,7,3,2,3,3,71,0,0,10,0,0.0,0
791,62,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and father of Emperor Go-Toba and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . }",The provided SPARQL query aims to identify such a person but may need adjustments based on more detailed historical records or clarifications on the question's constraints.,7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
166,20,test,"Give me the entity in the territory administered, that is a country, from the reference to Madrid and resting place of the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/ontology/capital> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?country
WHERE {
  ?event a dbpedia:Event;
    dbpedia:type [ rdf:value ""societal event"" ];
    dbpedia:type [ rdf:value ""military conflict"" ] .
  ?event dbpedia:occursIn ?location .
  ?location rdfs:label ""Madrid""@es .
  ?person a dbpedia:Person;
    dbpedia:name ""Manuel Hedilla""@es;
    dbpedia:participatedIn ?event .
}
```",6,10,7,3,2,3,2,20,0,0,4,0,0.0,0
917,66,test,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of the father of the child, that is a royalty, of Kamehameha III and child of the father of Keʻelikōlani.",SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childName ?parentName
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Kamehameha IV"" .
  ?parent a dbpedia:Person;
    dbpedia:spouse ?wife .
  ?wife a dbpedia:Person;
    dbpedia:name ""Keʻelikōlani"" .
  ?child a dbpedia:Person;
    dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person;
    dbpedia:name ""Kamehameha III"" .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
508,20,test,"Give me the birthplace of the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun and birthplace of the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for Hu Yukun's commanders in the Second Sino-Japanese War (Chinese Civil War)
SELECT ?birthPlace WHERE {
  ?commander a dbpedia:Person;
    dbpedia:conflict dbpedia:Second_Sino_Japanese_War ;
    dbpedia:role dbpedia:Commander
  FILTER (?commander != ""Hu Yukun"") # Hu Yukun himself is not included
}

# Query for Hayao Tada's commanders in World War II, specifically the Pacific War
SELECT ?birthPlace WHERE {
  ?commander a dbpedia:Person;
    dbpedia:conflict dbpedia:Pacific_War ;
    dbpedia:role dbpedia:Commander
  FILTER (?commander != ""Hayao Tada"") # Hayao Tada himself is not included
}
```",6,13,7,3,2,3,2,20,0,0,3,0,0.0,0
158,18,test,"Give me the entity in the award, that is a country, of the reference to Adelbert Cronkhite and party of the successor, that is a prime minister and an office holder and a politician, of André Tardieu.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find the award given to Adelbert Cronkhite
SELECT ?award WHERE {
  ?person dbpedia:awardedWith ?award .
  ?person dbpedia:hasEntityNamedAfterThem ""Adelbert Cronkhite"" .
}

# Step 2: Determine the country associated with the award
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?country WHERE {
  ?award rdfs:label ?awardLabel .
  ?awardLabel STRLANG:beginsWith ""Country of ""
}

# Step 3: Find the successor of André Tardieu
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?successor WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolderOfOffice dbpedia:Prime_Minister_of_France .
  ?person foaf:name ""André Tardieu"" .
  # Find the successor
  ?successor a dbpedia:Person;
    dbpedia:officeHolderOfOffice ?succeededOffice .
  ?succeededOffice rdfs:label ?succeededOfficeLabel .
  ?succeededOfficeLabel STRLANG:beginsWith ""Prime Minister of ""
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
926,71,test,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of the father of the spouse of Neşerek Kadın and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v8 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v7 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childPerson
WHERE {
  ?childPerson a dbpedia:Person;
    dbpedia:parent dbpedia:Sermi_Kadın ;
    dbpedia:spouse dbpedia:Unknown_person_1 ;
    dbpedia:father dbpedia:Mustafa_III .
  ?childPerson a dbpedia:Royalty .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
715,57,test,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in Rif War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person ?role1 ?officeHolder ?commanderRole ?war WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate [is <date-of-birth>]; # Placeholder for actual birth date
    dbpedia:deathDate [is <date-of-death>]; # Placeholder for actual death date
    dbpedia:officeHolder ?officeHolder .
    ?person dbpedia:president_of_Espana_1933 . # President in 1933 Spanish General Election
    ?person a dbpedia:MilitaryPerson; # Fighter in the Rif War
    dbpedia:participatedInConflict dbpedia:Rif_War .
    ?person dbpedia:commanderOf ?commanderRole .
    ?officeHolder a dbpedia:Office_Holder .
  }
```

This SPARQL query aims to find an individual (`?person`) who fits all the criteria mentioned in the question. It uses properties from the DBpedia ontology to link individuals to their roles and participation in specific events.",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
579,18,test,"Give me the native of the residence, that is English and a settlement, of the resident of Scotland and person born as the birth name of Jane Percy, Duchess of Northumberland.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Jane Percy"" .
  ?person dbpedia:nationality ""Scotland"" .
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
527,19,test,"Give me the actor of the movie, that is a work and English and a television show, with Bernard Bresslaw and author of the work, that is a work and a book, of the host of Hyperland.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v0 . ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor WHERE {
  ?movie a dbpedia:Film;
    dbpedia:mainActor ?actor .
  ?actor a dbpedia:Person;
    dbpedia:roleInTelevisionShow ?televisionShow .
  ?actor a dbpedia:Person;
    rdf:type dbpedia:Author ;
    dbpedia:work dbpedia:Hyperland .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
892,58,test,"Give me the entity in Italy and landmark at elevation of the award of Anna Ishii and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?awardName ?landmarkElevation ?regionName ?settlementName 
WHERE {
  ?award dbpedia:awardedTo ?person .
  ?person rdfs:label ""Anna Ishii""@en .
  ?award a award:Award .
  ?award dbpedia:hasLocation ?location .
  ?location a dbpedia:Place .
  ?location rdfs:label ?locationLabel .
  ?landmark dbpedia:locatedAt ?location .
  ?landmark rdfs:label ?landmarkName .
  FILTER (lang(?locationLabel) = ""it"" ) .
  ?party dbpedia:politicalPartyOf ?politician .
  ?politician rdfs:label ""Andrea Cozzolino""@en .
  ?party a dbpedia:PoliticalParty .
  ?party dbpedia:basedIn ?region .
  ?region a dbpedia:AdministrativeDivision .
  ?region rdfs:label ?regionName .
  ?settlement a dbpedia:Settlement .
  ?settlement rdfs:locatedIn ?region .
  ?settlement rdfs:label ?settlementName
}
```",6,12,7,3,3,3,3,71,0,0,2,0,0.0,0
917,64,test,"Give me the child of Kekūanāoʻa and child of the father of the child, that is a royalty, of Kamehameha III and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v4 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchild WHERE {
  ?parent a dbpedia:Person;
    dbpedia:offspring ?child .
  ?child a dbpedia:Person;
    dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person;
    dbpedia:title ""Mayor of Hawaiian Kingdom"" .
  ?child a dbpedia:Person;
    dbpedia:royalty true .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
129,25,test,"Give me the associated musical artist of Saba (rapper) and associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and professional in the mayor of 1999 West Dunbartonshire Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?musicalArtist1 ?organization
WHERE {
  ?artist1 a dbpedia:Musician; foaf:name ""Saba""@en .
  ?album a dbpedia:Album;
    dbpedia:artist ?musicalArtist1 .
  ?actor a dbpedia:Person; dbpedia:role ""Actor""@en .
  ?movie a dbpedia:Film; dbpedia:producer ?organization .
  ?election a dbpedia:Election; dbpedia:year 1999; dbpedia:office ""Mayor""@en; dbpedia:location ""West Dunbartonshire"" .
  ?actor rdfs:seeAlso ?election .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
892,59,test,Give me the entity in the profession of the true self of Enrico Crolla and landmark at elevation of the award of the member of E-girls.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/elevation> ?v4 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?profession ?elevation
WHERE {
  ?person a dbpedia:Person;
    dbpedia:occupation ?profession .
  ?award a dbpedia:Award ;
    rdfs:label ""Japan Gold Disc Awards""@ja;
    dbpedia:awardedTo ?person .
  ?location a dbpedia:Building, dbpedia:Landmark ;
    dbpedia:locatedIn Japan;
    rdfs:label ?name ;
    geo:elevationMeters ?elevation .
}
```",6,6,7,3,2,3,3,71,0,0,11,0,0.0,0
417,69,test,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the father of Frederick IX of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/property/father> ?v7 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  dbpedia:Frederick_VIII_of_Denmark rdf:type dbpedia:Monarch .
  dbpedia:Alexandrine_of_Mecklenburg-Schwerin rdf:type dbpedia:Royalty .
  dbpedia:Alexandrine_of_Mecklenburg-Schwerin foaf:spouse ?spouse .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
892,62,test,Give me the entity in the profession of the true self of Enrico Crolla and entity in Province of Reggio Emilia and landmark at elevation of the award of the member of E-girls.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v5 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?profession ?province ?landmark
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Enrico Crolla""@it.
  ?person dbpedia:occupation ?profession .
  
  ?city dbpedia:isPartOf ?province .
  
  ?award a award:Award ;
    award:giver ?person ;
    award:recipient ?member ;
    dbpedia:hasLocation ?landmark .
  
  ?member a dbpedia:MusicArtist;
    dbpedia:name ""E-girls""@en.
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
791,56,test,"Give me the predecessor of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_of_antoku , ?predecessor_spouse
WHERE {
  ?antoku a dbpedia:Person;
    dbpedia:monarchTitle ""Emperor of Japan"";
    dbpedia:birthDate ""1182-10-23"";
    dbpedia:deathDate ""1239-04-22"";
    dbpedia:spouse ?spouse .
  ?predecessor_spouse a dbpedia:Person;
    dbpedia:monarchTitle ""Emperor of Japan"";
    dbpedia:birthDate ?predecessor_birthDate;
    dbpedia:deathDate ?predecessor_deathDate .
  ?antoku dbpedia:hasFather ?predecessor .
  ?takakura_spouse a dbpedia:Person;
    dbpedia:monarchTitle ""Empress of Japan"";
    dbpedia:birthDate ?takakura_birthDate;
    dbpedia:deathDate ?takakura_deathDate .
  ?go_daigo a dbpedia:Person;
    dbpedia:monarchTitle ""Emperor of Japan"";
    dbpedia:birthDate ?go_daigo_birthDate;
    dbpedia:father ?go_daigo_father .",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
839,57,test,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of Kevin Russell (musician) and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?charlie_huhn a dbpedia:Person;
    dbpedia:musicalArtist ?charlie_band .
  ?kevin_russell a dbpedia:Person;
    dbpedia:musicalArtist ?kevin_band .
  ?peter_schorowsky a dbpedia:Person;
    dbpedia:musicalArtist ?peter_band .
  ?charlie_band rdfs:subClassOf dbpedia:Band .
  ?kevin_band rdfs:subClassOf dbpedia:Band .
  ?peter_band rdfs:subClassOf dbpedia:Band .
  FILTER (NOT EXISTS { ?person a dbpedia:Person; dbpedia:musicalArtist ?person_band }) 
}
```

This query looks for bands that are subclasses of `dbpedia:Band` and are associated with the musical artists Charlie Huhn, Kevin Russell, and Peter Schorowsky. The filter ensures we only consider bands and not individual musical artists.",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
865,65,test,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?politicianFather
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:nationality ?birthPlace .
  ?person1 dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:name ""Syeda Shahar Banu"" .
  ?child a dbpedia:Person;
    dbpedia:father ?politicianFather .
  ?child dbpedia:mother ?spouse .
  ?child dbpedia:parent ?person1 .
}
```

This query will return the birthplace of Ram Jaipal Singh Yadav and the politician father of the child of Syeda Shahar Banu and Abu Ahmad Abdul Hafiz.",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
917,57,test,"Give me the parent of Albert Kamehameha and child of the father of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/ontology/parent> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parentOfAlbert WHERE {
  ?person a dbpedia:Person;
    dbpedia:father ?fatherOfKamehameha .
  ?fatherOfKamehameha a dbpedia:Person;
    dbpedia:son ?kamehamehaIV .
  ?kamehamehaIV a dbpedia:Person;
    dbpedia:spouse ?spouseOfLeleiohoku .
  ?spouseOfLeleiohoku a dbpedia:Person;
    dbpedia:sister ?keopuolani .
  ?keopuolani a dbpedia:Person;
    dbpedia:parent ?parentOfAlbert
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
353,9,test,"Give me the entity in the country of Moskovsky City District, Nizhny Novgorod and alma mater of the awardee of Medal of the Order ""For Merit to the Fatherland"".","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Moskovsky_City_District,_Nizhny_Novgorod> <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_the_Order_%22For_Merit_to_the_Fatherland%22> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person ?almaMater
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedBy dbpedia:Medal_of_the_Order_for_Merit_to_the_Fatherland .
  ?person geo:locatedIn dbpedia:Moskovsky_City_District , Nizhny_Novgorod .
  ?person dbpedia:almaMater ?almaMater .
}
```",4,4,5,2,2,2,2,9,0,0,5,0,0.0,0
507,62,test,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of the person born as the birth name of Anne V. Coates and professional in Film director, television director.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/property/starring> ?v0 . ?v6 <http://dbpedia.org/ontology/director> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?directorName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthday ""1919-06-17"";
    dbpedia:spouse [ dbpedia:givenName ?anneGivenName ] .
  ?movie a dbpedia:Film; 
    dbpedia:director ?directorName .
  ?movie dbpedia:mainEntityOfVisualWork ?visualWork .
  ?visualWork a dbpedia:Film .
}
```

This query does the following:
- Selects individuals (`?person`) who were born on 1919-06-17.
- From these individuals, selects those who have a spouse with a given name (`?anneGivenName`).
- Identifies films (`?movie`) directed by these individuals.
- Ensures that the selected films are works of visual art (films).",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
976,61,test,"Give me the office of the person born as the birth name of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }",PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?office WHERE { ?person a dbpedia:OfficeHolder; dbpedia:office ?office . ?person a dbpedia:Politician; dbpedia:politicalParty dbpedia:Millet_İttifakı . },6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
926,56,test,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of Mustafa III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandfather ?greatGrandfather
WHERE {
  ?sultan a dbpedia:Monarch;
    dbpedia:monarchy_start ""1839-01-30T00:00:00""^^xsd:date ;
    dbpedia:monarchy_end ""1876-11-23T00:00:00""^^xsd:date .
  ?sultan dbpedia:hasChild ?child;
    ?child a dbpedia:Person;
      dbpedia:birthDate ?birthdate .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent ;
    dbpedia:hasChild ?grandchild .
  ?grandchild a dbpedia:Person;
    dbpedia:birthDate ?grandchild_birthdate .
  ?sultan rdfs:label ""Mustafa III"" .
  FILTER (STRSTARTS (?birthdate, ""1839-01-30T00"") AND STRENDS (?grandchild_birthdate, ""1839-01-30T"")) .
  FILTER (STRSTARTS (?birthdate, ""1839-01-30T"") AND STRENDS (?grandchild_birthdate, ""1839-01-30T"")) .
}
```

This query selects individuals (`?grandfather` and `?greatGrandfather`) who are monarchs (identified by their start and end dates of monarchy), have children, whose children in turn have children (grandchildren) born on January 30, 1839 (the birthdate of Abdulaziz).",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
987,68,test,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?v6 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find Dado Polumenta as an artist
SELECT ?artist WHERE {
  ?artist rdfs:label ""Dado Polumenta""@en .
}

# Step 2: Determine the band he was a part of (also an artist)
PREFIX dbpedia-film: <http://dbpedia.org/ontology/film>
PREFIX dbpedia-artists: <http://dbpedia.org/ontology/artist>

SELECT ?band WHERE {
  ?artist dbpedia-film:starIn ?film .
  ?film dbpedia-artists:performer ?band .
}

# Step 3: Find the birth place of this band
SELECT ?birthPlace WHERE {
  ?band rdfs:label ?bandLabel . 
  ?band dbpedia:birthPlace ?birthPlace .
}

# Step 4: Identify Emir Hadžihafizbegović as an actor
SELECT ?actor WHERE {
  ?actor rdfs:label ""Emir Hadžihafizbegović""@en .
}

# Step 5: Find the film he acted in
SELECT ?film WHERE {
  ?actor dbpedia-film:starIn ?film .
}

# Step 6: Determine the country in which this film is set (operates within Central European Time)
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?country WHERE {
  ?film dbo:isBasedIn ?location .
  ?location rdfs:label ""Country""@en . # Assuming the country name is labeled as ""Country"" in DBpedia
  FILTER (lang(?location) = ""en"") # Ensure we get the English label
  AND ?location dbpedia:timeZone ""Central European Time""^^xsd:string
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
326,18,test,"Give me the resident of the birthplace, that is a state and British, of the professional in Writer and person decedent at the award, that is a country, of Adelbert Cronkhite.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> ""Writer""@en . ?result <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v3 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",5,8,6,3,2,3,2,20,0,100980,1,0.0,0.0,0
417,67,test,"Give me the spouse of Princess Caroline-Mathilde of Denmark and child of the father of the leader, that is a royalty, of Colony of Greenland and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse ?child
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Princess Caroline-Mathilde of Denmark"" .
  ?person rdfs:father dbpedia:Christian_XIX_of_Denmark .
  ?person rdfs:child ?child .
  ?child a dbpedia:Person;
    dbpedia:name ""Princess Ingrid Alexandra of Norway"" .
  ?child foaf:parent ?spouse .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
170,27,test,Give me the entity in Russia and birth place of the awardee of People's Artist of Russia and domain of the profession of John Scholey.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?birthPlace ?professionDomain WHERE { ?person a dbpedia:Person; dbpedia:birthPlace ?birthPlace . ?person a dbpedia:Person; dbpedia:occupation ?profession . FILTER ( LANG(?profession) = 'en' ) . },5,5,6,2,3,2,3,28,0,0,3,0,0.0,0
456,69,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of The Shadow and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Alan Doyle""@en;
    dbpedia:birthPlace ""Canada"";
    dbpedia:role dbpedia:MusicalArtist ;
    dbpedia:alterEgo ""The Shadow""@en ;
    dbpedia:spouse ?spouse ;
    ?spouse a dbpedia:Person;
      dbpedia:name ""Ross Newton""@en .
  ?person a dbpedia:BandMember;
    dbpedia:bandName ?bandName .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
47,62,test,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of the award, that is an award, of Mantu Ghosh and office of Ajoy Mukherjee.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://dbpedia.org/property/governor> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for the office of the commander in Operation Green Hunt
SELECT ?commander_office WHERE {
  ?operation dbpedia:code ""Operation_Green_Hunt"" .
  ?operation dbpedia:startYear 2009 .
  ?operation dbpedia:endYear 2010 .
  ?operation dbpedia:ledBy ?commander .
  ?commander a dbpedia:Person; dbpedia:title ""Chief of Army Staff"" .
}

# Query for the office of Mantu Ghosh
SELECT ?mantu_award_office WHERE {
  ?awardee a dbpedia:Person; dbpedia:name ""Mantu Ghosh"" .
  ?awardee dbpedia:award ""Padma Shri"" .
  ?awardee dbpedia:office ?mantu_award_office .
}

# Query for the office of Ajoy Mukherjee
SELECT ?ajoy_mukherjee_office WHERE {
  ?person a dbpedia:Person; dbpedia:name ""Ajoy Mukherjee"" .
  ?person dbpedia:office ?ajoy_mukherjee_office .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
47,71,test,"Give me the office of the awardee of the entity, that is an award, in India and office of the awardee of the award, that is an award, of Mantu Ghosh and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v8 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v4 . ?v8 <http://dbpedia.org/property/awards> ?v7 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardeeOffice ?commanderOffice
WHERE {
  ?person a dbpedia:Person;
    dbpedia:award_winner ?award .
  ?award a dbpedia:Award ;
    dbpedia:awardee ?awardee .
  ?awardee rdfs:label ""Mantu Ghosh""@en .
  
  ?commander rdfs:label ""Commander in Operation Green Hunt""@en;
    dbpedia:office ?commanderOffice .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
124,68,test,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v5 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person ?warConflict ?awardeeMedal ?commanderDetails
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Egypt"" .
  ?person dbpedia:conflict ?warConflict .
  ?person dbpedia:awardedMedal ?awardeeMedal .
  ?awardeeMedal rdfs:label ""British South Africa Company Medal"" .
  ?commanderDetails a dbpedia:Person;
    dbpedia:birthPlace ""Australia"" .
  ?commanderDetails a dbpedia:MilitaryPerson;
    dbpedia:role ""Commander"" .
  ?commanderDetails dbpedia:associatedUnit ""A Battery, Royal Australian Artillery"" .
  ?person dbpedia:conflict ?warConflict .
  ?person rdfs:label ""Herbert Kitchener, 1st Earl Kitchener"" .
  ?commanderDetails rdfs:label ""Sir Redvers Buller"" .
}
```",8,18,9,3,3,3,3,71,0,0,9,0,0.0,0
826,63,test,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?predecessorOfFather ?successorSpouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father ?father .
  ?father a dbpedia:Person; rdfs:label ""Louis I, Grand Duke of Hesse""@en .
  ?person a dbpedia:Person; dbpedia:birthDate ""1804-03-01""^^xsd:date .
  ?person a dbpedia:Person; dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person; rdfs:label ""Anna Magdalena Appel""@en .
  ?successor a dbpedia:Person; dbpedia:parent ?predecessorOfFather .
  ?successor a dbpedia:Person; rdfs:label ""Prince Friedrich of Hesse and by Rhine""@en .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
715,61,test,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?minister
WHERE {
  ?event dbpedia:Event;
    dbpedia:year 1933;
    dbpedia:country Spain .
  ?minister a dbpedia:OfficeHolder ;
            dbpedia:role ""Minister of the Interior"" .
  ?minister dbpedia:office dbpedia:Government_of_Spain .
}
```

This query looks for events in Spain in 1933 and selects the office holders who were Ministers of the Interior during that period, which indirectly identifies a key figure from the CEDA government.",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
136,9,test,Give me the region coded as the area code of Levenhagen and landmark at elevation of the award of Bret Anthony Johnston.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ?v1 . <http://dbpedia.org/resource/Bret_Anthony_Johnston> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Levenhagen> <http://dbpedia.org/ontology/areaCode> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find Bret Anthony Johnston
SELECT ?person WHERE {
  ?person rdfs:label ""Bret Anthony Johnston""@en .
}

# Step 2: Determine the award given to him
SELECT ?award WHERE {
  ?person dbpprop:awardedWith ?award .
}

# Step 3: Identify the birthplace (Levenhagen)
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
SELECT ?birthPlace WHERE {
  ?person dbpedia:birthPlace ?birthPlace .
  ?birthPlace a geo:Location; rdfs:label ""Levenhagen""@en .
}

# Step 4: Find the landmark and its elevation
SELECT ?landmark ?elevation WHERE {
  ?landmark a dbpedia:Landmark; rdfs:label ?label .
  OPTIONAL { ?landmark geo:hasElevation ?elevation }
  FILTER (lang(?label) = ""en"" )
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
329,26,test,"Give me the entity in United Kingdom and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist) and birthplace of the author of The Tailor and Ansty.",SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person dbo:timePeriodStarts ""British Raj"" .
}",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
216,57,test,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in Igor Bišćan.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v5 . <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

-- Query 1: Sports manager, soccer manager, and soccer player born on 1983-12-20
SELECT ?birthPlace ?team
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1983-12-20"";
    dbpedia:sports_manager ?sportManagerTeam .
  ?person a dbpedia:Person;
    dbpedia:football_manager ?socManagerTeam .
  ?person a dbpedia:Person;
    dbpedia:football_player ?socPlayerTeam .
  ?person dbpedia:memberOf ?team .
}

-- Query 2: Soccer player and manager born on 1983-12-20
SELECT ?birthPlace ?team
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1983-12-20"";
    dbpedia:soccer_player ?socPlayerTeam .
  ?person a dbpedia:Person;
    dbpedia:sports_manager ?sportManagerTeam .
  ?person a dbpedia:Person;
    dbpedia:football_manager ?socManagerTeam .
  ?person dbpedia:memberOf ?team .
}

-- Query 3: Organization and sports club that is a soccer club
SELECT ?organization ?clubName ?team
WHERE {
  ?organization a dbpedia:Organization;
    dbpedia:type ""sports club"";
    dbpedia:name ""Džemal Berberović"" .
  ?organization dbpedia:hasMember ?player .
  ?player a dbpedia:Person;
    dbpedia:soccer_player ?socPlayerTeam .
  ?player a dbpedia:Person;
    dbpedia:sports_manager ?sportManagerTeam .
  ?player a dbpedia:Person;
    dbpedia:football_manager ?socManagerTeam .
  ?player dbpedia:memberOf ?team .
}",6,15,7,3,3,3,3,71,0,0,1,0,0.0,0
987,60,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/timeZone> ?v5 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country ?sportEvent ?band ?artistInfo
WHERE {
  ?country dbpedia:locatedIn <http://www.w3.org/2001/XMLSchema#geoPoint> [ geo:coordinates ""42.3769° N, 2.9818° W"" ] .
  ?country rdfs:label ""Canicosa de la Sierra""@es .
  ?sportEvent a dbpedia:SportingEvent; dbpedia:sport <http://www.w3.org/2001/XMLSchema#sport> ?sport .
  ?band a dbpedia:Band; dbpedia:artist ?artist .
  ?band dbpedia:bandMember ?artistInfo .
  ?artistInfo a dbpedia:Artist .
  ?artistInfo rdfs:label ""Dado Polumenta""@es .
  ?sportEvent dbpedia:heldInCountry ?country .
}
```

This SPARQL query will:
- Identify the country Canicosa de la Sierra.
- Find sports events held in that country.
- Link the band Dado Polumenta to their artist information.
- Ensure that the band is also an artist.",6,11,7,3,2,3,3,71,0,0,2,0,0.0,0
976,63,test,"Give me the office of the person born as Mehmet Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/leader> ?v1 . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v5 . ?v0 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v5 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }",{sparql_query},7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
976,64,test,"Give me the office of Meral Akşener and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/leader> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?officeOfAkshener ?kiliPartyLeader ?bostanci
WHERE { 
  ?person1 a dbpedia:Person; dbpedia:name 'Naci Bostancı' . 
  ?person1 dbpedia:birthName ?birthName . 
  ?party a dbpedia:PoliticalParty ; dbpedia:leader ?kiliPartyLeader . 
  ?party dbpedia:member ?person1 . 
  ?person2 a dbpedia:Person; foaf:name 'Meral Akśfener' . 
  ?party dbpedia:officeHolder ?officeOfAkshener . 
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
18,24,test,"Give me the alumnus of the figure known, that is an educational institution, as Saints and parent of the professional in Actress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alumnusLabel ?parentName
WHERE {
  ?alumnus a dbpedia:EducationalInstitution ;
            dbpedia:hasAlumni ?alumnus .
  ?alumnus rdfs:label ?alumnusLabel .
  ?child a dbpedia:Person;
            dbpedia:hasParent ?parent .
  ?parent rdfs:label ?parentName .
  ?alumnus ns:inDataset dbo.
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
281,28,test,"Give me the awardee of the award of Alfred Warden and commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v5 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee
WHERE {
  ?conflict a dbpedia:Conflict;
    dbpedia:startYear 1914;
    dbpedia:endYear 1918. # World War I
  UNION
  ?conflict a dbpedia:Conflict;
    dbpedia:startYear 1939;
    dbpedia:endYear 1945. # World War II
  ?awardee a dbpedia:Person;
    dbpedia:awarded ?conflict .
  ?awardee dbpedia:birthPlace ""India"" . # Awardee is from India (assumption based on award context)
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
382,20,test,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler and landmark at elevation of the award of the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?v4 <http://dbpedia.org/property/awards> ?v5 . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?momen a dbpedia:Person;
    dbpedia:role [ rdf:type skos:Concept ; rdfs:label ""Manager"" ] .
  ?kubler a dbpedia:Person;
    dbpedia:role [ rdf:type skos:Concept ; rdfs:label ""Player"" ] .
  ?combes a dbpedia:Person;
    dbpedia:role [ rdf:type skos:Concept ; rdfs:label ""Coach"" ] .
  ?momen dbpedia:interactedWith ?kubler.
  ?momen dbpedia:interactedWith ?combes.
  OPTIONAL { ?momen dbpedia:birthPlace ?birthPlace }
  OPTIONAL { ?momen dbpedia:deathPlace ?deathPlace }
}
```

This SPARQL query aims to find the birthplace and death place of AK Abdul Momen by looking for individuals who have the role ""Manager"" (as per the question's context) and are connected to Lukas Kübler and Harry Combes through their roles as ""Player"" and ""Coach"" respectively. The `OPTIONAL` clauses allow for flexibility in case some of the required information is not directly available.",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
267,20,test,"Give me the coach of the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season and person born on the birth date of the reference to Dan Cathy.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthDate> ?v5 . ?result <http://dbpedia.org/ontology/birthDate> ?v5 . ?v1 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://dbpedia.org/ontology/coach> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbpedia-sport: <http://dbpedia.org/ontology/sports/>

# Query to find players of Tractor S.C. during the 2020–21 season and their coaches
SELECT ?player ?coach
WHERE {
  ?player a dbpedia-sport:SoccerPlayer;
    dbpedia-sport:club dbpedia:sportTeamProperty[foaf:name ""Tractor S.C.""];
    dbpedia-sport:season ""2020-21"" .
  ?player dbpprop:coach ?coach .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
865,69,test,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of the child of the father of Abul Maal Abdul Muhith and native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v7 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find the child of Abu Ahmad Abdul Hafiz who is a politician.
SELECT ?child WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?abuahmad .
  ?child dbpedia:occupation dbpedia:Politician .
  FILTER (STRSTARTS (?child, ""Abu"")) # Assuming the child's name starts with ""Abu""
}

# Step 2: Find the father of that child.
SELECT ?father WHERE {
  ?father a dbpedia:Person;
    dbpedia:parent ?child .
}

# Step 3: Identify Abul Maal Abdul Muhith's father.
SELECT ?grandfather WHERE {
  ?grandfather a dbpedia:Person;
    dbpedia:parent ?abulmaal .
}

# Step 4: Determine the child of that father.
SELECT ?child_of_grandfather WHERE {
  ?child_of_grandfather a dbpedia:Person;
    dbpedia:parent ?grandfather .
}

# Step 5: Find the birthplace (native residence) of that child's father.
SELECT ?birthPlace WHERE {
  ?child_of_grandfather a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
573,58,test,"Give me the person decedent at Massachusetts and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find John Quincy Adams as an author and his parent(s)
SELECT ?parent WHERE {
  dbpedia:John_Quincy_Admits CREATE :work .
  ?author a dbpedia:Person; dbpedia:hasParent ?parent .
}

# Step 2: Find politicians and office holders who are parents
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?politician WHERE {
  ?politician a dbpedia:OfficeHolder;
    dbpedia:isPolitician TRUE .
  ?politician rdf:type dbpedia:Person ;
    dbpedia:hasParent ?parent
}

# Step 3: Check if any of these parents died in Massachusetts
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
SELECT ?parent WHERE {
  ?parent a dbpedia:Person;
    dbpedia:deathPlace ?place .
  ?place a geo:Location; geo:locatedIn dbpedia:Massachusetts .
}

# Step 4: Find the residence (death place) of William J. Phelan
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?deathPlace WHERE {
  dbpedia:William_J._Phelan a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?deathPlace a dbpedia:Location; dbpedia:type ""Settlement"" .
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
507,56,test,Give me the spouse of the person born as Anne Voase Coates and professional in the profession of the person born on 1966-02-18 and director of Entertaining Mr Sloane (film).,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Anne Voase Coates"" .
  ?person dbpedia:spouse ?spouse .
  ?director a dbpedia:Person;
    dbpedia:name ""Michael Winner"" .
  ?film a dbpedia:Film;
    dbpedia:title ""Entertaining Mr Sloane (film)"" .
  ?actor a dbpedia:Person;
    dbpedia:name ""Anthony Andrews"" .
  ?actor dbpedia:roleInFilm ?film .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
216,59,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?playerCoach WHERE {
  ?playerCoach a dbpedia:SoccerPlayer, dbpedia:SportsManager;
    dbpedia:birthPlace ?birthPlace .
  ?playerCoach a dbpedia:SoccerManager;
    dbpedia:managedTeam dbpedia:CroatiaU21.
}
```",6,14,7,3,2,3,3,71,0,0,3,0,0.0,0
582,69,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v7 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/ontology/team> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?nickname ?residence
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:nickname ""Samurai Blue"" .
  ?person2 a dbpedia:Person;
    dbpedia:name ""Hirotaka Sugawara"" .
  ?person3 a dbpedia:Person;
    dbpedia:name ""Masami Nagasawa"" ;
    dbpedia:role dbpedia:SoccerManager ;
    dbpedia:role dbpedia:SportsManager .
  ?person2 foaf:residence ?residence .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
443,26,test,Give me the landmark at elevation of the award of William Shepherd and birthplace of the work of yes and birthplace of Ulf Lundell.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> ""yes""@en . ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

-- For the landmark at elevation of the award of William Shepherd
SELECT ?location WHERE {
  ?award dbpedia:awardedTo William_S._Piper .
  ?award rdfs:seeAlso ?location .
  FILTER (xsd:integer-value(?elevation) > 0)
}

-- For the birthplace of the work of Yes
SELECT ?birthPlace WHERE {
  ?band dbpedia:hasBandMember [ dbpedia:name ""Yes"" ] .
  ?band dbpedia:originallyFrom ?birthPlace .
}

-- For the birthplace of Ulf Lundell
SELECT ?birthPlace WHERE {
  ?artist dbpedia:hasAlbum ""Ulf Lundell"" .
  ?artist dbpedia:birthPlace ?birthPlace .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
892,61,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and landmark at elevation of the award of the member of E-girls.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?region ?landmark
WHERE {
  ?party dbpedia:powers_and_offices dbpedia:has_political_party [ dbpedia:name ""Five Star Movement"" ] .
  ?person dbpedia:member_of dbpedia:E_girls_Singers .
  ?person dbpedia:awardedWith dbpedia:Landmark .
  ?region rdfs:label ""Lombardy"" .
  ?landmark a dbpedia:Building .
}
```",6,12,7,3,2,3,3,71,0,0,2,0,0.0,0
933,64,test,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to Alan Warner and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for the band of The Ramong Sound
SELECT ?bandName WHERE {
  ?band a dbpedia:Band; rdfs:label ?bandName .
  ?band dbpedia:performer [ rdf:type dbpedia:Musician ] .
  ?band ns:instance [ a dbpedia:MusicGroup; rdfs:label ""The Ramong Sound"" ] .
}

# Query for Alan Warner's bands or groups (interpretation needed)
SELECT ?groupName WHERE {
  ?person a dbpedia:Person; foaf:name ""Alan Warner"" .
  ?person dbpedia:birthDate [ rdf:type dbpedia:Date; value ""1947-04-21"" ] .
  ?person ns:memberOf ?group .
  ?group a dbpedia:Organization .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
888,19,test,"Give me the commander in the force, that is a societal event and an event, of Serhiy Kotenko and awardee of the award of the commander in 2022 Ukrainian eastern counteroffensive.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . ?v0 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person ?role WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedBy dbpedia:Event ;
    dbpedia:awardType dbpedia:Commander ;
    dbpedia:participatedInEvent dbpedia:Event .
  ?person ns:name ""Serhiy Kotenko"" .
  FILTER (STRSTARTS (?person, ""Serhiy "") AND STRENDS (?person, ""Kotenko""))
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
791,65,test,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchildSpouse
WHERE {
  ?child1 a dbpedia:Person;
    dbpedia:parent [ owl:sameAs ?emperorGoShirakawa] .
  ?child1 dbpedia:officeHolder true .
  ?child1 dbpedia:royalty true .
  
  ?grandchild a dbpedia:Person;
    dbpedia:parent ?child1;
    dbpedia:parent [ owl:sameAs ?emperorTakakura] .
  ?grandchild dbpedia:officeHolder true .
  ?grandchild dbpedia:royalty true .

  ?grandchildSpouse a dbpedia:Person;
    dbpedia:spouse ?grandchild .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
965,68,test,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . ?v6 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parentName ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1854-05-24"" .
  ?person dbpedia:spouse [ a dbpedia:Person; dbpedia:name ""Spouse Name"" ] .
  ?grandparent a dbpedia:Person;
    dbpedia:child ?person ;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace ;
    dbpedia:deathPlace ?deathPlace .
  ?grandparent dbpedia:parent ?parentOfLouise .
  ?parentOfLouise a dbpedia:Noble .
  ?person dbpedia:spouse [ a dbpedia:Person; dbpedia:name ""Spouse Name"" ] .
}
```",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
865,64,test,"Give me the father of the child of the father of Abul Maal Abdul Muhith and native of the residence, that is a country, of the person decedent at Patna and father of AK Abdul Momen.",SELECT ?result WHERE { <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v6 . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"Given the reasoning, the SPARQL query simplifies to:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace dbpedia:Patna .
  ?person dbpedia:father ?father .
}
```

This query looks for a person born in Patna and identifies their father.",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
715,59,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person ?militaryConflict
WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality ""Morocco"" .
  ?person a dbpedia:OfficeHolder ;
    dbpedia:office dbpedia:MayorOfSpain ;
    dbpedia:politicalAffiliation ""Spanish Socialist Workers' Party (PSOE)"" .
  ?person a dbpedia:Politician ;
    dbpedia:presidency_start_date ""1933-01-01""^^xsd:date .
  ?person dbpedia:participatedInMilitaryConflict ?militaryConflict .
}
```",6,10,7,3,2,3,3,71,0,0,4,0,0.0,0
122,8,test,"Give me the band of the reference, that is a musical artist and an artist, to Gift of Gab and band member of Lyrics Born.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Gift of Gab""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Lyrics_Born> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:name ""Gabriel Glenwood Barnes"" .
  ?person2 a dbpedia:Person;
    dbpedia:name ""Oak Felder"" .
  ?person1 foaf:member ?band .
  ?person2 foaf:member ?band .
}
AND
{
  ?band rdfs:label ?bandLabel .
}",3,5,4,2,2,2,2,9,0,0,2,0,0.0,0
976,56,test,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as the birth name of Naci Bostancı and office of Meral Akşener.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?officeSpeaker ?birthOffice ?deathOffice
WHERE {
  ?speaker a dbpedia:Politician;
    dbpedia:office dbpedia:Speaker_of_the_Grand_National_Assembly_Turkey .
  ?person a foaf:Person;
    foaf:name ""Naci Bostancı""@en;
    dbpedia:birthPlace ?birthPlace .
  ?person a foaf:Person;
    dbpedia:deathPlace ?deathPlace .
  ?officeSpeaker foaf:worksFor ?person .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
507,66,test,"Give me the professional in the profession of the person born on 1966-02-18 and spouse of the person born as Anne Voase Coates and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/director> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v1 <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?personName ?profession
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1966-02-18"" ;
    dbpedia:spouse ?spouseName .
  ?spouseName a dbpedia:Person ;
    rdfs:label ""Anne Voase Coates"" .
  ?person a dbpedia:FilmDirector ;
    dbpedia:filmTitle ?movieTitle ;
    dbpedia:star ?starName .
  ?starName a dbpedia:Person;
    rdfs:label ""Beryl Reid"" .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
98,26,test,"Give me the entity in the region, that is a country, of Philippine Standard Time and birth place of Paolo Ballesteros and region of the time zone of Lopez Jaena.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?timeZoneRegion
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:residenceTimezone ?timeZoneRegion .
}
```",5,6,6,2,3,2,3,28,0,0,2,0,0.0,0
465,56,test,"Give me the successor of the child of Alfonso I d'Este and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor_of_charles_orlando WHERE {
  ?charles_orlando a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?child a dbpedia:Person;
    dbpedia:isSuccessorOf ?successor_of_charles_orlando .
}

```

This query will find the person who is the successor of Charles Orlando (Dauphin of France) in terms of royalty.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
273,18,test,Give me the spouse of the child of the child of Edoardo Agnelli (1831-1871) and parent of the alumnus of University of Turin.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?childSpouseParent
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasChild ?grandchild .
  ?grandchild a dbpedia:Person;
    dbpedia:alumniOfUniversity dbpedia:University_of_Turin .
  ?child foaf:spouse ?spouse .
  ?child foaf:parent ?parent
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
124,59,test,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?opposingMilitaryForce
WHERE {
  ?battery a dbpedia:Battery; rdfs:label ""A"" Battery, Royal Australian Artillery""@en .
  ?awardee a dbpedia:Person; dbpedia:awardedBritishSouthAfricaCompanyMedal true .
  ?war a dbpedia:Event; dbpedia:name ""Second Boer War""@en .
  ?battery participatedIn ?war.
  ?war hasParticipant ?opposingMilitaryForce .
}
```",6,14,7,3,2,3,3,71,0,0,10,0,0.0,0
791,68,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v7 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royaltySpouse ?child1 ?officeHeldByChild1
WHERE {
  ?emperor a dbpedia:Emperor;
    dbpedia:fatherOf ?child1 .
  ?child1 a dbpedia:Person;
    dbpedia:parent ?royaltySpouse .
  ?child1 a dbpedia:Person;
    dbpedia:offices ?officeHeldByChild1 .
  ?officeHeldByChild1 a dbpedia:OfficeHolder;
    dbpedia:isRoyalty true .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
976,71,test,"Give me the office of the person born as the birth name of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v8 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/property/leader> ?v5 . ?v2 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person ?role
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""British Raj"" .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ""Within British Raj period"" .
  OPTIONAL { 
    ?person dbpedia:pseudonym ""AK Abdul Momen"" . 
    ?person rdfs:label ?roleLabel .
  }
  FILTER (lang(?roleLabel) = ""en"")  # Filter results in English to match historical context
}
```",9,17,10,3,3,3,3,71,0,0,1,0,0.0,0
582,65,test,"Give me the figure known as the nickname of Japan national football team and reference to the residence of Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . },"SELECT ?nickname ?father_details
WHERE {
  ?team a dbpedia:FootballTeam ;
            dbpedia:name ""Japan national football team"" ;
            dbpedia:nickname ?nickname .
  ?person a dbpedia:Person ;
            dbpedia:name ""Kazuaki Nagasawa"" ;
            dbpedia:parent ?parent ;
            dbpedia:role dbpedia:SoccerManager;
            dbpedia:birthDate [isDateOf] ?birthdate ;
            dbpedia:sport dbpedia:Soccer .
  ?parent a dbpedia:Person ;
           dbpedia:name ""Kazuaki Nagasawa, Sr."" ;
           dbpedia:role dbpedia:Athlete .
  ?person a dbpedia:Person ;
           dbpedia:child ?child ;
           dbpedia:name ""Hirotaka Sugawara"" .
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
216,66,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?playerCoach WHERE {
  ?playerCoach a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?playerCoach a dbpedia:SportManager;
    dbpedia:footballTeam ?team .
  ?team rdfs:label ""Bosnia and Herzegovina national under-18 football team""@en .
  ?playerCoach a dbpedia:FootballPlayer;
    dbpedia:footballTeam ?team .
  ?playerCoach a dbpedia:SportManager;
    dbpedia:footballTeam ?anotherTeam .
  ?anotherTeam rdfs:label ""Croatia national under-21 football team""@en .
  ?playerCoach dbpprop:deathPlace ?deathPlace .
  FILTER (LANG(?deathPlace) = ""en"")
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
281,27,test,"Give me the awardee of the award of Alfred Warden and commander in New Guinea campaign and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee
WHERE {
  ?award dbpedia:Award ;
    rdfs:label ""Alfred Warden Award"" .
  ?campaign dbpedia:MilitaryConflict ;
    dbpedia:name ""New Guinea campaign"" .
  ?recipient dbpedia:Person ;
    dbpedia:awarded ?award ;
    dbpedia:participatedIn ?campaign .
}
```

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee
WHERE {
  ?award dbpedia:Award ;
    rdfs:label ""Lawrence Moore Cosgrave Award"" .
  ?conflict dbpedia:MilitaryConflict ;
    dbpedia:name ""Military conflict"" . # Placeholder for the actual name of the conflict
  ?recipient dbpedia:Person ;
    dbpedia:awarded ?award ;
    dbpedia:participatedIn ?conflict .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
236,19,test,"Give me the party member of the administration of the reference, that is an office holder and a politician, to James Madison and party member of the administration, that is an organisation, of John Adams.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/party> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for James Madison's administration party member (office holder and politician)
SELECT ?person WHERE {
  ?person a dbpedia:OfficeHolder;
    dbpedia:politicalParty dbpedia:Democratic_Republican_Party ;
    dbpedia:serveInOffice [ dbpedia:president dbpedia:James_Madison ]
}

# Query for John Adams' administration party member (organization and associated with Federalist Party)
SELECT ?organization WHERE {
  ?organization a dbpedia:Organization;
    dbpedia:politicalParty dbpedia:Federalist_Party ;
    dbpedia:activePeriod [ dbpedia:startYear 1797; dbpedia:endYear 1801 ]
    [ dbpedia:president dbpedia:John_Adams ]
}
```",5,8,6,3,2,3,2,20,0,0,19,0,0.0,0
826,59,test,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?grandParent .
  ?grandParent a dbpedia:Person;
    dbpedia:name ""Louis I of France"" .
  ?child dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:name ""Johann Georg II, Duke of Saxe-Weimar"" .
  ?child dbpedia:child ?successor .
  ?successor a dbpedia:Royalty .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
170,26,test,Give me the entity in the work of International Energy Agency and birth place of Era Ziganshina and domain of the profession of John Scholey.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v1 . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}

UNION

PREFIX iea: <http://www.iea.org/Organization>
SELECT ?work WHERE {
  ?work a iea:Report; iea:isAbout ""International Energy Agency"" .
}

UNION

PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?domain WHERE {
  ?person a dbo:Person;
    dbo:name ""John Scholey"";
    dbo:occupation ""British colonial administrator in India (during British Raj)"";
    dbo:workedIn ?domain .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
456,65,test,"Give me the spouse of the actor of Pacific Drive and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and band of the band, that is a musical artist, of Dean Brody.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorSpouseBand
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:role dbpedia:The_Shadow ;
    dbpedia:birthPlace ?actorBirthPlace .
  ?actor foaf:spouse ?actorSpouse .
  ?actorSpouse a dbpedia:Person;
    dbpedia:memberOf dbpedia:Dean_Brody_band .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
791,63,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of Emperor Takakura.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v3 <http://dbpedia.org/ontology/spouse> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouseSpouse AS ?royaltySpouse, ?child AS ?royaltyChild, ?precedessorOfChild AS ?precedessorOfRoyaltyChild
WHERE {
  ?emperor dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person; dbpedia:isRoyalPerson true .
  
  ?child a dbpedia:Person; dbpedia:parent ?emperor .
  ?child a dbpedia:Person; dbpedia:isRoyalty true .
  
  ?precedessorOfChild a dbpedia:Person; dbpedia:parent ?child .
  ?precedessorOfChild a dbpedia:Person; dbpedia:isRoyalty true .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
417,63,test,"Give me the child of the father of Frederick IX of Denmark and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . }","SELECT ?child WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?grandfather .
  ?grandfather a dbpedia:Person;
    dbpedia:name ""Knud, Hereditary Prince of Denmark"" ;
    dbpedia:spouse [ a dbpedia:Person; dbpedia:name ""Princess Louise of Sweden"" ] .
  ?child a dbpedia:Royalty .
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
124,63,test,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander
WHERE {
  ?battery a dbpedia:Battery;
    dbpedia:unitName ""A Battery, Royal Australian Artillery"";
    dbpedia:partOfMilitaryUnit ?militaryUnit .
  ?militaryUnit a dbpedia:MilitaryUnit;
    dbpedia:commander ?commander .
  OPTIONAL { ?militaryUnit rdfs:seeAlso <http://dbpedia.org/ontology/MilitaryUnit> }
}
```",7,17,8,3,3,3,3,71,0,0,9,0,0.0,0
456,62,test,"Give me the band of Alan Doyle and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://dbpedia.org/property/starring> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName ?alterEgo
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Canada"";
    dbpedia:deathPlace ""Not specified"" ; # Assuming Alan Doyle is still alive
    dbpedia:role dbpedia:The_Shadow_1950s_series ;
    dbpedia:actor ""William Hutt"" .
  ?band dbpedia:genre ""Rock"" ;
    dbpedia:bandName ?bandName ;
    dbpedia:alterEgo ?alterEgo .
  ?person rdfs:member ?band.
}
```

This SPARQL query attempts to find a person (Alan Doyle) who is associated with the role of Lamont Cranston from ""The Shadow"" radio series, and then links that person to a band (Great Big Sea) with an alter ego. The query assumes that Alan Doyle was born in Canada and does not specify his death place as he is still alive.",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
417,68,test,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v4 <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  dbpedia:Frederick_IX_of_Denmark a dbpedia:Monarch;
    dbpedia:monarchSpouse ?spouse .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
839,65,test,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of the band, that is a musical artist, of Charlie Huhn.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/bandMember> ?v6 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band1 ?band2 ?band3
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:musicalArtist ?band1 .
  ?person2 a dbpedia:Person;
    dbpedia:memberOf dbpedia:Band ;
    rdfs:label ""Peter Schorowsky""@en .
  ?person3 a dbpedia:Person;
    dbpedia:musicalArtist ?band3 .
  ?person3 a dbpedia:Person;
    dbpedia:memberOf dbpedia:Band ;
    rdfs:label ""Charlie Huhn""@en .
}",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
124,65,test,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?militaryForce1 ?conflict1 ?militaryForce2 ?conflict2 ?awardee
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:role ""Herbert Kitchener, 1st Earl Kitchener"";
    dbpedia:militaryConflict ?conflict1 .
  ?person2 a dbpedia:Organization;
    dbpedia:name ""A Field Battery, Royal Australian Artillery"";
    dbpedia:partOfMilitaryUnit ?militaryForce2 .
  ?conflict1 a dbpedia:MilitaryConflict;
    dbpedia:startYear 1884.
    dbpedia:endYear 1885.
  ?person3 a dbpedia:Person;
    dbpedia:role ""awardee of British South Africa Company Medal"";
    dbpedia:militaryConflict ?conflict2 .
  ?conflict2 a dbpedia:MilitaryConflict;
    dbpedia:startYear 1880.
    dbpedia:endYear 1881.
}
```",7,14,8,3,3,3,3,71,0,0,9,0,0.0,0
715,58,test,"Give me the commander in the force of Francisco Largo Caballero and commander in Rif War and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander1 ?commander2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:militaryRole ""Commander in Rif War"" .
  ?person1 dbpedia:associatedOrganization [ a dbpedia:Organization; rdfs:label ""Spanish Army"" ] .
  ?person2 a dbpedia:Person;
    dbpedia:militaryRole ""Commander in the force of Francisco Largo Caballero"" .
  ?person2 dbpedia:associatedOrganization [ a dbpedia:Organization; rdfs:label ""Government Agency or Organization"" ] .
  ?person1 foaf:organizationMember ?person2 .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
212,9,test,"Give me the birthplace of the professional, that is a musical artist and an artist, in Singer, rapper, CEO, Facilities and Project Manager and birthplace of the professional in .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/occupation> ""Singer, rapper, CEO, Facilities and Project Manager""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:role dbpedia:Singer ;
    dbpedia:role dbpedia:Rapper ;
    dbpedia:role dbpedia:CEO ;
    dbpedia:role dbpedia:FacilitiesManager ;
    dbpedia:role dbpedia:ProjectManager .
  FILTER (lang(?person) = ""en"")  # Assuming we are looking for information in English
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
791,66,test,"Give me the spouse of the spouse, that is a royalty, of Emperor Takakura and predecessor of the child of Emperor Takakura and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v6 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?wife ?royaltyChild
WHERE {
  ?emperor a dbpedia:Emperor;
    dbpedia:spouse ?wife .
  ?wife a dbpedia:Person;
    dbpedia:isRoyalty true .
  ?child a dbpedia:Person;
    dbpedia:father ?emperor;
    dbpedia:birthsInRole dbpedia:HeirApparent ;
    dbpedia:role dbpedia:Emperor .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
507,69,test,"Give me the professional in the profession of the person born on 1966-02-18 and spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v7 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?professional
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1966-02-18"" .
  ?person rdfs:spouse [ dbpedia:givenName ""Anne V."" ; dbpedia:surname ""Coates"" ] .
  ?movie a dbpedia:Film; 
    dbpedia:director ?professional .
  ?movie dbpedia:featuresActress Beryl_Reid .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
417,62,test,"Give me the child of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . }","Given the reasoning steps, the corresponding SPARQL query would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childName
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:spouse Alexandrine_of_Mecklenburg-Schwerin .
  ?child a dbpedia:Person;
    dbpedia:childOf ?parent ;
    dbpedia:rank ""Royalty"" .
  ?child a dbpedia:Person;
    dbpedia:father Frederik_VIII_of_Denmark .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
926,59,test,Give me the father of the father of the spouse of Neşerek Kadın and successor of the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find Neşerek Kadın's spouse
SELECT ?spouseName WHERE {
  dbpedia:Neşerek_Kadın a dbpedia:Person;
    dbpedia:sibling [ dbpedia:hasSpouse ?spouseName ]
}

# Step 2: Determine the father of Neşerek Kadın's spouse
SELECT ?fatherName WHERE {
  ?spouseName a dbpedia:Person;
    dbpedia:parent ?parent
}
UNION {
  SELECT ?fatherName WHERE {
    ?parent a dbpedia:Person;
      dbpedia:hasChild ?child
    }
    FILTER (?child = ?spouseName)
  }
}

# Step 3: Identify Şermi Kadın's spouse
SELECT ?spouseName WHERE {
  dbpedia:Şermi_Kadın a dbpedia:Person;
    dbpedia:sibling [ dbpedia:hasSpouse ?spouseName ]
}

# Step 4: Determine the child of Şermi Kadın's spouse
SELECT ?childName WHERE {
  ?spouseName a dbpedia:Person;
    dbpedia:hasChild ?child
}

# Step 5: Find the successor (likely a son) of that child
SELECT ?successorName WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasSibling ?sibling
}
UNION {
  SELECT ?successorName WHERE {
    ?sibling a dbpedia:Person;
      dbpedia:gender ""male""
    }
  }
}

# Combine all results to get the final answer
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
36,27,test,Give me the actor of Being Mrs Elliot and person born in the birth year of Deanne Bray and person born as the birth name of Ayo Makun.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Finding the actor of ""Being Mrs Elliot""
SELECT ?actor WHERE {
  ?series dbpprop:hasMainCharacter ?actor .
  ?series rdfs:label ""Being Mrs Elliot"" .
}

# Person born in the birth year of Deanne Bray (1969)
PREFIX dbr: <http://dbpedia.org/ontology/#DBpediaSchema>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?birthPlace WHERE {
  ?person dbr:isPersonOfDeanne_Bray .
  ?person dbpprop:birthday ""1969-01-01""^^xsd:date .
  ?person rdfs:label ?name .
  FILTER (?name = ""Deanne Bray"") .
}

# Person born as the birth name of Ayo Makun
SELECT ?birthName WHERE {
  ?person dbr:isPersonOfAyo_Makun .
  ?person foaf:name ?birthName .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
926,60,test,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of the father of the spouse of Neşerek Kadın.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childName ?royaltyTitle WHERE {
  ?person a dbpedia:Person;
    dbpedia:father dbpedia:Mustafa_III .
  ?person rdfs:label ?childName .
  ?person dbpedia:royaltyTitle ?royaltyTitle .
  FILTER (NOT EXISTS { 
    ?grandchild a dbpedia:Person;
      dbpedia:parent ?person ;
      dbpedia:royaltyTitle ""Royal"" 
  })
}
```

This SPARQL query looks for individuals (`?person`) who are children of Mustafa III (`dbpedia:Mustafa_III`), have a `dbpedia:royaltyTitle`, and whose children (`?grandchild`) do not have a `dbpedia:royaltyTitle`. This will help us identify children who are royals but do not have royal offspring, ensuring we find the spouse with a non-royal father.",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
124,56,test,"Give me the military force of Battle of Tamai and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find the person born on 1850-06-24 who was a commander in the war involving A Field Battery, Royal Australian Artillery.
SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:dateOfBirth ""1850-06-24"" ;
    dbpedia:role dbpedia:CommanderInMilitaryConflict .
  ?person dbpedia:militaryConflictInvolvement dbpedia:A Field Battery, Royal Australian Artillery .
}

# Step 2: Determine the military force involved in the Battle of Tamai.
SELECT ?militaryForce WHERE {
  ?battle a dbpedia:Battle;
    dbpedia:name ""Battle of Tamai"" .
  ?battle dbpedia:militaryForce ?militaryForce .
}

# Step 3: Link the commander from step 1 with the military force of the Battle of Tamai.
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
CONSTRUCT {
  ?commander dbpedia:militaryForceInBattle [ rdf:resource ""urn:dbpedia:<PRESIDIO_ANONYMIZED_URI>"" ] .
}
WHERE {
  ?person a dbpedia:Person;
    dbpedia:dateOfBirth ""1850-06-24"" ;
    dbpedia:role dbpedia:CommanderInMilitaryConflict .
  ?person dbpedia:militaryConflictInvolvement dbpedia:A Field Battery, Royal Australian Artillery .
  ?battle a dbpedia:Battle;
    dbpedia:name ""Battle of Tamai"" ;
    dbpedia:militaryForce ?militaryForce .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
874,20,test,"Give me the band of the band member of the band, that is an organisation, of Mark Read (singer) and band of the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?singer a dbpedia:Musician;
    dbpedia:associatedBand ?band .
  ?band rdfs:label ?bandName .
  FILTER (lang(?bandName) = ""en"")  # Limit results to English language
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
124,60,test,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1850-06-24""^^xsd:date;
    dbpedia:deathDate ?deathDate .
  ?person dbo:militaryConflict dbpedia:Boer_War .
  ?battery a dbpedia:Artillery_Battery;
    dbpedia:unitName ""A Battery, Royal Australian Artillery"";
    dbpedia:commander ?commander .
}
```",6,13,7,3,2,3,3,71,0,0,9,0,0.0,0
456,60,test,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and band of the band, that is a musical artist, of the band of Alan Doyle.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actorName ?spouseName
WHERE {
  ?actor dbpedia:role [ dbpedia:film ""The Rocker"" ] .
  ?actor dbpedia:role [ dbpedia:televisionSeries ""Canadian Bacon"" ] .
  ?actor a dbpedia:Person ;
    dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
917,61,test,"Give me the child of the father of the spouse, that is a royalty, of Leleiohoku I and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child1 ?royaltyStatus1, ?child2 ?royaltyStatus2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:father dbpedia:Kamehameha_I .
  ?person1 dbpedia:spouse ?spouse1 .
  ?person2 a dbpedia:Person;
    dbpedia:father ?person1 .
  ?person2 a dbpedia:Royalty .
  ?child1 a dbpedia:Child; dbpedia:parent ?person1 .
  ?child2 a dbpedia:Child; dbpedia:parent ?person2 .
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
417,65,test,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?result <http://dbpedia.org/property/father> ?v6 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royaltyChild
WHERE {
  ?leader a dbpedia:OfficeHolder;
    dbpedia:office ""Governor of Colony of Greenland"" .
  ?father a dbpedia:Person;
    dbpedia:parent ?leaderParent .
  ?childOfLeader a dbpedia:Person;
    dbpedia:child ?royaltyChild .
  ?grandDuke a dbpedia:Person;
    dbpedia:parent ?father .
  ?grandDuke a dbpedia:Royalty .
  ?mother a dbpedia:Person;
    dbpedia:spouse ?wife .
  ?wife a dbpedia:Person;
    dbpedia:parent ?mother .
  ?royaltyChild a dbpedia:Royalty .
  ?leaderParent a dbpedia:Person;
    dbpedia:child ?royaltyChild .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
47,58,test,"Give me the office of the awardee of the entity, that is an award, in India and office of Suvendu Adhikari and office of the awardee of Banga Bhushan.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query to find the office of awardees of Banga Bhushan and office of Suvendu Adhikari
SELECT ?office1 ?office2
WHERE {
  ?awardee1 a dbpedia:Person;
    dbpedia:awardRecipientOf dbpedia:Banga_Bhusan ;
    dbpedia:office ?office1 .
  ?awardee2 a dbpedia:Person;
    dbpedia:name ""Suvendu Adhikari"" ;
    dbpedia:office ?office2 .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
170,24,test,Give me the birth place of the awardee of People's Artist of Russia and domain of the profession of John Scholey.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?result <http://dbpedia.org/ontology/leaderTitle> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  OPTIONAL { ?person rdfs:label ?name }
  FILTER (lang(?name) = ""en"")  # To filter for English names, assuming Scholey's name is in English
}
```

This query will return the birth places of individuals who are labeled as having an English name, which should match John Scholey.",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
465,69,test,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouseOfDauphin ?successorOfDuke
WHERE {
  ?charlesOrlando a dbpedia:Person;
    dbpedia:parent ?ferdinandI .
  ?charlesOrlando dbpedia:child ?spouseOfDauphin .
  ?ferdinandI a dbpedia:Person;
    dbpedia:parent ?estesteDukeParent .
  ?estesteDukeParent a dbpedia:Person;
    dbpedia:child ?estesteSuccessor .
  ?estesteSuccessor a dbpedia:Person;
    dbpedia:role dbpedia:Royalty
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
791,69,test,"Give me the predecessor of the child of Emperor Takakura and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v7 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childSpouse
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:isSpouseOf ?spouse ;
    dbpedia:isRoyalty true ;
    dbpedia:isOfficeHolder true .
  ?child a dbpedia:Person;
    dbpedia:hasChild ?grandchild .
  ?grandchild a dbpedia:Person;
    dbpedia:isRoyalty true ;
    dbpedia:isOfficeHolder true .
  ?childSpouse a dbpedia:Person;
    dbpedia:isSpouseOf ?child .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
453,8,test,"Give me the religion of the author, that is a cardinal and a cleric, of Apologia Pro Vita Sua and religion of Newfoundland Colony.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/religion> ?result . <http://dbpedia.org/resource/Apologia_Pro_Vita_Sua> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Newfoundland_Colony> <http://dbpedia.org/ontology/religion> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cardinal>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?religion
WHERE {
  ?author a dbpedia:Person;
    dbpedia:birthPlace ""Thagaste, Numidia"" .
  ?book dbpedia:author ?author .
  ?book rdfs:label ""Apologia Pro Vita Sua"" .
  ?author a dbpedia:Person;
    dbpedia:religion ?religion .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
965,71,test,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of the parent of Louise Mountbatten and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v7 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v8 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commonParent
WHERE {
  ?georgeParents a dbpedia:Person; dbpedia:birthPlace ?birthPlaceOfGeorge .
  ?louiseParents a dbpedia:Person; dbpedia:birthPlace ?birthPlaceOfLouise .
  ?georgeParents ns:parentOf ?louiseParents .
  ?louiseParents ns:child ?politicianLouise .
  ?politicianLouise a dbpedia:Person; dbpedia:birthdate ""1854-05-24""^^xsd:date .
}
```",9,12,10,3,3,3,3,71,0,0,2,0,0.0,0
281,26,test,"Give me the awardee of the award of Alfred Warden and commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of Medal bar.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee1 ?awardee2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:awardedAlfredWardenAward ?award .
  ?person1 dbpedia:conflict ""World War II"" .
  ?person2 a dbpedia:Person;
    dbpedia:awardedMedalBar ?bar .
  ?person2 dbpedia:conflict ""World War II"" .
  ?awardee1 rdf:type dbpedia:MilitaryConflict_Awardee ;
    dbpedia:conflict ""World War II"" .
  ?awardee2 rdf:type dbpedia:MilitaryConflict_Awardee ;
    dbpedia:conflict ""World War II"" .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
933,57,test,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and reference to the birth name of the professional in Musician and band of Mike Elliott (saxophonist).",SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthName ?band
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ?birthName .
  OPTIONAL { ?person dbpedia:band ?band . }
  FILTER ( (?birthName = ""Alan James Patrick Murphy"" AND ?band = ?band) OR 
          (?birthName = ""Michael John Elliott"" AND ?band = ?band) )
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
417,57,test,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and spouse of Princess Caroline-Mathilde of Denmark and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> ?v5 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology#>

SELECT ?childName ?royaltyTitle ?greenlandLeaderTitle
WHERE {
  ?person a dbpedia:Person;
    rdfs:label ?name .
  ?person dbpprop:father ?grandDuke .
  ?person dbpprop:spouse ?spouse .
  ?child a dbo:ChildOf ?person .
  ?child dbpprop:parent ?royalty .
  ?royalty a dbpedia:Royalty ;
    rdfs:label ?title .
  ?royalty dbpprop:leaderOf ?greenlandLeader .
  ?greenlandLeader rdfs:label ""Colony of Greenland"" .
}
```

This SPARQL query looks for individuals who:
- Are a child of someone who is a royalty (with the title specified)
- Have a parent who is a royalty and leads the Colony of Greenland

The `rdfs:label` property is used to match names, and the `dbpprop:` namespace is used to link individuals to their parents and spouses.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
933,68,test,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to the birth name of the professional in Musician.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v6 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName ?artistName
WHERE {
  ?person a dbpedia:Musician;
    dbpedia:birthName ""Alan Warner""@en .
  ?band a dbpedia:Band ;
    dbpedia:members ?person .
  ?band rdfs:label ?bandName .
  
  ?band a dbpedia:Organization ;
    dbpedia:artist ?artist .
  ?artist a dbpedia:Musician;
    dbpedia:name ?artistName .
}

UNION

SELECT ?bandName ?artistName
WHERE {
  ?band a dbpedia:Band ;
    dbpedia:group ?person .
  ?band rdfs:label ?bandName .
  
  ?band a dbpedia:Organization ;
    dbpedia:artist ?artist .
  ?artist a dbpedia:Musician;
    dbpedia:name ?artistName .
}

```

This query first looks for Alan Warner as a musician with the birth name ""Alan Warner"" and then identifies the band he is part of. It also checks if this band acts as an organization. For The Ramong Sound, it searches for the artist and confirms they are recognized as a musical artist within the band.",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
456,64,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of the actor of the movie, that is a work and a television show, with Ross Newton and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?spouseName WHERE {
  ?doyleSpouse a dbpedia:Person;
    dbpedia:partner ?husband . # Alan Doyle's spouse
  ?newtonSpouse a dbpedia:Person;
    dbpedia:partner ?spouseName . # Ross Newton's spouse (hypothetical)
  ?doyleSpouse foaf:name ""Hypothetical Spouse Name"" .
  ?newtonSpouse foaf:name ""Hypothetical Spouse Name"" .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
329,24,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"SELECT ?countryRegion ?birthPlaceOrganization
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""Robert Bates (loyalist)"" .
  ?birthPlace ns:isPartOf ?countryRegion .
  ?countryRegion a dbpedia:Country; dbpedia:timeZone dbpedia:Western_European_Time .
}",4,7,5,2,2,2,3,28,0,0,531,0,0.0,0
456,71,test,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","SELECT ?actorSpouse
WHERE {
  ?actor dbpprop:hasRole dbpedia:Mystery_Criminal ;
    dbpprop:inVocabularyOf dbpedia:Radio_Fictional_Character ;
    dbpprop:portraysIn dbpedia:The_Shadow .
  ?actor dbpprop:isMemberOf dbpedia:Great_Big_Sea .
  ?actor rdfs:label ?actorLabel .
  ?spouse a dbpedia:Person;
    dbpedia:hasSpouse ?actorSpouse .
}",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
326,8,test,"Give me the person decedent at Rancho Mirage, California and professional in the profession of Susanne Lewis.","SELECT ?result WHERE { <http://dbpedia.org/resource/Susanne_Lewis> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Rancho_Mirage,_California> . ?result <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:deathPlace [ property::name ""Rancho Mirage, California"" ];
    dbpedia:profession ""Susanne Lewis"".
}",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
645,71,test,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in the force of the commander in Siege of Madrid and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/leader> ?result . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v7 <http://dbpedia.org/property/office> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },{sparql_query},9,16,10,3,3,3,3,71,0,0,2,0,0.0,0
465,65,test,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/ontology/successor> ?result . },"SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Monarch; 
    dbpedia:monarchyStarts [ owl:hasMember ?france_start ].
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person dbpedia:monarchyEnds [ owl:hasMember ?hungary_end ] .
  ?person dbpedia:monarchyEnds [ owl:hasMember ?france_end ] .
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
130,18,test,"Give me the figure known as the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama and entity in the administration, that is American, of .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v2 <http://dbpedia.org/ontology/director> ?v1 . ?v3 <http://dbpedia.org/property/governor> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","SELECT ?film ?soccer_club_or_organization ?coach ?college_coach ?administration_entity WHERE {
  ?film a dbpedia:Film .
  OPTIONAL { ?film dbpedia:sportsSoccerClub ?soccer_club_or_organization . }
  OPTIONAL { ?film dbpedia:organization ?soccer_club_or_organization . }

  ?coach a dbpedia:Person;
    dbpedia:birthPlace ""Madison, Alabama"" .
  ?coach a dbpedia:Coach;
    dbpedia:role ""College Coach"" .

  ?administration_entity a dbpedia:Organization;
    dbpedia:country ""United States"" .
}",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
839,62,test,"Give me the band of Matthias Röhr and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v0 <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName1 ?bandName2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace1 .
  ?person1 rdfs:label ""Matthias Röhr""@de .
  
  ?person2 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace2 .
  ?person2 rdfs:label ""Peter Schorowsky""@de .
  
  ?person1 dbpedia:associatedBand ?bandName1 .
  ?person2 a dbpedia:Musician; 
    dbpedia:memberOf ?bandName2 .
  
  ?bandName1 rdfs:label ?bandName1Str .
  ?bandName2 rdfs:label ?bandName2Str .
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
216,26,test,Give me the party of Campbell Newman and office of the mayor of Ros Bates and administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?personName ?office ?administration
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolder ?office .
  OPTIONAL { ?office rdfs:label ?officeLabel }
  FILTER (lang(?officeLabel) = ""en"")  # Filter for English labels
  ?person dbpedia:birthPlace ?birthPlace.
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  OPTIONAL { ?deathPlace rdfs:label ?deathPlaceLabel }
  FILTER (lang(?deathPlaceLabel) = ""en"")  # Filter for English labels
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
773,61,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parentOfLouis ?successor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father ?child .
  ?child a dbpedia:Person; 
    rdfs:label ""Louis the Pious""@fr.
  ?child a dbpedia:Monarch; # Ensuring Louis is a royalty
    dbpedia:successor ?successor .
  ?parentOfLouis a dbpedia:Person;
    dbpedia:father ?child .
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
445,61,test,Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the award of the commander in Battle of Saint-Mihiel.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v3 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""AK Abdul Momen""@en; 
    dbpedia:militaryAward dbpedia:MilitaryOrderOfStMichaelAndGeorge.
  ?person dbpedia:activeYears 1917-1945.
}",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
129,28,test,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and professional in the mayor of 1999 West Dunbartonshire Council election and associated musical artist of the person born as Tahj Malik Chandler.","SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify Tahj Malik Chandler (Actor)
SELECT ?actor WHERE {
  ?actor a dbpedia:Person;
    dbpedia:name ""Tahj Malik Chandler"" .
}

# Step 2: Identify Dreamville as the organization
SELECT ?organization WHERE {
  ?organization a dbpedia:Organization;
    dbpedia:name ""Dreamville"" .
}

# Step 3: Link Tahj Malik Chandler to Dreamville
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
CONSTRUCT { ?actor rdf:type dbpedia:Artist } WHERE {
  ?actor a dbpedia:Person;
    dbpedia:name ""Tahj Malik Chandler"" .
  ?actor dbpprop:associatedWith ?organization .
  ?organization a dbpedia:Organization;
    dbpedia:name ""Dreamville"" .
}

# Step 4: Find the mayor of 1999 West Dunbartonshire Council election
SELECT ?mayor WHERE {
  ?mayor a dbpedia:Person;
    dbpedia:office dbpedia:Mayor_of_West_Dunbartonshire ;
    dbpedia:term ""1999"" .
}

# Step 5: Link the mayor to any associated musical artist (if available)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
CONSTRUCT { ?mayor rdf:type ?musicalArtist } WHERE {
  ?mayor a dbpedia:Person;
    dbpedia:office dbpedia:Mayor_of_West_Dunbartonshire ;
    dbpedia:term ""1999"" .
  OPTIONAL { ?mayor dbpprop:associatedWith ?musicalArtist }
}",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
465,67,test,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?successor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Royalty;
    dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:succeededBy ?successor .
  ?child foaf:familyMember ?parent .
  ?parent ns:fatherOf ?child .
  ?child ns:motherOf ?spouse .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
965,65,test,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  
  ?person dbpedia:hasParent [ 
    a dbpedia:Person ;
    dbpedia:name ""Alexander von Battenberg"" ;
    dbpedia:birthDate ""1840-04-27""^^xsd:date
  ] .

  ?person dbpedia:spouse [
    a dbpedia:Person ;
    dbpedia:name ""Princess Victoria of Hesse and by Rhine"" ;
    dbpedia:birthDate ""1840-08-09""^^xsd:date
  ] .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
274,26,test,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie and associated musical artist of the actor, that is a musical artist, of Imagine the Sound and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Find band members of Dizzy Gillespie (John Birks Gillespie)
SELECT ?bandMember
WHERE {
  ?person dbpedia:birthName ""John Birks Gillespie"" ;
    dbpedia:givenName ""John"" ;
    dbpedia:familyName ""Gillespie"" ;
    dbpedia:occupation dbpedia:Musician;
    dbpedia:bandMember ?bandMember .
}

# Find the actor ""Imagine the Sound"" and their associated band members
SELECT ?actor ?associatedBandMember
WHERE {
  ?actor dbpedia:birthName ""Imagine the Sound"" ;
    dbpedia:givenName ""Imagine"" ;
    dbpedia:familyName ""the Sound"" ;
    dbpedia:occupation dbpedia:Musician;
    dbpedia:associatedBandMember ?associatedBandMember .
}

# Find professionals related to Dizzy Gillespie or ""Imagine the Sound""
SELECT ?professional
WHERE {
  ?person a dbpedia:Person;
    dbpedia:role dbpedia:Musician ;
    dbpedia:associatedBand [ dbpedia:bandMember ?bandMember ] .
  FILTER ( (?bandMember in [ ?bandMember1, ?bandMember2 ]) OR 
         ?actor = ?person )
}
```",5,7,6,2,3,2,3,28,0,0,3,0,0.0,0
465,71,test,"Give me the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v7 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?charles_orlando a dbpedia:Person;
    dbpedia:title ""Dauphin of France"";
    dbpedia:spouse ?elizabeth_of_austria .
  ?elizabeth_of_austria a dbpedia:Person;
    dbpedia:name ""Elizabeth of Austria"" .
  ?charles_orlando dbpedia:parent ?ercole_ii_d_este .
  ?ercole_ii_d_este a dbpedia:Person;
    dbpedia:title ""Duke of Ferrara"" .
  ?charles_orlando dbpedia:child ?successor .
  ?successor a dbpedia:Person;
    dbpedia:title ""Dauphin of France"";
    dbpedia:succeededBy ?henry_d_oralieres .
  ?henry_d_oralieres a dbpedia:Person;
    dbpedia:name ""Henry, Duke of Orléans"" .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
976,59,test,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?officeOfKemal ?officeOfMayor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:role ""Leader of the Republican People's Party"" .
  ?person a dbpedia:OfficeHolder;
    dbpedia:office ?officeOfPerson .
  ?officeOfPerson rdfs:label ?officeOf.
  
  ?organization a dbpedia:Organization;
    dbpedia:name ""Millet İttifakı"" .
  ?organization dbpedia:politicalParty ""Unionist Alliance (Turkish)"" .
  ?person a dbpedia:Politician;
    dbpedia:office ?officeOfMayor .
  ?officeOfMayor rdfs:label ?officeOfMayorLabel .
  
  ?officeOfKemal ?officeOf .
  ?officeOfMayor ?officeOfMayorLabel
}
```",6,14,7,3,2,3,3,71,0,0,3,0,0.0,0
926,66,test,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of the child of Ahmed III.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royaltyPerson
WHERE {
  ?s1 dbpedia:parent ?s2 .
  ?s2 a dbpedia:Monarchy_Role ;
    dbpedia:role ""King of Saudi Arabia"" .
  ?s1 a dbpedia:Person ;
    dbpedia:father ?f1 ;
    dbpedia:child ?s2 .
  ?f1 a dbpedia:Person ;
    dbpedia:parent ?p1 .
  ?p1 a dbpedia:Monarchy_Role ;
    dbpedia:role ""King of Saudi Arabia"" .
}
```

This query works as follows:
- It starts by finding any person (`?s1`) who has a parent (`?s2`), and ensures that `?s2` is a monarch with the role ""King of Saudi Arabia"".
- Then it finds a child (`?s2`) of `?s1`, ensuring that `?s2` is also a person and a royalty.
- It then traces back to find the parent (`?f1`) of `?s1`, ensuring that `?f1` is also a monarch with the same role.
- This ensures we are looking at a lineage where each step transitions from royalty to royalty, ultimately identifying a successor of Abdulaziz.",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
773,69,test,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the successor of Charles the Bald.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v7 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace ?grandparent ?child ?successor
WHERE {
  ?father dbpedia:father dbpedia:Louis_the_Pious ;
    dbpedia:role ""OfficeHolder"" .
  ?spouse a dbpedia:Person;
    dbpedia:parent dbpedia:Judith_of_Bavaria .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:offspring ?child .
  ?successor a dbpedia:Monarch;
    dbpedia:succeededBy ?next
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
281,25,test,"Give me the awardee of Volunteer Decoration and commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee ?award WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedBy dbpedia:UnitedKingdom ;
    dbpedia:conflict dbpedia:SecondBoerWar .
  ?person rdfs:label ""Roy Boehm"" .
  
  ?person2 a dbpedia:Person;
    dbpedia:awardedBy dbpedia:UnitedKingdom ;
    dbpedia:conflict ?conflict .
  ?person2 rdfs:label ""Lawrence Moore Cosgrave"" .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
130,19,test,"Give me the figure known as the film, that is a soccer club and an organisation, of Candice Storey Lee and entity in the administration, that is American, of the award of Živko Ključe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v4 . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX mousetrap: <http://purl.org/cwm/mousetrap/>

# Query to find Candice Storey Lee's film ""The Princess Diaries""
SELECT ?filmTitle WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Candice Storey Lee"";
    mousetrap:role ?filmTitle .
  FILTER (lang(?filmTitle) = ""en"")  # Assuming the role name is in English
}

# Query to find soccer clubs associated with the person
SELECT ?soccerClub WHERE {
  ?person a dbpedia:Person;
    dbpedia:memberOf dbpedia:SoccerTeam ;
    rdfs:label ?soccerClub .
  FILTER (lang(?soccerClub) = ""en"")  # Assuming club names are in English
}

# Query to find organizations related to the film
SELECT ?organization WHERE {
  ?film a mousetrap:Film;
    mousetrap:director ?person ;
    rdfs:label ""The Princess Diaries"" .
  ?person a dbpedia:Person;
    dbpedia:nationality ""American"" .
  # Assuming the award is administered by an organization related to the film
}

# Query to find the Živko Ključe award administrator
SELECT ?awardAdmin WHERE {
  ?award a dbpedia:FilmAwards ;
    rdfs:label ""Živko Ključe"" .
  ?awardAdmin a dbpedia:Organization;
    dbpedia:name ""Administration of Živko Ključe"" .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
773,70,test,"Give me the spouse of the father of Charles the Fat and parent of the successor of the child, that is a royalty, of Louis the Pious and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?v7 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . },"SELECT ?wifeName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father Louis_the_Pious ;
    dbpedia:mother ?wifeName .
  ?person dbpedia:child Carloman_of_Bavaria .
}",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
47,63,test,"Give me the office of the awardee of Padma Vibhushan and office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of Banga Bhushan.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?v4 . ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?padma_awardee_office ?banga_bhushan_awardee_office ?operation_green_hunt_commander_office
WHERE {
  ?padma_awardee a dbpedia:Person; dbpedia:PARDAWARD Padma Vibhushan .
  ?padma_awardee foaf:office ?padma_awardee_office .

  ?banga_bhushan_awardee a dbpedia:Person; dbpedia:PARDAWARD Banga Bhushan .
  ?banga_bhushan_awardee foaf:office ?banga_bhushan_awardee_office .

  ?operation_green_hunt_commander a dbpedia:Person; dbpedia:COMMANDER_OF Operation Green Hunt .
  dbpedia:Operation_Green_Hunt COMMANDER ?operation_green_hunt_commander .
  
  ?operation_green_hunt_commander foaf:office ?operation_green_hunt_commander_office .
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
965,67,test,"Give me the spouse of Prince Louis of Battenberg and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v5 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v4 . }","SELECT ?spouse ?birthParents ?child
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1854-05-24"" .
  ?person dbpedia:parent [ a dbpedia:Parent ;
                        dbpedia:givenName ""George"" ;
                        dbpedia:surname ""Mountbatten, 2nd Marquess of Milford Haven"" ] .
  ?person dbpedia:spouse ?spouse .
  ?child a dbpedia:Person;
    dbpedia:birthDate ""1854-05-24"" ;
    dbpedia:parent ?birthParents .
  ?child a dbpedia:Person;
    dbpedia:givenName ""Alice"" ;
    dbpedia:surname ""Countess de la Warr"" .
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
216,60,test,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?coach ?club ?managerName ?playerName
WHERE {
  ?coach a dbpedia:Coach;
    dbpedia:sport dbpedia:Soccer ;
    dbpedia:coachedTeam dbpedia:Croatia U21 .
  ?club a dbpedia:SportsClub;
    dbpedia:name ?clubName .
  ?coach rdfs:seeAlso ?coachProfile.
  ?coachProfile a foaf:Person;
    dbpedia:birthDate ?birthdate .
  ?player a dbpedia:SoccerPlayer;
    dbpedia:playedFor ?team ;
    dbpedia:deathDate ?deathDate .
  ?manager a dbpedia:SoccerManager;
    dbpedia:name ?managerName ;
    foaf:knows ?player .
  ?deathDate <2023-04-15> .
  ?birthdate <2023-04-15> .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
645,63,test,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and commander in the force of the commander in Siege of Madrid and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?leaderName ?office ?force
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Spain"";
    dbpedia:deathPlace ""Spain"" .
  ?person dbpedia:role ""Military Leader"" .
  ?person dbpedia:commandedIn ?conflict .
  ?conflict a dbpedia:Event; dbpedia:name ""Siege of Madrid"" .
  ?person rdfs:label ?leaderName .
  ?force a dbpedia:MilitaryForce;
    dbpedia:partOf ?militaryStructure .
  ?militaryStructure a dbpedia:OrganizationType; dbpedia:name ""Spanish Republic"" .
  ?person dbpedia:commandedBy ?leader .
  ?leader a dbpedia:Person;
    dbpedia:role ?office .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
267,19,test,"Give me the coach of the player, that is a soccer club, in Rasoul Khatibi and person born on the birth date of the reference to Dan Cathy.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://dbpedia.org/ontology/coach> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthDate> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . ?v0 <http://dbpedia.org/ontology/birthDate> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?coach
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1966-04-08""^^xsd:date;
    dbpedia:sport dbpedia:Soccer .
  ?soccerClub a dbpedia:SoccerTeam ;
    dbpedia:hasCoach ?coach .
  ?person rdf:type dbo:Person ;
    dbo:birthPlace ?birthPlace ;
    dbo:deathPlace ?deathPlace .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
417,60,test,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childName ?royalSpouseName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?grandParent .
  ?grandParent a dbpedia:Person;
    dbpedia:title ""Knud, Hereditary Prince of Denmark"" .
  ?child a dbpedia:ChildOf ?person ;
            dbpedia:spouse ?royalSpouse .
  ?royalSpouse a dbpedia:Person;
    dbpedia:parent ?royalParent .
  ?royalParent a dbpedia:Person;
    dbpedia:title ""Alexandrine of Mecklenburg-Schwerin"" .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
892,68,test,"Give me the landmark at elevation of the award of the member of E-girls and entity in the profession of the true self of Enrico Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/awards> ?v6 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v4 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/province> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?awardName ?landmarkElevation
WHERE {
  ?person a dbpedia:Person;
    foaf:name ""Enrico Crolla"" .
  ?person a dbpedia:Artist ; dbpedia:type ""chef"" .
  ?award a dbpedia:Award ;
    dbpedia:awardedTo ?person .
  ?award rdfs:label ?awardName .
  ?award geo:point ?location .
  ?location a geo:Point ; geo:coordinates ?coordinates .
  ?landmark a dbpedia:Landmark ;
    geo:altitude ?elevation .
  ?landmark geo:locatedAt ?location .
}
```",8,12,9,3,3,3,3,71,0,0,2,0,0.0,0
933,63,test,"Give me the reference to the birth name of Alan Warner (musician) and band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName ?band
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Alan Warner""@en;
    dbpedia:role dbpedia:Musician .
  ?person rdfs:member ?band .
  ?band a dbpedia:Band ;
    dbpedia:name ""The Ramong Sound""@en .
}",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
382,19,test,"Give me the landmark at elevation of the award of the reference, that is a college coach and a coach, to Harry Combes and birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?awardName ?elevation ?landmark
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedBy ?award .
  ?award rdfs:label ?awardName .
  ?award a dbo:SportsAward .
  ?awardContext a dbpedia:Event ;
                 dbpedia:location ?location .
  ?location rdfs:label ?landmark .
  FILTER (lang(?awardName) = ""en"")  # Assuming the award name is in English
}
```

This query looks for awards given to Harry Combes, focusing on those that are sports-related (`dbo:SportsAward`). It then tries to link these awards to a specific location (`?location`) which could be the landmark at elevation where the award was given.",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
865,60,test,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child of the father of Abul Maal Abdul Muhith.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v1 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?nativeCountry
WHERE {
  ?person a dbpedia:Person;
    dbpedia:deathPlace Patna .
  ?child a dbpedia:Person; dbpedia:father ?father .
  ?child dbpedia:mother ?mother .
  ?father a dbpedia:Person; dbpedia:birthPlace ?birthPlace .
  ?mother a dbpedia:Person; dbpedia:birthPlace ?motherBirthPlace .
  OPTIONAL { ?child dbpedia:birthPlace ?childBirthPlace }
  FILTER (lang(?child) = ""en"")  # Assuming English for consistency
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
465,58,test,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v5 . }","Given the reasoning above, we can construct a SPARQL query to find the spouse of the child who is a royalty of Ferdinand I:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalSpouse
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent dbpedia:Ferdinand_I_Holy_Roman_Emperor .
  ?child a dbpedia:Royalty;  # Assuming there's a class for royalty in DBpedia
    dbpedia:spouse ?royalSpouse .
}
```

This query looks for a person (`?child`) who is a royalty (assuming there's a class `dbpedia:Royalty` in DBpedia) and whose parent is Ferdinand I. It then selects the spouse of this child (`?royalSpouse`).",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
582,58,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to Japan and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/property/nickname> ?v2 . }","Given the reasoning, we construct the following SPARQL query to find the details about Hajime Moriyasu's father:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?fatherName ?birthPlace ?deathPlace ?nickname
WHERE {
  ?player a dbpedia:Person;
    dbpedia:hasFather ?father .
  ?father a dbpedia:Person;
    dbpedia:role ""athlete and soccer manager and sports manager"" .
  ?player rdfs:label ""Masami Nagasawa""@en .
  ?player foaf:givenName ""Hajime"" .
  ?player dbpedia:nationality ""Japan"" .
  ?player dbpedia:nickname ""Moriyasu"" .
  ?father ns:inDataset <http://dbpedia.org/ontology/> .
  ?father dbpedia:birthPlace ""Japan"" .
  ?father dbpedia:deathPlace ""Japan"" .
  FILTER (lang(?fatherLabel) = ""en"") .
}
```

This query looks for a person who is the father of Masami Nagasawa (Hajime Moriyasu), and who has the roles of athlete, soccer manager, and sports manager. It also filters results to those labeled in English and ensures they are from the DBpedia ontology dataset.",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
715,56,test,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in Spanish Civil War and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . }","SELECT ?commander_in_rif_war ?commander_in_spanish_civil_war ?leader_of_office
WHERE {
  ?commander_in_rif_war a dbpedia:Person;
    dbpedia:role dbpedia:war_leader ;
    dbpedia:conflict dbpedia:Rif_War .

  ?commander_in_spanish_civil_war a dbpedia:Person;
    dbpedia:role dbpedia:military_commander ;
    dbpedia:conflict dbpedia:Spanish_Civil_War .

  ?leader_of_office a dbpedia:Office;
    dbpedia:role dbpedia:leader ;
    dbpedia:agency dbpedia:Government_Agency .
  
  ?commander_in_rif_war foaf:wasBornIn ?birthPlace.
  ?commander_in_spanish_civil_war foaf:wasBornIn ?birthPlace.
  ?leader_of_office foaf:hasMember ?franco_member .

  ?franco_member a dbpedia:Person;
    dbpedia:name ""Francisco Franco"";
    dbpedia:role dbpedia:military_officer .
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
433,64,test,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of Bill Evans and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?writer WHERE {
  ?writer a dbpedia:Artist;
    dbpedia:musicalArtistOf ""Slowhand at 70 – Live at the Royal Albert Hall"";
    dbpedia:associatedMusicalArtist ""Bill Evans"" .
  ?writer a dbpedia:Artist;
    dbpedia:associatedMusicalArtist ""Paul Chambers"" .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
573,70,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v1 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?result <http://dbpedia.org/ontology/deathPlace> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?decedentName ?residence ?administration
WHERE {
  ?john_quincy_adams a dbpedia:Person;
    dbpedia:officeHolder yes;
    dbpedia:politicalAffiliation ""United States"";
    dbpedia:parent ?charlie_baker .
  ?charlie_baker a dbpedia:Person;
    dbpedia:officeHolder yes;
    dbpedia:administration ?administration .
  ?john_quincy_adams dbpedia:work [ dbpedia:subject ""John Quincy Adams"" ].
  ?john_quincy_adams dbpedia:birthPlace ?residence .
  ?charlie_baker dbpedia:deathPlace ?administration
}
```",8,13,9,3,3,3,3,71,0,0,2,0,0.0,0
102,20,test,"Give me the native of the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury and manager of the player in the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v4 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . ?v1 <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?residence
WHERE {
  ?athlete a dbpedia:Athlete;
    dbpedia:nationality dbpedia:England .
  ?manager a dbpedia:Manager;
    dbpedia:manage ?athlete .
  ?athlete dbpedia:birthPlace ?birthPlace .
  ?manager a dbpedia:Person;
    dbpedia:residence ?residence .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
192,19,test,"Give me the spouse of the spouse, that is a royalty, of Charles Martel of Anjou and child of the child of the parent of Anna of Hungary (Byzantine empress).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify Charles Martel of Anjou's spouse
SELECT ?charlesMartenSpouse
WHERE {
  ?charlesMarten a dbpedia:Person;
    dbpedia:name ""Charles Martel of Anjou"";
    dbpedia:spouse ?charlesMartenSpouse .
}

# Step 2: Determine if the spouse is a royalty
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?charlesMartenSpouse
WHERE {
  ?charlesMartenSpouse a dbpedia:Person;
    dbpedia:is_Authority_Individual ""true"" .
}

# Step 3: Identify the children of Anna of Hungary (Byzantine empress)
SELECT ?annaOfHungaryChildren
WHERE {
  ?annaOfHungary a dbpedia:Person;
    dbpedia:name ""Anna of Hungary (Byzantine empress)"";
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Emperor Andronikos II Palaiologos"";
    dbpedia:parent ?grandParent .
}

# Step 4: Find the grandchildren (children of the children)
SELECT ?grandChildren
WHERE {
  ?child1 a dbpedia:Person;
    dbpedia:parent ?annaOfHungaryChildren .
  ?child2 a dbpedia:Person;
    dbpedia:parent ?child1 .

}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
456,57,test,"Give me the spouse of Danielle Spencer (Australian actress) and band of the band, that is a musical artist, of Dean Brody and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?husband ?musicalArtist WHERE { ?person dbpprop:isSpouseOf ?husband . ?person dbpprop:hasAlterEgo ?alterEgo . ?alterEgo a dbpedia:Character . ?person rdfs:label ?name . FILTER ( regexStrMatch(?name, 'Danielle Spencer') ) . ?musicalArtist a dbpedia:Musician . ?musicalArtist rdfs:label ?bandName . FILTER ( regexStrMatch(?bandName, 'Dean Brody') ) }",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
274,28,test,"Give me the professional in the designer of Tetris Classic and band member of the person born, that is a musical artist, as John Birks Gillespie and associated musical artist of the actor, that is a musical artist, of Imagine the Sound.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","Given that specific details about the designer's band membership and acting career might not be directly available in DBpedia, we will make some assumptions based on common knowledge:

1. The designer of Tetris Classic is likely Alexey Pajitnov.
2. We assume Alexey Pajitnov was part of a band or musical group (this might be speculative).
3. Dizzy Gillespie is a well-known jazz trumpeter and bandleader.
4. ""Imagine the Sound"" is a film, so we look for an actor from this film who is also known as a musical artist.

Here's a constructed SPARQL query that attempts to connect these dots:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Assuming Alexey Pajitnov has some relation to music, though not explicitly stated in DBpedia
SELECT ?alexey_pajitnov ?dizzy_gillespie ?actor_in_imagine_the_sound
WHERE {
  ?alexey_pajitnov a dbpedia:Person;
    dbpedia:birthPlace ""Moscow, Russia"";
    dbpedia:role [a dbpedia:CreativeWork; rdfs:label ""Designer of Tetris Classic""] .
  
  ?alexey_pajitnov dbnp:hasMemberRole [a dbpedia:BandMember] .
  
  ?dizzy_gillespie a dbpedia:Person;
    dbpedia:birthPlace ""Chicagoland, Illinois, USA"";
    dbpedia:role dbpedia:TrumpetPlayer .
  
  ?actor_in_imagine_the_sound a dbpedia:Person;
    dbpedia:role [a dbpedia:FilmRole; rdfs:label ""Actor in Imagine the Sound""] .
  
  ?alexey_pajitnov dbnp:hasMemberRole ?dizzy_gillespie .
  ?dizzy_gillespie foaf:knows ?actor_in_imagine_the_sound .
}",6,8,7,2,3,2,3,28,0,0,3,0,0.0,0
274,27,test,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound and band member of Dizzy Gillespie and professional in the designer of Tetris Classic.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v3 . },{sparql_query: None},5,6,6,2,3,2,3,28,0,0,3,0,0.0,0
926,65,test,"Give me the successor of the child of the spouse of Şermi Kadın and father of the father of Abdulaziz and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor WHERE {
  ?person a dbpedia:Person;
    dbpedia:father ?father .
  ?father a dbpedia:Person; dbpedia:name ""Abdulaziz"";
    dbpedia:son ?successor .
  ?successor a dbpedia:Monarch .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
926,64,test,"Give me the successor of Mustafa III and father of the father of the spouse of Neşerek Kadın and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent dbpedia:Beyhan_Sultan ;
    dbpedia:spouse dbpedia:Hafsa_Sultan .
  ?person a dbpedia:Royalty .
  FILTER (STRSTARTS (str(?birthPlace), ""Ottoman Empire"") || STRSTARTS (str(?deathPlace), ""Ottoman Empire""))
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
965,60,test,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandparentSpouseSpouseSpouse
WHERE {
  ?louise dbpedia:hasParent ?parent1 .
  ?parent1 dbpedia:hasSpouse ?spouse1 .
  ?parent1 dbpedia:hasChild ?george .
  ?george a dbpedia:NoblePerson .
  
  OPTIONAL { ?parent1 dbpedia:hasParent ?grandparent }
  FILTER (NOT EXISTS { ?child a dbpedia:NoblePerson })
}
```

This SPARQL query looks for the spouse of the parent of Louise Mountbatten, ensuring that the child of that parent is George Mountbatten and is identified as a noble.",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
976,66,test,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as the birth name of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).",SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v3 . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v6 . ?v6 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?speaker ?birthName ?mayorOffice
WHERE {
  ?assemblySpeaker a dbpedia:PoliticalOffice;
    dbpedia:office dbpedia:Speaker_of_the_Grand_National_Assembly_Turkey .
  ?person a foaf:Person;
    dbpedia:birthName ?birthName .
  ?mayorOffice a dbpedia:Office_Holder;
    dbpedia:office dbpedia:Mayor_of_Turkey;
    dbpedia:officeHolder ?politician .
  ?politician a dbpedia:Politician;
    dbpedia:politicalParty dbpedia:Nation_Alliance_(Turkey) .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
917,70,test,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and parent of the child, that is a royalty, of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v6 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child1 ?child2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:father ?parent .
  ?person1 dbpedia:child ?child1 .
  ?parent a dbpedia:Person; # Kamehameha III
    dbpedia:spouse ?spouse . # Leleiohoku I
  ?child1 a dbpedia:Person; # Child of Kamehameha III
    dbpedia:royalty true .
  ?person2 a dbpedia:Person;
    dbpedia:parent ?parent; # Child of Leleiohoku I
    dbpedia:child ?child2 . # Child of Kamehameha IV
  ?child2 a dbpedia:Person; # Child of Leleiohoku I
    dbpedia:royalty true .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
987,67,test,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of Dado Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> ?v4 . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v1 <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?birthPlace1 ?birthPlace2 WHERE { ?film a dbpedia:Film ; dbpedia:mainLocation dbpedia:Canicosa_de_la_Sierra . ?actor1 a dbpedia:Person ; dbpedia:birthPlace ?birthPlace1 . ?actor2 a dbpedia:Person ; dbpedia:birthPlace ?birthPlace2 . FILTER ( (?actor1 != ?actor2) ) },7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
98,27,test,"Give me the region of Philippine Standard Time and birth place of the person born as Paolo Elito M. Ballesteros IV and entity in the region, that is a country, of Philippine Standard Time.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?birthPlace geo:locatedIn <http://dbpedia.org/ontology/Region> ""Luzon"" .
  ?person rdfs:label ""Paolo Elito M. Ballesteros IV""@en .
}
```",5,6,6,2,3,2,3,28,0,0,2,0,0.0,0
839,66,test,"Give me the band of the member of Böhse Onkelz and band of the person born, that is a musical artist, as Kevin Richard Russell and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find members of Böhse Onkelz
SELECT ?member WHERE {
  ?member a dbpedia:Musician;
    dbpedia:bandMemberOf dbpedia:Böhse_Onkelz .
}

# Step 2: Find bands associated with the identified members
PREFIX band: <http://dbpedia.org/ontology/band>
SELECT DISTINCT ?band WHERE {
  ?member a dbpedia:Musician;
    dbpedia:bandMemberOf ?band .
  ?band rdfs:label ?bandLabel .
}

# Step 3: Identify Kevin Richard Russell (Ruslan) and find bands he is part of
PREFIX person: <http://dbpedia.org/ontology/person>
SELECT ?artist WHERE {
  ?person a person:Artist;
    dbpedia:birthDate ""1975-04-15""^^xsd:date; # Assuming Ruslan's birth date
    rdfs:label ""Kevin Richard Russell""@en .
  ?artist a band:Band;
    dbpedia:bandMemberOf ?person .
}

# Step 4: Identify a musician in the profession of Musician and find their band
SELECT ?musician WHERE {
  ?musician a person:Musician; # Assuming this is a general musician
  rdfs:label ?name .
  ?musician dbpedia:birthPlace ""United States""^^xsd:string; # Assuming born in the USA for simplicity
  ?musician a band:Band;
    dbpedia:bandMemberOf ?band .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
124,58,test,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in Mahdist War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Find military force of AK Abdul Momen during British Raj
SELECT ?militaryForce WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1850-06-24"";
    dbpedia:roleInMilitaryConflict dbpedia:BritishRaj;
    dbpedia:militaryForce ?militaryForce .
}

# Find military force of Frank Rhodes during Mahdist War
SELECT ?militaryForce WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1845"";
    dbpedia:roleInMilitaryConflict dbpedia:MahdistWar;
    dbpedia:militaryForce ?militaryForce .
}

# Combine results to ensure consistency and correctness
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
773,65,test,"Give me the parent of the child, that is a royalty, of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious and spouse of the father of Charles the Fat.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> ?v6 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parentOfYounger ?parentOfSuccessorSpouseOfFatherOfCharlesTheFat
WHERE {
  ?youngestChild a dbpedia:Person;
    dbpedia:child ?youngestChild .
  ?youngestChild dbpedia:hasParent ?parentOfYounger .
  ?successor a dbpedia:Person;
    dbpedia:succeededBy ?youngestChild ;
    dbpedia:father ?fatherOfYoungestChild .
  ?fatherOfYoungestChild a dbpedia:Person;
    dbpedia:spouse ?parentOfSuccessorSpouse .
  ?parentOfSuccessorSpouse a dbpedia:Person;
    dbpedia:hasSpouse ?parentOfCharlesTheFat .
  ?parentOfCharlesTheFat a dbpedia:Person;
    dbpedia:child ?charlesTheFat .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
83,18,test,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA and party of the governor of Dilma Rousseff.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlaceParty ?rulingParty
WHERE {
  ?sportsManager a dbpedia:SportsManager;
    dbpedia:club Kedah FA .
  ?governor a dbpedia:Politician;
    dbpedia:office President of Brazil;
    dbpedia:party ?rulingPartyOfGovernor .
  ?birthPlace a dbpedia:Location;
    dbpedia:type ""town"";
    dbpedia:member ?sportsManager .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  ?birthPlaceLabel ns:prefLabel ?birthPlacePrefLabel .
  ?birthPlacePrefLabel match ?birthPlace
    [ dbpedia:country Brazil ].
  ?rulingPartyOfGovernor pt:party ?rulingParty .
  FILTER (STR(?birthPlacePrefLabel) = ""Kedah"")
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
826,68,test,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v7 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify Louis I's spouse
SELECT ?spouseOfLouis WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Louis I"";
    dbpedia:spouse ?spouseOfLouis .
}

# Step 2: Identify the child of Louis I and Anna Magdalena Appel
SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:name ""Louis I"";
    dbpedia:child ?child .
  ?child dbpedia:name ""Anna Magdalena Appel"" .
}

# Step 3: Identify the spouse of the child of Louis I and Anna Magdalena Appel
SELECT ?spouseOfAnna WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Louis I"" .
  ?child dbpedia:spouse ?spouseOfAnna .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
926,63,test,"Give me the child of the father, that is a royalty, of Mustafa III and father of the father of the spouse of Neşerek Kadın and successor of the child of Ahmed III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v5 <http://dbpedia.org/ontology/successor> ?result . },"SELECT ?childName ?successorName
WHERE {
  ?child a dbpedia:Person;
    dbpedia:father dbpedia:Sultan Ahmed II .
  ?child a dbpedia:Person;
    dbpedia:spouse dbpedia:Esma Sultan .
  ?child a dbpedia:Person;
    dbpedia:succeededBy ?successor .
  ?successor a dbpedia:Person;
    dbpedia:name ?successorName .
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
216,27,test,Give me the office of Tim Nicholls and party of the awardee of Australian Defence Medal and administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v0 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . ?result <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for Tim Nicholls' office
SELECT ?office WHERE {
  ?person a dbpedia:OfficeHolder;
    dbpedia:office ?office ;
    dbpedia:officeHolder ""Tim Nicholls"" .
}

# Query to find the party of Australian Defence Medal awardees during specific periods
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?party WHERE {
  ?award a dbpedia:Medal ;
    dbpedia:awardedToMemberClass dbpedia:MilitaryPerson ;
    dbpedia:awardedDate ?date .
  OPTIONAL { ?award dbpedia:awardedBy ?government }
  UNION
  { ?award rdfs:seeAlso ?govPage }
  WHERE {
    ?govPage a dbpedia:Government;
      dbpedia:primeMinister ?pm .
    FILTER (STRSTARTS (?date, ""2005-"") || STRSTARTS (?date, ""2007-""))  # Example periods for illustration
    BIND (replace(str(?pm), ""Australian Labor Party"", ""Party A"") AS ?party)
  }
}

# Query to find the administration during which Mark Tobermann worked
SELECT ?primeMinister WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ?birthdate .
  ?person rdfs:seeAlso ?govPage .
  ?govPage a dbpedia:Government ;
    dbpedia:primeMinister ?primeMinister .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
456,67,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of Danielle Spencer (Australian actress) and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:name ""Alan Doyle""@en .
  ?person2 a dbpedia:Person;
    dbpedia:name ""Danielle Spencer""@en .
  ?person1 foaf:spouse ?person2 .
  ?person1 a dbpedia:Musician; dbpedia:band ?bandName .
  ?person2 a dbpedia:Actor .
  ?bandName rdfs:label ?bandLabel .
  FILTER (lang(?bandLabel) = ""en"")
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
170,25,test,Give me the birth place of the awardee of People's Artist of Russia and domain of Mayor and entity in the work of International Energy Agency.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . ?result <http://dbpedia.org/ontology/country> ?v3 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?domain
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:role [ rdf:type owl:OntologyTerm ; rdfs:label ""Mayor of Calcutta"" ] .
  ?person dbpedia:role [ rdf:type owl:OntologyTerm ; rdfs:label ""Indian independence movement"" ] .
}",5,5,6,2,3,2,3,28,0,0,3,0,0.0,0
955,19,test,"Give me the band of the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs and band of the writer of Don't Forget Your Roots (album).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?bandMember WHERE {
  ?band dbpedia:hasBandMember ?bandMember .
  ?bandMember a dbpedia:MusicalArtist .
  ?bandMember a dbpedia:Artist .
  ?band rdfs:label ""Street Dogs"" .
  ?bandMember rdfs:label ""Don't Forget Your Roots (album)"" .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
216,28,test,Give me the party of the awardee of Australian Defence Medal and office of the mayor of Ros Bates and administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for Australian Defence Medal awardee's party
SELECT ?party
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedAustralianDefenceMedal ?award .
  ?award rdfs:label ?party . 

# Query for the office of the mayor of Ros Bates
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?office WHERE {
  ?mayor a dbo:OfficeHolder;
    dbo:office ?office ;
    dbo:locatedIn dbpedia:Ros_Bates .
}

# Query for the director of Woolfe: The Red Hood Diaries
SELECT ?director
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:director ?director ;
    rdfs:label ""Woolfe: The Red Hood Diaries"" . 
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
18,25,test,"Give me the parent of the professional in Actress and alumnus of Marymount College, Tarrytown and professional in the award of Ana María Sánchez de Ríos.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v3 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commonParentClass
WHERE {
  ?role1 a dbpedia:Role; rdfs:label ""Actress"" .
  ?role2 a dbpedia:Role; rdfs:label ""alumnus of Marymount College, Tarrytown"" .
  ?award a dbpedia:Award; rdfs:label ""Ana María Sánchez de Ríos Award"" .
  ?person1 a dbpedia:Person; dbpedia:hasRole ?role1 .
  ?person2 a dbpedia:Person; dbpedia:hasRole ?role2 .
  ?commonParentClass rdfs:subClassOf both ?role1 and ?role2 .
}",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
773,58,test,"Give me the spouse of Louis the German and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of the successor of Charles the Bald.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query to find spouse of Louis the German
SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Germania"";
    dbpedia:deathPlace ""East Francia"";
    dbpedia:spouse ?spouse .
}

# Query to find the child and relevant details
SELECT ?child ?parentName ?officeHolderTitle ?royaltyTitle
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Germania"";
    dbpedia:deathPlace ""East Francia"";
    dbpedia:father ?parentName .
  ?person a dbpedia:OfficeHolder;
    rdfs:label ?officeHolderTitle .
  ?person a dbpedia:Royalty;
    rdfs:label ?royaltyTitle .
  ?child a dbpedia:Person;
    dbpedia:birthPlace ""Germania"";
    dbpedia:parent ?parentName .
  ?child a dbpedia:Child;
    dbpedia:offspring ?child .
  ?parentName = ?parentName . 
}

# Query to find the parent of Charles the Bald (Louis the German's mother)
SELECT ?mother
WHERE {
  ?charlesTheBald a dbpedia:Person;
    dbpedia:birthPlace ""Frankfurt am Main"";
    dbpedia:deathPlace ""Paris"";
    dbpedia:father <http://dbpedia.org/ontology/Person#Louis_the_German> .
  ?charlesTheBald a dbpedia:Child;
    dbpedia:parent ?mother .
}
``",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
129,27,test,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and professional in  and associated musical artist of the person born as Tahj Malik Chandler.","SELECT ?result WHERE { <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify Tahj Malik Chandler
SELECT ?person WHERE {
  ?person rdfs:label ""Tahj Malik Chandler""@en .
}

# Step 2: Determine his role in Dreamville Presents: Revenge
SELECT ?role WHERE {
  ?person dbppro:role ?role .
  ?role a dbpedia:CreativeWork ;
         dbppro:production ""Dreamville Presents: Revenge""@en .
}

# Step 3: Find the associated musical artist for this role
SELECT DISTINCT ?musicalArtist WHERE {
  ?role dbppro:associatedMusicalArtist ?musicalArtist .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
573,71,test,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).","SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/governor> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v8 . ?v8 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?v7 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify John Quincy Adams
SELECT ?john_quincy_adams WHERE {
  ?john_quincy_adams a dbpedia:Person; foaf:name ""John Quincy Adams"" .
}

# Step 2: Determine the work associated with John Quincy Adams
SELECT ?work WHERE {
  ?john_quincy_adams dbpedia:authorOf ?work .
}

# Step 3: Find the author who is a politician and an office holder of the work
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?author WHERE {
  ?work rdf:type dbpedia:Book ;
    dbpedia:author ?author .
  ?author a dbpedia:Person;
    dbpedia:officeHolder true;
    dbpedia:isPolitician true .
}

# Step 4: Determine the birthplace and death place of the author within a settlement
SELECT ?birthPlace ?deathPlace WHERE {
  ?author a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace ;
    dbpedia:deathPlace ?deathPlace .
  ?birthPlace rdf:type dbpedia:Settlement .
}

# Step 5: Identify the professional background of the author (American)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?profession WHERE {
  ?author a dbpedia:Person;
    dbpedia:nationality ""American"" .
}

# Step 6: Find the residence where the author lived, which is a settlement
SELECT ?residence WHERE {
  ?author dwc:residence ?residence .
  ?residence rdf:type dbpedia:Settlement .
}

# Step 7: Identify Charlie Baker (Australian footballer) and determine his real name
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?charlie_baker WHERE {
  ?charlie_baker a dbo:AustralianRulesFootballer;
    dbo:firstName ""Charlie"" ;
    dbo:surname ""Baker"" .
}

# Step 8: Establish Charlie Baker's political and administrative context
# Note: This step is tricky as there might not be direct information linking Charlie Baker (footballer) to politics/administration.
```",9,14,10,3,3,3,3,71,0,0,2,0,0.0,0
791,59,test,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v5 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouseSpouse AS spouse_of_spouse,
       ?royaltySpouse AS spouse_of_emperor_takakura,
       ?child_of_go_shirakawa AS child_of_emperor_go_shirakawa
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:spouse ?spouse .
  ?person1 dbpedia:hasChild ?child1 .
  ?child1 a dbpedia:Person;
    dbpedia:officeHolder true;
    dbpedia:royalty true .
  ?person2 a dbpedia:Person;
    dbpedia:spouse ?spouseSpouse .
  ?person2 dbpedia:hasChild ?child2 .
  ?child2 a dbpedia:Person;
    dbpedia:parent ?person1;
    dbpedia:parent ?person2 .
  ?child2 dbpedia:officeHolder true;
    dbpedia:royalty true .
  ?person3 a dbpedia:Person;
    dbpedia:spouse ?spouseSpouse .
  ?person3 dbpedia:hasChild ?child3 .
  ?child3 a dbpedia:Person;
    dbpedia:parent ?person2;
    dbpedia:officeHolder true;
    dbpedia:royalty true .
  ?child3 dbpedia:sibling ?child_of_go_shirakawa .
}
```

This SPARQL query attempts to find:
- `spouse_of_spouse`: The spouse of the spouse of Emperor Takakura.
- `spouse_of_emperor_takakura`: The spouse of Emperor Takakura.
- `child_of_emperor_go_shirakawa`: A child of Emperor Go-Shirakawa who is also an office holder and a royalty.

The query navigates through the relationships, looking for children of Takakura's spouse who are both office holders and royals, and then traces their lineage back to Go-Shirakawa.",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
715,70,test,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v1 <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?commander ?office ?conflict 
WHERE { 
  ?person a dbpedia:Person; dbpedia:role ?role . 
  ?role rdfs:label ?roleLabel . 
  ?roleLabel strlang:startsWith 'Commander in the force' . 
  ?person dbpedia:conflict ?conflict . 
  ?conflict a dbpedia:MilitaryConflict . 
  ?person a dbpedia:OfficeHolder; dbpedia:office ?office . 
  ?office a dbpedia:GovernmentAgency ; dbpedia:organization ?org . 
  ?org rdfs:label ?orgLabel . 
  ?orgLabel strlang:startsWith 'Carlos Franco Iribarnegaray' . 
  ?person a dbpedia:Politician; dbpedia:officeHolderOfElection ?election . 
  ?election dbpedia:Election ; dbpedia:year 1933 . 
  ?person rdfs:label ?personLabel . 
  ?personLabel strlang:matches '1933 Spanish general election'",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
579,20,test,"Give me the native of the residence, that is English and a settlement, of the resident of Scotland and person born as the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ""Edinburgh"" ;
    dbpedia:nationality dbpedia:Scotland ;
    dbpedia:officeHolder ?officeHolder .
  ?officeHolder rdfs:label ?birthName .
}",6,9,7,3,2,3,2,20,0,0,18,0,0.0,0
47,65,test,"Give me the office of the administration of Jagdeep Dhankhar and office of the awardee of Padma Vibhushan and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v6 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?officeAdmin ?padmaOffice ?mantuAwardOffice
WHERE {
  ?person1 a dbpedia:Person; dbpedia:officeAdmin ?officeAdmin .
  ?person2 a dbpedia:Person; dbpedia:awardedBy dbpedia:P padmaVibhushan ; dbpedia:awardee ?padmaAwardee .
  ?person3 a dbpedia:Person; dbpedia:awardedBy dbpedia:P padmaVibhushan ; dbpedia:awardee ?mantuGhosh .
  ?padmaAwardee dbpedia:field ?field .
  ?field rdfs:label ""Literature"" .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
976,65,test,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as Mehmet Naci Bostancı.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v0 <http://dbpedia.org/property/office> ?result . ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

// Step 1: Find mayors who are members of Millet İttifakı
SELECT ?mayorOffice WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolder dbpedia:MayorOf ;
    dbpedia:memberOf dbpedia:Millet_İttifakı .
}

// Step 2: Find the office location of these mayors
SELECT ?mayorOfficeLocation WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolder ?mayorOffice ;
    dbpedia:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?mayorOfficeLocation .
}

// Step 3: Find the leader of the Grand National Assembly born as Mehmet Naci Bostancı
SELECT ?leaderOffice WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolder dbpedia:LeaderOfGrandNationalAssemblyOfTurkey ;
    dbpedia:birthName ""Mehmet Naci Bostancı"" .
}

// Step 4: Extract the office location of this leader
SELECT ?leaderOfficeLocation WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolder ?leaderOffice ;
    dbpedia:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?leaderOfficeLocation .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
933,59,test,"Give me the reference to the birth name of the professional in Musician and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName
WHERE {
  ?band dbpedia:hasMember ?member .
  ?member a dbpedia:Person;
    dbpedia:name ?birthName;
    dbpedia:birthDate ?birthDate .
  ?band rdfs:label ""The Ramong Sound"" .
}",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
917,59,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parentOfRoyalty
WHERE {
  ?mayor a dbpedia:OfficeHolder;
    dbpedia:office ""Mayor of Hawaiian Kingdom"".
  ?child a dbpedia:Person;
    dbpedia:parent ?parentOfRoyalty.
  ?child a dbpedia:Royal; # Assuming the child is royal
    dbpedia:parent ?grandparent.
  ?spouse a dbpedia:Person;
    dbpedia:partner ?leleiohokuI.
  ?grandparent a dbpedia:Person;
    dbpedia:parent ?royalGrandparent.
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
582,56,test,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to the residence of Hirotaka Sugawara and player in Kazuaki Nagasawa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?teamNickname ?sugawaraResidence ?nagasawaPlayer
WHERE {
  ?hajimeMoriyasu a dbpedia:Person;
    dbpedia:associatedTeam ?team .
  ?team rdfs:label ?teamNickname .
  
  ?hirotakaSugawara a dbpedia:Person;
    dbpedia:residence ?sugawaraResidence .

  ?kazuakiNagasawa a dbpedia:Person;
    dbpedia:participantRole ?nagasawaPlayer .
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
715,69,test,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero and commander in the force, that is a military conflict, of the native of Morocco.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}
```",8,11,9,3,3,3,3,71,0,100980,1,0.0,0.0,0
326,19,test,"Give me the person decedent at the award, that is a country, of the awardee of French Legion of Honor and resident of the birthplace, that is a state and British, of David Jessel.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . ?v0 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country_of_award ?birth_place_state
WHERE {
  ?awardee a dbpedia:Person;
    dbpedia:awardedBy dbpedia:French_Legion_of_Honor .
  ?awardee dbpedia:birthPlace ?birth_place .
  ?birth_place a dbpedia:Location; dbpedia:type ""state""; dbpedia:name ""England"" .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
465,57,test,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of Anne of Brittany.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:offspring ?child .
  ?child a dbpedia:Person;
    dbpedia:successor ?successor .
  ?successor a dbpedia:Person;
    dbpedia:spouse ?spouse .
  ?parent ns:parentOf ?child .
  ?child ns:childOf ?parent .
  ?child a dbpedia:Royalty .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
987,69,test,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and birth place of the actor of All for Free.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/timeZone> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v5 . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?country ?sportEvent ?bandName ?bandArtist ?actorName ?actor
WHERE {
  ?event a dbo:SportsEvent; dbpedia:location ?location .
  ?location rdfs:label ""Canicosa de la Sierra""@es.
  
  ?band a dbpedia:Band; dbpedia:leader ?bandLeader ; dbpedia:artist ?bandArtist .
  ?bandMember a dbpedia:Musician; dbpedia:band ?band .
  ?actor a dbpedia:Actor; dbpedia:role ?actorRoleInBand .
  
  ?bandMember foaf:name ?bandName .
  ?actor rdfs:label ?actorName .

  ?event dbo:timeZone ""Canicosa de la Sierra time zone""^^xsd:string .
  
  ?bandMember foaf:name ""Dado Polumenta""@es .
  ?actorRoleInBand a dbo:ArtistRole; dbpedia:role ?actor .
  
  ?bandMember dbpedia:birthPlace ?birthPlaceBand .
  ?actor dbpedia:birthPlace ?birthPlaceActor .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
955,18,test,"Give me the band of the band member, that is a musical artist and an artist, of Street Dogs and band of the writer of the work, that is a work and an album and a musical work, of Matt Freeman.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Matt Freeman""@en .
  ?person dbpedia:inBandWith dbpedia:Street_Dogs .
  ?work a dbpedia:MusicAlbum ;
    dbpedia:artist ?person .
  ?album rdfs:label ""Work Title""@en .  # Placeholder for actual album title
}
```

This SPARQL query will find Matt Freeman and link him to Street Dogs. It then looks for works (albums) that he has been involved with and associates those works with the band Street Dogs.",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
715,63,test,"Give me the commander in the force, that is a military conflict, of the native of Morocco and commander in the force of Francisco Largo Caballero and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v2 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"SELECT ?commander ?military_conflict ?office_leader
WHERE {
  ?commander a dbpedia:Person;
    dbpedia:birthPlace <http://dbpedia.org/ontology/Location/Morocco>;
    dbpedia:deathPlace ?deathPlace .
  
  ?military_conflict a dbpedia:MilitaryConflict;
    dbpedia:conflictParty ?conflictParty .
  
  ?conflictParty rdfs:label ""Spanish Civil War""@en; # Assuming the conflict involving Francisco Largo Caballero
    dbpedia:commander ?commander .

  ?office_leader a dbpedia:Office;
    dbpedia:leader ?office_leader .

  ?commander dbpedia:commandMilitaryConflictIn ?military_conflict .
  ?office_leader dbpedia:led ?office_leader_office .

  ?commander ns:inDataset <http://dbpedia.org/ontology/> .
  ?office_leader ns:inDataset <http://dbpedia.org/ontology/> .
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
129,26,test,Give me the associated musical artist of EarthGang and professional in the mayor of 1999 West Dunbartonshire Council election and associated musical artist of the person born as Tahj Malik Chandler.,"SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?musicalArtist1 ?mayorName ?musicalArtist2
WHERE {
  ?earthGang a dbpedia:Band ;
    dbpedia:members [ memberNames ?memberName ] .
  ?memberName rdf:type foaf:Person .
  ?memberName rdfs:label ?musicalArtist1 .

  ?election a dbpedia:Election;
    dbpedia:year 1999;
    dbpedia:office ""Mayor of West Dunbartonshire Council"" .
  ?election dbpedia:winner ?mayorName .

  ?tahjChandler a dbpedia:Person ;
    dbpedia:name ""Tahj Malik Chandler""@en;
    foaf:name ?musicalArtist2 .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
917,68,test,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v6 . },{sparql_query},8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
274,25,test,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie and associated musical artist of Cecil Taylor and professional in the designer of Tetris Classic.","SELECT ?result WHERE { <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?bandMember WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""John Birks Gillespie""@en;
    dbpedia:role dbpedia:Musician ;
    dbo:musicalArtist ?musicalArtist .
  ?musicalArtist a dbpedia:MusicalArtist;
    dbpedia:associatedBandMember ?bandMember .
  ?bandMember a dbpedia:Person;
    dbpedia:name ?bandName .
  OPTIONAL { ?bandMember rdf:type dbo:GameDesigner }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
216,67,test,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in Igor Bišćan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v6 . ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?playerName ?managerName ?teamName
WHERE {
  ?player a dbpedia:Player;
    dbpedia:birthPlace ?birthPlace .
  ?player dbpedia:deathPlace ?deathPlace .

  ?player dbpedia:role [ rdf:type owl:Restriction ;
                      owl:onProperty dbpedia:coachRole ;
                      owl:hasValue ""soccer coach"" ].

  ?manager a dbpedia:Manager;
    dbpedia:role [ rdf:type owl:Restriction ;
                  owl:onProperty dbpedia:sportsManagerRole ;
                  owl:hasValue ""soccer manager"" ] .

  ?team a dbpedia:SoccerClub;
    dbpedia:name ?teamName .
  
  ?player dbpedia:playsFor ?team .
  
  ?manager dbpedia:managesTeam ?team .
  
  ?player rdfs:label ""Džemal Berberović""@en .
  ?manager rdfs:label ""AK Abdul Momen""@en .
  ?team rdfs:label ""Kasımpaşa S.K.""@en .
  FILTER (lang(?player) = ""en"" )
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
645,61,test,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v3 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office_leader ?government_agency ?military_force ?event_conflict_societal_event ?president_politician
WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality dbpedia:Spain ;
    dbpedia:birthPlace ""Restoration (region)"" .
  ?person a dbpedia:OfficeHolder;
    dbpedia:office ?office .
  ?office a dbpedia:Government_Agency_Organization .
  ?person a dbpedia:Military_ForceMember;
    dbpedia:military_force ?military_force .
  ?person a dbpedia:Event_Conflict_Societal_Event;
    dbpedia:event ?event_conflict .
  ?president_politician a dbpedia:Politician;
    dbpedia:office ?office .
  ?office rdfs:label ""Office Leader"" . 
  ?event_conflict rdfs:label ""Spanish Restoration (1685–1700)"" .
}
```",6,13,7,3,2,3,3,71,0,0,2,0,0.0,0
98,8,test,Give me the child of the child of Emperor Toba and parent of Emperor Rokujō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Toba> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Emperor_Rokujō> <http://dbpedia.org/ontology/parent> ?result . },"Given that we are querying a structured database like DBpedia, we can use SPARQL to retrieve this information. However, since DBpedia's data might not be fully populated or might lack certain relationships, we'll construct a general query based on typical relational assumptions:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchildName ?childOfEmperorToba
WHERE {
  ?childOfEmperorToba a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Emperor Toba""@en .
  ?childOfEmperorToba dbpedia:child ?grandchild .
  ?grandchild a dbpedia:Person;
    rdfs:label ""Emperor Rokujō""@en ;
    dbpedia:parent ?parent2 .
  ?parent2 a dbpedia:Person;
    rdfs:label ?parentLabel .
}
```

This query looks for a person (`?childOfEmperorToba`) who is the child of someone (`?parent`) labeled as ""Emperor Toba"" and has a grandchild (`?grandchild`) labeled as ""Emperor Rokujō"". The grandchild's parent (`?parent2`) would be the next step to trace back to Emperor Toba.",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
507,57,test,"Give me the spouse of Anne V. Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and professional in the profession of Guy Ferland.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?directorSpouse
WHERE {
  ?anneVCoates a dbpedia:Person;
    dbpedia:birthDate ""1919-06-17"" .
  ?anneVCoates dbpprop:hasFilm ""film1"" .
  ?film1 a dbpedia:Film;
    dbpedia:director ?director .
  ?director rdfs:label ""Guy Ferland""@en .
  ?director foaf:spouse ?directorSpouse .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
573,62,test,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and parent of John Quincy Adams.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v6 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://dbpedia.org/property/governor> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?decendent WHERE {
  ?footballer dbpedia:realName Charlie Baker .
  ?footballer dbpedia:parent ?john_quincy_adams .
  ?john_quincy_adams dbpedia:parent ?adams .
  ?adams a dbpedia:Person; dbpedia:occupation Politician; dbpedia:nationality American .
  ?adams dbpedia:residence ?settlement .
  ?settlement a dbpedia:Settlement
}",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
573,56,test,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent
WHERE {
  ?author a dbpedia:Person;
    dbpedia:birthPlace ""Quincy, Massachusetts"";
    dbpedia:deathPlace ""Quincy, Massachusetts"";
    dbpedia:authorOfWork dbpedia:John_Quincy_Admans_works .
  ?author foaf:parent ?parent .
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
582,59,test,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?father ?athleteAttribute ?soccerManagerAttribute ?sportsManagerAttribute ?scientistName ?scientistResidence
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?father .
  ?father a dbpedia:Person;
    dbpedia:name ""Kazuaki Nagasawa"" .
  ?child dbpedia:hasParent ?father ;
    dbpedia:birthDate ""YYYY-MM-DD"" ; # Placeholder for actual birth date
    dbpedia:deathDate ""YYYY-MM-DD"" ; # Placeholder for actual death date
    dbpedia:role [ 
      a dbpedia:Role ;
      rdfs:label ""athlete"" ] .
  ?child dbpedia:hasParent ?father ;
    dbpedia:role [ 
      a dbpedia:Role ;
      rdfs:label ""soccer manager"" ] ;
      rdfs:label ""sports manager"" ] .
  ?scientist a dbpedia:Person;
    dbpedia:name ?scientistName ;
    dbpedia:residence ?scientistResidence .
  ?child dbpedia:hasParent ?father .
  ?father rdf:type [ a dbpedia:Role ; rdfs:label ""athlete"" ] .
  ?father rdf:type [ a dbpedia:Role ; rdfs:label ""soccer manager"" ] .
  ?father rdf:type [ a dbpedia:Role ; rdfs:label ""sports manager"" ] .
  ?scientist ns:isDefinedBy dbpedia:Category_Scientist .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
433,68,test,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in the profession of Bob Marley and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?associated_artist 
WHERE {
  ?ornette Coleman a dbpedia:Person;
    dbpedia:associatedMusicalArtist ?musical_artist .
  ?musical_artist a dbpedia:MusicArtist .
  ?bob_marley a dbpedia:Person;
    dbpedia:profession ""musician"" .
  ?ornette Coleman rdfs:label ""Ornette Coleman""@en .
  ?bob_marley rdfs:label ""Bob Marley""@en .
  ?associated_artist a dbpedia:Person;
    dbpedia:persona ""Paul Chambers""@en .
    dbpedia:associatedMusicalArtist ?musical_artist .
}
```",8,14,9,3,3,3,3,71,0,0,4,0,0.0,0
892,56,test,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in the profession of Henri Crolla and landmark at elevation of 58.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Find the political party of Andrea Cozzolino
SELECT ?politicalParty WHERE {
  ?person a dbpedia:Person;
    dbpedia:memberOf ?politicalParty .
  ?person rdfs:label ""Andrea Cozzolino""@it.
}

# Find the region (administrative) where the party is based
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?region WHERE {
  ?politicalParty a dbpedia:PoliticalParty;
    dbpedia:headquarterLocation ?location .
  ?location a dbpedia:GeographicalEntity;
    dbpedia:administrativeRegion ?region .
}

# Find the profession of Henri Crolla
SELECT ?profession WHERE {
  ?person a dbpedia:Person;
    foaf:occupation ?profession .
  ?person rdfs:label ""Henri Crolla""@en.
}

# Find a landmark at elevation 58 meters
SELECT ?landmark WHERE {
  ?landmark a dbpedia:Landmark;
    dbpedia:elevationInMetres 58 .
}
```",6,12,7,3,3,3,3,71,0,0,2,0,0.0,0
874,19,test,"Give me the band of the band member of the band, that is an organisation, of Mark Read (singer) and band of the writer, that is an artist and a musical artist, of Mezzanine (album).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName1 ?bandName2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:role dbpedia:MusicianRole; dbpedia:band ?bandName1 .
  ?person2 a dbpedia:Person;
    dbpedia:role dbpedia:ArtistRole;
    dbpedia:role dbpedia:MusicalArtistRole;
    dbpedia:band ?bandName2 .
  ?person1 ns:memberOf ?bandMemberRelation1.
  ?person2 ns:partOf ?albumRelation2.
  ?bandMemberRelation1 a dbpedia:BandMembershipRelation.
  ?albumRelation2 a dbpedia:MusicAlbumRelation.
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
267,18,test,"Give me the person born on the birth date of Dan Cathy and coach of the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/coach> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?coach
WHERE {
  ?person a dbo:Person;
    dbo:birthDate ?birthDate .
  ?birthDate rdf:type rdf:Datatype .
  ?person rdfs:label ?name .
  ?player a dbo:Player;
    dbo:firstName ""Gergory"";
    dbo:sport ""Soccer"" .
  ?player dbo:coach ?coach .
  ?player dbo:season ""2020-21""^^xsd:gYear .
  ?coach a foaf:Person .
  ?coach rdfs:label ?coachName .
  ?coach = ?person
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
83,9,test,"Give me the player in the person born on 1995-07-07 and player in the person born, that is an athlete, on 1991-11-19.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ""1991-11-19""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1995-07-07""^^<http://www.w3.org/2001/XMLSchema#date> . }","SELECT ?playerName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1995-07-07"";
    dbpedia:name ?playerName .
  ?athlete a dbpedia:Person;
    dbpedia:sportDiscipline ?sport;
    dbpedia:birthDate ""1991-11-19"" .
}",4,5,5,2,2,2,2,9,0,0,5,0,0.0,0
192,18,test,"Give me the spouse of the spouse, that is a royalty, of the child of Charles II of Naples and child of the child of Stephen V of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childSpouseName WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?charlesIIOfNaples .
  ?child dbpedia:spouse ?childSpouse .
  ?childSpouse a dbpedia:Person;
    dbpedia:isRoyalty true .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
791,57,test,"Give me the spouse of Taira no Tokuko and father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v5 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouseOfTokuko ?fatherOfTakakura ?officeHolderRoyaltyPredecessor
WHERE {
  ?tokuko a dbpedia:Person;
    dbpedia:sibling [ dbpedia:hasSpouse ?spouseOfTokuko ] .
  ?takakura a dbpedia:Person;
    dbpedia:father ?fatherOfTakakura .
  ?go-shirakawa a dbpedia:Person;
    dbpedia:child ?takakura ;
    dbpedia:predecessorOfficeHolder [ a dbpedia:OfficeHolder; dbpedia:isRoyalty true ] .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
933,69,test,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of Alan Warner (musician) and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1947-04-21""^^xsd:date;
    foaf:name ""Alan Warner""@en;
    dbpedia:musicalArtist true .
  ?person dbpedia:musicalGroup ?band .
  ?band a dbpedia:Band .
  ?band rdfs:label ?bandName .
  FILTER (lang(?bandName) = ""en"")  # Filter results to English language
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
417,66,test,"Give me the child of the father of Frederick IX of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royaltyChild ?parentSpouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Sweden"";
    dbpedia:deathPlace ""Denmark"";
    dbpedia:spouse ?parentSpouse .
  ?person rdfs:label ""Christian, Prince Christian Gustav George""@en .
  ?parentSpouse a dbpedia:Person;
    dbpedia:birthPlace ""Sweden"";
    dbpedia:spouse ?royaltyChild .
  ?royaltyChild a dbpedia:Royalty .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
93,20,test,"Give me the death place of the governor of the native, that is a politician, of Seattle and capital of the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""AK Abdul Momen""@en.
}",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
456,56,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in  and spouse of the actor of Pacific Drive.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:role dbpedia:Actor ;
    dbpedia:appearsIn dbpedia:Pacific_Drive .
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
232,9,test,"Give me the claim to fame of the person born as Emily Katherine Jacques and artistic movement of the person born, that is a writer, on 1849-09-14.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/movement> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Emily Katherine Jacques""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1849-09-14""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?claimToFame ?artisticMovement
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Emily Katherine Jacques"" .
  ?person dcterms:birthDate ""1849-09-14""^^xsd:date .
  ?person a dbpedia:Writer .
  OPTIONAL { 
    ?person rdfs:seeAlso <http://example.com/EmilyKJacques> . # Placeholder for actual resource link
    ?link rdf:type rdf:Statement; 
      rdf subject <http://example.com/EmilyKJacques> .
    ?link predicate rdfs:label ; # Assuming the label contains the claim to fame
      rdfs:label ?claimToFame .
  }
  OPTIONAL {
    ?person a dbpedia:Person;
      dbpedia:deathDate ""1901-03-30""^^xsd:date . # Assuming she died in 1901
    ?person rdf:type dbpedia:Writer; 
      dbpedia:associatedArtisticMovement ?artisticMovement .
  }
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
715,66,test,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . }","SELECT ?commander1 ?office1 ?commander2 ?office2 
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:militaryConflict ?conflict1 .
  ?person1 rdfs:label ""Abd el-Krim""@en .
  
  ?person2 a dbpedia:Person;
    dbpedia:militaryConflict ?conflict2 .
  ?person2 rdfs:label ""Carlos Franco Iribarnegaray""@en .

  ?person3 a dbpedia:Person;
    dbpedia:militaryConflict ?conflict3 .
  ?person3 rdfs:label ""Francisco Largo Caballero""@en .

  ?commander1 a dbpedia:MilitaryCommander; 
    dbpedia:commands ?person1 .

  ?office1 a dbpedia:GovernmentOfficeOrOrganization;
    dbpedia:ledBy ?person2 .

  ?commander2 a dbpedia:MilitaryCommander; 
    dbpedia:commands ?person3 .

  ?office2 a dbpedia:GovernmentOfficeOrOrganization;
    dbpedia:ledBy ?person3 .
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
888,20,test,"Give me the commander in the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022) and awardee of the award of the commander in 2022 Ukrainian eastern counteroffensive.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/property/awards> ?v5 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?commander ?award WHERE { ?commander a dbpedia:Person; dbpedia:role dbpedia:Commander . ?commander dbpedia:participatedIn dbpedia:Event ; dbpedia:eventCategory dbpedia:MilitaryConflict ; dbpedia:startYear 2014 . ?commander dbpedia:awarded ?award . ?award a dbpedia:Award . ?award dbpedia:year 2022 },6,8,7,3,2,3,2,20,0,0,4,0,0.0,0
456,61,test,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","Given the reasoning above, since there is no specific band associated with Alan Doyle under the alter ego of Lamont Cranston in publicly available knowledge bases like DBpedia, the SPARQL query would not yield any results. Here's a placeholder query that reflects this:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Alan Doyle"" .
  ?person a dbpedia:Musician; 
    dbpedia:band ?bandName .
  ?bandName rdfs:label ?bandLabel .
  FILTER (?bandLabel LIKE '%Lamont Cranston%' )
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
459,23,val,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore and person born as the birth name of Kevin Stitt.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?deathPlace ?birthPlace WHERE { ?governor a dbpedia:OfficeHolder; dbpedia:office ?office . ?person a dbpedia:Person; dbpedia:name ?birthName . ?office dbpedia:GovernorateOfOklahoma . FILTER ( ?governor != ?person ) },4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
773,49,val,"Give me the spouse of the father of Charles the Fat and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?wife
WHERE {
  ?father a dbpedia:Person;
    dbpedia:name ""Carloman of Bavaria"";
    dbpedia:offices dbpedia:King_of_the_Franks .
  ?father a dbpedia:Person;
    dbpedia:parent ?grandParent .
  ?child a dbpedia:Person;
    dbpedia:name ""Charles the Fat"";
    dbpedia:parent ?grandParent .
  ?grandParent a dbpedia:Person;
    dbpedia:offices dbpedia:King_of_the_Franks .
  ?father dbpedia:spouse ?wife .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
18,20,val,"Give me the professional in  and parent of the professional in Actress and alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?actress ?parent
WHERE {
  ?actress a dbpedia:Person;
    dbpedia:alumniOf dbpedia:Marymount_College_Tarrytown .
  ?actress dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:type dbpedia:Actor .
}",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
443,23,val,Give me the landmark at elevation of the award of William Shepherd and birthplace of the work of yes.,"SELECT ?result WHERE { <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/author> ""yes""@en . ?result <http://dbpedia.org/ontology/elevation> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?workOrigin
WHERE {
  ?person a dbo:Person; dbo:birthPlace ?birthPlace .
  ?band a dbo:MusicBand; rdfs:label ""Yes""@en; dbo:formationLocation ?birthPlace .
  ?album a dbo:Album; dbo:releaseDate ""1969-03-01""; dbo:artist ?band .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
917,49,val,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?royaltyPerson a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:royalty true
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
170,23,val,Give me the entity in the work of International Energy Agency and domain of the profession of John Scholey.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?result <http://dbpedia.org/ontology/leaderTitle> ?v1 . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?role ?agencyDomain
WHERE {
  ?person a dbpedia:Person;
    dbpedia:jobTitle ?role .
  ?person rdfs:member [ a dbpedia:Organization ;
                      dbpedia:name ""International Energy Agency"" ] .
  ?organization a dbpedia:Organization;
    dbpedia:domain ?agencyDomain .
}
```",4,4,5,2,2,2,3,28,0,0,99,0,0.0,0
645,46,val,"Give me the commander in the force of the commander in Siege of Madrid and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?siege a dbpedia:SocietalEvent;
    dbpedia:instanceOf dbpedia:Siege_of_Madrid .
  ?largo caballero a dbpedia:Person;
    dbpedia:name ""Francisco Largo Caballero"" .
  ?largo rdfs:member ?commander .
  ?commander a dbpedia:MilitaryPerson .
}
```",5,8,6,3,2,3,3,71,0,0,53,0,0.0,0
715,42,val,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in Spanish Civil War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander_in_rif_war ?commander_in_spanish_civil_war ?ibarnegaray_association
WHERE {
  ?rif_war a dbpedia:Conflict;
    dbpedia:participatingSides [ memberOf dbpedia:MilitaryUnit ?commander_in_rif_war ] .
  ?spanish_civil_war a dbpedia:Conflict;
    dbpedia:participatingSides [ some ?side memberOf dbpedia:MilitaryOrganization ?commander_in_spanish_civil_war ] .
  ?ibarnegaray foaf:member ?commander_in_rif_war .
  ?ibarnegaray foaf:member ?commander_in_spanish_civil_war .
  ?ibarnegaray rdfs:label ""Carlos Franco Iribarnegaray""@es.
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
839,44,val,"Give me the band of the member of Böhse Onkelz and band of Kevin Russell (musician) and band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v4 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?person a dbpedia:Musician;
    dbpedia:band ?band .
  ?band rdfs:label ?bandName .
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
41,23,val,"Give me the party of the work, that is an office holder, of yes and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","Given the structured nature of the data in DBpedia, we can construct a SPARQL query to retrieve the required information. The query will look for individuals associated with the Castlereagh Borough Council and then extract their respective parties.

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?officeHolderParty ?leaderParty
WHERE {
  ?council dbpedia:hasMember ?officeHolder .
  ?officeHolder a dbpedia:OfficeHolder;
    dbpedia:politicalAffiliation ?officeHolderParty .

  ?politician a dbpedia:Person;
    dbpedia:isLeaderOf ?council ;
    dbpedia:politicalAffiliation ?leaderParty .
}
```

This query will return the parties of the office holders (work) and the leaders (politicians and office holders) of the Castlereagh Borough Council.",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
865,41,val,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of Shahla Khatun and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find Abu Ahmad Abdul Hafiz
SELECT ?person WHERE {
  ?person a dbpedia:Person; foaf:name ""Abu Ahmad Abdul Hafiz"" .
}

# Step 2: Find the child who is a politician
SELECT ?child WHERE {
  ?child a dbpedia:Person; dbpedia:parent ?person; dbpedia:occupation dbpedia:Politician .
  FILTER (?child != ?person) # Ensure it's not the parent
}

# Step 3: Find Shahla Khatun and her father
SELECT ?shahla WHERE {
  ?shahla a dbpedia:Person; foaf:name ""Shahla Khatun"" .
  ?shahla dbpedia:parent ?father .
}

# Step 4: Find the common father between the two children
# This step assumes that the children are linked to their parents in a way that allows us to find common parents.
# We need to join the two sets of triples to find common individuals.

# Joining the datasets using shared identifiers (e.g., dbpedia IDs)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?commonFather
WHERE {
  ?child a dbpedia:Person; dbpedia:id ?childId .
  ?shahla a dbpedia:Person; dbpedia:id ?shahlaId .
  ?child rdf:type foaf:ChildOf ?parentOfChild .
  ?shahla rdf:type foaf:ChildOf ?parentOfShahla .
  ?parentOfChild dbpedia:parent ?commonFather .
  ?parentOfShahla dbpedia:parent ?commonFather .
}

# Step 5: Find the country of residence for Ram Jaipal Singh Yadav
SELECT ?country WHERE {
  ?person a dbpedia:Person; foaf:name ""Ram Jaipal Singh Yadav"" .
  ?person dbpedia:residence ?country .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
216,54,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in the coach of Croatia national under-21 football team and team of Ognjen Vukojević.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v5 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?playerCoach
WHERE {
  ?playerCoach a dbpedia:SoccerPlayer .
  ?playerCoach a dbpedia:SportsManager .
  ?playerCoach dbpedia:coachOf dbpedia:Croatia national under-21 football team .
  ?playerCoach foaf:knows ?vukojevic .
  ?vukojevic a dbpedia:SoccerPlayer .
  ?vukojevic dbpedia:playsFor ?soccerClub .
  ?soccerClub a dbpedia:SoccerClub
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
129,21,val,Give me the associated musical artist of the person born as Tahj Malik Chandler and associated musical artist of EarthGang and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artistName ?role
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Tahj Malik Chandler""@en .
  ?person a dbpedia:MusicArtist ;
    rdfs:label ?artistName ;
    dbpedia:role ?role .
  FILTER (lang(?artistName) = ""en"")  # Only consider English names
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
976,47,val,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?leaderOffice ?mayorOffice
WHERE {
  ?politician a dbo:Politician;
    dbpprop:office dbo:LeaderOfGrandNationalAssemblyOfTurkey .
  ?politician a dbo:OfficeHolder;
    dbo:office dbo:MayorOf ?
  .
  ?politician rdf:type dbo:Milletİttifakı.
}",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
573,52,val,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and parent of John Quincy Adams and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://dbpedia.org/property/governor> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?decedent WHERE {
  ?phelanResidence a dbo:Settlement ; dbpprop:residenceOf William J. Phelan .
  ?john_quincy_adams a dbo:Person; dbpprop:childOf ?phelanResidence .
  ?charlie_baker_real_name a dbo:Person; dbpprop:realName Charlie Baker (Australian footballer) .
  ?adminRegion a dbo:Region ; dbpprop:administrationOf ?charlie_baker_real_name .
  ?decedent a dbo:Person; dbpprop:decedentIn ?adminRegion .",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
645,48,val,"Give me the commander in the force of the commander in Siege of Madrid and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?roleInSiege ?agencyOrOrganization
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1873-07-14"";
    dbpedia:deathDate ""1943-12-28"";
    dbpedia:firstName ""Camilo"";
    dbpedia:surname ""Menéndez Tolosa"";
    dbpedia:roleInSiege ?roleInSiege .
  ?person a dbpedia:OfficeHolder;
    dbpedia:office ?agencyOrOrganization .
  ?agencyOrOrganization a dbpedia:GovernmentAgency .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
926,47,val,Give me the father of the father of Abdulaziz and successor of the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify Şermi Kadın's spouse
SELECT ?spouseName WHERE {
  dbpedia:Şermi_Kadın a dbpedia:Person;
    dbpedia:sibling ?sibling .
  ?sibling a dbpedia:Person;
    dbpedia:name ?spouseName .
}

# Step 2: Determine the child of Şermi Kadın's spouse
SELECT ?childName WHERE {
  ?spouseName a dbpedia:Person;
    dbpedia:child ?childName .
}

# Step 3: Find the successor of that child
SELECT ?successorName WHERE {
  ?childName a dbpedia:Person;
    dbpedia:succeededBy ?successorName .
}

# Step 4: Identify Abdulaziz's father
SELECT ?fatherName WHERE {
  dbpedia:Abdulaziz a dbpedia:Person;
    dbpedia:father ?fatherName .
}

# Step 5: Determine the father of the person identified in step 4
SELECT ?grandfatherName WHERE {
  ?fatherName a dbpedia:Person;
    dbpedia:parent ?grandfatherName .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
976,55,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as Mehmet Naci Bostancı and office of the leader, that is a politician, of Grand National Assembly of Turkey.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace ?mayorOffice ?grandNationalAssemblyLeaderOffice
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Mehmet Naci Çakmakçı""@en .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:OfficeHolder ;
    dbpedia:office dbpedia:MayorOfTurkey .
  ?person a dbpedia:Politician ;
    dbpedia:partyMemberOf dbpedia:NationAlliance_Turkey .
  ?grandNationalAssemblyLeaderOffice a dbpedia:Office;
    dbpedia:name ""Grand National Assembly of Turkey""@en .
  ?mayorOffice a dbpedia:Office;
    dbpedia:name ""Mayor of Turkey""@en .
}",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
839,54,val,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of Matthias Röhr.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v0 <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?artist a dbpedia:MusicalArtist;
    dbpedia:birthPlace ?birthPlace .
  ?band a dbpedia:Band; 
    dbpedia:member ?musician .
  ?musician a dbpedia:Person;
    foaf:name ""Kevin Richard Russell"" .
  ?musician a dbpedia:Person;
    foaf:name ""Peter Schorowsky"" .
  ?musician a dbpedia:Person;
    foaf:name ""Matthias Röhr"" .
}
]]",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
445,53,val,"Give me the death place of Patrick Moore and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in the award of George H. Cameron.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . },"SELECT ?deathPlace ?athleteName ?countryName ?awardName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Patrick Moore"" .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .

  ?athlete a dbpedia:Athlete;
    dbpedia:residenceCountry ?country .
  
  ?country a dbpedia:Country;
    dbpedia:name ?countryName .

  ?athlete dbpedia:awardedBy ?award .
  ?award a dbpedia:Award .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
773,54,val,"Give me the spouse of the father of Charles the Fat and parent of Charles the Fat and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/ontology/successor> ?v5 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father Louis_the_Pious ;
    dbpedia:mother Judith_of_Bavaria .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
507,43,val,"Give me the professional in Film director, television director and director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of Anne V. Coates.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v4 <http://dbpedia.org/ontology/director> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1919-06-17""^^xsd:date;
    dbpedia:spouse dbpedia:Anne_V_Coates .
  OPTIONAL { 
    ?person rdfs:label ?profession . 
    FILTER (regex(?profession, ""Film director|television director|director"")) 
  }
}",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
36,22,val,"Give me the actor of the claim to fame, that is a film, of Lepacious Bose and person born in the birth year of Deanne Bray.",SELECT ?result WHERE { <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v0 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthYear> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:birthday ""1970-01-01""^^<date> .
  ?actor foaf:name ?name .
  
  ?film rdf:type dbpedia:Film ;
    dbpedia:star ?actor .
  ?actor a dbpedia:Actor;
    dbpedia:act_in_film ?film .
  ?film rdf:type dbpedia:Film ;
    dbpedia:star ?actor .
  FILTER (?actor = ""Lepacious Bose"")
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
200,7,val,Give me the reference to the name of Angelcorpse and band member of Order from Chaos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Angelcorpse> <http://xmlns.com/foaf/0.1/name> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Order_from_Chaos> . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?member
WHERE {
  ?angelcorpse a dbpedia:Band ;
               dbpedia:bandMember ?member .
  ?order_from_chaos a dbpedia:Band ;
                    dbpedia:bandMember ?member .
}
```",3,3,4,2,2,2,2,9,0,20760,1,0.0,0.0,0
582,46,val,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  SOME ?relation WHERE { ?person dbpedia:father ?relation }
    AND ?relation a [ dbpedia:isA dbpedia:SoccerPlayer ; dbpedia:role ""player"" ] .
    AND ?relation a [ dbpedia:isA dbpedia:Manager ; dbpedia:role ""soccer manager"" ] .
}
```

This SPARQL query looks for individuals who are both a `Person` and have a father (`?person dbpedia:father ?relation`) that is both an `SoccerPlayer` with the role of a player (`dbpedia:role ""player""`), and also an `Manager` with the role of a soccer manager (`dbpedia:role ""soccer manager""`).",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
507,55,val,"Give me the spouse of the person born as Anne Voase Coates and professional in the profession of Guy Ferland and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v3 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v5 <http://dbpedia.org/ontology/director> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?anneVoaseCoates a dbpedia:Person;
    dbpedia:name ""Anne Voase Coates"" .
  ?anneVoaseCoates dbpedia:marriedTo ?spouse .
  OPTIONAL { 
    ?movie a dbpedia:Film; 
    dbpedia:director ?anneVoaseCoates .
    ?movie dbpedia:actor Beryl_Reid .
  }
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
976,54,val,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?leaderOffice ?mayorOffice ?partyOffice
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolderOfOffice ?office .
  ?office a dbpedia:Office ;
    dbpedia:officeType ""Leader of Grand National Assembly of Turkey"" .
  ?person2 a dbpedia:Person;
    dbpedia:officeHolderOfOffice ?mayorOffice .
  ?office2 a dbpedia:Office ;
    dbpedia:officeType ""Mayor of [City]""@en .
  ?person3 a dbpedia:Person;
    dbpedia:officeHolderOfOffice ?partyOffice .
  ?office3 a dbpedia:Office ;
    dbpedia:officeType ""Political Party""@en; dbpedia:name ""Millet İttifakı""@en .
}",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
41,21,val,"Give me the party of Declan Costello and party of the work, that is an office holder, of yes and party of Mark Durkan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/author> ""yes""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?partyName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Declan Costello"" .
  ?person a dbpedia:Person;
    dbpedia:name ""Mark Durkan"" .
  ?person dbpedia:politicalParty ?party .
}",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
645,55,val,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for Camilo Menéndez Tolosa
SELECT ?leader WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Camilo Menéndez Tolosa"";
    dbpedia:role dbpedia:P31 wd:Q122; # Assuming 'role' is used to denote leadership
    dbpedia:deathPlace ""Madrid, Spain""
  }
  
# Query for Francisco Largo Caballero
SELECT ?leader WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Francisco Largo Caballero"";
    dbpedia:role dbpedia:P31 wd:Q122; # Assuming 'role' denotes leadership
    dbpedia:deathPlace ""Madrid, Spain""
  }
  
# Query for Carlos Asensio Cabanillas
SELECT ?commander ?conflict WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Carlos Asensio Cabanillas"";
    dbpedia:role dbpedia:P31 wd:Q122; # Assuming 'role' denotes military command
    dbpedia:militaryConflict dbpedia:P31 wd:Q123; # Assuming 'militaryConflict' is used for Spanish Civil War
  }
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
892,50,val,"Give me the landmark at elevation of the award of the member of E-girls and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?landmark ?elevation
WHERE {
  ?member a dbpedia:Person;
    dbpedia:group dbpedia:E_Girls .
  ?member dbpedia:awardedBy dbpedia:Democratic_Party_(Italy) .
  ?award a dbpedia:Award ;
            dbo:elevation ?elevation .
  ?landmark a dbpedia:Landmark ;
            dbo:location dbpedia:Italy;
            dbo:type dbpedia:Region;
            dbo:type dbpedia:Settlement;
            dbo:type dbpedia:Administrative_region .
  ?award rdfs:label ?award_label.
  ?landmark rdfs:label ?landmark_label .
  ?award ?landmark .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
645,42,val,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of Spanish Civil War and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?leader ?militaryForce
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ?birthDate .
  ?person dbpedia:deathDate ?deathDate .
  ?person rdfs:label ?name .
  ?person dbpedia:militaryBranch ?militaryBranch .
  ?militaryBranch rdfs:label ?militaryForceLabel .
  FILTER (lang(?name) = ""es"" )  # Assuming we are looking for Spanish names
}
```

This query selects individuals (`?person`) who:
- Are people (`a dbpedia:Person`)
- Have a birth date (`dbpedia:birthDate`), death date (`dbpedia:deathDate`), and a label in Spanish (`lang(?name) = ""es""`).
- Are associated with a military branch (`?person dbpedia:militaryBranch ?militaryBranch`).
- The military branch has a label that indicates it is the Spanish Republican Army or another relevant military force of the Spanish Civil War.",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
987,53,val,"Give me the birth place of Moamer Kasumović and entity in the region, that is a country, of Central European Time and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Moamer Kasumović""@en .
  ?person dbpedia:birthPlace ?birthPlace .
}

PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX timezone: <http://www.wikidata.org/prop/direct/timezone>

SELECT ?country WHERE {
  ?country a timezone:TimeZone;
    timezone:identifier ""CET"" .
  ?country rdfs:label ?countryLabel .
}

PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName ?artistDetails WHERE {
  ?band a dbpedia:Band;
    dbpedia:name ?bandName .
  ?band dbpedia:hasMember ?artist .
  ?artist a dbpedia:Person;
    dbpedia:name ""Dado Polumenta""@en .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
865,45,val,Give me the father of AK Abdul Momen and father of the child of the father of Abul Maal Abdul Muhith and native of British Raj.,SELECT ?result WHERE { <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v4 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father_of_AK_Abdul_Momen ?grand_father
WHERE {
  ?muhith a dbpedia:Person;
    dbpedia:name ""Abul Maal Abdul Muhith"";
    dbpedia:nativePlace ""British Raj"" .
  ?muhith dbpedia:hasFather ?father_of_muhith .
  ?father_of_muhith a dbpedia:Person;
    dbpedia:name ?grand_father .
  ?ak_abdul_momen a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen"";
    dbpedia:father ?father_of_AK_Abdul_Momen .
}",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
926,42,val,"Give me the child of the father, that is a royalty, of Mustafa III and father of the father of Abdulaziz and successor of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?parent a dbpedia:Monarch; dbpedia:name ""Mustafa III"" .
  ?child a dbpedia:Person;
    dbpedia:father ?parent;
    dbpedia:royalty true;
    dbpedia:birthDate ?birthDate;
    dbpedia:deathDate ?deathDate .
  ?child dbpedia:succeeded ?parent .
  FILTER (STR(?birthDate) = ""Abdulaziz"") .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
456,54,val,"Give me the professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and spouse of the actor of Pacific Drive and band of Alan Doyle.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?alterEgo
WHERE {
  ?person a dbpedia:Character;
    dbpedia:type dbpedia:Detective ;
    dbpedia:actor [ dbpedia:memberOf foaf:group ""Great Big Sea"" ] .
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
933,46,val,"Give me the reference to the birth name of Alan Warner (musician) and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Find Alan Warner as a musical artist
SELECT ?alan_warner_born WHERE {
  ?person a dbpedia:MusicalArtist;
    dbpedia:name ""Alan Warner""@en;
    dbpedia:birthDate ?alan_warner_born .
}

# Find The Ramong Sound as a band and its members
SELECT ?band ?band_members WHERE {
  ?band a dbpedia:Band;
    dbpedia:name ""The Ramong Sound""@en;
    dbpedia:members ?band_members .
  # Check if Alan Warner is a member of the band
  ?band_members a dbpedia:Person;
    dbpedia:name ""Alan Warner""@en;
    dbpedia:role ""Member""@en .
}

# Combine results to get birth name and band details
CONSTRUCT {
  ?birthName [a dbpedia:Person; dbpedia:name ?alan_warner_name],
          ?bandDetails [a dbpedia:Band; dbpedia:name ?band_name]
} WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Alan Warner""@en .
  ?band a dbpedia:Band;
    dbpedia:name ""The Ramong Sound""@en .
  ?person dbpedia:memberOf ?band .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
791,42,val,"Give me the predecessor of Emperor Antoku and father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?predecessorName ?fatherName ?wifeName
WHERE {
  ?emperor dbpedia:birthPlace ""Heian-kyō"" ;
               dbpedia:deathPlace ""Kōfuku-ji"";
               rdfs:label ""Emperor Antoku""@en .
  ?nextEmperor dbpedia:successor ?emperor;
                 rdfs:label ""Emperor Go-Daigo""@en .
  ?takakura dbpedia:birthPlace ""Heian-kyō"" ;
               dbpedia:deathPlace ""Kōfuku-ji"";
               rdfs:label ""Emperor Takakura""@en .
  ?takakuraSpouse a dbpedia:Person;
               dbpedia:spouse ?wifeName .
  ?wifeName a dbpedia:Person;
               rdfs:label ""Empress Go-Sanjō""@en .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
606,16,val,"Give me the birthplace of the alumnus of University of Pennsylvania and figure known as the nickname of DeKalb, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?v2 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:alumniOf dbpedia:University_of_Pennsylvania ;
    dbpedia:nickname ""nickname of DeKalb, Illinois"" .
  FILTER (lang(?person) = ""en"")  # Assuming the data is in English
}",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
216,52,val,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and team of Ognjen Vukojević.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?coach
WHERE {
  ?coach a dbpedia:Coach;
    dbpedia:coached dbpedia:Croatia national under-21 football team .
  ?coach dbpedia:birthPlace ?birthPlace .
  ?coach a dbpedia:SoccerPlayer;
    dbpedia:playedFor dbpedia:ClubOgnjenVukojevic .
  ?coach a dbpedia:SportsManager;
    dbpedia:managed dbpedia:ClubOgnjenVukojevic .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
888,15,val,"Give me the commander in the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022) and awardee of Hero of Ukraine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""Hero of Ukraine""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander
WHERE {
  ?person a dbpedia:Person;
    dbpedia:militaryBranch dbpedia:UkrainianGroundForces .
  ?person rdfs:label ?name .
  ?person dbpedia:awardedHeroOfUkraine true .
  FILTER (regex(str(?name), ""AK""))  # Assuming AK is the commander's initials
}",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
507,51,val,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and professional in the profession of the person born on 1966-02-18.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/director> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?result <http://dbpedia.org/property/occupation> ?v2 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?director
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1966-02-18""^^xsd:date;
    foaf:name ""AK Abdul Momen""@en .
  ?movie a dbpedia:Film; 
    dbpedia:actor ?person;
    dbpedia:director ?director .
  FILTER (lang(?movie) = ""en"")  # restrict to English language films
}",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
47,40,val,"Give me the office of Bidesh Ranjan Bose and office of the administration of the commander, that is a politician, in Operation Green Hunt and office of Ajoy Mukherjee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office_bidesh_ranjan_bose ?administration_commander_office ?joy_mukherjee_office
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:role ""Commander in Operation Green Hunt"" .
  ?person rdfs:label ""Bidesh Ranjan Bose""@en .
  
  ?person2 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person2 dbpedia:role ""Administrator of the Commanders' Office in Operation Green Hunt"" .
  ?person2 rdfs:label ""Ajoy Mukherjee""@en .
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
933,47,val,Give me the band of the band of Alan Warner (musician) and reference to the birth name of the professional in Musician.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName ?birthName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthName ?birthName .
  ?person a dbpedia:Musician;
    dbpedia:associatedBand ?bandName .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
98,20,val,Give me the region of Philippine Standard Time and entity in Philippines and birth place of the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?regionPST
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Paolo Elito M. Ballesteros IV"" .
  ?person geo:birthLocation ?birthPlace .
  ?person rdfs:label ?regionLabel .
  FILTER (lang(?regionLabel) = ""filipino"")  # Ensure the region label is in Filipino
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
281,19,val,"Give me the awardee of Medal bar and awardee of Volunteer Decoration and commander in the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedMedal dbpedia:MedalBar ;
    dbpedia:awardedDecoration dbpedia:VolunteerDecoration ;
    dbpedia:roleInMilitaryConflict dbpedia:CommanderInWar .
  ?person rdfs:label ""Roy Boehm""@en .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
582,48,val,"Give me the figure known as the nickname of Japan national football team and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?nickname ?residence WHERE {
  ?team a dbpedia:SportsTeam;
    dbpedia:country dbpedia:Japan;
    dbpedia:nickname ?nickname .
  ?person a dbpedia:Person;
    dbpedia:name ""Hirotaka Sugawara"";
    dbpedia:birthPlace dbpedia:Japan;
    dbpedia:residence ?residence .
  ?team rdfs:label ?nickname .
  ?person foaf:knows ?team .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
715,44,val,"Give me the commander in the force of Francisco Largo Caballero and commander in Rif War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander1 ?commander2 ?office
WHERE {
  ?commander1 a dbpedia:Person;
    dbpedia:leadRole [ dbpedia:hasMember ?office ] .
  ?commander2 a dbpedia:Person;
    dbpedia:partOfMilitaryUnit [ dbpedia:leader ?commander1 ] .
  ?office rdfs:label ""Office""@en .
  ?commander1 ns:inDataset <http://dbpedia.org/ontology/> .
  ?commander2 ns:inDataset <http://dbpedia.org/ontology/> .
}",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
433,55,val,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and professional in the profession of Bob Marley and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }",PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?musicalArtist WHERE { ?person a dbpedia:MusicalArtist . ?person a dbpedia:Artist . ?person dbpedia:associatedWith ?scott_lafaro . ?person dbpedia:associatedWith ?bob_marley . },6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
93,17,val,"Give me the capital of Alaska and death place of the governor of the native, that is a politician, of Seattle.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alaska> <http://dbpedia.org/ontology/capital> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?v0 <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?capital ?deathPlace
WHERE {
  ?governor a dbpedia:Politician;
    dbpedia:office ""Governor of Washington (state)"" .
  ?governor dbpedia:name ""Jay Inslee"" .
  ?governor dbpedia:term_start ""2013-01-10T00:00:00Z"" .
  ?governor dbpedia:end_date ""2021-01-10T00:00:00Z"" .
  ?governor dbpedia:deathPlace ?deathPlace .
  ?state a dbpedia:PoliticalEntity;
    dbpedia:name ""Washington (U.S. state)"" .
  ?state dbpedia:capital ?capital .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
645,54,val,"Give me the leader of Ministry of the Army (Spain) and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?result <http://dbpedia.org/ontology/battle> ?v5 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?ministryLeader ?militaryForce
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Carlos Asensio Cabanillas"" .
  ?person dbpedia:role [ rdf:type dbpedia:MilitaryRole ] .
  ?militaryRole a dbpedia:MilitaryRole; 
    dbpedia:commander ?person .
  ?ministry a dbpedia:GovernmentDepartment;
    dbpedia:name ""Ministerio de la Armada"" .
  ?ministryLeader a dbpedia:Person;
    dbpedia:role [ rdf:type dbpedia:GovernmentPosition ] .
  ?ministryLeader dbpedia:office ?ministry .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
645,49,val,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?leader
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Restoration, Spain"" .
  ?person foaf:commander ?commander .
  ?commander a dbpedia:Organization;
    dbpedia:leader ?leader .
  FILTER (lang(?person) = ""en"")  # Assuming the person's language is English for easier search in DBpedia
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
645,50,val,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v4 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?leader ?militaryForce ?societalEvent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:role ""Military Officer"" .
  ?person dbpedia:birthPlace ""Spain""^^xsd:string ;
    dbpedia:deathPlace ""Spain""^^xsd:string ;
    dbpedia:officeHolderOffice ?office .
  ?office a dbpedia:Government_Agency_Organization ;
    rdfs:label ""Military Force""@en .
  ?person rdfs:label ""Camilo Menéndez Tolosa""@en;
    dbpedia:role ""President of the Provisional Government""@en .
  ?societalEvent a dbpedia:Event;
    dbpedia:conflict ""Spanish Restoration""@en ;
    dbpedia:militaryConflict ?militaryConflict .
  ?militaryConflict a dbpedia:Military_Conflict;
    rdfs:label ""Peninsular War""@en .
}",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
933,41,val,Give me the reference to the birth name of Alan Warner (musician) and band of the band of Alan Warner (musician) and band of The Ramong Sound.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthName ?band1 ?band2
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ?birthName .
  ?person dbpedia:is_in_band ?band1 .
  ?band1 rdfs:label ""The Ramong Sound""@en .
  ?person2 a dbpedia:Person;
    dbpedia:name ?birthName .
  ?person2 dbpedia:is_in_band ?band2 .
  ?band2 rdfs:label ""Alan Warner (musician)""@en .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
5,16,val,"Give me the entity in the award of Coro de la Pontificia Universidad Católica de Puerto Rico and birthplace of the person born, that is a politician, as .","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/birthName> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace ?award
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen""@en .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
  OPTIONAL { 
    ?person dbpedia:awardedBy ?award .
  }
}
```",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
129,22,val,"Give me the professional in the mayor of 1999 West Dunbartonshire Council election and associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge.",SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?mayor ?artist
WHERE {
  ?movie dbpedia:hasMusicBy ?artist .
  ?artist rdfs:label ""Dreamville Presents: Revenge""@en .
  ?election dbpedia:heldOfficeStartsAt ""1999-04-01""^^xsd:date .
  ?candidate dbpedia:officeHolderOfOfficeInElection ?election .
  ?candidate foaf:name ?mayor
}
```",4,5,5,2,2,2,3,28,0,0,3,0,0.0,0
465,50,val,"Give me the successor of the child, that is a royalty, of Anne of Brittany and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?royaltyPerson a dbpedia:Person;
    dbpedia:parent dbpedia:Maximilian_I_Holy_Roman_Emperor .
  ?royaltyPerson a dbpedia:Person;
    dbpedia:child ?childPerson .
  ?childPerson a dbpedia:Person;
    dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
353,7,val,"Give me the alma mater of the awardee of Medal of the Order ""For Merit to the Fatherland"" and entity in Russia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_the_Order_%22For_Merit_to_the_Fatherland%22> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?almaMater
WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality ""Russia"";
    dbpedia:awardedMedal dbpedia:Medal_of_the_Order_for_Merit_to_the_Fatherland .
  ?person dbpedia:educatedAt ?almaMater .
}",3,3,4,2,2,2,2,9,0,0,5,0,0.0,0
874,15,val,"Give me the band of Robert Hart (musician) and band of the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Robert_Hart_(musician)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?v0 <http://dbpedia.org/property/writer> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?band1 ?band2
WHERE {
  ?song a dbpedia:MusicSingle;
    dbpedia:performer [ rdf:type dbpedia:MusicalArtist ] .
  ?song rdfs:label ""One Love"" .
  ?horace_andy a dbpedia:Person;
    dbpedia:role dbpedia:WriterOf ?song .
  ?robert_hart a dbpedia:Person;
    dbpedia:role dbpedia:MusicianOf ?song .
  ?band1 a dbpedia:Band; dbpedia:performer ?horace_andy .
  ?band2 a dbpedia:Band; dbpedia:performer ?robert_hart .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
892,53,val,"Give me the entity in the profession of the true self of Enrico Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of 58.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/province> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?profession ?region ?landmark_elevation WHERE {
  ?person a dbpedia:Person; foaf:name ""Enrico Crolla"" .
  ?person dbpedia:polski_partytwo ""Democratic Party (Italy)"" .
  ?region rdfs:label ""The region of Enrico Crolla's activity""@it .
  ?landmark a dbpedia:Landmark; rdfs:label ""Landmark""@it; dbpedia:heightInMeters ""58"" .
  ?person dbpedia:administration ?region .
  ?region rdfs:subPropertyOf dbpedia:political-administrative-divisions .
  ?landmark geoname:adminLocation ?region .
}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
865,44,val,"Give me the native of British Raj and father of the child of Abu Ahmad Abdul Hafiz and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?childName ?fatherName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate [isBefore 1947] .
  ?person dbpedia:parent [owl:hasChild ?child].
  ?child rdf:type dbpedia:Person; dbpedia:name ?childName .
  ?child'sFather rdf:type dbpedia:Politician .
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
573,44,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at Massachusetts.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v2 . },"Given the reasoning steps, the corresponding SPARQL query would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?author a dbpedia:Person;
    dbpedia:birthPlace ""Massachusetts"" .
  ?author dbpedia:deathPlace ""Massachusetts"" .
  ?author dbpedia:officeHolder true .
  ?author dbpedia:politician true .
  ?author dbpedia:work [""Exchequer Standards""] .
  ?parent a dbpedia:Person;
    dbpedia:parentOf ?author .
}
```",5,8,6,2,3,3,3,71,0,0,2,0,0.0,0
582,44,val,"Give me the figure known as the nickname of Japan national football team and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?nickname
WHERE {
  ?player a dbpedia:Person;
    dbpedia:sportDiscipline dbpedia:Soccer ;
    dbpedia:country dbpedia:Japan .
  ?player dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:role dbpedia:Athlete ;
    dbpedia:role dbpedia:SoccerManager ;
    dbpedia:role dbpedia:SportsManager .
  ?player rdfs:label ?nickname .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
645,53,val,"Give me the military force of Spanish Civil War and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and commander in the force of the commander in Siege of Madrid.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?militaryForce ?leader WHERE { ?person a dbpedia:Person; rdfs:label ?name . ?person ns:fightIn ?battle . ?battle a dbpedia:Event; rdfs:label ?battleName . ?battleName `Siege of Madrid` . ?person ns:commanderIn ?battle },6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
965,53,val,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as Prince George of Battenberg and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse2 ?nobility WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""George Mountbatten, 1st Marquess of Milford Haven"";
    dbpedia:sibling [ dbpedia:name ""Louis Mountbatten, 1st Earl Mountbatten of Burma"" ] .
  ?person dbpedia:spouse ?spouse1 .
  ?spouse1 a dbpedia:Person;
    dbpedia:spouse ?spouse2 .
  ?spouse2 a dbpedia:Noble .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
917,44,val,Give me the child of the father of Keʻelikōlani and parent of Albert Kamehameha and child of the father of Kamehameha IV.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?grandparent a dbpedia:Person;
    dbpedia:father ?father .
  ?child a dbpedia:Person;
    dbpedia:parent ?father ;
    dbpedia:child ?Albert_Kamehameha .
  ?child a dbpedia:Person;
    dbpedia:child Kamehameha_IV .
}",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
507,54,val,"Give me the professional in Film director, television director and spouse of the person born as Anne Voase Coates and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://dbpedia.org/ontology/director> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?profession ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen""@en .
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1919-06-17""^^xsd:date .
  ?person a dbpedia:Person;
    dbpedia:role dbpedia:Film_Director .
  ?person a dbpedia:Person;
    dbpedia:role dbpedia:Television_Director .
  ?person wdt:P31 wd:tvo:Rani_Mukerji .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
933,53,val,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to Alan Warner and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for The Ramong Sound's band details
SELECT ?bandName ?bandDetails WHERE {
  ?band a dbpedia:Band;
    rdfs:label ""The Ramong Sound""@en .
  ?band dbpedia:hasArtist ?artist .
  ?artist a dbpedia:Musician .
}

# Query for Alan Warner (musician) and his band details
SELECT ?groupName ?groupDetails WHERE {
  ?person a dbpedia:Person;
    rdfs:label ""Alan Warner""@en;
    foaf:musicalArtist ?artist .
  ?artist a dbpedia:Musician;
    dbpedia:band ?group .
  ?group a dbpedia:Band;
    rdfs:label ?groupName .
}

# Combine results to ensure both queries are satisfied
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
47,43,val,"Give me the office of Ajoy Mukherjee and office of the awardee of the award, that is an award, of Mantu Ghosh and office of Suvendu Adhikari.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find Ajoy Mukherjee's office
SELECT ?ajoy_mukherjee_office WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Ajoy Mukherjee""@en;
    dbpedia:office ?ajoy_mukherjee_office .
}

# Step 2: Find the award Mantu Ghosh received and the awardee
SELECT ?mantu_ghosh_award ?awardee WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Mantu Ghosh""@en;
    dbpedia:awardReceived ?mantu_ghosh_award .
  ?mantu_ghosh_award a dbpedia:Award .
  ?awardee a dbpedia:Person;
    dbpedia:name ?awardee_name .
}

# Step 3: Find Suvendu Adhikari's office
SELECT ?suvendu_adhikari_office WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Suvendu Adhikari""@en;
    dbpedia:office ?suvendu_adhikari_office .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
236,17,val,"Give me the party member of Federalist Party and party member of the administration of the reference, that is an office holder and a politician, to James Madison.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Federalist_Party> . ?v0 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?v3 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?personName ?party
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolder TRUE;
    dbpedia:politicalPartyMember dbpedia:Federalist_Party .
  ?person dbpedia:name ?personName .
  ?person rdfs:label ?partyLabel .
  FILTER (lang(?partyLabel) = ""en"")  # Only consider English labels
}",4,6,5,3,2,3,2,20,0,0,19,0,0.0,0
917,41,val,"Give me the child of Kekūanāoʻa and child of the father of Keʻelikōlani and parent of the child, that is a royalty, of Kamehameha IV.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commonIndividual
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:parent ?parent1 .
  ?person2 a dbpedia:Person;
    dbpedia:parent ?parent2 .
  
  ?parent1 ns:fatherOf ?person2 .
  ?parent2 ns:childOf ?person1 .
  
  ?commonIndividual a dbpedia:Royalty;
    dbpedia:child ?person2 .
    dbpedia:parent ?parent1 .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
917,48,val,"Give me the child of the father of Kamehameha IV and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?childName ?royaltyTitle WHERE {
  ?father a dbpedia:Person; dbpedia:name ""Kaʻahumanu II"".
  ?father dbpedia:hasChild ?child.
  ?child a dbpedia:Person; dbpedia:parent ?grandParent.
  ?grandParent a dbpedia:Person; dbpedia:name ""Kamehameha IV"".
  ?child dbpedia:hasChild ?childOfChild.
  ?childOfChild a dbpedia:Person; dbpedia:role dbpedia:Monarch .
}
```

This query looks for a person (`?childName`) who is a child of Kaʻahumanu II (`?father`), has a grandparent who is Kamehameha IV, and has at least one child (`?childOfChild`) who holds the role of a monarch (`dbpedia:Monarch`). This query assumes that any children of Kaʻahumanu II would be considered royalty and that at least one of them would become a monarch.",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
839,53,val,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of the band, that is a musical artist, of Charlie Huhn and band of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musician ?band
WHERE {
  ?musician a dbpedia:Musician;
    dbpedia:associatedBand ?band .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
606,15,val,"Give me the birthplace of Charles I. Barber and figure known as the nickname of the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Charles_I._Barber> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/nickname> ""Barb City""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person dbpedia:nickname ""Barb City"";
    dbpedia:birthPlace ?birthPlace .
  FILTER (lang(?person) = ""en"")  # Assuming the information is in English
}",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
933,51,val,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and reference to the birth name of Alan Warner (musician).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1947-04-21""^^xsd:date;
    dbpedia:name ""Alan Warner""@en;
    dbpedia:role dbpedia:Musician .
  ?person rdfs:member ?band .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
192,17,val,Give me the child of the child of the parent of Anna of Hungary (Byzantine empress) and spouse of Clemence of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . <http://dbpedia.org/resource/Clemence_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child1 ?child2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:parent ?parent1 .
  ?parent1 a dbpedia:Person;
    dbpedia:child ?child1 .
  ?person2 a dbpedia:Person;
    dbpedia:spouse ?person1 .
  ?person2 a dbpedia:Person;
    dbpedia:child ?child2 .
  ?child1 ns:childOf ?child2 .
}",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
465,46,val,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Ercole II d'Este, Duke of Ferrara"" .
  ?child a dbpedia:Person;
    dbpedia:marriage ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:rank ""Royalty"" .
  FILTER (regex(str(?parent/name), ""Philip"")) .
  FILTER (regex(str(?child/name), ""Maximilian"")) .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
917,40,val,"Give me the child of Kekūanāoʻa and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of Kekūanāoʻa.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child1 ?royaltyParent1 ?child2 ?royaltyParent2 
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:parent ?person2 .
  ?person1 dbpedia:name ""Kekūanāoʻa"" .
  ?person2 a dbpedia:Person; # Assuming Kekūanāoʻa's parent
    dbpedia:name ""Parent of Kekūanāoʻa"" .

  ?royaltyParent1 a dbpedia:Person;
    dbpedia:parent ?person2 .
  ?royaltyParent1 dbpedia:name ""Royalty Name"" . # Placeholder for actual royal parent name

  ?child1 a dbpedia:Person;
    dbpedia:child ?child2 .
  ?child1 dbpedia:name ""Child of Kekūanāoʻa"" . # Placeholder for actual child name

  ?child2 a dbpedia:Person;
    dbpedia:parent ?royaltyParent2 .
  ?child2 dbpedia:name ""Another Child"" . # Placeholder for actual child name

  ?child1 dbpedia:parent ?royaltyParent1 .
  ?child2 dbpedia:parent ?royaltyParent2 .
}
```

This SPARQL query attempts to connect Kekūanāoʻa with a royal parent and then traces the lineage to find another child of that royal parent who also has a child. The placeholders (`""Royalty Name""` and `""Child of Kekūanāoʻa""`, `""Another Child""`) need to be replaced with actual names from the DBpedia ontology.",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
839,51,val,"Give me the band of the member of Böhse Onkelz and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName1 ?bandName2
WHERE {
  ?member a dbpedia:Person;
    dbpedia:memberOf dbpedia:Band ;
    dbpedia:name ""Böhse Onkelz"" .

  ?musician a dbpedia:Musician;
    dbpedia:professionalActivity dbpedia:Music ;
    dbpedia:name ""Ludwig van Beethoven"" .

  ?member dbpedia:bandMemberOf ?bandName1 .
  ?musician dbpedia:isBandMemberOf ?bandName2 .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
865,43,val,"Give me the native of British Raj and father of Shahla Khatun and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?fatherName
WHERE {
  ?shahla_khatun a dbpedia:Person;
    dbpedia:birthFather ?father .
  ?syeda_shahr_banu a dbpedia:Person;
    dbpedia:s spouse ?spouse .
  ?child a dbpedia:Person;
    dbpedia:parent ?father .
  ?spouse dbpedia:partner ?shahla_khatun .
  ?father = ?child.father
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
976,53,val,"Give me the office of the person born as Mehmet Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of Meral Akşener.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v0 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office_bostanci ?office_kilicdaroglu ?office_aksener
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Mehmet Naci Bostancı""@en .
  ?bostanciParty dbpedia:presents ?person ;
                 dbpedia:partyName ?party_name .

  ?kiliadaroğlu a foaf:Person;
    dbpedia:name ""Kemal Kılıçdaroğlu""@en;
    dbpedia:office ?office_kilicdaroglu .

  ?aksener a foaf:Person;
    dbpedia:name ""Meral Akşener""@en;
    dbpedia:office ?office_aksener .
  
  ?party_name rdfs:label ?party_label .
  ?office_kilicdaroglu dbpedia:leaderOfParty ?party_label .
  ?office_aksener dbpedia:headOfParty ?party_label .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
926,54,val,Give me the successor of the child of the spouse of Şermi Kadın and father of the father of Abdulaziz and child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:spouse ?wife .
  ?person2 a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:parent ?person1;
    dbpedia:parent ?person2 .
  ?person2 a dbpedia:Person;
    dbpedia:birthPlace ""Istanbul"" .  # Assuming Istanbul as the birthplace for simplicity
}
```

This query looks for a person (`?successor`) who is both a child of `?person2` (a spouse of Ahmed III, assumed to be in Istanbul) and a parent of `?child`, fulfilling the conditions laid out.",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
715,49,val,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/office> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander ?leader
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Iribarnegaray, Spain"";
    rdfs:label ""Carlos Franco Iribarnegaray""@es.
  ?conflict a dbpedia:MilitaryConflict;
    dbpedia:participatingSides [ memberOf ?side1 ] .
  ?commander a foaf:Person;
    dbpedia:militaryRole ?conflict;
    rdfs:label ""Commander""@en .
  ?organization a dbpedia:Organization;
    dbpedia:type ""Government Agency"";
    foaf:name ?organizationName .
  ?leader a foaf:Person;
    dbpedia:role ?organization;
    rdfs:label ""Leader""@en .
  ?person rdf:type [ owl:sameAs ?conflict ] .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
645,52,val,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in the force of the commander in Siege of Madrid and leader of Ministry of the Army (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?militaryForce
WHERE {
  ?person a dbpedia:Person;
    dbpedia:role [ owl:propertyValue ""commander in Siege of Madrid"" ] .
  ?person a dbpedia:Person;
    dbpedia:role [ owl:propertyValue ""leader of Ministry of the Army (Spain)"" ] .
  ?person dbpedia:militaryUnit ?militaryForce .
}
```

This SPARQL query will find the military unit associated with individuals who held the roles of commander in the Siege of Madrid and leader of the Ministry of the Army during the Spanish Civil War.",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
978,16,val,"Give me the band member of the person born as Nicholas Bracegirdle and band member of the professional, that is a musical artist and an artist, in .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandMember
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Nicholas Bracegirdle"" .
  ?person dbpedia:memberOf ?band .
  ?band a dbpedia:Band .
}",4,6,5,2,2,3,2,20,0,0,2,0,0.0,0
926,52,val,Give me the child of Ahmed III and successor of the child of Ahmed III and father of the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_of_ahmedIII , ?successor_of_child , ?father_of_spouse_s_partner
WHERE {
  ?person1 a dbpedia:Person; dbpedia:parent ?parentOfChild .
  ?parentOfChild a dbpedia:Person; rdfs:label ""Ahmed III"" .
  ?child_of_ahmedIII a dbpedia:Person; dbpedia:child ?successor_of_child .
  ?spouse a dbpedia:Person; dbpedia:partner ?partnerOfNeşerekKadın .
  ?partnerOfNeşerekKadın a dbpedia:Person; dbpedia:parent ?grandparentOfSpouse .
  ?grandparentOfSpouse a dbpedia:Person; rdfs:label ""Ahmed III"" .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
273,17,val,Give me the spouse of Edoardo Agnelli (industrialist) and parent of the alumnus of the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Edoardo_Agnelli_(industrialist)> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse ?parent
WHERE {
  ?edoardo a dbpedia:Person;
    dbpedia:name ""Edoardo Agnelli"" .
  ?wife a dbpedia:Person;
    dbpedia:sibling ?alumnus .
  ?alumnus a dbpedia:Person;
    dbpedia:universityDegree ""Università degli Studi di Torino"" .
  ?parent a dbpedia:Person;
    dbpedia:child ?alumnus .
}",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
976,40,val,"Give me the office of Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of Meral Akşener.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office_bostanci ?party_bostanci ?kiliçdaroğlu_office ?akşener_office
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:office dbpedia:Minister_for_Finance ;
    dbpedia:memberOf dbpedia:Party_(political_party) .
  ?person1 rdfs:label ""Naci Bostancı""@en .

  ?person2 a dbpedia:Person;
    dbpedia:office ?office_kiliçdaroğlu ;
    dbpedia:memberOf dbpedia:Party_(Republican_People's_Party) .
  ?person2 rdfs:label ""Kemal Kılıçdaroğlu""@en .

  ?person3 a dbpedia:Person;
    dbpedia:office ?office_akşener ;
    dbpedia:memberOf dbpedia:Party_(Republican_People's_Party) .
  ?person3 rdfs:label ""Meral Akşener""@en .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
917,51,val,"Give me the child of the father of the child, that is a royalty, of Kamehameha III and child of the father of Keʻelikōlani.",SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchild WHERE {
  ?grandparent a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:parent ?grandparent .
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
935,15,val,"Give me the headquarter of Provincial Assembly of Balochistan and death place of the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Provincial_Assembly_of_Balochistan> <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v0 . },"To retrieve this information from DBpedia, we can construct a SPARQL query that looks for the relevant properties associated with these entities:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?headquarter ?deathPlace
WHERE {
  ?assembly a dbpedia:ProvincialAssembly;
    dbpedia:headquarter ?headquarter .
  ?person a dbpedia:Person;
    rdfs:label ""Syed Sohail Hussain Naqvi""@en;
    dbpedia:awardedWith dbpedia:Sitara-e-Imtiaz ;
    dbpedia:deathPlace ?deathPlace .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
507,49,val,Give me the spouse of the person born as Anne Voase Coates and professional in the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Anne Voase Coates"" .
  ?person dbpedia:birthDate 1966-02-18.
  ?person rdfs:label ?profession .
  ?husband a dbpedia:Person;
    dbpedia:name ?husbandName .
  ?husband a dbpedia:Person;
    dbpedia:spouse ?spouse .
  ?husband rdfs:label ?profession .
  FILTER (?husbandProfession = ""AK Abdul Momen"")
}",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
976,51,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?officeHolder ?office WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthName ""Ali Rıza Doğan"";
    foaf:nationality dbpedia:Turkey .
  ?person dbpedia:officeHolder ?office .
  ?office a dbpedia:Office; dbpedia:officeType ""MayorOf"" .
  ?person dbpedia:partyMemberOf dbpedia:Party_Identifier_for_Nation_Alliance .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
917,50,val,"Give me the child of the father of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child1 ?child2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthParent ?father1 .
  ?person2 a dbpedia:Person;
    dbpedia:birthParent ?father2 .
  ?child1 a dbpedia:Child; 
    dbpedia:parent ?person1 .
  ?child2 a dbpedia:Child; 
    dbpedia:parent ?person2 .
  ?child1 foaf:name ""Princess Victoria Kamāmalu"" .
  ?child2 a dbpedia:Person;
    dbpedia:birthPlace ""Hawaii"" . # Placeholder for the actual birth place of the child of Keaweʻīkekahialiʻiokamoku
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
329,21,val,"Give me the entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist) and entity in United Kingdom and birthplace of Eric Cross (writer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",4,6,5,2,3,2,3,28,1,100979,0,9.902951079421667e-06,1.0,1.9805706023905488e-05
36,23,val,"Give me the actor of the claim to fame, that is a film, of Lepacious Bose and person born as the birth name of Ayo Makun.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for Lepacious Bose's films and their lead actors
SELECT ?filmTitle ?actor WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Lepacious Bose""@en .
  ?person dbpedia:actInFilm ?film .
  ?film a dbpedia:Film;
    dbpedia:title ?filmTitle .
  ?film dbpedia:leadActor ?actor
}

# Query for Ayo Makun's birth name
SELECT ?birthName WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ?name .
  ?person rdfs:label ""Ayo Makun""@en .
  ?person foaf:givenName ?birthName . # Assuming the given name is the birth name
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
445,45,val,Give me the entity in England and death place of Patrick Moore and entity in the award of the commander in Battle of Saint-Mihiel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for Patrick Moore's birthplace and death place
SELECT ?birthPlace ?deathPlace WHERE {
  ?person rdf:type dbpedia:Person;
    dbpedia:name ""Patrick Moore"" .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
}

# Query for the entity in England and the award of the commander in the Battle of Saint-Mihiel
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?entity ?birthPlace ?award WHERE {
  ?entity a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  OPTIONAL { ?entity dbpedia:awardedBy ?award }
  FILTER (lang(?award) = ""en"" ) # Only consider awards in English
  # Battle of Saint-Mihiel was in 1918, so we filter for awards around that period
  FILTER (date(?award) >= ""1918-01-01"" AND date(?award) < ""1920-01-01"")
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
839,55,val,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of Böhse Onkelz.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v5 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?bandName .
}

AND

PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthBand
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthBandName .
}

AND

PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?memberBand
WHERE {
  ?member a dbpedia:Person; dbpedia:memberOf dbpedia:Band .
  ?band rdfs:label ?memberBandName .
}",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
573,40,val,"Give me the parent of John Quincy Adams and person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","SELECT ?birthPlace ?deathPlace
WHERE {
  ?john_quincy_adams a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?john_quincy_adams a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .

  ?charlie_baker a dbpedia:Person;
    dbpedia:name ""Charlie Baker"" ;
    dbpedia:realName ""Robert Clark Baker"" .
  
  ?charlie_baker a dbpedia:OfficeHolder;
    dbpedia:office dbpedia:Premier_of_Victoria ;
    dbpedia:deathPlace ?deathPlace_in_victoria .

  ?john_adams a dbpedia:Person;
    dbpedia:name ""John Adams"" ;
    dbpedia:birthPlace ?birthPlace_john_adams .
}",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
456,50,val,"Give me the band of the band, that is a musical artist, of Dean Brody and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","To extract this information from DBpedia, we can use the following SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?person a dbpedia:Musician;
    dbpedia:birthDate ?birthDate .
  ?person rdfs:label ?name .
  ?person ns:name ""Dean Brody"" .
  ?band a dbpedia:Band ;
    dbpedia:members ?person .
}
```

This query searches for musicians named Dean Brody and then looks for bands that include these musicians as members.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
573,46,val,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:realName ""Charlie Baker""@en; 
    dbpedia:residence ?residence .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?residence a dbpedia:Location.
  ?administration a dbpedia:AdministrativeTerritory.
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
579,15,val,"Give me the native of the residence, that is English and a settlement, of the resident of Scotland and person born as Isobel Jane Miller Richard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Isobel Jane Miller Richard""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Isobel Jane Miller Richard"" .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
}",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
826,45,val,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of Anna Magdalena Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor WHERE {
  ?person a dbpedia:Person;
    dbpedia:title ""Louis II, Grand Duke of Hesse""@en;
    dbpedia:succeededBy ?successor .
  ?successor a dbpedia:Person;
    dbpedia:title ?title_en ;
    dbpedia:spouse ?spouse ;
    dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:title ""Louis IV, Grand Duke of Hesse""@en .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
892,47,val,Give me the entity in the profession of Henri Crolla and landmark at elevation of the award of the member of E-girls.,SELECT ?result WHERE { <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX ewc: <http://purl.org/europeana/ontologies#>

SELECT ?profession ?landmark_e_girls_award_elevation
WHERE {
  ?person a dbpedia:Person;
    foaf:name ""AK Abdul Momen""@en .
  ?person dbpedia:occupation ?profession .
  
  ?award a ewc:EgirlsAward ;
    ewc:awardee ?person ;
    ewc:landmark ?landmark .
  
  FILTER (lang(?award) = ""en"")  # Ensure the award is in English
}
```",5,5,6,3,2,3,3,71,0,0,11,0,0.0,0
826,47,val,"Give me the spouse of the child of Johann Heinrich Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse ?successor
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Johann Heinrich Appel""@de .
  ?child rdfs:label ""Johann Georg Appel""@de .
  ?child a dbpedia:Child; 
    dbpedia:hasParent ?parent .
  ?spouse a dbpedia:Person;
    dbpedia:wifeOf ?child .
  ?successor a dbpedia:Person;
    dbpedia:succeededBy ?child .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
791,40,val,"Give me the father of Emperor Go-Toba and predecessor of Emperor Antoku and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father ?predecessorSpouse ?spouseOfTakakura
WHERE {
  ?emperor dbpedia:birthFather ?father .
  ?emperor dbpedia:precededBy ?predecessor .
  ?predecessor rdfs:label ""Emperor Antoku"" . 
  ?emperor dbpedia:spouse ?spouse .
  ?spouse rdfs:label ""Empress Shōshi"" .
  ?emperor rdf:type dbpedia:Monarch .
  ?emperor rdfs:label ""Emperor Takakura"" .
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
573,54,val,"Give me the person decedent at the administration, that is a region, of Charlie Baker and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of John Quincy Adams.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?john_quincy_adams a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?john_quincy_adams a dbpedia:Person;
    dbpedia:residence ?residence .
  ?john_quincy_adams dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""John Quincy Adams"" .
  ?john_quincy_adams dbpedia:deathPlace ?deathPlace .
  FILTER (lang(?name) = ""en"")
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
976,42,val,"Give me the office of the person born as Mehmet Naci Bostancı and office of Meral Akşener and office of the leader, that is a politician, of Grand National Assembly of Turkey.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Mehmet Naci Bostancı and Meral Akşener
SELECT ?office_bostanci ?office_aksenner
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:name ""Mehmet Naci Bostancı""@en .
  ?person2 a dbpedia:Person;
    dbpedia:name ""Meral Akşener""@en .
  
  # Find their offices
  ?person1 dbpedia:office ?office_bostanci .
  ?person2 dbpedia:office ?office_aksenner .
  
# Leader of the Grand National Assembly of Turkey (current)
SELECT ?leader_office
WHERE {
  ?leader a dbpedia:OfficeHolder;
    dbpedia:office dbpedia:Grand_National_Assembly_of_Turkey .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
715,47,val,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for the mayor and president in the 1933 Spanish general election context
SELECT ?mayor ?president
WHERE {
  ?person a dbpedia:OfficeHolder;
    dbpedia:officeRole dbpedia:MayorOf ;
    dbpedia:politicalAffiliation dbpedia:SpanishPoliticalParty ;
    dbpedia:termStarts ""1933-03-05""^^xsd:date.
  
  ?person a dbpedia:Politician;
    dbpedia:role dbpedia:PresidentOfSpain .
}

# Query for the commander of the Rif forces during the Rif War
SELECT ?commander
WHERE {
  ?commander a dbpedia:MilitaryPerson;
    dbpedia:conflict dbpedia:Rif_War ;
    dbpedia:role dbpedia:CommanderOf .
}
```",5,9,6,3,2,3,3,71,0,0,4,0,0.0,0
124,50,val,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . }",{sparql_query},5,10,6,3,2,3,3,71,0,0,1085,0,0.0,0
216,45,val,"Give me the player in Mario Ivanković and player in Igor Bišćan and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?birthPlace ?deathPlace ?managerName ?team
WHERE { 
  ?player a dbpedia:Person; dbpedia:birthPlace ?birthPlace . 
  ?player a dbpedia:SoccerPlayer; dbpedia:deathPlace ?deathPlace . 
  ?player dbpedia:role [ owl:unionOf [ dbpedia:SportsManager ; dbpedia:SoccerManager ] ] . 
  ?manager a dbpedia:Person; dbpedia:birthPlace ?birthPlace; dbpedia:role dbpedia:SoccerManager . 
  ?player sdo:member ?team . 
  ?manager sdo:manage ?team . 
}",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
892,49,val,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?profession_of_Crolla ?administration_italian_region ?settlement ?region WHERE {
  ?person1 a dbpedia:Person; dbpedia:name ""AK Abdul Momen"" .
  ?person1 dbpedia:birthPlace ?birthPlace .
  ?person1 dbpedia:deathPlace ?deathPlace .

  ?person2 a dbpedia:Person; dbpedia:name ""Henri Crolla"" .
  ?person2 rdfs:label ?profession .

  ?cozzolino a dbpedia:Person; dbpedia:name ""Andrea Cozzolino"" .
  ?cozzolino rdf:type dbpedia:Poliitiko; dbpedia:party ""PdL"" . # Assuming PdL is the party for Andrea Cozzolino

  ?administration_italian_region a dbpedia:AdministrativeDivision; dbpedia:country ""Italy""; dbpedia:regionName ?region_name .
  ?administration_italian_region rdfs:label ?administration_name .

  ?settlement a dbpedia:Settlement; dbpedia:name ?settlement_name; dbpedia:locatedIn ?administration_italian_region .

  ?region a dbpedia:Region; dbpedia:name ?region_name .
  ?region rdfs:label ?region_name .
}

```",5,11,6,3,2,3,3,71,0,0,587,0,0.0,0
47,53,val,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of Padma Vibhushan and office of Bidesh Ranjan Bose.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> ?v3 . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office1 ?office2 ?office3
WHERE {
  ?commander dbpedia:led Operation_Green_Hunt .
  ?padma_awardee dbpedia:awarded Padma_Vibhushan .
  ?bose dbpedia:heldOffice ?office1 .
  ?commander dbpedia:hasRole dbpedia:Commander .
  ?padma_awardee dbpedia:role dbpedia:Politician .
  ?bose dbpedia:role dbpedia:Politician
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
232,7,val,"Give me the claim to fame of Katherine ""Kitty"" Marshall and artistic movement of the person born, that is a writer, on 1849-09-14.","SELECT ?result WHERE { <http://dbpedia.org/resource/Katherine_%22Kitty%22_Marshall> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1849-09-14""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/movement> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?claimToFame ?artisticMovement 
WHERE { 
  ?person a dbpedia:Person; 
    dbpedia:birthDate '1849-09-14' ; 
    dbpedia:occupation dbpedia:P31 ; 
    rdfs:label ?name . 
  ?person rdfs:label ?claimToFame . 
  ?person a dbpedia:Person; 
    dbpedia:deathDate ?deathDate . 
  OPTIONAL { ?person dbpedia:associatedWith dbpedia:ArtisticMovement ?artisticMovement } 
}",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
987,52,val,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and entity in Montenegro and birth place of the actor of All for Free.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find Dado Polumenta and his band
SELECT ?bandName ?birthPlaceBand WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Dado Polumenta"";
    dbpedia:associatedBand ?bandName .
  ?bandName a dbpedia:MusicArtist .
}

# Step 2: Find the birth place of the band
SELECT ?birthPlaceBand WHERE {
  ?bandName a dbpedia:Band;
    dbpedia:birthPlace ?birthPlaceBand .
}

# Step 3: Find the actor of ""All for Free""
SELECT ?actorName ?birthPlaceActor WHERE {
  ?movie a dbpedia:Film;
    dbpedia:title ""All for Free"";
    dbpedia:actor ?actorName .
  ?actorName a dbpedia:Person;
    dbpedia:name ?actorName .
}

# Step 4: Find the birth place of the actor
SELECT ?birthPlaceActor WHERE {
  ?actorName a dbpedia:Person;
    dbpedia:birthPlace ?birthPlaceActor .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
926,49,val,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandfather
WHERE {
  ?parent a dbpedia:Monarch;
    dbpedia:monarchyStartYear ?year .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent;
    dbpedia:birthDate ?birthdate .
  ?child a dbpedia:Royalty .
  ?grandson a dbpedia:Person;
    dbpedia:father ?child;
    dbpedia:birthDate ?grandsonBirthdate .
  FILTER (?year <= ?grandsonBirthdate)  # Ensure the grandson was born after Mustafa III
  BIND(?child as ?grandfather)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
976,48,val,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the person born as Mehmet Naci Bostancı.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v1 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office1 ?office2
WHERE {
  ?kiliadaroğlu a dbpedia:Politician;
    dbpedia:role dbpedia:Opposition_Party_Leader .
  ?bostanci a dbpedia:Person;
    dbpedia:birthName ""Mehmet Naci Bostancı"" .
  ?kiliadaroğlu dbpedia:office ?office1 .
  ?bostanci dbpedia:office ?office2 .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
216,20,val,Give me the administration of  and office of Tim Nicholls and party of the awardee of Australian Defence Medal.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/property/leader> """"@en . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?administration ?office ?party
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Tim Nicholls"" .
  ?person dbpedia:awardedByAward dbpedia:Australian_Defense_Medal .
  ?administration a dbpedia:Political_administration ;
    dbpedia:headOfState ?headOfState .
  ?office a dbpedia:Office ;
    dbpedia:officeHolder ?person .
  ?party a dbpedia:Political_party ;
    dbpedia:leader ?headOfState .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
582,51,val,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Assuming Masami Nagasawa's father is Takeshi Nagasawa
?father a dbpedia:Person;
  dbpedia:name ""Takeshi Nagasawa"";
  dbpedia:role dbpedia:SoccerManager .

# Masami Nagasawa is associated with a team managed by his father
?team a dbpedia:SportsTeam;
  dbpedia:managedBy ?father .

# Get the nickname of the team managed by Takeshi Nagasawa (assumed to be ""Kashima Reysol"")
SELECT ?nickname
WHERE {
  ?team rdfs:label ?nickname .
  ?team dbpedia:manager ?father .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
715,45,val,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in Spanish Civil War and commander in Rif War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v0 <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:roleInMilitaryConflict [ owl:sameAs ""commander in Spanish Civil War"" ] .
  ?person a dbpedia:Person;
    dbpedia:roleInMilitaryConflict [ owl:sameAs ""commander in Rif War"" ] .
  ?person foaf:name ""Carlos Franco Iribarnegaray"" .
  ?person dbpedia:militaryServiceMemberOf ?office .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
158,15,val,"Give me the party of Théodore Steeg and entity in the award, that is a country, of the reference to Adelbert Cronkhite.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Théodore_Steeg> <http://dbpedia.org/ontology/party> ?result . }",PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?party ?country WHERE { ?person dbpedia:presidentOf ?party . ?person dbpedia:birthPlace ?country },4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
129,20,val,"Give me the professional in  and associated musical artist of Saba (rapper) and associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge.","SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query to find the producer and musical artist for Saba's track ""Revenge""
SELECT ?producer ?musicalArtist
WHERE {
  ?track a dbpedia:MusicSingle;
    dbpedia:performer ?rapper .
  ?track dbpedia:producer ?producer .
  ?rapper foaf:name ""Saba"" .
  
  # Query to find the actor associated with Dreamville Presents: Revenge
  ?movie a dbpedia:Film;
    dbpedia:productionCompany ""DreamWorks Animation"" .
  ?actor a dbpedia:Person;
    dbpedia:roleIn ?movie .
  ?movie dbpedia:producer ?producer .
  
  # Check if the actor is part of an organization (DreamWorks)
  ?actor a dbpedia:OrganizationMember ;
    dbpedia:organization ?organization .
  ?organization rdfs:label ""DreamWorks"" .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
791,46,val,"Give me the predecessor of the child of Emperor Takakura and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?emperor a dbpedia:Emperor;
    dbpedia:spouse [ a dbpedia:Person; dbpedia:name ""Spouse's Name"" ] .
  ?emperor dbpedia:hasChild ?child .
  ?child a dbpedia:Royalty .
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
216,22,val,Give me the office of the mayor of Ros Bates and party of the awardee of Australian Defence Medal.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://dbpedia.org/ontology/party> ?result . },{sparql_query},4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
507,41,val,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and spouse of the person born as Anne Voase Coates and professional in Film director, television director.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/director> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?director
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:actor dbpedia:Muriel_Beryl_Reid .
  ?spouse a dbpedia:Person ;
    dbpedia:name ""Anne Voase Coates"" ;
    dbpedia:sibling ?director .
}
```

This query selects the director (`?director`) of films (`?movie`) where Beryl Reid (`dbpedia:Muriel_Beryl_Reid`) acted, and the spouse of this director is Anne Voase Coates (`dbpedia:name ""Anne Voase Coates""`) and is a sibling (`dbpedia:sibling`).",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
267,15,val,"Give me the person born on 1953-03-01 and coach of the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/coach> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ""1953-03-01""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?coach
WHERE {
  ?coach a dbpedia:Person;
    dbpedia:birthDate ""1953-03-01"";
    dbpedia:role dbpedia:SoccerCoach ;
    dbpedia:sport dbpedia:Soccer ;
    dbpedia:club dbpedia:Tractor_S.C._F.C. ;
    foaf:managerOf ?player .
  ?player a dbpedia:Person;
    dbpedia:birthDate ?birthDate;
    dbpedia:role dbpedia:FootballPlayer ;
    dbpedia:club dbpedia:Tractor_S.C._F.C..
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
865,55,val,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child of Abu Ahmad Abdul Hafiz and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?country
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:father ?father .
  ?father a dbpedia:Person; 
    rdfs:label ?name .
  FILTER (regex(str(?name), 'Ram Jaipal Singh Yadav')) .
}
```

This SPARQL query will:
1. Select individuals (`?person`) who have `dbpedia:birthPlace` and whose father's name (`?father`) matches ""Ram Jaipal Singh Yadav"".
2. It then filters to ensure that the matched individual is indeed Ram Jaipal Singh Yadav by checking the label of their father.
3. Finally, it returns the birthplace (`?birthPlace`) and the country (`?country`) of these individuals.",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
645,45,val,"Give me the military force of Spanish Civil War and commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"SELECT ?militaryForce ?commander ?leader
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Spain"";
    dbpedia:deathPlace ""Unknown"" ;
    dbpedia:role ""Leader of the government agency and organization in Restoration Spain"" .
  ?battle a dbpedia:Battle ;
    dbpedia:participatedIn ""Spanish Civil War"" ;
    dbpedia:commander ?commander .
  ?battle rdf:type dbpedia:Event .
  ?militaryForce a dbpedia:MilitaryForce;
    dbpedia:operatesIn ""Spain"";
    dbpedia:startYear ""1936"" ;
    dbpedia:endYear ""1939"" .
}",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
987,44,val,"Give me the birth place of Dado Polumenta and birth place of the actor of All for Free and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query to find Dado Polumenta's birthplace
SELECT ?birthPlace WHERE {
  ?person dbpedia:hasFilmography [
    a dbpedia:Filmography ;
    dbpedia:film ?film;
    dbpedia:role ?role .
  ] .
  ?film dbpedia:filmTitle ""All for Free"" .
  ?person rdfs:label ""Dado Polumenta""@en .
  ?person dbpedia:birthPlace ?birthPlace
  } .

# Query to find the birthplace of the actor who played in ""All for Free""
SELECT ?actorBirthPlace WHERE {
  ?person dbpedia:hasFilmography [
    a dbpedia:Filmography ;
    dbpedia:film ?film;
    dbpedia:role ?role .
  ] .
  ?film dbpedia:filmTitle ""All for Free"" .
  ?person rdfs:label ?actorLabel .
  ?person dbpedia:birthPlace ?actorBirthPlace
  } .

# Combine results to ensure both birthplaces are in a country within CET zone
PREFIX dbo: <http://dbpedia.org/ontology/>

# List of countries in the CET time zone
SELECT ?country WHERE {
  ?country a dbo:Country;
    dbo:timeZone ""CET"" .
}

# Join the birthplaces with the corresponding countries (if any)
CONSTRUCT { ?birthPlace dbpedia:locatedIn ?country } 
WHERE {
  ?birthPlace a dbpedia:Location ;
    dbpedia:locatedIn ?location .
  ?location a dbo:Country;
    dbo:timeZone ""CET"" .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
216,51,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?player WHERE {
  ?player a dbpedia:Person;
    dbpedia:SoccerPlayer yes;
    dbpedia:birthPlace ""Bosnia and Herzegovina"";
    dbpedia:role dbpedia:SoccerCoach .
  ?player dbpedia:deathDate [ strdtfn:dayOFMonth ""31"" ; strdtfn:year ""2008"" ] .
  ?player rdfs:label [ lang ""bg"" ] as ?name .
  FILTER (lang(?name) = ""bg"") .
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
773,42,val,"Give me the parent of Carloman of Bavaria and spouse of the father of Charles the Fat and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent1 ?parent2
WHERE {
  ?person1 a dbpedia:Person; dbpedia:name ""Carloman of Bavaria"" .
  ?person1 dbpedia:father ?father1 .
  ?person2 a dbpedia:Person; dbpedia:name ""Judith of Swabia"" .
  ?person1 dbpedia:spouse ?person2 .
  ?father1 a dbpedia:Person; dbpedia:name ""Louis the Pious"" .
  ?parent1 a dbpedia:ParentOf; dbpedia:child ?person1 .
  ?parent2 a dbpedia:ParentOf; dbpedia:child ?person1 .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
573,45,val,"Give me the person decedent at Quincy, Massachusetts and person decedent at Massachusetts and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent WHERE {
  ?john_quincy_adams a dbpedia:Person;
    dbpedia:authorOf [ dbpedia:work ""John Quincy Adams"" ] .
  ?john_quincy_adams dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:birthPlace ""Quincy, Massachusetts"";
    dbpedia:deathPlace ""Massachusetts"" .
  ?parent a dbpedia:OfficeHolder .
  ?parent a dbpedia:Politician .
}",5,7,6,3,3,3,3,71,0,0,2,0,0.0,0
865,46,val,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?father WHERE { dbpedia:Abu_Ahmad_Abdul_Hafiz a dbpedia:Person; dbpedia:father ?father . ?father dbpedia:nativeCountry dbpedia:India },5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
926,53,val,"Give me the successor of Mustafa III and father of the father of the spouse of Neşerek Kadın and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successorName ?childName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:monarchOf dbpedia:Ottoman_Sultan ;
    dbpedia:father dbpedia:Mustafa_III ;
    dbpedia:succeededBy ?successorName .
  ?person dbpedia:offspring ?childName .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
433,49,val,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?profession WHERE {
  ?artist a dbpedia:Artist ;
    dbpedia:associatedWork [ dbpedia:hasTitle ""Slowhand at 70 – Live at the Royal Albert Hall"" ] .
  ?artist dbpedia:birthName ""Paul Laurence Dunbar Chambers Jr."" .
}
```",5,7,6,3,2,3,3,71,0,0,16,0,0.0,0
216,48,val,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?team
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen"" .
  ?person dbpedia:birthDate ""1983-12-20""^^xsd:date .
  ?person a foaf:Person;
    foaf:coachRole [ owl:intersectionOf (dbpedia:SoccerCoachRole) ] .
  ?person dbpedia:coachedOrganization dbpedia:Croatia_U21 .
  ?person a dbpedia:SoccerPlayer;
    dbpedia:playedFor ?team .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
507,52,val,"Give me the professional in Film director, television director and spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/director> ?result . ?v5 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify Anne V. Coates' birth name
SELECT ?birthName WHERE {
  dbpedia:Anne_V_Coates birthingName ?birthName .
}

# Step 2: Find films or works directed by the person with the identified birth name
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?director ?title WHERE {
  ?director a dbpedia:Film_Director;
    dbpedia:directedMovie ?movie .
  ?movie rdfs:label ?title . 
  FILTER (lang(?title) = ""en"")  # Filter for English titles
}

# Step 3: Check if the director also directed television episodes and has Beryl Reid in their filmography
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?director ?televisionEpisode ?berylReid WHERE {
  ?director a dbpedia:Television_Director;
    dbpedia:directedTelevisionEpisode ?televisionEpisode .
  ?televisionEpisode rdf:type dbpedia:Television_Series .
  ?director rdfs:label ?directorLabel .
  ?movie a dbpedia:Film ;
    dbpedia:star ?berylReid .
  FILTER (lang(?title) = ""en"" AND ?directorLabel = ?director) .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
892,54,val,Give me the landmark at elevation of the award of the member of E-girls and entity in the profession of Henri Crolla and entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v4 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?v1 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?awardName ?awardElevation ?landmark WHERE {
  ?person a dbpedia:Person;
    dbpedia:winAward ?award .
  ?award rdfs:label ?awardName .
  FILTER (lang(?awardName) = ""en"")  # English language

  ?person a dbpedia:Person;
    dbpedia:profession ""DJ"" .
  ?person dbpedia:hasResidence ?landmark .

  ?landmark a dbpedia:Landmark;
    geo:location [ geo:lat ?latitude; geo:long ?longitude ] .
  ?landmark geoname:adminLocationRegion ""Reggio Emilia, Italy"" .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
433,52,val,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and professional in Musician and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?common_artist
WHERE {
  ?paul_chambers a dbpedia:Person;
    dbpedia:musicalArtist ?artist .
  ?scott_lafaro a dbpedia:Person;
    dbpedia:musicalArtist ?artist .
  ?artist a dbpedia:MusicArtist .
  ?paul_chambers dbpedia:associatedWith ?common_artist .
  ?scott_lafaro dbpedia:associatedWith ?common_artist .
}",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
645,47,val,"Give me the commander in the force of Carlos Asensio Cabanillas and military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander ?militaryForce ?event ?conflict ?societalEvent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Carlos Asensio Cabanillas""@es .
  ?person foaf:commands ?militaryForce .
  ?militaryForce a dbpedia:MilitaryUnit .
  OPTIONAL { ?militaryForce dbpedia:participatedIn ?conflict }
  OPTIONAL { ?militaryForce dbpedia:relatedTo ?societalEvent }
  ?event a dbpedia:Event;
    dbpedia:startYear 1874.
  ?event dbpedia:endYear 1931.
  ?person a dbpedia:Politician .
}
```",5,10,6,3,2,3,3,71,0,0,23,0,0.0,0
445,43,val,Give me the death place of the awardee of the establishment of 1820-03-10 and entity in England and entity in United Kingdom.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v4 <http://dbpedia.org/property/awards> ?v0 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person dbpedia:period_start ""1835-1858""^^xsd:date .
  ?person rdfs:label ""AK Abdul Momen""@en .
}",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
456,49,val,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of the actor of Pacific Drive.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?actor dbpedia:role dbpedia:Actor ;
    dbpedia:name ""Sam Clark"" .
  ?spouse dbpedia:name ""Lisa Clark"" .
  ?musician a dbpedia:Musician;
    dbpedia:band ?bandName .
  ?musician dbpedia:memberOf ?bandName .
  ?actor dbpedia:marriedTo ?spouse .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
18,19,val,"Give me the professional in the award of Ana María Sánchez de Ríos and parent of Liza Huber and alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v3 . }","To extract this information, we would construct a SPARQL query that looks for these specific pieces of information. However, since the exact details about his professional role in the award and his parental status are not specified, we will focus on the known facts:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:alumniOf dbpedia:Marymount_College_Tarrytown .
  OPTIONAL { 
    ?person dbpedia:parentOf dbpedia:Liza_Huber . 
  }
  OPTIONAL { 
    ?person rdfs:label ?professionalRole . 
  }
  ?person rdfs:label ""AK Abdul Momen"" .
}
```

This query will return the birthplace and death place of AK Abdul Momen, considering he is an alumnus of Marymount College, Tarrytown. It also looks for any information about his parentage (though it might not find a direct link to Liza Huber due to potential data limitations) and his professional role in relation to the award.",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
465,45,val,"Give me the spouse of Archduchess Barbara of Austria and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse
WHERE {
  ?charles_orlando a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Charles Orlando, Dauphin of France""@en .
  ?archduchess_barbara a dbpedia:Person;
    dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person;
    foaf:name ?name .
  FILTER (lang(?name) = ""en"")  # Filter for English names
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
773,41,val,Give me the parent of the successor of Charles the Bald and parent of Charles the Fat and spouse of the father of Charles the Fat.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commonParentSpouse
WHERE {
  ?charlesTheBald a dbpedia:Person;
    dbpedia:birthDate ""823""^^<date>;
    dbpedia:deathDate ""877""^^<date>;
    dbpedia:succeededBy ?successor .
  ?successor a dbpedia:Person;
    dbpedia:name ""Louis the Stammerer"" .
  
  ?charlesTheFat a dbpedia:Person;
    dbpedia:birthDate ""846""^^<date>;
    dbpedia:deathDate ""877""^^<date>;
    dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:name ""Louis III"" .

  ?charlesTheFat dbpedia:siblingOf ?commonParentSibling.
  ?commonParentSibling a dbpedia:Person;
    dbpedia:parent ?commonParent .
  
  ?commonParent a dbpedia:Person;
    dbpedia:spouse ?spouse .
}",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
326,7,val,"Give me the professional in Composer and person decedent at the region coded, that is a settlement, as 442/760.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?v2 <http://dbpedia.org/ontology/areaCode> ""442/760"" . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?composerName ?deathPlace
WHERE {
  ?composer a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?composer a dbpedia:Artist ;
    dbpedia:occupation dbpedia:Composer ;
    dbpedia:deathPlace ?deathPlace .
  FILTER (?birthPlace = ""442/760"")  # Assuming 442/760 refers to a specific place
}
```",3,4,4,2,2,2,2,9,0,0,6,0,0.0,0
341,7,val,Give me the band member of the awardee of List of awards and nominations received by Beyoncé and writer of In Love & War (Amerie album).,SELECT ?result WHERE { <http://dbpedia.org/resource/In_Love_&_War_(Amerie_album)> <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Beyoncé> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember
WHERE {
  ?award dbpedia:awardedBy Beyoncé .
  ?award dbpedia:recipient ?person .
  ?person a dbpedia:Musician; foaf:name ?bandMember .
  ?person rdfs:label ""Beyoncé Knowles"" .
  ?song rdfs:subject ?album .
  ?album rdf:type dbpedia:Album .
  ?album dc:title ""Bday"" .
  ?album dc:performer ?band .
  ?band a foaf:MusicBand; foaf:member ?bandMember .
}",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
582,49,val,"Give me the reference to the residence of Hirotaka Sugawara and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?sugawara_residence ?moriyasu_teamNickname
WHERE {
  ?hirotaka_sugawara a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?hirotaka_sugawara dbpprop:residesIn ?sugawara_residence .

  ?hajime_moriyasu a dbpedia:Person;
    dbpedia:name ""Hajime Moriyasu"";
    dbpedia:associatedTeam ?moriyasu_team .
  ?moriyasu_team rdfs:label ?teamNickname .
}
```

This query does the following:
- It selects the residence (`?sugawara_residence`) of Hirotaka Sugawara.
- It also selects the nickname (`?teamNickname`) of the team associated with Hajime Moriyasu.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
433,48,val,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and professional in the profession of Bob Marley.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?musicalArtist
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Paul Chambers"" .
  ?person a dbpedia:Musician; 
    dbpedia:associatedBand/s ?band .
  ?band a dbpedia:Band;
    dbpedia:leader ?leader .
  ?leader a dbpedia:Person;
    dbpedia:name ""Bob Marley"" .
}",5,7,6,3,2,3,3,71,0,0,16,0,0.0,0
892,43,val,Give me the entity in Italy and entity in Province of Reggio Emilia and landmark at elevation of the award of the member of E-girls.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find the award entity and its properties
SELECT ?awardEntity WHERE {
  ?awardEntity a dbpedia:Award;
    rdfs:label ""E-girls Award""@en .
}

# Step 2: Determine the elevation of the award (assumed to be 10 meters)
BIND(?height as 10)

# Step 3: Find landmarks in Italy within the Province of Reggio Emilia
SELECT ?landmark WHERE {
  ?landmark a dbpedia:Landmark;
    dbpedia:locationCountry ""Italy"";
    dbpedia:locatedInAdministrativeDivision ?division .
  ?division a dbpedia:AdministrativeDivision;
    rdfs:label ""Province of Reggio Emilia""@en .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
47,45,val,"Give me the office of the awardee of the entity, that is an award, in India and office of Suvendu Adhikari and office of Bidesh Ranjan Bose.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardeeName ?office
WHERE {
  ?award a dbpedia:Award ;
            dbpedia:awardee ?awardee .
  ?awardee a dbpedia:Person ;
            dbpedia:office ?office .
  ?awardee rdfs:label ""Suvendu Adhikari""@en .
  ?awardee rdfs:label ""Bidesh Ranjan Bose""@en .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
582,55,val,"Give me the figure known as the nickname of Japan national football team and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to the residence of Hirotaka Sugawara.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/> 
SELECT ?nickname WHERE { 
  dbo:Japan national football team hasNickname ?nickname . 
  dbo:Masami Nagasawa hasFather ?father . 
  ?father a dbpp:Athlete ; dbpp:SoccerManager ; dbpp:SportsManager . 
  ?father dwellsIn dbpp:Tokyo Metropolitan Area . 
}",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
933,52,val,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to the birth name of Alan Warner (musician) and band of The Ramong Sound.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName ?bandMembers
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Alan Warner""@en .
  ?person foaf:givenName ?birthName .
  ?band a dbpedia:Band ;
    dbpedia:members ?bandMembers .
  ?band rdfs:label ""The Ramong Sound""@en .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
926,41,val,Give me the successor of the child of Ahmed III and child of Ahmed III and father of the father of Abdulaziz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?parent a dbpedia:Monarch; dbpedia:name ""Ahmed III"" .
  ?parent dbpedia:hasChild ?child .
  ?child a dbpedia:Person; dbpedia:hasParent ?parent .
  ?child dbpedia:hasSons ?son .
  ?son a dbpedia:Person; dbpedia:name ""Abdulaziz"" .
}
```

This SPARQL query finds the child of Ahmed III who is named Abdulaziz.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
976,43,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of Mustafa Şentop and office of Naci Bostancı.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?officeOfMayor
WHERE {
  ?politician a dbpedia:Person;
    dbpedia:officeHolder ?office .
  ?office a dbpedia:Office;
    dbpedia:officeType ""Mayor"";
    dbpedia:organization dbpedia:Millet İttifakı.
  ?politician rdfs:label ""Mustafa Şentop"" .
  ?politician rdfs:label ""Naci Bostancı"" .
}
```",5,11,6,3,3,3,3,71,0,0,1,0,0.0,0
326,15,val,"Give me the person decedent at France and resident of the birthplace, that is a state and British, of the professional in Writer.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/France> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/occupation> ""Writer""@en . ?result <http://dbpedia.org/property/residence> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?writer WHERE {
  ?writer a dbpedia:Person;
    dbpedia:birthPlace [ a dbpedia:Location; rdfs:label ""United Kingdom"" ].
  ?writer a dbpedia:Writer;
    dbpedia:residence [ a dbpedia:Location; rdfs:label ""France"" ].
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
606,17,val,"Give me the figure known as Barb City and birthplace of the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Barbara Ann Minet Ring Lardner"" .
  ?person dbpedia:alumniOf dbpedia:University_of_Pennsylvania .
  ?university a dbpedia:University ;
    dbpedia:name ""University of Pennsylvania"" .
  ?university dbpedia:sportsLeagueMemberOf dbpedia:BigTen_Conference .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
445,44,val,Give me the entity in the award of George H. Cameron and death place of the awardee of Royal Astronomical Society and entity in England.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardeeName ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ?awardeeName .
  ?person dbpedia:awardedBy dbpedia:George_H_Cameron ;
    dbpedia:award dbpedia:Awards_of_the_Royal_Astronomical_Society .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
865,47,val,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childFather
WHERE {
  ?spouse a dbpedia:Person;
    dbpedia:sibling [ a dbpedia:Person; dbpedia:name ""Ram Jaipal Singh Yadav"" ] .
  ?spouse dbpedia:partner [ a dbpedia:Person; dbpedia:name ""Syeda Shahar Banu"" ] .
  ?child a dbpedia:Person;
    dbpedia:parent ?spouse ;
    dbpedia:offspring ?child .
  ?child a dbpedia:Person;
    dbpedia:officeHolder [ a dbpedia:OfficeHolder; dbpedia:title ""Politician"" ] .
  ?childFather a dbpedia:Person;
    dbpedia:parent ?child .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
166,15,val,"Give me the resting place of the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla and entity in Spain.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v0 . },"As we lack specific details such as the exact military unit and precise location of Hedilla's death or burial, a direct SPARQL query cannot be formulated with certainty. However, assuming we have access to a dataset that includes information about military personnel from the Peninsular War in Spain, a general approach might look like this:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?burialPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:deathDate ""1810-04"";
    dbpedia:serviceMemberOf dbpedia:Peninsular_War ;
    dcterms:birthPlace Spain .
  ?person rdfs:seeAlso <http://example.com/HedillaProfile> . # Placeholder for Hedilla's profile URL
}
```

This query assumes that there is a DBpedia resource for Manuel Hedilla with a death date in April 1810 and that he served in the Peninsular War. The `rdfs:seeAlso` predicate is used as a placeholder to link to a hypothetical profile page that might contain more detailed information.",4,7,5,3,2,3,2,20,0,0,4,0,0.0,0
433,41,val,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and professional in Musician.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?associated_artist
WHERE {
  ?musician a dbpedia:Musician;
    dbpedia:associatedMusicalArtist ?associated_artist .
  ?artist a dbpedia:Artist .
  ?associated_artist a dbpedia:MusicalArtist .
}",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
826,53,val,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of the child of the father of Anna Magdalena Appel and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parentOfSpouse ?predecessorOfParent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father ?father .
  ?spouse a dbpedia:Person;
    dbpedia:partner ?person ;
    dbpedia:birthDate ?birthDate .
  ?child a dbpedia:Person;
    dbpedia:parent ?person ;
    dbpedia:name ""Friedrich of Hesse and by Rhine"" .
  ?parentOfSpouse a dbpedia:Person;
    dbpedia:parent ?grandParent .
  ?predecessorOfParent a dbpedia:Person;
    dbpedia:precede ?parentOfSpouse .
}
```

This query looks for the parent of the spouse (assumed to be a son of Johann Georg Bachmann) and their predecessor.",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
917,47,val,"Give me the child of the father of the spouse, that is a royalty, of Leleiohoku I and parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childName ?royaltyTitle WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:father [ dbpedia:hasSpouse ?spouse ];
    dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:children ?childList .
  
  ?child2 a dbpedia:Person;
    dbpedia:parent ?person1;
    dbpedia:royaltyTitle ""Royalty"" .

  ?child3 a dbpedia:Person;
    dbpedia:parent ?child2;
    dbpedia:royaltyTitle ""Royalty"" .

  FILTER (some ?child in ?childList satisfies
          (dbpedia:hasChild ?child3 AND
           dbpedia:royaltyTitleOfChild ?child3 ""Royalty"")) .
}

```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
456,51,val,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName WHERE {
  ?person a dbpedia:MusicalArtist;
    dbpedia:name ""Alan Doyle""@en .
  ?person rdfs:label ?bandName .
  ?person ns:altLabel ""The Shadow""@en .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
573,41,val,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and parent of John Quincy Adams and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?personName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace <http://dbpedia.org/property/birthPlace_of_William_J._Phelan> ;
    dbpedia:deathPlace <http://dbpedia.org/property/deathPlace_of_> .
  ?person dbpedia:parentOf John_Quincy_Admits .
  ?person a dbpedia:Person;
    dbpedia:administrationRegion <http://dbpedia.org/ontology/AdministrationRegion> ;
    dbpedia:deathTime FILTER (dateBetween(strftimestamp(?deathTime), ""1940-01-01"", ""1947-12-31"")) .
}
```",5,7,6,2,3,3,3,71,0,0,2,0,0.0,0
47,51,val,"Give me the office of the awardee of Banga Bhushan and office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardeeOffice1 ?awardeeOffice2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:award ""Banga Bhushan"" .
  ?person1 dbpedia:office ?awardeeOffice1 .

  ?person2 a dbpedia:Person;
    dbpedia:award ?awardName2 .
  ?person2 dbpedia:office ?awardeeOffice2 .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
773,51,val,"Give me the parent of the successor of Charles the Bald and parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify Charles the Bald's successor (Louis the Stammerer)
SELECT ?charles_successor WHERE {
  ?charles_the_bald dbpedia:successor ?charles_successor .
}

# Step 2: Determine the parent of Charles the Bald's successor (Louis the Pious)
SELECT ?parent_of_charles_successor WHERE {
  ?charles_successor a dbpedia:Person;
    dbpedia:parent ?parent_of_charles_successor .
}

# Step 3: Identify Carloman of Bavaria and his father (Louis the Pious)
SELECT ?carloman_father WHERE {
  ?carloman_of_bavaria a dbpedia:Person;
    dbpedia:father ?carloman_father .
}

# Step 4: Find a royalty child of Louis the Pious who is also an office holder
# This step requires manual inspection or additional SPARQL queries to find matching individuals.
# For simplicity, let's assume we find such a person named ""Lothair"" (one of the children of Louis the Pious).

SELECT ?lootair WHERE {
  ?lootair a dbpedia:Person;
    dbpedia:parent ?carloman_father ;
    dbpedia:officeHolder true .
}

# Step 5: Link the identified royalty child back to the parent of Charles the Bald's successor
# We need to find the parent of Louis the Pious who is also related to Charles the Bald's successor.
# This requires a more complex query to trace the lineage.

SELECT ?parent_of_lothair WHERE {
  ?lootair a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent_of_lothair ;
    dbpedia:birthPlace ""some location related to Charles the Bald"" . # Placeholder for actual birthplace
}

# Combining all steps into one query:
```

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1 and 2
SELECT ?charles_successor WHERE {
  ?charles_the_bald dbpedia:successor ?charles_successor .
}

SELECT ?parent_of_charles_successor WHERE {
  ?charles_successor a dbpedia:Person;
    dbpedia:parent ?parent_of_charles_successor .
}

# Step 3
SELECT ?carloman_father WHERE {
  ?carloman_of_bavaria a dbpedia:Person;
    dbpedia:father ?carloman_father .
}

# Step 4 and 5
SELECT ?lootair WHERE {
  ?lootair a dbpedia:Person;
    dbpedia:parent ?carloman_father ;
    dbpedia:officeHolder true .
}

SELECT ?parent_of_lothair WHERE {
  ?lootair a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent_of_lothair ;
    dbpedia:birthPlace ""some location related to Charles the Bald"" . # Placeholder
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
582,53,val,"Give me the figure known as the nickname of Japan national football team and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in Kazuaki Nagasawa.","SELECT ?result WHERE { <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/property/residence> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nickname ?sugawara_residence ?nagasawa_residence
WHERE {
  ?japan_team a dbpedia:FootballTeam ;
    dbpedia:nickname ?nickname .
  
  ?sugawara a foaf:Person;
    dbpedia:name ""Hirotaka Sugawara"";
    dbpedia:residence ?sugawara_residence .
  
  ?nagasawa a foaf:Person;
    dbpedia:name ""Kazuaki Nagasawa"";
    dbpedia:residence ?nagasawa_residence .
  
  ?japan_team member ?sugawara .
  ?japan_team member ?nagasawa .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
715,53,val,"Give me the commander in Spanish Civil War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force, that is a military conflict, of the native of Morocco.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"Given that the information might be dispersed across multiple DBpedia resources, we'll construct a SPARQL query to gather the necessary details:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander ?office ?military_conflict
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace Morocco .
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@es .
  ?person dbpedia:pseudonym ""Franco"" .
  ?person dbpedia:roleInMilitaryConflict ?military_role .
  ?military_role a dbpedia:MilitaryRole;
    dbpedia:military_conflict spanish_civil_war .
  SOME {
    ?office a dbpedia:Office; 
    rdfs:label ?office_label .
    ?office dbpedia:leader ?commander .
  }
}
```

This query does the following:
- Filters for individuals born in Morocco who are labeled ""Carlos Franco Iribarnegaray"" and have the pseudonym ""Franco"".
- Looks for their role in a military conflict, specifically the Spanish Civil War (`dbpedia:military_conflict spanish_civil_war`).
- Searches for an office they led (`?office a dbpedia:Office; rdfs:label ?office_label . ?office dbpedia:leader ?commander`).",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
36,21,val,Give me the actor of Being Mrs Elliot and person born as the birth name of Ayo Makun and person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorName ?birthName ?personBornIn1971
WHERE {
  ?movie dbpedia:movie<Being_Mrs_Elliot> .
  ?actor dbpedia:roleInMovie ?movie .
  ?actor foaf:name ?actorName .

  ?ayo makun foaf:name ?birthName .
  
  ?person bornInYear 1971.
  ?person a dbpedia:Person .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
281,23,val,"Give me the awardee of the award of Alfred Warden and commander in the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee
WHERE {
  ?commander a dbpedia:Person;
    dbpedia:conflict dbpedia:Anglo-Zulu_War ;
    dbpedia:role dbpedia:Commander .
  ?awardee a dbpedia:Person;
    dbpedia:award dbpedia:Alfred_Warden_Award ;
    dbpedia:recipientOf ?commander .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
826,49,val,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?predecessorParentChild
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:hasParent ?parentOfSpouse .
  ?parentOfSpouse a dbpedia:Person;
    dbpedia:hasParent ?predecessorParent .
  ?predecessorParent rdf:type dbpedia:Monarch .
  ?child rdfs:label ""Louis V, Prince of Hesse and by Rhine""@en .
  ?spouse rdfs:label ""Princess Alice of the United Kingdom""@en .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
326,17,val,"Give me the resident of Berkshire and person decedent at the award, that is a country, of the awardee of French Legion of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Berkshire> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . }",PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?birthPlace ?deathPlace WHERE { ?person a dbpedia:Person; dbpedia:birthPlace ?birthPlace . ?person a dbpedia:Person; dbpedia:deathPlace ?deathPlace . FILTER ( ?birthPlace = 'Berkshire' ) . },4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
527,17,val,"Give me the actor of The Book Tower and author of the work, that is a work and a book, of the host of Hyperland.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v0 . <http://dbpedia.org/resource/The_Book_Tower> <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor ?author_work WHERE {
  ?movie a dbpedia:Film;
    dbpedia:mainActor ?actor .
  ?book a dbpedia:Book;
    dbpedia:adaptation ?movie ;
    dbpedia:author ?author_work .
  ?person rdfs:label ""Hyperland""@en .
  ?movie rdfs:label ""The Book Tower""@en .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
5,15,val,"Give me the birthplace of the person born, that is a politician, as the award of Renata Adler and entity in Canada.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person ns:nationality foaf:country ""Canada"" .
}",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
382,15,val,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler and landmark at elevation of 100.","SELECT ?result WHERE { <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/elevation> ""100""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""AK Abdul Momen""@en.
  ?person dbpedia:period dbpedia:BritishRaj.
}
```

This query looks for a person named AK Abdul Momen who lived during the British Raj and extracts their birthplace and death place.",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
573,42,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the administration, that is a region, of Charlie Baker and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?authorParent
WHERE {
  ?author a dbpedia:Person;
    dbpedia:birthPlace ""Quincy, Massachusetts"" .
  ?author dbpedia:about dbpedia:Exchequer_Standards .
  ?author parent ?authorParent .
}
```",5,8,6,2,3,3,3,71,0,0,2,0,0.0,0
47,47,val,"Give me the office of the administration of Jagdeep Dhankhar and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://dbpedia.org/property/office> ?result . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office_of_administration ?award_office
WHERE {
  ?person a dbpedia:OfficeHolder;
    dbpedia:office ?office_of_administration .
  ?awardee a dbpedia:AwardRecipient;
    dbpedia:award ?award .
  ?awardee rdfs:label ""Mantu Ghosh""@en;
    dbpedia:recipientOfAward ?award .
  ?person rdf:type dbpedia:Politician;
    dbpedia:officeHolderRole ?office_of_administration .
  ?awardee dbpedia:awardee ?person .
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
124,45,val,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and commander in Mahdist War and military force of Battle of Tamai.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?militaryForce
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1850-06-24"" ;
    dbpedia:participatedInMilitaryConflict dbpedia:Mahdist_War ;
    dbpedia:participatedInBattle dbpedia:Battle_of_Tamai .
  ?person dbpedia:conflictParty ?militaryForce .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
791,49,val,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?emperor a dbpedia:Emperor;
    dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:royalty true;
    dbpedia:officeHolder true .
  FILTER (xsd:string(?emperor) = ""Antoku"") .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
47,46,val,"Give me the office of the awardee of Banga Bhushan and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardeeOffice ?commanderOffice
WHERE {
  ?awardee dbpedia:P31 wd:Q12297 . # Banga Bhushan Awardee
  ?awardee dbpedia:office ?awardeeOffice .
  
  ?commander dbpedia:P31 wd:Q12296 . # Commander in Operation Green Hunt
  ?commander dbpedia:office ?commanderOffice .
  
  ?awardee rdfs:label ?awardeeName.
  ?commander rdfs:label ?commanderName.
  
  ?awardee ns:inRole wd:Q12294 . # Politician role
  ?commander ns:inRole wd:Q12294 . # Politician role
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
965,51,val,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?fatherName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""George Mountbatten, 2nd Marquess of Milford Haven"";
    dbpedia:parent ?parent .
  ?parent a dbpedia:Noble ;
    rdfs:label ?fatherName .
}",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
507,40,val,"Give me the director of Entertaining Mr Sloane (film) and professional in Film director, television director and spouse of the person born as the birth name of Anne V. Coates.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?director
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:productionCompany ""Ealing Studios"";
    dbpedia:director ?director .
  ?person a foaf:Person;
    foaf:name ""Anne V. Coates"";
    foaf:spouse ?director .
}",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
433,46,val,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musicalArtist1 ?artist1, ?musicalArtist2 ?artist2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:musicalArtist ?musicalArtist1 .
  ?person1 a dbpedia:Person;
    dbpedia:associatedWith ?person2 .
  ?person2 a dbpedia:Person;
    dbpedia:musicalArtist ?musicalArtist2 .
  ?person1 = ?person2 .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
839,48,val,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName1 ?bandName2
WHERE {
  ?charlie_huhn a dbpedia:Person;
    dbpedia:bands ?bandName1 .
  ?kevin_russell a dbpedia:Person;
    dbpedia:birthDate ""1978-03-27""^^xsd:date; # Assuming Kevin Russell's birth date
    dbpedia:musicalArtist ?bandName2 .
}
```

This query will return the band names associated with Charlie Huhn and Kevin Russell.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
892,52,val,Give me the entity in Province of Reggio Emilia and landmark at elevation of the award of Anna Ishii and entity in the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for Anna Ishii's award details
SELECT ?award ?elevation WHERE {
  ?award a dbpedia:Event; 
  dbpedia:recipient Anna Ishii .
  OPTIONAL { ?award rdfs:label ?awardLabel }
  FILTER (lang(?awardLabel) = ""en"")  # Filter for English labels
}

# Query for Enrico Crolla's profession
SELECT ?profession WHERE {
  ?person a dbpedia:Person; 
  dbpedia:name ""Enrico Crolla"" .
  ?person dbpedia:occupation ?profession .
  FILTER (lang(?name) = ""en"")  # Filter for English names
}

# Query to find the Province of Reggio Emilia and landmark details
SELECT ?province ?landmark WHERE {
  ?landmark a dbpedia:Landmark; 
  dbpedia:heightInMetres ?elevation .
  ?landmark geoname_id ?geonameID .
  ?geonameID geo:name_svn ""Province of Reggio Emilia"" .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
935,17,val,"Give me the headquarter of the office of the native of Balochistan, Pakistan and death place of Abdul Raziq Bugti.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . ?v3 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Abdul_Raziq_Bugti> <http://dbpedia.org/ontology/deathPlace> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?headquarter WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Abdul Raziq Bugti"";
    dbpedia:birthPlace <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?birthPlace rdfs:label ?region .
  ?person a dbpedia:OfficeHolder;
    dbpedia:officeHolderHeadquarter ?headquarter .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
976,49,val,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as the birth name of Naci Bostancı.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?speaker_name ?birth_name
WHERE {
  ?assembly dbpedia:legislative_body ;
    dbpedia:name ""Grand National Assembly of Turkey"" .
  ?speaker dbpedia:officeHolder ;
    dbpedia:office ?speaker_office ;
    dbpedia:role ""Speaker of the Grand National Assembly of Turkey"" .
  ?person dbpedia:birthName ?birth_name .
  ?person rdfs:label ""Naci Bostancı""@en .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
274,22,val,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie and professional in the designer of Tetris Classic.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandMember
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate [is <2003-03-26>] ;  # Assuming Dizzy Gillespie was born on March 26, 1917
    dbpedia:deathDate [is <1993-03-06>] ;  # Assuming Dizzy Gillespie died on March 6, 1993
    dbpedia:genre dbpedia:jazz
    dbpedia:musicalArtist yes
    dbpedia:bandMember ?bandMember .
}
```",4,5,5,2,2,2,3,28,0,0,8,0,0.0,0
216,19,val,Give me the office of the mayor of Ros Bates and administration of  and party of Campbell Newman.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> """"@en . }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?partyOffice
WHERE {
  ?person a dbpedia:Person;
    dbpedia:office ?office .
  ?office rdfs:label ?officeLabel .
  FILTER (regex(str(?officeLabel), ""Campbell Newman"")) .
  ?person dbpedia:birthPlace ""Ros Brisbane, Queensland, Australia"" .
}",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
917,52,val,"Give me the child of Kekūanāoʻa and child of the father of Keʻelikōlani and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childOfKekuanao'a ?childOfFatherKeelikolani ?royaltyConnection
WHERE {
  ?person1 a dbpedia:Person; dbpedia:parent ?parent_of_P1 .
  ?parent_of_P1 a dbpedia:Person; dbpedia:child ?child_of_Kekuanao'a .

  ?person2 a dbpedia:Person; dbpedia:father ?father_of_P2 .
  ?father_of_P2 a dbpedia:Person; dbpedia:child ?child_of_Father .

  ?child_of_Father a dbpedia:Person; dbpedia:parent ?royaltyParent .
  ?royaltyParent a dbpedia:Royalty .

  ?person1 dbpedia:relation [owl:sameAs ?royaltyConnection] .
  ?person2 dbpedia:relation [owl:sameAs ?royaltyConnection] .
}
```

This SPARQL query aims to find:
- `?childOfKekuanao'a`: The child of Kekūanāoʻa.
- `?childOfFatherKeelikolani`: The child of the father of Keʻelikōlani.
- `?royaltyConnection`: A connection indicating that both individuals (`?person1` and `?person2`) are royalty and have a common child.",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
216,53,val,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and player in Mario Ivanković.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/coach> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?birthDate ?sportManagerTeams ?soccerTeams ?croatiaU21Team
WHERE {
  ?person a dbpedia:Person;
    dbpedia:dateOfBirth ?birthDate .
  ?person dbpprop:sportManager .
  ?person dbo:role [ dbo:hasRole some dbpprop:SoccerManager ] .
  ?person a dbo:SoccerPlayer .
  ?person dbo:coachTeam ?soccerTeams .
  SOME ?team WHERE {
    ?team a dbpedia:Organization;
      dbpedia:clubSport dbo:Soccer .
    ?team rdfs:label ""Croatia U21""@en .
  }
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
926,45,val,"Give me the successor of Mustafa III and child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of Mahmud II.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor 
WHERE {
  ?person a dbpedia:Monarch;
    dbpedia:father [ dbpedia:hasChild ?child ];
    dbpedia:succeededBy ?successor .
  ?child a dbpedia:Person;
    dbpedia:parent [ dbpedia:isA dbpedia:Monarch ].
  ?person rdfs:label ""Mustafa III"" .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
976,41,val,"Give me the office of Naci Bostancı and office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).",SELECT ?result WHERE { <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Find Naci Bostancı's office
SELECT ?office_of_naci_bostanci WHERE {
  ?person rdf:type dbpedia:Person;
    dbpedia:name ""Naci Bostancı""@en .
  ?person dbpedia:office ?office_of_naci_bostanci .
}

# Find the leader of the Grand National Assembly of Turkey's office
SELECT ?leader_office WHERE {
  ?person a dbpedia:OfficeHolder; 
    dbpedia:office dbpedia:Grand_National_Assembly_of_Turkey;
    dbpedia:role dbpedia:Speaker_of_the_Grand_National_Assembly .
}

# Find the mayor of a Turkish city affiliated with Nation Alliance
SELECT ?mayor_office WHERE {
  ?person a dbpedia:OfficeHolder; 
    dbpedia:office dbpedia:Mayor_of_Astanbul ;
    dbpedia:political_party dbpedia:Nation_Alliance .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
645,44,val,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in Battle of Jarama.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v2 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?officeLeader ?battleCommander
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ?birthDate .
  ?person dbpedia:role ""Military Officer"" .
  ?person rdfs:label ?name .
  ?person dbpedia:deathDate ?deathDate .
  ?person dbpedia:servicePeriod ""Spanish Civil War"" .
  ?officeLeader a dbpedia:Office; dbpedia:leader ?person .
  ?battleCommander a dbpedia:MilitaryUnit;
    dbpedia:commander ?person .
  ?battle rdfs:label ""Battle of Jarama"" .
  ?battle a dbpedia:Event; dbpedia:startDate ""1937-02-03"" ; dbpedia:endDate ""1937-04-08"" .
}
```

This query looks for individuals who:
1. Were born and died during the period of the Spanish Civil War.
2. Held the role of ""Military Officer.""
3. Led an office (likely a military or government agency) during this period.
4. Commanded a MilitaryUnit during the Battle of Jarama.

By joining these conditions, we can find the leaders and commanders relevant to our question.",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
773,53,val,"Give me the parent of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Carloman of Bavaria"";
    dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:child [ dbpedia:givenName ""Louis the German"" ] .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
773,44,val,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of Louis the German and parent of the successor of Charles the Bald.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"Given the reasoning steps, the corresponding SPARQL query would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandparent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:parent ?parent1 .
  ?parent1 a dbpedia:Person;
    dbpedia:name ""Hemma of Saxony"" .
  ?parent2 a dbpedia:Person;
    dbpedia:name ""Henry the Fowler"" .
  ?person dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:name ""Louis III"" .
}
```

This query starts by selecting the spouse of Louis the German (Hemma of Saxony), then traces back to find her parents, ensuring that we identify Henry the Fowler and Gisela of Swabia as her parents.",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
98,21,val,"Give me the entity in the region, that is a country, of Philippine Standard Time and region of Philippine Standard Time and birth place of Paolo Ballesteros.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person dbpedia:residencePlace dbpedia:Philippines .
}
```",4,5,5,2,3,2,3,28,0,0,2,0,0.0,0
987,55,val,"Give me the birth place of the actor of All for Free and birth place of the band, that is an artist and a musical artist, of Šako Polumenta and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace1 ?birthPlace2
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:mainActor ?actor .
  ?actor a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace1 .

  ?band a dbpedia:Band;
    dbpedia:artist ?artist .
  ?artist a dbpedia:Person;
    dbpedia:genre dbpedia:MusicGenre ;
    dbpedia:birthPlace ?birthPlace2 .
  
  ?birthPlace1 locationName ""CET""^^<http://www.w3.org/2001/XMLSchema#string> .
  ?birthPlace2 locationName ""CET""^^<http://www.w3.org/2001/XMLSchema#string> .
}",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
158,16,val,"Give me the party of the successor, that is a prime minister and an office holder and a politician, of André Tardieu and entity in the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for successor of André Tardieu
SELECT ?successor WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolder ?office; 
    dbpedia:role ""Prime Minister"" .
  ?person rdfs:seeAlso ?profile.
  ?profile dbpedia:birthPlace ?birthPlace.
  ?office rdfs:label ?officeLabel.
  FILTER (lang(?officeLabel) = ""en"")  # Only consider English labels
}

# Query for the country where Adelbert Cronkhite received an award
SELECT ?country WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardRecipientOf ?award .
  ?award rdfs:label ?awardLabel.
  FILTER (lang(?awardLabel) = ""en"")  # Only consider English labels
}
```",4,8,5,2,2,3,2,20,0,0,1,0,0.0,0
715,51,val,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office ?leader
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Carlos Franco Iribarnegaray"" .
  ?person rdfs:member [ a dbpedia:Organization ;
                      dbpedia:type ""military organization"" ].
  ?person a dbpedia:OfficeHolder;
    dbpedia:office ?office .
  ?office a dbpedia:GovernmentAgency .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
83,7,val,Give me the player in the person born on 1995-07-07 and player in Albert Edward (soccer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Albert_Edward_(soccer)> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1995-07-07""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthDate ""1995-07-07"" .
  ?person2 a dbpedia:Person;
    dbpedia:sportDiscipline ""soccer"";
    dbpedia:birthName ""Albert Edward"" .
  
  ?person1 = ?person2
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
987,40,val,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and entity in Montenegro and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for AK Abdul Momen's band and birth place
SELECT ?bandName ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:affiliatedBand ?bandName .
  ?bandName a dbpedia:MusicArtistGroup .
  ?bandName location ""Montenegro"" . # Assuming AK Abdul Momen is associated with a band in Montenegro
}

# Query for Moamer Kasumović's birth place
SELECT ?moamerBirthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?moamerBirthPlace .
  ?person foaf:name ""Moamer Kasumović"" . # Assuming we use FOAF to find the person by name
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
433,53,val,"Give me the professional in the profession of Bob Marley and associated musical artist of Bill Evans and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?artist WHERE {
  ?bob_marley_artists a dbpedia:Musician ;
    dbpedia:associatedWith ?artist .
  ?bill_evans_artists a dbpedia:Musician ;
    dbpedia:associatedWith ?artist .
  ?artist a dbpedia:Artist .
  ?artist foaf:persona ?paul_chambers .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
507,44,val,"Give me the professional in the profession of Guy Ferland and spouse of Anne V. Coates and director of the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/director> ?result . },"```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?director
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:mainActor Beryl_Reid .
  ?movie dbpedia:directedBy ?director .
  ?person a dbpedia:Person;
    dbpedia:name ""Guy Ferland"" ;
    dbpedia:sameAs ?guyFerland .
  ?guyFerland a dbpedia:Film_Critic;
    dbpedia:spouse ?anneVCoates .
  ?anneVCoates a dbpedia:Person;
    dbpedia:name ""Anne V. Coates"" .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
917,55,val,"Give me the child of the father of Keʻelikōlani and child of the father of Kamehameha IV and parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . },{sparql_query},6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
826,54,val,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of Louis IV, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?successor
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person;
    dbpedia:title ""Louis I of France"" .
  ?child a dbpedia:Person;
    dbpedia:sibling ?sibling .
  ?sibling a dbpedia:Person;
    dbpedia:title ""Philip V of France"" .
  ?child a dbpedia:Person;
    dbpedia:spouse ?spouse .
  ?spouse a foaf:Person;
    foaf:name ""Frederick William""
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
773,52,val,Give me the parent of Charles the Fat and parent of the successor of Charles the Bald and spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v5 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify the parent of Charles the Fat (let's assume it's Louis the Pious)
SELECT ?parentOfCharlesFat WHERE {
  ?charlesTheFat a dbpedia:Person;
    dbpedia:parent_of ?parentOfCharlesFat .
}

# Step 2: Find the spouse of the identified parent of Charles the Fat
SELECT ?spouseOfParentOfCharlesFat WHERE {
  ?parentOfCharlesFat a dbpedia:Person;
    dbpedia:sibling_sporadic ?spouseOfParentOfCharlesFat .
}

# Step 3: Identify the successor of Charles the Bald (let's assume it's Louis the Stammerer)
SELECT ?successorOfCharlesBald WHERE {
  ?charlesTheBald a dbpedia:Person;
    dbpedia:successor_of ?successorOfCharlesBald .
}

# Step 4: Find the parent of this successor
SELECT ?parentOfSuccessorOfCharlesBald WHERE {
  ?successorOfCharlesBald a dbpedia:Person;
    dbpedia:parent_of ?parentOfSuccessorOfCharlesBald .
}

# Combine all the results to find the common parent and spouse
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
CONSTRUCT {
  ?commonParent a dbpedia:Person;
    dbpedia:parent_of ?parentOfCharlesFat .
  ?commonParent rdf:siblingOf ?spouseOfParentOfCharlesFat .
  ?commonParent dbpedia:parent_of ?parentOfSuccessorOfCharlesBald .
} WHERE {
  ?parentOfCharlesFat ?spouseOfParentOfCharlesFat .
  ?successorOfCharlesBald ?parentOfSuccessorOfCharlesBald .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
459,22,val,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore and governor of the administration, that is a politician, of Brad Henry.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/governor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . },"1. For Cliff Roquemore:
   ```sparql
   PREFIX dbpedia: <http://dbpedia.org/ontology/>
   SELECT ?deathPlaceGovernor
   WHERE {
     ?person a dbpedia:Person;
       dbpedia:birthPlace ?birthPlace .
     ?person dbpedia:diedIn ?deathPlace .
     ?deathPlace a dbpedia:Location; rdfs:label ""Death Place of Cliff Roquemore""@en .
     ?deathPlaceGovernor a dbpedia:OfficeHolder;
       dbpedia:office dbpedia:GovernorOf; rdfs:label ""Governor""@en .
   }
   ```

2. For Brad Henry:
   ```sparql
   PREFIX dbpedia: <http://dbpedia.org/ontology/>
   SELECT ?administrationGovernor
   WHERE {
     ?person a dbpedia:Person;
       dbpedia:birthPlace ?birthPlace .
     ?person dbpedia:office dbpedia:AdministrationOf; rdfs:label ""Brad Henry's Administration""@en .
     ?administration a dbpedia:PoliticalAdminstration; rdfs:label ""State""@en .
     ?administrationGovernor a dbpedia:OfficeHolder;
       dbpedia:office dbpedia:GovernorOf; rdfs:label ""Governor""@en .
   }
   ```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
329,20,val,"Give me the entity in Northern Ireland and entity in the region, that is a country, of Western European Time and birthplace of Eric Cross (writer).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/ontology/country> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlaceLabel ?countryLabel
WHERE {
  ?writer a dbpedia:Person;
    dbpedia:name ""Eric Cross""@en;
    dbpedia:birthPlace ?birthPlace .
  ?birthPlace a dbpedia:Location ;
    rdfs:label ?birthPlaceLabel ;
    dbpedia:region ?regionLabel .
  ?regionLabel rdfs:label ""Western European Time""@en .
  ?country a dbpedia:Country ;
    dbpedia:timeZone ""Western European Time""@en;
    dbpedia:location ?birthPlace .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
47,42,val,Give me the office of the awardee of Padma Vibhushan and office of Bidesh Ranjan Bose and office of the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}
```",5,5,6,2,3,3,3,71,0,100980,1,0.0,0.0,0
791,47,val,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },{sparql_query},5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
865,52,val,"Give me the father of Shahla Khatun and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?fatherShahla ?birthPlaceOfAbuAhmad
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Abu Ahmad Abdul Hafiz""@en .
  ?person dbpedia:deathPlace ""Patna""@en .
  ?child a dbpedia:Person;
    dbpedia:parent ?fatherShahla .
    dbpedia:office dbpedia:PoliticianOffice ;
    foaf:father ?politicianFather .
  ?politicianFather a dbpedia:Person;
    dbpedia:name ?childName .
  ?birthPlaceOfAbuAhmad a dbpedia:ResidenceArea;
    dbpedia:name ""Patna""@en .
  ?child foaf:father ?politicianFather .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,21,val,Give me the awardee of Medal bar and awardee of the award of Alfred Warden and commander in New Guinea campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee1 ?awardee2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:awardedMedalBar ?medalBar .
  ?person2 a dbpedia:Person;
    dbpedia:awardedAlfredWardenAward ?wardenAward .
  ?person3 a dbpedia:Person;
    dbpedia:commanderInNewGuineaCampaign ?newGuineaCommander .
  ?person1 = ?person2.
  ?person1 = ?person3.
}",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
826,51,val,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v2 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?predecessor
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person;
    dbpedia:title ""Grand Duke of Hesse"" .
  ?child rdfs:label ""Louis V, Grand Duke of Hesse"" .
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
465,52,val,"Give me the successor of Renée of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?successor_of_bianca
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:sibling [ a dbpedia:Person; foaf:name ""Ercole II d'Este, Duke of Ferrara"" ] .
  ?person a dbpedia:Person;
    dbpedia:spouse [ a dbpedia:Person; foaf:name ""Beatrice d'Este"" ] .
  ?person a dbpedia:Person;
    dbpedia:child ?child_of_beatrice .
  ?child_of_beatrice a dbpedia:Person;
    dbpedia:successor ?successor_of_bianca .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
130,15,val,"Give me the figure known as the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama and entity in Tennessee.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v1 <http://dbpedia.org/ontology/director> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Tennessee> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Paul \""Bear\"" Bryant""@en .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:OrganizationMember ;
    dbpedia:organization dbpedia:SoccerClub ;
    dbpedia:role dbpedia:Coach .
  ?person dbpedia:deathPlace ?deathPlace .
  FILTER (lang(?name) = ""en"") .
}",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
791,45,val,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and predecessor of Emperor Antoku and spouse of Taira no Tokuko.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v1 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . },"{sparql_query}
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father_of_child WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:isMonarch true;
    dbpedia:officeHolder true .
  ?parent dbpedia:name ""Emperor Takakura"" .
  ?child dbpedia:name ""Prince Tsunezane"" .
}",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
978,17,val,Give me the band member of Enya and band member of the person born as the name of Chicane (musician).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Enya> . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName ?enyaBandMembers
WHERE {
  ?person a dbpedia:Person;
    rdfs:label ""Chicane""@en .
  ?artist a dbpedia:MusicArtist;
    dbpedia:bandMember ?enyaBandMembers .
  ?person ns:givenName ?birthName .
}",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
839,49,val,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName1 ?bandName2
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Kevin Richard Russell"" .
  ?person a dbpedia:Musician .
  ?band1 a dbpedia:Band ;
    dbpedia:name ?bandName1 .
  ?person dbpedia:isMemberOf ?band1 .
  
  ?band2 a dbpedia:Band ;
    dbpedia:name ?bandName2 .
  ?band1 dbpedia:hasMember ?band2 .
}
```

This query does the following:
- It finds Kevin Richard Russell as a `dbpedia:Person` with the name ""Kevin Richard Russell"".
- It identifies him as a `dbpedia:Musician`.
- It looks for bands (`dbpedia:Band`) that he is a member of (`?person dbpedia:isMemberOf ?band1`).
- It then finds the band associated with those bands (`?band1 dbpedia:hasMember ?band2`).",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
417,40,val,"Give me the child of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasSpouse [ dbpedia:hasChild ?child ] .
  ?child a dbpedia:Person;
    dbpedia:father dbpedia:Knud, Hereditary Prince of Denmark;
    dbpedia:mother [ dbpedia:isAfricanAmerican ?mother ] .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
554,16,val,Give me the leader of the birth place of The Legendary Tigerman and leader of the administration of Francisco da Costa Gomes.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . ?v2 <http://dbpedia.org/property/leader> ?result . ?v3 <http://dbpedia.org/property/leader> ?result . <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?v3 . },"SELECT ?birthPlaceLeader ?deathPlaceLeader
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  OPTIONAL { ?person dbpedia:associatedRole [ rdfs:label ""Governor of Portuguese India"" ] }
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  OPTIONAL { ?person dbpedia:associatedRole [ rdfs:label ""Viceroy of Portuguese India"" ] }
}",4,4,5,2,2,3,2,20,0,0,3,0,0.0,0
715,52,val,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of Ministry of the Air (Spain) and commander in the force of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v5 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality ""Morocco"";
    dbpedia:associatedWith Francisco_Largo_Caballero .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
715,50,val,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander 
WHERE {
  ?mayor a dbpedia:OfficeHolder; dbpedia:office ""Mayor of [town/city]"";
  ?president a dbpedia:President;
    dbpedia:role ""President, [political party or organization]"";
  ?commander a dbpedia:Politician; dbpedia:role ""Commander"";
  ?mayor dbpedia:worksFor ?president .
  ?president foaf:name ""Carlos Franco Iribarnegaray"" .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
917,45,val,"Give me the child of Kekūanāoʻa and child of the father of the child, that is a royalty, of Kamehameha III and parent of Albert Kamehameha.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child1 ?royaltyChild1 ?child2 ?royaltyChild2 
WHERE {
  ?child1 a dbpedia:Person;
    dbpedia:parent ?parent1 .
  ?parent1 a dbpedia:Person;
    dbpedia:child ?child2 .
  ?child2 a dbpedia:Person;
    dbpedia:parent ?grandParent2 .
  ?grandParent2 a dbpedia:Person;
    dbpedia:child ?royaltyChild2 .
  ?child1 ns:childOf ?royaltyChild1 .
  ?royaltyChild1 ns:parentOf ?child2 .
  ?child2 ns:childOf ?child1 .
  ?child1 ns:childOf <http://dbpedia.org/ontology/Person#Kekūanāoʻa> .
  ?grandParent2 ns:childOf <http://dbpedia.org/ontology/Person#Kamehameha_III> .
}
```

This SPARQL query will find the individuals who fit the criteria of being a child of Kekūanāoʻa and a grandchild of Kamehameha III, ensuring that they are also royalty.",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
459,21,val,Give me the person born as the birth name of Kevin Stitt and governor of Oklahoma and governor of Dana Murphy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthName ?precedingGovernor ?succeededGovernor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Kevin Stitt""@en;
    dbpedia:office dbpedia:Governor_of_Oklahoma .
  ?person dbpedia:term_start_date ""2019-01-01""^^xsd:date .
  ?precedingOffice a dbpedia:Office;
    dbpedia:office dbpedia:Governor_of_Oklahoma;
    dbpedia:term_start_date < precedingOffice:term_start_date > .
  ?succeededOffice a dbpedia:Office;
    dbpedia:office dbpedia:Governor_of_Oklahoma;
    dbpedia:term_start_date > ?person:term_end_date .
  FILTER (EXISTS { ?x . ?x a dbpedia:Person; dbpedia:name ?birthName } )
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
373,7,val,"Give me the professional in Singer, songwriter and writer of the work, that is a single and a musical work and a work and a soundtrack, of .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/property/occupation> ""Singer, songwriter""@en . }","Given the reasoning steps, we can construct the following SPARQL query to extract the required information from DBpedia:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist
WHERE {
  ?song a dbpedia:Song ;
    dbpedia:lyrics ""Bohemian Rhapsody"" ;
    dbpedia:performer ?artist .
  ?artist a dbpedia:Artist;
    dbpedia:single ""Bohemian Rhapsody""@en .
  ?song a dbpedia:MusicalWork ;
    dbpedia:trackListeningRatingsValue ""N/A""^^xsd:nonNegativeInteger .
  ?song a dbpedia:SoundtrackItem .
}
```",3,7,4,2,2,2,2,9,0,0,78,0,0.0,0
826,40,val,"Give me the spouse of the child of the father of Anna Magdalena Appel and predecessor of Louis IV, Grand Duke of Hesse and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childSpouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Johann Georg II von Hohenzollern"" .
  ?person dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:name ""Karl Anton, Prince of Hohenzollern"" .
  ?child a dbpedia:Person;
    dbpedia:parent ?person .
  ?child a dbpedia:Child; 
    dbpedia:parent ?person .
  ?childSpouse a dbpedia:Person;
    dbpedia:spouse ?child .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
465,40,val,"Give me the spouse of Archduchess Barbara of Austria and successor of Renée of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  dbpedia:Barbara_Maria_Teresa_of_Austria a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  dbpedia:Maximilian_Francis_of_Bavaria a dbpedia:Person;
    dbpedia:spouse ?spouse .
  ?person1 a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Ercole II d'Este, Duke of Ferrara"";
    dbpedia:child ?person2 .
  ?person2 a dbpedia:Person;
    rdfs:label ""Barbara Maria Theresa of Austria"" .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
839,42,val,"Give me the band of Peter Schorowsky and band of the person born, that is a musical artist, as Kevin Richard Russell and band of the band, that is a musical artist, of Charlie Huhn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?artist a dbpedia:Artist;
    dbpedia:hasBand ?bandName .
  ?artist rdfs:label ""Peter Schofield""@en .
  ?artist rdfs:label ""Kevin Richard Russell""@en .
  ?artist rdfs:label ""Charlie Huhn""@en .
}",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
839,47,val,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of the band, that is a band and a group, of Peter Schorowsky.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/bandMember> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandKevin ?bandPeter
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Kevin Richard Russell"" .
  ?person a dbpedia:musicalArtist .

  ?person2 a dbpedia:Person;
    dbpedia:name ""Peter Schorowsky"" .
  ?person2 a dbpedia:bandMember .

  ?band Kevin Richard Russell.
  ?band Peter Schorowsky .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
192,15,val,"Give me the spouse of the spouse, that is a royalty, of the child of Charles II of Naples and child of Mary of Hungary, Queen of Naples.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_of_Hungary,_Queen_of_Naples> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . ?v1 <http://dbpedia.org/ontology/spouse> ?v0 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouseOfSpouse WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?charlesII .
  ?child a dbpedia:Person;
    dbpedia:child ?grandchild .
  ?grandchild a dbpedia:Person;
    dbpedia:sibling ?otherGrandchild .
  ?otherGrandchild a dbpedia:Person;
    dbpedia:spouse ?royalSpouse .
  ?royalSpouse a dbpedia:Person;
    dbpedia:monarchParent ?royaltyParent
  FILTER (xsd:string(?royaltyParent) = ""Charles II of Naples"")
}",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
715,54,val,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and commander in the force, that is a military conflict, of Abd el-Krim and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for the Spanish context
SELECT ?mayorCommander WHERE {
  ?person a dbpedia:OfficeHolder;
    dbpedia:Politician;
    dbpedia:PresidentOfSpain ;
    dbpedia:generalElection ?election .
  ?election rdf:type dbpedia:Election .
  ?person dbpedia:commanderInForceOf ?mayor
}
  
# Query for the Moroccan context
SELECT ?abdulkrimCommander WHERE {
  ?person a dbpedia:OfficeHolder;
    dbpedia:Politician;
    dbpedia:MilitaryConflictParticipant ;
    dbpedia:led MinistryOfTheAirSpain .
  ?person rdfs:label ""Abd el-Krim"" . 
  ?person dbpedia:commanderInForceOf ?abdulkrimCommander
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
281,22,val,"Give me the commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?war ?cosgrave_award
WHERE {
  ?person a dbpedia:Person;
    dbpedia:conflictIn ?war .
  ?person a dbpedia:Person;
    dbpedia:awardedWith ?cosgrave_award .
  ?war rdfs:label ""World War I"" . 
  ?cosgrave_award rdfs:label ""Victoria Cross"" .
}",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
47,54,val,"Give me the office of Ajoy Mukherjee and office of the administration of Jagdeep Dhankhar and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX award: <http://dbpedia.org/ontology/Award>

SELECT ?office1 ?office2 ?awardedAward
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:office ?office1 .
  ?person1 rdfs:label ""Ajoy Mukherjee""@en .
  
  ?person2 a dbpedia:Person;
    dbpedia:office ?office2 .
  ?person2 rdfs:label ""Jagdeep Dhankhar""@en .

  ?awardee a award:Award ;
    award:recipient ?person1 .
  ?awardee rdfs:label ""Mantu Ghosh""@en .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
456,43,val,"Give me the band of Alan Doyle and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and spouse of Danielle Spencer (Australian actress).","SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","As the provided details contain inaccuracies and no clear link between Alan Doyle and the specified alter ego of Lamont Cranston with Danielle Spencer as his spouse, crafting a specific SPARQL query is not feasible based on factual data.",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
987,45,val,"Give me the birth place of Moamer Kasumović and birth place of Dado Polumenta and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v0 <http://dbpedia.org/property/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace1 ?deathPlace1 ?event
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace1 .
  ?person2 a dbpedia:Person;
    dbpedia:name ""Dado Polumenta"";
    dbpedia:birthPlace ?birthPlace2 .
  
  ?event a dbpedia:Event;
    dbpedia:location ?location .
  
  ?location a dbpedia:Location;
    rdfs:label ""Canicosa de la Sierra""@es
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
124,49,val,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?conflictCommander ?conflict
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1850-06-24"" .
  OPTIONAL { 
    ?person rdfs:seeAlso ?detailsPage } 
    FILTER NOT EXISTS { ?detailsPage rdf:type dbo:War . }
  ?person dbpedia:militaryUnit dbpedia:A Field Battery, Royal Australian Artillery .
  ?conflict a dbo:MilitaryConflict;
    dbpedia:startDate ""1899-01-01""^^xsd:date;
    dbpedia:endDate ""1902-01-01""^^xsd:date.
  ?conflictCommander a dbpedia:Person;
    dbpedia:commandMilitaryUnitDuring ?conflict .
}
```",5,9,6,3,2,3,3,71,0,0,9,0,0.0,0
965,47,val,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouseOfSpouse ?royaltyChild
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:name ""Princess Victoria of Hesse and by Rhine"";
    dbpedia:birthDate ""24 May 1854"" .
  ?person1 dbpedia:spouse ?person2.
  ?person2 a dbpedia:Person;
    dbpedia:name ""Prince Louis of Prussia"".
  ?person2 dbpedia:spouse ?person3.
  ?child a dbpedia:Person;
    dbpedia:title ""Crown Prince of Prussia"" .
  ?child dbpedia:parent ?parent.
  ?parent a dbpedia:Person;
    dbpedia:name ""Wilhelm, Crown Prince of Prussia"".
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
926,40,val,Give me the child of Ahmed III and father of the father of the spouse of Neşerek Kadın and successor of Mustafa III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?successor a dbpedia:Monarch; dbpedia:succeededBy ?current_monarch .
  ?current_monarch a dbpedia:Monarch; dbpedia:title ""Ahmed III"" .
  ?spouse a dbpedia:Person; dbpedia:partner ?wife .
  ?wife a dbpedia:Person; dbpedia:parent ?grandfather .
  ?grandfather a dbpedia:Person; dbpedia:child ?child .
  ?child a dbpedia:Person; dbpedia:father ?father_of_spouse .
  ?father_of_spouse = ?successor
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
495,15,val,Give me the father of Princess Charlotte of Württemberg and child of the father of the parent of Princess Catherine of Württemberg.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Princess_Charlotte_of_Württemberg> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}
```",4,4,5,3,2,3,2,20,0,100980,1,0.0,0.0,0
773,55,val,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of the father of Charles the Fat and parent of the successor of Charles the Bald.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?child dbpedia:birthDate ""795""^^<date> ; # Carloman II was born in 795
  ?child dbpedia:deathDate ""841""^^<date> ; # Carloman II died in 841
  ?parent a dbpedia:Person;
    dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:name ""Hemma of Saxony"" .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
459,20,val,"Give me the governor of Oklahoma and governor of the administration, that is a politician, of Brad Henry and person born as John Kevin Stitt.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . ?v3 <http://dbpedia.org/property/governor> ?result . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?governor
WHERE {
  ?person a dbpedia:Politician;
    dbpedia:office ""Governor of Oklahoma"";
    dbpedia:termStartYear 2003.
  ?person rdfs:label ""Brad Henry"".
}

AND

PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?governor
WHERE {
  ?person a dbpedia:Politician;
    dbpedia:office ""Governor of Oklahoma"";
    dbpedia:termEndYear 2011.
  ?person rdfs:label ""John Kevin Stitt"".
}",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
791,41,val,"Give me the predecessor of the child of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura and father of Emperor Go-Toba.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?predecessor WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:spouse ?spouse ;
    dbpedia:title ""Emperor Takakura"" .
  ?child dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:title ""Emperor Go-Toba"" .
  ?child dbpedia:grandparent ?grandparent .
  ?grandparent a dbpedia:Person;
    dbpedia:title ?title .
  FILTER (LANG(?title) = ""en"")  # Assuming we are looking for English titles
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
976,46,val,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v0 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office_of_kilincdaroğlu ?office_of_mayor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Kemal Kılıçdaroğlu""@en .
  ?person dbpedia:office dbpedia:PoliticalPartyLeadership ;
    dbpedia:party dbpedia:Cumhuriyet Halk Partisi .

  ?mayor a dbpedia:OfficeHolder;
    dbpedia:office dbpedia:MayorOf ;
    dbpedia:role ""Turkish mayor""@en .
  ?mayor a dbpedia:Person;
    dbpedia:name ""A Mayor's Name""@en .
  ?mayor dbpedia:party dbpedia:Cumhuriyet Halk Partisi .
}
```",5,10,6,3,2,3,3,71,0,0,3,0,0.0,0
573,53,val,"Give me the person decedent at Quincy, Massachusetts and parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> ?v3 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . }","{PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?politician ?officeHolder
WHERE {
  ?politician a dbpedia:OfficeHolder;
    dbpedia:office dbpedia:Exchequer_Standards .
  ?politician dbfoaf:parent ?authorParent .
  ?authorParent a dbpedia:Person;
    foaf:name ""Charlie Baker"" .
  ?politician decedentLocation ""Quincy, Massachusetts"" .
  ?region a dbpedia:Region .
}}",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
987,46,val,"Give me the birth place of the actor of All for Free and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actorBirthPlace ?bandBirthPlace
WHERE {
  ?movie dbpedia:hasActor ?actor .
  ?actor a dbpedia:Person;
    dbpedia:birthPlace ?actorBirthPlace .

  ?band dbpedia:hasBandMember ?bandMember .
  ?bandMember a dbpedia:Person;
    dbpedia:birthPlace ?bandBirthPlace .
  
  ?band rdfs:label ""Dado Polumenta""@en .
}",5,8,6,3,2,3,3,71,0,0,4,0,0.0,0
281,20,val,"Give me the awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave and commander in New Guinea campaign and awardee of Volunteer Decoration.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee ?conflict
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedForMilitaryConflict ?conflict .
  ?person dbpedia:commanderIn ?campaign .
  ?campaign rdfs:label ""New Guinea campaign"" . 
  ?person ns:name ""Lawrence Moore Cosgrave"" .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
465,43,val,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Renée of France and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  dbpedia:Maximilian_II Holy Roman Emperor ;
    dbpedia:wife ?spouse .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
83,16,val,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983) and party of the governor of Dilma Rousseff.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://dbpedia.org/property/leaderParty> ?result . <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace ?soccerClub ?governingParty
WHERE {
  ?footballer a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?footballer rdfs:label ""Sandro""@en .
  ?soccerClub a dbpedia:SoccerClub;
    dbpedia:foundInCity ?birthPlace .
  ?governingParty rdfs:label ""Current Governing Party of Dilma Rousseff""@en .
  ?governingPerson a dbpedia:OfficeHolder;
    dbpedia:office dbpedia:President_of_Brasil ;
    foaf:name ""Dilma Rousseff""@en .
  ?birthPlace rdfs:label ?birthPlaceLabel .
}
```

This SPARQL query will:
- Find Sandro (with label ""Sandro"" in English) and his birthplace.
- Identify the soccer club founded in the same town as Sandro's birthplace.
- Extract the current governing party of Dilma Rousseff (as the President of Brazil).",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
445,52,val,"Give me the death place of the awardee of Royal Astronomical Society and entity in United Kingdom and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person dbpedia:residence dbpedia:BritishIndia .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
791,44,val,"Give me the predecessor of the child of Emperor Takakura and father of the child, that is a royalty, of Emperor Takakura and spouse of Taira no Tokuko.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:spouse Taira no Tokuko ;
    dbpedia:child ?child .
}
```

This SPARQL query selects individuals (`?child`) who are children of a person (`?parent`) who is the spouse of Taira no Tokuko and also has Taira no Tokuko as their parent.",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
892,40,val,Give me the entity in Province of Reggio Emilia and landmark at elevation of 58 and entity in the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . }",{sparql_query},5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
826,46,val,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?successor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Darmstadt, Germany"";
    dbpedia:spouse ?wife ;
    dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:name ""Louis Ferdinand of Hesse"" .
  ?wife a dbpedia:Person;
    dbpedia:name ""Princess Katharina Wilhelmina of Prussia"" .
  ?person rdfs:type dbpedia:Monarchy_Role ;
    dbpedia:role ""Grand Duke of Hesse"" .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
433,45,val,Give me the associated musical artist of Bill Evans and associated musical artist of Paul Chambers and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band1 ?artist1, ?band2 ?artist2
WHERE {
  ?person1 a dbpedia:Musician;
    dbpedia:associatedBand ?band1 .
  ?person2 a dbpedia:Musician;
    dbpedia:associatedBand ?band2 .
  
  ?person1 rdfs:label ""Bill Evans""@en.
  ?person2 rdfs:label ""Paul Chambers""@en.
  
  ?artist1 rdfs:label ""Scott LaFaro""@en.
  ?artist2 rdfs:label ""Vince Guaraldi""@en.

  ?person3 a dbpedia:Artist;
    dbpedia:composition ""Slowhand""@en;
    dbpedia:title ""Slowhand""@en.
}

```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
826,50,val,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of the parent of Prince Friedrich of Hesse and by Rhine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Louis III, Landgrave of Hesse"" .
  ?person a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Royalty;
    dbpedia:name ?successor .
  ?parent dbpedia:offspring ?child .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
865,51,val,"Give me the father of the child of the father of Abul Maal Abdul Muhith and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandfather ?politician_father
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child ;
    rdfs:label ""AK Abdul Momen""@en .
  ?child2 a dbpedia:Person;
    dbpedia:hasParent ?grandfather ;
    rdfs:label ""Abu Ahmad Abdul Hafiz""@en .
  ?parent2 a dbpedia:Person;
    dbpedia:hasChild ?child2 ;
    rdfs:label ?politician_label@en .
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
417,44,val,"Give me the child of the father of Frederick IX of Denmark and spouse of Princess Caroline-Mathilde of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalty
WHERE {
  ?grandParent a dbpedia:Monarch;
    dbpedia:father dbpedia:Christian_XIX_of_Denmark .
  ?parent a dbpedia:Person;
    dbpedia:spouse dbpedia:Princess_Caroline_Mathilde_of_Denmark ;
    dbpedia:child ?royalty .
  ?royalty a dbpedia:Royalty .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
365,15,val,"Give me the spouse of Olha Petliura and person born as the birth name of the commander, that is an office holder, in Ukrainian–Soviet War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Olha_Petliura> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseName ?birthName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthName ?birthName .
  ?person a foaf:Person;
    foaf:partner ?spouseName .
  ?person dbpedia:conflict Ukrainian_Soviet_War .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
933,45,val,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of Mike Elliott (saxophonist) and reference to Alan Warner.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person ?band
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1947-04-21"" .
  ?person a dbpedia:MusicArtist .
  ?person dbpedia:musicalGroup ?band .
  OPTIONAL { 
    ?person rdfs:label ?name . 
    FILTER (regex(?name, 'Mike Elliott')) } .
  OPTIONAL { 
    ?person foaf:knows ?alanWarner . 
    ?alanWarner a dbpedia:Person; 
    rdfs:label ""Alan Warner"" . 
  }
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
465,47,val,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?successor
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person;
    dbpedia:name ""Alfonso I d'Este"" .
  ?child dbpedia:spouse ?spouse .
  ?child a dbpedia:Child; 
    dbpedia:successor ?successor .
  ?spouse a foaf:Person;
    foaf:name ""Francis I of France"" .
  ?child foaf:brother ?otherSibling .
  ?otherSibling a dbpedia:Person;
    dbpedia:name ""Charles de Lorraine"" .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
965,40,val,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouseSpouseParent ?parentOfLouise ?parents
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthDate ?birthDate1 .
  ?person2 a dbpedia:Person;
    dbpedia:birthDate ?birthDate2 .
  ?person1 ns:spouses ?person2 .
  ?parent1 a dbpedia:Person;
    dbpedia:parentOf ?child ;
    dbpedia:name ""Louise Mountbatten"" .
  ?child a dbpedia:Person;
    dbpedia:name ""Louise Mountbatten"" .
  ?parent2 a dbpedia:Person;
    dbpedia:parentOf ?child ;
    dbpedia:name ""George Mountbatten, 2nd Marquess of Milford Haven"" .
  ?child a dbpedia:Person;
    dbpedia:name ""George Mountbatten, 2nd Marquess of Milford Haven"" .
  FILTER (xsd:date(?birthDate1) < xsd:date(""1920-06-15"")).
  FILTER (xsd:date(?birthDate2) < xsd:date(""1920-06-15""))
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
216,44,val,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in Igor Bišćan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1983-12-20"" .
  ?person a dbpedia:Manager ;
    dbpedia:managerOf ?team .
  ?person a dbpedia:Player ;
    dbpedia:playerOf ?team .
  ?team dbpedia:coach ?coach .
  ?coach dbpedia:name ""Igor Bišćan"" .
}
```",5,11,6,2,3,3,3,71,0,0,1,0,0.0,0
965,46,val,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the child, that is a royalty, of Prince Louis of Battenberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouseOfSpouse ?royaltyChild
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:parent ?grandparent .
  ?parent dbpedia:name ""Prince Louis of Battenberg"" .
  ?grandparent a dbpedia:Person;
    dbpedia:name ""Prince Louis of Battenberg"" .
  ?parent dbpedia:spouse ?spouseOfParent .
  ?spouseOfParent a dbpedia:Person;
    dbpedia:spouse ?spouseOfSpouse .
  ?child a dbpedia:Person;
    dbpedia:name ""Elizabeth II"" .
  ?child rdfs:type dbpedia:Royalty .
}",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
465,55,val,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of the child, that is a royalty, of Anne of Brittany.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v3 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?successor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:spouse ?wife .
  ?wife a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:succeededBy ?successor .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
41,19,val,"Give me the party of Enda Kenny and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election and party of Declan Costello.",SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?partyEndaKenny ?partyElectionLeader ?partyDeclanCostello
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolder ""Taoiseach of Ireland"" .
  ?person rdfs:label ?partyEndaKenny .

  ?election a dbpedia:Election;
    dbpedia:year 2005;
    dbpedia:location ""Castlereagh, Northern Ireland"" .
  ?candidate a dbpedia:OfficeHolder;
    dbpedia:office dbpedia:Castlereagh_Borough_Council ;
    dbpedia:party ?partyElectionLeader .

  ?person2 a dbpedia:Person;
    dbpedia:officeHolder ""Member of the Legislative Assembly"" .
  ?person2 rdfs:label ?partyDeclanCostello .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
41,20,val,Give me the party of Mark Durkan and party of the person born as David Declan Costello and party of Enda Kenny.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person ?party
WHERE {
  ?person rdfs:label ?name .
  ?person a dbpedia:OfficeHolder ;
    dbpedia:office ?office .
  ?office rdfs:label ?party .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
329,19,val,Give me the birthplace of the author of The Tailor and Ansty and entity in United Kingdom and entity in Northern Ireland.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person dbpedia:work[""The Tailor and Ansty""].
}",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
216,55,val,"Give me the player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?playerName ?coachName 
WHERE { 
  ?player a dbpedia:Person; dbpedia:birthDate '1983-12-20' . 
  ?player dbpedia:pseudonym ?playerName . 
  ?player a dbpedia:Person; dbpedia:role dbpedia:SoccerPlayer . 
  ?player a dbpedia:Person; dbpedia:role dbpedia:Coach . 
  ?coach a dbpedia:Person; dbpedia:birthDate '1983-12-20' . 
  ?player dbpedia:pseudonym ?playerName . 
  ?coach dbpedia:pseudonym ?coachName . 
  ?player log:hasRole dbpedia:SoccerManager . 
  ?coach log:hasRole dbpedia:SoccerCoach . 
}",6,12,7,2,3,3,3,71,0,0,1,0,0.0,0
456,47,val,"Give me the spouse of the actor of Pacific Drive and professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","Given the complexity and the need for specific actor details, a direct SPARQL query might not be straightforward without additional data. However, assuming we have the actor's name (let's hypothetically call him Actor_X), a general approach to find spouse information could be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actorName ?spouseName
WHERE {
  ?actor dbpedia:role dbpedia:The_Shadow_in_Pacific_Drive ;
         dbpedia:actorName ""Actor_X"" .
  ?actor dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person;
          dbpedia:name ?spouseName .
}
```

This query looks for an actor named ""Actor_X"" who played Lamont Cranston in Pacific Drive and then finds the spouse of that actor.",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
773,47,val,"Give me the spouse of the father of Charles the Fat and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?father a dbpedia:Person;
    dbpedia:name ""Louis the Pious""@en .
  ?children a dbpedia:FamilyProperty ;
            dbpedia:member [ dbpedia:parent ?father ] .
  ?child a dbpedia:Person;
    dbpedia:name ""Louis II""@en .
  ?spouse a dbpedia:Person;
    dbpedia:familyMember ?child .
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
865,50,val,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },{sparql_query},5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
124,55,val,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war ?militaryForce1 ?militaryForce2
WHERE {
  ?war a dbpedia:Event;
    dbpedia:type ""conflict"" .
  ?militaryForce1 a dbpedia:MilitaryForce;
    dbpedia:participatedIn ?war .
  ?militaryForce2 a dbpedia:MilitaryForce;
    dbpedia:participatedIn ?war .
  ?militaryForce1 rdfs:label ""British Army"".
  ?militaryForce2 rdfs:label ""Royal Australian Artillery"".
}
```",6,13,7,2,3,3,3,71,0,0,9,0,0.0,0
274,21,val,"Give me the professional in  and associated musical artist of the actor, that is a musical artist, of Imagine the Sound and band member of Dizzy Gillespie.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actorName ?musicalArtist
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:role dbpedia:Musician ;
    dbpedia:bandMemberOf dbpedia:Dizzy_Gillespie .
  ?actor rdfs:label ?actorName .
  OPTIONAL { 
    ?actor dbpedia:musicalGenre ?musicalGenre .
    ?musicalArtist a dbpedia:MusicalArtist;
      dbpedia:associatedWith ?actor .
  }
}
```

This SPARQL query does the following:
- It selects individuals (`?actorName`) who have the role of a musician and are band members of Dizzy Gillespie.
- It uses `rdfs:label` to get the label (name) of these individuals.
- It includes an optional clause to find associated musical artists (`?musicalArtist`) with these actors, assuming that there is a relationship between them.",4,5,5,2,3,2,3,28,0,0,3,0,0.0,0
442,7,val,"Give me the resting place of the work of Roosevelt, Theodore and resting place of Fay Bainter.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> ""Roosevelt, Theodore""@en . <http://dbpedia.org/resource/Fay_Bainter> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}
```

This SPARQL query will return the birthplace and death place of any person in the DBpedia ontology, which should include both Theodore Roosevelt and Fay Bainter.",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
445,42,val,"Give me the death place of Patrick Moore and entity in the award of George H. Cameron and entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Find death place of Patrick Moore
SELECT ?deathPlace WHERE {
  ?person dbpedia:name ""Patrick Moore"" .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace
}

# Find residence country of Anna Sharkey
SELECT ?country WHERE {
  ?person rdfs:label ""Anna Sharkey"" .
  ?person a dbpedia:Person;
    dbpedia:residenceCountry ?country
}

# Find the award given to George H. Cameron
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX owl: <http://www.w3.org/2002/07/owl#

SELECT ?award WHERE {
  ?award a owl:Class; rdfs:label ""Award"" .
  ?George_H_Cameron dbpedia:awardedBy ?award
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
965,48,val,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?grandparentSpouseSpouseSpouse ?nobleParent
WHERE {
  ?mother dbpedia:birthDate ?motherBirthDate .
  ?father dbpedia:birthDate ?fatherBirthDate .
  ?mother dbpedia:spouse ?motherSpouse .
  ?father dbpedia:spouse ?fatherSpouse .
  ?mother dbpedia:noblePerson ?nobleMother .
  ?father dbpedia:noblePerson ?nobleFather .
  FILTER (AND (?motherBirthDate <= 1895-01-01)
          (?fatherBirthDate >= 1895-01-01)
          (?nobleMother = ?mother)
          (?nobleFather = ?father))
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
443,19,val,Give me the birthplace of Ulf Lundell and landmark at elevation of the award of William Shepherd and birthplace of Carl Larsson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?personName ?birthPlace ?landmark
WHERE {
  ?person a dbpedia:Person;
    rdfs:label ?personName .
  ?person dbpedia:birthPlace ?birthPlace .
  OPTIONAL { 
    ?person dbpedia:hasAward ?award .
    ?award a dbpedia:Award ;
      rdfs:label ?landmarkLabel .
  }
  FILTER (lang(?personName) = ""en"")  # Only consider English names
}
```",4,4,5,2,3,2,3,28,1,782048,0,1.2786922558560908e-06,1.0,2.5573812416085926e-06
236,16,val,"Give me the party member of the administration of James Madison and party member of the administration, that is an organisation, of John Adams.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . ?result <http://dbpedia.org/ontology/party> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?partyMember
WHERE {
  ?president a dbpedia:Person;
    dbpedia:office dbpedia:President_of_the_United_States ;
    dbpedia:partyMember ?partyMember .
  FILTER (STRSTARTS (?president, ""James Madison"") OR STRSTARTS (?president, ""John Adams""))
}",4,5,5,2,2,3,2,20,0,0,19,0,0.0,0
826,55,val,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify the parents of Prince Friedrich
SELECT ?father WHERE {
  dbpedia:Prince_Friedrich_of_Hesse_and_by_Rhine a dbpedia:Person;
    dbpedia:parent ?father .
}

# Step 2: Determine the predecessor of his father, Louis I
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?predecessor WHERE {
  ?father rdfs:precedesor ?predecessor .
  FILTER( ?father = dbpedia:Louis_I,_Grand_Duke_of_Hesse )
}

# Step 3: Identify the child of Johann Heinrich Appel
SELECT ?child WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent dbpedia:Johann_Heinrich_Appel .
}

# Step 4: Find the successor to that child
SELECT ?successor WHERE {
  ?child rdfs:succesor ?successor .
  FILTER( ?child = <Child_of_Johann_Heinrich_Appel> ) # Placeholder for actual child ID
}

# Combine all results into a single query
CONSTRUCT { ?birthPlace ?deathPlace }
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
892,45,val,"Give me the landmark at elevation of 58 and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino and entity in Italy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/province> ?v0 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find landmarks with elevation 58 meters
SELECT ?landmark WHERE {
  ?landmark a dbpedia:Landmark; dbpedia:heightInMetres 58 .
}

# Step 2: Identify the Italian administrative entity
SELECT ?entity WHERE {
  ?entity a dbpedia:AdministrativeTerritory;
    dbpedia:country dbpedia:Italy .
}

# Step 3: Determine the political party associated with Andrea Cozzolino
SELECT ?party WHERE {
  ?party a dbpedia:PoliticalParty; dbpedia:member dbpedia:Andrea_Cozzolino .
}

# Step 4: Combine all these elements to form a coherent answer
```",5,11,6,3,3,3,3,71,0,0,2,0,0.0,0
955,17,val,"Give me the band of the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs and band of Nate Albert.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nate_Albert> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?nateAlbert a dbpedia:MusicalArtist ;
               dbpedia:memberOf dbpedia:Band ;
               dbpedia:name ""Nate Albert"" .
  ?streetDogs a dbpedia:Band ;
              dbpedia:hasMember ?nateAlbert .
  ?streetDogs a dbpedia:Organization .
}
```",4,9,5,3,2,3,2,20,0,0,1,0,0.0,0
965,44,val,"Give me the spouse of Prince Louis of Battenberg and parent of the child, that is a royalty, of Prince Louis of Battenberg and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","SELECT ?spouse ?child ?royalty_status ?george_parents
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Victoria, United Kingdom"" .
  ?person dbpedia:parent ?parent .
  ?parent a dbpedia:Person ;
    rdfs:label ""Queen Victoria"" .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent ;
    dbpedia:sibling ?sibling .
  ?sibling a dbpedia:Person ;
    rdfs:label ""Prince Albert"" .
  ?child a dbpedia:Royalty .
  ?person dbpedia:spouse ?spouse .
  ?child a dbpedia:Person;
    dbpedia:birthPlace ""Battenberg, Germany"" .
  ?child a dbpedia:Royalty .
}",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
865,40,val,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of Shahla Khatun and father of AK Abdul Momen.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person ns:fatherOf Shahla Khatun; 
    ns:deathPlace ""Patna, India"" . # Assuming Patna is where Sir Abdullah Yusuf Agha died
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
892,51,val,"Give me the landmark at elevation of the award of Anna Ishii and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?awardName ?elevation ?partyName ?regionName ?adminRegionName
WHERE {
  ?award dbpedia:awardedTo ?person .
  ?person rdfs:label ?personLabel .
  FILTER (regex(str(?personLabel), ""Anna Ishii"")) .

  ?party dbpedia:politicalPartyOf ?person .
  ?person rdfs:label ?personLabel .
  FILTER (regex(str(?personLabel), ""Andrea Cozzolino"")) .

  ?region a dbpedia:Region; dbpedia:country ""Italy"" .
  ?adminRegion a dbpedia:AdministrativeDivision; dbpedia:parentRegion ?region .
  
  ?party rdfs:label ?partyLabel .
  FILTER (regex(str(?partyLabel), ""Italian party name"")) .

  ?regionName ?region .
  ?adminRegionName ?adminRegion .
}
```",5,11,6,3,2,3,3,71,0,0,2,0,0.0,0
582,45,val,"Give me the player in Kazuaki Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to Japan.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?team a dbpedia:SportsTeam;
    dbpedia:nickname ?nickname .
  ?player a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?player a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?player dbpedia:playedFor ?team .
  FILTER (regex(str(?team), ""Japan"")).
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
417,49,val,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?royaltySpouse ?royaltyChild
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen"" .
  ?parent dbpedia:father ?grandfather .
  ?grandfather a dbpedia:Person;
    dbpedia:name ""Alexandrine of Mecklenburg-Schwerin"" .
  ?parent dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:name ""Count Ingolf of Rosenborg"" .
  ?child a dbpedia:Person;
    dbpedia:spouse ?royaltySpouse .
  ?child a dbpedia:Person;
    dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person;
    dbpedia:name ""Alexandrine of Mecklenburg-Schwerin"" .
}",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
987,51,val,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the actor of All for Free.",SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://dbpedia.org/property/timeZone> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?country ?timeZone ?event ?actorBirthPlace 
WHERE { 
  ?location geo:locatedIn dbpedia:Canicosa_de_la_Sierra ; dbpedia:country ?country . 
  ?timeZone rdfs:subPropertyOf dbpedia:standardTimeZones ; dbpedia:value ?timeZone . 
  ?event a dbpedia:Event ; dbpedia:location ?location ; dbpedia:timeZone ?timeZone . 
  ?actor a dbpedia:Person ; dbpedia:birthPlace ?actorBirthPlace . 
  ?actor dbpedia:role ?roleInMovie ; dbpedia:title 'All for Free' . 
}",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
124,47,val,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?militaryForce
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedMilitaryMedal dbpedia:BritishSouthAfricaCompanyMedal ;
    dbo:militaryConflict dbpedia:AngloBoerWar .
  ?person rdfs:label ""A Field Battery, Royal Australian Artillery""@en.
}
```",5,10,6,3,2,3,3,71,0,0,10,0,0.0,0
865,48,val,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlaceCountry
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:name ""Abu Ahmad Abdul Hafiz"" ;
    dbpedia:birthPlace ?birthPlace .
  ?birthPlace a dbpedia:Location;
    rdfs:label ?birthPlaceCountry .
}
```

This query will:
- Identify Abu Ahmad Abdul Hafiz as the father of AK Abdul Momen.
- Retrieve the birthplace (`dbpedia:birthPlace`) of Abu Ahmad Abdul Hafiz.
- Extract the country label (`rdfs:label`) of the location where Abu Ahmad Abdul Hafiz was born.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
465,42,val,"Give me the spouse of Archduchess Barbara of Austria and successor of the child, that is a royalty, of Anne of Brittany and successor of the child of Alfonso I d'Este.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Anne of Brittany"";
    dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person;
    dbpedia:child ?person ;
    dbpedia:name ""Alfonso I d'Este"" .
  ?person a dbpedia:Person;
    dbpedia:succeededBy ?successor .
  ?successor a dbpedia:Person;
    dbpedia:spouse ?spouse .
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
715,55,val,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander_in_force ?leader_office
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:roleInMilitaryConflict ""Commander in the force of Abd el-Krim"" .
  ?person2 a dbpedia:Person;
    dbpedia:officeOrGovernmentAgency ?leader_office .
  ?person3 a dbpedia:Person;
    dbpedia:roleInMilitaryConflict ""Commander in the force of Francisco Largo Caballero"" .
  ?person1 ns:involvesMilitaryConflict ?conflict1 .
  ?person2 ns:leadsOfficeOrGovernmentAgency ?office1 .
  ?person3 ns:involvesMilitaryConflict ?conflict3 .
  ?conflict1 rdfs:label ""Rif Rebellion"" .
  ?office1 rdfs:label ""Prime Minister of Spain"" .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
976,52,val,"Give me the office of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v4 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v4 <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office_bostanci ?mayor_office ?kiliaci_office
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Naci Bostancı""@en .
  ?person dbpedia:office ?office_bostanci .
  ?office_bostanci a dbpedia:OfficeHolderRole .
  
  ?person a dbpedia:Person;
    dbpedia:name ""Kemal Kılıçdaroğlu""@en .
  ?person dbpedia:office ?kiliaci_office .
  ?kiliaci_office a dbpedia:PoliticalOffice .
}",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
445,40,val,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in United Kingdom and death place of Patrick Moore.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Athlete; 
    dbpedia:residenceCountry dbpedia:United_Kingdom .
  ?person dbpedia:diedIn ?deathPlace .
}",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
839,50,val,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v4 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?artist a dbpedia:MusicalArtist;
    dbpedia:associatedBand ?band .
  ?band a dbpedia:Band .
}

AND

PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?member a dbpedia:Person;
    dbpedia:isMemberOf ?band .
  ?band a dbpedia:Band .
}",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
507,46,val,"Give me the spouse of the person born as the birth name of Anne V. Coates and director of the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v4 <http://dbpedia.org/ontology/director> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Anne V. Coates"" .
  ?person dbpedia:birthName ?birthName .
  ?character a dbpedia:Character;
    dbpedia:name ""Lady Sylvia"" .
  ?movie a dbpedia:Film;
    dbpedia:director ?director .
  ?character dbpedia:appearsIn ?movie .
  ?director rdfs:label ""Beryl Reid"" .
  ?person dbpedia:spouse ?spouse
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
216,43,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and player in Igor Bišćan and team of Ognjen Vukojević.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v4 . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""AK Abdul Momen""@en .
  FILTER (lang(?person) = ""en"")
}
```",5,11,6,3,3,3,3,71,0,0,1,0,0.0,0
926,48,val,"Give me the father of the father of the spouse of Neşerek Kadın and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?grandfather ?royaltyChild
WHERE {
  ?spouse a dbpedia:Person;
    dbpedia:sibling ?sibling .
  ?sibling a dbpedia:Person;
    dbpedia:parent ?parentOfSpouse .
  ?parentOfSpouse a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:monarch ?mustafaIII .
  ?child rdfs:label ""royalty child"" .
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
933,54,val,Give me the reference to the birth name of the professional in Musician and band of The Ramong Sound and band of the band of Alan Warner (musician).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v1 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"SELECT ?birthName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:bandMemberOf dbpedia:The Ramong Sound .
  ?person dbpedia:associatedWith dbpedia:Alan_Warner .
  ?person foaf:name ?birthName .
}",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
329,22,val,"Give me the entity in the region, that is a country, of Western European Time and birthplace of the author of The Tailor and Ansty.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
SELECT ?birthPlace ?country
WHERE {
  ?person a dbpedia:Person;
    dbpedia:author ""Rudyard Kipling"";
    dbpedia:birthPlace ?birthPlace .
  ?birthPlace a geo:Place .
  ?birthPlace geo:timeZone ""Europe/London"" . # Western European Time (WET)
  ?birthPlace rdfs:label ?birthLabel .
  ?country a dbpedia:Country;
    dbpedia:name ?name .
  ?birthLabel rdfs:label ?birthLabel .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
136,7,val,Give me the landmark at elevation of 5 and region coded as the area code of Levenhagen.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Levenhagen> <http://dbpedia.org/ontology/areaCode> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ""5""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/areaCode> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?landmark WHERE {
  ?landmark a dbpedia:Landmark;
    dbpedia:heightInMetres 5 .
  ?landmark rdfs:label ?name .
  ?landmark dbpedia:areaCode ""Levenhagen"" .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
582,43,val,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and figure known as --10-19 and reference to Japan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?child a dbpedia:Person;
    dbpedia:nickname ""--10-19"";
    dbpedia:father dbpedia:Kazuaki_Nagasawa .
  SOME ?parent (a dbpedia:Athlete; dbpedia:role dbpedia:SoccerManager) .
  SOME ?parent (a dbpedia:Athlete; dbpedia:role dbpedia:SportsManager)
}
```

This SPARQL query will:
- Select the child of Kazuaki Nagasawa with the nickname --10-19.
- Ensure that the child has at least one parent who is an athlete and either a soccer manager or a sports manager.",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
933,48,val,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName1 ?organizationName1
WHERE {
  ?band dbpedia:hasArtist ?artist .
  ?artist rdfs:label ""The Ramong Sound""@en .
  
  ?musician a dbpedia:Musician;
    dbpedia:band ?bandName1 .
  ?musician rdfs:label ""Alan Warner""@en .

  ?band a dbpedia:Band ;
    dbpedia:hasMember ?musician .
  
  OPTIONAL { ?organization a dbpedia:Organization; rdfs:label ?organizationName1 }
}
```",5,10,6,3,2,3,3,71,0,0,4,0,0.0,0
495,16,val,Give me the father of the child of Princess Charlotte of Saxe-Hildburghausen and child of the father of William I of Württemberg.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_of_child
WHERE {
  ?princess a dbpedia:Person;
    dbpedia:spouse [ dbpedia:hasChild ?child ] .
  ?child a dbpedia:Person;
    dbpedia:name ""Frederick II of Württemberg"" .
  ?spouse a dbpedia:Person;
    dbpedia:name ""William I of Württemberg"" .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
273,15,val,Give me the spouse of the child of the child of Edoardo Agnelli (1831-1871) and parent of Gianni Agnelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gianni_Agnelli> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?grandchild a dbpedia:Person;
    dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person;
    dbpedia:name ""Giovanni Agnelli"";
    dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:name ""Gianni Agnelli"" .
  ?child a dbpedia:Person;
    dbpedia:sibling ?sibling .
  ?sibling a dbpedia:Person;
    dbpedia:name ?spouse .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
465,48,val,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor1 ?successor2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:child ?child1 .
  ?child1 a dbpedia:Royalty; 
    dbpedia:succeededBy ?successor1 .

  ?person2 a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Monarch;
    dbpedia:hasChild ?child2 .
  ?child2 a dbpedia:Royalty; 
    dbpedia:succeededBy ?successor2 .
}
```

This SPARQL query will find Claude of France's successor and Alfonso d'Este's successor.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
365,16,val,"Give me the spouse of the native, that is a politician, of Poltava Governorate and person born as the birth name of Symon Petliura.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?wife
WHERE {
  ?petliura a dbpedia:Person;
    dbpedia:birthPlace ""Poltava Governorate"";
    dbpedia:deathPlace ?deathPlace .
  ?petliura foaf:name ""Symon Petliura"" .
  ?politician a dbpedia:Person;
    dbpedia:birthPlace ""Poltava Governorate"";
    dbpedia:role dbpedia:Governor .
  ?politician foaf:spouse ?wife .
  ?wife a foaf:Person .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
917,54,val,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of the father of the spouse, that is a royalty, of Leleiohoku I and child of Kekūanāoʻa.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/ontology/parent> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Honolulu, Hawaii"";
    dbpedia:father dbpedia:John_Young ;
    dbpedia:spouse dbpedia:Kalakua_Kaheiheimālie .
  ?person a dbpedia:Royalty .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
645,43,val,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in Battle of Jarama and leader of Ministry of the Army (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?militaryForce WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""India"";
    dbpedia:deathPlace ""India"";
    dbpedia:role ""Minister of Education in the interim government"";
    dbpedia:activeYears ""1946"".
    OPTIONAL { 
      ?person rdfs:seeAlso <http://dbpedia.org/resource/AK_Abdul_Momen> .
    }
  FILTER (lang(?person) = ""en"") 
}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
382,16,val,"Give me the landmark at elevation of the award of Harry Combes and birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?v2 . <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?landmark
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:SoccerManager; 
    dbpedia:managedTeam dbpedia:Bonner_S.C..
  ?person a dbpedia:Athlete; 
    dbpedia:participatedInSport soccer.
  ?person a dbpedia:SportsManager; 
    dbpedia:managedOrganization dbpedia:Bonner_S.C..
  FILTER (xsd:string(?birthPlace) AND xsd:string(?landmark))
}",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
445,48,val,"Give me the entity in the award of George H. Cameron and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?awardName ?residenceCountry
WHERE {
  ?award dbpedia:namedAfter ""George H. Cameron"" .
  ?award a dbpedia:Award .
  ?athlete a dbpedia:Athlete .
  ?athlete dbpedia:residesIn ?residenceCountry .
  ?athlete rdfs:member [ dbpedia:partOf dbpedia:GreatBritain ] .
}
```",5,7,6,3,2,3,3,71,0,0,102,0,0.0,0
865,42,val,"Give me the father of the child of Abu Ahmad Abdul Hafiz and father of AK Abdul Momen and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find the child of Abu Ahmad Abdul Hafiz
SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?parent dbpedia:name ""Abu Ahmad Abdul Hafiz"" .
}

# Step 2: Determine the father of the child found in Step 1
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?father WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ?name .
  ?parent rdf:type dbpedia:PersonType ;
    dbpedia:birthDate ""before 1920""^^xsd:date ; # Assuming birth date before 1920 for simplicity
  ?name ""Abu Ahmad Abdul Hafiz"" .
  FILTER (str(?child) = ""AK Abdul Momen"") . # Ensure the child is AK Abdul Momen
}

# Step 3: Identify the country of residence of Ram Jaipal Singh Yadav
SELECT ?country WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person dbpedia:name ""Ram Jaipal Singh Yadav"" .
  ?birthPlace rdf:type dbpedia:ResidenceType .
  ?deathPlace rdf:type dbpedia:ResidenceType .
  FILTER (str(?birthPlace) = ""India"") . # Assuming India as the residence of Ram Jaipal Singh Yadav
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
216,46,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/coach> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?playerCoach
WHERE {
  ?playerCoach a dbpedia:Person;
    dbpedia:soccerPlayer ;
    dbpedia:sportsManager ;
    dbpedia:soccerManager .
  ?playerCoach dbpedia:representCountry ""Bosnia and Herzegovina"" .
  ?playerCoach dbpedia:coachTeam dbpedia:Croatia U21 .
}
```",5,10,6,3,2,3,3,71,0,0,3,0,0.0,0
47,41,val,Give me the office of the awardee of Banga Bhushan and office of the administration of Jagdeep Dhankhar and office of Ajoy Mukherjee.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office1 ?office2 ?office3
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:awardedWith dbpedia:Banga_Bhusan ;
    dbpedia:office ?office1 .
  ?person2 a dbpedia:Person;
    dbpedia:officeHolderOfOffice dbpedia:Chief_Minister_of_Chhattisgarh ;
    rdfs:label ""Jagdeep Dhankhar""@en .
  ?person3 a dbpedia:Person;
    dbpedia:officeHolderOfOffice dbpedia:Chief_Minister_of_West_Bengal ;
    rdfs:label ""Ajoy Mukherjee""@en .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
417,47,val,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the father of the leader, that is a royalty, of Colony of Greenland.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:father ChristianIX_of_Denmark .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent ;
    dbpedia:children [ ?childSpouse a dbpedia:Person; dbpedia:sibling ?child ] .
  ?childSpouse a dbpedia:Person;
    dbpedia:spouse ?spouse .
  FILTER ( ?child = <FrederickVIII_of_Denmark> )
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
715,41,val,"Give me the commander in the force of Francisco Largo Caballero and commander in the force, that is a military conflict, of Abd el-Krim and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# For Francisco Largo Caballero (assuming he was a high-ranking military figure in the Spanish Republic and Civil War)
SELECT ?commander_largo WHERE {
  ?person a dbpedia:Person;
    dbpedia:rank ""Commander"" ;
    dbpedia:serviceMemberOf dbpedia:Spanish_Republic_Army .
}

# For Abd el-Krim (leader of Rifian resistance against Spanish forces)
SELECT ?commander_krim WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Abd el-Krim"";
    dbpedia:role ""Leader of Rifian resistance"" .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
582,42,val,Give me the reference to the residence of Hirotaka Sugawara and player in Kazuaki Nagasawa and figure known as the nickname of Japan national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?sugawara_residence ?nickname
WHERE {
  ?hirotaka_sugawara a dbpedia:Person;
    dbpedia:residence ?sugawara_residence .
  ?japan_national_football_team a dbpedia:Team ;
    dbpedia:nickname ?nickname .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
47,55,val,Give me the office of the awardee of Banga Bhushan and office of the administration of Jagdeep Dhankhar and office of the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v5 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Banga Bhushan Awardee (Chief Minister of West Bengal)
SELECT ?birthPlace ?deathPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardee dbpedia:Banga_Bhusan_Award ;
    dbpedia:office dbpedia:Chief_Minister_of_West_Bengal .
}

# Jagdeep Dhankhar Awardee (Governor of Rajasthan)
SELECT ?birthPlace ?deathPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardee dbpedia:Jagdeep_Dhankhar ;
    dbpedia:office dbpedia:Governor_of_Rajasthan .
}

# Padma Vibhushan Awardee (Distinguished Citizen of India)
SELECT ?birthPlace ?deathPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardee dbpedia:Padma_Vibhushan ;
    # Typically, the office would be their title at the time of award
    dbpedia:office ?office .
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
47,44,val,Give me the office of the awardee of Padma Vibhushan and office of the awardee of Banga Bhushan and office of Suvendu Adhikari.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v4 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office1 ?office2 ?office3
WHERE {
  ?person1 a dbpedia:Person; dbpedia:awardedWith dbpedia:PadaVibhushan .
  ?person1 dbpedia:office ?office1 .
  ?person2 a dbpedia:Person; dbpedia:awardedWith dbpedia:BangaBhushan .
  ?person2 dbpedia:office ?office2 .
  ?person3 a dbpedia:Person; foaf:name ""Suvendu Adhikari"" .
  ?person3 dbpedia:office ?office3 .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
417,50,val,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of the father of the leader, that is a royalty, of Colony of Greenland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childName ?royaltyTitle
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father ChristianRasmussen .
  ?grandParent a dbpedia:Person;
    dbpedia:son ?person ;
    dbpedia:title ""Grand Duke of Mecklenburg-Schwerin"" .
  ?child a dbpedia:Person;
    dbpedia:parent ?person ;
    dbpedia:royalty True .
  ?child rdfs:label ?childName .
  ?child dbpedia:birthDate ?date .
  ?child dbpedia:deathDate ?deathDate .
  FILTER (lang(?childName) = ""en"")  # Assuming we are looking for English names
}
```

This SPARQL query looks for:
- A person (`?person`) who is the son of Christian Rasmussen (the father of Knud Rasmussen).
- This person's son (`?child`), who is a royalty and has an English name.

The `FILTER (lang(?childName) = ""en"")` clause ensures we are looking for an English name, which is reasonable given the context of the question.",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
83,15,val,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA and party of Alceu Collares.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. <http://dbpedia.org/resource/Alceu_Collares> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v1 <http://dbpedia.org/property/leaderParty> ?result . },{sparql_query},4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
933,42,val,"Give me the reference to Alan Warner and band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of the band of Alan Warner (musician).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Alan Warner""@en .
  ?person dbpedia:genre ""Rock music""@en .
  ?band a dbpedia:Band ;
    dbpedia:leader ?person ;
    rdfs:label ?bandName .
}",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
791,43,val,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and father of Emperor Go-Toba and spouse of Taira no Tokuko.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?predecessor WHERE {
  ?person a dbpedia:Person;
    dbpedia:father dbpedia:Emperor_Go-Shirakawa ;
    dbpedia:spouse dbpedia:Taira_no_Tokuko ;
    dbpedia:officeHolder true .
  ?person rdfs:precedesorOf ?predecessor .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
865,54,val,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of Shahla Khatun and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify Syeda Shahar Banu's spouse
SELECT ?spouse WHERE {
  dbpedia:Syeda_Shar_Banu a dbpedia:Person ;
    dbpedia:sibling [ dbpedia:hasSister dbpedia:Shahla_Khatun ] .
}

# Step 2: Determine the children of the identified spouse
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?child WHERE {
  ?spouse a dbpedia:Person ;
    dbpedia:hasChild ?child .
  ?child a dbpedia:Person;
    rdfs:label ""Shahla Khatun""@en .
}

# Step 3: Check if the identified child is a politician
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?child WHERE {
  ?child a dbpedia:Person;
    dbpedia:isPolitician true .
}

# Step 4: Determine the native country of Ram Jaipal Singh Yadav
SELECT ?country WHERE {
  dbpedia:Ram_Jaipal_Singh_Yadav a dbpedia:Person ;
    dbpedia:nativeCountry ?country .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
987,42,val,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and entity in the region, that is a country, of Central European Time and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?country
WHERE {
  ?band a dbpedia:Band;
    dbpedia:artist ?Šako_Polumenta .
  ?band a dbpedia:Band;
    dbpedia:artist ?Moamer_Kasumović .
  ?band dbpedia:basedPlace ?country .
  ?country rdfs:label ""Central European Time (CET)"" .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
573,47,val,"Give me the person decedent at the administration, that is a region, of Charlie Baker and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?decedentAdmin ?decedentResidence
WHERE {
  ?charlie_baker a dbpedia:Person;
    dbpedia:name ""Charlie Baker"";
    dbpedia:birthDate ""1963-03-14"";
    dbpedia:office dbpedia:Governor_of_Massachusetts .
  ?charlie_baker dbpedia:deathDate ?death_date .
  ?decedentAdmin a dbpedia:Region;
    dbpedia:name ?name_of_administration .
  ?decedentResidence a dbpedia:Settlement;
    dbpedia:name ?name_of_residence .
  ?decedentAdmin dbpedia:containsElement ?charlie_baker .
  ?decedentResidence dbpedia:residenceOf ?charlie_baker
}
```",5,8,6,3,2,3,3,71,0,0,400,0,0.0,0
554,17,val,"Give me the leader of Portuguese São Tomé and Príncipe and leader of the birth place of the band, that is an artist, of Rita Redshoes.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> ?result . <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Portuguese_São_Tomé_and_Príncipe> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?leaderName ?birthPlaceLeader
WHERE {
  ?band a dbpedia:Band;
    dbpedia:genre ""Rock"" .
  ?person a dbpedia:Person;
    dbpedia:name ?leaderName;
    dbpedia:role ""Leader of the band ?band"";
    dbpedia:birthPlace ?birthPlace .
  ?birthPlace a dbpedia:Location;
    dbpedia:name ?birthPlaceName .
  ?birthPlaceName match ?birthPlace where ?birthPlace geo:coordinates ""Latitude value"" ""Longitude value""
}
```

This SPARQL query will:
- Identify bands and their genres.
- Find people associated with those bands as leaders.
- Determine the birth place of those people.
- Extract the name of the leader and the name of the birth place.",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
955,15,val,"Give me the band of the writer of the work, that is a work and an album and a musical work, of Matt Freeman and band of Johnny Rioux.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Rioux> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?person1 a dbpedia:Musician;
    dbpedia:band ?bandName .
  ?person2 a dbpedia:Musician;
    dbpedia:band ?bandName .
  ?person1 ns:memberOF ?group .
  ?person2 ns:memberOF ?group .
  ?group rdfs:label ""NOFX"" .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
987,48,val,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?band a dbo:MusicArtist ;
         dbpedia:artistName ""Dado Polumenta"" .
  ?band dbpedia:country ""Indonesia"" .
  ?person a dbpedia:Person;
         dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
         dbpedia:deathPlace ?deathPlace .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
965,55,val,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent
WHERE {
  ?child a dbpedia:Person;
    dbpedia:birthPlace <http://dbpedia.org/property/nationality> ""United Kingdom"";
    dbpedia:spouse <http://dbpedia.org/property/sibling> ?spouse;
    dbpedia:parent ?parent .
  ?spouse a dbpedia:Person;
    dbpedia:partner <http://dbpedia.org/property/spouse> ?parent .
  ?child rdfs:label ""Prince George of Battenberg"" .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
129,19,val,Give me the professional in the mayor of 1999 West Dunbartonshire Council election and associated musical artist of Saba (rapper) and associated musical artist of EarthGang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?mayor ?saba_artist ?earthgang_artist
WHERE {
  ?mayor a dbpedia:OfficeHolder;
    dbpedia:office dbpedia:MayorOfWestDunbartonshire_1999 .
  ?mayor dbpedia:associatedWith dbpedia:Person;
    dbpedia:associatedWith ?saba_artist .
  ?mayor dbpedia:associatedWith dbpedia:Person;
    dbpedia:associatedWith ?earthgang_artist .
  ?saba_artist rdfs:label ""Saba (rapper)"" .
  ?earthgang_artist rdfs:label ""EarthGang"" .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
98,22,val,Give me the birth place of the person born as Paolo Elito M. Ballesteros IV and region of the time zone of Lopez Jaena.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Paolo Elito M. Ballesteros IV""@en .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
  FILTER (xsd:date(?person_birthDate) BETWEEN ""1858-01-01"" AND ""1947-12-31"") .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
926,51,val,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of the child of Ahmed III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_of_Ahmed_III ?successor_of_child
WHERE {
  ?parent a dbpedia:Monarch; dbpedia:name ""Mustafa III"".
  ?grandparent a dbpedia:Monarch; dbpedia:name ""Ahmed III"".
  ?parent dbpedia:hasChild ?child_of_Ahmed_III .
  ?child_of_Ahmed_III a dbpedia:Person;
    dbpedia:parent ?parent .
  ?child_of_Ahmed_III a dbpedia:Royalty .
  ?child_of_Ahmed_III dbpedia:hasChild ?successor_of_child .
  ?successor_of_child a dbpedia:Person;
    dbpedia:parent ?child_of_Ahmed_III .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
892,44,val,"Give me the landmark at elevation of the award of Anna Ishii and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and entity in Italy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?landmark ?administrationEntity
WHERE {
  ?award dbpedia:awardedFor ""Acting"" .
  ?award rdfs:label ""Premio Comeback"" . # Assuming this is the award given to Anna Ishii

  ?person a dbpedia:Person;
    foaf:name ""Anna Ishii""@en;
    dbpedia:birthPlace ""Roma, Italy"" .
  
  ?administrationEntity a dbpedia:PoliticalParty ;
                           dbpedia:leader ?partyLeader ;
                           rdfs:label ""Democratic Party (Italy)""@en .

  ?person dbpprop:isMemberOf ?administrationEntity .
  
  ?landmark a dbpedia:Landmark;
           geo:elevation ""0.0""^^xsd:float . # Assuming the elevation is 0 for simplicity
}
```",5,9,6,2,3,3,3,71,0,0,2,0,0.0,0
865,53,val,"Give me the father of the child of Abu Ahmad Abdul Hafiz and father of AK Abdul Momen and native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?deathPlace ns:locatedIn dbpedia:Patna .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
965,42,val,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Louis IV, Grand Duke of Hesse""@en;
    dbpedia:birthDate ""1850-08-18""^^xsd:date.
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
433,44,val,"Give me the associated musical artist of Paul Chambers and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and professional in the profession of Bob Marley.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?associated_artist_2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:musicalArtist ?musical_artist_1 .
  ?person1 dbpedia:associatedMusicalArtist ?associated_artist_1 .
  ?person2 a dbpedia:Person;
    dbpedia:musicalArtist ?musical_artist_2 .
  ?person2 dbpedia:associatedMusicalArtist ?associated_artist_2 .
  ?person1 ns:involvesProfession dbpedia:ReggaeMusic .
  ?person2 ns:involvesProfession dbpedia:ReggaeMusic .
  ?associated_artist_1 rdfs:label ""Scott LaFaro"" .
  ?associated_artist_2 rdfs:label ?resultLabel .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
987,41,val,"Give me the birth place of the actor of All for Free and entity in Montenegro and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v4 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace1 ?deathPlace1
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace1 .
  ?band a dbpedia:Band; 
    dbpedia:artist ?bandArtist ;
    dbpedia:musicalArtist ?musicalArtist .
  ?bandArtist ns:name ""Štefan Štamulović""@en .
  ?band a dbpedia:MusicGroup;
    dbpedia:bandName ""Šako Polumenta"" .
  ?birthPlace1 ns:isPartOfLocation ?location .
  ?location a dbpedia:CountryRegion; 
    dbpedia:name ""Montenegro""@en .
}",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
445,54,val,"Give me the entity in the residence, that is a country, of Anna Sharkey and entity in United Kingdom and death place of the awardee of the establishment of 1820-03-10.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . }","SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  
  OPTIONAL { 
    ?person dbpedia:nationality [ owl:sameAs <http://dbpedia.org/ontology/Nationality#United_Kingdom> ] }
    
  FILTER ( ?person != <> )  # Avoid the default node
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
892,55,val,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of the award of Anna Ishii.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?profession ?administrationEntity
WHERE {
  ?person a dbpedia:Person;
    dbpedia:occupation ?profession .
  ?person rdfs:label ?name .
  FILTER (lang(?name) = ""it"" )  # Ensure the person is Italian
  ?administrationEntity a dbpedia:PoliticalAdminArea ;
    dbpedia:politicalParty dbpedia:Democratic_Party_of_Italy ;
    rdfs:label ?partyLabel .
  ?administrationEntity rdfs:label ?adminRegion .
  ?administrationEntity ns:hasLocation ?location .
  ?location a dbpedia:GeographicalLocation;
    dbpedia:isPartOf ?region .
  ?location rdfs:label ?locationName .
  ?locationName = ""Anna Ishii Award"" .  # Specific landmark
}
```",6,10,7,2,3,3,3,71,0,0,2,0,0.0,0
41,22,val,"Give me the party of the person born as David Declan Costello and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find David Declan Costello's party affiliation
SELECT ?party WHERE {
  ?person dbpprop:birthName ""David Declan Costello"" .
  ?person rdfs:memberOf ?party .
}

# Step 2: Find the winning party and their leader in the 2005 Castlereagh Borough Council election
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?partyLabel ?leader WHERE {
  ?election dbo:electedOffice ""Castlereagh Borough Council"" .
  ?election dbo:year ""2005"" .
  ?candidate dbo:officeHolder ?office .
  ?office a dbo:ElectionResult .
  ?office dbo:winningParty ?party .
  ?party rdfs:label ?partyLabel .
  OPTIONAL { ?candidate dbpprop:birthName ""David Declan Costello"" }
  OPTIONAL { ?candidate rdfs:memberOf ?party }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
98,23,val,"Give me the region of the time zone of Lopez Jaena and entity in the region, that is a country, of Philippine Standard Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?country WHERE {
  ?timeZone dbpedia:standardTime ""Philippine Standard Time"" .
  ?timeZone rdfs:label ""PST"" .
  ?country a dbpedia:Country .
  ?timeZone dbpedia:isUsedInRegion ?region .
  ?region a dbpedia:GeographicalArea .
}",4,5,5,2,2,2,3,28,0,0,1743,0,0.0,0
170,20,val,Give me the domain of Mayor and entity in Russia and birth place of the awardee of People's Artist of Russia.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?mayorClass ?peopleArtistEntity ?birthPlace
WHERE {
  ?mayorClass rdfs:label 'Mayor' .
  ?peopleArtistEntity a dbpedia:Person;
    dbpedia:awardedWith dbpedia:P000001 (People's Artist of Russia) .
  ?peopleArtistEntity dbpedia:birthPlace ?birthPlace .
}",4,4,5,2,3,2,3,28,0,0,3,0,0.0,0
645,51,val,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?militaryForce
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Barcelona, Spain"";
    dbpedia:deathPlace ""Madrid, Spain""; # Francisco Largo Caballero's birthplace and death place
    dbpedia:role ""Prime Minister of Spain (1931–1933); Leader of the Spanish Republican Left; Member of the Executive Committee of the Communist Party of Spain"";
    dbpedia:conflict dbpedia:Spanish_Civil_War .
  ?militaryForce a dbpedia:Military_force .
}",5,10,6,3,2,3,3,71,0,0,2,0,0.0,0
365,17,val,"Give me the person born as Symon Vasylyovych Petliura and spouse of the native, that is a politician, of the reference to Полтавская губерния.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/property/birthName> ""Symon Vasylyovych Petliura""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person foaf:spouse [ a foaf:Person; dbpedia:name ""politician from Полтавская губерния"" ] .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
274,20,val,Give me the professional in the designer of Tetris Classic and band member of Dizzy Gillespie and associated musical artist of Cecil Taylor.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",4,4,5,2,3,2,3,28,0,100980,1,0.0,0.0,0
216,47,val,"Give me the player in the coach of Croatia national under-21 football team and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/coach> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?coach_name 
WHERE {
  ?player dbpedia:hasMember ?club .
  ?club a dbpedia:SportClub ;
         dbpedia:type ""Football club"" .
  ?player dbpedia:memberOf ?team .
  ?team a dbpedia:SportsTeam ;
         dbpedia:sport ""Football"" ;
         dbpedia:country ""Croatia"" ;
         dbpedia:coach ?coach_name .
  ?coach_name a dbpedia:Person;
             dbpedia:role ""Coach"" .
}
```",5,11,6,3,2,3,3,71,0,0,3,0,0.0,0
933,55,val,"Give me the reference to the birth name of Alan Warner (musician) and band of the band of Alan Warner (musician) and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthName ?bands
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ?birthName .
  ?person dbpedia:bandMember [ a dbpedia:Band ; dbpedia:name ?bandName ] .
  FILTER (lang(?birthName) = ""en"")  # Assuming the birth name is in English
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
124,48,val,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?militaryForce WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Valleyfield House, Cheshire"";
    dbpedia:deathPlace ""Ascot, Berkshire"";
    dbpedia:conflict ""Gallipoli Campaign"";
    dbo:militaryUnit ?militaryUnit .
  ?militaryUnit a dbo:MilitaryUnit;
    rdfs:label ""A Battery, Royal Australian Artillery""@en;
    dbpedia:country ""Australia""
}
```",5,12,6,3,2,3,3,71,0,0,9,0,0.0,0
170,19,val,Give me the domain of Mayor and entity in the work of International Energy Agency and birth place of Era Ziganshina.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?mayorRole ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:role ?mayorRole .
  ?person foaf:name ""AK Abdul Momen"" .
  ?person dbpedia:birthPlace ?birthPlace .
  FILTER (lang(?birthPlace) = ""en"")  # Assuming English language for birth place
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
465,51,val,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor 
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Ferdinand I, Holy Roman Emperor"" .
  ?child a dbpedia:Royalty;  
    dbpedia:succeededBy ?successor .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
267,16,val,"Give me the coach of the player, that is a soccer club, in Rasoul Khatibi and person born on the birth date of Dan Cathy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/coach> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?v3 . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?coach WHERE { ?player a dbpedia:SoccerPlayer; dbpedia:clubPerformer dbpedia:Persepolis_F.C. . ?player dbpedia:birthDate ?birthDate . FILTER (?birthDate = '1946-03-13') },4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
715,46,val,"Give me the commander in the force of Francisco Largo Caballero and commander in the force, that is a military conflict, of the native of Morocco.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . },"To extract this information from DBpedia using SPARQL, we would need to construct a query that looks for individuals associated with these roles in the context of the Anglo-Moroccan War. However, since DBpedia's data might not be fully populated with such specific details, we'll use general queries to find relevant individuals:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander1 ?commander2
WHERE {
  ?commander1 a dbpedia:Person;
    dbpedia:militaryRole dbpedia:MilitaryCommander ;
    dbpedia:conflict dbpedia:Anglo_Moroccan_War_1859 .
  ?commander2 a dbpedia:Person;
    dbpedia:militaryRole dbpedia:MilitaryCommander ;
    dbpedia:conflict dbpedia:Anglo_Moroccan_War_1859 .
}
```

This query looks for individuals (`?commander1` and `?commander2`) who have the role of Military Commander in the Anglo-Moroccan War 1859. It assumes that DBpedia has structured data linking individuals to specific conflicts and roles.",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
573,48,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/property/governor> ?v3 . },"Given the hypothetical scenario, the SPARQL query would look for a person associated with ""Exchequer Standards"" and then retrieve their parents assuming they are politicians and office holders:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?author a dbpedia:Person;
    dbpedia:birthDate ?birthDate .
  ?book dbpedia:author ?author .
  ?book rdfs:label ""Exchequer Standards"" .
  ?author dbpedia:polskiBiuroKierownictwa ?officeHolder .
  ?author a dbpedia:Politician .
  ?author dbpedia:parent ?parent
}
```

This query searches for a person who authored a book titled ""Exchequer Standards,"" checks if they are an office holder and politician, and then finds their parents.",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
508,16,val,"Give me the birthplace of the commander, that is Saudi, in Central Plains War and birthplace of the commander, that is a politician, in 1939–1940 Winter Offensive.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?commander a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?commander dbpedia:conflict ""Central Plains War"" .
  ?commander rdfs:label ""Saudi"" .
  OPTIONAL { 
    ?commander rdfs:label ""politician"" . 
  }
}

AND

PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?commander a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?commander dbpedia:conflict ""1939-1940 Winter Offensive"" .
  ?commander rdfs:label ""politician"" .
}",4,6,5,2,2,3,2,20,0,0,3,0,0.0,0
645,40,val,Give me the commander in the force of the commander in Siege of Madrid and military force of Spanish Civil War and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"To extract this information from DBpedia, we can use the following SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commanderName ?militaryForce ?ministryLeader
WHERE {
  ?siegeCommander a dbpedia:Siege;
    dbpedia:location ""Madrid"";
    dbpedia:startYear 1936 .
  ?militaryForce a dbpedia:MilitaryForce;
    dbpedia:conflict ""Spanish Civil War"" .
  ?commanderInSiege rdfs:label ?commanderName .
  ?militaryForce leader ?commanderName .
  ?ministryLeader a dbpedia:MinistryOfTheArmy;
    dbpedia:leader ?ministryLeaderName .
}
```

This query will:
- Identify the commander of the Siege of Madrid in 1936.
- Find the military force associated with the Spanish Civil War.
- Link the commander to the Ministry of the Army leader.",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
122,7,val,Give me the band of Gift of Gab (rapper) and band member of the band of Gift of Gab (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName ?members
WHERE {
  ?artist a dbpedia:Artist;
    rdfs:label ""Gift of Gab""@en .
  ?artist dbpedia:genre ""Hip hop music""@en .
  ?band a dbpedia:Band;
    dbpedia:hasMember ?member .
  ?member a dbpedia:Musician;
    rdfs:label ?memberLabel@en .
  ?band rdfs:label ?bandName .
  ?artist dbpedia:associatedBand ?band .
}",3,3,4,2,2,2,2,9,0,0,3,0,0.0,0
18,21,val,"Give me the parent of Liza Huber and professional in  and alumnus of the figure known, that is an educational institution, as Saints.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . ?result <http://dbpedia.org/ontology/almaMater> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?actorName ?profession ?university
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ?birthdate .
  ?person rdfs:label ?actorName .
  ?person dbpedia:occupation ?profession .
  ?person dbpedia:alumniOf ?university .
  FILTER (?person = ""Liza Huber"") .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
917,46,val,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom and child of the father of Keʻelikōlani.",SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v2 . },{sparql_query},5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
826,42,val,"Give me the spouse of the child of Johann Heinrich Appel and predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify Johann Heinrich Appel's children
SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?parent dba:name ""Johann Heinrich Appel""
}

# Step 2: Determine the spouse(s) of those children
SELECT DISTINCT ?spouse ?child WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasSpouse ?spouse .
  FILTER( EXISTS { ?child dbpedia:parent ?parent } )
  ?parent a dbpedia:Person;
    dbpedia:name ""Johann Heinrich Appel""
}

# Step 3: Identify the parent(s) of Prince Friedrich of Hesse and by Rhine
SELECT ?parent WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?child dbpedia:name ""Prince Friedrich of Hesse and by Rhine""
}

# Step 4: Find the predecessor(s) of those parent(s)
SELECT DISTINCT ?predecessor ?parent WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasPredecessor ?predecessor .
  ?parent in (?parent_from_step_3)
}

# Step 5: Determine the successor of Louis II, Grand Duke of Hesse
SELECT ?successor WHERE {
  ?grand_duke a dbpedia:Person;
    dbpedia:name ""Louis II, Grand Duke of Hesse"" .
  ?grand_duke dbpedia:hasSuccessor ?successor
}

# Combine all results to get the final answer
UNION {
  SELECT ?birthPlace ?deathPlace FROM { 
    ?child a dbpedia:Person; dbpedia:birthPlace ?birthPlace }
    WHERE { 
      ?child dbpedia:hasSpouse ?spouse 
    }
  } 

  SELECT ?birthPlace ?deathPlace FROM { 
    ?parent a dbpedia:Person; dbpedia:birthPlace ?birthPlace }
    WHERE {
      ?parent in (?parent_from_step_3)
      ?parent dbpedia:deathPlace ?deathPlace
    }
  }

```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
892,46,val,Give me the landmark at elevation of the award of Anna Ishii and entity in the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v2 <http://dbpedia.org/property/occupation> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardName ?elevation ?personProfession
WHERE {
  ?award dbpedia:awardedTo ?recipient .
  ?recipient foaf:name ""Anna Ishii"" .
  ?award rdfs:label ?awardName .
  ?recipient dbpedia:birthPlace ""Philippines"" .
  ?recipient dbpedia:deathPlace ""Philippines"" .
  
  ?person a dbpedia:Person;
    dbpedia:profession ?personProfession .
  ?person foaf:name ""Enrico Crolla"" .
  
  ?award rdfs:label ?awardName .
  FILTER (lang(?awardName) = ""en"") .
  ?award dbpedia:awardedFor dbpedia:SocialCause ""Indian independence movement"" .
}
```",5,5,6,3,2,3,3,71,0,0,11,0,0.0,0
124,54,val,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of Battle of Atbara and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander ?awardee
WHERE {
  ?battle a dbpedia:Event;
    dbpedia:conflict ""Anglo-Egyptian War 1898"";
    dbpedia:participatingMilitaryForts [
      dbo:hasFortification ?fortification
    ].

  ?battery a dbpedia:MilitaryUnit;
    dbpedia:unitName ""A Field Battery, Royal Australian Artillery"";
    dbpedia:participatedIn ?battle .

  ?awardee a dbpedia:Person;
    dbpedia:awarded Medal ""British South Africa Company Medal"";
    dbo:militaryConflict ""Second Boer War 1899-1902"".

  ?commander a dbpedia:Person;
    dbpedia:rank ?rank;
    dbpedia:participatedIn ?battle .
}

```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
124,41,val,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of Battle of Atbara and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }",{sparql_query},5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
773,43,val,"Give me the spouse of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious and parent of Charles the Fat.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouseOfLouis ?parentOfCharles
WHERE {
  ?person1 a dbpedia:Person; dbpedia:name ""Louis II"" .
  ?person1 dbpedia:spouse ?spouseOfLouis .
  ?child a dbpedia:Person; dbpedia:name ""Charles the Fat"" .
  ?child dbpedia:father ?parentOfCharles .
  ?spouseOfLouis rdfs:label ?spouseName .
  ?parentOfCharles rdfs:label ?parentName .
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
888,17,val,Give me the awardee of the award of the commander in 2022 Ukrainian eastern counteroffensive and commander in Southern Ukraine campaign.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Southern_Ukraine_campaign> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee
WHERE {
  ?event a dbpedia:Event;
    dbpedia:startDate ""2022-01-01""^^xsd:date; # Assuming the start date of the Eastern Counteroffensive
    dbpedia:endDate ""2022-12-31""^^xsd:date; # Assuming the end date of the Eastern Counteroffensive
  ?awardee a dbpedia:Person;
    dbpedia:award dbpedia:AwardType ""Commander""; # The award type for Commander
    dbpedia:role dbpedia:Role ""MilitaryCommander""; # Role of the Commander in the military context
    dbpedia:recipientOf dbpedia:Event ?event. # Awardee is associated with the event
  }
  FILTER (lang(?awardee) = ""uk"") # Ensuring the awardee is from Ukraine
}",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
839,52,val,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of Matthias Röhr and band of the member of Böhse Onkelz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Musician;
    dbpedia:band ?bandName .
  FILTER (STRSTARTS (?birthPlace, ""Kevin Russell"")).
  FILTER (STRSTARTS (?birthPlace, ""Matthias Röhr"")).
  FILTER (STRSTARTS (?birthPlace, ""Böhse Onkelz""))
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
839,41,val,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of Böhse Onkelz and band of Matthias Röhr.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ?birthDate .
  ?person dbpedia:memberOf [ dbpedia:band ?bandName ] .
  FILTER (STRSTARTS (?birthDate, ""1979-""))  # Assuming Kevin Richard Russell was born in 1979
  UNION
  ?person a dbpedia:Person;
    dbpedia:birthDate ?birthDate .
  ?person dbpedia:memberOf [ dbpedia:band ?bandName ] .
  FILTER (STRSTARTS (?birthDate, ""1965-""))  # Assuming Matthias Röhr was born in 1965
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
976,44,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the person born as Mehmet Naci Bostancı and office of Mustafa Şentop.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query to find the birthplace and death place of AK Abdul Momen in the context of the British Raj
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}

# Query to find the office of Mehmet Naci Bostancı and Mustafa Şentop
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?office WHERE {
  ?politician a dbo:OfficeHolder;
    dbpedia:birthPlace ?birthPlace .
  ?politician a dbo:Politician;
    dbo:office ?office .
  FILTER (lang(?politician) = ""turkish"")  # Ensure the politician is Turkish
  BIND (xsd:string(?office) AS ?office_name)
}

```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
955,16,val,"Give me the band of the band member, that is a musical artist and an artist, of Street Dogs and band of the writer of Don't Forget Your Roots (album).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandMember ?bandName
WHERE {
  ?bandMember a dbpedia:Musician;
    dbpedia:genre dbpedia:Rock music ;
    dbpedia:band dbpedia:Street Dogs .
  ?bandMember rdfs:label ?bandMemberLabel .
  ?album a dbpedia:Album;
    dbpedia:title ""Don't Forget Your Roots"" .
  ?author a dbpedia:Person;
    dbpedia:givenName ""AK"";
    dbpedia:birthDate ""xxxx-xx-xx"" ;
    dbpedia:role dbpedia:Musician .
  ?bandMember rdf:type ?artistType .
  ?author dbpedia:album ""Don't Forget Your Roots"" .
}
```

This query does the following:
- Selects band members of Street Dogs who are musicians and part of the band Street Dogs.
- Retrieves labels for these members (assumed to be their names).
- Identifies the author of ""Don't Forget Your Roots"".
- Links the artist type of the band member with the author of the album.",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
965,52,val,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of the spouse of the parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parentOfRoyalty
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace <>; # Placeholder for the birthplace of Prince Louis of Battenberg
    dbpedia:spouse ?spouse;
    dbpedia:child ?child;
    ?child a dbpedia:Royalty .
  ?child a dbpedia:Person;
    dbpedia:name ""George Mountbatten, 2nd Marquess of Milford Haven"" .
  ?person rdfs:father ?parentOfChild .
  ?parentOfChild a dbpedia:Person;
    dbpedia:spouse ?spouseParent ;
    dbpedia:child ?royaltyChild .
  ?royaltyChild a dbpedia:Royalty .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
917,43,val,"Give me the child of Kekūanāoʻa and parent of Albert Kamehameha and child of the father of the spouse, that is a royalty, of Leleiohoku I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify the spouse of Leleiohoku I
SELECT ?spouse WHERE {
  dbpedia:Leleiohoku_I a dbpedia:Monarch; dbpedia:spouse ?spouse .
}

# Step 2: Determine the father of this spouse
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?father WHERE {
  ?spouse a foaf:Person; foaf:father ?father .
}

# Step 3: Find children of Kekūanāoʻa who are parents of Albert Kamehameha
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  dbpedia:Albert_Kamehameha a dbpedia:Person;
    dbpedia:parent ?child .
  ?child a dbpedia:Person; dbpedia:parent Kekūanāoʻa .
}

# Step 4: Check if any of these children are also children of the spouse's father
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
UNION {
  SELECT ?child WHERE {
    ?child a foaf:Person; foaf:father ?father .
    FILTER (SUBSTR(?, 4) = ""Kekūanāoʻa"")  # Assuming Kekūanāoʻa's name follows a specific pattern
  }
  SELECT ?child WHERE {
    ?child a foaf:Person; foaf:parent ?spouse .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
715,40,val,"Give me the commander in Spanish Civil War and commander in the force, that is a military conflict, of the native of Morocco and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander_in_war ?commander_in_force
WHERE {
  ?person a dbpedia:Person;
    foaf:nationality dbpedia:Morocco .
  ?person rdfs:label ""AK Abdul Momen""@en .
  OPTIONAL { 
    ?person dbpedia:role dbpedia:Ministry_of_the_Air_Spain .
    ?person rdfs:label ""Commander in the Spanish Civil War""@en .
    ?person rdfs:label ""Commander of Moroccan forces""@en .
  }
}
```

This SPARQL query does the following:
- It filters for individuals (`?person`) who are from Morocco (`foaf:nationality dbpedia:Morocco`).
- It specifically looks for an individual named `AK Abdul Momen` (`?person rdfs:label ""AK Abdul Momen""@en`), who is labeled as being involved with the Ministry of the Air in Spain.
- It includes optional clauses to find labels that might indicate they were a commander during the Spanish Civil War and the commander of Moroccan forces.",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
102,17,val,"Give me the native of the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury and manager of Sheffield United W.F.C..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sheffield_United_W.F.C.> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?role
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Athlete; 
    dbpedia:managerOfSportsTeam dbpedia:Sheffield_United_W.F.C..
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
987,50,val,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?actorName ?birthPlace
WHERE {
  ?actor dbpedia:starredIn dbpedia:Sutjeska ;
            dbpedia:birthPlace ?birthPlace .
}
```",5,7,6,3,2,3,3,71,0,0,18,0,0.0,0
465,41,val,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of Renée of France and successor of the child of Alfonso I d'Este.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Ferdinand I, Holy Roman Emperor"" .
  ?child rdfs:label ""Philip II, Duke of Burgundy"" .
  ?child a dbpedia:Royalty .
  ?child dbpedia:spouse ?spouse .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
987,47,val,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?actorBirthPlace ?bandBirthPlace WHERE { ?actor a dbpedia:Person; dbpedia:role dbpedia:ActorInFilm ; dbpedia:filmMember dbpedia:Emir_Hadžihafizbegović . ?band a dbpedia:Band; rdfs:label ?bandLabel . ?band a dbpedia:MusicalArtist . ?actor dbpedia:birthPlace ?actorBirthPlace . ?band dbpedia:birthPlace ?bandBirthPlace },5,8,6,3,2,3,3,71,0,0,4,0,0.0,0
839,45,val,"Give me the band of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician and band of Peter Schorowsky.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}
```

This query will return the birthplace and death place of AK Abdul Momen, who was a notable figure during the British Raj. Since no direct information about AK Abdul Momen's birthplace or death place is provided in the question, the SPARQL query is constructed to extract such information from a hypothetical dataset that might contain these facts for historical figures associated with the British Raj period. The reasoning here is based on the structure and properties defined in the DBpedia ontology.",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
874,17,val,"Give me the band of Manfred Mann (musician) and band of the band member of the band, that is an organisation, of Mark Read (singer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Manfred_Mann_(musician)> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:groupMemberOf dbpedia:Band ;
    dbpedia:bandName ?bandName .
}",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
935,16,val,Give me the death place of the awardee of Sitara-i-Imtiaz and headquarter of the office of Sanaullah Khan Zehri.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/location> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen"" .
  ?person dbpedia:deathPlace ?deathPlace .
}",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
839,43,val,"Give me the band of Matthias Röhr and band of the member of the band, that is a band and a group, of Peter Schorowsky and band of Kevin Russell (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:isMemberOf dbpedia:Band ;
    dbpedia:name ?bandName .
  FILTER (regex(str(?birthPlace), ""Germany""))  # Assuming both Röhr and Schorowsky are from Germany
}",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
987,49,val,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/timeZone> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?country
WHERE {
  ?band a dbo:MusicBand ;
            dbpedia:artist ?artist .
  ?artist a dbpedia:Person;
            rdfs:label ""Šako Polumenta""@en .
  ?band dbpedia:location ?location .
  ?location a dbpprop:City ;
             rdfs:label ""Canicosa de la Sierra""@en .
  ?country a dbpedia:Country ;
            dbppprop:capital ?location .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
216,40,val,"Give me the player in Mario Ivanković and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and team of Ognjen Vukojević.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player ?coachClub
WHERE {
  ?player a dbpedia:Person;
    dbpedia:sport ?sport .
  ?player dbpedia:role ""Soccer player"" .
  ?team a dbpedia:SportTeam ;
    dbpedia:homeGround ?homeGround ;
    dbpedia:league ?league ;
    dbpedia:coach ?coach .
  ?team dbpedia:country ""Croatia"" .
  ?player dbpedia:memberOf ?team .
  ?coachClub a dbpedia:Organization;
    dbpedia:type ""Football club"" .
  ?coachClub dbpedia:name ?coachName .
  FILTER (regex(str(?coachName), ""Mario"")) .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
433,50,val,"Give me the professional in the profession of Bob Marley and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?artistName WHERE {
  ?bobMarley a dbpedia:Person;
    dbpedia:associatedMusicalArtist ?musicalArtist .
  ?musicalArtist a dbpedia:MusicArtist .
  ?musicalArtist rdfs:label ?artistName .
  ?artist a dbpedia:Artist; dbpedia:associatedArtisticWork ?work .
  ?work a dbpedia:MusicAlbum;
    dbpedia:performer ?artistName .
  ?artist rdfs:label ""Ornette Coleman"" .
}
```",5,9,6,3,2,3,3,71,0,0,44,0,0.0,0
267,17,val,Give me the person born on the birth date of the reference to Dan Cathy and coach of Iran national football team.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Iran_national_football_team> <http://dbpedia.org/ontology/coach> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?person
WHERE {
  ?person a dbo:Person;
    dbo:birthDate ?birthDate .
  ?person rdfs:label ?name .
  ?person dcterms:role ?role .
  ?role rdf:type dbo:FootballCoachRole .
  ?birthDate = ""1953-08-23""^^xsd:date
}",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
892,42,val,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of 58.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?administration WHERE {
  ?administration a dbpedia:Region ;
    dbpedia:hasAdminDistrict dbpedia:Province ;
    dbpedia:populationTotal ?populationTotal .
  ?administration rdfs:label ""Italian administrative region"" .
  ?administration dbpedia:politicalParty dbpedia:DemocraticPartyItaly .
  FILTER (xsd:int(?populationTotal) = 58)
}
```

This query looks for a DBpedia entity that:
- Is a `Region` with an admin district (`Province`) and has a total population of 58.
- Is labeled as an ""Italian administrative region"".
- Is associated with the Democratic Party (Italy).",5,9,6,2,3,3,3,71,0,0,2,0,0.0,0
926,46,val,Give me the successor of the child of Ahmed III and father of the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Assuming Ahmed III's child who had a son marrying Neşerek Kadın is identifiable
?child1 a dbpedia:Person;
    dbpedia:parent dbpedia:Sultan Ahmed III .
?grandson a dbpedia:Person;
    dbpedia:father ?child1 .
?spouse a dbpedia:Person; # Neşerek Kadın
    dbpedia:sibling ?grandson .

# Find the successor of the child (assuming it's the grandson in this hypothetical scenario)
?successor a dbpedia:Person;
    dbpedia:parent ?grandson .

SELECT ?birthPlace ?deathPlace
WHERE {
  ?child1 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?grandson a dbpedia:Person;
    dbpedia:father ?child1;
    dbpedia:deathPlace ?deathPlace . # Assuming we're interested in the death place for the successor
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
443,20,val,"Give me the birthplace of Carl Larsson and landmark at elevation of 28 and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?birthPlace1 ?elevationLandmark ?birthPlace2 ?artistName ?yearOfBirth
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace1 .
  ?person1 rdfs:label ?artistName .
  ?person1 dbpedia:deathDate ""1949-11-20""^^xsd:date .

  ?landmark a dbpedia:Landmark;
    dbpedia:heightInMetres ""28""^^xsd:integer .

  ?artist a dbpedia:Artist;
    dbpedia:birthDate ""1949-11-20""^^xsd:date .
  
  ?person2 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace2 .
  
  ?person1 rdf:type ?artistType .
  ?person2 rdf:type ?artistType .
}",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
216,41,val,"Give me the team of Ognjen Vukojević and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of Croatia national under-21 football team.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v4 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player ?coachRole ?team
WHERE {
  ?player a dbpedia:Person;
    dbpedia:sport ?sport .
  ?player dbpedia:roleInTeam ?team .
  ?team a dbpedia:SportsTeam ;
    dbpedia:sport ?sport ;
    dbpedia:name ""Bosnia and Herzegovina national under-18 football team"" .
  ?player2 a dbpedia:Person;
    dbpedia:sport ?sport ;
    dbpedia:roleInTeam ?team2 .
  ?team2 a dbpedia:SportsTeam ;
    dbpedia:sport ?sport ;
    dbpedia:name ""Croatia national under-21 football team"" .
  ?player2 dbpedia:coach ?coachRole .
  ?player rdfs:label ""Ognjen Vukojević""@en .
  ?player2 rdfs:label ""Ognjen Vukojević""@en .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
826,44,val,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v2 . }","SELECT ?predecessorParent ?successorChild
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?predecessorParent .
  ?person a dbpedia:Person;
    dbpedia:child ?successorChild .
  ?predecessorParent dbpedia:name ""Louis II, Duke of Hesse"" .
  ?successorChild a dbpedia:Royalty; # Assuming Louis III is considered royalty
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
456,55,val,"Give me the professional in the alter ego of The Shadow and band of the band, that is a musical artist, of Dean Brody and spouse of the actor of Pacific Drive.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"As the question involves fictional elements not present in DBpedia or other public knowledge bases, a SPARQL query cannot be constructed to find real-world data. 

For a hypothetical answer within a fictional context:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# This query is hypothetical and assumes the existence of a fictional character.
SELECT ?character 
WHERE {
  ?character a dbpedia:Person;
    dbpedia:alterEgo ""The Shadow"";
    dbpedia:spouse [ dbpedia:is spouse of dbpedia:DeanBrody ] .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
507,42,val,Give me the spouse of the person born as Anne Voase Coates and director of Entertaining Mr Sloane (film) and professional in the profession of Guy Ferland.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Anne Voase Coates""@en .
  ?person dbpedia:birthName ""Anne Valerie Dacre""@en .
  ?person a foaf:Person;
    foaf:surname ""Coates"" .
  ?person foaf:spouse ?spouse .
}",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
102,16,val,"Give me the manager of the player in Ellie Roebuck and native of the residence, that is English and a settlement, of Peter Finbow.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?v2 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager
WHERE {
  ?player dbpedia:playedFor ?team .
  ?team rdfs:label ""Ellie Roebuck""@en .
  ?team dbpedia:basedIn ""Lucknow, India"" .
  ?team dbpedia:hasManager ?manager .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
826,43,val,"Give me the spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","SELECT ?spouse ?successor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Louis I, Grand Duke of Hesse""@en .
  ?child a dbpedia:Person;
    dbpedia:parent ?person ;
    dbpedia:title ""Duchess of Saxe-Hildburghausen""@en .
  ?successor a dbpedia:Person;
    dbpedia:parent ?child ;
    rdfs:label ""William I, Duke of Saxe-Weimar""@en .
}",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
36,19,val,"Give me the person born in 1971 and person born as Ayo Makun and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?actor WHERE {
  ?actor a dbo:Person;
    dbpprop:birthDate ""1971"";
    rdfs:label ?name .
  FILTER (regex(str(?name), ""Ayo Makun"")) .
  ?actor dbo:starInFilm ?film .
  ?film rdf:type dbo:Film ;
    dbo:mainActor ?actor .
  AND ?film dbpprop:productionCompany ""Lepacious Bose""
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
192,16,val,"Give me the child of the child of Stephen V of Hungary and spouse of the spouse, that is a royalty, of Charles Martel of Anjou.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child1 ?royaltyRelation WHERE {
  ?person a dbpedia:Person;
    dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:parent ?grandparent .
  ?child1 a dbpedia:Person;
    dbpedia:child ?parent1 .
  ?child1 a dbpedia:Person;
    dbpedia:royaltyRelation ?royaltyRelation .
  ?parent1 a dbpedia:Person;
    dbpedia:parent ?grandparent .
  ?child1 foaf:isA ?childType WHERE { ?childType = ""Child"" }
  FILTER ( ?child1 != ?spouse )  # Ensure child is not the spouse
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
456,41,val,Give me the spouse of the actor of Pacific Drive and professional in the alter ego of The Shadow and band of Alan Doyle.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actorSpouse
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?actor foaf:name ""Unknown"" . # Placeholder for the actor's name from Pacific Drive
  ?actor dbpedia:role dbpedia:Shadow . # Actor played The Shadow
  ?actor rdfs:member [ a foaf:Member ; foaf:memberOf <http://dbpedia.org/page/Barenaked_Ladies> ] . # Actor is part of Barenaked Ladies band
  ?actorSpouse a foaf:Person;
    foaf:name ?actorSpouseName .
  ?actor foaf:knows ?actorSpouse .
}",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
417,43,val,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and spouse of Princess Caroline-Mathilde of Denmark and child of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  ?king a dbpedia:Person;
    dbpedia:father [ dbpedia:hasChild ?child ] .
  ?king dbpedia:leaderOf [ dbpedia:country ""Greenland"" ].
  ?princess a dbpedia:Person; 
    dbpedia:sibling ?child; 
    dbpedia:spouse ?king .
  ?alexandrine a dbpedia:Person; 
    dbpedia:parent ?child .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
456,52,val,"Give me the professional in the alter ego of The Shadow and band of Alan Doyle and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Alan Doyle""@en;
    dbpedia:birthPlace ""Canada"";
    dbpedia:involvement dbpedia:MusicianRole [ dbpedia:band ""Great Big Sea"" ];
    dbpedia:spouse [ dbpedia:name ""Paul Gross"" ] .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
579,16,val,"Give me the person born as the birth name of Jane Percy, Duchess of Northumberland and native of the residence, that is English and a settlement, of Alan Clyne.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthNameOfJanePercy ?birthPlaceOfJanePercy ?alanClyneBirthPlace
WHERE {
  ?janepercy a dbpedia:Person;
    dbpedia:name ""Jane Percy, Duchess of Northumberland"";
    dbpedia:birthPlace ?birthPlaceOfJanePercy .
  ?birthPlaceOfJanePercy a dbpedia:Settlement ;
    dbpedia:country ""England"" .
  ?alanClyne a dbpedia:Person;
    dbpedia:name ""Alan Clyne"";
    dbpedia:birthPlace ?alanClyneBirthPlace .
  ?alanClyneBirthPlace a dbpedia:Settlement ;
    dbpedia:country ""England"" .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
791,52,val,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of the child of Emperor Takakura and father of Emperor Go-Toba.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalSpouse
WHERE {
  ?emperor a dbpedia:Person;
    dbpedia:monarchName ""Takakura"".
  ?wife a dbpedia:Person;
    dbpedia:spouse ?royalSpouse .
  ?child a dbpedia:Person;
    dbpedia:father ?emperor;
    dbpedia:monarchName ""Go-Toba"" .
  ?royalSpouse a dbpedia:Person;
    dbpedia:monarchTitle ""Royalty"" .
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
433,42,val,"Give me the associated musical artist of Bill Evans and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and professional in the profession of Bob Marley.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Find the associated musical artist of Bill Evans
SELECT ?associated_artist WHERE {
  ?artist a dbpedia:Artist;
    dbpedia:associatedWith dbpedia:Bill_Evans .
}

# Find Langston Hughes (Paul Laurence Dunbar Chambers Jr.) and Bob Marley as artists
SELECT ?person ?name WHERE {
  ?person a dbpedia:Person;
    rdfs:label ?name .
  ?person dbpedia:birthDate ""1902-02-03""^^xsd:date; # Assuming birth date for Hughes, adjust if necessary
  ?person ns:artistRole dbpedia:Artist . # Check if they are artists
  FILTER (?name = ""Paul Laurence Dunbar Chambers Jr."" || ?name = ""Bob Marley"")
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
926,43,val,Give me the successor of the child of the spouse of Şermi Kadın and child of Ahmed III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father dbpedia:Sultan_Mahmud_I .
  ?person dbpedia:son ?successor .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
158,17,val,"Give me the entity in France and party of the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v0 <http://dbpedia.org/ontology/successor> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?party ?officeHolder WHERE {
  ?charles_de_gaulle a dbpedia:Person;
    dbpedia:birthPlace fr:Paris .
  ?charles_de_gaulle dbpedia:primeMinisterOf France ;
    dbpedia:endDate ""1945-09-15""^^xsd:date ;
    dbpedia:party ?party .
}
```",4,9,5,3,2,3,2,20,0,0,1,0,0.0,0
527,16,val,"Give me the author of the work, that is a work and a book, of Tom Baker and actor of the movie, that is a work and English and a television show, with Bernard Bresslaw.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?workLabel ?author
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:roleInWork ?role1 .
  ?role1 a dbpedia:FilmRole;
    dbpedia:actor ?actorTomBaker .

  ?person2 a dbpedia:Person;
    dbpedia:roleInWork ?role2 .
  ?role2 a dbpedia:TelevisionShowRole;
    dbpedia:actor ?actorBernardBresslaw .

  ?work a dbpedia:FilmOrTVShow;
    dbpedia:hasActor ?role1;
    dbpedia:hasActor ?role2 .
}

# Filter for works that include both Tom Baker and Bernard Bresslaw
FILTER ( ?role1 != ?role2 )
```

This query looks for films or television shows where Tom Baker and Bernard Bresslaw acted, ensuring they are not the same role to avoid double-counting. It then identifies any work where both actors were involved.",4,9,5,2,2,3,2,20,0,0,1,0,0.0,0
465,44,val,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""France"";
    dbpedia:deathPlace ""France""; # Assuming Claude VII died in France
    dbpedia:monarchOf dbpedia:Kingdom_of_France .
  ?person rdfs:label ""Claude, Duke of Brittany""@fr; # Using French name for clarity
  ?successor a dbpedia:Person;
    dbpedia:succeededBy ?person .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
47,50,val,"Give me the office of the awardee of Padma Vibhushan and office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardeeOffice1 ?awardeeOffice2
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardRecipientOf dbpedia:PadmaVibhushan .
  ?person a dbpedia:Person;
    dbpedia:office ?awardeeOffice1 .
  
  ?person2 a dbpedia:Person;
    dbpedia:awardRecipientOf dbpedia:MantuGhoshAward .
  ?person2 a dbpedia:Person;
    dbpedia:office ?awardeeOffice2 .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
124,43,val,"Give me the commander in Mahdist War and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and military force of Battle of Atbara.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?commander ?militaryForce WHERE { ?person a dbpedia:Person; dbpedia:participatedIn dbpedia:Mahdist_War . ?person a dbpedia:Person; dbpedia:participatedIn dbpedia:Battle_of_Atbara . ?person dbpedia:awarded British_South_Africa_Company_Medal . ?commander a dbpedia:Military_Commander . ?militaryForce a dbpedia:Military_Force },5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
933,43,val,Give me the reference to the birth name of the professional in Musician and band of The Ramong Sound and band of Mike Elliott (saxophonist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""AK Abdul Momen""@en .
  ?person dbpedia:activeYears ""1930s""^^xsd:gYear .
  ?person dbpedia:region ""British Raj"" .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
453,7,val,"Give me the religion of the birth place, that is a country, of William Denning and religion of John Henry Newman.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_Henry_Newman> <http://dbpedia.org/ontology/religion> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Denning> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/religion> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthCountry ?religion
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthCountry .
  OPTIONAL { ?person rdfs:label ?name }
  FILTER (lang(?name) = ""en"")  # Assuming we are looking for English names
  ?person rdfs:label ?name .
  ?birthCountry rdfs:label ?birthCountryLabel .
  ?birthCountry rdfs:type dbpedia:Country .
  ?country dbpedia:religion ?religion .
}
ORDER BY ?birthCountryLabel",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
582,47,val,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of Hirotaka Sugawara.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Kazuaki Nagasawa"" ;
    dbpedia:role dbpedia:SoccerManager .
  ?child a dbpedia:Person;
    dbpedia:name ""Hirotaka Sugawara"" ;
    dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:role [a dbpedia:Role; rdfs:label ""Athlete"" ] .
  ?father a dbpedia:Person;
    dbpedia:role [a dbpedia:Role; rdfs:label ""SoccerManager"" ] .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
445,47,val,"Give me the death place of the awardee of the establishment of 1820-03-10 and entity in the residence, that is a country, of Anna Sharkey.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?deathPlace ?country_of_residence
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:awardedEvent [ owl:propertyValue ""1820-03-10"" ].
  ?person rdfs:label ""AK Abdul Momen""@en .
  ?person dbpedia:deathPlace ?deathPlace .
  ?person dbpedia:residenceCountry ?country_of_residence .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
417,55,val,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of the father of Frederick IX of Denmark.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v5 . }","SELECT ?spouse
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:parentOfCount_Ingolf_of_Rosenborg .
  ?grandparent a dbpedia:Person;
    dbpedia:child ?parent ;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Royalty .
  ?child a dbpedia:Person;
    dbpedia:child ?spouse .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?child rdf:type dbpedia:Monarch .
  ?spouse a dbpedia:Person;
    dbpedia:sibling ?child .
}",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
417,46,val,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the father of Frederick IX of Denmark.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse
WHERE {
  ?king a dbpedia:Monarch;
    dbpedia:monarchyStarts [ property::value ""Christian X"" ] .
  ?king dbpedia:father [ resource:label ""Knud, Hereditary Prince of Denmark"" ] .
  ?king dbpedia:mother [ resource:label ""Queen Alexandrine"" ] .
  ?queen a foaf:Person;
    foaf:spouse ?spouse .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
987,43,val,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of Dado Polumenta and entity in Montenegro.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"Given the complexity and the need for specific data not provided here (e.g., the name of the film), a general query to find birthplaces based on known facts is:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query to find birthplace of Dado Polumenta (assumed known)
SELECT ?birthPlaceOfPolumenta WHERE {
  ?polumenta a dbpedia:Person;
    dbpedia:birthPlace ?birthPlaceOfPolumenta .
}

# Query to find birthplace of an actor in a film with Emir Hadžihafizbegović (requires specific film data)
PREFIX film: <http://dbpedia.org/ontology/film>
PREFIX person: <http://dbpedia.org/ontology/person>

SELECT ?actorBirthPlace WHERE {
  ?film a dbpedia:Film;
    dbpedia:mainActor ?actor .
  ?actor a person:Person;
    dbpedia:birthPlace ?actorBirthPlace .
  FILTER (fn:contains(?film, ""Emir Hadžihafizbegović""))  # Replace with the actual film name filter
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
917,42,val,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of the father of Kamehameha IV and child of Kekūanāoʻa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent1 ?parent2
WHERE {
  ?child1 a dbpedia:Person; dbpedia:father Kamehameha III .
  ?child1 a dbpedia:Royalty .
  ?child2 a dbpedia:Person; dbpedia:father Kamehameha III .
  ?child2 a dbpedia:Royalty .
  ?parent1 dbpedia:parentOf ?child1 .
  ?parent2 dbpedia:parentOf ?child2 .
  FILTER (NOT EXISTS { ?child3 a dbpedia:Person; dbpedia:father Kamehameha III })
}
```

This query selects the parents (`?parent1` and `?parent2`) of the children (`?child1` and `?child2`) who are both descendants of Kamehameha III and identified as royals. The filter ensures that there are no other children of Kamehameha III to avoid double-counting.",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
715,48,val,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace morocco .
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@es.
  ?person dbpedia:conflict ""Rif War"" .
  ?commander a dbpedia:MilitaryPerson;
    dbpedia:role ""Commander"" .
  ?commander foaf:wasAssociatedWith ?person .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
47,48,val,"Give me the office of the awardee of Padma Vibhushan and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/governor> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardeeOffice ?commanderOffice
WHERE {
  ?person a dbpedia:Person;
    dbpedia:padma_vibhushanAward ?awardeeOffice .
  ?person a dbpedia:Person;
    dbpedia:militaryRole ?militaryRole .
  ?militaryRole rdfs:label ""Commander""@en;
    dbpedia:operation ""Operation Green Hunt""@en .
  ?person foaf:name ?name .
  FILTER (regex(str(?name), ""AK Abdul Momen"")) .
}
```",5,6,6,3,2,3,3,71,0,0,22,0,0.0,0
791,54,val,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and spouse of the spouse, that is a royalty, of Emperor Takakura and father of Emperor Go-Toba.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify Emperor Go-Toba's parents
SELECT ?father WHERE {
  dbpedia:Go-Toba rdfs:father ?father .
}

# Step 2: Determine the spouse of Emperor Takakura
SELECT ?spouse WHERE {
  dbpedia:Takakura rdfs:sibling ?spouse . # Assuming Takakura has siblings, this is a simplification.
}

# Step 3: Find the child of the spouse and Takakura
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?child WHERE {
  ?spouse foaf:partner dbpedia:Takakura .
  ?child a dbpedia:Person; dbpedia:parent ?spouse .
}

# Step 4: Identify the office holder and royalty among Go-Toba's children
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?child WHERE {
  ?child a dbpedia:Person; dbpedia:officeHolder true .
  ?child a dbpedia:Person; dbpedia:royalty true .
}

# Step 5: Find the predecessor of this individual
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?predecessor WHERE {
  ?child predecessorOf ?predecessor .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
917,53,val,"Give me the child of Kekūanāoʻa and child of the father of Kamehameha IV and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_of_kamehameha_iii ?mayor_child
WHERE {
  ?child_of_kamehameha_iii a dbpedia:Person;
    dbpedia:father Kamehameha_IV .
  ?child_of_kamehameha_iii dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person; dbpedia:parent ?kamehameha_iii .
  ?mayor_child a dbpedia:Person;
    dbpedia:parent ?spouse .
  ?mayor_child dbpedia:office ""Mayor of Hawaiian Kingdom""
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
274,23,val,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound and band member of the person born, that is a musical artist, as John Birks Gillespie.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?associated_artist
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""John Birks Gillespie""@en .
  ?person a dbpedia:MusicalArtist .
  ?band a dbpedia:Band ;
    dbpedia:member ?person .
  ?associated_artist a dbpedia:MusicArtist ;
    dbpedia:associatedWith ?band .
}
```",4,6,5,2,2,2,3,28,0,0,4,0,0.0,0
236,15,val,"Give me the party member of the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts and party member of Democratic-Republican Party.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic-Republican_Party> . ?v1 <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?partyMemberName
WHERE {
  ?politician a dbpedia:Person;
    dbpedia:birthPlace ""Quincy, Massachusetts"";
    dbpedia:officeHolderYes ;
    dbpedia:politicalParty dbpedia:Democratic_Republican_Party .
  ?politician dbo:hasAdminstrationMember ?partyMemberName .
}
```",4,7,5,3,2,3,2,20,0,0,18,0,0.0,0
382,17,val,"Give me the birthplace of Björn Joppe and landmark at elevation of the award of the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. <http://dbpedia.org/resource/Björn_Joppe> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v0 <http://dbpedia.org/property/awards> ?v3 . }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?award ?elevation WHERE {
  ?coach a dbo:Coach ; dbpprop:coachesOf ?harryCombes .
  ?harryCombes a dbo:Person ; dbpprop:awardedBy ?award .
  ?award rdfs:label ?awardLabel .
  ?awardLabel MATH ?elevation .
}",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
865,49,val,"Give me the father of the child of the father of Abul Maal Abdul Muhith and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?v4 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father_of_child WHERE {
  ?child a dbpedia:Person;
    dbpedia:father ?father .
  ?father dbpedia:birthPlace ?country_of_residence .
  ?child dbpedia:parent [ dbpedia:has_siblings ?sibling1 ].
  ?sibling1 a dbpedia:Person; dbpedia:parent ?abul_maal_abdul_muhith .
  ?abul_maal_abdul_muhith a dbpedia:Person;
    dbpedia:father ?ak_abdul_momen .
  ?ak_abdul_momen dbpedia:birthPlace ?country_of_residence
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
965,49,val,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseOfSpouse ?parentOfGeorge
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Princess Victoria of Hesse and by Rhine""@en .
  ?person dbpedia:spouse ?spouseOfPrincessVictoria .
  ?spouseOfPrincessVictoria a dbpedia:Person;
    dbpedia:name ""Grand Duke Alexander Mikhailovich of Russia""@en .
  ?child a dbpedia:Person;
    dbpedia:parent ?parentOfGeorge .
  ?child dbpedia:birthDateBefore 1890.
  ?child dbpedia:name ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
124,44,val,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in Mahdist War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?militaryForce1 ?militaryForce2
WHERE {
  ?herbert_kitchener a dbpedia:Person;
    dbpedia:conflictSecondBoerWar ?conflict1 .
  ?frank_rhodes a dbpedia:Person;
    dbpedia:conflictMahdistWar ?conflict2 .
  ?conflict1 rdfs:label ""Second Boer War"" .
  ?conflict2 rdfs:label ""Mahdist War"" .
  ?herbert_kitchener dbpedia:militaryForce ?militaryForce1 .
  ?frank_rhodes dbpedia:militaryForce ?militaryForce2 .
}
```",5,10,6,2,3,3,3,71,0,0,3,0,0.0,0
892,48,val,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and entity in the profession of the true self of Enrico Crolla.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/province> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for the Italian region, settlement, and administrative region of Democratic Party (Italy)
SELECT ?region WHERE {
  ?party a dbpedia:PoliticalParty ;
    dbpedia:country ""Italy"" ;
    dbpedia:leaderHeadOffice ?region .
}

# Query for Enrico Crolla's profession
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?enrico_crolla_profession
WHERE {
  ?person a dbpedia:Person ;
    dbpedia:name ""Enrico Crolla"" ;
    dbo:profession ?enrico_crolla_profession .
  FILTER (?person rdf:type dbo:Politician)  # Ensuring Enrico Crolla is a politician
}
```",5,9,6,3,2,3,3,71,0,0,587,0,0.0,0
273,16,val,Give me the spouse of the child of Giovanni Agnelli and parent of the alumnus of University of Turin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?childSpouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:alumniOf University_of_Turin .
  ?person dbpedia:parent ?parent .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent;
    dbpedia:child ?childSpouse .
}",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
216,21,val,Give me the administration of the designer of Woolfe: The Red Hood Diaries and party of Campbell Newman and office of Tim Nicholls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v0 . ?result <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?name ?office ?party
WHERE {
  ?politician a dbpedia:OfficeHolder;
    dbpedia:office ?office .
  ?politician a dbpedia:Person;
    dbpedia:politicalParty ?party .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
445,55,val,"Give me the death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of Anna Sharkey and entity in the award of George H. Cameron.",SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    rdfs:label ""AK Abdul Momen""@en .
  ?person dbpedia:awardedBy dbpedia:RoyalAstronomicalSociety .

  ?person2 a dbpedia:Person;
    rdfs:label ""George H. Cameron""@en .
  ?person2 dbpedia:awardedBy dbpedia:RoyalAstronomicalSociety ;
    dbpedia:goldMedalAwarded true .
  
  ?person2 dbpedia:deathPlace ?deathPlace .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
124,53,val,"Give me the military force of Battle of Tamai and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?militaryForce ?commander
WHERE {
  ?battle a dbpedia:Event;
    dbpedia:type ""conflict""; # Military conflict
    dbpedia:participatingMilitaryForts ?militaryForce .
  ?person a dbpedia:Person;
    dbpedia:name ""Herbert Kitchener, 1st Earl Kitchener"";
    dbpedia:role ""Chief of the Imperial General Staff"" ;
    dbpedia:conflict ?battle .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
433,54,val,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in Musician and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?associated_artist
WHERE {
  ?allenConnectedTo a dbpedia:Musician .
  ?allenConnectedTo rdfs:label ""Ornette Coleman""@en .
  ?paulDunbar a dbpedia:Artist .
  ?paulDunbar rdfs:label ""Paul Laurence Dunbar Chambers Jr.""@en .
  ?allenConnectedTo dbpedia:associatedWith ?paulDunbar .
}
```

This SPARQL query looks for the `dbpedia:associatedWith` relationship between Ornette Coleman (identified by his label) and Paul Laurence Dunbar Chambers Jr. (identified by his label), which will give us the associated musical artist of each.",6,12,7,3,3,3,3,71,0,0,3,0,0.0,0
216,50,val,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v4 . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify Džemal Berberović and his teams
SELECT ?person ?team
WHERE {
  ?person rdfs:label ""Džemal Berberović"" .
  ?person a dbpedia:Person;
    dbpedia:sport ""Soccer"" .
  ?person dbpedia:playsFor ?team .
}

# Step 2: Find managers born on 1983-12-20
SELECT ?manager
WHERE {
  ?manager a dbpedia:Person;
    dbpedia:birthDate ""1983-12-20"" .
  FILTER (lang(?manager) = ""en"")  # Assuming English language for simplicity
}

# Step 3: Link managers to the identified player-coach and their managed teams
SELECT ?coach ?team
WHERE {
  ?player a dbpedia:Person;
    dbpedia:sport ""Soccer"" ;
    dbpedia:playsFor ?team .
  ?player rdfs:label ""Player-coach name"" .  # Placeholder for actual player name who is also a coach

  ?manager a dbpedia:Person;
    dbpedia:birthDate ""1983-12-20"" ;
    dbpedia:sport ""Soccer"" ;
    dbpedia:role ""Manager"" .
  
  ?manager dbpedia:managesTeam ?team .
  
  ?team rdfs:label ?teamLabel .  # Placeholder for actual team name
}

# Combine results to find the player-coach and their managed team
UNION {
  SELECT ?player ?team FROM <>
  UNION
  SELECT ?manager ?team FROM <>
}
```",5,14,6,3,2,3,3,71,0,0,1,0,0.0,0
495,17,val,Give me the child of Frederick I of Württemberg and father of the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_I_of_Württemberg> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?childName ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father ?grandfather .
  ?grandfather a dbpedia:Person;
    dbpedia:name ""Frederick I of Württemberg"" .
  ?child a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?child a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""Child of Frederick I of Württemberg"" . # Placeholder for relevant property
}
```

This query looks for individuals who are children of Frederick I and then filters down to those who fit the description as a child of Frederick I and potentially related to Princess Pauline through familial connections.",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
507,47,val,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of the person born as Anne Voase Coates.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?v4 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?director
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1919-06-17""^^xsd:date;
    dbpedia:s spouse [ dbpedia:givenName ""Anne"" ; dbpedia:familyName ""Voase Coates"" ] .
  ?movie a dbpedia:Film; 
    dbpedia:director ?director .
  ?person dbpedia:actedIn ?movie .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
433,47,val,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musicalArtist WHERE {
  ?person dbpedia:knownAs ""Paul Laurence Dunbar Chambers Jr."" ;
    dbpedia:birthName ""Langston Hughes"" .
}

PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musicalArtist WHERE {
  ?person dbpedia:knownAs ""Langston Hughes"" ;
    dbpedia:musicalArtist ?musicalArtist .
}

PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musicalArtist ?artist WHERE {
  ?person dbpedia:knownAs ""Ornette Coleman"" ;
    dbpedia:musicalArtist ?musicalArtist .
    ?musicalArtist a dbpedia:Musician;
      dbpedia:type dbpedia:Artist .
}
```",5,11,6,3,2,3,3,71,0,0,10,0,0.0,0
417,41,val,"Give me the child of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the father of Frederick IX of Denmark.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasSpouse ?spouse .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent;
    dbpedia:isChildOf ?parent .
  ?child a dbpedia:Royalty.
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
102,15,val,"Give me the manager of the player in the member, that is a soccer player, of England women's national football team and native of Dewsbury.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Dewsbury> . ?v0 <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?manager
WHERE {
  ?player a dbpedia:SoccerPlayer;
    dbpedia:birthPlace ""Dewsbury"";
    dbpedia:memberOf dbpedia:England_women's_national_football_team .
  ?player dbpedia:managedBy ?manager .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
130,16,val,"Give me the figure known as the film, that is a soccer club and an organisation, of Candice Storey Lee and entity in the administration, that is American, of .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> """"@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v2 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?organization
WHERE {
  ?person a dbo:Person;
    dbppr:role ""Administrator"" .
  ?person foaf:name ""Candice Storey Lee"" .
  ?organization a dbo:SoccerClub ;
               dbo:basedIn dbpedia:UnitedStates .
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
212,7,val,"Give me the birthplace of KODA (singer) and birthplace of the professional, that is a musical artist and an artist, in Singer, rapper, CEO, Facilities and Project Manager.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Singer, rapper, CEO, Facilities and Project Manager""@en . <http://dbpedia.org/resource/KODA_(singer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for KODA's birthplace
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""KODA""@en; dbpedia:birthPlace ?birthPlace .
}

# Query for individuals who are both singers and rappers (considering the intersection of these roles)
SELECT ?birthPlace WHERE {
  ?person a dbpedia:Musician;
    dbpedia:role dbpedia:Singer; dbpedia:role dbpedia:Rapper .
  ?person dbpedia:birthPlace ?birthPlace .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
18,22,val,Give me the professional in the award of Ana María Sánchez de Ríos and parent of the professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?winnerName ?parentName
WHERE {
  ?award dbpedia:awardedTo ?winnerName .
  ?winnerName dbpedia:hasParent ?parentName .
  ?parentName a dbpedia:ActorRole .
  ?parentName rdfs:label ""Actress""@en .
}",4,4,5,2,2,2,3,28,0,0,200,0,0.0,0
18,23,val,"Give me the professional in the award of Ana María Sánchez de Ríos and alumnus of the figure known, that is an educational institution, as Saints.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""Saints""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alumnusName ?institution
WHERE {
  ?alumnus a dbpedia:Person;
    dbpedia:birthPlace ""United Kingdom"" .
  ?alumnus dbpedia:awardedBy dbpedia:AnaMariaSanchezSanchezDeRiosPrize .
  ?alumnus dbpedia:educationalInstitution dbpedia:Saints .
}
```

This SPARQL query does the following:
- Selects individuals (`?alumnusName`) who have been awarded the `dbpedia:AnaMariaSanchezSanchezDeRiosPrize`.
- Filters these individuals to find those born in the United Kingdom (assumed to be a reasonable context for the British Raj era).
- Checks if these individuals are alumni of ""Saints"".",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
465,54,val,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of the child of Alfonso I d'Este and successor of Renée of France.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Maximilian II Holy Roman Emperor"";
    dbpedia:marriageRelation [ a dbpedia:MarriageRelation; 
                             dbpedia:partner ?spouse ]
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
93,15,val,"Give me the death place of John Weir Troy and capital of the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/John_Weir_Troy> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"To extract this information from DBpedia, we can use the following SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?deathPlace ?capitalRegion ?capitalSettlement
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""John Weir Troy"" .
  ?person rdfs:seeAlso ?biography .
  ?biography a dbpedia:Article ;
    dbpedia:subject ?johnWeirTroyInfo .
  ?johnWeirTroyInfo dbpedia:deathPlace ?deathPlace .

  ?site a dbpedia:SpatialThing;
    dbpedia:locatedInRegion ?region .
  ?region a dbpedia:Region ;
    dbpedia:capital ?capitalRegion .

  ?site a dbpedia:SpatialThing;
    dbpedia:locatedInSettlement ?settlement .
  ?settlement a dbpedia:Settlement ;
    dbpedia:headquarter ?headquarters .
  ?headquarters a dbpedia:Building ;
    dbpedia:location ?capitalSettlement .
}
```

This query will:
- Find John Weir Troy's death place.
- Identify the region and settlement where Clam Cove Pictograph Site's headquarters are located.
- Extract the capital of that region.",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
216,23,val,Give me the administration of the designer of Woolfe: The Red Hood Diaries and office of the mayor of Ros Bates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v1 . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?designerName ?mayorOffice 
WHERE { 
  ?comicBook a dbpedia:ComicBook; dc:creator ?designerName . 
  ?fictionalCity a dbpedia:FictionalLocation; name 'Ros Bates'; dbpedia:isPartOf ?region . 
  ?region a dbpedia:AdministrativeDivision; adminStratum ?adminLevel . 
  ?mayorOffice a dbpedia:Office; officialTitle 'Mayor' . 
}",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
443,22,val,"Give me the landmark at elevation of the award of William Shepherd and birthplace of the person born, that is a musical artist and an artist, on 1949-11-20.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/elevation> ?v2 . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?landmark ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:winNobelPeacePrize ?award .
  ?award rdfs:label ""Nobel Peace Prize""@en .
  ?person dbpedia:birthPlace ?birthPlace .
  ?artist a dbpedia:Artist ;
    dbpedia:birthDate ""1941-05-24""^^xsd:date .
  ?landmark a dbpedia:Landmark;
    dbpedia:location ?location .
  ?award dbpedia:awardedTo ?person .
  ?location rdfs:label ?landmarkLabel .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
456,40,val,"Give me the professional in  and band of Alan Doyle and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  
  ?actor dbpedia:role [dbo:hasActor ?actorRole] .
  ?actorRole rdfs:label ""Alex Etel"" .

  ?spouse dbpedia:partner ?partnerRole .
  ?partnerRole rdfs:label ""Lucy Vickers"" .

  ?band dbpedia:genre ""Rock"" .
  ?bandMember a dbpedia:Musician;
    dbpedia:band ?band .
  ?bandMember foaf:name ""Alan Doyle"" .

  ?movie dbo:hasTitle ""The Water Horse: Legend of the Deep"" .
  ?movie dbo:role ?actorRoleInMovie .
  
  ?work dbpedia:production [dbo:hasFilm ?film] .
  ?film dbo:filmTitle ?movieTitle .
  
  ?work_db television:network ""BBC"" .
  ?work rdfs:label ?workTitle .

  ?person1 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace_1 .
  ?person1 a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace_1 .

  ?actorRoleInMovie rdfs:label ""Character"" .
  
  ?film dbo:role ?actorRoleInMovie .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
417,42,val,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of Christian X of Denmark and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasSpouse [ dbpedia:firstName ""Alexandrine"" ] .
  ?parent a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:isRoyalty true .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
773,48,val,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of the father of the parent of Bernard (son of Charles the Fat).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandparent
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:spouse ?wife .
  ?wife a dbpedia:Person;
    dbpedia:parent ?parentOfWife .
  ?parentOfWife a dbpedia:Person;
    dbpedia:child ?childOfParentOfWife .
  ?childOfParentOfWife a dbpedia:Person;
    dbpedia:father ?fatherOfChild .
  ?fatherOfChild a dbpedia:Person;
    rdfs:label ""Louis the Pious"" .
  ?childOfParentOfWife rdfs:label ""Hemma of Saxony"" .
  ?grandparent a dbpedia:Person;
    dbpedia:parent ?parentOfGrandparent .
  ?parentOfGrandparent a dbpedia:Person;
    dbpedia:child ?childOfParentOfGrandparent .
  ?childOfParentOfGrandparent a dbpedia:Person;
    rdfs:label ""Gerold of Ballenstedt"" . # Example parent of Hemma, actual parent might vary
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
129,23,val,Give me the associated musical artist of the person born as Tahj Malik Chandler and professional in the mayor of 1999 West Dunbartonshire Council election.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . }","Since there is no direct link provided between Tahj Malik Chandler and a musical artist through the given data, the SPARQL query would return no results:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?musicalArtist
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Tahj Malik Chandler"" .
  ?person dbpedia:role ""Mayor of West Dunbartonshire Council"" .
}
```",4,4,5,2,2,2,3,28,0,0,7,0,0.0,0
507,45,val,Give me the director of Entertaining Mr Sloane (film) and professional in the profession of the person born on 1966-02-18 and spouse of Anne V. Coates.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find the film ""Entertaining Mr. Sloane""
SELECT ?filmTitle WHERE {
  ?film dbpedia:hasTitle ""Entertaining Mr. Sloane"" .
}

# Step 2: Get the director of the identified film
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?director WHERE {
  ?film rdf:type dbpedia:Film;
    dbpedia:director ?director .
  FILTER (STRSTARTS (?filmTitle, ""Entertaining Mr. Sloane"")) .
}

# Step 3: Find the person born on 1966-02-18 and married to Anne V. Coates
SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthday ""1966-02-18""^^<xs:date>;
    dbpedia:siblingCount 0; # Assuming no siblings for simplicity
    dbpedia:spouse ?spouse .
  ?spouse rdfs:label ""Anne V. Coates"" . # Assuming spouse's name is Anne V. Coates
}

# Step 4: Extract their profession
SELECT ?profession WHERE {
  ?person a dbpedia:Person;
    dbpedia:occupation ?profession .
  FILTER (MATCH (?person) WHERE { ?person rdf:type dbpedia:Person; dbpedia:birthday ""1966-02-18""^^<xs:date>; dbpedia:spouse ?spouse }) .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
573,55,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/deathPlace> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify William J. Phelan and Charlie Baker
SELECT ?person WHERE {
  ?person a dbpedia:Person;
    rdfs:label ""William J. Phelan""@en .
  ?person a dbpedia:Person;
    rdfs:label ""Charlie Baker""@en .
}

# Step 2: Determine their residence (settlement) and administration (region) of death
SELECT ?residence ?administration WHERE {
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?residence . 
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?administration .
}

# Step 3: Find their parents who are politicians and office holders
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parent WHERE {
  ?person a dbpedia:Person;
    dbo:parent ?parent .
  FILTER (OPTIONAL { ?parent a dbo:OfficeHolder } ) .
  FILTER (OPTIONAL { ?parent a dbo:Politician } ) .
}

# Combine all results
```",6,10,7,2,3,3,3,71,0,0,2,0,0.0,0
582,54,val,"Give me the figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to the residence of Hirotaka Sugawara.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personLabel ?fatherLabel ?childLabel ?residence
WHERE {
  ?person a dbpedia:Person; rdfs:label ""10-19"" .
  ?person a foaf:ChildOf ?parent .
  ?parent a dbpedia:Person; rdfs:label ?fatherLabel .
  ?parent a dbpedia:SoccerManager .
  ?child a dbpedia:Person; rdfs:label ?childLabel .
  ?child a foaf:ChildOf ?person .
  ?child a dbpedia:Athlete .
  ?child a dbpedia:SoccerManager .
  ?child rdfs:seeAlso <http://example.com/Hirotaka_Sugawara_Residence> . # Placeholder for actual residence reference
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
965,43,val,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?parent ?royalty WHERE {
  dbpedia:George_Mountbatten_2nd_Marquess_of_Milford_Haven a dbpedia:Person; 
  dbpedia:spouse dbpedia:Prince_Louis_of_Battenberg; 
  dbpedia:child dbpedia:Alice_Montagu_Douglas_Scott; 
  dbpedia:Alice_Montagu_Douglas_Scott a dbpedia:Person; 
  dbpedia:birthDate 1854-05-24; 
  dbpedia:Alice_Montagu_Douglas_Scott a dbpedia:Politician .
}",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
417,48,val,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Royalty .
  ?person dbpedia:spouse ?spouse .
}
```",5,7,6,3,2,3,3,71,1,7454,0,0.0001341381623071764,1.0,0.0002682403433476395
433,43,val,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and associated musical artist of Paul Chambers and professional in Musician.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musicalArtist
WHERE {
  ?artist a dbpedia:Person;
    dbpedia:isAssociatedWithArtwork [ dbpedia:hasMusicGenre ""Jazz"" ] .
  ?artist a dbpedia:Person;
    dbpedia:associatedMusicalArtist ?musicalArtist .
  ?chambers a dbpedia:Person;
    dbpedia:associatedMusicalArtist ?musicalArtist .
}
```

This query looks for individuals associated with Jazz music (as both Ornette Coleman and Paul Chambers are primarily known for Jazz) and then finds the common musical artist between these two individuals.",5,9,6,3,3,3,3,71,0,0,3,0,0.0,0
976,50,val,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of the person born as Mehmet Naci Bostancı.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/office> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Mehmet Naci Bostancı"";
    dbpedia:party dbpedia:Millet_İttifakı .
  ?office a dbpedia:OfficeHolder ;
    dbpedia:officeType dbpedia:Mayorship ;
    dbpedia:politician ?person .
}",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
445,49,val,"Give me the entity in the residence, that is a country, of Anna Sharkey and entity in the award of the commander in Battle of Saint-Mihiel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v2 . },"SELECT ?country_of_residence ?award_for_commander
WHERE {
  ?person a dbpedia:Person;
    dbpedia:office ""Lord Mayor of London"" .
  ?person ns:nationality ?country_of_residence .

  ?battle a dbpedia:Event;
    dbpedia:name ""Battle of Saint-Mihiel"" .
  ?commander a dbpedia:Person;
    dbpedia:leadRoleIn ?battle .
  ?commander dbpedia:awardedWith ?award_for_commander .
}",5,6,6,3,2,3,3,71,0,0,102,0,0.0,0
791,50,val,"Give me the father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father ?royaltyTitle
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:isMonarchOf dbpedia:Japan ;
    dbpedia:title ?royaltyTitle .
  ?grandchild a dbpedia:Person;
    dbpedia:hasParent ?child ;
    dbpedia:officeHolder true ;
    dbpedia:isRoyalty true .
  ?grandchild a dbpedia:Person;
    dbpedia:hasParent ?parent2 .
  ?parent2 a dbpedia:Person;
    dbpedia:isMonarchOf dbpedia:Japan ;
    dbpedia:title ?royaltyTitle2 .
  ?child dbpedia:hasParent ?parent1 .
  ?parent1 a dbpedia:Person;
    dbpedia:isMonarchOf dbpedia:Japan ;
    dbpedia:title ?royaltyTitle1 .
  ?parent1 = ?parent2
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
417,52,val,"Give me the child of the father of Frederick IX of Denmark and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of Alexandrine of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:father dbpedia:Knud, Hereditary Prince of Denmark .
  ?parent a dbpedia:Person;
    dbpedia:mother <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?child a dbpedia:Royalty .
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
326,16,val,"Give me the person decedent at the award, that is a country, of Adelbert Cronkhite and resident of the birthplace, that is a state and British, of David Jessel.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?laureate ?countryOfBirth ?stateOfBirth
WHERE {
  ?laureate a dbpedia:Person;
    dbpedia:nobelPrizeAward ""Physiology or Medicine"";
    dbpedia:birthPlace ?countryOfBirth .
  ?countryOfBirth a dbpedia:Country .
  ?jessel a dbpedia:Person;
    dbpedia:birthPlace ?stateOfBirth .
  ?stateOfBirth a dbpedia:State .
  ?jessel dbpedia:deathDate ""1935-04-07""^^<xs:date> .
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
456,44,val,"Give me the band of the band, that is a musical artist, of Dean Brody and spouse of Danielle Spencer (Australian actress) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"SELECT ?bandName
WHERE {
  ?person a dbpedia:MusicalArtist;
    dbpedia:name ""Dean Brody"" .
  ?person dbpedia:spouse [ a dbpedia:Person; rdfs:label ""Danielle Spencer"" ] .
  ?spouse a dbpedia:Person;
    dbpedia:alterEgo ""The Shadow"" .
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
433,40,val,"Give me the professional in Musician and associated musical artist of Bill Evans and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?associated_musician
WHERE {
  ?bill_evans a dbpedia:Musician ;
    dbpedia:associatedMusicalArtist ?associated_musician .
  ?paul_chambers a dbpedia:Person;
    dbpedia:birthDate ""1930-03-27""^^xsd:date;
    dbpedia:occupation dbpedia:Musician;
    dbpedia:deathPlace ""London, United Kingdom"" .
  ?bill_evans rdfs:seeAlso ?paul_chambers .
}",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
5,17,val,"Give me the birthplace of Gerald Regan and entity in the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Gerald_Regan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?band
WHERE {
  ?person dbpedia:hasBirthPlace ?birthPlace .
  ?artist a dbpedia:MusicArtist;
    dbpedia:associatedBand ?band .
  ?artist rdfs:label ""Rubén Colón Tarrats""@en .
  FILTER (lang(?artist) = ""en"")
}",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
216,42,val,"Give me the player in the coach of Croatia national under-21 football team and player in Mario Ivanković and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Find the current coach of Croatia national under-21 football team
SELECT ?coach WHERE {
  ?coach a dbpedia:Coach;
    dbpedia:coachesOf dbpedia:Croatia national under-21 football team .
}

# Find Mario Ivanković's birth date
SELECT ?birthDate WHERE {
  dbpedia:Mario_Ivanković dbpedia:birthdate ?birthDate .
}

# Find individuals born on 1983-12-20 who are soccer players and managers
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?birthDate WHERE {
  ?person a dbpedia:SoccerPlayer;
    dbo:birthdate ?birthDate .
  ?person a dbpedia:Person;
    rdf:type [dbo:hasRole some (dbo:Manager)] .
  ?person dbpedia:birthdate ?birthDate .
  FILTER (?birthDate = ""1983-12-20"")
}

# Find the team associated with the person born on 1983-12-20 who fits all roles
SELECT ?team WHERE {
  ?person a dbpedia:SoccerPlayer;
    dbo:playsFor ?team .
  ?person a dbpedia:Person;
    rdf:type [dbo:hasRole some (dbo:Manager)] .
  ?person dbpedia:birthdate ""1983-12-20"" .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
645,41,val,"Give me the commander in the force of Carlos Asensio Cabanillas and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and leader of Ministry of the Army (Spain).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander ?militaryForce ?event
WHERE {
  ?commander a dbpedia:Person;
    dbpedia:militaryBranch ?militaryForce .
  ?commander dbpedia:commandedBy ?leader .
  ?leader a dbpedia:Person;
    dbpedia:title ""Francisco Largo Caballero"";
    dbpedia:office ""Ministry of the Army (Spain)"" .
  ?event a dbpedia:Event;
    dbpedia:startYear 1936; # Approximate start year of the Spanish Civil War
    dbpedia:endYear 1939 . # Approximate end year of the Spanish Civil War
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
582,41,val,"Give me the reference to the residence of Hirotaka Sugawara and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and figure known as --10-19.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Masami Nagasawa""@en .
  ?person dbpedia:father ?father .
  ?father a dbpedia:Athlete ;
            dbpedia:role dbpedia:SoccerManager .
  ?father dbpedia:birthPlace ?birthPlace .
  OPTIONAL { ?father dbpedia:deathPlace ?deathPlace }
}",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
773,45,val,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of Carloman of Bavaria and spouse of Louis the German.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:isKing true; # Charlemagne was a king/emperor
    dbpedia:hasChild ?child .
  ?child a dbpedia:Person;
    dbpedia:name ""Carloman of Bavaria"" .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
978,15,val,"Give me the band member of the professional, that is a musical artist and an artist, in the award of Michel Claparède and band member of Chicane (musician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chicane_(musician)> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandMember
WHERE {
  ?person a dbpedia:Person;
    dbpedia:winAward [ rdf:type dbo:GrammyAward ] .
  ?person a dbpedia:Musician; 
    dbpedia:bandMemberOf dbpedia:Chicane .
}",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
465,53,val,"Give me the spouse of Archduchess Barbara of Austria and successor of the child, that is a royalty, of Anne of Brittany and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse
WHERE {
  ?archduchess a dbpedia:Person;
    dbpedia:birthPlace <>; # Placeholder for Anne of Brittany's birthplace
    dbpedia:deathPlace <>; # Placeholder for Archduchess Barbara's death place
    dbpedia:parent ?mother .
  ?mother a dbpedia:Person;
    dbpedia:name ""Anne of Brittany"" .
  ?archduchess dbpedia:sibling ?sister .
  ?sister a dbpedia:Person;
    dbpedia:name ""Claude, Queen of France"" .
  ?archduchess foaf:sibling ?spouse .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
933,40,val,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and reference to Alan Warner and band of The Ramong Sound.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName ?artistNames ?musicalArtistNames
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Alan Warner"" .
  ?band a dbpedia:Band ;
    dbpedia:bandName ?bandName ;
    dbpedia:hasMember ?artist .
  ?artist a dbpedia:Musician;
    dbpedia:name ?artistNames .
  ?band a dbpedia:Band ;
    dbpedia:hasMember ?musicalArtist ;
    dbpedia:genre ""Rock"" . # Assuming The Ramong Sound is a rock band
  ?musicalArtist a dbpedia:Musician;
    dbpedia:name ?musicalArtistNames .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
791,48,val,"Give me the father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalSpouse ?child
WHERE {
  ?emperor a dbpedia:Person;
    dbpedia:name ""Takakura Konoe"" .
  ?spouse a dbpedia:Person;
    dbpedia:name ?royalSpouse ;
    dbpedia:isSpouseOf ?emperor .
  ?child a dbpedia:Person;
    dbpedia:parent ?royalSpouse .
  ?royalSpouse a dbpedia:Royalty .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
445,41,val,"Give me the entity in the residence, that is a country, of Anna Sharkey and death place of the awardee of Royal Astronomical Society and entity in United Kingdom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardeeName ?birthPlace ?deathPlace
WHERE {
  ?awardee a dbpedia:Person;
    dbpedia:awardedBy dbpedia:RoyalAstronomicalSociety .
  ?awardee dbpedia:residenceCountry ""United Kingdom"" .
  ?awardee a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
791,51,val,"Give me the predecessor of the child of Emperor Takakura and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?predecessor
WHERE {
  ?child a dbpedia:Person;
    dbpedia:father dbpedia:Emperor_Takakura ;
    dbpedia:officeHolder dbpedia:Monarch ;
    dbpedia:birthYear LESS THAN ?year .
  ?child dbpedia:child ?person .
  ?person a dbpedia:Person;
    dbpedia:parent ?predecessor .
  FILTER (?year = 1852)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
573,51,val,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"SELECT ?parentOfAdams ?residence
WHERE {
  ?president dbpedia:officeHolder ""President of the United States"";
    dbpedia:term ""John Quincy Adams"";
    dbpedia:parent ?parentOfAdams .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?residence .
  ?president rdf:type dbpedia:Politician .
}",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
329,23,val,"Give me the birthplace of the author of The Tailor and Ansty and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"Given that we don't have direct access to DBpedia's endpoint here, I'll construct a hypothetical SPARQL query based on typical data structures:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?organization ?country
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Robert Bates"" .
  ?person dbpedia:birthPlace ?birthPlace .
  OPTIONAL { ?person dbpedia:associatedOrganization ?organization . }
  OPTIONAL { ?person dbpedia:locatedIn ?country . }
}
```

This query looks for a person named Robert Bates, extracts his birthplace, and optionally finds the associated organization and country he was located in. The `dbpedia:associatedOrganization` property might link him to British colonial entities if such information is available.",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
98,7,val,Give me the child of Emperor Go-Shirakawa and parent of the successor of Emperor Nijō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Nijō> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"SELECT ?child ?parent
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?child dbpedia:firstName ""AK"" ;
            dbpedia:birthDate ""1115-04-09"" ;
            dbpedia:deathDate ""1193-08-28"" .
  ?parent dbpedia:firstName ""Emperor Go-Shirakawa"" ;
           dbpedia:successor ?successor .
  ?successor a dbpedia:Person;
           dbpedia:hasParent ?parent .
}",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
926,50,val,"Give me the child of the father, that is a royalty, of Mustafa III and successor of the child of the spouse of Şermi Kadın.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childRoyalty ?successorChild
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father dbpedia:Mustafa_III .
  ?person a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:title ""royalty"" .
  ?successorChild a dbpedia:Person;
    dbpedia:sibling ?child .
  ?successorChild a dbpedia:Person;
    dbpedia:title ""child of Şermi Kadın"" .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
456,42,val,"Give me the spouse of the actor of Pacific Drive and professional in  and band of the band, that is a musical artist, of Dean Brody.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen""@en .
  ?person a dbpedia:Artist .
  ?person dbpedia:band dbpedia:Pacific_Drive .
  ?person dbpedia:role dbpedia:Actor .
  ?person foaf:spouse ?spouse .
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
433,51,val,"Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artistProfession
WHERE {
  ?album a dbpedia:Album;
    dbpedia:performer [ a dbpedia:Musician; foaf:name ""Scott LaFaro"" ] .
  ?album dbpedia:writer ?writer .
  ?writer a dbpedia:Person;
    dbpedia:profession ?artistProfession .
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
791,53,val,"Give me the predecessor of Emperor Antoku and father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?predecessorName ?fatherName ?spouseSpouseName
WHERE {
  ?emperor1 a dbpedia:Emperor;
    dbpedia:reignStart ""1180"" .
  ?emperor2 a dbpedia:Emperor;
    dbpedia:reignEnd ""1219"" .
  ?emperor2 dbpedia:successor ?emperor1.
  
  ?takakura a dbpedia:Monarch; 
    dbpedia:monarchKey ""Antoku"" ;
    dbpedia:father ?father .
  ?takakura dbpedia:spouse ?wife .
  ?wife a dbpedia:Person;
    dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:partner ?spouseSpouse .
  
  ?spouseSpouse a dbpedia:Person;
    dbpedia:name ""Go-Sanjō"" .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
47,52,val,"Give me the office of Ajoy Mukherjee and office of the administration of the commander, that is a politician, in Operation Green Hunt and office of the awardee of Banga Bhushan.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/governor> ?v3 . ?v5 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"SELECT ?office_mukherjee ?commander_office ?awardee_office
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Ajoy Mukherjee""@en .
  ?mukherjee dbpedia:office dbpedia:Chief_Minister_of_West_Bengal .

  ?operation a dbpedia:Event;
    dbpedia:name ""Operation Green Hunt""@en .
  ?commander rdfs:label ?commander_office .

  ?awardee dbpedia:award dbpedia:Banga_Bhusan ;
    dbpedia:recipient ?awardee_office .
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
892,41,val,Give me the landmark at elevation of the award of Anna Ishii and entity in the profession of Henri Crolla and entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?awardName ?elevation ?landmarkName ?entityName ?reggioEntityName
WHERE {
  ?award dbpedia:awardedTo ?person .
  ?person a dbpedia:Person; foaf:name ""Anna Ishii"" .
  
  ?profession rdfs:label ""Model"" .
  ?landmark rdfs:label ?elevation .
  ?landmark dbpedia:locatedIn ?location .
  ?profession dbpedia:hasFieldIn ?location .
  ?entity a dbpedia:Person; foaf:name ?entityName .
  ?entity dbpedia:residencePlace ?location .
  ?reggioRegion rdfs:label ""Province of Reggio Emilia"" .
  ?entity dbpedia:birthPlace ?reggioRegion .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
773,46,val,Give me the parent of the successor of Charles the Bald and spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parentSpouse
WHERE {
  ?successor a dbpedia:Person;
    dbpedia:monarchOf ?charles_bald .
  ?successor father ?father .
  ?father a dbpedia:Person;
    dbpedia:name ""Louis the Pious"" .
  ?father spouse ?spouse .
  ?bernard a dbpedia:Person;
    dbpedia:father ?charles_the_fat .
  ?charles_bald a dbpedia:Person;
    dbpedia:title ""Charles the Bald"" .
}",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
582,40,val,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as --10-19 and player in Kazuaki Nagasawa.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v2 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","SELECT ?residence WHERE {
  ?person a dbpedia:Character ;
    dbpedia:appearsInSeries dbpedia:Chainsaw_Man .
  ?person rdfs:label ""Hirotaka Sugawara""@en .
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
130,17,val,"Give me the entity in the administration, that is American, of the award of Živko Ključe and figure known as Vanderbilt Commodores.",SELECT ?result WHERE { <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Vanderbilt_Commodores> . ?result <http://dbpedia.org/ontology/state> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?americanAdministration
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Yugoslavia"" .
  ?award dbpedia:awardedTo ?person .
  ?award rdfs:label ""Živko Ključev Award"" . # Assuming there's an award named after Živko Ključe
  ?americanAdministration a dbpedia:Organization;
    dbpedia:country ""United States"" .
  ?award dbpedia:adminedBy ?americanAdministration .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
965,54,val,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?grandparent
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthDate ""1854-05-24"";
    dbpedia:occupation ""Politician"" .
  ?person1 ns:spouse ?spouse1 .
  ?spouse1 a dbpedia:Person;
    dbpedia:spouse ?wife1 .
  ?child a dbpedia:Person;
    dbpedia:parent ?person1;
    dbpedia:royalty true .
  ?child ns:child ?grandchild .
  ?grandchild a dbpedia:Person;
    dbpedia:birthDate ""1890"";
    dbpedia:parent ?parentOfChild .
  ?parentOfChild a dbpedia:Person;
    rdfs:label ""Louis Mountbatten, 1st Earl Mountbatten of Burma""@en
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
965,50,val,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find the person born on 1854-05-24 who is a politician
SELECT ?politicianBorn WHERE {
  ?politicianBorn a dbpedia:Person;
    dbpedia:birthday ""1854-05-24""^^xsd:date;
    dbpedia:occupation ""Politician"" .
}

# Step 2: Determine their parents
SELECT ?parent1 ?parent2
WHERE {
  ?politicianBorn dbpedia:hasParent ?parent1 .
  ?politicianBorn dbpedia:hasParent ?parent2 .
}

# Step 3: Identify the child of these parents who is a royalty
SELECT ?royaltyChild WHERE {
  ?child a dbpedia:Person;
    dbpedia:birthParent ?parent1 ;
    dbpedia:birthParent ?parent2 .
  ?child dbpedia:isRoyalty true .
}

# Step 4: Determine the parents of this child
SELECT ?royaltyParent1 ?royaltyParent2
WHERE {
  ?royaltyChild a dbpedia:Person;
    dbpedia:hasParent ?royaltyParent1 .
    dbpedia:hasParent ?royaltyParent2 .
}

# Step 5: Verify if one of these parents is also the parent of Prince George of Battenberg
SELECT ?parentCommon WHERE {
  ?royaltyChild dbpedia:hasParent ?parentCommon .
  dbpedia:Person _:p1 ;
    dbpedia:birthParent ?parent1 ;
    dbpedia:deathPlace ""Battenberg, United Kingdom""^^xsd:string . # Assuming George of Battenberg's parents are known to be from Battenberg
}

# Combine all the queries to get the final answer
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
826,41,val,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child ?royaltyTitle ?successorTitle
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Louis I, Grand Duke of Hesse"" .
  ?child dbpedia:spouse ?spouse .
  ?child a dbpedia:Royalty .
  ?successor a dbpedia:Person;
    dbpedia:parent ?child;
    dbpedia:name ?successorTitle .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
456,48,val,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and band of the band, that is a musical artist, of Dean Brody.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actorSpouse
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:role [ dbpedia:hasActor ?actor ] .
  ?actor dbpedia:bandMemberOf dbpedia:Dean_Brody_Band .
  ?actor foaf:spouse ?actorSpouse .
}
```

This SPARQL query does the following:
- It selects the spouse (`?actorSpouse`) of any `Person` (`?actor`) who has the role in a movie or TV show (identified by having a `dbpedia:hasActor` property linking to them) and is a member of the band `Dean_Brody_Band`.
- It filters this list to only include those actors who are indeed part of the band with Dean Brody (`?actor dbpedia:bandMemberOf dbpedia:Dean_Brody_Band`).",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
124,51,val,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }",PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?birthPlace ?deathPlace WHERE { ?person a dbpedia:Person; dbpedia:birthDate '1850-06-24' . ?person a dbpedia:Person; dbpedia:militaryForce ?militaryForce . ?militaryForce a dbpedia:MilitaryConflict . },5,10,6,3,2,3,3,71,0,0,1085,0,0.0,0
124,52,val,"Give me the military force of Battle of Atbara and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Battle of Atbara details
SELECT ?battleName ?commander ?militaryForce WHERE {
  ?battle a dbpedia:Event; dbpedia:name ""Battle of Atbara"" .
  ?battle a dbpedia:MilitaryConflict .
  ?battle dbpedia:commandedBy ?commander .
  ?commander a dbpedia:Person .
  
# 'A' Battery, Royal Australian Artillery details
SELECT ?batteryName ?militaryUnit WHERE {
  ?battery a dbpedia:Battery; dbpedia:name ""A"" Battery, Royal Australian Artillery"" .
  ?battery a dbpedia:MilitaryUnit .
  ?battery dbpedia:partOf ?militaryForce .
  ?militaryForce a dbpedia:MilitaryForce .
}

# Frank Rhodes details
SELECT ?societalEvent ?warName ?militaryUnit WHERE {
  ?person a dbpedia:Person; foaf:name ""Frank Rhodes"" .
  ?person a dbpedia:BritishArmyOfficer .
  ?person dbpedia:partOf ?militaryUnit .
  ?militaryUnit a dbpedia:MilitaryUnit; dbpedia:name ""A"" Battery, Royal Australian Artillery"" .
  ?war a dbpedia:SocietalEvent; dbpedia:name ""World War II"" .
  ?war dbpedia:startYear 1939 .
  ?war dbpedia:endYear 1945 .
}
```",6,14,7,3,3,3,3,71,0,0,1,0,0.0,0
170,22,val,Give me the birth place of the awardee of People's Artist of Russia and entity in the work of International Energy Agency.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?birthPlace ?deathPlace WHERE { ?person a dbpedia:Person; dbpedia:birthPlace ?birthPlace . ?person a dbpedia:Person; dbpedia:deathPlace ?deathPlace . [ ?person rdfs:label 'AK Abdul Momen' ] },4,4,5,2,2,2,3,28,0,0,12,0,0.0,0
839,40,val,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of Peter Schorowsky and band of Matthias Röhr.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?band
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    foaf:musicGenre ""Musical Artist"";
    dbpedia:bandMember ?band .
  FILTER (STRSTARTS (?band, 'The') OR STRSTARTS (?band, 'Peter Schorowsky's')).
  FILTER (STRSTARTS (?band, 'Matthias Röhr')).
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
507,50,val,"Give me the professional in the profession of Guy Ferland and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/director> ?result . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?directorName ?birthDate WHERE {
  ?movie a dbpedia:Film;
    dbpedia:productionCompany ?productionCompany .
  ?actor dbpedia:actIn ?movie ;
            dbpedia:birthDate ?birthDate .
  ?director a dbpedia:Person;
    dbpedia:name ?directorName ;
    dbpedia:birthDate ?birthDate .
  FILTER (?birthDate <= ""1919-06-17"") .
  ?productionCompany rdfs:label ""RKO Radio Pictures"" .
  BIND(?directorName AS ?directorName) .
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
987,54,val,"Give me the entity in Montenegro and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person dbpedia:period_start ""1858-08-10""^^xsd:date ;
               dbpedia:period_end ""1947-08-15""^^xsd:date .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
926,44,val,"Give me the successor of the child of Ahmed III and father of Mahmud II and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father dbpedia:SultanAhmedIII ;
    dbpedia:succeededBy ?successor .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
826,48,val,Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of the child of the father of Anna Magdalena Appel.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parentOfSpouse
WHERE {
  ?spouse a dbpedia:Person;
    dbpedia:child ?johann_sebastian_bach .
  ?johann_sebastian_bach a dbpedia:Person;
    dbpedia:father ?johann_ambrosius_bach .
  ?johann_ambrosius_bach a dbpedia:Person;
    dbpedia:spouse ?anna_magdalena_wilcke .
  ?anna_magdalena_wilcke a dbpedia:Person;
    dbpedia:child ?prince_friedrich_spouse .
  ?prince_friedrich_spouse a dbpedia:Person;
    dbpedia:parent ?parent_of_spouse
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
459,19,val,"Give me the governor of Dana Murphy and governor of the death place, that is a settlement, of Cliff Roquemore and person born as John Kevin Stitt.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor1 ?governor2 ?birthPlaceStitt ?deathPlaceStitt
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:role ""Governor of Dana Murphy"" .
  ?person2 a dbpedia:Person;
    dbpedia:role ""Governor of Cliff Roquemore"" .

  ?stitt a dbpedia:Person;
    dbpedia:name ""John Kevin Stitt"";
    dbpedia:birthPlace ?birthPlaceStitt .
  ?stitt a dbpedia:Person;
    dbpedia:deathPlace ?deathPlaceStitt .

  ?person1 ns:Governor ?governor1 .
  ?person2 ns:Governor ?governor2 .
  ?birthPlaceStitt a dbpedia:SpatialThing .
  ?deathPlaceStitt a dbpedia:SpatialThing .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
124,42,val,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of Battle of Tamai and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander ?event
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Egypt"" .
  ?person dbpedia:deathPlace ""Boutros Boutros Ghali, Egypt"" .
  ?person rdfs:label ""Herbert Kitchener"" .
  ?battle a dbpedia:Event;
    dbpedia:participatingMilitaryForts [ memberOf dbpedia:Military_force_of_Herbert_Kitchener ] .
  ?battery a dbpedia:Military_unit;
    dbpedia:commander ?commander .
  ?battle rdfs:label ""Anglo-Egyptian War"" .
  ?battle dbpedia:location ""Sudan"" .
}
```

This query looks for a person named Herbert Kitchener, born in Egypt and deceased in Boutros Boutros Ghali, Egypt. It also seeks the military unit (A Field Battery) under his command during an event related to the Anglo-Egyptian War in the Sudan.",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
445,51,val,Give me the entity in the award of the commander in Battle of Saint-Mihiel and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v1 <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commanderName ?battleAward ?deathPlace
WHERE {
  ?commander a dbpedia:Person;
    dbpedia:roleInBattle dbpedia:CommanderOfTheMonth .
  ?commander dbpedia:awardedBy dbpedia:RoyalAstronomicalSociety ;
    rdfs:label ?awardName .
  ?awardName rdfs:subPropertyOf dbpedia:warAward .
  ?battle a dbpedia:Event;
    dbpedia:participatedInBattle dbpedia:BattleOfSaintMihiel, 1918 .
  ?commander dbpedia:birthPlace ?birthPlace .
  ?deathPlace a dbpedia:Location .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
507,53,val,Give me the professional in the profession of Guy Ferland and director of Entertaining Mr Sloane (film) and spouse of the person born as the birth name of Anne V. Coates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?actorName ?spouseName
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:roleInFilm ""Director"";
    dbpedia:film ""Entertaining Mr. Sloane"" .
  ?actor dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:name ""Anne V. Coates""@en .
}",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
791,55,val,"Give me the spouse of the spouse, that is a royalty, of Emperor Takakura and father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of Emperor Takakura.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouseOfSpouse AS spouse_of_spouse, ?royaltySpouse, ?precedessor
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:spouse ?spouse .
  ?person2 a dbpedia:Person;
    dbpedia:spouse ?spouse ;
    dbpedia:parent ?person1 .
  ?child a dbpedia:Person;
    dbpedia:child ?child ;
    dbpedia:predecessor ?precedessor .
  ?child a dbpedia:Royalty .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
527,15,val,"Give me the actor of the movie, that is a work and English and a television show, with the professional in Actor and author of The Boy Who Kicked Pigs.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/The_Boy_Who_Kicked_Pigs> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?actor
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?actor a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  OPTIONAL { 
    ?actor dbpedia:roleInFilm [ property <http://dbpedia.org/ontology/movie> ] .
    ?actor dbpedia:roleInTVSeries [ property <http://dbpedia.org/ontology/tv_series> ] .
  }
  FILTER ( EXISTS ?movie WHERE {
    ?actor dbpedia:roleInFilm ?movie .
    ?movie rdfs:label ""The Boy Who Kicked Pigs""@en
  })
  FILTER ( EXISTS ?tvSeries WHERE {
    ?actor dbpedia:roleInTVSeries ?tvSeries .
    ?tvSeries rdfs:label ""The Boy Who Kicked Pigs""@en
  })
}",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
274,19,val,"Give me the associated musical artist of Cecil Taylor and professional in  and band member of the person born, that is a musical artist, as John Birks Gillespie.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?musicalArtist WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""John Birks Gillespie""@en;
    dbpedia:role ""Bandleader and Solo Artist""@en .
  ?band a dbpedia:Band;
    dbpedia:members ?person .
  ?musicalArtist a dbpedia:MusicalArtist;
    dbpedia:associatedWith ?band .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
579,17,val,"Give me the native of Edinburgh and person born as the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName ?nativePlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:nativePlace ?nativePlace .
  ?person a dbpedia:OfficeHolder;
    dbpedia:officeLocation dbpedia:Edinburgh .
  ?person rdfs:label ?birthName .
  FILTER (str(?birthName) = ""AK Abdul Momen"")
}
```",4,5,5,3,2,3,2,20,0,0,18,0,0.0,0
933,44,val,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and reference to the birth name of Alan Warner (musician) and band of Mike Elliott (saxophonist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName ?birthName
WHERE {
  ?musician a dbpedia:Musician;
    dbpedia:name ?birthName .
  ?musician dbpedia:band ?bandName .
  FILTER (?musician = Alan Warner) OR (?musician = Mike Elliott)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
839,46,val,"Give me the band of the member of Böhse Onkelz and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band1 ?band2
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Philadelphia, Pennsylvania"" .
  ?person rdfs:label ""Kevin Russell""@en .
  ?person dbpedia:musicalGenre ""Rock"" .
  ?person dbpedia:role ""Musician"" .
  ?band1 a dbpedia:Band; member ?person .
  ?band2 a dbpedia:Band; birthPlace ""Philadelphia, Pennsylvania"" .
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
926,55,val,"Give me the child of the father, that is a royalty, of Mustafa III and father of the father of Abdulaziz and successor of the child of Ahmed III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child1 ?royaltyChild1 ?abdulazizFather ?mustafaIIIChild ?ahmedIIIChild 
WHERE {
  ?mustafaIII a dbpedia:Monarch;
    dbpedia:reignStart ""1774-1798"" .
  ?mustafaIIIChild a dbpedia:Person;
    dbpedia:parent ?abdulazizFather .
  ?abdulazizFather a dbpedia:Person;
    dbpedia:child ?mustafaIIIChild .
  ?mustafaIIIChild a dbpedia:Royalty .

  ?ahmedIII a dbpedia:Monarch;
    dbpedia:reignStart ""1703-1730"" .
  ?ahmedIIIChild a dbpedia:Person;
    dbpedia:parent ?childOfAhmedIII .
  ?childOfAhmedIII a dbpedia:Person;
    dbpedia:child ?ahmedIIIChild .

  ?mustafaIIIChild ns:father ?abdulazizFather .
  ?ahmedIIIChild ns:child ?childOfAhmedIII
}

```

This query will help us identify the required individuals based on their relationships and roles within the context of the British Raj.",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
443,21,val,Give me the birthplace of Ulf Lundell and landmark at elevation of 28 and birthplace of the work of yes.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""yes""@en . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbppro: <http://dbpedia.org/property/>

# Query for Ulf Lundell's birthplace
SELECT ?birthPlace WHERE {
  ?person dbpedia:hasUrl ""http://dbpedia.org/resource/Ulf%20Lundell"";
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
}

# Query for a landmark with elevation 28 meters
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?landmark ?elevation WHERE {
  ?landmark a dbppro:Landmark;
    owl:sameAs ?landmark_uri .
  ?landmark_uri rdfs:label ""Landmark Name""@en;
    dbppro:elevationInMeters ""28"" .
}

# Query for the birthplace of a specific work by Yes
SELECT ?workBirthPlace WHERE {
  ?band dbpedia:hasUrl ""http://dbpedia.org/resource/Yes"";
  ?album a dbpedia:Album;
    dbpedia:performer ?band;
    dbpedia:releaseDate ""1971-03-01""; # Example release date for an album
    dbpedia:birthPlace ?workBirthPlace .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
98,19,val,Give me the entity in Philippines and region of the time zone of Lopez Jaena and birth place of Paolo Ballesteros.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?timeZone
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Lopez Jaena""@en .
  ?person geo:locatedIn dbpedia:Philippines .

  ?player a dbpedia:Person;
    dbpedia:name ""Paolo Ballesteros""@en .
  ?player dbpprop:birthPlace ?birthPlace .

  OPTIONAL {
    ?timeZone a dbpedia:Timezone;
      dbpedia:name ""Time Zone of Lopez Jaena's Region""@en .
    ?person rdfs:label ?timeZone .
  }
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
124,40,val,"Give me the military force of Battle of Tamai and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of Battle of Atbara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?militaryForce ?commander
WHERE {
  ?battle rdfs:label ""Battle of Tamai"" .
  ?battle a dbpedia:Event; dbpedia:partOfMilitaryConflict ?conflict .
  ?conflict a dbpedia:MilitaryConflict; dbpedia:combatant ?militaryForce .
  ?militaryForce a dbpedia:Organization; dbpedia:unit ?unit .
  ?unit rdfs:label ""A Battery, Royal Australian Artillery"" .
  ?battle dbpedia:commandedBy ?commander .
}",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
715,43,val,"Give me the leader of Ministry of the Air (Spain) and commander in Rif War and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolder true .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
  OPTIONAL { 
    ?person dbpedia:roleInRifWar ""Commander in Rif War"" .
    ?person dbpedia:roleIn1933Election ""President of Spain (1933)"" .
  }
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
456,45,val,"Give me the spouse of Danielle Spencer (Australian actress) and professional in  and band of the band, that is a musical artist, of the band of Alan Doyle.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Danielle Spencer""@en .
  ?person dbpedia:partner ?husband .
  ?husband a dbpedia:Musician; dbpedia:band dbpedia:Great Big Sea .
  ?husband rdfs:label ""Alan Doyle""@en .
  ?spouse a dbpedia:Person;
    dbpedia:name ?name
  .
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
573,49,val,"Give me the person decedent at the administration, that is a region, of Charlie Baker and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?authorParent
WHERE {
  ?john_quincy_adams a dbpedia:Person;
    dbpedia:officeHolder ""President of the United States"";
    dbpedia:politicalOffice ""6th President of the United States"" .
  ?work a dbpedia:CreativeWork;
    dbpedia:author ?author .
  ?author a dbpedia:Person;
    dbpedia:parent ?authorParent .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
773,40,val,Give me the parent of Carloman of Bavaria and parent of Charles the Fat and spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find the father of Carloman of Bavaria
SELECT ?father_of_carloman WHERE {
  dbpedia:Carloman_of_Bavaria a dbpedia:Person;
    dbpedia:father ?father_of_carloman
}

# Step 2: Find the father of Charles the Fat
SELECT ?father_of_charles WHERE {
  dbpedia:Charles_the_Fat a dbpedia:Person;
    dbpedia:father ?father_of_charles
}

# Step 3: Find the common father between Carloman and Charles the Fat
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
CONSTRUCT {
  ?common_father rdf:type dbpedia:Person;
    dbpedia:father ?father_of_common
}
WHERE {
  ?father_of_carloman rdf:type dbpedia:Person .
  ?father_of_charles rdf:type dbpedia:Person .
  ?father_of_carloman dbpedia:father ?father_of_common .
  ?father_of_charles dbpedia:father ?father_of_common .
}
# Step 4: Determine the spouse of the common father
SELECT ?spouse_of_father WHERE {
  ?common_father a dbpedia:Person;
    dbpedia:spouse ?spouse_of_father
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
166,17,val,"Give me the resting place of Gonzalo Queipo de Llano and entity in the territory administered, that is a country, from the reference to Madrid.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?v3 <http://dbpedia.org/ontology/capital> ?v0 . <http://dbpedia.org/resource/Gonzalo_Queipo_de_Llano> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v3 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person dbo:residencePeriodStart ""Madrid""^^xsd:string ;
    dbo:residencePeriodEnd ""Madrid""^^xsd:string .
}",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
445,50,val,Give me the entity in the award of George H. Cameron and death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person dbpedia:establishmentDate ""1820-03-10"" .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
508,15,val,"Give me the birthplace of Ma Bufang and birthplace of the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ma_Bufang> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v0 . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?birthPlace1 ?birthPlace2 WHERE { ?person1 a dbpedia:Person; dbpedia:birthPlace ?birthPlace1 . ?person2 a dbpedia:Person; dbpedia:birthPlace ?birthPlace2 . FILTER ( (?person1 != ?person2) ) },4,8,5,3,2,3,2,20,3,109571,0,2.737875773449906e-05,1.0,5.475601631729286e-05
47,49,val,"Give me the office of the administration of Jagdeep Dhankhar and office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?officeAdmin ?awardOffice
WHERE {
  ?person a dbpedia:Person;
    dbpedia:role dbpedia:Politician .
  ?person dbpedia:office ?officeAdmin .
  
  ?awardee a dbpedia:Person;
    dbpedia:role dbpedia:Awardee .
  ?awardee dbpedia:office ?awardOffice .
  
  ?officeAdmin rdfs:label ""Office of the administration""@en.
  ?awardOffice rdfs:label ""Office of the awardee""@en.
}
```

This query looks for individuals with the role of Politician and extracts their office (officeAdmin), as well as individuals with the role of Awardee and their office (awardOffice). It filters the results to ensure that the offices are labeled in English as ""Office of the administration"" and ""Office of the awardee"", respectively.",5,6,6,3,2,3,3,71,0,0,11,0,0.0,0
826,52,val,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v2 <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/successor> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Louis I, Grand Duke of Hesse""@en .
  ?child rdfs:label ""Frederick William"" @en; # Based on historical facts
    dbpedia:monarchOf ?monarchy .
  ?monarchy a dbpedia:Monarchy;
    rdfs:label ""Grand Duke of Mecklenburg-Schwerin""@en .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
417,54,val,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v5 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:father dbpedia:King_Frederick_VIII_of_Denmark .
  ?parent a dbpedia:Person;
    dbpedia:mother dbpedia:Queen_Alexandrine_of_Mecklenburg-Schwerin .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
976,45,val,Give me the office of Meral Akşener and office of Mustafa Şentop and office of the person born as the birth name of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office1 ?office2 ?birthName
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:name ""Meral Akşener""@en .
  ?person1 dbpedia:office ?office1 .
  ?person2 a dbpedia:Person;
    dbpedia:name ""Mustafa Şentop""@en .
  ?person2 dbpedia:office ?office2 .
  ?birthPerson a dbpedia:Person;
    dbpedia:name ?birthName .
  ?birthPerson dbpedia:birthParent ?person1 .
  ?birthPerson dbpedia:birthParent ?person2 .
}",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
216,49,val,"Give me the player in the coach of Croatia national under-21 football team and team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?playercoach WHERE {
  ?playercoach a dbpedia:SoccerPlayer, dbpedia:Manager;
    dbpedia:birthPlace ?birthLocation .
  ?birthLocation rdfs:label ""Birthplace of Pavel Vezhinov""@en .
  ?playercoach foaf:name ?playerName .
  ?pavelVezhinov a dbpedia:Person;
    dbpedia:deathDate 2017-04-01;
    dbpedia:birthPlace ?birthLocation .
  ?playercoach foaf:isA ?pavelVezhinov .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
933,50,val,"Give me the reference to the birth name of the professional in Musician and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthName
WHERE {
  ?person rdf:type dbpedia:Musician .
  ?person rdfs:label ""Alan Warner""@en .
  ?person a dbpedia:BandMember ;
    dbpedia:band dbpedia:The_Vaselines .
}",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
445,46,val,"Give me the death place of the awardee of Royal Astronomical Society and entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedBy dbpedia:RoyalAstronomicalSociety ;
    dbpedia:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?countryLabel .
  ?countryLabel rdfs:subClassOf [ owl:intersectionOf (owl:Thing) [ owl:propertyChainAxioms (
    owl:SymmetricProperty ;
    owl:onProperty dbpedia:residenceCountry
    )]] .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
874,16,val,"Give me the band of the writer, that is an artist and a musical artist, of Mezzanine (album) and band of the band member of The Jones Gang.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?artist a dbpedia:Artist ;
            dbpedia:musicalArtist yes .
  ?album dbpedia:hasArtist ?artist .
  ?album rdfs:label ""Mezzanine"" .

  ?bandMember a dbpedia:BandMember ;
             dbpedia:band ?band .

  ?bandMember foaf:memberOf ?band .

  ?band rdfs:label ?bandName .
}",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
83,17,val,"Give me the ruling party in Fortaleza and party of the governor of the commander, that is a politician, in Central African Republic Civil War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Fortaleza> <http://dbpedia.org/property/leaderParty> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/governor> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for Fortaleza's ruling party (assumed to be same as federal)
SELECT ?fortaleza_ruling_party WHERE {
  ?fortaleza a dbpedia:City; dbpedia:name ""Fortaleza"" .
  ?fortaleza rdfs:label ?fortaleza_ruling_party .
}

# Query for the governor of the commander in the Central African Republic Civil War
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?governor_party WHERE {
  ?governor a dbpedia:Politician; dbpedia:office ""Governor of Central African Republic"" .
  ?governor rdf:type dbo:Role .
  ?governor rdfs:label ?governor_party .
  # Considering the time frame of the civil war, we need to find relevant parties during that period
  FILTER (dbo:startDateOfConflict ""2012-03-24T00:00:00Z"" AND dbo:endDateOfConflict ""2013-01-11T00:00:00Z"")
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
456,53,val,"Give me the band of the band, that is a musical artist, of Dean Brody and spouse of the actor of the movie, that is a work and a television show, with Ross Newton and professional in .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:hasRole dbpedia:Actor ;
    dbpedia:inSeries ""Wentworth"" .
  ?band a dbpedia:Band;
    dbpedia:member ?artistName .
  ?artistName rdfs:label ?bandName .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
417,51,val,"Give me the child of the father of Frederick IX of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?grandparent a dbpedia:Person;
    dbpedia:father dbpedia:Christian_X_of_Denmark .
  ?child a dbpedia:Person;
    dbpedia:parent ?grandparent .
    [ ?child a dbpedia:Royalty ]
  }
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
36,20,val,Give me the person born in the birth year of Deanne Bray and actor of Being Mrs Elliot and person born as Ayo Makun.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace1 .
  ?person1 dbpedia:actInRole dbpedia:Actor; dbpedia:role ""Being Mrs Elliot"" .
  ?person2 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace2 .
  ?person2 rdfs:label ""Ayo Makun""@en .
  ?birthPlace1 ns:match ?birthPlace2 .
}",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
507,48,val,Give me the professional in the profession of Guy Ferland and spouse of the person born as the birth name of Anne V. Coates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthNameProfession ?spouse
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:name ""Anne V. Coates""@en;
    dbpedia:birthName ?birthName .
  ?birthName rdf:type dbpedia:PersonName .
  ?person2 a dbpedia:Person;
    dbpedia:name ""Guy Ferland""@en;
    dbpedia:profession ?birthNameProfession .
  ?person1 dbpedia:spouse ?spouse .
  ?birthName rdfs:label ?birthNameProfession .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
933,49,val,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of the band of Alan Warner (musician).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1947-04-21""^^xsd:date;
    dbpedia:role dbpedia:Musician .
  ?person rdfs:member ?band .
  ?band a dbpedia:Band .
}

AND

PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1971-10-10""^^xsd:date; # Assuming Alan Warner's birth date
    dbpedia:role dbpedia:Musician .
  ?person rdfs:member ?band .
  ?band a dbpedia:Band .
}",5,9,6,3,2,3,3,71,0,0,4,0,0.0,0
465,49,val,"Give me the successor of the child of Alfonso I d'Este and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . }","Given that Alfonso I d'Este had a daughter named Isabella d'Este, we need to find her successor who was a royalty. Charles Orlando, Dauphin of France's father was Charles VII of France. We need to find a royal successor of Isabella d'Este.

However, without specific information about the exact succession rules or additional context, we assume that the successor would be someone related to the royal family of Italy during the period relevant to Alfonso I d'Este and Charles VII of France's lifetimes (approximately 1407-1467).

A SPARQL query to find such a successor might look like this:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor WHERE {
  ?child a dbpedia:Person; dbpedia:parent [ dbpedia:hasChild ?person ] .
  ?person a dbpedia:Royalty; dbpedia:successor ?successor .
  ?child dbpedia:name ""Isabella d'Este"" .
  ?person dbpedia:parent [ dbpedia:name ""Charles VII of France"" ] .
}
```

This query searches for a person (`?child`) who is the child of Alfonso I d'Este (`?child dbpedia:name ""Isabella d'Este""`), has a parent who is a royalty (`?person a dbpedia:Royalty`), and that person is the successor of someone (`?person dbpedia:successor ?successor`). The parent of `?child` is specified as Charles VII of France.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
456,46,val,"Give me the professional in the alter ego of The Shadow and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?actor WHERE { 
  ?actor a dbpedia:Person; dbpedia:role dbpedia:The_Shadow . 
  ?actor dbpedia:spouse [ dbpedia:role dbpedia:Margo_Lane ] . 
  ?actor dbpedia:appearedIn dbpedia:Wiseguy . }",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
554,15,val,Give me the leader of the administration of the party member of Independent politician and leader of Portuguese Mozambique.,SELECT ?result WHERE { <http://dbpedia.org/resource/Portuguese_Mozambique> <http://dbpedia.org/property/leader> ?result . ?v1 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . ?v1 <http://dbpedia.org/property/leader> ?v0 . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?leader WHERE { ?person a dbpedia:Person; dbpedia:birthPlace mozambique; dbpedia:politicalAffiliation dbpedia:Independent ; dbpedia:role dbpedia:Leader_of_Mozambique . },4,4,5,3,2,3,2,20,0,0,3,0,0.0,0
888,16,val,"Give me the commander in the force, that is a societal event and an event, of Serhiy Kotenko and awardee of the award of Oleksandr Syrskyi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander ?event WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Serhiy Kotenko""@en .
  ?event a dbpedia:Event;
    dbpedia:participatedBy ?person;
    dbpedia:awardedWith dbpedia:Award_Admired_by_Soviet_Union ;
    dbpedia:commander ?commander .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
417,45,val,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and spouse of Princess Caroline-Mathilde of Denmark and child of Christian X of Denmark.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchild WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?child a dbpedia:Person;
    dbpedia:hasChildAndIsParentOf ?grandchild .
  ?parent dbpedia:isSpouseOf dbpedia:Princess_Caroline_Mathilde_of_Denmark .
  ?parent dbpedia:parents dbpedia:Alexandrine_of_Mecklenburg-Schwerin .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
93,16,val,"Give me the death place of the governor of Bob Bartlett and capital of the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query to find the death place of the governor of Bob Bartlett
SELECT ?governorName ?governorDeathPlace
WHERE {
  ?governor a dbpedia:Person;
    dbpedia:officeHolderRole [ owl:hasValue ""Governor of Bob Bartlett"" ];
    dbpedia:deathPlace ?governorDeathPlace .
  FILTER (lang(?governorName) = ""en"")  # Assuming the information is in English
}

# Query to find the capital (headquarter) of Lake Clark National Park and Preserve
SELECT ?capitalName ?capitalRegion
WHERE {
  ?park a dbpedia:NationalPark;
    dbpedia:name ""Lake Clark National Park and Preserve"" .
  ?park dbpedia:hasHeadquarter [ owl:hasValue ?capitalName ] .
  ?capital a dbpedia:Settlement ;
    dbpedia:region ?capitalRegion .
  FILTER (lang(?capitalName) = ""en"")  # Assuming the information is in English
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
582,50,val,"Give me the figure known as the nickname of Japan national football team and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?childName ?nickname
WHERE {
  ?child a foaf:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Kazuaki Nagasawa""@en ;
    foaf:type [ owl:sameAs ""athlete"" ] ;
    foaf:type [ owl:sameAs ""soccer manager"" ] ;
    dbpedia:child ?child .
  ?child a foaf:Person;
    dbpedia:nationalTeamMemberOf dbpedia:Japan national football team ;
    foaf:name ?childName ;
    dbpedia:nickname ?nickname .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
573,43,val,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of John Quincy Adams and person decedent at Massachusetts.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v0 <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parentName ?birthPlace ?deathPlace
WHERE {
  ?john_quincy_adams a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ?parentName ;
    dbpedia:nationality ""United States"";
    dbpedia:birthPlace ?birthPlace .
  ?parent a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?john_quincy_adams dbpedia:father ?parent.
}
```",5,7,6,3,3,3,3,71,0,0,2,0,0.0,0
573,50,val,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?authorParent ?residence
WHERE {
  ?author a dbpedia:Person;
    dbpedia:parent ?authorParent .
  ?author dbpedia:occupation dbpedia:Politician .
  ?author dbpedia:birthPlace ?birthPlace .
  ?profession a dbpedia:OfficeHolder ;
    dbpedia:office dbpedia:Exchequer_Standards ;
    dbpedia:nationality dbpedia:United_Kingdom ;
    dbpedia:residence ?residence .
  ?profession dbpedia:country dbpedia:United_States .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
166,16,val,"Give me the resting place of the military force of Spanish Civil War and entity in the territory administered, that is a country, from Madrid.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?restingPlace
WHERE {
  ?army a dbpedia:MilitaryForce;
    dbpedia:conflict dbpedia:Spanish_Civil_War .
  ?army dbpedia:headquarter dbpedia:Madrid .
  ?army dbpedia:restingPlace ?restingPlace .
}",4,5,5,2,2,3,2,20,0,0,4,0,0.0,0
508,17,val,"Give me the birthplace of Ma Hongkui and birthplace of the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v0 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ma_Hongkui> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?birthPlace ?deathPlace 
WHERE { 
?person a dbpedia:Person; 
bdb:birthPlace ?birthPlace . 
?person a dbpedia:Person; 
bdb:deathPlace ?deathPlace . 

FILTER ( 
dbp:conflictLabel ?conflict ""Indian Rebellion of 1857"" ) 
}",4,7,5,3,2,3,2,20,0,0,3,0,0.0,0
170,21,val,Give me the domain of the profession of John Scholey and birth place of Era Ziganshina and entity in Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v0 . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personName ?profession ?birthPlace ?entityInRussia
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:occupation ?profession .
  OPTIONAL { ?person rdfs:label ?personName }
  FILTER (lang(?personName) = ""ru"")  # Filter for entities in Russia
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
965,45,val,"Give me the parent of Louise Mountbatten and spouse of Prince Louis of Battenberg and parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthName
WHERE {
  ?person a dbpedia:Noble;
    dbpedia:name ""George Mountbatten, 2nd Marquess of Milford Haven"";
    dbpedia:birthName ?birthName .
  ?parent1 a dbpedia:Person;
    dbpedia:name ""Victor Alexander Mountbatten, 2nd Earl Mountbatten of Burma"" .
  ?parent2 a dbpedia:Person;
    dbpedia:name ""Lady Pamela Plumer"" .
  ?marriage a dbpedia:Marriage;
    dbpedia:partner1 ?spouse ;
    dbpedia:partner2 ?person .
  ?spouse a dbpedia:Person;
    dbpedia:name ""Princess Victoria of Hesse and by Rhine"" .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
417,53,val,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of Christian X of Denmark.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchildName ?royaltyTitle
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Frederick Francis III"" ;
    dbpedia:monarchOf dbpedia:Mecklenburg-Schwerin .
  ?child a dbpedia:Person;
    dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person;
    rdfs:label ""Christian X of Denmark"" ;
    dbpedia:monarchOf dbpedia:Denmark .
  ?child a dbpedia:Person;
    dbpedia:offspring ?offspring .
  ?offspring a dbpedia:Person;
    rdfs:label ?royaltyTitle .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
582,52,val,"Give me the figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player WHERE {
  ?player a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace ;
    dbpedia:deathPlace ?deathPlace ;
    dbpedia:sport ?sport ;
    dbpedia:role dbpedia:SoccerManager .
  ?player foaf:knows ?masamiNagasawa .
  ?masamiNagasawa a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace_of_masami ;
    dbpedia:deathPlace ?deathPlace_of_masami ;
    dbpedia:specialty ""Scientist"" .
}
```

This query looks for a person (`?player`) who is both an athlete (`dbpedia:sport`) and a soccer manager (`dbpedia:role dbpedia:SoccerManager`), and who knows Masami Nagasawa. Additionally, Nagasawa must be a scientist (`dbpedia:specialty ""Scientist""`).",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
965,41,val,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the child, that is a royalty, of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?grandfather ?grandmother
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Scotland"";
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""William Montagu Douglas Scott, 3rd Duke of Buccleuch"";
    dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person;
    dbpedia:name ""Henry Scott, 3rd Duke of Roxburghe"" .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
773,50,val,"Give me the parent of the child, that is a royalty, of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parentOfYounger ?parentOfLothair
WHERE {
  ?youngergroup dbpedia:child [ dbpedia:hasParent ?parentOfYounger ] .
  ?lothairgroup dbpedia:child [ dbpedia:hasParent ?parentOfLothair ] .
  ?parentOfYounger dbpedia:parent [ dbpedia:name ""Louis the German"" ] .
  ?parentOfLothair dbpedia:parent [ dbpedia:name ""Louis the Pious"" ] .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
124,46,val,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?war ?militaryForce ?unit
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""United Kingdom"" .
  ?person a dbpedia:BritishMilitaryPerson ;
    dbpedia:militaryConflict ?war .
  ?war a dbo:MilitaryConflict ;
    dbo:involvedMilitaryUnit ?militaryForce .
  ?militaryForce a dbo:MilitaryForce ;
    rdfs:label ?militaryLabel .
  ?unit a dbo:MilitaryUnit ;
    rdfs:label ?unitLabel .
  ?person dbpedia:serveInMilitaryUnit ?unit .
}
```",5,13,6,3,2,3,3,71,0,0,9,0,0.0,0
582,27,train,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?nickname
WHERE {
  ?player a dbpedia:Person;
    dbpedia:sport [ dbpedia:hasTeam ?team ];
    dbpedia:fullname ""Hajime Moriyasu"" .
  ?team a dbpedia:SportsTeam;
    dbpedia:name ?name ;
    dbpedia:nickname ?nickname .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
47,1,train,Give me the office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office WHERE {
  ?person a dbpedia:Person;
    dbpedia:role ?office .
  ?person rdfs:label ""Bidesh Ranjan Bose""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
129,10,train,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"To extract this information from DBpedia, we can use the following SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor ?musicalArtist
WHERE {
  ?album a dbpedia:Album;
    dbpedia:artist ?actor .
  ?actor a dbpedia:Person;
    dbpedia:associatedBandOrArtist ?musicalArtist .
}
```

This query first identifies the album and its artist, then links the artist to the person (actor) involved. It finally connects the actor to their associated band or artist.",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
926,20,train,Give me the successor of the child of Ahmed III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?child a dbpedia:Person;
    dbpedia:father dbpedia:Sultan Ahmed III .
  ?child a dbpedia:Person;
    dbpedia:son ?grandson .
  ?grandson a dbpedia:Person;
    dbpedia:title ""Sultan Mahmud II"" .
  ?successor a dbpedia:Person;
    dbpedia:succeededBy ?grandson .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
933,6,train,Give me the birth name of Alan Warner (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthName ?birthName .
  ?person rdfs:label ""Alan Warner""@en .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
791,27,train,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:officeHolder true; 
    dbpedia:royalty true .
  ?child a dbpedia:Person;
    dbpedia:father ?parent .
}",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
216,35,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach of Croatia national under-21 football team.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1983-12-20"";
    dbpedia:role dbpedia:SoccerManager;
    dbpedia:role dbpedia:FootballManager;
    dbpedia:role dbpedia:SoccerPlayer;
    dbpedia:coaches dbpedia:Croatia national under-21 football team .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
579,14,train,"Give me the person born as the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?result <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName WHERE {
  ?officeHolder a dbpedia:OfficeHolder;
    dbpedia:officeLocation dbpedia:Edinburgh .
  ?officeHolder dbpedia:birthName ?birthName
}
```",3,4,4,3,1,3,2,20,0,0,20,0,0.0,0
170,10,train,Give me the birth place of the awardee of People's Artist of Russia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:title ""People's Artist of Russia"";
    dbpedia:birthPlace ?birthPlace .
}",2,2,3,2,1,2,3,28,0,0,33,0,0.0,0
465,21,train,Give me the successor of the child of Alfonso I d'Este and successor of Renée of France.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child_successor
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?child a dbpedia:Person;
    dbpedia:succeededBy ?child_successor .
  FILTER (OPTIONAL (?child rdf:type dbpedia:Monarch))
}

AND
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child_successor
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?child a dbpedia:Person;
    dbpedia:succeededBy ?child_successor .
  FILTER (OPTIONAL (?child rdf:type dbpedia:Monarch))
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
933,17,train,"Give me the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?artist a dbpedia:MusicalArtist;
    dbpedia:birthDate ""1947-04-21"" .
  ?band a dbpedia:Band; dbpedia:hasMember ?artist .
}
```

This SPARQL query will return the names of bands that have Alex Harvey as a member.",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
36,12,train,Give me the actor of Being Mrs Elliot and person born in 1971 and person born as Ayo Makun.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace ;
    dbpedia:yearOfBirth 1971 .
  ?person rdfs:label ""Ayo Makun""@en .
}",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
507,5,train,Who is the person born on 1919-06-17?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person rdf:type dbpedia:Person;
    dbpedia:name ""AK Abdul Momen""@en .
  ?person dbpedia:birthDate ""1919-06-17""^^xsd:date ;
    dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathDate ""1987-12-27""^^xsd:date ;
    dbpedia:deathPlace ?deathPlace .
}",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
917,29,train,Give me the child of the father of Keʻelikōlani and child of Kekūanāoʻa and parent of Albert Kamehameha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?parent1 a dbpedia:Person;
    dbpedia:father ?father1 .
  ?parent2 a dbpedia:Person;
    dbpedia:mother ?mother2 .
  ?child a dbpedia:Person;
    dbpedia:child ?child_of_father_and_mother .
  ?child_of_father_and_mother ns:parent ?parent1 .
  ?child_of_father_and_mother ns:parent ?parent2 .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
465,37,train,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Renée of France.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?maximilian2 a dbpedia:Person;
    dbpedia:birthDate ""1527-05-01"";
    dbpedia:parent ?elizabeth;
    dbpedia:role dbpedia:HolyRomanEmperor .
  ?maximilian2 foaf:spouse ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
606,4,train,"Give me the figure known, that is a university and a sports league and an educational institution, as Penn Quakers.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?entity WHERE {
  ?entity a dbpedia:University ; dbpedia:hasSportsLeague dbpedia:SportsLeague ;
    dbpedia:hasNickname ""Penn Quakers"" .
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
976,19,train,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of Meral Akşener.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolderRole [ owl:sameAs ?role ] .
  ?role rdfs:label ""Speaker of the Grand National Assembly of Turkey"" . 
  ?person dbpedia:birthPlace ""İzmir, Turkey"" .
  ?person dbpedia:deathPlace ""Ankara, Turkey"" .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
508,7,train,"Give me the birthplace of the commander, that is a politician, in 1939–1940 Winter Offensive.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace ;
    dbpedia:role ""Politician"" .
  ?person dbpedia:participatedInMilitaryAction dbpedia:Winter_Officency_1939-1940 .
}
```",2,3,3,2,1,3,2,20,0,0,11,0,0.0,0
417,14,train,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query to find the child of the child who is a royalty of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.
SELECT ?royalty
WHERE {
  ?child1 a dbpedia:Person;
    dbpedia:parent ?father .
  ?father a dbpedia:Person;
    dbpedia:name ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin"" .

  ?grandchild a dbpedia:Person;
    dbpedia:parent ?child1 .
  ?grandchild a dbpedia:Person;
    dbpedia:isPartOf dbpedia:Royalty . # Assuming there's an 'isPartOf' relation for royalty membership
}
```",2,3,3,2,1,3,3,71,0,0,8,0,0.0,0
865,9,train,Give me the native of British Raj and father of AK Abdul Momen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?fatherName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality ""British Raj"" .
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ?fatherName .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
41,15,train,"Give me the party of Enda Kenny and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?officeHolder ?party
WHERE {
  ?officeHolder a dbpedia:OfficeHolder;
    dbpedia:officeMemberOf ?party .
  ?party rdfs:label ?partyLabel .
  ?officeHolder rdfs:label ?officeHolderLabel .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
83,10,train,"Who is the governor of the commander, that is a politician, in Central African Republic Civil War?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor WHERE {
  ?war the Central African Republic Civil War.
  ?commander a dbpedia:MilitaryUnit; dbpedia:partOf ?war.
  ?governor a dbpedia:Politician; dbpedia:role ?role .
  ?role rdfs:label ""Governor"" . 
  ?commander dbpedia:ledBy ?governor .
}
```",2,3,3,2,1,3,2,20,0,0,19,0,0.0,0
573,0,train,Give me the person decedent at Massachusetts.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace dbpedia:Massachusetts .
  ?person a dbpedia:Person;
    dbpedia:deathPlace dbpedia:Massachusetts .
}
```",1,1,2,1,1,3,3,71,0,0,968,0,0.0,0
267,5,train,Give me the birth date of Dan Cathy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?result . },"Given that DBpedia provides structured data about people, including their birth dates, the SPARQL query to retrieve Dan Cathy's birth date would look like this:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthDate
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ?birthDate .
  ?person rdfs:label ""Dan Cathy"" .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
987,1,train,Give me the birth place of Moamer Kasumović.,SELECT ?result WHERE { <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  FILTER (?person = ""Moamer Kasumović"")  // Ensure we are looking for Moamer Kasumović
}",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
935,1,train,Give me the headquarter of Provincial Assembly of Balochistan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Provincial_Assembly_of_Balochistan> <http://dbpedia.org/ontology/location> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?headquarter
WHERE {
  ?assembly a dbpedia:ProvincialAssembly;
    dbpedia:headquarter ?headquarter .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
170,11,train,Give me the domain of the profession of John Scholey.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?domain
WHERE {
  ?person a dbpedia:Person;
    dbpedia:occupation ?profession .
    [ dbpedia:isMemberOf dbpedia:IndianCivilService ] .
}",2,2,3,2,1,2,3,28,0,0,39395,0,0.0,0
129,7,train,Give me the associated musical artist of Saba (rapper) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artistName ?occupation
WHERE {
  ?person a dbpedia:Person;
    dbpedia:genre ""Hip hop music"" .
  ?person foaf:occupation ?occupation .
  FILTER (lang(?occupation) = ""en"")  # Assuming we want the occupation in English
}
```",2,2,3,1,2,2,3,28,0,0,7,0,0.0,0
445,11,train,"Give me the entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?country
WHERE {
  ?person rdfs:label ""Anna Sharkey""@en;
    dbpedia:birthPlace ""United Kingdom"" .
}
```",2,3,3,2,1,3,3,71,0,0,3570,0,0.0,0
41,17,train,Give me the party of the person born as David Declan Costello and party of Enda Kenny.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?party
WHERE {
  ?person a dbpedia:Person;
    foaf:name ""David Declan Costello"" .
  ?person a dbpedia:Person;
    foaf:name ""Enda Kenny"" .
  OPTIONAL { ?person dbpedia:politicalPartyMemberOf ?party }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
41,9,train,Give me the party of Declan Costello and party of Enda Kenny.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party
WHERE {
  ?person a dbpedia:OfficeHolder;
    dbpedia:office dbpedia:Prime_Minister_of_Ireland ;
    foaf:name ""Enda Kenny"" .
  ?person dbpedia:political_party ?party .
}
```

For Declan Costello, since he was a Minister for Justice and Equality, we can infer that he was part of the Fianna Fáil party, which is one of the major political parties in Ireland.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
98,5,train,"Give me the region, that is a country, of Philippine Standard Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?country
WHERE {
  ?timeZone a dbpedia:TimeZone;
    dbpedia:standardTime ?standardTime .
  ?standardTime rdfs:label ""Philippine Standard Time"" .
  ?standardTime dbpedia:region ?country .
}",1,2,2,1,1,2,3,28,0,0,8,0,0.0,0
933,12,train,Give me the reference to Alan Warner and band of The Ramong Sound.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandMember WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Alan Warner"";
    dbpedia:role dbpedia:BandMemberOf ?band .
  ?band a dbpedia:MusicGroup;
    dbpedia:name ""The Ramong Sound"" .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
773,6,train,Give me the successor of Charles the Bald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?charles_the_bald a dbpedia:Person;
    dbpedia:birthPlace ""Frankfurt am Main"";
    dbpedia:deathPlace ""Buried at Prüm Abbey"";
    dbpedia:title ""Charles the Bald"";
    dbpedia:succeededBy ?successor .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
236,8,train,Give me the party member of the administration of James Madison.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?memberName ?party
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolder ""James Madison"";
    dbpedia:termStarts ""President of the United States"";
    dbpedia:officeEnds ""1809-03-04"" .
  ?person rdfs:label ?memberName .
  OPTIONAL { 
    ?person dbpedia:partyMemberOf ?party .
  }
}
```",2,2,3,2,1,3,2,20,0,0,597,0,0.0,0
826,5,train,"Who is the reference, that is a royalty, to Louis I?","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person dbpedia:monarchy_start_date ""1723-09-25""^^xsd:date.
  ?person dbpedia:monarchy_end_date ""1764-09-20""^^xsd:date.
}",1,2,2,1,1,3,3,71,0,0,8,0,0.0,0
216,39,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in Mario Ivanković.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?team
WHERE {
  ?player a dbpedia:Person;
    dbpedia:birthDate [isBefore ""1990-01-01""] ; # Pavel Vezhinov was born before 1990
    dbpedia:sport [owl:sameAs dbpedia:IceHockeyPlayer] .
  ?player dbpedia:teamedWith ?vezhinov .
  ?vezhinov a dbpedia:Person;
    dbpedia:deathDate ""1982-12-10"" ; # Pavel Vezhinov's death date
    dbpedia:sport [owl:sameAs dbpedia:IceHockeyPlayer] .
  ?player rdfs:label [strMatches ""Mario Ivanković""] . # Player is Mario Ivanković
  OPTIONAL { ?player dbpedia:role [owl:sameAs dbpedia:SoccerManager] } .
  OPTIONAL { ?player dbpedia:role [owl:sameAs dbpedia:SportsManager] } .
}",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
579,5,train,"Give me the birth name of Jane Percy, Duchess of Northumberland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?result . }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthName ?birthName .
  ?person rdfs:label ""Jane Percy"" .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
200,0,train,Give me the reference to Angelcorpse.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Angelcorpse""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?band a dbpedia:MusicBand;
    dbpedia:genre ""Death metal"";
    dbpedia:yearOfFoundation ""1995"";
    rdfs:label ?bandName .
  FILTER (str(?bandName) = ""Angelcorpse"")
}",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
606,7,train,"Give me the figure known as the nickname of DeKalb, Illinois.","SELECT ?result WHERE { <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nickname
WHERE {
  ?city a dbpedia:City;
    dbpedia:isPartOfCountry dbpedia:India ;
    dbpedia:name ""DeKalb, Illinois"" .
  ?city rdfs:label ?nickname .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
445,18,train,Give me the death place of Patrick Moore and entity in United Kingdom and entity in England.,SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?deathPlace ?entity
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person dbpedia:nationality dbpedia:UnitedKingdom .
  ?person dbpedia:country dbpedia:England .
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
507,1,train,Give me the director of Entertaining Mr Sloane (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?director
WHERE {
  ?movie a dbo:Film;
    dbpedia:filmTitle ""Entertaining Mr. Sloane"" .
  ?movie dbo:directedBy ?director .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
273,9,train,Give me the child of the child of Edoardo Agnelli (1831-1871).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?grandchild
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child1 .
  ?child1 a dbpedia:Person;
    dbpedia:hasChild ?grandchild .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
83,13,train,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/property/leaderParty> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . },"Given the assumptions and the need for a SPARQL query, we would construct it as follows:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?rulingParty
WHERE {
  ?manager a dbpedia:SportsManager;
    dbpedia:associatedSoccerClub Kedah_FA .
  ?manager dbpedia:birthPlace ?birthPlace .
  ?birthPlace a geo:Place ;
               rdfs:label ?birthPlaceLabel .
  FILTER (lang(?birthPlaceLabel) = ""pt"" )  # Assuming the birthplace is in Brazil
  ?birthPlace geo:locatedIn <http://www.geonames.org/8473748/> .  # Example Brazilian town Kedah (hypothetical)
  ?rulingParty rdfs:label ?rulingPartyLabel .
  FILTER (?birthPlaceLabel = ""Kedah"" AND ?rulingPartyLabel = ?expectedRulingParty)  # Adjust expected ruling party as needed
}
```

This query assumes there is a place named Kedah in Brazil and looks for the current ruling party of that place. The `FILTER` clauses are used to narrow down the results based on the given conditions.",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
507,36,train,Give me the professional in the profession of the person born on 1966-02-18 and spouse of Anne V. Coates.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?personName ?profession
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1966-02-18"" ;
    dbpedia:spouse dbpedia:Anne_V_Coates .
  ?person rdfs:label ?personName .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
715,26,train,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbpedia:OfficeHolder ;
            dbpedia:isPolitician yes;
            dbpedia:isPresident yes;
            dbpedia:generalElectionParticipation [ property::partOfEvent dbpedia:1933_Spanish_general_election ] .
  ?person foaf:name ?name .
  ?mayor a dbpedia:MayorOf ;
         dbpedia:officeHolder ?person ;
         dbpedia:termStarts ""1933-03-01""^^xsd:date .
  ?commander a foaf:OrganizationMember;
            dbpedia:militaryRole ""Commander in the force of the mayor"" .
}
```",3,6,4,3,1,3,3,71,0,0,28,0,0.0,0
715,4,train,"Give me the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?conflictLabel ?conflictDetails
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1882-10-30""^^xsd:date ;
    dbpedia:deathDate ""1963-06-25""^^xsd:date .
  ?person rdfs:label ?personLabel .
  ?conflict a dbpedia:Conflict .
  ?person dbpedia:participatedIn ?conflict .
  FILTER (?personLabel = ""Abd el-Krim"") .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
839,36,train,"Give me the band of Kevin Russell (musician) and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band1Name ?band2Name
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Kevin Russell""@en .
  ?person a dbpedia:Musician .
  ?person dbpedia:band ?band1 .
  ?band1 a dbpedia:Band ;
    dbpedia:name ?band1Name .
  
  ?band2 a dbpedia:Band ;
    dbpedia:name ?band2Name .
  
  ?band2 a dbpedia:MusicalArtist .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
47,37,train,"Give me the office of the awardee of the award, that is an award, of Mantu Ghosh and office of Ajoy Mukherjee.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee ?awardName ?office
WHERE {
  ?awardee a dbpedia:Person;
    dbpedia:hasAward ?award .
  ?award a dbpedia:Award ;
    dbpedia:name ?awardName .
  ?awardee dbpedia:office ?office .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
465,17,train,"Give me the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:offspring ?child .
  ?parent ns:name ""Charles Orlando, Dauphin of France"" .
}",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
839,37,train,"Give me the band of Matthias Röhr and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:groupMemberOf ?band .
  ?band rdfs:label ?bandName .
  FILTER (lang(?bandName) = ""de"" )  # Assuming we are looking for German band names
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
508,13,train,"Give me the birthplace of the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    foaf:name ""Hayao Tada"" .
  ?person dbpedia:conflict dbpedia:World_War_II .
}",3,7,4,3,1,3,2,20,0,0,49,0,0.0,0
365,14,train,"Give me the spouse of the native, that is a politician, of the reference to Полтавская губерния.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?politicianSpouse
WHERE {
  ?politician a dbo:Politician;
    dbpprop:nativePlace ""Полтавская губерния"" .
  ?politician rdf:type dbo:Person ;
    dbo:sibling ?sibling .
  ?sibling a dbo:Person;
    rdf:type dbo:Spouse;
    dbpprop:name ?politicianSpouse .
}",3,4,4,3,1,3,2,20,0,0,3,0,0.0,0
917,25,train,Give me the child of Kekūanāoʻa and child of the father of Kamehameha IV.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?parent1 a dbpedia:Person; dbpedia:hasChild ?child .
  ?parent2 a dbpedia:Person; dbpedia:father ?father_of_Kamehameha_IV .
  ?child dbpedia:childOf ?parent1 .
  ?child dbpedia:childOf ?parent2 .
}",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
98,16,train,"Give me the region of Philippine Standard Time and entity in the region, that is a country, of Philippine Standard Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?country WHERE {
  ?country a dbpedia:Country;
    dbpedia:name ""Philippines"" .
  SERVICE wikibase:label { 
    bd:serviceParam wikibase:language ""en"" . 
  }
}",3,4,4,2,2,2,3,28,0,0,1743,0,0.0,0
216,29,train,"Give me the player in Igor Bišćan and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and team of Ognjen Vukojević.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player ?manager
WHERE {
  ?player a dbpedia:SoccerPlayer;
    dbpedia:country dbpedia:Bosnia_and_Herzegovina ;
    dbpedia:nationalTeam dbpedia:Bosnia_and_Herzegovina national under-18 football team .
  ?manager a dbpedia:SportsManager, dbpedia:SoccerManager;
    foaf:managerOf ?player .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
839,33,train,"Give me the band of Kevin Russell (musician) and band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasBand ?band .
  ?band rdfs:label ?bandName .
  FILTER (lang(?bandName) = ""en"")  # Assuming we are looking for the English band name
}
```

This query will return the band names associated with Kevin Russell and Peter Schoewkowski in English.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
987,10,train,Give me the entity in Montenegro and birth place of Dado Polumenta.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Dado Polumenta""@en .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
791,34,train,"Give me the father of Emperor Go-Toba and spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_of_go_toba ?mother_in_law_of_takakura
WHERE {
  ?go_toba a dbpedia:Person;
    dbpedia:birthDate ""1180"";
    dbpedia:father ?father_of_go_toba .
  ?takakura a dbpedia:Person;
    dbpedia:monarchOf dbpedia:Japan ;
    dbpedia:spouse ?wife_of_takakura .
  ?wife_of_takakura a dbpedia:Person;
    dbpedia:spouse ?mother_in_law_of_takakura .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
978,5,train,Give me the person born as Nicholas Bracegirdle.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Nicholas Bracegirdle""@en .
  OPTIONAL { 
    ?person rdfs:label ""AK Abdul Momen""@en . 
  }
  ?person dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
926,5,train,Give me the spouse of Şermi Kadın.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ? Şermi_Kadın a dbpedia:Person;
    dbpedia:hasSpouse ?spouse .
  ?spouse a foaf:Person;
    foaf:name ?name .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
158,0,train,Give me the entity in France.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?entity
WHERE {
  ?entity a dbpedia:Location ;
    dbpedia:isPartOfCountry ""France"" .
}",1,1,2,1,1,3,2,20,0,0,44301,0,0.0,0
715,34,train,"Give me the commander in the force, that is a military conflict, of the native of Morocco and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander ?conflict
WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality ""Morocco"" .
  ?person rdfs:label ?name .
  ?person dbpedia:role ""Ministry of the Air (Spain)"" .
  ?person a dbpedia:MilitaryCommanderInConflictOfWar.
  ?conflict a dbpedia:MilitaryConflict .
  ?person rdf:type ?conflictType .
  FILTER (?name contains ""AK Abdul Momen"") .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
888,4,train,Give me the commander in 2022 Ukrainian eastern counteroffensive.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander
WHERE {
  ?operation a dbpedia:MilitaryOperation;
    dbpedia:startDate ""2022-01-01""^^xsd:date ;
    dbpedia:endDate ""2022-12-31""^^xsd:date .
  ?operation dbpedia:commander ?commander .
}",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
527,7,train,"Give me the actor of the movie, that is a work and English and a television show, with Bernard Bresslaw.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?actor WHERE {
  ?movie a dbpedia:Film;
    dbpedia:mainActor ?actor .
  ?actor rdfs:label ""Bernard Bresslaw""@en .
  OPTIONAL { ?tvShow a dbpedia:TelevisionSeries; dbpedia:star ?actor . }
}
```",2,5,3,2,1,3,2,20,0,0,7,0,0.0,0
18,17,train,"Give me the parent of the professional in Actress and alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parentClass
WHERE {
  ?role1 a dbpedia:Role; rdfs:label ""Actress"" .
  ?role2 a dbpedia:Role; rdfs:label ""alumnus of Marymount College, Tarrytown"" .
  ?parentClass rdfs:subClassOf both ?role1 ?role2 .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
773,35,train,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of the father of Charles the Fat.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childParent WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Conrad II"" .
  ?childParent a dbpedia:Person;
    dbpedia:child ?person ;
    dbpedia:royalty true .
  ?person a dbpedia:Person;
    dbpedia:spouse ?spouse ;
    dbpedia:father ?parent .
  ?spouse a dbpedia:Person;
    dbpedia:name ""Luitgard"" .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
129,2,train,Give me the associated musical artist of Saba (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musicalArtist
WHERE {
  ?person a dbpedia:Person;
    rdfs:label ""Saba""@en .
  ?person dbpedia:musicalArtist ?musicalArtist .
}",1,1,2,1,1,2,3,28,0,0,8,0,0.0,0
417,12,train,Give me the child of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?parent1 a dbpedia:Person;
    dbpedia:hasParent ?grandparent1 .
  ?parent2 a dbpedia:Person;
    dbpedia:hasParent ?grandparent2 .
  
  ?child a foaf:ChildOf ?parent1.
  ?child a foaf:ChildOf ?parent2.
  
  ?grandparent1 rdf:type dbpedia:Person .
  ?grandparent2 rdf:type dbpedia:Person .
  
  ?child rdf:type dbpedia:Person .
}",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
36,1,train,Give me the person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person
WHERE {
  ?person a dbo:Person;
    dbo:birthYear 1971.
}",1,1,2,1,1,2,3,28,0,0,2611,0,0.0,0
281,16,train,Give me the commander in New Guinea campaign and awardee of the award of Alfred Warden.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commanderName ?awardeeName
WHERE {
  ?campaign a dbpedia:Event;
    dbpedia:instanceOf dbpedia:World_War_II_conflict ;
    dbpedia:location ""New Guinea"" .
  ?person a dbpedia:Person;
    dbpedia:role ""Commander"" ;
    dbpedia:participatedIn ?campaign .
  ?person a dbpedia:Person;
    dbpedia:awardedWith dbpedia:Alfred_Warden_Award ;
    dbpedia:birthPlace ?birthPlace ;
    dbpedia:deathPlace ?deathPlace .
  ?commanderPerson ?person .
}",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
965,34,train,"Give me the spouse of the spouse of the parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v3 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouseOfSpouseParent ?grandparent
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:parent ?parent1 .
  ?parent1 a dbpedia:Person;
    rdfs:label ""Louise Mountbatten""@en .
  ?person2 a dbpedia:Person;
    dbpedia:parent ?parent2 .
  ?parent2 a dbpedia:Person;
    rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  ?person1 dbpedia:sibling ?person3 .
  ?person3 a dbpedia:Person;
    dbpedia:spouse ?spouseOfLouise .
  ?spouseOfLouise a dbpedia:Person;
    dbpedia:spouse ?spouseOfSpouseParent .
}",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
216,6,train,"Give me the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?coach
WHERE {
  ?coach a dbpedia:Person;
    dbpedia:role dbpedia:SoccerPlayer .
  ?coach a dbpedia:Person;
    dbpedia:role dbpedia:SportsManager .
  ?coach a dbpedia:Person;
    dbpedia:role dbpedia:SoccerManager .
  ?coach dbpedia:nationalTeam dbpedia:Bosnia_and_Herzegovina_under_18_football_team .
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
417,39,train,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchild WHERE {
  ?parent a dbpedia:Person;
    dbpedia:offspring ?child .
  ?child a dbpedia:Person;
    dbpedia:offspring ?grandchild .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
495,11,train,Give me the child of the father of William I of Württemberg and father of Princess Charlotte of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Charlotte_of_Württemberg> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?father1 a dbpedia:Person; dbpedia:parent ?grandfather .
  ?father2 a dbpedia:Person; dbpedia:parent ?grandfather .
  ?child a dbpedia:Person;
    dbpedia:childOf ?father1;
    dbpedia:parent ?father2 .
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
41,6,train,Give me the party of Declan Costello and party of Mark Durkan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?party WHERE {
  ?person dbpedia:P31 dbpedia:Politician ;
    dbpedia:affiliation ?party .
  FILTER (lang(?person) = ""en"")  # Ensure results are in English
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
158,5,train,"Who is the successor, that is a prime minister and an office holder and a politician, of André Tardieu?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?successor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolderOfRole dbpedia:Prime_Minister_of_State_of_India ;
    dbpedia:roleStartsAt ""André Tardieu"".
  FILTER (lang(?name) = ""en"")  # Assuming we are looking for an English name
}",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
978,0,train,Give me the band member of Enya.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Enya> . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandMember
WHERE {
  ?band a dbpedia:Band;
    dbpedia:artistName ?bandMember .
  ?bandLabel rdfs:label ""Enya""@en .
}",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
465,19,train,Give me the successor of the child of Alfonso I d'Este and spouse of Archduchess Barbara of Austria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v0 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Alfonso I d'Este""@it;
    dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person;
    rdfs:label ""Archduchess Barbara of Austria""@it .
  ?child rdfs:label ""Ercole II d'Este""@it .
  ?child dbpedia:successor ?successor
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
573,5,train,"Who is the professional, that is American, in Politician?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?politician
WHERE {
  ?politician a dbpedia:Politician;
    dbpedia:nationality dbpedia:United_States .
}",1,2,2,1,1,3,3,71,0,0,83,0,0.0,0
865,28,train,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of AK Abdul Momen and father of Shahla Khatun.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:name ""Ram Jaipal Singh Yadav"" .
  ?person2 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace2 .
  ?person2 a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace2 .
  ?father2 a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen"" .
  ?person3 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace3 .
  ?person3 a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace3 .
  ?father3 a dbpedia:Person;
    dbpedia:name ""Shahla Khatun"" .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
865,5,train,Who is the spouse of Syeda Shahar Banu?,SELECT ?result WHERE { <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:spouseOf ?syedaShaharBanu .
  ?syedaShaharBanu rdfs:label ""Syeda Shahar Banu""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
573,39,train,"Give me the person decedent at Quincy, Massachusetts and parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Quincy, Massachusetts"";
    dbpedia:parentOfSome [ a dbpedia:OfficeHolder; dbpedia:politicalAffiliation ""United States""; dbpedia:office ""President of the United States"" ] .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ""Quincy, Massachusetts"" .
}",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
892,3,train,Give me the true self of Enrico Crolla.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . }","To gather information about Enrico Crolla's criminal activities and associated details from DBpedia, we can use the following SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?criminalActivity ?description
WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasArrest ?arrest .
  ?arrest a dbpedia:CriminalEvent ;
    dbpedia:description ?description .
  ?person rdfs:label ""Enrico Crolla"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
102,13,train,"Give me the manager of the player in the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?manager
WHERE {
  ?team a dbpedia:SportsTeam ;
    dbpedia:sport dbpedia:Soccer ;
    dbpedia:name ""England women's national football team"" .
  ?player a dbpedia:SportPerson;
    dbpedia:participantRole ?sport ;
    dbpedia:genderFemale ;
    dbpedia:nationality ""United Kingdom"" ;
    dbpedia:team ?team .
  ?player a dbpedia:SoccerPlayer .
  ?manager a dbpedia:Manager ;
    dbpedia:managedTeam ?team .
}",3,4,4,3,1,3,2,20,0,0,43,0,0.0,0
527,11,train,"Give me the actor of the movie, that is a work and English and a television show, with Bernard Bresslaw and author of The Boy Who Kicked Pigs.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Boy_Who_Kicked_Pigs> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?actor a dbpedia:Actor;
    dbpedia:actInFilm dbpedia:EnglishWork ?film .
  ?actor a dbpedia:Person;
    dbpedia:appearInTelevisionShow ?tv_show .
  ?actor dbpedia:author ""The Boy Who Kicked Pigs"".
}
```",3,6,4,2,2,3,2,20,0,0,1,0,0.0,0
987,27,train,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?country WHERE {
  ?country a dbpedia:Country;
    dbpedia:location ?location .
  ?location rdfs:label ""Canicosa de la Sierra"" .
}
```",3,5,4,3,1,3,3,71,0,0,173261,0,0.0,0
18,2,train,"Give me the alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?name
WHERE {
  ?person a dbpedia:Person;
    dbpedia:alumniOf dbpedia:Marymount_College_Tarrytown .
}",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
36,7,train,Give me the actor of Being Mrs Elliot and person born as Ayo Makun.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor_name
WHERE {
  ?tv_series a dbpedia:TelevisionSeries;
    dbpedia:hasMainCharacter ?actor .
  ?actor rdfs:label ?actor_name .
  FILTER (lang(?actor_name) = ""en"")  # Assuming English language for simplicity
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
715,23,train,"Give me the commander in the force, that is a military conflict, of the native of Morocco.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander ?conflict
WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality ""Morocco"" .
  SOME ?role WHERE { ?person dbpedia:hasRole ?role } AND ?role rdfs:label ""Commander in conflict"" .
  ?person dbpedia:militaryConflict ?conflict .
}
```",3,4,4,3,1,3,3,71,0,0,476,0,0.0,0
507,15,train,Who is the person born as the birth name of Anne V. Coates?,SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:role dbpedia:Film_Director ;
    dbpedia:name ""Anne V. Coates"" .
  ?person dbpedia:birthPlace ?birthPlace .
  FILTER (lang(?birthPlace) = ""en"")  # Assuming birthplace information is in English
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
216,18,train,Give me the party of Campbell Newman and administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party ?administration
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolderOfOffice dbpedia:Premier_of_Queensland .
  ?person rdfs:label ?partyLabel .
  ?person dbpedia:termStartYear ?administrationYear .
}

# Assuming Campbell Newman's party was the Liberal National Party (QLD)
# and his premiership was from 2012 to 2015.
BIND(?party as ""Liberal National Party (QLD)"")
BIND(?administration as ""2012-2015"")
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
443,18,train,Give me the birthplace of Ulf Lundell and birthplace of the work of yes.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ""yes""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace1 ?birthPlace2
WHERE {
  ?person1 a dbpedia:Person; dbpedia:birthPlace ?birthPlace1 .
  ?work a dbpedia:Work; dbpedia:hasCreator ?person1 .
  ?event a dbpedia:Event; dbpedia:performer ?person1; dbpedia:hasWork ?work .
}",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
965,23,train,Give me the spouse of the spouse of the parent of Louise Mountbatten.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?grandparentSpouse1 ?grandparentSpouse2
WHERE {
  ?louiseParent a dbpedia:Person;
    dbpedia:hasChild ?louise .
  ?louiseParent a dbpedia:Person;
    dbpedia:hasSpouse ?spouseOfLouiseParent .
  ?spouseOfLouiseParent a dbpedia:Person;
    dbpedia:hasSpouse ?grandparentSpouse1 .
  ?spouseOfLouiseParent a dbpedia:Person;
    dbpedia:hasSpouse ?grandparentSpouse2 .
}",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
826,20,train,"Give me the spouse of Anna Magdalena Appel and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v2 . }",PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?spouse ?successor WHERE { ?person1 a dbpedia:Person; dbpedia:spouse ?spouse . ?person2 a dbpedia:Person; dbpedia:child ?child . ?child a dbpedia:Royalty . ?person2 dbpedia:succeeded ?child },3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
892,5,train,Give me the member of E-girls.,SELECT ?result WHERE { <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?name WHERE {
  ?group a dbpedia:MusicGroup;
    dbpedia:groupName ""E-girls"" .
  ?member a dbpedia:Person;
    dbpedia:name ?name;
    dbpedia:isMemberOf ?group .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
47,2,train,Give me the office of Ajoy Mukherjee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolder ?office .
  ?person rdfs:label ""Ajoy Mukherjee""@en .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
433,16,train,"Give me the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:givenName ""Ornette"";
    dbpedia:genre dbpedia:musicGenre Jazz;
    dbpedia:role dbpedia:Artist .
  ?person a dbpedia:MusicalArtist .
}",2,6,3,2,1,3,3,71,0,0,20,0,0.0,0
158,13,train,"Give me the entity in the award, that is a country, of the reference to Adelbert Cronkhite.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardName ?country
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedBy ?awardingAuthority .
  ?awardingAuthority rdfs:label ?awardName .
  ?awardingAuthority dcterms:recipientOf dbpedia:Country ;
    dbpedia:awardedTo ?person .
}
```",3,4,4,3,1,3,2,20,0,0,44301,0,0.0,0
645,0,train,Give me the commander in Battle of Jarama.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?commander
WHERE {
  ?battle a dbpedia:Battle ;
            dbpedia:participatingSides [ memberOf dbpedia:Republican_Side ] .
  ?battle dbpedia:hasCommander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
965,37,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify the birth date of the politician's child
SELECT ?childBirthDate WHERE {
  ?politicianChild a dbpedia:Person;
    dbpedia:birthday ?childBirthDate .
}

# Step 2: Find all royals born around this period
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?royalPerson ?royalBirthDate WHERE {
  ?royalPerson a dbpedia:Person;
    dbpedia:birthDate ?royalBirthDate .
  FILTER (STRFTER(?royalBirthDate, ""1854-05-24"") AND STRTBEFORE(?royalBirthDate, ""1855-01-01""))
}

# Step 3: Determine the parents of those royals
SELECT ?parentName ?parentTitle WHERE {
  ?royalPerson a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ?parentName ;
    dbpedia:holdsTitle ?parentTitle .
}

# Combine the results to find the matching parents
CONSTRUCT { ?childBirthDate ?royalPerson ?parentName ?parentTitle }
WHERE {
  ?politicianChild a dbpedia:Person;
    dbpedia:birthday ?childBirthDate .
  ?foundRoyals a dbpedia:Person;
    dbpedia:birthDate ?childBirthDate ;
    dbpedia:hasParent ?parent .
  OPTIONAL { ?parent rdfs:label ?parentName ; dbpedia:holdsTitle ?parentTitle . }
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
865,34,train,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of Shahla Khatun.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?nativeCountry
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace <http://dbpedia.org/property/geonameid>12345; 
    dbpedia:deathPlace <http://dbpedia.org/property/geonameid>67890 .
  ?person dbpedia:father ?father .
  ?father a dbpedia:Person; 
    dbpedia:name ""Shahla Khatun's father""@en .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
47,28,train,Give me the office of the administration of Jagdeep Dhankhar and office of Ajoy Mukherjee and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?officeName ?person
WHERE {
  ?person a dbpedia:OfficeHolder; dbpedia:office ?office .
  ?office rdfs:label ?officeName .
  FILTER (lang(?officeName) = ""en"")  # Restrict to English language
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
917,2,train,Give me the child of Kekūanāoʻa.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?parent dbpedia:name ""Kekūanāoʻa"" .
}",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
933,24,train,Give me the reference to the birth name of Alan Warner (musician) and band of The Ramong Sound.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthName ?band
WHERE {
  ?person a dbpedia:Person;
    rdfs:label ""Alan Warner""@en .
  ?person dbpedia:birthName ?birthName .
  ?person dbpedia:musicGenre ""Rock music""@en .
  ?person dbpedia:band ?band .
  ?band rdfs:label ""The Ramong Sound""@en .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
933,16,train,Give me the birth name of the professional in Musician.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?v0 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName WHERE {
  ?musician a dbpedia:Musician;
    dbpedia:birthDate ?birthDate .
  ?musician rdfs:label ?name .
  FILTER (lang(?name) = ""en"")  # Assuming the name is in English
  ?birthDate ns:value ""1920-10-05""  # Example birth date, replace with actual data
}
```",2,2,3,2,1,3,3,71,0,0,856,0,0.0,0
18,3,train,Give me the award of Ana María Sánchez de Ríos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?result . },"To construct a SPARQL query to find this information, we would need to consider the ontology used by DBpedia for representing awards and notable achievements. Assuming there is an appropriate class or property for ""award"" and that she has been annotated with such information, the query might look like this:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?award
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedWith ?award .
  ?person dbpedia:birthPlace ""India"";
    dbpedia:deathPlace ""India"" .
  ?person rdfs:label ""Ana María Sánchez de Ríos"" .
}
```

This query searches for a person named Ana María Sánchez de Ríos who was born and died in India and has an associated award.",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
773,11,train,Give me the spouse of the father of Charles the Fat.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?father a dbpedia:Person;
    dbpedia:name ""Louis the Pious""@en .
  ?mother a dbpedia:Person;
    dbpedia:name ""Judith of Bavaria""@en;
    dbpedia:parent ?father .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
124,16,train,"Give me the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?warLabel ?description
WHERE {
  ?awardee a dbpedia:Person;
    dbpedia:recipientOfAward dbpedia:British_South_Africa_Company_Medal .
  ?awardee dbpprop:conflict ?war .
  ?war a dbo:War ;
         dbo:conflictStart ""1899-10-12"" ;
         dbo:end ""1902-06-01"" .
  FILTER (?warLabel = ""Second Boer War"") 
}
```",2,5,3,2,1,3,3,71,0,0,13,0,0.0,0
773,5,train,"Give me the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent dbpedia:hasChild ?child ;
           rdf:type dbpedia:Royalty
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
987,17,train,"Give me the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v0 . },"Given the above reasoning, a SPARQL query to find this information from DBpedia would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country
WHERE {
  ?event a dbpedia:Event;
    dbpedia:location ?location .
  ?location a dbpedia:Location;
    dbpedia:timeZone ?timeZone .
  ?timeZone rdfs:label ""Europe/Berlin"" @en # Assuming UTC+1 as the time zone for Spain
}
```",2,4,3,2,1,3,3,71,0,0,56,0,0.0,0
281,9,train,Give me the awardee of Medal bar and awardee of Volunteer Decoration.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedBy dbpedia:United_Kingdom ;
    dbpedia:awardMedalBar ""Medal Bar"" .
  ?person a dbpedia:Person;
    dbpedia:awardedBy dbpedia:United_Kingdom ;
    dbpedia:awardVolunteer_Decoration ""Volunteer Decoration"" .
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
955,0,train,Give me the band of Nate Albert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nate_Albert> . },"Given that we are querying a structured database like DBpedia which contains information about people and their bands, the SPARQL query would look something like this:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:memberOf dbpedia:Band ;
    rdfs:label ?bandName .
}
```

This query searches for a person named Nate Albert who is a member of a Band and retrieves the label (name) of that band.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
445,19,train,"Give me the death place of Patrick Moore and entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?deathPlace ?country_of_residence
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""Patrick Moore""@en .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  
  ?person a dbpedia:Person;
    rdfs:label ""Anna Sharkey""@en .
  ?person dbpedia:countryOfResidence ?country_of_residence .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
93,6,train,Give me the death place of John Weir Troy and capital of Alaska.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alaska> <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/John_Weir_Troy> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?deathPlace ?capitalOfAlaska
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""John Weir Troy"" .
  ?person a dbpedia:Person; dbpedia:deathPlace ?deathPlace .

  ?place a dbpedia:City;
    dbpedia:name ""Juneau"" ;
    dbpedia:isCapitalOfAlaska true .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
216,12,train,Give me the party of Campbell Newman and office of Tim Nicholls and administration of .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/property/leader> """"@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?personName ?office ?administration
WHERE {
  ?person a dbpedia:Person;
    rdfs:label ?personName .
  OPTIONAL { ?person dbpedia:office ?office }
  OPTIONAL { ?person dbpedia:administration ?administration }
}
 FILTER (?personName = ""Campbell Newman"" OR ?personName = ""Tim Nicholls"")
}",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
281,7,train,Give me the awardee of Volunteer Decoration and commander in New Guinea campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee ?commander
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedDecorations [ owl:hasValue ""Volunteer Decoration"" ] .
  ?person a dbpedia:Person;
    dbpedia:commandedInCampaign dbpedia:New_Guinea_Campaign .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
888,12,train,Give me the commander in Southern Ukraine campaign and awardee of the award of Oleksandr Syrskyi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Southern_Ukraine_campaign> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander ?awardee
WHERE {
  ?campaign dbpedia:operational_unit ""Soviet Armed Forces"";
    dbpedia:start_date ""1941-07-07T00:00:00""^^xsd:date;
    dbpedia:end_date ""1942-03-10T00:00:00""^^xsd:date.
  
  ?commander a dbpedia:Person;
    dbpedia:role ""Commander"";
    dbpedia:participatedIn ?campaign .
  
  ?awardee a dbpedia:Person;
    dbpedia:award ""Award of Oleksandr Syrskyi"";
    dbpedia:recipientOf ?commander .
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
122,5,train,Give me the band member of the band of Gift of Gab (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandMember
WHERE {
  ?artist a dbpedia:Artist;
    dbpedia:birthPlace ""USA"";
    dbpedia:genre ""Hip hop"";
    dbpedia:moniker ""Gift of Gab"" .
  ?band a dbpedia:Band ;
    dbpedia:members ?bandMember .
  ?artist rdfs:label ""Gift of Gab""@en .
}",2,2,3,2,1,2,2,9,0,0,24,0,0.0,0
935,0,train,Give me the death place of Abdul Raziq Bugti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdul_Raziq_Bugti> <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Abdul Raziq Bugti"" .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
433,28,train,"Give me the associated musical artist of Bill Evans and professional in Musician and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }",{sparql_query: SELECT ?associatedArtist1 ?associatedArtist2 WHERE { ?billEvans a dbpedia:MusicalArtist ; dbpedia:associatedWith ?associatedArtist1 . ?paulDunbar a dbpedia:Person; dbpedia:birthDate [is <1973-03-22>] ; dbpedia:deathDate [is <1989-03-14]] ; dbpedia:associatedWith ?associatedArtist2 .}},4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
926,13,train,Give me the successor of the child of Ahmed III.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v1 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childName ?successorName
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Sultan_of_the_Ottoman_Empire ;
    dbpedia:name ""Ahmed III"" .
  ?child dbpedia:hasChild ?successor .
  ?successor a dbpedia:Person;
    dbpedia:name ?successorName
  FILTER (lang(?successorName) = ""en"")  # Assuming we are looking for the English name
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
192,3,train,"Give me the spouse, that is a royalty, of Charles Martel of Anjou.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse WHERE {
  ?charlesMartenOfAnjou a dbpedia:Person;
    dbpedia:name ""Charles Martel of Anjou"" .
  ?charlesMartenOfAnjou dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:isRoyalty true .
}",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
98,0,train,Give me the parent of Emperor Rokujō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Rokujō> <http://dbpedia.org/ontology/parent> ?result . },"Given that we are using DBpedia as our knowledge base, the SPARQL query would look for the predecessor (parent) of Emperor Rokujō (who was Emperor Taishō). The query should find the predecessor of the emperor who preceded Taishō.

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parentEmperor
WHERE {
  ?emperor a dbpedia:Emperor;
    dbpedia:successor ?successor .
  ?successor a dbpedia:Emperor;
    dbpedia:predecessor ?parentEmperor .
  ?emperor rdfs:label ""AK Abdul Momen""@en;  # Assuming Rokujō is the same as Taishō for simplicity
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
582,8,train,Give me the nickname of Japan national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?nickname
WHERE {
  ?team a dbpedia:SportsTeam ;
    dbpedia:sport dbpedia:Soccer ;
    dbpedia:nationalTeam ?team_name .
  ?team_name rdfs:label ?nickname .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
329,3,train,Give me the author of The Tailor and Ansty.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author
WHERE {
  ?book dbpedia:isBasedOnWork ;
         dbpedia:title ""The Tailor and Ansty"" .
  ?book dbpedia:author ?author .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
892,30,train,"Give me the landmark at elevation of 58 and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and entity in Italy.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?entity WHERE {
  ?entity a dbpedia:Region ;
            dbpedia:has_administration dbpedia:Government_of_Italy ;
            dbpedia:capital ?capital .
  ?capital a dbpedia:City ;
             dbpedia:country dbpedia:Italy ;
             dbpedia:political_party dbpedia:Democratic_Party_(Italy) ;
             dbpedia:has_elevation 58 .
}
```",4,8,5,2,3,3,3,71,0,0,2,0,0.0,0
892,39,train,"Give me the landmark at elevation of 58 and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party WHERE {
  ?person a dbpedia:Person;
    dbpedia:memberOf ?party .
  ?person rdfs:label ""Andrea Cozzolino""@it .
}
```",4,10,5,3,2,3,3,71,0,0,2,0,0.0,0
507,14,train,Give me the professional in the profession of Guy Ferland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?profession WHERE {
  ?person a dbpedia:Person;
    dbpedia:occupation ?profession .
  ?person rdfs:label ""Guy Ferland""@en .
}
```",2,2,3,2,1,3,3,71,0,2,38,0.0,0.0,0
417,21,train,"Give me the child of Alexandrine of Mecklenburg-Schwerin and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?childName WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:siblingCount 1;  # Alexandrine has one sibling, so she has two parents
    dbpedia:spouse ?spouse .
  ?child a dbpedia:Child;
    dbpedia:parent ?person .
  ?child a dbpedia:Royalty .
  ?child rdf:type dbpedia:Person .
  ?spouse rdf:type dbpedia:Person .
}
ORDER BY ?childName",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
417,34,train,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of Alexandrine of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?queenSpouse
WHERE {
  ?alexandrine a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Valdemar"" ;
    dbpedia:isMonarch true .
  ?valdemar a dbpedia:Person;
    dbpedia:spouse ?queenSpouse .
  ?queenSpouse a dbpedia:Person;
    dbpedia:name ""Dagmar"" .
  ?alexandrine dbpedia:hasChild ?knud .
  ?knud a dbpedia:Person;
    dbpedia:name ""Knud, Hereditary Prince of Denmark"" .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
212,2,train,"Give me the professional, that is a musical artist and an artist, in Singer, rapper, CEO, Facilities and Project Manager.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ""Singer, rapper, CEO, Facilities and Project Manager""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:role dbpedia:Artist .
  ?person dbpedia:role ?profession1 .
  ?person dbpedia:role ?profession2 .
  ?profession1 IN ('Singer', 'Rapper', 'CEO', 'Facilities Manager', 'Project Manager')
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
267,4,train,Who is the reference to Dan Cathy?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . }","SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen""@en .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
  FILTER (lang(?name) = ""en"")  # Ensuring the name is in English
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
192,4,train,Give me the parent of Anna of Hungary (Byzantine empress).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent1 ?parent2
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Kingdom of Hungary (part of Austria-Hungary at the time)"";
    dbpedia:mother ?mother .
  ?mother a dbpedia:Person;
    dbpedia:name ""Gisela of Bavaria"" .
  
  ?person a dbpedia:Person;
    dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:name ""Stephen I of Hungary"" .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
47,31,train,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt and office of Bidesh Ranjan Bose.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v1 . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  FILTER (timeRange(?deathPlace, ""1840-1949"") )  # British Raj period
}
```

This query selects individuals who are persons and have birth and death places within the specified time range of the British Raj (approximately 1840 to 1949). The `FILTER` clause ensures that only those within this period are considered.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
136,2,train,Give me the area code of Levenhagen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Levenhagen> <http://dbpedia.org/ontology/areaCode> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?areaCode WHERE {
  ?place a dbpedia:Location;
    dbpedia:type ?locationType .
  ?locationType rdfs:label ""Levenhagen""@de .
  ?place dbpedia:areaCode ?areaCode
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
495,9,train,Give me the father of the parent of Princess Catherine of Württemberg.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father_of_grandfather
WHERE {
  ?grandparent a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person;
    dbpedia:name ""Frederick II Eugene of Württemberg"" .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
98,3,train,Who is the child of Emperor Toba?,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Toba> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Emperor Toba""@en;
    dbpedia:birthPlace ""India""^^xsd:string;
    dbpedia:deathPlace ""India""^^xsd:string .
  ?child a dbpedia:Person;
    dbpedia:birthPlace ?childBirthPlace ;
    dbpedia:deathPlace ?childDeathPlace .
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
582,1,train,Give me the player in Kazuaki Nagasawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:role ?role .
  ?role rdfs:label ""Kazuaki Nagasawa""@en .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
}",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
158,8,train,"Give me the party of the successor, that is a prime minister and an office holder and a politician, of André Tardieu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?successorParty ?successor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolder ?officeHolder .
  ?officeHolder rdfs:label ""Prime Minister of France""@fr .
  ?person dbpedia:politicalAffiliation ?party .
  ?party rdfs:label ?successorParty .
  ?successor a dbpedia:Politician; 
    dbpedia:officeHolder ?officeHolder;
    dbpedia:partyMemberOf ?party .
  ?person ns:name ""AK Abdul Momen"" .
}",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
926,28,train,Give me the child of Ahmed III and father of the father of Abdulaziz and successor of Mustafa III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?successor a dbpedia:Monarch;
    dbpedia:succeededBy ?preceding_monarch .
  ?preceding_monarch a dbpedia:Monarch;
    dbpedia:name ""Ahmed III"" .
  ?child a dbpedia:Person;
    dbpedia:father ?father_of_child ;
    dbpedia:birthDate ?birth_date .
  ?father_of_child a dbpedia:Person;
    dbpedia:parent ?grand_parent .
  ?preceding_monarch a dbpedia:Monarch;
    dbpedia:successor ?successor .
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
281,11,train,Give me the awardee of the award of Alfred Warden.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee ?birthPlace ?deathPlace
WHERE {
  ?award dbpedia:hasAwardee ?awardee .
  ?awardee a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?awardee a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?award rdfs:label ""Alfred Warden Award"" .
}
```",2,2,3,2,1,2,3,28,0,0,12,0,0.0,0
874,0,train,Give me the band of Manfred Mann (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Manfred_Mann_(musician)> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Musician;
    dbpedia:associatedBand ?band .
  ?person ns:name ""Manfred Mann""@en .
}",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
978,8,train,Give me the band member of the person born as Nicholas Bracegirdle.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandMember
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Nicholas Bracegirdle"" .
  ?person rdf:type ?bandType.
}",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
373,2,train,"Give me the work, that is a single and a musical work and a work and a soundtrack, of .","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/writer> """"@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX owl: <http://www.w3.org/2002/07/owl#
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?work WHERE {
  ?work a dbpedia:Work ;
    dbpedia:hasSoundtrack ?soundtrack .
  ?soundtrack a dbpedia:Soundtrack .
}",1,5,2,1,1,2,2,9,0,0,8275,0,0.0,0
36,0,train,Give me the actor of Being Mrs Elliot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . },"Given the reasoning above, the SPARQL query would be constructed to search for the actor associated with the character Mrs. Elliot in ""Being Mrs Elliot."" Since DBpedia might not have this specific role information, we'll use a general approach to see if there's any related data:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor WHERE {
  ?movie a dbpedia:Film;
    dbpedia:mainCharacter ?character .
  ?character rdfs:label ""Mrs Elliot""@en .
  ?actor dbpedia:roleIn ?movie .
}
```

This query looks for a film (`dbpedia:Film`) with a main character named ""Mrs Elliot"" and then tries to link this character to an actor (`?actor`) through the `dbpedia:roleIn` property.",1,1,2,1,1,2,3,28,0,0,6,0,0.0,0
232,2,train,"Give me the person born, that is a writer, on 1849-09-14.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1849-09-14""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbo:Person;
    dbo:birthday ""1849-09-14""^^xsd:date;
    dbo:occupation dbo:Writer .
}",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
826,7,train,"Who is the child of Louis IV, Grand Duke of Hesse?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?grandDuke .
  ?grandDuke a dbpedia:Monarch;
    dbpedia:name ""Louis IV, Grand Duke of Hesse"" .
  ?person rdfs:label ""Child of Louis IV, Grand Duke of Hesse""@en .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
382,11,train,"Give me the landmark at elevation of 100 and birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/elevation> ""100""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?landmarkElevation
WHERE {
  ?manager a dbpedia:Person;
    dbpedia:role dbpedia:SoccerManager ;
    dbpedia:role dbpedia:Athlete ;
    dbpedia:role dbpedia:SportsManager .
  ?manager dbpedia:birthPlace ?birthPlace .
  ?manager dbpedia:hasElevationInMetres $elevation .
  FILTER (xsd:integer($elevation) = 100)
}",3,6,4,2,2,3,2,20,0,0,1,0,0.0,0
136,4,train,Give me the region coded as 03834 and landmark at elevation of 5.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ""03834"" . ?result <http://dbpedia.org/ontology/elevation> ""5""^^<http://www.w3.org/2001/XMLSchema#integer> . }","SELECT ?regionCode ?landmarkName ?elevation
WHERE {
  ?landmark a dbpedia:Landmark;
    dbpedia:code ?regionCode .
  OPTIONAL { 
    ?landmark rdfs:label ?landmarkName . 
    FILTER (lang(?landmarkName) = ""en"" ) 
  }
  ?landmark dbpedia:hasElevation ?elevation .
  ?elevation rdf:value ""5"" .
}",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
166,5,train,"Give me the territory administered, that is a country, from Madrid.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?country
WHERE {
  ?capital dbo:hasCapital ?city .
  ?city rdfs:label ""Madrid"" .
  ?city dbo:isPartOf ?country .
}",1,2,2,1,1,3,2,20,0,0,15,0,0.0,0
124,18,train,Give me the military force of Battle of Atbara and military force of Battle of Tamai and commander in Mahdist War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for the military forces of the Battle of Atbara and Battle of Tamai
SELECT ?battleName ?militaryForce
WHERE {
  ?battle a dbpedia:Battle;
    rdfs:label ""Battle of Atbara"" .
  ?battle a dbpedia:Battle;
    rdfs:label ""Battle of Tamai"" .
  
  ?battle dbpedia:militaryForces ?militaryForce .
}

# Query for the commander of the Mahdist War
SELECT ?commander
WHERE {
  ?war a dbpedia:Conflict;
    rdfs:label ""Mahdist War"" .
  ?war dbpedia:commander ?commander .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
773,37,train,"Give me the parent of Charles the Fat and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parentOfLothair
WHERE {
  ?successor a dbpedia:Person;
    dbpedia:hasSuccessor ?lothair .
  ?lothair a dbpedia:Person;
    dbpedia:name ""Lothair I"" .
  ?successor dbpedia:child ?lothair .
}",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
554,11,train,Give me the leader of the administration of Francisco da Costa Gomes and leader of Portuguese Mozambique.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . <http://dbpedia.org/resource/Portuguese_Mozambique> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?presidentName ?mozambiqueLeaderName
WHERE {
  ?president a dbpedia:OfficeHolder;
    dbpedia:office dbpedia:President_of_Portugal ;
    dbpedia:start_date ""1976-01-01""^^xsd:date .
  ?president ns:name ""Francisco da Costa Gomes"" .

  ?mozambique a dbpedia:Country;
    dbpedia:independenceDate ""1975-06-25""^^xsd:date ;
    dbpedia:leader ?mozambiqueLeaderName .
}

# Filter for the correct president's language
FILTER (lang(?president) = ""pt"" )
```",3,3,4,2,2,3,2,20,0,0,3,0,0.0,0
582,11,train,Give me the reference to the residence of Hirotaka Sugawara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""Hirotaka Sugawara""@en.
}",2,2,3,2,1,3,3,71,0,0,41,0,0.0,0
965,19,train,Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of Louise Mountbatten.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse2 ?parent
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:spouse ?spouse2 .
  ?person1 a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:name ""Louise Mountbatten"" .
  ?parent a dbpedia:Person;
    dbpedia:parent ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
826,13,train,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v1 . }","To find this information using SPARQL, we would need a dataset that includes these relationships. However, since we don't have direct access to such a dataset here, we'll construct a hypothetical query based on the simplified scenario:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?royalChild ?successor
WHERE {
  ?royalChild a dbpedia:Person;
    dbpedia:childOf dbpedia:Louis_I,_Grand_Duke_of_Hesse .
  ?royalChild foaf:isA dbpedia:Royalty .
  ?successor a dbpedia:Person;
    dbpedia:succeeds ?royalChild .
}
```

This query looks for a person (`?royalChild`) who is the child of Louis I and also a royalty (`dbpedia:Royalty`), and then finds their successor (`?successor`).",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
274,7,train,Give me the band member of Dizzy Gillespie and associated musical artist of Cecil Taylor.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for Dizzy Gillespie's band members
SELECT ?bandMember
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate [isBefore ""1928-10-21""].
  ?person dbpedia:occupation ""Musician"";
    dbpedia:musicalGenre ""Jazz"".
  ?person rdfs:member ?bandMember .
  FILTER (lang(?person) = ""en"")  # Assuming we are looking for English-speaking band members
}

# Query for artists associated with Cecil Taylor
SELECT ?associatedArtist
WHERE {
  ?artist a dbpedia:Musician;
    dbpedia:occupation [isLiteral* ""Pianist""].
  ?artist rdfs:label ?name .
  ?artist foaf:knows ?person .
  ?person a dbpedia:Person;
    dbpedia:birthDate [isBefore ""1927-04-27""]  # Approximate birth date of Cecil Taylor
    ; dbpedia:associatedWith ?artist .
  FILTER (lang(?person) = ""en"")  # Assuming we are looking for English-speaking artists
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
917,26,train,"Give me the child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Hawaii"" .
  ?person dbpedia:father ?father .
  ?father a dbpedia:Person; dbpedia:name ""Kekuanaoʻa"" .
  ?person dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person; dbpedia:name ""Kalakua Kaheiheiman"" .
  ?child a dbpedia:Person; dbpedia:parent ?father .
}
```",3,4,4,3,1,3,3,71,0,0,11,0,0.0,0
465,35,train,"Give me the successor of the child of Alfonso I d'Este and successor of the child, that is a royalty, of Anne of Brittany.",SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childName ?successorName
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:NoblePerson;
    rdfs:label ""Alfonso I d'Este""@en .
  ?child2 a dbpedia:Person;
    dbpedia:parent ?parent2 .
  ?parent2 a dbpedia:NoblePerson;
    rdfs:label ""Anne of Brittany""@en .
  ?child2 a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Royalty;
    dbpedia:succeededBy ?successor .
  ?successor a dbpedia:Person;
    rdfs:label ?successorName .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
573,29,train,"Give me the parent of John Quincy Adams and person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at Massachusetts.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?john_quincy_adams_parent ?phelan_residence_person ?massachusetts_person
WHERE {
  ?john_quincy_adams a dbpedia:Person;
    dbpedia:parent ?john_quincy_adams_parent .
  ?john_quincy_adams a dbpedia:Person;
    dbpedia:deathPlace Massachusetts .

  ?phelan_residence a dbpedia:Settlement ;
    dbpedia:name ""Massachusetts"" .
  
  ?massachusetts_person a dbpedia:Person;
    dbpedia:deathPlace Massachusetts .
}",4,5,5,2,3,3,3,71,0,0,2,0,0.0,0
267,12,train,Give me the person born on the birth date of Dan Cathy and coach of Iran national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Iran_national_football_team> <http://dbpedia.org/ontology/coach> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person
WHERE {
  ?person a dbo:Person;
    dbpprop:birthDate ""1961-08-21"" .
  ?person a foaf:Athlete ;
    dbo:nationalTeam dbpedia:NationTeamProperty(""Iran"") .
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
773,12,train,Give me the parent of Carloman of Bavaria and parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parentName WHERE {
  ?carloman a dbpedia:Person;
    dbpedia:birthPlace <http://dbpedia.org/page/Bavaria> .
  ?charles a dbpedia:Person;
    dbpedia:birthPlace <http://dbpedia.org/page/Frankfurt-am-Main> .
  ?carloman dbpedia:parent ?parent.
  ?charles dbpedia:parent ?parent.
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
791,22,train,"Give me the spouse of Taira no Tokuko and father of the child, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouseOfTokuko ?fatherOfTakakura
WHERE {
  ?tokuko a dbpedia:Person;
    dbpedia:name ""Taira no Tokuko"" .
  ?emperor_takakura a dbpedia:Person;
    dbpedia:name ""Emperor Takakura"" .
  ?tokuko dbpedia:sibling ?siblingOfTokuko .
  ?siblingOfTokuko a dbpedia:Person;
    dbpedia:name ?spouseOfTokuko .
  ?emperor_takakura dbpedia:father ?fatherOfTakakura .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
216,1,train,Give me the party of Campbell Newman.,SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . },"Given the reasoning above, the corresponding SPARQL query to find this information from DBpedia would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party
WHERE {
  ?person a dbpedia:Person;
    dbpedia:office ""Premier of Queensland"" .
  ?person rdfs:memberOf ?party .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
166,9,train,"Who is the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?militaryForce
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1894-10-28""^^xsd:date ;
    dbpedia:deathDate ""1970-11-30""^^xsd:date ;
    dbpedia:serviceMemberOf dbpedia:Spanish_Army .
  ?person ns:memberOf dbpedia:Spanish_Civil_War.
}",2,5,3,2,1,3,2,20,0,0,514,0,0.0,0
573,30,train,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at Massachusetts and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?author ?parent WHERE {
  ?author a dbpedia:Person;
    dbpedia:birthPlace ""Massachusetts"" .
  ?author a dbpedia:Person;
    dbpedia:deathPlace ""Quincy, Massachusetts"" .
  
  OPTIONAL { 
    ?author dbpedia:pseudonym ?pseudonym . 
    FILTER (lang(?pseudonym) = ""en"") 
  }
  
  ?author dbpedia:offices_held ?office .
  ?office a dbpedia:OfficeHolderRole .
  
  ?author dbpedia:parent ?parent .
}
```

This SPARQL query does the following:
- It selects individuals (`?author`) who were born in Massachusetts and died in Quincy, Massachusetts.
- It checks if these individuals held offices (`?office`) using the `dbpedia:offices_held` property.
- It looks for their parents (`?parent`) using the `dbpedia:parent` property.",4,6,5,2,3,3,3,71,0,0,2,0,0.0,0
839,20,train,Give me the band of Kevin Russell (musician) and band of the member of Böhse Onkelz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName1 ?birthPlace1 ?deathPlace1 WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace1;
    dbpedia:band ?bandName1 .
  ?person1 rdfs:label ""Kevin Russell""@en .
}

SELECT ?bandName2 ?birthPlace2 ?deathPlace2 WHERE {
  ?person2 a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace2;
    dbpedia:memberOf ?band ?bandName2 .
  ?person2 rdfs:label ""Böhse Onkelz""@en .
}

UNION {
  ?birthPlace1 ?deathPlace1
  ?birthPlace2 ?deathPlace2
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
573,20,train,"Give me the person decedent at Massachusetts and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?person WHERE { ?person a dbpedia:Person; dbpedia:birthPlace dbpedia:Massachusetts . ?person a dbpedia:Person; dbpedia:deathPlace dbpedia:Massachusetts },3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
582,13,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?father a dbpedia:Person;
    dbpedia:role dbpedia:SoccerManager .
  ?father a dbpedia:Person;
    dbpedia:role dbpedia:Athlete .
  ?father a dbpedia:Person;
    dbpedia:parentOf ?masami_nagasawa .
}
```",2,5,3,2,1,3,3,71,0,0,4,0,0.0,0
236,7,train,"Give me the party member of the administration, that is an organisation, of John Adams.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party
WHERE {
  ?person a dbpedia:Person;
    dbpedia:office dbpedia:President_of_the_United_States ;
    dbpedia:political_party ?party .
  ?person rdfs:label ""John Adams"" .
}",2,3,3,2,1,3,2,20,0,0,269,0,0.0,0
365,10,train,"Give me the native, that is a politician, of the reference to Полтавская губерния.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace WHERE {
  ?guberniya a dbpedia:PoliticalRegion;
    dbpedia:name ""Полтавская губерния"" .
  ?politician a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?politician rdfs:label [""Politician Name""] . # Placeholder for actual politician's label
}",2,3,3,2,1,3,2,20,0,0,11,0,0.0,0
373,5,train,"Give me the writer of the work, that is a single and a musical work and a work and a soundtrack, of .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> """"@en . }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?writer
WHERE {
  ?work a dbpedia:Work;
    dbpedia:type [ rdf:value ""single"" ] .
  ?work a dbpedia:MusicalWork;
    dbpedia:type [ rdf:value ""song"" ] .
  ?work a dbpedia:Soundtrack;
    dbpedia:type [ rdf:value ""soundtrack"" ] .
  ?writer rdfs:label ?writerLabel .
  ?writer rdfs:label ?writerLabel .
}",2,6,3,2,1,2,2,9,0,0,15041,0,0.0,0
98,4,train,Give me the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""Paolo Elito M. Ballesteros IV""@en .
  ?person dbo:birthDateRange ""1858-1947""^^xsd:gYear .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
216,7,train,Give me the death of Pavel Vezhinov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?death
WHERE {
  ?person a dbpedia:Person;
    dbpedia:deathDate ?death .
  ?person rdfs:label ""Pavel Vezhinov""@en .
}",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
917,19,train,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of Kekūanāoʻa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?parent a dbpedia:Monarch;
    dbpedia:hasChild ?child .
  ?child a dbpedia:Person;
    dbpedia:monarchyTitle ""Queen"";
    dbpedia:birthDate ""1838-11-02"" .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
495,3,train,Give me the father of William I of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""William I of Württemberg"" .
  ?person dbpedia:father ?father .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
18,5,train,"Give me the figure known, that is an educational institution, as Saints.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ""Saints""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?institution
WHERE {
  ?institution a dbpedia:EducationalInstitution;
    rdfs:label ""Saints""@en .
}
```",1,2,2,1,1,2,3,28,0,0,25,0,0.0,0
791,28,train,"Give me the predecessor of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura and father of Emperor Go-Toba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?predecessor ?spouse_of_spouse ?father
WHERE {
  ?emperor a dbpedia:Emperor;
    dbpedia:successor ?predecessor .
  ?emperor a dbpedia:Emperor;
    dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:spouse ?spouse_of_spouse .
  ?spouse_of_spouse a dbpedia:Person;
    dbpedia:parent ?father .
  FILTER (regex(str(?emperor), ""Takakura"") AND str(?predecessor) = ""Kameyama"")
}",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
124,33,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal and commander in Mahdist War.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?militaryForce
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedMedal dbpedia:BritishSouthAfricaCompanyMedal ;
    dbpedia:conflict dbpedia:SecondBoerWar .
}",4,7,5,3,2,3,3,71,0,0,3,0,0.0,0
433,0,train,Give me the associated musical artist of Paul Chambers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?associatedArtist
WHERE {
  ?person a dbpedia:Person;
    dbpedia:givenName ""Paul"";
    dbpedia:birthDate ""1935-03-26"";
    dbpedia:genre ""Jazz"" .
  ?person dbpedia:associatedBand/s ?associatedArtist .
}",1,1,2,1,1,3,3,71,0,0,31,0,0.0,0
874,10,train,"Give me the band member of the band, that is an organisation, of Mark Read (singer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandMember
WHERE {
  ?band dbpedia:hasBandMember ?bandMember .
  ?band rdfs:label ""Mark Read""@en .
}",2,3,3,2,1,3,2,20,0,0,7,0,0.0,0
892,24,train,Give me the entity in Province of Reggio Emilia and landmark at elevation of the award of Anna Ishii.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardName ?location WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Anna Ishii""@en .
  ?award a dbpedia:Award ;
    dbpedia:awardee ?person ;
    dbpedia:issuedBy ?issuingOrganization .
  ?issuingOrganization a dbpedia:Organization ;
    dbpedia:location ?location .
}
```

This query will return the name of the award and the location (province) where the award was issued.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
582,25,train,Give me the figure known as the nickname of Japan national football team and player in Kazuaki Nagasawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?nickname
WHERE {
  ?team a dbpedia:SportsTeam;
    dbpedia:country dbpedia:Japan .
  ?player a dbpedia:Person;
    dbpedia:name ""Kazuaki Nagasawa"" .
  ?team dbpedia:hasMember ?player .
  OPTIONAL { ?player rdfs:label ?nickname }
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
453,3,train,"Who is the author, that is a cardinal and a cleric, of Apologia Pro Vita Sua?",SELECT ?result WHERE { <http://dbpedia.org/resource/Apologia_Pro_Vita_Sua> <http://dbpedia.org/property/author> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cardinal>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?author
WHERE {
  ?work a dbpedia:Work;
    dbpedia:author ?author .
  ?author a dbpedia:Person;
    dbpedia:cardinality ""Cardinal"";
    dbpedia:occupation ""Cleric"" .
}",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
465,18,train,"Give me the successor of Renée of France and successor of Ercole II d'Este, Duke of Ferrara and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace1 .
  ?person1 dbpedia:role ""Queen of France"" .
  ?person2 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace2 .
  ?person2 dbpedia:role ""Duke of Ferrara"" .
  ?person1 dbpedia:successor ?successor1 .
  ?person2 dbpedia:successor ?successor2 .
  ?successor1 dbpedia:role ""King of France"" .
  ?successor2 dbpedia:role ""Duke of Ferrara"" .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
274,18,train,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v2 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actorName ?musicalArtist
WHERE {
  ?movie dbpedia:movie(""Imagine the Sound"");
    dbpedia:mainActor ?actorName .
  ?actorName a dbpedia:Person;
    dbpedia:hasProfession dbpedia:Musician .
}",3,4,4,2,2,2,3,28,0,0,6,0,0.0,0
124,8,train,"Give me the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?militaryUnit
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Valleyfield, Quebec"";
    dbpedia:deathPlace ""Khartoum"";
    dbpedia:conflict ""Second Boer War"" .
  ?person rdfs:label ""Herbert Kitchener, 1st Earl Kitchener""@en .
}
```",1,3,2,1,1,3,3,71,0,0,8,0,0.0,0
715,27,train,"Give me the leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. }","Given the reasoning above, we construct a SPARQL query to search for Carlos Franco Iribarnegaray and retrieve the organization or government agency he led:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?organization WHERE {
  ?person rdf:type dbpedia:Person;
    rdfs:label ""Carlos Franco Iribarnegaray""@es;
    dbpedia:role dbpedia:P31 wd:Q10798. # Carlos Franco Iribarnegaray's role as a military leader
    dbpedia:organization ?organization .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
459,5,train,Give me the birth name of Kevin Stitt.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ?name .
    OPTIONAL { ?person dbpedia:birthName ?birthName }
    FILTER (?name = ""Kevin Stitt"") .
}",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
507,34,train,"Give me the professional in Film director, television director and spouse of the person born as the birth name of Anne V. Coates.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?profession
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthName ""Anne V. Coates"";
    dbpedia:occupation ?profession .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
865,24,train,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of Shahla Khatun.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?father .
  ?child dbpedia:name ""Shahla Khatun"" .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
554,3,train,Give me the administration of Francisco da Costa Gomes.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?administrationPolicy ?event WHERE {
  ?person a dbo:OfficeHolder ;
            dbo:office dbpo:Prime_Minister_of_Portugal ;
            dbo:startTerm ""1976-07-10""^^xsd:date ;
            dbo:endTerm ""1978-10-19""^^xsd:date .
  ?person rdfs:label ?name.
  ?person dbo:administrationPolicy ?administrationPolicy.
  ?person rdf:type dbo:Person;
    dbo:birthPlace ""Lisbon, Portugal"";
    dbo:deathPlace ""Lisbon, Portugal"".
  OPTIONAL { ?event a dbo:Event; dbo:start ""1976-07-25""^^xsd:date; dbo:end ""1978-10-19""^^xsd:date. }
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
987,8,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?country
WHERE {
  ?timePeriod rdfs:label ""Central European Time""@en;
    dbpedia:timeZoneCode ""CET"";
    dbpedia:region ?country .
}",1,2,2,1,1,3,3,71,0,0,56,0,0.0,0
645,34,train,Give me the commander in the force of the commander in Siege of Madrid and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:participatedInEvent dbpedia:Siege_of_Madrid .
  ?person a dbpedia:Person;
    dbpedia:heldOffice dbpedia:Ministry_of_the_Army_España .
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
124,17,train,"Give me the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?birthDate ?conflict
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ?birthDate .
  OPTIONAL { 
    ?person dbo:participatedInEvent dbpedia:EventID_1857 .
  }
  FILTER (?birthDate >= ""1850-06-24""^^xsd:date)
}
```",2,4,3,2,1,3,3,71,0,0,8,0,0.0,0
445,6,train,Who is the awardee of Royal Astronomical Society?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee
WHERE {
  ?awardee a dbpedia:Person;
    dbpedia:memberOf dbpedia:RoyalAstronomicalSociety .
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
456,27,train,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?artist a dbpedia:MusicalArtist;
    dbpedia:associatedBand ?bandName .
  ?artist ns:name ""Alan Doyle"" .
}",3,4,4,3,1,3,3,71,0,0,3,0,0.0,0
917,23,train,"Give me the parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"{sparql_query: ""SELECT ?child ?parent WHERE { ?child a dbpedia:Person; dbpedia:hasParent ?parent . ?parent a dbpedia:Royalty . }""}",3,4,4,3,1,3,3,71,0,0,12,0,0.0,0
216,24,train,"Give me the team of Ognjen Vukojević and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?player ?coachRole
WHERE {
  ?player a dbpedia:Person;
    dbpedia:birthPlace ""Sarajevo, Bosnia and Herzegovina"";
    dbpedia:sport ""Football (soccer)"";
    dbpedia:role ""Player"" .
  ?player dbpedia:club ""FK Sarajevo"".
  ?player dbpedia:role ""Coach"" .
  ?team a dbpedia:SportTeam;
    dbpedia:name ""Bosnia and Herzegovina national under-18 football team"" .
  ?team dbpedia:hasMember ?player .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
826,11,train,Give me the spouse of the child of Johann Heinrich Appel.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?childSpouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Johann Heinrich Appel"";
    dbpedia:children ?child .
  ?child a dbpedia:Person;
    dbpedia:spouse ?childSpouse .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
124,1,train,Give me the military force of Battle of Tamai.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX bd: <http://dbpedia.org/ontology/>

SELECT ?militaryForce
WHERE {
  ?battle a dbo:Battle ;
            dbo:participatingSide ?militaryForce .
  ?militaryForce a bd:MilitaryUnit .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
417,24,train,Give me the child of the father of Frederick IX of Denmark and child of Alexandrine of Mecklenburg-Schwerin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father dbpedia:ChristianIX_of_Denmark .
  ?person dbpedia:child ?childName .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
273,7,train,Give me the spouse of the child of Giovanni Agnelli.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child ?spouse
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?father .
  ?father a dbpedia:Person;
    rdfs:label ""Giovanni Agnelli""@it .
  ?child dbpedia:hasSpouse ?spouse .
}",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
965,22,train,"Give me the spouse of Prince Louis of Battenberg and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouseOfLouis ?parentsOfGeorge
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Prince Louis of Battenberg""@en .
  ?person rdfs:father ?fatherOfLouis .
  ?person rdfs:child ?childOfLouis .

  ?childOfLouis a dbpedia:Person;
    dbpedia:name ""Prince George of Battenberg""@en ;
    dbpedia:birthDate ""1890""^^xsd:gYear .

  ?parentsOfGeorge a dbpedia:NobleFamily ;
    dbpedia:name ""House of Battenberg""@en .

  ?childOfLouis dbpedia:hasParent ?parentsOfGeorge .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
417,6,train,Who is the father of Frederick IX of Denmark?,SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthFather ?father .
  ?person dbpedia:id ""Frederick IX of Denmark"" .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
36,16,train,Give me the person born as the birth name of Ayo Makun and actor of Being Mrs Elliot.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?name
WHERE {
  ?person a dbo:Actor ;
            rdfs:label ?name .
  ?person dbpedia2:role [ rdf:value ""Being Mrs Elliot"" ] .
  FILTER (regex(STR(?name), ""Ayo"")) 
}",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
124,31,train,"Give me the military force of Battle of Tamai and commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?militaryForce ?commander
WHERE {
  ?battle rdf:type dbpedia:Event;
    dbpedia:instanceOf dbpedia:Battle_of_Tamai .
  ?militaryForce a dbpedia:MilitaryUnit;
    dbpedia:participatedIn ?battle .
  ?commander a dbpedia:Person;
    dbpedia:commanded ?militaryForce .
}",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
98,4,train,Give me the parent of Emperor Rokujō and child of Emperor Go-Shirakawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . <http://dbpedia.org/resource/Emperor_Rokujō> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commonAncestor
WHERE {
  ?emperor1 a dbpedia:Person;
    dbpedia:parent ?parent1 .
  ?emperor2 a dbpedia:Person;
    dbpedia:child ?child2 .
  ?commonAncestor a dbpedia:Person;
    dbpedia:parent ?parent1;
    dbpedia:child ?child2 .
}
```",2,2,3,1,2,2,2,9,1,9910,0,0.00010089799212995662,1.0,0.00020177562550443908
976,32,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of the leader, that is a politician, of Grand National Assembly of Turkey.",SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?mayorOffice ?grandNationalAssemblyLeader
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolder dbpedia:Office_Holder ;
    dbpedia:politician true ;
    dbpedia:nationality ""Turkish"" .
  ?person dbpedia:party dbpedia:Nation_Alliance_(Turkey) .
  ?person rdfs:label ?mayorOffice .
  ?assemblyLeader a dbpedia:Person;
    dbpedia:office dbpedia:Office ;
    dbpedia:role dbpedia:leaderOfGrandNationalAssembly .
  ?assemblyLeader rdfs:label ?grandNationalAssemblyLeader .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
47,11,train,Give me the office of the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office WHERE {
  ?person a dbpedia:OfficeHolder;
    dbpedia:officeName ""Chief Minister of Jammu and Kashmir"" .
  ?person rdfs:label ""Jagdeep Dhankhar""@en .
}
```",2,2,3,2,1,3,3,71,0,0,80,0,0.0,0
216,13,train,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?player WHERE {
  ?player a dbpedia:Person;
    dbpedia:nationalTeam dbpedia:Bosnia_and_Herzegovina_under_18_football_team .
  ?player rdfs:label ?role . 
  ?player dbpprop:soccerPlayer ?role .
  ?player dbpprop:soccerManager ?role .
}
```",2,5,3,2,1,3,3,71,0,0,13,0,0.0,0
645,23,train,Give me the commander in the force of the commander in Siege of Madrid.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commanderName WHERE {
  ?siege dbpedia:Event;
    dbpedia:startDate ""1936-10-06"";
    dbpedia:endDate ""1939-02-28"";
    dbpedia:location ""Madrid"".
  ?commander a dbpedia:Person;
    dbpedia:name ?commanderName .
}
```

This SPARQL query is designed to find the name of the commander involved in the Siege of Madrid. It does this by:
1. Selecting all events with the `dbpedia:Event` type that have a start date of ""1936-10-06"", an end date of ""1939-02-28"", and a location of ""Madrid"".
2. From these events, it selects the `dbpedia:name` property of the individuals (`?commander`) who are identified as commanders.",3,3,4,3,1,3,3,71,0,0,274,0,0.0,0
892,34,train,Give me the entity in the profession of the true self of Enrico Crolla and entity in Province of Reggio Emilia.,"SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?profession ?province WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Enrico Crolla""@it .
  ?person dbpedia:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?provinceLabel .
  FILTER (lang(?provinceLabel) = ""it"" ) # Ensure the province is in Italian language
}
AND {
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?deathPlace rdfs:label ?provinceLabel .
  FILTER (lang(?provinceLabel) = ""it"" ) # Ensure the province is in Italian language
}",4,4,5,3,2,3,3,71,0,0,40,0,0.0,0
130,2,train,"Give me the native, that is a coach and a college coach, of Madison, Alabama.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?coachName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen""@en;
    dbpedia:birthPlace ""Madison, Alabama""@en;
    dbpedia:role dbpedia:Coach ;
    dbpedia:coachedTeam dbpedia:University_of_Tennessee_at_Knoxville .
}",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
353,5,train,"Give me the alma mater of the awardee of Medal of the Order ""For Merit to the Fatherland"".",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_the_Order_%22For_Merit_to_the_Fatherland%22> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?almaMater
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedByAward dbpedia:Medal_of_the_Order_for_Merit_to_the_Fatherland .
  ?person dbpedia:almaMater ?almaMater .
}
```",2,2,3,2,1,2,2,9,0,0,8,0,0.0,0
326,11,train,"Give me the person decedent at France and resident of the birthplace, that is a state and British, of David Jessel.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace [ a dbpedia:AdministrativeTerritory ; dbpedia:name ""British state"" ] .
  ?person a dbpedia:Person;
    dbpedia:residenceCountry france .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
839,18,train,Give me the band of Peter Schorowsky and band of Kevin Russell (musician) and band of Matthias Röhr.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?person a dbpedia:Musician;
    dbpedia:band ?band .
  ?band rdfs:label ?bandName .
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
382,0,train,Give me the birthplace of Björn Joppe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Björn_Joppe> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  FILTER (?person = ""Björn Joppe"")  // Ensure we are looking for Björn Joppe
}",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
158,7,train,"Give me the entity in the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country
WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality ?nationality .
  ?award a dbpedia:Award;
    dbpedia:awardedTo ?person ;
    dbpedia:awardedBy ?awardingBody .
  ?awardingBody a dbpedia:Organization;
    dbpedia:country ?country .
}
```",2,3,3,2,1,3,2,20,0,0,44301,0,0.0,0
47,33,train,"Give me the office of the awardee of the award, that is an award, of Mantu Ghosh and office of Suvendu Adhikari.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedDbpediaAward dbpedia:PadmaShri .
  ?person rdfs:label ?name .
  ?award dbpedia:awardedBy dbpedia:GovernmentOfIndia .
  ?office a dbpedia:Office; dbpedia:isPartOf dbpedia:MinistryOfHomeAffairs .
  ?person rdfs:label ""Mantu Ghosh"" .
  ?award rdfs:label ""Padma Shri"" .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
124,22,train,"Give me the commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen"" .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
}",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
329,9,train,Give me the entity in United Kingdom and entity in Northern Ireland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?birthPlace rdfs:label ""United Kingdom"" .
  ?deathPlace rdfs:label ""Northern Ireland"" .
}",2,2,3,1,2,2,3,28,0,0,531,0,0.0,0
527,6,train,Give me the author of The Boy Who Kicked Pigs and actor of The Book Tower.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Book_Tower> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/The_Boy_Who_Kicked_Pigs> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?authorName ?actorName
WHERE {
  ?work a dbpedia:Film;
    dbpedia:director ?director .
  ?actor a dbpedia:Actor;
    dbpedia:actIn ?work .
  ?director rdfs:label ""Anand Gandhi"" . 
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
933,39,train,"Give me the reference to Alan Warner and band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName ?bandType
WHERE {
  ?person a dbpedia:MusicalArtist;
    dbpedia:birthDate ""1947-04-21"" .
  ?person dbpedia:bandMemberOf ?band .
  ?band a dbpedia:Band; dbpedia:type dbpedia:MusicGroup .
  ?band rdfs:label ?bandName .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
200,6,train,Give me the band member of the band of Revenge (Canadian band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Revenge_(Canadian_band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandMember
WHERE {
  ?band dbpedia:hasBandMember ?bandMember .
  ?band rdfs:label ""Revenge""@en .
}",2,2,3,2,1,2,2,9,0,0,9,0,0.0,0
232,5,train,"Give me the artistic movement of the person born, that is a writer, on 1849-09-14.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/movement> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1849-09-14""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person ?movement
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1849-09-14""^^xsd:date;
    dbpedia:role dbpedia:P31 wd:Q402 (//writer) .
  OPTIONAL { 
    ?person rdfs:label ?nameLabel .
    FILTER (?nameLabel contains ""AK"") }
  
  ?person dbpedia:deathDate ?deathDate.
  ?movement a dbpedia:ArtisticMovement;
    dbpedia:movementStarts ?startYear.
  ?person rdfs:seeAlso ?artisticContext .
}
```

This query does the following:
- Filters for individuals born on September 14, 1849.
- Ensures that these individuals are writers (`P31` property for writer).
- Looks for labels to identify if ""AK"" is part of their name (optional step to confirm AK Abdul Momen).
- Links the person to their associated artistic movement through `rdfs:seeAlso`.",2,3,3,2,1,2,2,9,0,0,1,0,0.0,0
236,11,train,"Give me the party member of Democratic-Republican Party and party member of the administration, that is an organisation, of John Adams.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . ?result <http://dbpedia.org/ontology/party> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic-Republican_Party> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?partyMember
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""John Adams"" .
  ?person dbpedia:politicalParty dbpedia:Democratic_Republican_Party .
  ?administration a dbpedia:Event; 
    dbpedia:office dbpedia:President_of_the_United_States ;
    dbpedia:startYear 1797;
    dbpedia:endYear 1801 .
  ?partyMember a dbpedia:Person;
    dbpedia:memberOf ?administration .
}",3,4,4,2,2,3,2,20,0,0,18,0,0.0,0
507,18,train,"Give me the director of Entertaining Mr Sloane (film) and professional in Film director, television director and spouse of Anne V. Coates.","SELECT ?result WHERE { <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?directorLabel ?roleFilmDirector ?roleTVDirector ?spouseName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:filmDirected ""Entertaining Mr Sloane"" ;
    dbpedia:roleFilmDirector ?roleFilmDirector .
  ?person a dbpedia:Person;
    dbpedia:roleTVDirector ?roleTVDirector .
  ?person dbpedia:siblingOf ?sibling .
  ?sibling a dbpedia:Person;
    dbpedia:name ""Anne V. Coates"" .
  FILTER (regex(str(?roleFilmDirector), 'Mr Sloane')).
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
129,9,train,Give me the associated musical artist of EarthGang and associated musical artist of Saba (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?artistName ?associatedBand
WHERE {
  ?person a dbpedia:Person;
    rdfs:label ?artistName .
  OPTIONAL { ?person dbpedia:associatedBand ?associatedBand . }
}",2,2,3,1,2,2,3,28,1,1035995,0,9.652546921030584e-07,1.0,1.930507520774674e-06
573,14,train,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards.",SELECT ?result WHERE { <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?authorParent
WHERE {
  ?work dbpedia:hasAuthor ?author .
  ?author a dbpedia:Person;
    dbpedia:officeHolder yes; 
    dbpedia:politicalAffiliation some ?polAffiliation .
  ?polAffiliation a foaf:Organization ;
    dbpedia:name ""British Raj Government Office"" .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
773,2,train,Give me the parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?charles_the_fat a dbpedia:Person;
    dbpedia:birthFather ?father .
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
41,7,train,Give me the party of Enda Kenny and party of Mark Durkan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?party
WHERE {
  ?person dbpedia:office ""Irish Prime Minister"" ;
    dbpedia:politicalParty ?party .
  ?person rdfs:label ""Enda Kenny""@en .
  ?person dbpedia:birthPlace ""Dún Dealgan, Ireland"" .
  
  ?person dbpedia:office ""Northern Ireland Assembly Member"" ;
    dbpedia:politicalParty ?party .
  ?person rdfs:label ""Mark Durkan""@en .
  ?person dbpedia:birthPlace ""Belfast, United Kingdom"" .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
865,18,train,Give me the father of AK Abdul Momen and native of British Raj and father of Shahla Khatun.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father
WHERE {
  ?momen a dbpedia:Person;
    dbpedia:birthPlace <http://dbpedia.org/property/birthPlace#British_Raj> .
  ?khatun a dbpedia:Person;
    dbpedia:father ?father .
  ?momen dbpedia:hasDaughter ?khatun .
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
582,31,train,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and player in Kazuaki Nagasawa.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }",PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?birthPlace ?residence WHERE { ?person a dbpedia:Person; dbpedia:birthPlace ?birthPlace . ?person a dbpedia:Person; dbpedia:residence ?residence . FILTER ( LANG(?birthPlace) = 'ja' ) . FILTER ( LANG(?residence) = 'ja' ) },4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
645,15,train,Give me the force of the commander in Siege of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?forceStrength
WHERE {
  ?siege dbpedia:siegeEvent;
    dbpedia:participatingMilitaryUnit ?unit .
  ?unit a dbpedia:MilitaryUnit;
    dbpedia:commander ?commander .
  ?commander a dbpedia:Person;
    dbpedia:name ""Arthur Wellesley, 1st Duke of Wellington"" .
  ?siege dbpedia:startDate ""1808-08-11""^^xsd:date;
    dbpedia:endDate ""1808-12-14""^^xsd:date .
}
```",2,2,3,2,1,3,3,71,0,0,65,0,0.0,0
417,22,train,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and spouse of Princess Caroline-Mathilde of Denmark.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?childRoyalty
WHERE {
  ?grandParent a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin"" .
  ?parent dbpedia:spouse ?spouse .
  ?child1 a dbpedia:Person;
    dbpedia:parent ?parent;
    dbpedia:name ""Georg Victor"" .
  ?child2 a dbpedia:Person;
    dbpedia:parent ?parent;
    dbpedia:name ""Charlotte Mathilde"" .
  ?child2 a dbpedia:Person;
    dbpedia:spouse ?spouse2 .
  ?childRoyalty a dbpedia:Person;
    dbpedia:child ?child2;
    rdfs:label ""Princess Alexandra of Hanover""@en .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
933,5,train,Who is the professional in Musician?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?profession
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Kolkata"";
    dbpedia:deathPlace ""Dacca"" ;
    dbpedia:occupation ?profession .
  ?person rdf:type dbpedia:Musician .
}",1,1,2,1,1,3,3,71,0,0,1825,0,0.0,0
865,27,train,Give me the father of the child of the father of Abul Maal Abdul Muhith.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?grandfather ?father
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:name ""Abul Maal Abdul Muhith"" .
  ?person1 dbpedia:father ?father1 .
  ?father1 a dbpedia:Person;
    dbpedia:name ?father .
  ?person2 a dbpedia:Person;
    dbpedia:parent ?person1 .
  ?person2 a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen"" . # Assuming AK Abdul Momen is the child in question
}",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
443,17,train,"Give me the birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and birthplace of Carl Larsson.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace1 ?deathPlace1
WHERE {
  ?momen a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace1 .
  ?momen dbpedia:birthdate ""1949-11-20""^^xsd:date .
  
  ?larsson a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace2 .
  ?larsson rdfs:label ""Carl Larsson""@en .
}",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
445,29,train,Give me the entity in United Kingdom and entity in England and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardeeName ?birthPlace ?deathPlace
WHERE {
  ?awardee dbpedia:awardedBy dbpedia:RoyalAstronomicalSociety .
  ?awardee a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?awardee a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?birthPlace rdfs:label ""England"" .
  ?deathPlace rdfs:label ""United Kingdom"" .
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
582,36,train,"Give me the figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu and reference to Japan.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?nickname
WHERE {
  ?team a dbpedia:Team;
    dbpedia:nationalSport [ owl:propertyValue ""Cricket"" ] .
  ?team rdfs:label ?teamLabel .
  ?teamLabel strlang:contains ""Japan"" .
  OPTIONAL { ?team dbpedia:nickname ?nickname }
  FILTER (lang(?nickname) = ""en"" )
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
935,12,train,Give me the death place of Abdul Raziq Bugti and headquarter of the office of Sanaullah Khan Zehri.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdul_Raziq_Bugti> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?deathPlace ?headquarter
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Abdul Raziq Bugti"" .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  
  ?person2 a dbpedia:Person;
    dbpedia:name ""Sanaullah Khan Zehri"" .
  ?person2 a dbpedia:OfficeHolder ;
    dbpedia:officeLocation ?headquarter .
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
232,1,train,"Give me the claim to fame of Katherine ""Kitty"" Marshall.",SELECT ?result WHERE { <http://dbpedia.org/resource/Katherine_%22Kitty%22_Marshall> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?claimToFame
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1840"";
    dbpedia:deathDate ""1928"";
    dbpedia:role ""Spy (American Civil War)"" .
  ?person rdfs:label ?name .
  ?name string-match ""Katherine \""Kitty\"" Marshall"" .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
573,2,train,Give me the parent of John Quincy Adams.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent
WHERE {
  dbpedia:John Quincy Adams a dbpedia:Person;
    dbpedia:parent ?parent .
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
554,13,train,Give me the leader of the administration of the party member of Independent politician.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . ?v1 <http://dbpedia.org/property/leader> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?leader
WHERE {
  ?person a dbpedia:Person;
    dbpedia:office ""Viceroy of India"";
    dbpedia:politicalAffiliation ""Independent""
  }
}",3,3,4,3,1,3,2,20,0,0,1909,0,0.0,0
124,12,train,Give me the military force of Battle of Tamai and military force of Battle of Atbara.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?militaryForce1 ?militaryForce2
WHERE {
  ?battle1 a dbpedia:Battle;
    dbpedia:participatingMilitaryFactions ?militaryForce1 .
  ?battle2 a dbpedia:Battle;
    dbpedia:participatingMilitaryFactions ?militaryForce2 .
  ?battle1 rdfs:label ""Battle of Tamai"".
  ?battle2 rdfs:label ""Battle of Atbara"".
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
93,10,train,"Who is the governor of the native, that is a politician, of Seattle?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?result . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?governor
WHERE {
  ?governor a dbo:OfficeHolder;
    dbo:office dbpedia:Governor_of_Washington .
}",2,3,3,2,1,3,2,20,0,0,18,0,0.0,0
47,7,train,"Give me the entity, that is an award, in India.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?award
WHERE {
  ?award a dbpedia:Award;
    dbpedia:country ""India"" .
}
```",1,2,2,1,1,3,3,71,0,0,272,0,0.0,0
933,13,train,Give me the reference to the birth name of Alan Warner (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthName ?birthName .
  ?person rdfs:label ""Alan Warner""@en .
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
791,4,train,"Give me the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse WHERE {
  ?emperor a dbpedia:Person;
    dbpedia:monarchTitle ""Emperor of Japan"";
    dbpedia:reignStart ""1338-01-01"" .
  ?emperor dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:monarchTitle ?royaltyTitle .
  FILTER (?royaltyTitle LIKE '%King%' OR ?royaltyTitle LIKE '%Queen%')  # Adjust title to fit Japanese royalty titles if necessary
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
83,2,train,"Who is the member, that is a sports manager, of Kedah FA?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . },"The SPARQL query to retrieve this information would look for a `dbpedia:Person` with a `dbpedia:role` of ""sports manager"" and associated with the `dbpedia:organization` of Kedah FA (which could be represented by its DBpedia URI).

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?manager WHERE {
  ?manager a dbpedia:Person;
    dbpedia:role ""sports manager"";
    dbpedia:associatedOrganization dbpedia:Kedah_F.A.
}
```",1,2,2,1,1,3,2,20,0,0,17,0,0.0,0
216,2,train,Give me the team of Ognjen Vukojević.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . },"Given that DBpedia uses RDF and OWL ontologies, we can construct a SPARQL query to find the team(s) Ognjen Vukojević was part of. The query will look for the `dbpedia:team` associated with the `dbpedia:footballer` of person named ""Ognjen Vukojević"".

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?team
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Ognjen Vukojević"" .
  ?person a dbpedia:footballer;
    dbpedia:playsFor ?team .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
83,14,train,"Give me the party of the governor of the commander, that is a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/governor> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?governorParty
WHERE {
  ?war a dbpedia:Conflict;
    dbpedia:endDate ""2013-03-24"" .
  ?commander a dbpedia:Person;
    dbpedia:conflict ?war ;
    dbpedia:role ""Governor"" .
  ?commander a dbpedia:Person;
    dbpedia:affiliatedWith ?governorParty .
}",3,4,4,3,1,3,2,20,0,0,12,0,0.0,0
507,11,train,Give me the spouse of the person born as Anne Voase Coates.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?person dbpedia:firstName ""Anne"" ;
            dbpedia:surname ""Voase Coates"" ;
            dbpedia:spouse ?spouse .
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
865,22,train,Give me the native of British Raj and father of the child of Abu Ahmad Abdul Hafiz.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v0 <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?father
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:nationality ""British Raj"" .
  ?person1 dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen"" .
  ?person2 a dbpedia:Person;
    dbpedia:father ?father .
  ?child dbpedia:parent ?person2 .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
976,39,train,Give me the office of the person born as the birth name of Naci Bostancı and office of Meral Akşener.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office
WHERE {
  ?person a dbpedia:OfficeHolder;
    dbpedia:officeName ?office .
  ?person ns:name ""Ahmet Necatürk"" .
  ?person ns:givenName ""Naci"" .
  ?person ns:surname ""Bostancı"" .
  OPTIONAL { ?person ns:officeStart ""1981-01-01"" }
  OPTIONAL { ?person ns:officeEnd ""1997-12-31"" }
  FILTER (lang(?office) = ""en"")  # Assuming we want the office in English
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
976,37,train,"Give me the office of Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. }","SELECT ?birthPlace ?officeHolder ?mayorOffice ?organizationName ?partyName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Naci Bostancı""@en .
  ?person dbpedia:birthPlace ?birthPlace .

  ?organization a dbpedia:Organization;
    dbpedia:name ""Millet İttifakı""@en;
    dbpedia:politicalParty ?partyName .

  ?officeHolder a dbpedia:OfficeHolder;
    dbpedia:office ?officeOffice .
  
  ?person dbpedia:isMemberOf ?organization .
  ?officeHolder dbpedia:officeHolder ?officeHolderRole .

  ?officeOffice a dbpedia:Office;
    dbpedia:name ""Mayor""@en .

  ?person dbpedia:office ?officeOffice .
}",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
645,37,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and leader of Ministry of the Army (Spain).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?militaryForce
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1865-11-02"";
    dbpedia:deathDate ""1885-11-25"";
    dbpedia:role dbpedia:King_of_Spain ;
    dbpedia:office dbpedia:Ministry_of_the_Army_(Spain);
    dbpedia:nationality ""Spanish"".
  OPTIONAL {
    ?person dbpedia:memberOf ?militaryForce .
  }
}
```

This SPARQL query looks for a person with the characteristics of Alfonso XII, including being born in 1865, dying in 1885, serving as King of Spain and as the leader of the Ministry of the Army. It then optionally retrieves the military force he was a member of.",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
216,17,train,"Give me the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"Given that Pavel Vezhinov's death date is not specified in the question, let's assume it's a specific date (e.g., 2023-04-01). The SPARQL query would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Assuming Pavel Vezhinov died on 2023-04-01
WHERE {
  ?person a dbpedia:Person;
    dbpedia:deathDate ""2023-04-01"" .
  
  ?person dbpedia:role dbpedia:SoccerManager ;
            dbpedia:role dbpedia:SportsManager ;
            dbpedia:role dbpedia:SoccerPlayer .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
353,6,train,"Give me the entity in the country of Moskovsky City District, Nizhny Novgorod.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Moskovsky_City_District,_Nizhny_Novgorod> <http://dbpedia.org/ontology/country> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?entity
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace [ dbpedia:location ?location ] .
  ?location rdfs:label ""Moskovsky City District"" .
  ?person dbpedia:deathPlace [ dbpedia:location ?location2 ] .
  ?location2 rdfs:label ""Nizhny Novgorod"" .
}",2,2,3,2,1,2,2,9,0,0,29927,0,0.0,0
917,3,train,Who is the mayor of Hawaiian Kingdom?,SELECT ?result WHERE { <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?result . },"As the Hawaiian Kingdom does not have a current mayor due to its political status, a SPARQL query would not yield a current answer. Nevertheless, if we were to construct a query based on historical figures associated with the Hawaiian Kingdom during its sovereignty:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?name WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace hawaii .
  ?person dbpedia:role ""Mayor of Hawaii"" .
}
```

This query looks for individuals born in Hawaii who were known as the Mayor of Hawaii during the period of the Hawaiian Kingdom's sovereignty.",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
582,18,train,Give me the player in Kazuaki Nagasawa and figure known as --10-19 and reference to Japan.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?player WHERE {
  ?player a dbo:Person;
    rdfs:label ""Kazuaki Nagasawa""@ja;
    dbo:knownAs ""10-19"" .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
892,33,train,Give me the landmark at elevation of the award of the member of E-girls and entity in Italy.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/elevation> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardLabel ?elevation 
WHERE {
  ?member a dbpedia:Person;
    dbpedia:group dbpedia:Egirls .
  ?award a dbpedia:Award ;
    dbpedia:recipient ?member .
  OPTIONAL { ?award rdfs:label ?awardLabel }
  OPTIONAL { ?award geo:heightInMetres ?elevation }
}

SELECT ?landmarkLabel ?location
WHERE {
  ?landmark a dbpedia:Landmark ;
    dbpedia:locatedInCountry dbpedia:Italy .
  ?landmark rdfs:label ?landmarkLabel .
  OPTIONAL { ?landmark geo:coordinates ?location }
}
```",4,4,5,3,2,3,3,71,0,0,11,0,0.0,0
826,15,train,Who is the child of the father of Anna Magdalena Appel?,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  ?father a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?father dbpedia:name ""Johann Ambrosius Bach"" .
  ?child a dbpedia:Person;
    dbpedia:parent ?father .
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
987,13,train,Give me the birth place of the actor of All for Free.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:role dbpedia:Mohini (since ""All for Free"" is the title of a play by Shakespeare, and Mohini is one of the characters in this play).
    dbpedia:birthPlace ?birthPlace .
}",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
5,7,train,"Give me the birthplace of the person born, that is a politician, as .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen"";
    dbpedia:birthPlace ?birthPlace .
}",2,3,3,2,1,3,2,20,0,0,222,0,0.0,0
274,17,train,Give me the associated musical artist of Cecil Taylor and professional in the designer of Tetris Classic.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?associated_artist ?designer
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Cecil Taylor""@en .
  ?person a dbpedia:Musician .
  
  ?person2 a dbpedia:Person;
    dbpedia:name ""Alexey Pajitnov""@en .
    dbpedia:role ""Designer of Tetris""@en .
  ?person2 a dbpedia:Artist .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
888,7,train,"Give me the commander in the force, that is a societal event and an event, of Serhiy Kotenko.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Serhiy Kotenko""@en .
  ?battle a dbpedia:Event;
    dbpedia:participatedIn ?person ;
    dbpedia:commandedBy ?commander .
  FILTER (lang(?person) = ""en"" )  # Ensure person name is in English
  FILTER (isDefinedBy dbpedia:Battle_of_Stalingrad ?battle)  # Specific event: Battle of Stalingrad
}
```",2,4,3,2,1,3,2,20,0,0,13,0,0.0,0
865,8,train,Who is the child of Abu Ahmad Abdul Hafiz?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?childName WHERE {
  ?parent a dbpedia:Person; rdfs:label ""Abu Ahmad Abdul Hafiz""@en .
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent;
    dbpedia:birthPlace [ property::isPartOf ""British Raj"" ] .
}",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
83,0,train,Give me the player in Greg Boehme.,SELECT ?result WHERE { <http://dbpedia.org/resource/Greg_Boehme> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?player WHERE {
  ?player a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace ;
    dbpedia:sport [ dbpedia:hasPlayerRole ""Greg Boehme"" ] .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
373,6,train,Give me the professional in the profession of Beto Guedes.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Beto_Guedes> <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?personName ?profession
WHERE {
  ?person a dbpedia:Person;
    rdfs:label ?personName .
  OPTIONAL { 
    ?person rdf:type dbpedia:Artist . 
    ?person rdfs:label ""Beto Guedes""@pt.
  }
  ?person a dbpedia:Person;
    dbpedia:occupation ?profession .
}",2,2,3,2,1,2,2,9,0,548539,1543,0.0,0.0,0
124,34,train,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery and military force of Battle of Atbara.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander
WHERE {
  ?battery a dbpedia:Battery;
    dbpedia:type ""Royal Australian Artillery"";
    dbpedia:partOfMilitaryUnit ?militaryUnit .
  ?militaryUnit a dbpedia:MilitaryUnit;
    dbpedia:conflict Battle of Atbara;
    dbpedia:commander ?commander .
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
129,12,train,Give me the associated musical artist of Saba (rapper) and associated musical artist of EarthGang and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artistName ?associatedBand ?professional
WHERE {
  ?sababirthplace a dbpedia:Place ;
               dbpedia:identifier ""Saba (rapper)"" .
  ?sababand dbpedia:associatedBand ?associatedBand .
  ?earthgangbirthplace a dbpedia:Place ;
                    dbpedia:identifier ""EarthGang"" .
  ?earthgangband dbpedia:associatedBand ?associatedBand .
  ?sabaprofessional foaf:work_for ?professional .
  ?earthgangprofessional foaf:work_for ?professional .
  ?associatedBand rdfs:label ""EarthGang"" .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
341,0,train,Give me the band member of Beyoncé.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Beyoncé> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandMember
WHERE {
  ?person a dbpedia:Person;
    dbpedia:groupMembership [ dbpedia:memberRole dbpedia:BandMember ];
    dbpedia:name ""Destiny's Child"" .
}",1,1,2,1,1,2,2,9,0,0,50,0,0.0,0
459,2,train,Give me the person born as John Kevin Stitt.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    rdfs:label ""AK Abdul Momen""@en .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
}",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
5,6,train,Give me the entity in Canada and birthplace of Gerald Regan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> . <http://dbpedia.org/resource/Gerald_Regan> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""Gerald Regan""@en.
}",2,2,3,1,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
459,16,train,Give me the person born as the birth name of Kevin Stitt and governor of Oklahoma.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName WHERE {
  ?governor a dbpedia:OfficeHolder;
    dbpedia:office dbpedia:Governorate_of_Oklahoma ;
    dbpedia:officeHolder ?person .
  ?person a dbpedia:Person;
    dbpedia:name ?birthName .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
41,8,train,"Give me the party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX ewo: <http://www.w3.org/2002/07/owl#>
SELECT ?party WHERE {
  ?person a dbo:ElectionCandidate;
    ewo:office dbo:CastlereaghBoroughCouncil_Electorate_2005 .
  ?person ewo:candidateParty ?party
}
```

This SPARQL query is designed to find the party of candidates who stood in the 2005 Castlereagh Borough Council election. It assumes that there is a direct relationship between `dbo:ElectionCandidate` and `ewo:candidateParty`, which would typically link each candidate to their respective party.",2,4,3,2,1,2,3,28,0,0,6,0,0.0,0
645,39,train,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain) and military force of Spanish Civil War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . },{sparql_query},4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
36,10,train,Give me the person born in the birth year of Deanne Bray.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthYear 1965.
  OPTIONAL { 
    ?person rdfs:label ?name .
    ?name contains ""Deanne"" . 
  }
}
```",2,2,3,2,1,2,3,28,0,0,2611,0,0.0,0
926,34,train,Give me the child of Ahmed III and father of the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?grandparent a dbpedia:Person;
    dbpedia:father ?father .
  ?child a dbpedia:Person;
    dbpedia:child ?child_of_grandparent .
  ?child_of_grandparent = ?father
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
573,9,train,"Give me the person decedent at Massachusetts and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?personName ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace dbpedia:Massachusetts .
  ?person a dbpedia:Person;
    dbpedia:deathPlace dbpedia:Quincy, Massachusetts .
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
442,6,train,Give me the resting place of the actor of This Side of Heaven.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/This_Side_of_Heaven> <http://dbpedia.org/ontology/starring> ?v0 . },"Given the above reasoning, the corresponding SPARQL query to find Jon Tenney's resting place from a hypothetical database that includes such details might look something like this:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?restingPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Jon Tenney"" .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?restingPlace .
}
```

This query assumes that there is a property `dbpedia:deathPlace` used to denote the resting place of individuals in the DBpedia ontology. The first triple identifies Jon Tenney as the person in question, and the second set of triples looks for the `dbpedia:deathPlace` associated with him.",2,2,3,2,1,2,2,9,0,0,3,0,0.0,0
456,14,train,"Give me the band of the band, that is a musical artist, of Dean Brody.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?artist a dbpedia:Musician;
    dbpedia:genre ""Country music"";
    dbpedia:associatedBand ?band .
  ?artist ns:name ""Dean Brody"" .
}",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
417,8,train,"Who is the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?childName ?birthPlace ?deathPlace
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?child a dbpedia:Person;
    dbpedia:isRoyalty true ;
    dbpedia:birthPlace ?birthPlace .
  ?child a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?parent rdf:type dbpedia:Monarch .
  ?parent dbpedia:name ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin"" .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
216,28,train,Give me the player in Mario Ivanković and team of Ognjen Vukojević and player in the coach of Croatia national under-21 football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v1 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?playerInMario ?teamOV ?coach
WHERE {
  ?playerInMario a dbpedia:Player;
    dbpedia:participantRole dbpedia:Team .
  ?playerInMario rdfs:label ""Mario Ivanković""@en .
  
  ?teamOV a dbpedia:FootballTeam;
    dbpedia:hasMember ?playerInMario .

  ?coach a dbpedia:Person;
    dbpedia:role dbpedia:CoachOfCroatiaUnder21FootballTeam .
  
  ?coach rdfs:label ""Ognjen Vukojević""@en .
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
353,2,train,"Give me the awardee of Medal of the Order ""For Merit to the Fatherland"".",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_the_Order_%22For_Merit_to_the_Fatherland%22> . },"The SPARQL query to retrieve this information would involve selecting the individuals (awardees) associated with the medal. Here's how we can construct the query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee
WHERE {
  ?medal a dbpedia:Medal ;
            dbpedia:awardedTo ?awardee .
  ?medal rdfs:label ""For Merit to the Fatherland"" .
}
```

This query searches for all medals labeled as ""For Merit to the Fatherland"" and retrieves the individuals (awardees) who were awarded these medals.",1,1,2,1,1,2,2,9,0,0,12,0,0.0,0
453,2,train,"Give me the birth place, that is a country, of William Denning.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Denning> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person dbpedia:hasCareerInSport cricket;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""William Denning""@en .
}",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
382,2,train,Give me the player in Lukas Kübler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?player
WHERE {
  ?event a dbpedia:Event;
    dbpedia:participant ?player .
  ?event dbpedia:type ""ice hockey match"" .
  ?player a dbpedia:Person;
    dbpedia:name ""Lukas Kübler"" .
}",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
865,35,train,"Give me the father of the child of Abu Ahmad Abdul Hafiz and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Abu Ahmad Abdul Hafiz"" ;
    dbpedia:nativeResidence ""India""^^xsd:string ;
    dbpedia:associatedWith ?associate .
  ?associate a dbpedia:Person;
    dbpedia:name ""Ram Jaipal Singh Yadav""^^xsd:string .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
456,30,train,"Give me the spouse of Danielle Spencer (Australian actress) and band of the band, that is a musical artist, of Dean Brody and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?spouseBand ?bandName 
WHERE { 
  ?person1 a dbpedia:Person; dbpedia:name ""Danielle Spencer"" . 
  ?person2 a dbpedia:Person; rdfs:label ?spouseName . 
  ?person2 dbpedia:spouseOf ?person1 . 
  ?band a dbpedia:Band; dbpedia:members ?bandMembers . 
  ?bandMember a dbpedia:Musician; dbpedia:name ?bandName . 
  ?bandMember rdf:type foaf:Person . 
  ?bandMember rdfs:label ?bandLabel . 
  ?person1 dbpedia:associatedBand ?band . 
}",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
715,37,train,"Give me the commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolder yes; 
    dbpedia:politician yes; 
    dbpedia:president yes;
    dbpedia:generalElection ""1933 Spanish general election"";
    dbpedia:leaderOfMinistry dbpedia:Ministry_of_the_Air_Spain .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
267,3,train,"Give me the player, that is a soccer club, in Rasoul Khatibi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?soccerClub
WHERE {
  ?player dbpedia:hasMember ?name .
  ?name rdfs:label ""Rasoul Khatibi"" .
  ?player a dbpedia:SportTeam ;
    dbpedia:sport ?sport .
  ?sport valueString ""Soccer"" .
}",1,2,2,1,1,3,2,20,0,0,12,0,0.0,0
236,4,train,"Give me the reference, that is an office holder and a politician, to James Madison.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?officeHolder ?politician
WHERE {
  ?officeHolder a dbpedia:OfficeHolder;
    dbpedia:officeTitle ?title .
  ?politician a dbpedia:Person;
    dbpedia:officeHolder ?officeHolder .
}",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
892,2,train,Give me the entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?entity
WHERE {
  ?entity a dbpedia:Person;
    dbpedia:birthPlace [ geonames:country ""Italy"" ; geonames:adminDivisionName ""Reggio Emilia"" ] .
}",1,1,2,1,1,3,3,71,0,0,40,0,0.0,0
976,30,train,Give me the office of Mustafa Şentop and office of Meral Akşener and office of the person born as Mehmet Naci Bostancı.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . ?v0 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office1 ?office2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:office ?office1 .
  ?person2 a dbpedia:Person;
    dbpedia:office ?office2 .
  ?person1 rdf:type dbo:Minister; # Mustafa Şentop as Minister of Justice
  ?person2 rdf:type dbo:DeputyPrimeMinister; # Meral Akşener's political roles
  ?person1 owl:sameAs ?person2 . # Linking Mustafa Şentop and Mehmet Naci Bostancı
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
433,36,train,Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall and associated musical artist of Paul Chambers.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artistName ?profession ?associatedArtist
WHERE {
  ?performance a dbpedia:Event;
    dbpedia:performer ?artistName .
  ?artist a dbpedia:Musician;
    dbpedia:genre ""Jazz"" .
  ?artist foaf:musicalArtist ?associatedArtist .
  ?associatedArtist a dbpedia:Person;
    dbpedia:name ""Paul Chambers"" .
}
```",4,4,5,3,2,3,3,71,0,0,16,0,0.0,0
955,13,train,"Give me the band of the writer of the work, that is a work and an album and a musical work, of Matt Freeman.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Matt Freeman""@en;
    dbpedia:involvement dbpedia:MusicianRole ;
    dbpedia:band dbpedia:Band .
  ?band dbpedia:hasAlbum <http://dbpedia.org/ontology/album> ?album .
  ?album a dbpedia:Album;
    dbpedia:title ""Punk in Drublic""@en .
}
```",3,6,4,3,1,3,2,20,0,0,21,0,0.0,0
281,0,train,Give me the commander in New Guinea campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander
WHERE {
  ?commander a dbpedia:Person;
    dbpedia:birthPlace ""Little Rock, Arkansas"";
    dbpedia:deathPlace ""Washington, D.C."";
    dbpedia:militaryBranch dbpedia:UnitedStatesArmy;
    dbpedia:conflict ""World War II"";
    dbpedia:role ""Commander in New Guinea campaign""
  }
}",1,1,2,1,1,2,3,28,0,0,27,0,0.0,0
83,1,train,Give me the player in Albert Edward (soccer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Albert_Edward_(soccer)> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?player
WHERE {
  ?player a dbpedia:Person;
    dbpedia:sport ?sport .
  ?player rdfs:label ""Albert Edward""@en .
  ?sport = ""soccer"" .
}",1,1,2,1,1,2,2,9,0,0,8,0,0.0,0
926,22,train,"Give me the child of the father, that is a royalty, of Mustafa III and father of Mahmud II.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:monarchOf dbpedia:Ottoman_Sultan ;
    dbpedia:name ""Mustafa III"" .
  ?child a dbpedia:Person;
    dbpedia:father ?parent ;
    dbpedia:monarchOf dbpedia:Ottoman_Sultan .
  ?child dbpedia:birthPlace ?birthPlace .
  ?child dbpedia:deathPlace ?deathPlace .
  ?child rdfs:label ""Mahmud II"" . # Assuming Mahmud II is the child we are looking for
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
122,3,train,"Who is the reference, that is a musical artist and an artist, to Gift of Gab?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""Gift of Gab""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?reference
WHERE {
  ?person a dbpedia:Person;
    dbpedia:role dbpedia:Artist ;
    dbpedia:role dbpedia:Musician .
  ?person rdfs:label ""Gift of Gab""@en .
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
443,15,train,Give me the landmark at elevation of the award of William Shepherd and birthplace of Carl Larsson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardName ?birthPlace
WHERE {
  ?award dbpedia:awardedTo dbpedia:William_Shepherd ; dbpedia:hasElevation ?elevation .
  ?person a dbpedia:Person ; dbpedia:name ?name ; dbpedia:birthPlace ?birthPlace .
  ?person ns:involvement ?award .
  FILTER (?name = ""Carl Larsson"")
}
",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
508,6,train,Give me the birthplace of Ma Hongkui and birthplace of Ma Bufang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ma_Hongkui> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ma_Bufang> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  FILTER (STRSTARTS(?person, 'Ma ') AND (?person != 'Ma Hongkui') AND (?person != 'Ma Bufang'))
}

AND

PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  FILTER (STRSTARTS(?person, 'Ma ') AND (?person = 'Ma Hongkui') AND (?person != 'Ma Bufang'))
}",2,2,3,1,2,3,2,20,0,0,3,0,0.0,0
382,3,train,"Give me the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?manager
WHERE {
  ?club dbpedia:hasSoccerTeam dbpedia:Bonner_S.C.;
    dbpedia:manager ?manager .
  ?manager a dbpedia:Person;
    dbpedia:role dbpedia:SoccerManager .
  ?manager a dbpedia:Person;
    dbpedia:role dbpedia:Athlete .
  ?manager a dbpedia:Person;
    dbpedia:role dbpedia:SportsManager .
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
170,15,train,Give me the entity in the work of International Energy Agency and domain of Mayor.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?personLabel ?role
WHERE {
  ?person a dbpedia:Person;
    dbpedia:employerOrganization dbpedia:International_Energy_Agency ;
    foaf:role ?role .
  ?role a dbpedia:Office_and_position .
  ?person rdfs:label ?personLabel .
}
```",3,3,4,2,2,2,3,28,0,0,99,0,0.0,0
465,10,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and successor of Renée of France.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?successor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Ferrara"";
    dbpedia:succeededBy ?successor .
  ?person dbpedia:spouse Renée_of_France .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
5,3,train,"Give me the person born, that is a politician, as .","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?politicianName ?birthPlace WHERE {
  ?politician a dbpedia:Person;
    dbpedia:officeHolderRole dbpedia:Politician ;
    dbpedia:birthPlace ?birthPlace .
  ?birthPlace rdfs:label LIKE '%British Raj%' .
}
```",1,2,2,1,1,3,2,20,0,0,169,0,0.0,0
935,13,train,"Give me the death place of the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Syed Sohail Hussain Naqvi""@en .
  ?person dbpedia:awardedWith dbpedia:Sitara-e-Jurat .
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
    dbpedia:deathPlace ?deathPlace .
}",3,4,4,3,1,3,2,20,0,0,18,0,0.0,0
129,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","Given the reasoning above, the SPARQL query to extract information about AK Abdul Momen's professional career from DBpedia would focus on finding instances of his role in the Indian independence movement and any political affiliations he might have had. Here is the corresponding SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?role ?affiliation
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Comilla District, Bangladesh"";
    dbpedia:deathPlace ""Dacca (now Dhaka), Bangladesh"";
    dbpedia:memberOf [ owl:sameAs <http://dbpedia.org/ontology/Political_affiliation> ] .
  ?person rdfs:label ""AK Abdul Momen""@en .
}
```

This query looks for individuals matching the name AK Abdul Momen, born in Comilla District and deceased in Dacca (now Dhaka), and checks if they are members of any political affiliation. The `owl:sameAs` predicate is used to link DBpedia resources with external identifiers that might include more detailed information about his political roles.",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
645,22,train,"Give me the commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?commander ?office WHERE { ?person a dbpedia:Person; rdfs:label ?name . ?person ns:fightIn ?battle . ?battle a dbpedia:Battle . ?person dbpprop:memberOf ?organization . ?organization a dbpedia:Organization . ?commander ns:commanderIn ?battle . },3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
573,35,train,"Give me the person decedent at the administration, that is a region, of Charlie Baker and parent of the author, that is a politician and an office holder, of Exchequer Standards.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolder dbpedia:Exchequer_Standards ;
    dbpedia:politicalAffiliation dbpedia:British_People's_Labour_Party .
}
```",4,7,5,2,2,3,3,71,0,0,2,0,0.0,0
826,27,train,"Give me the predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parentOfChild WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person;
    dbpedia:name ""Louis IV, Grand Duke of Hesse"" .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
445,31,train,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and death place of Patrick Moore.",SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:residenceCountry ?country .
  ?person rdfs:label ""Patrick Moore""@en .
  FILTER (lang(?person) = ""en"") .
  ?birthPlace geo:locatedIn ?region .
  ?region a dbpedia:AdministrativeTerritory;
    dbpedia:country ?country
}
```

This SPARQL query does the following:
- Filters for individuals labeled as ""Patrick Moore"" in English.
- Checks that their birth place is located in a region which is an administrative territory of a country.
- Selects the country of residence for these individuals.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
41,12,train,Give me the party of Enda Kenny and party of Declan Costello and party of Mark Durkan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person ?party
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolderRole ?officeHolder .
  OPTIONAL { ?officeHolder rdfs:label ?party }
}
LIMIT 3",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
554,8,train,Give me the leader of the birth place of The Legendary Tigerman.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/leader> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?leader
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace dbpedia:Dhaka .
  ?person rdfs:label ""The Legendary Tigerman""@en .
  ?person dbpedia:role dbpedia:LeaderOf .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
527,10,train,"Give me the work, that is a work and a book, of the host of Hyperland.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v0 . ?result <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"To construct a SPARQL query that finds a book authored by Chris Langham (assuming his name is represented as it is in English in DBpedia), we would use the following query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bookTitle ?author
WHERE {
  ?book dbpedia:author ?author .
  ?author rdfs:label ""Chris Langham""@en .
  ?book dbpedia:type ""dbpedia:Book"" .
}
```

This query selects books (`?book`) and their authors (`?author`), filtering for books where the author's label is ""Chris Langham"" in English.",2,4,3,2,1,3,2,20,0,0,9,0,0.0,0
874,5,train,Give me the band member of The Jones Gang.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandMember
WHERE {
  ?band dbpedia:hasBandMember ?bandMember .
  ?band rdfs:label ""The Jones Gang"" .
}",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
987,35,train,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Šako Polumenta""@en .
  ?person a dbpedia:Artist .
  ?person a dbpedia:MusicalArtist .
  ?person rdfs:isMemberOf dbpedia:Time_zone_region ; # Assuming Central European Time is a region
    rdf:type dbpedia:CountryRegion .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
}",4,7,5,2,2,3,3,71,0,0,2,0,0.0,0
443,5,train,Who is the work of yes?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""yes""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?workLabel WHERE { 
  ?band dbpedia:name 'Yes' . 
  ?album dbpedia:releaseDate '1971-09-01' . 
  ?album dbpedia:artist ?band . 
  ?song dbpedia:trackListEntry ?workLabel . 
  ?song dbpedia:album ?album . 
}",1,1,2,1,1,2,3,28,0,0,1563,0,0.0,0
554,0,train,Give me the leader of Portuguese São Tomé and Príncipe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Portuguese_São_Tomé_and_Príncipe> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?president
WHERE {
  ?country dbo:capital ""São Tomé and Príncipe"" .
  ?country rdfs:label ""Portuguese São Tomé and Príncipe"" .
  ?country dbo:leader ?president .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
773,33,train,"Give me the spouse of Louis the German and parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouseOfLouisGerman ?parentOfLothair
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:name ""Louis the German""@en;
    dbpedia:spouse ?spouseOfLouisGerman .
  ?person2 a dbpedia:Person;
    dbpedia:name ""Lothair I""@en;
    dbpedia:father ?parentOfLothair .
  ?parentOfLothair dbpedia:parent ?person1 .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
192,12,train,Give me the child of the child of Stephen V of Hungary and spouse of Clemence of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Clemence_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchild
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:hasChild ?child1 .
  ?child1 a dbpedia:Person;
    dbpedia:hasChild ?grandchild .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
507,30,train,Give me the spouse of Anne V. Coates and director of Entertaining Mr Sloane (film) and professional in the profession of Guy Ferland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse ?director WHERE {
  ?anne_v_coates a dbpedia:Person;
    dbpedia:hasSpouse ?spouse .
  ?film a dbpedia:Film;
    dbpedia:productionCompany ?productionCompany .
  ?productionCompany a dbpedia:FilmProductionCompany ;
    dbpedia:directedBy ?director .
  ?director a foaf:Person;
    foaf:name ""Guy Ferland"" .
  ?film dbpedia:title ""Entertaining Mr Sloane"" .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
826,14,train,Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father ?predecessorFather
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Prince Friedrich of Hesse and by Rhine"";
    dbpedia:birthDate ""1887"";
    dbpedia:parent ?mother .
  ?mother a dbpedia:Person;
    dbpedia:name ?motherName .
  ?father a dbpedia:Person;
    dbpedia:name ?fatherName .
  ?father dbpedia:parent ?grandfather .
  ?grandfather a dbpedia:Person;
    dbpedia:name ?grandfatherName .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
582,34,train,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara and figure known as --10-19.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",4,5,5,3,2,3,3,71,0,100980,1,0.0,0.0,0
573,23,train,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?administration WHERE {
  ?player a dbpedia:Person;
    dbpedia:name ""Charlie Baker""@en;
    dbpedia:sport dbpedia:AustralianRulesFootball ;
    dbpedia:club ?administration .
}
```",3,4,4,3,1,3,3,71,0,0,968,0,0.0,0
582,6,train,"Give me the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?masami a dbpedia:Person;
    dbpedia:hasFather ?father .
  ?father a dbpedia:Person;
    dbpedia:role dbpedia:SoccerManager ;
    dbpedia:role dbpedia:SportsManager .
  ?masami rdfs:label ""Masami Nagasawa""@en .
}",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
166,6,train,Give me the resting place of Gonzalo Queipo de Llano and entity in Spain.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gonzalo_Queipo_de_Llano> <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""Gonzalo Queipo de Llano""@es.
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
926,29,train,Give me the child of Ahmed III and successor of the child of Ahmed III and father of Mahmud II.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child_of_AhmedIII ?successor_of_child ?father_of_MahmudII
WHERE {
  ?child_of_AhmedIII a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Ahmed III"" .
  
  ?successor_of_child a dbpedia:Person;
    dbpedia:parent ?child_of_AhmedIII ;
    rdfs:label ?successor_label .

  ?father_of_MahmudII a dbpedia:Person;
    dbpedia:parent ?successor_of_child ;
    rdfs:label ""Mahmud II"" .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
192,0,train,Give me the spouse of Clemence of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Clemence_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?clemence a dbpedia:Person;
    dbpedia:name ""Clemence of Austria""@en;
    dbpedia:birthDate ""1713-04-13""^^xsd:date;
    dbpedia:deathDate ""1780-07-20""^^xsd:date .
  ?clemence dbpedia:spouse ?spouse .
  OPTIONAL { ?spouse a dbpedia:Person; dbpedia:name ?name }
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
874,8,train,Give me the band of the band member of The Jones Gang.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . ?result <http://dbpedia.org/ontology/bandMember> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:firstName ""AK"";
    dbpedia:band dbpedia:The_Jones_Gang .
  ?band a dbpedia:Band ;
         dbpedia:name ?bandName .
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
433,14,train,Give me the professional in the profession of Bob Marley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?profession WHERE {
  ?person a dbpedia:Person;
    dbpedia:occupation ?profession .
  ?person rdfs:label ""Bob Marley""@en .
}
```",2,2,3,2,1,3,3,71,0,1,45013,0.0,0.0,0
839,13,train,Give me the band of the member of Böhse Onkelz.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""AK (Andreas Kempin)"" .
  ?person dbpedia:musicalGroup ?band .
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
917,12,train,Give me the child of Kekūanāoʻa and child of Kekūanāoʻa.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?parent dbpedia:name ""Kekūanāoʻa"" .
}",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
433,13,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?associated_artist_birthplace
WHERE {
  ?scott_lafaro a dbpedia:Person;
    dbpedia:name ""Scott LaFaro"" .
  ?scott_lafaro dbpedia:birthPlace ?birthPlace_of_scott .

  ?musical_artists a dbpedia:Person;
    dbpedia:type [ rdf:value ""musician"" ] ;
    dbpedia:birthPlace ?associated_artist_birthplace .

  ?musical_artists rdfs:seeAlso ?scott_lafaro .
}
```",2,4,3,2,1,3,3,71,0,0,13,0,0.0,0
326,4,train,Who is the awardee of French Legion of Honor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee
WHERE {
  ?awardee a dbpedia:Person;
    dbpedia:legion_of_honorAwardedBy dbpedia:French_Legion_of_Honor .
}",1,1,2,1,1,3,2,20,0,0,13,0,0.0,0
18,14,train,Give me the parent of the professional in Actress and professional in .,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/child> ?v2 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parentClass
WHERE {
  ?actor a dbpedia:Actor; dbpedia:gender dbpedia:Female .
  ?professional a dbpedia:Professional .
  ?parentClass rdfs:subClassOf ?actor, ?professional .
}",3,3,4,2,2,2,3,28,0,0,200,0,0.0,0
839,28,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of Peter Schorowsky and band of Matthias Röhr.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v1 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?person ?band
WHERE {
  ?person a foaf:Person;
    foaf:name ""Kevin Richard Russell"" .
  ?person a foaf:Person;
    foaf:band ?band .
  
  ?person a foaf:Person;
    foaf:name ""Peter Schorowsky"" .
  ?person a foaf:Person;
    foaf:band ?band .

  ?person a foaf:Person;
    foaf:name ""Matthias Röhr"" .
  ?person a foaf:Person;
    foaf:band ?band .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
232,4,train,"Give me the artistic movement of Ella Cheever Thayer and claim to fame of Katherine ""Kitty"" Marshall.",SELECT ?result WHERE { <http://dbpedia.org/resource/Katherine_%22Kitty%22_Marshall> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Ella_Cheever_Thayer> <http://dbpedia.org/ontology/movement> ?result . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?artisticMovement ?claimToFame
WHERE {
  ?person a dbo:Person;
    dbo:birthPlace ?birthPlace.
  ?person dbo:deathPlace ?deathPlace.
  ?person rdf:type dbo:Artist ;
    dbo:associatedArtisticMovement ?artisticMovement .
  ?person rdfs:label ?claimToFame .
}",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
329,8,train,Give me the birthplace of the author of The Tailor and Ansty.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:authorOf <http://dbpedia.org/page/The_Tailor_and_Ansty>;
    dbpedia:birthPlace ?birthPlace .
}",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
192,8,train,Give me the child of the child of Stephen V of Hungary.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchild
WHERE {
  ?grandparent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?child a dbpedia:Person;
    dbpedia:hasChild ?grandchild .
  ?grandparent ns:name ""Stephen V of Hungary"" .
  ?child ns:name ""Louis I of Hungary"" .
  ?grandchild ns:name ""Mary"" .
}
```",2,2,3,2,1,3,2,20,0,0,7,0,0.0,0
373,0,train,Give me the writer of 2300 Jackson Street (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/2300_Jackson_Street_(song)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?writer
WHERE {
  ?song dbpedia:lyrics ""2300 Jackson Street"";
  ?song dbpedia:author ?writer .
}
```",1,1,2,1,1,2,2,9,0,0,6,0,0.0,0
976,3,train,"Give me the administration, that is an organisation, of Kemal Kılıçdaroğlu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?politicalParty
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolderOfOffice dbpedia:Prime_Minister_of_Turkey ;
    dbpedia:birthDate ""1951-03-14""^^xsd:date ;
    dbpedia:name ""Kemal Kılıçdaroğlu"" .
}",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
465,30,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of Anne of Brittany and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?successor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:title ""Ercole II d'Este, Duke of Ferrara"";
    dbpedia:succeededBy ?successor .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
865,32,train,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:name ""Ram Jaipal Singh Yadav""@en;
    dbpedia:nationality ""Indian"" .
  ?child a dbpedia:Person;
    dbpedia:name ""Abu Ahmad Abdul Hafiz""@en;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ?name ;
    dbpedia:nationality ""Indian"" .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
456,35,train,"Give me the spouse of the actor of Pacific Drive and band of the band, that is a musical artist, of Dean Brody.",SELECT ?result WHERE { <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?actor rdfs:memberOf dbpedia:Bands ;
    dbpedia:name ""Pacific Drive"" .
  ?actor dbpedia:roleInSeries ""Actor in Pacific Drive"" .
  ?spouse a dbpedia:Person .
  ?actor dbpedia:sameAs ?person .
  OPTIONAL { ?person rdf:type dbpedia:Musician }
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
445,33,train,Give me the death place of the awardee of the establishment of 1820-03-10 and entity in England.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedEvent dbpedia:Event_18200310; 
    dbpedia:birthPlace ""England"";
    dbpedia:deathPlace ?deathPlace .
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
47,17,train,"Give me the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardName ?awardee
WHERE {
  ?award a dbpedia:Award ;
    dbpedia:isAwardedBy ?awardee .
  ?award dbpedia:locatedIn India .
}
```",2,3,3,2,1,3,3,71,0,0,1632,0,0.0,0
791,0,train,Give me the spouse of Taira no Tokuko.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasSpouse ?spouse .
  ?person rdfs:label ""Taira no Tokuko""@ja;
    dbpedia:birthDate ""998""^^xsd:gYear;
    dbpedia:deathDate ""1045""^^xsd:gYear .
  FILTER (lang(?person) = ""ja"")
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
41,2,train,Give me the party of Enda Kenny.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enda_Kenny> <http://dbpedia.org/ontology/party> ?result . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party
WHERE {
  ?person a dbpedia:Politician;
    dbpedia:office ?office .
  ?office rdfs:label ""Taoiseach of Ireland""@en .
  ?person foaf:name ""Enda Kenny"" .
  ?party rdfs:label ?partyLabel .
  ?person rdf:type ?party .
}",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
465,15,train,"Give me the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasParent ?grandparent .
  ?grandparent a dbpedia:Person;
    rdfs:label ""Alfonso I d'Este"" .
  ?parent dbpedia:child ?child .
}",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
456,29,train,Give me the professional in the alter ego of The Shadow and band of Alan Doyle and spouse of Danielle Spencer (Australian actress).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace <>;  # Placeholder for Alan Doyle's birthplace
    foaf:spouse ?spouse .
  ?spouse a dbpedia:Person;
    rdfs:label ""Danielle Spencer""@en .
  ?person ns:alterEgo ""The Shadow"" .  # Assuming The Shadow is an alter ego
}
```

This SPARQL query looks for a person who:
- Is a `dbpedia:Person`
- Has the birthplace of Alan Doyle (placeholder as his exact birthplace isn't specified)
- Is married to Danielle Spencer (identified by her label in English)
- Has ""The Shadow"" as an alter ego",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
917,1,train,Give me the child of Kekūanāoʻa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?parent dbpedia:name ""Kekūanāoʻa"" .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
130,0,train,Give me the figure known as Vanderbilt Commodores.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Vanderbilt_Commodores> . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?teamName
WHERE {
  ?team rdf:type dbpedia:SportsTeam ;
    dbpedia:teamName ?teamName ;
    dbpedia:universityVanderbilt true .
}",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
582,16,train,"Give me the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?athlete rdf:type dbpedia:Athlete .
  ?soccerManager rdf:type dbpedia:SoccerManager .
  ?sportsManager rdf:type dbpedia:SportsManager .
  ?athlete rdfs:label ?name.
  ?soccerManager rdfs:label ?name.
  ?sportsManager rdfs:label ?name.
  
  ?athlete ns:father ?father.
  ?soccerManager ns:child ?kazuaki_nagasawa .
  ?sportsManager ns:child ?kazuaki_nagasawa .
  
  FILTER (STRSTARTS (?name, ""Kazuaki"")) .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
715,32,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in the force of Francisco Largo Caballero.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander1 ?commander2
WHERE {
  ?commander1 a dbpedia:Person;
    dbpedia:nationality ""Spanish"";
    dbpedia:role ""Prime Minister of Spain (Second Spanish Republic)"" .
  ?commander2 a dbpedia:Person;
    dbpedia:name ""Abd el-Krim"";
    dbpedia:role ""Leader of the Rif Rebellion"" .
}",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
417,30,train,"Give me the spouse of Princess Caroline-Mathilde of Denmark and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of Christian X of Denmark.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childName ?royaltyTitle WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin"" .
  ?father a dbpedia:Person; dbpedia:name ""Frederick Francis III, Grand Duke of Mecklenburg-Schwerin"" .
  ?mother a dbpedia:Person; dbpedia:name ""Louise of Sweden"" .
  ?child a dbpedia:Person;
    dbpedia:parent ?person ;
    dbpedia:hasSpouse ?spouse ;
    dbpedia:hasChild ?childName .
  ?child a dbpedia:Person; dbpedia:birthDate ?birthdate .
  ?spouse a dbpedia:Person; dbpedia:name ?spouseName .
  FILTER (?childName IN ( ?child ) AND ?childName rdfs:label ?royaltyTitle) .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
373,3,train,Give me the profession of Beto Guedes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Beto_Guedes> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?profession
WHERE {
  ?person rdf:type dbpedia:Person;
    dbpedia:name ""Beto Guedes""@en .
  ?person rdfs:label ?profession .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
341,2,train,Give me the awardee of List of awards and nominations received by Beyoncé.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Beyoncé> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardWinnerOf [ a dbpedia:Award_Nomination ; dbpedia:name ""List of awards and nominations received by Beyoncé"" ] .
}",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
47,24,train,Give me the office of the awardee of Banga Bhushan and office of Ajoy Mukherjee.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office_of_awardee ?office_of_mukherjee
WHERE {
  ?awardee a dbpedia:Person;
    dbpedia:awardRecipientOf dbpedia:Banga_Bhusan ;
    dbpedia:office ?office_of_awardee .
  ?mukherjee a dbpedia:Person;
    dbpedia:officeHolder ?office_of_mukherjee .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
158,4,train,"Who is the person deceased, that is an office holder and a politician, on 1945-09-15?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolder yes .
  ?person dbpedia:deathDate ""1945-09-15"" .
}",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
582,4,train,Give me the residence of Hirotaka Sugawara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""Hirotaka Sugawara""@ja.
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
273,2,train,Give me the child of Edoardo Agnelli (1831-1871).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?parent a dbpedia:Person; dbpedia:name ""Edoardo Agnelli"" .
  ?parent dbpedia:hasChild ?child .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
456,22,train,"Give me the band of the band, that is a musical artist, of Dean Brody and spouse of Danielle Spencer (Australian actress).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Dean Brody""@en .
  ?person a dbpedia:MusicalArtist ;
    dbpedia:genre ""Country music""@en .
  ?person dbpedia:spouse [ a dbpedia:Person; rdfs:label ""Danielle Spencer""@en ] .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
892,8,train,"Give me the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?party a dbpedia:PoliticalParty;
    dbpedia:name ""Democratic Party (Italy)"" .
  ?party dbpedia:foundIn ?birthPlace .
  OPTIONAL { ?party dbpedia:ceasesToExistIn ?deathPlace }
}
```",1,5,2,1,1,3,3,71,0,0,14,0,0.0,0
926,23,train,Give me the father of the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandfather
WHERE {
  ?spouse a dbpedia:Person;
    dbpedia:sibling [ dbpedia:hasSibling ?sibling ] .
  ?sibling a dbpedia:Person;
    dbpedia:parent ?parentOfSibling .
  ?parentOfSibling a dbpedia:Person;
    dbpedia:child ?spouse .
  ?grandfather a dbpedia:Person;
    dbpedia:parent ?parentOfGrandfather .
  ?parentOfGrandfather a dbpedia:Person;
    dbpedia:child ?parentOfSpouse .
  ?parentOfSpouse a dbpedia:Person;
    dbpedia:sibling [ dbpedia:hasSibling Neşerek_Kadın ] .
}",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
507,29,train,"Give me the spouse of Anne V. Coates and professional in Film director, television director and director of the movie, that is a movie and a work, with Beryl Reid.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v3 <http://dbpedia.org/ontology/director> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?anneVCoates a dbpedia:Person;
    dbpedia:name ""Anne V. Coates"" .
  ?anneVCoates a dbpedia:Film_Director;
    dbpedia:directedMovie ""The Long Good Friday"" .
  ?anneVCoates a dbpedia:Television_Director;
    dbpedia:directedEpisode ?episode .
  ?spouse a dbpedia:Person;
    dbpedia:name ?name .
  ?episode a dbpedia:Television_Episode ;
    dbpedia:director ?spouse .
  FILTER ( ?name = ""Beryl Reid"" )
}",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
274,14,train,Give me the professional in the designer of Tetris Classic and band member of Dizzy Gillespie.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?role WHERE { ?person a dbpedia:Person; dbpedia:job ?role . FILTER (lang(?role) = 'en') },3,3,4,2,2,2,3,28,0,0,8,0,0.0,0
326,13,train,"Give me the resident of the birthplace, that is a state and British, of the professional in Writer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Writer""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person dbpedia:periodActive dbpedia:BritishRaj.
  ?birthPlace a dbpedia:IndianState.
}
```",3,5,4,3,1,3,2,20,0,0,120,0,0.0,0
459,18,train,Give me the governor of Dana Murphy and person born as the birth name of Kevin Stitt.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthName1 ?governorName1, ?birthName2 ?governorName2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birth_name ?birthName1 .
  ?person1 dbpedia:office_holding [ dbpedia:officeHolder ?governorName1 ] .

  ?person2 a dbpedia:Person;
    dbpedia:birth_name ?birthName2 .
  ?person2 a dbpedia:Person;
    dbpedia:office_holding [ dbpedia:officeHolder ?governorName2 ] .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
791,2,train,Give me the father of Emperor Go-Toba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?fatherName
WHERE {
  ?emperor a dbpedia:Person;
    dbpedia:monarchTitle ""Emperor Go-Toba"";
    dbpedia:birthDate ""1053"";
    dbpedia:deathDate ""1106"";
    dbpedia:father ?father .
  ?father rdfs:label ?fatherName .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
129,6,train,Give me the professional in  and associated musical artist of EarthGang.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?professionalBackground ?associatedArtists
WHERE {
  ?band rdfs:label ""EarthGang""@en .
  ?band dbpedia:genre ?professionalBackground .
  ?band dbpedia:originallyFrom ?origin .
  ?band dbpedia:members ?associatedArtists .
}",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
507,23,train,Give me the spouse of the person born as the birth name of Anne V. Coates.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?anne a dbpedia:Person;
    dbpedia:name ""Anne V. Coates"" .
  ?anne dbpedia:birthName ?birthName .
  ?person a dbpedia:Person;
    dbpedia:namedBy ?birthName;
    dbpedia:spouse ?spouse .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
888,3,train,"Give me the force, that is a societal event and an event, of Serhiy Kotenko.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?impactStatistics
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Serhiy Kotenko""@en .
  ?person dbpedia:hasStatistic ?impactStatistics .
}
```

This query looks for the `dbpedia:hasStatistic` property associated with Serhiy Kotenko, which would contain his impact statistics.",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
645,25,train,"Give me the military force of Spanish Civil War and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?militaryForce ?leader WHERE { ?person a dbpedia:Person; rdfs:label ?name . ?person ns:serviceMemberOf dbpedia:MilitaryForce ; dbpedia:leader ?leader . FILTER (lang(?name) = 'es' ) },3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
216,4,train,Give me the awardee of Australian Defence Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee
WHERE {
  ?medal a dbpedia:Medal ;
            dbpedia:awardedTo ?awardee .
  ?medal rdfs:label ""Australian Defence Medal"" .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
965,38,train,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?prince_louis a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace_louis .
  ?prince_george a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace_george .
  ?parent dbpedia:parent ?prince_louis .
  ?parent dbpedia:parent ?prince_george .
}
```",4,6,5,2,2,3,3,71,0,9999,2,0.0,0.0,0
445,35,train,"Give me the entity in the residence, that is a country, of Anna Sharkey and entity in the award of George H. Cameron.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlaceOfSharkey ?awardOfCameron
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlaceOfSharkey .
  ?person2 a dbpedia:Person;
    dbpedia:awardReceivedBy ?awardOfCameron .
  ?person1 ns:name ""Anna Sharkey"" .
  ?person2 ns:name ""George H. Cameron"" .
}
```",4,5,5,2,2,3,3,71,0,0,102,0,0.0,0
433,39,train,Give me the associated musical artist of Bill Evans and professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?billEvansArtist ?slowhandArtist
WHERE {
  ?billEvans a dbpedia:Person;
    dbpedia:birthDate ""1929-05-08"";
    dbpedia:deathDate ""1980-08-15"";
    dbpedia:occupation ""Musician"";
    dbpedia:genre ""Jazz"" .
  
  ?slowhandAlbum a dbpedia:Album;
    dbpedia:title ""Slowhand at 70 – Live at the Royal Albert Hall"";
    dbpedia:artist ?slowhandArtist .
  
  ?billEvans dbpedia:performedIn ?slowhandAlbum .
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
865,38,train,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and father of the child of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?politicianChildFather ?non_politicianChildFather WHERE { ?person a dbpedia:Person . ?person dbpedia:child [ dbpedia:parent dbpedia:Person ] . ?person dbpedia:parent [ dbpedia:role dbpedia:ParentOf ] . ?person1 a dbpedia:Person . ?person1 dbpedia:birthPlace 'Abu Ahmad Abdul Hafiz' . ?politicianChildFather dbpedia:parent ?person . FILTER ( ?person rdf:type dbpedia:Politician ) . ?non_politicianChildFather dbpedia:parent ?person . FILTER ( ! (?person rdf:type dbpedia:Politician) ) },4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
839,34,train,"Give me the band of Matthias Röhr and band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band1 ?band2
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  OPTIONAL { ?person rdfs:label ?name }
  FILTER (lang(?name) = ""en"")  # Assuming we are looking for the English name
  ?person rdf:type dbpedia:Musician .
  ?person rdfs:label ?name .
  ?band1 a dbpedia:Band; member ?person .
  ?person rdfs:label ""Kevin Russell"" .
  ?band2 a dbpedia:Band; member ?person .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
926,18,train,Give me the child of Ahmed III and successor of Mustafa III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?parent a dbpedia:Monarch;
    dbpedia:title ""Ahmed III"" .
  ?grandparent a dbpedia:Monarch;
    dbpedia:title ""Mustafa III"" .
  ?parent dbpedia:successor ?grandparent .
  ?child a dbpedia:Person;
    dbpedia:father ?parent .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
495,7,train,Give me the child of the father of William I of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/William_I_of_Württemberg> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?father a dbpedia:Person;
    dbpedia:offspring ?child .
  ?father ns:fatherOf dbpedia:William_I_of_Württemberg .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
582,39,train,"Give me the player in Kazuaki Nagasawa and figure known as the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?teamNickname
WHERE {
  ?player a dbpedia:Person;
    dbpedia:sportDiscipline dbpedia:Soccer ;
    dbpedia:memberOf ?team .
  ?team rdfs:label ?teamNickname .
  ?player rdfs:label ""Kazuaki Nagasawa""@en .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
791,1,train,Give me the predecessor of Emperor Antoku.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?predecessor WHERE {
  ?emperor a dbpedia:Monarch;
    dbpedia:monarchyStartYear ?year .
  ?precedingRuler a dbpedia:Person;
    dbpedia:reignsBefore ?emperor .
  FILTER (?year < ?emperor/dbpedia:monarchyEndYear) .
  ?precedingRuler rdfs:label ?predecessor .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
130,8,train,"Give me the entity in the administration, that is American, of .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://dbpedia.org/property/governor> """"@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""United States"";
    dbpedia:role dbpedia:Administrator .
}",2,3,3,2,1,3,2,20,0,0,26076,0,0.0,0
326,0,train,"Give me the person decedent at Rancho Mirage, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Rancho_Mirage,_California> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:deathPlace dbpedia:Location ;
    dbpedia:locatedIn dbpedia:Rancho_Mirage , California .
}",1,1,2,1,1,2,2,9,0,0,97,0,0.0,0
445,4,train,"Give me the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?residence
WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality ?nationality .
  OPTIONAL { ?person dbpedia:birthPlace ?birthPlace }
  FILTER ( ?birthPlace != """" )
  AND (?nationality = ""United Kingdom"")
}",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
124,35,train,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . }","Given that detailed personal records for each member of the Royal Australian Artillery during the Second Boer War might not be readily available in a structured database like DBpedia, we will construct a query based on the assumption that such data exists and is accessible through DBpedia's ontology:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander
WHERE {
  ?battery a dbpedia:ArtilleryBattery;
    dbpedia:unitName ""A Field Battery, Royal Australian Artillery"";
    dbpedia:conflict dbpedia:SecondBoerWar .
  ?conflict a dbpedia:MilitaryConflict;
    dbpedia:startYear 1899;
    dbpedia:endYear 1902 .
  ?commander a dbpedia:Person;
    dbpedia:role ""Commander of A Field Battery, Royal Australian Artillery"" .
}
```

This query looks for a person who was the commander of an artillery battery named ""A Field Battery, Royal Australian Artillery"" during the Second Boer War.",4,8,5,2,2,3,3,71,0,0,9,0,0.0,0
326,5,train,"Give me the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?result . },"To retrieve this information from DBpedia, we can use the following SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?award WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedWith ?award .
  ?person ns:name ""Adelbert Cronkhite"" .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
47,0,train,Give me the office of Suvendu Adhikari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office
WHERE {
  ?person a dbpedia:Politician;
    dbpedia:office ?office .
  ?person rdfs:label ""Suvendu Adhikari""@en .
}",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
417,27,train,"Give me the child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:parentName ""Alexandrine of Mecklenburg-Schwerin"" .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent;
    dbpedia:isDescendantOfSomePerson ?parent.
}
```",3,5,4,3,1,3,3,71,0,0,8,0,0.0,0
216,0,train,Give me the player in Igor Bišćan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?player
WHERE {
  ?person a dbpedia:Person;
    foaf:name ""Igor Bišćan"";
    dbpedia:sport ?sport .
  ?sport rdfs:label ""Football"" .
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
136,6,train,Give me the landmark at elevation of the award of Bret Anthony Johnston.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v0 . <http://dbpedia.org/resource/Bret_Anthony_Johnston> <http://dbpedia.org/property/awards> ?v0 . },"Given the nature of the information required (specific award details and associated venue), a direct SPARQL query might not be straightforward without specific structured data about each award event. However, assuming we have a dataset that links awards to their locations, a general approach could be:

```sparql
PREFIX award: <http://example.org/awardontology/>
PREFIX location: <http://example.org/locationontology/>

SELECT ?awardName ?location
WHERE {
  ?award award:awardedTo ""Bret Anthony Johnston"" ;
            award:location ?location .
  ?location a location:PhysicalLocation;
            location:heightInMeters ?elevation .
}
```

This query assumes the existence of an `awardontology` and `locationontology` with appropriate properties. It searches for awards given to Bret Anthony Johnston and retrieves the associated physical locations along with their height in meters (interpreted as ""elevation"").",2,2,3,2,1,2,2,9,0,0,909,0,0.0,0
892,4,train,Give me the profession of Henri Crolla.,SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?profession
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Italy"";
    dbpedia:occupation ?profession .
  FILTER (lang(?person) = ""en"")  # Ensure the language is English for accurate results
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
124,20,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in Mahdist War.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?militaryForce WHERE {
  ?person a dbpedia:Person; rdfs:label ""Frank Rhodes""@en .
  ?person dbpedia:conflict dbpedia:Mahdist_War .
  ?person a dbpedia:Military_personnel;
    dbpedia:military_branch ?militaryForce .
}
```

This SPARQL query looks for the military branch (`?militaryForce`) that Frank Rhodes was part of, given that he was involved in the Mahdist War and identified as a military personnel.",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
216,5,train,Give me the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?result . },"Given that the input specifies a connection to DBpedia, which is a knowledge base about entities and their interrelations, we can construct a SPARQL query to retrieve the designer of ""Woolfe: The Red Hood Diaries.""

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?designer
WHERE {
  ?work a dbpedia:ComicBook;
    dbpedia:title ""Woolfe: The Red Hood Diaries"";
    dbpedia:creator ?designer .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
582,22,train,Give me the figure known as the nickname of Japan national football team and reference to Japan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?nickname ?country
WHERE {
  ?team a dbpedia:sportTeam;
    dbpedia:sport dbpedia:Soccer ;
    dbpedia:country ?country .
  ?country a dbpedia:Country ;
    rdfs:label ""Japan"" .
  ?team rdfs:label ?nickname .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
47,22,train,Give me the office of the awardee of Padma Vibhushan and office of Suvendu Adhikari.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office_of_awardee ?office_of_adhikari
WHERE {
  ?awardee a dbpedia:Person;
    dbpedia:awardPadmaVibhushan ?award .
  ?awardee dbpedia:hasOffice ?office_of_awardee .
  
  ?adhikari a dbpedia:Person;
    dbpedia:office ?office_of_adhikari .
}",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
443,6,train,Give me the birthplace of Ulf Lundell and landmark at elevation of 28.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlaceLabel ?elevationLandmarkLabel
WHERE {
  ?person dbpedia:hasBirthPlace ?birthPlace .
  ?landmark dbpedia:heightInMetres ""28""^^<xsd:integer> .
  ?person rdfs:label ?personLabel .
  ?landmark rdfs:label ?elevationLandmarkLabel .
  ?person ns:name ""Ulf Lundell"" .
  ?landmark a dbpedia:Landmark
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
353,3,train,"Give me the country of Moskovsky City District, Nizhny Novgorod.","SELECT ?result WHERE { <http://dbpedia.org/resource/Moskovsky_City_District,_Nizhny_Novgorod> <http://dbpedia.org/ontology/country> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country
WHERE {
  ?person a dbpedia:CityDistrict ;
            dbpedia:locatedInCountry ?country .
  ?person rdfs:label ""Moskovsky City District, Nizhny Novgorod""@en .
}",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
926,27,train,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?parent a dbpedia:Person; dbpedia:father dbpedia:Mustafa_III .
  ?child a dbpedia:Person; dbpedia:parent ?parent; dbpedia:isRoyalty true .
}",3,5,4,3,1,3,3,71,0,0,11,0,0.0,0
582,14,train,Give me the figure known as the nickname of Japan national football team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?nickname
WHERE {
  ?team a dbpedia:SportsTeam ;
    dbpedia:country dbpedia:Japan ;
    rdfs:label ?teamLabel .
  ?teamLabel ns:prefLabel ?nickname .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
507,8,train,Give me the profession of Guy Ferland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?profession WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Guy Ferland"" .
  OPTIONAL { ?person rdfs:label ?label . }
  FILTER (regex(strlang:lower(?label), ""guy"", ""i"")) .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
987,16,train,"Who is the actor of the show, that is a film, with Emir Hadžihafizbegović?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?actor
WHERE {
  ?film a dbpedia:Film;
    dbpedia:title ""Tajne vijece"" .
  ?film dbpedia:mainActor ?actor .
}",2,3,3,2,1,3,3,71,0,0,54,0,0.0,0
102,9,train,"Give me the player in the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?player
WHERE {
  ?player a dbpedia:FootballPlayer;
    dbpedia:isMemberOf dbpedia:England women's national football team .
}",2,3,3,2,1,3,2,20,0,0,180,0,0.0,0
826,25,train,"Give me the successor of Louis II, Grand Duke of Hesse and predecessor of the parent of Prince Friedrich of Hesse and by Rhine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor_of_louis_ii ?predecessor_of_princess_alice_father
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:title ""Louis II, Grand Duke of Hesse""@en;
    dbpedia:succeededBy ?successor_of_louis_ii .
  ?person2 a dbpedia:Person;
    dbpedia:parent ?mother ;
    dbpedia:father ?father ;
    dbpedia:name ""Princess Alice of the United Kingdom""@en .
  ?mother a dbpedia:Person;
    dbpedia:parent ?grandmother ;
    dbpedia:name ""Princess Alice of the United Kingdom""@en .
  ?father a dbpedia:Person;
    dbpedia:name ""Prince Albert of Saxe-Coburg and Gotha""@en .
  ?grandmother a dbpedia:Person;
    dbpedia:succeededBy ?predecessor_of_princess_alice_father .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
527,13,train,"Give me the actor of the movie, that is a work and English and a television show, with the professional in Actor.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?v0 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?actor ?movieTitle ?tvShowTitle
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:roleInMovie [ dbpedia:filmLanguage ""en"" ] .
  ?actor a dbpedia:Person;
    dbpedia:roleInTVSeries ?tvShow .
  ?actor dbpedia:hasRoleInFilm ?movie .
  ?movie dbpedia:language ""en"" .
  ?tvShow dbpedia:hasActor ?actor .
}
```",3,6,4,3,1,3,2,20,0,0,1472,0,0.0,0
216,10,train,Give me the player in Igor Bišćan and team of Ognjen Vukojević.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?player ?team
WHERE {
  ?player a dbpedia:Person;
    dbpedia:sport ""Football"" .
  ?player dbpedia:memberOf ?team .
  ?team rdfs:label ""FK Partizan""@en .
  ?player rdfs:label ""Igor Bišćan""@en .
  ?teamMember a dbpedia:ClubMember ;
    dbpedia:club ?team .
  ?teamMember rdfs:label ""Ognjen Vukojević""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
136,0,train,Give me the region coded as 03834.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ""03834"" . }","A SPARQL query to retrieve this information from a hypothetical geographical database might look like:

```sparql
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
SELECT ?regionCode ?regionName
WHERE {
  ?regionCode geo:code ""03834"" .
  ?regionCode rdfs:label ?regionName .
}
```",1,1,2,1,1,2,2,9,0,0,9,0,0.0,0
465,1,train,Give me the spouse of Archduchess Barbara of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Austria"";
    dbpedia:deathPlace ""Austria"";
    dbpedia:spouse ?spouse .
  ?person rdfs:label ""Archduchess Barbara of Austria""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
791,15,train,"Give me the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse WHERE {
  ?emperor a dbpedia:Person;
    dbpedia:monarchTitle ""Emperor of Japan"";
    dbpedia:birthDate ""1338"";
    dbpedia:deathDate ""1398"" .
  ?emperor dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:monarchTitle ""Queen consort of Japan"" .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
926,9,train,Give me the successor of Mustafa III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?successor ?father
WHERE {
  ?person1 a dbpedia:Person; dbpedia:name ""Mustafa III"" .
  ?person2 a dbpedia:Person; dbpedia:name ""Mahmud II"" .
  ?person1 dbpedia:succeededBy ?successor .
  ?person2 dbpedia:parent ?father .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
645,1,train,Give me the military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?nationalist_military_force
WHERE {
  ?conflict a dbpedia:Conflict;
    dbpedia:startYear 1936;
    dbpedia:endYear 1939;
    dbpedia:involvedParty ?nationalist_party .
  ?nationalist_party a dbpedia:PoliticalEntity;
    dbpedia:label ""Nationalists"";
    dbpedia:roleInConflict ""Opposing the Republicans"" .
}
```",1,1,2,1,1,3,3,71,0,0,514,0,0.0,0
353,1,train,Give me the entity in Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?entity WHERE { ?entity a dbpedia:Entity ; dbpedia:country ""Russia"" }
```",1,1,2,1,1,2,2,9,0,0,29927,0,0.0,0
83,5,train,Give me the player in the person born on 1995-07-07.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1995-07-07""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?playerName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthday ""1995-07-07"";
    dbpedia:role ?playerRole .
  ?playerRole a dbpedia:SportsRole ;
               dbpedia:sport ""Football (Soccer)"" .
}
```",2,2,3,2,1,2,2,9,0,0,133,0,0.0,0
508,9,train,"Give me the commander, that is a politician, in the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?commander a dbpedia:Person;
    dbpedia:birthPlace ""Japan"";
    dbpedia:conflict dbpedia:Pacific_War ;
    dbpedia:role dbfo:Commander .
  ?commander a dbo:Politician .
}
```",2,6,3,2,1,3,2,20,0,0,28,0,0.0,0
839,12,train,Give me the band of Peter Schorowsky and band of Matthias Röhr.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Germany"";
    dbpedia:genre ""Rock music"";
    dbpedia:associatedBand ?bandName .
  ?bandName rdfs:label ?bandNameLabel .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
573,7,train,Give me the work of John Quincy Adams.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?work WHERE {
  ?person a dbpedia:Person;
    dbpedia:office ""United States Secretary of State"";
    dbpedia:term ?work .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
5,14,train,"Give me the entity in the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?award
WHERE {
  ?band a dbpedia:Band;
    dbpedia:name ""Fiel a la Vega""@es .
  ?band dbpedia:hasMember [ dbpedia:name ""Rubén Colón Tarrats"" ] .
  ?band dbpedia:hasAward ?award .
}",3,4,4,3,1,3,2,20,0,0,20990,0,0.0,0
495,8,train,Give me the father of the child of Princess Charlotte of Saxe-Hildburghausen.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . ?v0 <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father
WHERE {
  ?person a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Person; 
    dbpedia:name ""Victoria of Saxe-Coburg and Gotha"" .
  ?person ns:father ?father .
}",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
839,38,train,"Give me the band of the member of Böhse Onkelz and band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify at least one member of Böhse Onkelz
?member1 a dbpedia:Musician;
    dbpedia:bandB ""Böhse Onkelz"".

# Step 2: Find bands that the identified member is part of
SELECT DISTINCT ?band WHERE {
  ?member1 dbpedia:isMemberOf ?band .
}

# Step 3: Identify the band Charlie Huhn is part of
?charlieHuhn a dbpedia:Musician;
    dbpedia:bandB ?charlieHuhnBand .

# Combine results to find bands associated with Böhse Onkelz members and Charlie Huhn
UNION {
  ?band1
  ?charlieHuhnBand
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
773,18,train,Give me the parent of Carloman of Bavaria and spouse of Louis the German and parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent1 ?spouse2 ?child3
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:father ?parent1 .
  ?person1 dbpedia:son ?child3 .
  
  ?person2 a dbpedia:Person;
    dbpedia:wife ?spouse2 .
  
  ?person2 dbpedia:son ?person3 .
  
  ?person3 a dbpedia:Person;
    dbpedia:father ?parent1 .
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
445,17,train,Give me the award of the commander in Battle of Saint-Mihiel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?award WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""John J. Persh"";
    dbpedia:commandedInBattleOf ""Saint-Mihiel, France"".
    OPTIONAL { ?person rdfs:label ?award }
}
```",2,2,3,2,1,3,3,71,0,0,26,0,0.0,0
839,1,train,Give me the band of Peter Schorowsky.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Peter Schockowski""@en .
  ?person rdfs:member ?band .
  ?band a dbpedia:Band .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
445,32,train,"Give me the entity in the residence, that is a country, of Anna Sharkey and death place of the awardee of Royal Astronomical Society.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?country WHERE { ?person a dbpedia:Person; dbpedia:nationality ?country . },4,5,5,2,2,3,3,71,0,3539,1,0.0,0.0,0
935,6,train,Give me the death place of Abdul Raziq Bugti and headquarter of Provincial Assembly of Balochistan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdul_Raziq_Bugti> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Provincial_Assembly_of_Balochistan> <http://dbpedia.org/ontology/location> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?deathPlace ?assemblyHeadquarters
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Abdul Raziq Bugti"" .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?assembly a dbpedia:ProvincialAssemblyOfBalochistan;
    dbpedia:headquarter ?assemblyHeadquarters .
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
166,2,train,"Give me the force, that is an event and a societal event and a military conflict, of Manuel Hedilla.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?event WHERE {
  ?person a dbpedia:Person;
    dbpedia:participatedIn ?event .
  ?event a dbpedia:Event; 
    dbpedia:type ""military_conflict""; 
    dbpedia:conflict ""Spanish_Civil_War"" .
}",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
36,11,train,Give me the person born as the birth name of Ayo Makun.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Ayo Makun""@en;
    dbpedia:birthPlace ?birthPlace .
  ?birthPlace a dbpedia:Location .
}",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
465,29,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of Renée of France.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v3 . }",{sparql_query},4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
791,9,train,Give me the spouse of Taira no Tokuko and predecessor of Emperor Antoku.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . },"SELECT ?spouse ?predecessor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Taira no Tokuko""@en .
  ?person rdfs:label ?spouse .

  ?person2 a dbpedia:Person;
    dbpedia:name ""Emperor Antoku""@en .
  ?person2 dbpedia:precededBy ?predecessor .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
582,37,train,"Give me the figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","Given the reasoning steps above, the SPARQL query would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:name ""Kazuaki Nagasawa"" .
  ?child a dbpedia:Person;
    dbpedia:father ?parent ;
    dbpedia:role dbpedia:SoccerManager ;
    dbpedia:role dbpedia:Athlete ;
    dbpedia:birthDate ?birthdate .
  FILTER (STR(?birthdate) LIKE ""10-19"")  # Assuming --10-19 refers to October 19th
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
41,0,train,Give me the party of Mark Durkan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party
WHERE {
  ?person a dbo:OfficeHolder;
    dbo:office dbo:UK_Parliament_Member ;
    dbo:officeStart ""1997-05-01"" .
  ?person rdfs:label ?name .
  ?name ns:prefLabel ?party .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
456,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?role WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Chittagong District, Bangladesh"";
    dbpedia:deathPlace ""Dacca, Bangladesh"";
    dbpedia:occupation ?role .
}",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
839,15,train,"Give me the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    foaf:name ""Kevin Russell (musician)"" .
  ?person dbpedia:birthPlace ?birthPlace .
}",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
329,11,train,"Give me the entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""Robert Bates""@en; 
    dbpedia:affiliation ""British Loyalists""@en; # Assuming affiliation to British Loyalists
    dbpedia:conflict ""American Revolutionary War""@en; # Conflict during the American Revolutionary War
}",2,4,3,2,1,2,3,28,0,0,846,0,0.0,0
987,30,train,"Give me the birth place of Moamer Kasumović and birth place of Dado Polumenta and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?birthPlace1 ?deathPlace1 ?country_of_CET
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace1 .
  ?person1 a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace1 .

  ?birthPlace1 rdfs:label ?birthPlaceLabel .
  ?deathPlace1 rdfs:label ?deathPlaceLabel .

  ?birthPlaceLabel LIKE '%Moamer Kasumović%' .
  ?deathPlaceLabel LIKE '%Kasumović%' .

  ?person2 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace2 .
  ?person2 a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace2 .

  ?birthPlace2 rdfs:label ?birthPlaceLabel2 .
  ?deathPlace2 rdfs:label ?deathPlaceLabel2 .

  ?birthPlaceLabel2 LIKE '%Dado Polumenta%' .
  ?deathPlaceLabel2 LIKE '%Polumenta%' .

  ?birthPlaceLabel1 rdfs:label ?birthPlace_CET .
  ?deathPlaceLabel1 rdfs:label ?deathPlace_CET .

  ?birthPlace_CET LIKE '%Central Europe%' .
  ?deathPlace_CET LIKE '%in Central Europe%'
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
865,25,train,Give me the father of AK Abdul Momen and father of the child of Abu Ahmad Abdul Hafiz.,SELECT ?result WHERE { <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father1 ?childFather
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace1 .
  ?person1 dbpedia:father ?father1 .
  
  ?person2 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace2 .
  ?person2 dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:father ?childFather .
}",3,3,4,2,2,3,3,71,1,1675,0,0.0005966587112171838,1.0,0.0011926058437686346
582,21,train,Give me the figure known as --10-19 and reference to the residence of Hirotaka Sugawara.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?figureName ?residence
WHERE {
  ?figure a dbpedia:Person;
    dbpedia:name ""Tokugawa Ieyasu""@ja .
  ?figure a dbpedia:Person; dbpedia:birthPlace ?birthPlace .
  ?figure a dbpedia:Person; dbpedia:deathPlace ?deathPlace .
  
  ?person a dbpedia:Character ;
    dbpedia:role ""Hirotaka Sugawara"" ;
    dbpedia:series ""Haikyuu!!""@ja;
    dbpedia:residence ?residence .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
382,5,train,Give me the award of Harry Combes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?award
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedBy dbpedia:BritishIndianArmy ;
    dbpedia:awardedItem ?award .
  ?person rdfs:label ""Harry Combes"" .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
645,31,train,Give me the commander in the force of the commander in Siege of Madrid and military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?result . },{sparql_query},4,4,5,3,2,3,3,71,0,0,53,0,0.0,0
465,2,train,Give me the successor of Renée of France.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?successor
WHERE {
  ?queen a dbpedia:Person;
    dbpedia:consortOf ?husband .
  ?husband a dbpedia:Monarch;
    rdfs:label ""King Francis I of France"" .
  ?husband dbpedia:reignedFrom ""1515-1547"" .
  ?successor a dbpedia:Person;
    dbpedia:succeededBy ?husband .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
236,2,train,"Give me the person decedent, that is a politician and an office holder, at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Quincy, Massachusetts"" .
  ?person a dbpedia:OfficeHolder .
  ?person a dbpedia:Politician .
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
839,0,train,Give me the band of Kevin Russell (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?musician a dbpedia:Person;
    dbpedia:birthDate ?birthDate .
  ?musician rdfs:member ?band .
  ?band a dbpedia:MusicGroup .
  ?musician dbpediahasname ""Kevin Russell"" .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
365,3,train,Give me the birth name of Symon Petliura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?result . },"PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf:<http://xmlns.com/foaf/0.1/>

SELECT ?birthName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:givenName ?birthName .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
465,31,train,"Give me the spouse of Archduchess Barbara of Austria and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . ?v0 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse_of_barbara ?child_of_este_successor
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:name ""Archduchess Barbara of Austria"" .
  ?person1 dbpedia:spouse ?spouse_of_barbara .

  ?person2 a dbpedia:Person;
    dbpedia:name ""Ercole II d'Este, Duke of Ferrara"" .
  ?person2 dbpedia:child ?child_of_este .
  ?child_of_este a dbpedia:Person;
    dbpedia:succeededBy ?child_of_este_successor .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
124,11,train,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander ?conflict
WHERE {
  ?battery a dbpedia:Battery;
    dbpedia:type ""Royal Australian Artillery""@en;
    dbpedia:partOfMilitaryConflict ?conflict .
  ?conflict a dbpedia:MilitaryConflict;
    dbpedia:startYear 1858;
    dbpedia:endYear 1947.
  ?battery dbpedia:hasCommander ?commander .
}",2,4,3,2,1,3,3,71,0,0,109,0,0.0,0
839,26,train,"Give me the band of the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:memberOf [ a dbpedia:MusicGroup; rdfs:label ?bandName ] .
  ?person rdfs:label ""Peter Schoewisky"" .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
102,14,train,"Give me the native of the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/residence> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:residencePlace dbpedia: Settlement ;
    dbpedia:athleticCareer ?athleticCareer .
  ?athleticCareer a dbpedia:AthleticCareer ;
    dbpedia:participantSport ?sport .
  ?sport rdfs:label ""Athletics"" .  # Assuming the sport is Athletics for simplicity
  ?person dbpedia:birthPlace ?birthPlace .
}
```",3,6,4,3,1,3,2,20,0,0,100,0,0.0,0
976,33,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı and office of Mustafa Şentop.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?officeOfMayor WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Mustafa Şentop""@en .
  ?person dbpprop:politicalPartyMemberOf dbpedia:Millet_İttifakı .
  ?office a dbpedia:Office; 
    dbpedia:officeHolder ?person .
  ?office rdfs:label ?officeLabel .
  FILTER (lang(?officeLabel) = ""tur"")
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
453,0,train,Give me the religion of Newfoundland Colony.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newfoundland_Colony> <http://dbpedia.org/ontology/religion> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?religion
WHERE {
  ?colony a dbpedia:Colony;
    dbpedia:establishedBy dbpedia:United_Kingdom ;
    dbpedia:status ""British colony"" .
  ?colony dbpedia:religion ?religion .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
933,31,train,"Give me the reference to Alan Warner and band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?artistName ?bandName
WHERE {
  ?artist a dbpedia:Artist ;
            dbpedia:name ?artistName .
  ?band a dbpedia:Band ;
            dbpedia:name ?bandName .
  ?artist dbpedia:isMemberOf ?band .
  ?band rdfs:label ""The Ramong Sound""@en .
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
326,6,train,Give me the person decedent at France and resident of Berkshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Berkshire> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?personName ?birthPlace ?residencePlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace fr; # Birthplace in France
    dbpedia:residencePlace dbo:isPartOf dbo:County_Berkshire. # Residence in an area associated with Berkshire
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
200,3,train,Give me the band of Revenge (Canadian band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Revenge_(Canadian_band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?band a dbpedia:MusicBand;
    dbpedia:country ""Canada"";
    rdfs:label ""Revenge"".
}",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
274,3,train,"Who is the person born, that is a musical artist, as John Birks Gillespie?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}
LIMIT 1",1,2,2,1,1,2,3,28,0,2,1,0.0,0.0,0
892,13,train,Give me the landmark at elevation of the award of Anna Ishii.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?landmark
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Anna Ishii""@en .
  ?person rdfs:label ?nameLabel .
  ?institution a dbo:CollegeOrUniversity ;
    dbpedia:establishedDate ?establishmentYear ;
    dbpedia:affiliatedPeople ?person .
  ?institution rdfs:label ?institutionName .
  FILTER (regex(?institutionName, ""Women's Medical College"", ""i"") OR regex(?institutionName, ""Grant Medical College"", ""i""))
}
```",2,2,3,2,1,3,3,71,0,0,258,0,0.0,0
166,3,train,Who is the military force of Spanish Civil War?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?militaryForce
WHERE {
  ?war a dbpedia:Conflict;
    dbpedia:conflictLabel ""Spanish Civil War"";
    dbpedia:combatantRole ?militaryForce .
  ?militaryForce a dbpedia:MilitaryForce .
}",1,1,2,1,1,3,2,20,0,0,514,0,0.0,0
456,32,train,Give me the professional in the alter ego of The Shadow and spouse of the actor of Pacific Drive.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:role dbpedia:Pacific_Drive .
  ?actor dbo:s spouse ?spouse .
  ?spouse rdfs:label ""Lamont Cranston""@en.
}",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
508,1,train,Give me the birthplace of Ma Bufang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ma_Bufang> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""Ma Bufang""@en .
}",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
98,18,train,"Give me the entity in the region, that is a country, of Philippine Standard Time and birth place of Paolo Ballesteros.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?country ?birthPlace
WHERE {
  ?timeZone a dbpedia:TimeZone;
    dbpedia:standardTime ""Philippine Standard Time"" .
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""Paolo Ballesteros""@en .
}",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
573,22,train,"Give me the person decedent at Massachusetts and parent of the author, that is a politician and an office holder, of Exchequer Standards.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parentPerson
WHERE {
  ?author a dbpedia:Person;
    dbpedia:birthPlace ""Massachusetts, United States"";
    dbpedia:deathPlace ""Middlesex, England"";
    dbpedia:occupation ""Author"";
    dbpedia:parent ?parentPerson .
  OPTIONAL { ?author dbpedia:isParentOfSome ?child . }
}",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
976,24,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of Naci Bostancı.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?officeHolder ?office
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Naci Bostancı""@en .
  ?officeHolder a dbpedia:Office_Holder ;
    dbpedia:office ?office .
  ?officeHolder pfo:memberOf dbpedia:Political_party ;
    dbpedia:party_name ""Nation Alliance (Turkey)""@en .
}",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
326,2,train,Who is the professional in Writer?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Writer""@en . }","Given that DBpedia provides structured data about people and their professions, we can construct a SPARQL query to find this information. The query will look for individuals associated with the name ""AK Abdul Momen"" and filter for those who are classified as writers:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?personName ?profession
WHERE {
  ?person a dbpedia:Person;
    rdfs:label ?personName ;
    dbpedia:occupation ?profession .
  FILTER (lang(?personName) = ""en"")  # Assuming we are looking for English language records
}
```",1,1,2,1,1,3,2,20,0,0,6466,0,0.0,0
274,13,train,"Give me the professional in  and band member of the person born, that is a musical artist, as John Birks Gillespie.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?role ?bandMember
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ?birthdate .
  ?person dbpedia:role ?role .
  ?person rdfs:member ?bandMember .
  FILTER ( ?birthdate <= 1947 ) .
}
```",3,4,4,2,2,2,3,28,0,0,8,0,0.0,0
826,33,train,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Louis I"";
    dbpedia:spouse ""Anna Magdalena"" .
  ?child a dbpedia:Person;
    dbpedia:child ?successor;
    rdfs:label ""Louis II"" .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
933,8,train,"Give me the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person dbpedia:hasOccupation dbpedia:Musician .
  ?person rdf:type dbpedia:Person .
  ?person rdfs:label ""Alan Warner""@en .
  ?person dbpedia:band ?band .
}
```",1,4,2,1,1,3,3,71,0,0,2,0,0.0,0
839,14,train,"Give me the band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasMemberOf dbpedia:Band .
  ?person rdfs:label ""Charlie Huhn"" .
}",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
507,6,train,"Give me the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?title WHERE {
  ?movie a dbpedia:Film;
    dbpedia:role [ a dbpedia:Actor; foaf:name ""Beryl Reid"" ] .
  ?movie dbpedia:hasTitle ?title
}
```",1,3,2,1,1,3,3,71,0,0,9,0,0.0,0
170,18,train,Give me the domain of the profession of John Scholey and birth place of Era Ziganshina.,SELECT ?result WHERE { <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/leaderTitle> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?professionName ?birthPlace
WHERE {
  ?john_scholey a dbpedia:Person;
    dbpedia:occupation ?professionName .
  ?era_ziganshina a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
}",3,3,4,2,2,2,3,28,1,266879,0,3.747002398081535e-06,1.0,7.493976716214342e-06
933,33,train,Give me the reference to the birth name of the professional in Musician and band of Mike Elliott (saxophonist).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ?name .
  ?person dbpedia:birthPlace ?birthPlace .
  ?band dbpedia:genre ""Alternative rock"".
  ?band dbpedia:member ?person .
  ?person rdfs:label ""Mike Elliott""@en .
  FILTER (lang(?person) = ""en"")
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
453,6,train,"Give me the religion of the author, that is a cardinal and a cleric, of Apologia Pro Vita Sua.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cleric>. <http://dbpedia.org/resource/Apologia_Pro_Vita_Sua> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cardinal>. ?v0 <http://dbpedia.org/ontology/religion> ?result . },"To extract this information from DBpedia using SPARQL, we would need to query for Augustine and then check the properties associated with him. However, since Augustine's religion is well-documented and there is no ambiguity, a direct SPARQL query might not be necessary. Instead, we can assert based on historical knowledge:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query to find Augustine of Hippo
SELECT ?person WHERE {
  ?person rdfs:label ""Augustine of Hippo""@en .
}

# Based on the person identified as Augustine of Hippo, assert his religion
# Since Augustine was a Christian cardinal and cleric in the 5th century,
# we assert Christianity as his religion.
```",2,4,3,2,1,2,2,9,0,0,2,0,0.0,0
417,16,train,"Who is the father of the leader, that is a royalty, of Colony of Greenland?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father
WHERE {
  ?queen a dbpedia:Person;
    dbpedia:monarchOf dbpedia:Greenland .
  ?queen dbpedia:father ?father .
}",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
433,15,train,"Give me the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ?birthdate ;
    dbpedia:personaOf ?paul_chambers .
  ?paul_chambers a dbpedia:Musician;
    dbpedia:birthPlace ?birthplace .
  ?paul_chambers a dbpedia:Artist;
    dbpedia:deathPlace ?deathplace .
  FILTER (NOT EXISTS { ?person a dbpedia:Person; rdfs:label ?label . ?label contains ""Paul"" }) 
}
ORDER BY ?birthdate",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
41,10,train,Give me the party of the person born as David Declan Costello.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?party
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace <http://dbpedia.org/property/birthPlace> ""India"";
    dbpedia:politicalAffiliation ?party .
  ?person dbpedia:deathDate ""1907-08-09""^^xsd:date.
}",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
445,0,train,Give me the entity in England.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace en .
}",1,1,2,1,1,3,3,71,0,0,3546,0,0.0,0
129,11,train,Give me the associated musical artist of the person born as Tahj Malik Chandler.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musicalArtist
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Tahj Malik Chandler"" .
  OPTIONAL { 
    ?person rdfs:seeAlso ?musicRelatedResource .
    ?musicRelatedResource a dbpedia:MusicAlbum .
    ?musicRelatedResource artist ?musicalArtist .
  }
}
```",2,2,3,2,1,2,3,28,0,0,8,0,0.0,0
281,8,train,"Give me the commander in the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"Given the assumption that Roy Boehm was involved in the Indian Rebellion of 1857, the corresponding SPARQL query would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander
WHERE {
  ?person a dbpedia:Person;
    dbpedia:participatedInConflict dbo:IndianRebellionOf1857 .
  ?person dbpedia:conflictRole ?commander .
}
```

This query selects the `?commander` of the person involved in the Indian Rebellion of 1857, assuming that Roy Boehm was such a person.",2,4,3,2,1,2,3,28,0,0,171,0,0.0,0
508,4,train,"Give me the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?warLabel ?description
WHERE {
  ?war a dbpedia:Conflict;
    dbpedia:type ""military_conflict"" .
  ?war rdfs:label ?warLabel .
  SOME ?description OF ?war .
  FILTER (lang(?description) = ""en"")  # Limit results to English descriptions
}
```",1,3,2,1,1,3,2,20,0,0,4,0,0.0,0
976,9,train,Give me the office of Mustafa Şentop and office of Meral Akşener.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office WHERE {
  ?person a dbpedia:Person;
    dbpedia:office ?office .
  FILTER (lang(?office) = ""en"")  # Filter for English language offices
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
826,38,train,"Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parentOfFriedrich ?predecessorOfParent ?successorOfParent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Louis III, Landgrave of Hesse and by Rhine""@en .
  ?child a dbpedia:Person;
    dbpedia:name ""Prince Friedrich of Hesse and by Rhine""@en;
    dbpedia:parent ?parentOfFriedrich .
  ?parentOfFriedrich a dbpedia:Person;
    dbpedia:child ?child .
  ?parentOfFriedrich a dbpedia:Person;
    dbpedia:succeededBy ?successorOfParent .
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
459,11,train,Give me the person born as the birth name of Kevin Stitt.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Kevin_Stitt> <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Kevin Stitt"";
    dbpedia:birthName ?birthName .
}",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
495,0,train,Give me the child of Frederick I of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_I_of_Württemberg> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?parent dbpedia:name ""Frederick I of Württemberg"" .
}",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
130,13,train,"Give me the figure known as the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v1 <http://dbpedia.org/ontology/director> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?film WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality dbpedia:Mmadison,Alabama .
  ?person a dbpedia:SportsCoach ;
    dbpedia:sport dbpedia:Soccer .
  ?person rdfs:label ?film .
}
```",3,7,4,3,1,3,2,20,0,0,3,0,0.0,0
124,15,train,"Give me the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v1 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . }","SELECT ?war
WHERE {
  ?battery a dbpedia:Battery;
    dbpedia:unitType dbpedia:ArtilleryUnit ;
    dbpedia:partOfMilitaryEntity dbpedia:AustralianDefenceForce .
  ?battery rdfs:label ""A Battery, Royal Australian Artillery"" .
  ?battery dbpedia:engagedInConflict ?war .
}",2,7,3,2,1,3,3,71,0,0,6,0,0.0,0
166,8,train,"Give me the entity in the territory administered, that is a country, from Madrid.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v0 . },"SELECT ?country
WHERE {
  ?country dbpedia:capital CityOfMadrid .
  ?country dbpedia:locatedIn wd:Q0115.
}",2,3,3,2,1,3,2,20,0,0,12023,0,0.0,0
826,35,train,Give me the spouse of the child of Johann Heinrich Appel and predecessor of the parent of Prince Friedrich of Hesse and by Rhine.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . }",PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?spouse WHERE { dbpedia:Johann_Heinrich_Appel ns:child ?child . dbpedia:Prince_Friedrich_of_Hesse_and_by_Rhine ns:sibling ?child . ?child ns:spouse ?spouse },4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
170,14,train,Give me the entity in Russia and birth place of the awardee of People's Artist of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?artistName ?birthPlace
WHERE {
  ?artist a dbpedia:Artist;
    dbpedia:awardedWith dbpedia:People's_Artist_of_Russia .
  ?artist dbpedia:birthPlace ?birthPlace .
}",3,3,4,2,2,2,3,28,0,0,12,0,0.0,0
216,10,train,Give me the party of the awardee of Australian Defence Medal.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . },"Given the reasoning, we don't need a SPARQL query to answer this specific question as it involves historical context rather than data retrieval from a structured database. However, if we were to structure a query hypothetically to find such information in a dataset that includes military awards and political parties, it might look something like this:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee ?party
WHERE {
  ?awardee a dbpedia:Person;
    dbpedia:awardedMilitaryMedal [ dbpedia:medal ""Australian Defence Medal"" ] .
  ?awardee dbpedia:memberOf dbpedia:PoliticalParty .
}
```

This query would hypothetically find the person awarded the Australian Defence Medal and their associated political party membership, assuming such data is available.",2,2,3,2,1,2,3,28,0,0,5,0,0.0,0
888,2,train,Give me the military force of War in Donbas (2014–2022).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . },"SELECT ?militaryForce1 ?militaryForce2
WHERE {
  ?conflict a dbpedia:Conflict;
    dbpedia:startDate ""2014-04-06""^^xsd:date;
    dbpedia:endDate ""2022-03-31""^^xsd:date .
  
  ?conflict dbpedia:participants [
    a dbpedia:PartyInConflict ;
    dbpedia:role dbpedia:combatantRole ;
    dbpedia:entity ?militaryForce1 .
  ] .
  
  ?conflict dbpedia:participants [
    a dbpedia:PartyInConflict ;
    dbpedia:role dbpedia:combatantRole ;
    dbpedia:entity ?militaryForce2 .
  ] .
  
  ?conflict dbpedia:participants [
    a dbpedia:PartyInConflict ;
    dbpedia:role dbpedia:combatantRole ;
    dbpedia:entity dbpedia:P183 (Russia)
  ] .
  
  ?conflict dbpedia:participants [
    a dbpedia:PartyInConflict ;
    dbpedia:role dbpedia:combatantRole ;
    dbpedia:entity ?militaryForce1 .
  ] .
  
  ?conflict dbpedia:participants [
    a dbpedia:PartyInConflict ;
    dbpedia:role dbpedia:combatantRole ;
    dbpedia:entity ?militaryForce2 .
  ] .
}",1,1,2,1,1,3,2,20,0,0,135,0,0.0,0
715,39,train,"Give me the commander in Spanish Civil War and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander ?officeOrganization
WHERE {
  ?person a dbpedia:Person;
    dbpedia:roleInMilitaryConflict dbpedia:CommanderRole .
  ?person dbpedia:conflict dbpedia:Spanish_Civil_War .
  ?person dbpedia:leadOrganization ?officeOrganization .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
456,11,train,Give me the spouse of the actor of Pacific Drive.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?actorSpouse
WHERE {
  ?actor dbpedia:role dbpedia:Actor ;
    dbpedia:appearInSeries dbpedia:Pacific_Drive .
  ?actor dbo:hasSpouse ?actorSpouse .
}",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
216,3,train,"Give me the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?organization ?soccerClub
WHERE {
  ?organization a dbpedia:Organization;
    dbpedia:affiliatedOrganization dbpedia:SoccerClub .
  ?soccerClub a dbpedia:SoccerClub;
    dbpedia:clubName ""Croatia U21"" .
  ?organization rdfs:label ?organizationLabel .
  ?soccerClub rdfs:label ?soccerClubLabel .
  ?organizationLabel = ""Croatia U21""
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
892,27,train,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?region ?settlement
WHERE {
  ?person a dbpedia:Person;
    dbpedia:partyMemberOf dbpedia:M5S .
  ?person dbpedia:residence ?settlement .
  ?settlement rdfs:label ?region .
}
```",3,9,4,3,1,3,3,71,0,0,587,0,0.0,0
935,14,train,"Give me the headquarter of the office of the native of Balochistan, Pakistan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . ?v0 <http://dbpedia.org/ontology/location> ?result . ?v2 <http://dbpedia.org/property/office> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?headquarters
WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality dbpedia:Balochistan .
  ?person dbpedia:officeHolderRole [ owl:hasRole dbpedia:PoliticalLeader ] .
  ?person dbpedia:birthPlace <http://dbpedia.org/property/birthPlace_of_AK_Abdul_Momen> .
  ?office a dbpedia:Office;
    dbpedia:headquarter ?headquarters .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
93,11,train,"Give me the capital of the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve and death place of John Weir Troy.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/John_Weir_Troy> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
SELECT ?capital ?deathPlace
WHERE {
  ?park a dbpedia:NationalPark;
    dbpedia:locatedInRegion ?region .
  ?region a dbpedia:AdministrativeTerritory;
    dbpedia:capital ?capital .
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?park rdfs:label ""Lake Clark National Park and Preserve"" .
  ?person rdfs:label ""John Weir Troy"" .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
456,2,train,Give me the band of Alan Doyle.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Musician;
    dbpedia:genre ""Folk rock"";
    dbpedia:band ?band .
  ?person rdfs:label ""Alan Doyle""@en .
}",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
130,4,train,Give me the award of Živko Ključe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?result . },"Given the assumption that Živko Ključe received an award for his political service during the Croatian independence process, a possible award could be the ""Order of the Croatian Franciscans"" or another significant state award. However, since DBpedia may not have detailed information about every individual's awards, we will construct a general query to find any known awards associated with him.

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?award
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedWith ?award .
  ?person rdfs:label ""Živko Ključe""@cs.
}
```

This query looks for any awards associated with a person labeled as Živko Ključe in Croatian.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
839,31,train,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician) and band of Peter Schorowsky.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?person a dbpedia:MusicalArtist;
    dbpedia:associatedBand ?bandName .
  ?person rdfs:label ""Kevin Russell""@en .
  ?person rdfs:label ""Peter Schorowsky""@en .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
216,5,train,"Give me the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?player ?organization
WHERE {
  ?player a dbpedia:Person;
    dbpedia:birthPlace ""Tuzla, Bosnia and Herzegovina"";
    dbpedia:sport ""Football"" .
  ?player dbpedia:memberOf ?organization .
  ?organization a dbpedia:SportsClub;
    dbpedia:type dbpedia:SoccerClub .
}",1,4,2,1,1,3,3,71,0,0,10,0,0.0,0
976,29,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of Naci Bostancı and office of Mustafa Şentop.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office WHERE {
  ?person a dbpedia:OfficeHolder;
    dbpedia:office ?office .
  ?person rdfs:label ""Naci Bostancı""@en.
  ?person rdfs:label ""Mustafa Şentop""@en.
  ?office a dbpedia:Mayorship .
  ?person dbpedia:politicalParty dbpedia:Nation_Alliance_(Turkey) .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
874,3,train,"Give me the writer, that is an artist and a musical artist, of Mezzanine (album).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?artist
WHERE {
  ?album dbpedia:hasArtist ?artist .
  ?artist a dbpedia:MusicalArtist .
  ?album rdfs:label ""Mezzanine""@en .
}",1,3,2,1,1,3,2,20,0,0,15,0,0.0,0
445,9,train,Give me the entity in England and death place of Patrick Moore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",2,2,3,1,2,3,3,71,1,100979,0,9.902951079421667e-06,1.0,1.9805706023905488e-05
47,27,train,"Give me the office of the awardee of the entity, that is an award, in India.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardeeOffice
WHERE {
  ?award a dbpedia:Award ;
    dbpedia:awardedTo ?awardee .
  ?awardee a dbpedia:Person;
    dbpedia:office ?awardeeOffice .
}",3,4,4,3,1,3,3,71,0,0,200,0,0.0,0
892,7,train,"Give me the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?party
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Andrea Cozzolino"" .
  ?person dbpedia:presentsForElectoralDistrict ?district .
  ?district rdfs:label ?party .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
791,5,train,"Give me the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?childName ?role
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Emperor_of_Japan;
    dbpedia:name ""Go-Shirakawa"" .
  ?child a dbpedia:OfficeHolder .
  ?child a dbpedia:Royalty .
}",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
129,17,train,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and associated musical artist of Saba (rapper).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?associated_artist
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:role dbpedia:Actor ;
    dbpedia:film ""Dreamville Presents: Revenge"" .
  ?actor dbpedia:affiliatedWith dbpedia:Organization ;
    dbpedia:organizationName ""Dreamville Records"" .
  ?associated_artist a dbpedia:MusicArtist .
}

AND

PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?artist_name
WHERE {
  ?rapper a dbpedia:Person;
    dbpedia:givenName ""Saba"" ;
    dbpedia:role dbpedia:Rapper .
  ?rapper dbpedia:recordLabel dbpedia:Organization ;
    dbpedia:organizationName ""Dreamville Records"" .
}",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
495,6,train,Give me the father of Princess Charlotte of Württemberg and child of Frederick I of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Charlotte_of_Württemberg> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_I_of_Württemberg> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father WHERE {
  ?princess a dbpedia:Person;
    dbpedia:birthFather ?father .
  ?father a dbpedia:Person;
    rdfs:label ""Frederick I of Württemberg""@en
  FILTER (lang(?father) = ""en"")
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
606,0,train,Give me the figure known as Barb City.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?name WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Barb City""@en .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
93,7,train,"Give me the capital of the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?capital
WHERE {
  ?park dbpedia:P31 wd:Q12298 ; # Lake Clark National Park and Preserve
  ?headquarters dbpedia:P106 ?capital ;
                   dbpedia:P31 wd:Q52869 . # Headquarters is a settlement (P106) and part of a region (P31 to Alaska)
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
917,10,train,Give me the child of Kekūanāoʻa and parent of Albert Kamehameha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child ?parent
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
326,7,train,"Give me the resident of the birthplace, that is a state and British, of David Jessel.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""David Jessel""@en .
  ?birthPlace geo:location [ geo:country ""India"" ] .
  FILTER(geo:isPartOf ?birthPlace ""Bengal"" ) .
}
```",2,4,3,2,1,3,2,20,0,0,5,0,0.0,0
965,1,train,Give me the parent of Louise Mountbatten.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . },"Given the reasoning above, we can construct a SPARQL query to find the parents of Louise Mountbatten. We will use the `dbpedia:parent` property to link individuals to their parents:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child ?parent
WHERE {
  ?child a dbpedia:Person;
    dbpedia:name ""Louise Mountbatten""@en .
  ?child dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
582,23,train,"Give me the reference to the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/property/residence> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?residence
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace dbpedia:Osaka .
  ?person a dbpedia:Person;
    dbpedia:affiliation dbpedia:University_of_Tokyo .
  ?person a dbpedia:Person;
    dbpedia:affiliation dbpedia:KEK .
}
```",3,4,4,3,1,3,3,71,0,0,41,0,0.0,0
236,5,train,Give me the administration of James Madison.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office WHERE {
  ?person a dbpedia:OfficeHolder;
    dbpedia:office ?office .
  ?office rdfs:label ""President of the United States""@en .
  ?person rdfs:label ""James Madison""@en .
}",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
987,20,train,Give me the birth place of Dado Polumenta and birth place of the actor of All for Free.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  OPTIONAL { ?person rdfs:label ""Dado Polumenta""@en }
  OPTIONAL { ?person rdfs:label ""All for Free""@en; dbpedia:role ""actor"" }
}
```",3,3,4,2,2,3,3,71,3,109571,0,2.737875773449906e-05,1.0,5.475601631729286e-05
926,17,train,"Give me the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandfather
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:parentOf ?child .
  ?child a dbpedia:Person;
    dbpedia:name ""Beyhan Sultan"";
    dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:title ""Sultan"";
    dbpedia:father ?grandfather .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
273,13,train,Give me the spouse of the child of the child of Edoardo Agnelli (1831-1871).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Edoardo_Agnelli_(1831-1871)> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchildSpouse
WHERE {
  ?grandchild a dbpedia:Person;
    dbpedia:parent ?child .
  ?child a dbpedia:Person;
    dbpedia:parent ?edoardo .
  ?child dbpedia:hasChild ?grandchild .
  ?grandchild a dbpedia:Person;
    dbpedia:spouse ?grandchildSpouse .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
926,7,train,"Give me the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent WHERE {
  ?person a dbpedia:Person;
    dbpedia:father ?parent .
  ?person dbpedia:name ""Mustafa III"" .
}",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
715,17,train,"Give me the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?organization
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Argentina"";
    dbpedia:serviceRole ""Military_officer"";
    dbpedia:deathPlace ""Spain"";
    dbpedia:associatedOrganization ?organization .
  ?organization a dbpedia:Organization ;
                   dbpedia:name ""National_Syndicalist_Front"" .
  ?organization a dbpedia:Organization ;
                   dbpedia:name ""Spanish_State"" .
}
```

This SPARQL query looks for a person with the birthplace ""Argentina"", a service role as a ""Military officer"", death place ""Spain"", and is associated with an organization. It then filters these results to find organizations that have the names ""National Syndicalist Front"" or ""Spanish State"".",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
987,26,train,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?actorName ?birthPlace
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:role ?role .
  ?role rdfs:label ""Emir Hadžihafizbegović""@en .
  ?actor dbpedia:birthPlace ?birthPlace .
}",3,4,4,3,1,3,3,71,0,0,40,0,0.0,0
417,10,train,Give me the child of Alexandrine of Mecklenburg-Schwerin and spouse of Princess Caroline-Mathilde of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?parent1 a dbpedia:Person;
    dbpedia:spouse [ dbpedia:givenName ""Prince Christian"" ] .
  ?parent2 a dbpedia:Person;
    dbpedia:spouse [ dbpedia:givenName ""King Frederick VII"" ] .
  ?child a dbpedia:Child;
    dbpedia:offspring ?parent1 ;
    dbpedia:offspring ?parent2 .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
965,14,train,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""George Mountbatten, 1st Marquess of Milford Haven"";
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Noble .
}",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
892,29,train,Give me the entity in Province of Reggio Emilia and landmark at elevation of the award of Anna Ishii and entity in Italy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?awardName ?elevation ?landmark
WHERE {
  ?award dbpedia:awardedTo ?person .
  ?award rdfs:label ?awardName .
  ?landmark a dbpedia:Landmark;
    dbpedia:heightInMetres ?elevation .
  ?person rdfs:label ""Anna Ishii""@en .
  ?award dbr:is_included_in Event ?event .
  ?event geo:location ?location .
  ?location rdfs:label ""Province of Reggio Emilia""@en .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
445,20,train,Give me the entity in England and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""AK Abdul Momen""@en; 
    dbpedia:fieldOfScience ""Astronomy""@en; 
    dbpedia:activeYears ""20th century""^^xsd:gYear; 
    dbpedia:region ""British Raj""@en .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
965,4,train,Give me the spouse of Princess Victoria of Hesse and by Rhine.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:spouse ?spouse .
  ?person rdfs:label ""Louis IV, Grand Duke of Hesse and by Rhine""@en .
  ?person dbpedia:birthPlace ""Darmstadt, Germany"" .
  ?person dbpedia:deathPlace ""Darmstadt, Germany"" .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
445,12,train,Give me the entity in United Kingdom and death place of Patrick Moore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",2,2,3,1,2,3,3,71,2,100978,0,1.9805902158843335e-05,1.0,3.961101978570438e-05
573,8,train,"Who is the author, that is a politician and an office holder, of Exchequer Standards?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?author
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolder ""Secretary to the Treasury"";
    dbpedia:politicalAffiliation ""British Conservative Party"" .
  ?person dbpedia:birthPlace ""United Kingdom"" .
  ?person rdfs:label ""John Strachey""@en .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
47,29,train,Give me the office of Ajoy Mukherjee and office of Suvendu Adhikari and office of the awardee of Banga Bhushan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office1 ?office2 ?awardee
WHERE {
  ?mukherjee a dbpedia:Person;
    dbpedia:name ""Ajoy Mukherjee""@en .
  ?adhikari a dbpedia:Person;
    dbpedia:name ""Suvendu Adhikari""@en .
  ?awardee a dbpedia:Person;
    dbpedia:award ""Banga Bhushan""@en .
  OPTIONAL { 
    ?mukherjee dbpedia:office ?office1 . 
    ?adhikari dbpedia:office ?office2 . 
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
917,0,train,Give me the parent of Albert Kamehameha.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father ?mother
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?father .
  ?person a dbpedia:Person;
    dbpedia:mother ?mother .
  ?person dbpedia:name ""Albert Kamehameha"" .
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
216,23,train,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/coach> ?v0 . }","Since the direct interpretation leads to a logical contradiction (a person cannot be both a coach and an organization), we need to refine our approach. We will search for coaches linked to Croatia U21 and check their types:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?coachName
WHERE {
  ?coach a dbpedia:Person;
    dbpedia:role [ rdf:type dbpedia:SportsCoach ] ;
    dbpedia:associatedTeam dbpedia:CroatiaU21 .
  OPTIONAL { ?coach dbpedia:isMemberOf [ rdf:type dbpedia:Organization ] }
  OPTIONAL { ?coach dbpedia:isMemberOf [ rdf:type dbpedia:SportingClub ] }
}
```

This query looks for individuals who have the role of a coach for Croatia U21 and checks if they are members of any organizations or sporting clubs.",3,5,4,3,1,3,3,71,0,0,6,0,0.0,0
865,36,train,Give me the native of British Raj and father of the child of the father of Abul Maal Abdul Muhith.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?fatherName ?childFatherName ?childBirthPlace
WHERE {
  ?muhith a dbpedia:Person;
    dbpedia:name ""Abul Maal Abdul Muhith"" .
  ?muhith dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:name ?fatherName .
  
  ?childFather a dbpedia:Person;
    dbpedia:name ?childFatherName .
  ?childFather dbpedia:parent ?muhith .
  
  ?child a dbpedia:Person;
    dbpedia:name ?childName .
  ?child a dbpedia:birthPlace ?childBirthPlace .
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
507,7,train,Who is the person born on 1966-02-18?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person WHERE { 
  ?person a dbpedia:Person; dbpedia:birthDate ""1966-02-18"" . 
}",1,1,2,1,1,3,3,71,0,0,21,0,0.0,0
645,4,train,Give me the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?playerName ?achievements
WHERE {
  ?player a dbpedia:Person;
    dbpedia:hasAthleteStatus ""football player"";
    dbpedia:birthDate ?birthdate .
  OPTIONAL { ?player dbpedia:hasAttribute ?attribute . }
  FILTER (lang(?attribute) = ""es"" )  # Only consider Spanish attributes
  ?player rdfs:label ?playerName .
  ?player dbpedia:achievements ?achievements .
}
```

This query looks for individuals classified as football players and retrieves their names and achievements. The optional clause filters for attributes in Spanish to potentially find details about his physical attributes.",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
976,35,train,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey and office of the person born as Mehmet Naci Bostancı.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?speakerOffice ?bostanciOffice
WHERE {
  ?assembly dbpedia:leader ?speakerOffice .
  ?person dbpedia:office ?bostanciOffice .
  ?person rdfs:label ""Mehmet Naci Bostancı""@en .
  ?assembly rdf:type dbpedia:Parliament .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
645,16,train,"Give me the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?eventLabel ?description
WHERE {
  ?event a dbpedia:Event;
    dbpedia:type ""conflict"" .
  ?event dbpedia:instanceOf dbpedia:MilitaryConflict .
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen""@en;
    dbpedia:role ""President""@en .
  ?event dbpedia:participatedIn ?person .
}
```",2,7,3,2,1,3,3,71,0,0,1,0,0.0,0
442,1,train,Give me the resting place of Fay Bainter.,SELECT ?result WHERE { <http://dbpedia.org/resource/Fay_Bainter> <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?burialPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:deathDate ""1949-03-29""^^xsd:date ;
    dbpedia:burialPlace ?burialPlace .
}",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
158,14,train,"Give me the party of the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor 
WHERE {
  ?predecessor a dbpedia:OfficeHolder;
    dbpedia:role dbpedia:Prime_Minister_of_India ;
    dbpedia:officeStart ""1945-09-15"" .
  ?successor a dbpedia:Politician;
    dbpedia:officeEnd ?endOfRoleDate .
  ?endOfRoleDate ge 1945-09-15.
}
```

This SPARQL query looks for the predecessor who started their role as Prime Minister of India on September 15, 1945. It then finds the successor who ended their role as a politician on or after that date.",3,8,4,3,1,3,2,20,0,0,1,0,0.0,0
645,26,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?militaryForce
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen""@en;
    dbpedia:birthPlace ""Dacca, Bangladesh"";
    dbpedia:deathPlace ""Dhaka, Bangladesh"";
    dbpedia:role ""President of Bangladesh""@en.
  OPTIONAL { 
    ?person dbpedia:conflict ""Restoration (Spain)"" .
    ?person a dbpedia:OfficeHolder;
      dbpedia:office dbpedia:Monarchy_of_Spain@en .
  }
}",3,8,4,3,1,3,3,71,0,0,514,0,0.0,0
365,5,train,"Give me the native, that is a politician, of Poltava Governorate.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?politicianName ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace [ rdfs:label ?birthPlaceLabel ] .
  ?person a dbpedia:Person;
    dbpedia:politicalAffiliation dbpedia:Poltava_Governorate ; # Assuming they were affiliated with Poltava Governorate
    dbpedia:deathPlace ?deathPlace .
  ?birthPlaceLabel STRONGER ""Poltava Governorate"" . # Ensure we are looking for someone from this specific area
}
```",1,2,2,1,1,3,2,20,0,0,11,0,0.0,0
443,9,train,Give me the birthplace of Carl Larsson and birthplace of Ulf Lundell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  FILTER (lang(?name) = ""sv"")  # Search for Swedish names to ensure we're looking at the correct individuals.
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
976,13,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office WHERE {
  ?politician a dbpedia:Politician, dbpedia:OfficeHolder;
    dbpedia:nationality dbpedia:Turkey ;
    dbpedia:office dbpedia:Mayor .
}
```",2,5,3,2,1,3,3,71,0,0,3,0,0.0,0
443,14,train,"Give me the birthplace of the person born, that is a musical artist and an artist, on 1949-11-20 and landmark at elevation of 28.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:occupation [ owl:unionOf [ owl:intersectionOf [
    rdf:type dbpedia:MusicArtist
  ] .
  rdf:type dbpedia:Artist
  ] ] ;
    dbpedia:dateOfBirth ""1949-11-20""^^xsd:date ;
    dbpedia:elevation 28.
}",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
791,19,train,"Give me the predecessor of Emperor Antoku and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?predecessorSpouse
WHERE {
  ?emperor1 a dbpedia:Emperor;
    dbpedia:precededBy ?antoku .
  ?emperor2 a dbpedia:Emperor;
    dbpedia:spouse ?takakuraSpouse .
  ?takakuraSpouse a dbpedia:Person;
    dbpedia:spouse ?predecessorSpouse .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
933,27,train,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person ?band
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1947-04-21""^^xsd:date;
    dbpedia:role dbpedia:MusicalArtist .
  ?person rdfs:label ?name .
  FILTER (regex(str(?name), ""AK Abdul Momen"")) .
  ?person dbpedia:band ?band .
}
```",3,7,4,3,1,3,3,71,0,0,4,0,0.0,0
865,15,train,"Give me the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace dbo:location;dbo:hasHistoricalRole dbo:BritishRaj .
  ?person dbpedia:deathPlace dbo:location;dbo:hasHistoricalRole dbo:BritishRaj .
  ?person rdfs:label ""AK Abdul Momen""@en .
  ?person dbpedia:birthDate ""1870""^^xsd:gYear .
  ?person dbpedia:deathDate ""1945""^^xsd:gYear .
}
```

This query looks for a person named AK Abdul Momen who was born in 1870 and died in 1945, with a historical role during the British Raj. It then returns the birth and death places associated with this person.",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
122,6,train,"Give me the band of the reference, that is a musical artist and an artist, to Gift of Gab.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Gift of Gab""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band_name
WHERE {
  ?artist a dbpedia:Artist;
    dbpedia:associatedBand ?band .
  ?band rdfs:label ?band_name .
}
```",2,4,3,2,1,2,2,9,0,39591,4,0.0,0.0,0
18,15,train,"Give me the alumnus of Marymount College, Tarrytown and professional in the award of Ana María Sánchez de Ríos.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v0 . }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?name
WHERE {
  ?person a dbpedia:Person;
    dbpedia:alumniOf dbpedia:Marymount_College_Tarrytown .
  ?person dbpedia:awarded dbpedia:Ana_Maria_Sanchez_de_Rios_Award .
  FILTER (lang(?name) = ""en"")  # Assuming we are looking for names in English
}",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
456,7,train,Give me the band of Alan Doyle.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?person a dbpedia:Musician;
    dbpedia:musicalGroup ?bandName .
  ?person rdfs:label ""Alan Doyle""@en .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
965,10,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parentBirthPlace ?parentDeathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?parentBirthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?parentDeathPlace .
  ?person rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  ?person dbpedia:spouse [ a dbpedia:Person; rdfs:label ""Prince Louis of Battenberg""@en ] .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
136,1,train,Give me the landmark at elevation of 5.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""5""^^<http://www.w3.org/2001/XMLSchema#integer> . }","Given the hypothetical scenario where DBpedia has a link to elevation data, a SPARQL query might look like this:

```sparql
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?landmark ?elevation
WHERE {
  ?landmark a dbpedia:Landmark;
    geo:heightInMetres ?elevation .
}
```

This query assumes that there is a `geo:heightInMetres` property in the DBpedia ontology for landmarks that provides their elevation in meters.",1,1,2,1,1,2,2,9,0,0,909,0,0.0,0
645,19,train,Give me the military force of Spanish Civil War and commander in the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?militaryForce ?commander
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Carlos Asensio Cabanillas"" .
  ?person dbpedia:conflict ""Spanish Civil War"" .
  ?person a dbpedia:MilitaryUnitMember ;
    dbpedia:militaryForce ?militaryForce .
}",3,3,4,2,2,3,3,71,0,0,23,0,0.0,0
93,4,train,"Who is the native, that is a politician, of Seattle?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbo:Politician;
    dbo:nationality dbo:UnitedStates ;
    dbo:birthPlace dbo:Seattle .
}",1,2,2,1,1,3,2,20,0,0,114,0,0.0,0
456,34,train,"Give me the band of Alan Doyle and spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName ?actorRole
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Alan Doyle""@en .
  ?movie a dbpedia:Film; 
    dbpedia:title ""The Water Horse: Legend of the Deep""@en;
    dbpedia:actor ?actorRole .
  ?actorRole rdfs:label ""Conrad""@en .
  ?person dbpedia:nationality ""Canadian""^^xsd:string;
    dbpedia:associatedBand ?bandName .
}
```

This SPARQL query will:
- Identify Alan Doyle as a person.
- Link him to the movie ""The Water Horse: Legend of the Deep"".
- Extract the role played by Ross Newton (Conrad).
- Find the band associated with Alan Doyle.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
124,5,train,Who is the awardee of British South Africa Company Medal?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardeeName ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:awardedBy dbpedia:British_South_Africa_Company_Medal .
}",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
102,0,train,Give me the manager of Sheffield United W.F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Sheffield_United_W.F.C.> <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?manager
WHERE {
  ?club dbpedia:hasManager ?manager .
  ?club dbpedia:name ""Sheffield United W.F.C."" .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
456,9,train,Give me the professional in  and spouse of Danielle Spencer (Australian actress).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?profession ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Danielle Spencer"" .
  OPTIONAL { ?person dbpedia:hasProfession ?profession }
  OPTIONAL { ?person dbpedia:spouse ?spouse }
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
192,2,train,Give me the child of Charles II of Naples.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?parent dbpedia:name ""Charles II of Naples"" .
}",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
582,30,train,Give me the reference to Japan and figure known as the nickname of Japan national football team and player in Kazuaki Nagasawa.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?nickname ?playerInfo
WHERE {
  ?team a dbpedia:SportsTeam;
    dbpedia:sport dbpedia:Soccer ;
    dbpedia:nickname ?nickname .
  ?team dbpedia:representativeCountry dbpedia:Japan .
  ?player a dbpedia:Person;
    dbpedia:name ""Kazuaki Nagasawa"" ;
    dbpedia:participantInEvent ?event .
  ?event a dbpedia:Event;
    dbpedia:sport dbpedia:Soccer ;
    dbpedia:team ?team .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
433,7,train,Give me the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",1,1,2,1,1,3,3,71,0,100980,30,0.0,0.0,0
36,8,train,"Give me the actor of the claim to fame, that is a film, of Lepacious Bose.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?actor
WHERE {
  ?film a dbpedia:Film;
    dbpedia:mainActor ?actor .
  ?film dbpedia:star ?person .
  ?person a dbpedia:Person;
    foaf:name ""Lepacious Bose"" .
}
```",2,3,3,2,1,2,3,28,0,0,6,0,0.0,0
926,4,train,Give me the father of Abdulaziz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent rdfs:label ""Father of Abdulaziz""@en .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
791,20,train,Give me the predecessor of the child of Emperor Takakura and spouse of Taira no Tokuko.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?predecessor
WHERE {
  ?person a dbpedia:Emperor;
    dbpedia:monarchBefore ?predecessor .
  ?person dbpedia:firstName ""Go-Toba""^^xsd:string;
    dbpedia:reignStart ""1184-01-01T00:00:00Z""^^xsd:dateTime .
  ?person dbpedia:spouse dbpedia:Taira no Tokuko .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
443,16,train,Give me the landmark at elevation of 28 and birthplace of the work of yes.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/author> ""yes""@en . ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . }",PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?landmarkElevation ?birthPlaceOfWork WHERE { ?landmark a dbpedia:Building; dbpedia:heightInMeters 28 . ?work a dbpedia:CreativeWork; dbpedia:author ?author . ?author rdfs:label 'yes' . ?landmark rdf:type dbpedia:Landmark . ?work dbpedia:birthPlace ?birthPlaceOfWork },3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
47,19,train,Give me the office of Bidesh Ranjan Bose and office of the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office WHERE {
  ?person a dbpedia:OfficeHolder;
    dbpedia:officeName ?office .
  OPTIONAL { ?person dbpedia:officeLocation ?location }
  FILTER (lang(?office) = ""en"" || lang(?location) = ""en"")  # Assuming English language for office names and locations
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
442,4,train,Give me the resting place of Fay Bainter and resting place of Allyn K. Capron.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allyn_K._Capron> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Fay_Bainter> <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?restingPlace1 ?restingPlace2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:name ""Fay Bainter""@en .
  ?person1 a dbpedia:Person;
    dbpedia:deathPlace ?restingPlace1 .
  
  ?person2 a dbpedia:Person;
    dbpedia:name ""Allyn K. Capron""@en .
  ?person2 a dbpedia:Person;
    dbpedia:deathPlace ?restingPlace2 .
}",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
888,0,train,Give me the commander in Southern Ukraine campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Southern_Ukraine_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander
WHERE {
  ?commander a dbpedia:Person;
    dbpedia:birthPlace [ property::inCountry ""British Indian Army"" ];
    dbpedia:deathPlace [ property::inRegion ""Crimea"" ] .
}
```",1,1,2,1,1,3,2,20,0,0,13,0,0.0,0
645,9,train,Give me the military force of Spanish Civil War and commander in Battle of Jarama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?nationalistLeader ?battle
WHERE {
  ?battle a dbpedia:Event;
    dbpedia:participatingSides [ a dbpedia:Conflict_Faction ;
                             dbpedia:name ""Nationalists"" ] .
  ?battle rdfs:label ""Battle of Jarama""@en .
  ?battle dbpedia:commander ?nationalistLeader .
}",2,2,3,1,2,3,3,71,0,0,6,0,0.0,0
192,5,train,Give me the child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Stephen V of Hungary""@en;
    dbpedia:offspring ?child .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
582,26,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father WHERE {
  ?child a dbpedia:Person; rdfs:label ""Kazuaki Nagasawa""@en .
  ?child dbpphone:hasParent ?father .
  ?father a dbpedia:Person;
    dbpedia:role dbpedia:SoccerManager ;
    dbpedia:role dbpedia:Athlete ;
    dbpedia:role dbpedia:SportsManager .
}",3,6,4,3,1,3,3,71,0,0,4,0,0.0,0
83,11,train,"Give me the party of Alceu Collares and ruling party in the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. <http://dbpedia.org/resource/Alceu_Collares> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","{sparql_query: SELECT ?birthPlace ?rulingParty WHERE { ?sandro a dbpedia:Person; dbpedia:birthPlace ?birthPlace . ?sandro dbpedia:birthdate ""1983-10-01""^^xsd:date . ?alceu_collares a dbpedia:Person; dbpedia:name ""Alceu Collares""@en; dbpedia:parent ?sandro . ?birthPlace a dbpedia:Town ; dbpedia:hasSoccerClub ?soccerClub ; dbpedia:rulingParty ?rulingParty . FILTER (lang(?name) = ""en"") }}}",3,6,4,2,2,3,2,20,0,0,1,0,0.0,0
573,13,train,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?decedentName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?deathPlace rdfs:label ""William J. Phelan's residence"" .  # Placeholder for actual place name
  FILTER (xsd:string(?birthPlace) = ""William J. Phelan's residence"") .
  ?person dbpedia:residedInLocation ?residence .
  ?residence a dbpedia:Settlement ;
             rdfs:label ""William J. Phelan's residence"" .  # Placeholder for actual place name
}
```",2,3,3,2,1,3,3,71,0,0,40,0,0.0,0
83,7,train,"Give me the ruling party in the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983).","SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. }","Given that Sandro was born in São Luís, Maranhão, we need to find the current ruling party of Maranhão. However, since Maranhão is a state within Brazil and not a town, we need to adjust our query to reflect this:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?rulingParty
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Sandro Fernandes de Souza""@pt;
    dbpedia:birthDate ""1983-10-05""^^xsd:date;
    dbpedia:birthPlace dbo:isPartOf <http://dbpedia.org/ontology/Town>;
    ?place a dbo:City ;
      dbo:name ""São Luís, Maranhão""@pt;
      dbo:country <http://dbpedia.org/ontology/Brazil>
  .
  ?place rdfs:isMemberOf <http://dbpedia.org/ontology/PoliticalDivisions> .
}
```

This SPARQL query will retrieve the current ruling party of São Luís, Maranhão, Brazil.",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
645,33,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of the native, that is a president and a politician, of Restoration (Spain) and commander in Battle of Jarama.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?militaryForce
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace Spain .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ""1936-11-20""^^xsd:date .
  ?person dbpedia:role ""Commander in Battle of Jarama"" .
  ?person dbpedia:militaryForce ?militaryForce .
}
```",4,9,5,3,2,3,3,71,0,0,6,0,0.0,0
573,19,train,"Give me the person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Quincy, Massachusetts"" .
  ?person a dbpedia:Person;
    dbpedia:deathPlace [ dbpedia:locatedIn <http://dbpedia.org/ontology/Region> ?region_of_baker ] .
  ?region_of_baker a dbpedia:AdministrativeTerritory ;
                   dbpedia:hasGovernor Charlie_Baker .
}",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
507,37,train,"Give me the professional in Film director, television director and director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v3 <http://dbpedia.org/ontology/director> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person ?role1 ?role2 WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1919-06-17"" .
  ?person rdfs:label ?name.
  ?person dbpedia:role dbpedia:Film_Director .
  ?person dbpedia:role dbpedia:Television_Director .
  FILTER (?name contains ""AK Abdul Momen"") .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
98,12,train,Give me the birth place of Paolo Ballesteros and entity in Philippines and region of Philippine Standard Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?timeZoneEntity
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Paolo Ballesteros""@en .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ?nameLabel .
  ?timeZoneRegion a dbpedia:TimezoneRegion ;
    dbpedia:name ""Philippine Standard Time""@en .
  ?person dbpedia:standardTime ?timeZoneRegion .
}
```",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
433,22,train,Give me the associated musical artist of Paul Chambers and professional in the profession of Bob Marley.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?associatedArtist 
WHERE {
  ?p1 a dbpedia:Person, dbpedia:musician; dbpedia:name ""Paul Chambers"" .
  ?p2 a dbpedia:Person, dbpedia:musician; dbpedia:name ""Bob Marley"" .
  ?p1 foaf:knows ?p2 .
}
```",3,3,4,2,2,3,3,71,0,0,16,0,0.0,0
216,15,train,"Give me the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/coach> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?coach
WHERE {
  ?team a dbpedia:SportTeam;
    dbpedia:sport dbpedia:Soccer ;
    dbpedia:homeGround ?homeGround .
  ?team dbpedia:coach ?coach .
  ?team rdfs:label ""Croatia U21"" .
}",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
326,1,train,Give me the person decedent at France.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/France> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace france ;
    dbpedia:deathPlace france .
}",1,1,2,1,1,3,2,20,0,0,3795,0,0.0,0
976,1,train,Give me the office of Meral Akşener.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"Given the need for contemporary information about Meral Akşener's political offices, a SPARQL query to DBpedia would look like this:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office
WHERE {
  ?person a dbpedia:OfficeHolder;
    dbpedia:officeName ?office .
  ?person rdfs:label ""Meral Akşener""@en .
}
```

This query selects the office name (`?office`) for individuals labeled as ""Meral Akşener"" in DBpedia, assuming that office holders have a `dbpedia:officeName` property associated with their offices.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
976,11,train,"Give me the office of the leader, that is a politician, of Grand National Assembly of Turkey.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office
WHERE {
  ?person a dbpedia:OfficeHolder;
    dbpedia:office ?office .
  ?person rdfs:label ""Speaker of the Grand National Assembly of Turkey""@en .
}
```",2,3,3,2,1,3,3,71,0,0,4,0,0.0,0
527,12,train,"Give me the author of the work, that is a work and a book, of Tom Baker and actor of The Book Tower.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Book_Tower> <http://dbpedia.org/property/starring> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?author
WHERE {
  ?work a dbpedia:Work;
    dbpedia:mainActor ?actor .
  ?actor rdfs:label ""Tom Baker""@en .
  ?work rdfs:author ?author .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
773,39,train,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and parent of Carloman of Bavaria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?v0 . },"Given that we are querying a structured database like DBpedia, which contains information about people, their relationships, and roles, the SPARQL query would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasFather ?father .
  ?father a dbpedia:Person;
    dbpedia:role dbpedia:Monarch ;
    dbpedia:officeHolder true .
  ?child rdf:type dbpedia:Royalty .
}
```

This query does the following:
- It selects the parent (`?parent`) of Carloman of Bavaria (`?child`), who is a royalty (`?child a dbpedia:Royalty`).
- It filters for children (`?child`) of individuals (`?father`) who are both monarchs (`?father a dbpedia:Monarch`) and office holders (`?father:officeHolder true`).",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
192,13,train,"Give me the spouse of the spouse, that is a royalty, of the child of Charles II of Naples.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?childSpouseSpouseName ?royalSpouse
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?charlesII .
  ?charlesII a dbpedia:Monarch;
    dbpedia:name ""Charles II of Naples"" .
  ?child dbpedia:spouse ?childSpouse .
  ?childSpouse a dbpedia:Person;
    dbpedia:isSpouseOf ?child ; # Directly linking child to spouse
    dbpedia:isRoyal ?royalSpouse . # Check if the spouse is royal
}",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
791,24,train,Give me the predecessor of the child of Emperor Takakura and father of Emperor Go-Toba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?predecessor
WHERE {
  ?child a dbpedia:Person;
    dbpedia:father dbpedia:Emperor_Takakura ;
    dbpedia:son ?emperor_go_toba .
  ?emperor_go_toba a dbpedia:Person;
    dbpedia:title ""Emperor Go-Toba"" .
  ?predecessor a dbpedia:Person;
    dbpedia:parent ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
433,38,train,"Give me the professional in the profession of Bob Marley and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist
WHERE {
  ?bob_marley a dbpedia:Person;
    dbpedia:occupation ""musician"";
    dbpedia:musicalGenre ""Reggae"" .
  ?scott_lafaro a dbpedia:Person;
    dbpedia:associatedMusicalArtist ?artist .
  ?artist a dbpedia:MusicArtist;
    dbpedia:type ""Artist"".
}
```",4,6,5,2,2,3,3,71,0,0,4,0,0.0,0
926,31,train,Give me the father of the father of the spouse of Neşerek Kadın and successor of Mustafa III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father_of_spouse_father ?successor_of_Mustafa_III
WHERE {
  ?spouse_person a dbpedia:Person;
    dbpedia:spouse ?wife .
  ?wife a dbpedia:Person;
    dbpedia:parent ?parent_of_wife .
  ?parent_of_wife a dbpedia:Person;
    dbpedia:father ?father_of_spouse_father .

  ?mustafa_III a dbpedia:Person;
    dbpedia:succeededBy ?successor .

  ?successor a dbpedia:Person;
    dbpedia:name ""Abdul Hamid I"" .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
874,12,train,Give me the band of Manfred Mann (musician) and band of the band member of The Jones Gang.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Manfred_Mann_(musician)> . ?result <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Jones_Gang> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName1 ?bandName2
WHERE {
  ?manfredMann a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?manfredMann rdfs:label ""Manfred Mann""@en .

  ?theJonesGang a dbpedia:Band ;
    dbpedia:members [ ?member rdfs:label ""Member Name"" ] .
  
  ?member rdfs:label ""Band Member Name""@en .
  
  FILTER (lang(?member) = ""en"")  # Assuming English labels
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
892,0,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?entity
WHERE {
  ?entity a dbpedia:Location ;
    dbpedia:country ""Italy"" .
}",1,1,2,1,1,3,3,71,0,0,13092,0,0.0,0
433,34,train,"Give me the professional in Musician and associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?personName ?birthPlace ?deathPlace ?musicGenre ?role
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person dbpedia:musicGenre ""jazz"" .
  ?person dbpedia:role ""musician"" .
  ?p1 a dbpedia:CreativeWork; dbpedia:isBasedOnContent ?person .
  ?person rdfs:label ?personName .
  FILTER (lang(?personName) = ""en"")  # Assuming English labels
}
```

This query will return information about individuals who:
- Were born in a place relevant to the British Raj
- Died during the British Raj period
- Were musicians
- Had a music genre of jazz
- Played the role of a musician

The `FILTER (lang(?personName) = ""en"")` clause ensures we only get results with English labels, which is reasonable given that Paul Chambers was an English musician.",4,6,5,3,2,3,3,71,0,0,15,0,0.0,0
158,12,train,"Give me the party of the successor, that is a prime minister and an office holder and a politician, of André Tardieu and entity in France.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/André_Tardieu> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?v0 <http://dbpedia.org/ontology/party> ?result . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successorParty ?successor
WHERE {
  ?person a dbpedia:OfficeHolder;
    dbpedia:officeRole dbpedia:Prime_Minister_of_France .
  ?person dbpedia:politicalParty ?party .
  ?successor a dbpedia:Person;
    dbpedia:officeHolder ;
    dbpedia:role dbpedia:Prime_Minister_of_France .
  ?successor dbpedia:politicalParty ?successorParty .
  ?party rdfs:label ?partyLabel .
  FILTER (lang(?partyLabel) = ""fr"") .
  BIND (str(?partyLabel) AS ?partyShortName)
}
ORDER BY ?partyShortName",3,6,4,2,2,3,2,20,0,0,1,0,0.0,0
166,1,train,Give me the entity in Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?entity WHERE { ?entity a dbpedia:Person; dbpedia:countryOfResidence ""Spain"" . }
```",1,1,2,1,1,3,2,20,0,0,11844,0,0.0,0
267,7,train,"Give me the coach of the player, that is a soccer club, in Rasoul Khatibi.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/coach> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?coach
WHERE {
  ?player a dbpedia:SoccerPlayer;
    dbpedia:club ?soccerClub .
  ?soccerClub rdfs:label ""Rasoul Khatibi"" .
  ?player dbpedia:coach ?coach .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
965,27,train,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthParent ?deathParent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  ?person dbpedia:birthParent ?birthParent .
  ?person dbpedia:deathParent ?deathParent .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
433,12,train,Give me the associated musical artist of Bill Evans and professional in Musician.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?associated_artist WHERE {
  ?bill_evans a dbpedia:Person;
    dbpedia:birthDate ""1938-03-26"";
    dbpedia:genre dbpedia:Jazz .
  ?jazz_artist a dbpedia:MusicArtist;
    dbpedia:activeYears [ start ""1950"" ; end ""1980"" ] .
  ?bill_evans rdfs:label ?name .
  ?jazz_artist rdfs:label ?name .
  FILTER (regex(str(?name), ""Bill Evans""))
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
773,3,train,Give me the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parentOfBernard
WHERE {
  ?charles_the_fat a dbpedia:Person;
    dbpedia:hasChild ?bernard .
  ?bernard a dbpedia:Person;
    dbpedia:hasParent ?parentOfBernard .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
773,14,train,"Give me the parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?person dbpedia:name ""Louis the German"" .
  ?child a dbpedia:Person;
    dbpedia:parent ?childParent .
    dbpedia:rank ""King of East Francia"" .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
791,25,train,"Give me the predecessor of Emperor Antoku and father of the child, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?predecessor ?father_of_takakura
WHERE {
  ?antoku a dbpedia:Person;
    dbpedia:monarchOf dbpedia:Japan ;
    dbpedia:precedesor ?predecessor .
  ?predecessor a dbpedia:Person;
    dbpedia:child [ dbpedia:hasParent ?father_of_takakura ] .
  ?takakura a dbpedia:Person;
    dbpedia:monarchOf dbpedia:Japan ;
    dbpedia:succeededBy ?antoku .
  ?father_of_takakura a dbpedia:Person;
    dbpedia:parentOf ?child .
  ?child a dbpedia:Person;
    dbpedia:name ""Takakura"" . # Assuming Takakura's name is known
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
917,39,train,"Give me the child of Kekūanāoʻa and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchild WHERE {
  ?parent a dbpedia:Person;
    dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person;
    dbpedia:title ""Kamehameha III"" .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?child a dbpedia:Royalty .
}
```

This SPARQL query does the following:
- It identifies Kamehameha III as the specific person with the title ""Kamehameha III"".
- It looks for children (`?child`) of any person (`?parent`) who are themselves a royalty (`dbpedia:Royalty`).
- It ensures that the parent of these children (`?parent`) is Kamehameha III.",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
874,6,train,Give me the band of Robert Hart (musician) and band of Manfred Mann (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Robert_Hart_(musician)> . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Manfred_Mann_(musician)> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:memberOf [ owl:sameAs ?bandName ] .
  FILTER (lang(?person) = ""en"")  # Assuming we are looking for English bands
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
573,3,train,Give me the real name of Charlie Baker (Australian footballer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?realName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ?name .
    [ a dbpedia:PersonProperty ;
      rdfs:label ""Australian footballer"" ] .
    ?person rdfs:label ?realName .
  FILTER (?name = ""Charlie Baker"")
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
715,28,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in Spanish Civil War and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:conflict ""Rif War"" .
  ?person a dbpedia:Person;
    dbpedia:conflict ""Spanish Civil War"" .
  ?person a dbpedia:OfficeHolder;
    dbpedia:office dbpedia:Ministry_of_Air_Spain .
}
```

This SPARQL query will find a person who was involved in both the Rif War and the Spanish Civil War, and also held the office of Minister of the Air in Spain.",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
933,37,train,Give me the reference to the birth name of the professional in Musician and band of The Ramong Sound.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName
WHERE {
  ?person a dbpedia:Person;
    rdfs:label ?name .
  ?band a dbpedia:Band;
    dbpedia:members ?person .
  FILTER (regex(str(?name), ""AK Abdul Momen"")) .
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
83,1,train,Give me the party of Alceu Collares.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alceu_Collares> <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?politicalParty
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Alceu Collares"" .
  ?person dbpedia:politicalParty ?politicalParty .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
965,32,train,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of the child, that is a royalty, of Prince Louis of Battenberg.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?wifeSpouseOfJulia WHERE {
  ?person a dbpedia:Person;
    dbpedia:spouse ?husband .
  ?husband a dbpedia:Person;
    dbpedia:name ""Grand Duke Alexander Mikhailovich of Russia"" .
  ?person a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:name ""Prince Louis of Battenberg"" .
  ?child a dbpedia:Person;
    dbpedia:spouse ?wifeSpouseOfJulia .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
495,14,train,Give me the father of the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father_of_child WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Duke Alexander of Württemberg"" .
  ?person2 a dbpedia:Person;
    dbpedia:parent ?parent ;
    dbpedia:siblingOf ?person1 .
  ?person2 a dbpedia:Person;
    dbpedia:name ?name_of_person2 .
  ?father a dbpedia:Person;
    dbpedia:child ?person2 .
  ?father dbpedia:name ?father_name
}
LIMIT 1",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
329,15,train,Give me the entity in Northern Ireland and birthplace of the author of The Tailor and Ansty.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen""@en .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
}",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
433,17,train,Give me the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?result . },"Given that DBpedia categorizes people with professions and links them to their works, we can construct a SPARQL query to find the profession of the artist who performed ""Slowhand at 70 – Live at the Royal Albert Hall."" Assuming the artist's name is known (let's hypothetically say it's Eric Clapton), the SPARQL query would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?profession
WHERE {
  ?artist a dbpedia:Artist;
    dbpedia:hasWork dbpedia:Album_Slowhand_At_70_Live_At_The_Royal_Albert_Hall .
  ?artist dbpedia:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,11,0,0.0,0
791,17,train,"Give me the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childName ?royaltyStatus ?officeHolderStatus
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Emperor Kazan"" ;
    dbpedia:role dbpedia:Monarch_of_Japan .
  ?child dbpedia:hasParent ?parent ;
    dbpedia:royaltyStatus ?royaltyStatus ;
    dbpedia:officeHolderStatus ?officeHolderStatus .
  FILTER ( ?royaltyStatus = ""Royalty"" AND ?officeHolderStatus = ""Office Holder"" )
}
```",2,5,3,2,1,3,3,71,0,0,3,0,0.0,0
976,14,train,Give me the office of the person born as Mehmet Naci Bostancı.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1895"";
    dbpedia:deathDate ""unknown"";
    dbpedia:role ?office .
  FILTER (lang(?person) = ""en"")  # Assuming the person's information is in English
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
573,4,train,"Give me the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/governor> ""Charlie Baker""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?administration
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Massachusetts, United States"";
    dbpedia:officeHolderRole dbpedia:Governor_of_Massachusetts .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
839,4,train,"Give me the person born, that is a musical artist, as Kevin Richard Russell.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen"" .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
47,21,train,Give me the office of the administration of Jagdeep Dhankhar and office of Ajoy Mukherjee.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?officeName ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""India"" .
  ?person dbpedia:role dbpedia:P31* [ dbpedia:instanceOf dbpedia:PoliticalOffice ] .
}
```

This query will:
- Find all `dbpedia:Person` resources born in India.
- Filter those to find individuals who have a `dbpedia:role` property indicating they held a `dbpedia:PoliticalOffice`.

To refine the query further and specify the offices of Jagdeep Dhankhar and Ajoy Mukherjee, we would need to:
1. Use additional properties that link people to their specific offices.
2. Ensure the query returns distinct office names for both individuals.

However, without direct properties linking individuals to specific offices in DBpedia, this query will provide a general approach to finding political offices held by these individuals.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
417,2,train,Give me the child of Alexandrine of Mecklenburg-Schwerin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?parent dbpedia:name ""Alexandrine of Mecklenburg-Schwerin"" .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
976,16,train,"Who is the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı?","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.9/>

SELECT ?mayor
WHERE {
  ?person a dbpedia:Politician, dbpedia:OfficeHolder;
    dbpedia:nationality foaf:countryOfBirth ""Turkey"";
    dbpedia:officeHolderRole ?role .
  ?role a dbpedia:PoliticalPartyMemberRole .
  ?person rdfs:label ?name .
  ?person dbpedia:party dbpedia:Millet_Ittifakı .
  FILTER (regex(str(?name), ""AK""))  # Assuming AK are the initials of the mayor's name
}
```",2,8,3,2,1,3,3,71,0,0,1,0,0.0,0
495,5,train,Give me the child of Princess Charlotte of Saxe-Hildburghausen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Charlotte of Saxe-Hildburghausen"" .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent;
    dbpedia:name ?name .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
955,12,train,"Give me the band of the band member, that is a musical artist and an artist, of Street Dogs and band of Nate Albert.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nate_Albert> . ?result <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Musician;
    dbpedia:band ?band .
  ?person rdfs:label ""Nate Albert""@en .
  ?band rdfs:label ""Street Dogs""@en .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
773,16,train,"Give me the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v1 . },"Since no direct child of Louis the Pious fits the criteria of being a royalty during the British Raj and having a significant role during that period, we need to broaden our search or acknowledge that such a figure does not exist within the constraints provided.

Given the limitations and the historical context, the SPARQL query would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# There is no direct child of Louis the Pious who fits the criteria during the British Raj.
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
36,6,train,Give me the actor of Being Mrs Elliot and person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX imdb: <http://purl.org/imdb/>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actorName ?personInfo
WHERE {
  ?movie imdb:hasActor ?actorName .
  ?actorName a imdb:Person ;
             dbpedia:birthYear 1971 .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
987,14,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?country
WHERE {
  ?country a dbo:Country;
    rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = ""fr"" OR lang(?countryLabel) = ""de"" OR lang(?countryLabel) = ""it"")
}",2,3,3,2,1,3,3,71,0,0,173261,0,0.0,0
933,14,train,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Musician;
    dbpedia:associatedBand ?band .
  ?band rdfs:label ""Cocteau Twins""@en .
}",2,5,3,2,1,3,3,71,0,0,4,0,0.0,0
579,1,train,Give me the person born as Isobel Jane Miller Richard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Isobel Jane Miller Richard""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Isobel Jane Miller Richard"" .
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
102,3,train,Give me the player in Ellie Roebuck.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?player WHERE {
  ?player a dbo:Person;
    dbpedia:birthDate FILTER (datatype(""1982-06-26"") BETWEEN ?start AND ?end) ;
    dbpedia:deathDate FILTER (datatype(""1982-06-26"") BETWEEN ?start AND ?end) .
  ?player rdfs:label ""Ellie Roebuck""@en .
  ?player dbo:sport ""Tennis"" .
  ?start FILTER (datatype(""1890"") LESS THAN ?start) .
  ?end FILTER (datatype(""1945"") GREATER THAN ?end)
}
```

This SPARQL query looks for a person born between 1890 and 1945 (covering the British Raj period) who is labeled ""Ellie Roebuck"" and is associated with the sport of tennis.",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
826,8,train,Who is the parent of Prince Friedrich of Hesse and by Rhine?,SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1905"";
    dbpedia:name ""Friedrich Karl Anton Wilhelm von Hesse""; 
    dbpedia:parent ?parent .
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
170,12,train,Give me the domain of Mayor and entity in Russia and birth place of Era Ziganshina.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify the class for ""Mayor""
SELECT ?mayorClass WHERE { ?x a dbpedia:OfficeHolder ; dbpedia:office ?officeName . FILTER ( ?officeName = 'Mayor' ) }

# Step 2: Find the specific mayor from Russia
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?mayor WHERE {
  ?mayor a dbpedia:Person ;
    dbpedia:nationality dbpedia:Russia .
}

# Step 3: Extract the birth place of Era Ziganshina
PREFIX rdf:
PREFIX rdfs:
SELECT ?birthPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""Era Ziganshina""@en .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
170,1,train,Give me the birth place of Era Ziganshina.,SELECT ?result WHERE { <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""Era Ziganshina""@en .
}",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
554,12,train,Give me the leader of the birth place of The Legendary Tigerman and leader of Portuguese São Tomé and Príncipe.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?result . <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Portuguese_São_Tomé_and_Príncipe> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Assuming ""The Legendary Tigerman"" has a real-world equivalent or known birthplace in a specific location (let's hypothetically use ""Calcutta, India"")
SELECT ?birthPlaceLeader ?countryLeader
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  OPTIONAL { ?person dbpedia:hasRole [ owl:sameAs dbpedia:PoliticalLeaderOf ] }
  
  # For Portuguese São Tomé and Príncipe
  ?country dbpedia:country ; dbpedia:name ""São Tomé and Príncipe"" .
  ?countryLeader a dbpedia:Person;
    dbpedia:role [ owl:sameAs dbpedia:PoliticalLeaderOf ] .
  ?countryLeader dbpedia:birthPlace ?birthPlace .
}

```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
382,7,train,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of Bonner SC.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Bonner_SC> <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace WHERE {
  ?club a dbpedia:SportsClub;
    dbpedia:name ""Bonner SC"" .
  ?manager a dbpedia:Person;
    dbpedia:role dbpedia:SoccerManager ;
    dbpedia:role dbpedia:Athlete ;
    dbpedia:role dbpedia:SportsManager .
  ?club dbpedia:hasManager ?manager .
}
```",2,5,3,2,1,3,2,20,0,0,2,0,0.0,0
267,14,train,Give me the person born on the birth date of the reference to Dan Cathy.,"SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v0 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthday ?date .
  ?date rdfs:label ""YYYY-MM-DD"" .
  FILTER (STRFTIME(""ISO"", ?date) = STRFTIME(""ISO"", ""1970-03-29""))
}
```",3,3,4,3,1,3,2,20,0,0,35,0,0.0,0
417,32,train,"Give me the child of the father of Frederick IX of Denmark and spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?parent a dbpedia:Person; dbpedia:name ""Christian X of Denmark"" .
  ?parent dbpedia:fatherOf ?child .
  ?child a dbpedia:Person; dbpedia:birthPlace ""Denmark"" .
  OPTIONAL { ?child dbpedia:spouse ?spouse }
  FILTER (lang(?spouse) = ""sv"")  # Filter for spouse with Swedish language
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
341,5,train,Give me the band member of the awardee of List of awards and nominations received by Beyoncé.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Beyoncé> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandMember
WHERE {
  ?awards dbpedia:awardedBy Beyoncé .
  SOME ?award rdf:type dbpedia:MusicAward .
  ?award rdfs:seeAlso <http://www.grammy.com/> . # Link to the official Grammy Awards page for detailed information
  ?award dbpedia:bandMember ?bandMember .
}",2,2,3,2,1,2,2,9,0,0,50,0,0.0,0
166,13,train,"Give me the resting place of the military force of the force, that is an event and a societal event and a military conflict, of Manuel Hedilla.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Hedilla> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"To find the resting place of Manuel Hedilla using SPARQL, we need to query for information related to him within the context of the Spanish Civil War. However, since specific details about his final resting place might not be directly encoded in DBpedia with a simple SPARQL query, we can make some assumptions based on typical practices for military personnel from that time and place.

A general approach could involve querying for individuals associated with the Spanish Civil War and then filtering for those who were part of the military force. Here's a simplified SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?restingPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:conflict dbpedia:Spanish_Civil_War ;
    dbpedia:military_role dbpedia:Military_officer .
  ?person rdfs:label ""Manuel Hedilla""@en .
}
```

This query looks for individuals involved in the Spanish Civil War with the military officer role, filtering by the name ""Manuel Hedilla"". It assumes that such detailed information might be available under these conditions.",3,6,4,3,1,3,2,20,0,0,36,0,0.0,0
326,4,train,"Give me the person decedent at Rancho Mirage, California and professional in Composer.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Rancho_Mirage,_California> . ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Rancho Mirage, California"";
    dbpedia:occupation dbpedia:Composer .
}",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
892,35,train,"Give me the entity in the profession of Henri Crolla and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?profession ?regionAdmin WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace xsd:string;
    foaf:name ""Henri Crolla""@en;
    dbpedia:occupation ?profession .
  
  ?person a dbpedia:Person;
    dbpedia:memberOf dbpedia:Political_party ;
    dbpedia:politicalPartyAffiliation dbpedia:Democratic_Party_(Italy) .
  
  ?regionAdmin a dbpedia:Administrative_region, dbpedia:Settlement, dbpedia:Region .
  
  ?person dbpedia:administers ?regionAdmin .
  
  FILTER (lang(?person/birthPlace) = ""it"" )  # Ensure the person is Italian
}
```",4,8,5,2,2,3,3,71,0,0,587,0,0.0,0
216,11,train,Give me the administration of the designer of Woolfe: The Red Hood Diaries.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v1 . },"Given that the designer's name is not directly provided in the question, we will assume a common approach to find such information by querying for people associated with the work ""Woolfe: The Red Hood Diaries."" Assuming the designer's name is known or can be inferred from context as ""Alex Maleev,"" we would construct the following SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?administration
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Alex Maleev"" .
  ?person rdfs:label ?nameLabel .
  ?work a dbpedia:Film; 
    dbpedia:title ""Woolfe: The Red Hood Diaries"" .
  ?person dbpedia:workedFor ?administration .
  ?nameLabel ns:label ?title .
}
```

This query searches for a person named ""Alex Maleev,"" associated with the film ""Woolfe: The Red Hood Diaries,"" and then retrieves their administrative details.",2,2,3,2,1,2,3,28,0,0,1099,0,0.0,0
892,6,train,Give me the award of Anna Ishii.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?result . },{sparql_query},1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
791,13,train,Give me the predecessor of the child of Emperor Takakura.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Emperor Takakura (Takamatsu)""@en .
  ?child rdfs:father ?parent .
  FILTER (?parent != ?child)  # Ensure the child is not the same as the parent
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
216,2,train,Give me the administration of .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> """"@en . }","Given the reasoning above, we can construct a SPARQL query to find relevant information about AK Abdul Momen's administration during the British Raj. We will use the DBpedia ontology to search for individuals associated with the British Raj and their roles:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?role ?administration
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""India"";
    dbpedia:deathPlace ""India"" @en ;
    dbpedia:occupation ?role .
  ?role rdfs:label ?administration .
}
```

This query looks for individuals born in India and dying in India (likely indicating they were active during the British Raj), and then it selects the label of their occupation as the administration, assuming that their occupation would reflect their administrative role within the context of the British Raj.",1,1,2,1,1,2,3,28,0,0,1099,0,0.0,0
645,11,train,Give me the commander in the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander
WHERE {
  ?legion a dbpedia:MilitaryUnit;
    dbpedia:leader ?commander .
  ?legion rdfs:label ""Regimiento de Infantería Española"" .
}
```",2,2,3,2,1,3,3,71,0,0,51,0,0.0,0
573,25,train,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify the person associated with ""Exchequer Standards""
SELECT ?person WHERE {
  ?book dbpedia:isAboutSubject ?person .
  ?book rdfs:label ""Exchequer Standards"" .
}

# Step 2: Check if the identified person is a politician and office holder
SELECT ?person (dbpedia:polserviceRole ?role) WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  OPTIONAL { ?person dbpedia:hasRole ?role . }
  FILTER (?role IN [?politicianRoles])
}

# Step 3: Extract the birthplace (parent's residence)
SELECT DISTINCT ?birthPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
}

# Step 4: Find the death place, which is Quincy, Massachusetts
SELECT ?deathPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?deathPlace rdfs:label ""Quincy, Massachusetts"" .
}

# Combine all results to get the parent's place and the person's details
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
955,4,train,"Give me the reference, that is a band and a group and an organisation, to Street Dogs.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band ?group ?organization
WHERE {
  ?band rdfs:label ""Street Dogs""@en .
  ?band dbpprop:genre ""Rock music"" .
  ?band dbpprop:inceptionYear ""2005"" .
  ?group rdfs:label ?groupLabel .
  ?group a dbpedia:MusicGroup .
  ?organization rdfs:label ?organizationLabel .
  ?organization a dbpedia:MusicOrganization .
  ?band dbpprop:founderMember ?member .
  ?member rdfs:label ?memberName .
  FILTER (lang(?memberName) = ""en"") .
}
```

This query looks for entities labeled as ""Street Dogs"" that are also classified as a ""band"", ""group"", or ""organization"". It filters for English labels to ensure we're focusing on the correct band from Boston.",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
273,3,train,Give me the child of Giovanni Agnelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?parent dbpedia:name ""Giovanni Agnelli"" .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
965,25,train,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""George Mountbatten, 1st Marquess of Milford Haven"";
    dbpedia:birthParent ?parent .
}",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
865,37,train,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu and father of Shahla Khatun.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?child a dbpedia:Person;
    dbpedia:birthFather ?father .
  ?child dbpedia:parent [ dbpedia:hasSpouse <http://dbpedia.org/resource/Syeda_Shahar_Banu> ] .
  ?child a dbpedia:Person;
    dbpedia:offspring [ dbpedia:parent <http://dbpedia.org/resource/Jahangir> ] .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
978,9,train,"Who is the professional, that is a musical artist and an artist, in the award of Michel Claparède?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?artist
WHERE {
  ?artist a dbpedia:Person;
    dbpedia:awardRecipientOf dbpedia:Michel_Claparède_Award ;
    dbpedia:is_a [ owl:sameAs dbpedia:Musician ] .
    ?artist a dbpedia:Person;
    dbpedia:is_a [ owl:sameAs dbpedia:Artist ] .
}
```",2,4,3,2,1,3,2,20,0,0,8677,0,0.0,0
365,13,train,"Give me the person born as the birth name of the commander, that is an office holder, in Ukrainian–Soviet War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName ?officeHolder
WHERE {
  ?person a dbpedia:Person;
    dbpedia:conflict dbpedia:Ukrainian_Soviet_War ;
    dbpedia:officeHolder ?office .
  ?person rdfs:label ?birthName .
}",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
281,17,train,"Give me the awardee of Volunteer Decoration and awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?result <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardeeLabel ?conflict
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Lawrence Moore Cosgrave""@en .
  ?person dbpedia:recievesAward dbpedia:VolunteerDecoration ;
    dbpedia:awardRecipient ?awardee .
  ?awardee rdfs:label ?awardeeLabel .
  ?person dbpedia:conflictIn ?conflict .
}",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
935,4,train,"Give me the native of Balochistan, Pakistan.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality ""Balochistan, Pakistan"" .
  ?person rdfs:wasBornIn dbo:regionBalochistan .
  ?person rdfs:diedIn dbo:countryPakistan .
  FILTER (timeRange ""1858-1947"")
}
```",1,1,2,1,1,3,2,20,0,0,57,0,0.0,0
791,21,train,"Give me the father of Emperor Go-Toba and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?fatherOfGoToba ?wifeOfTakakura
WHERE {
  ?person1 a dbpedia:Person; dbpedia:name ""Emperor Go-Toba"" .
  ?person1 dbpedia:father ?fatherOfGoToba .
  ?person2 a dbpedia:Person; dbpedia:name ""Empress Shōshi"" .
  ?person2 dbpedia:sibling ?person3 .
  ?person3 a dbpedia:Person; dbpedia:name ""Emperor Takakura"" .
  ?person2 dbpedia:spouse ?wifeOfTakakura .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
83,0,train,Give me the ruling party in Fortaleza.,SELECT ?result WHERE { <http://dbpedia.org/resource/Fortaleza> <http://dbpedia.org/property/leaderParty> ?result . },"Given that DBpedia provides structured data about various entities including political parties and their affiliations with regions, we can construct a SPARQL query to retrieve this information. However, since DBpedia's data might not be fully up-to-date, we will use a general approach:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?rulingParty
WHERE {
  ?city dbpedia:hasGovernor ?governor .
  ?governor dbpedia:politicalParty ?rulingParty .
  ?city rdfs:label ""Fortaleza"" .
}
```

This query looks for the `politicalParty` of the `Governor` of a city with the label ""Fortaleza"". It assumes that the Governor's party is the ruling party in that context.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
955,1,train,Give me the band of Johnny Rioux.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Rioux> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Musician;
    dbpedia:role ?role .
  ?role rdfs:label ""Drummer"" .
  ?person foaf:name ""Johnny Rioux"" .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
445,27,train,Give me the entity in the award of the commander in Battle of Saint-Mihiel.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedFor dbpedia:Battle_of_St_Mihiel .
}",3,3,4,3,1,3,3,71,0,0,87241,0,0.0,0
645,8,train,"Give me the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office
WHERE {
  ?person a dbpedia:Person;
    dbpedia:office ?office .
  ?office rdfs:label ""Governor-General of the Philippines""@en .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
645,21,train,Give me the leader of Ministry of the Army (Spain) and commander in the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?leader ?commander
WHERE {
  ?person a dbpedia:Person;
    dbpedia:role [ owl:propertyValue ""Ministry of the Army (Spain)"" ] .
  ?person a dbpedia:Person;
    dbpedia:role [ owl:propertyValue ""commander in the force of Carlos Asensio Cabanillas"" ] .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
976,10,train,Give me the office of Mustafa Şentop and office of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office
WHERE {
  ?person a dbpedia:Person;
    dbpedia:office ?office .
  FILTER (lang(?office) = ""en"")  # Filter for English language offices
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
158,9,train,"Give me the award, that is a country, of the reference to Adelbert Cronkhite.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/awards> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?award
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Adelbert Cronkhite"" .
  ?person dbpedia:awards ?award .
  FILTER (type(?award) = dbpedia:Country)
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
527,2,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actorName ?profession
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:occupation ?profession .
  FILTER (?actorName = ""AK Abdul Momen"") .
}
```",1,1,2,1,1,3,2,20,0,0,21580,0,0.0,0
465,32,train,"Give me the successor of the child of Alfonso I d'Este and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Alfonso I d'Este""@en .
  ?child rdfs:label ""Isabella d'Este""@en .
  ?child a dbpedia:Person;
    dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person;
    rdfs:label ""Francesco II Gonzaga""@en .
  ?successor a dbpedia:Person;
    dbpedia:succeededBy ?child .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
129,14,train,"Give me the associated musical artist of the actor, that is an organisation, of Dreamville Presents: Revenge and professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?artist WHERE {
  ?album a dbpedia:Album;
    dbpedia:releaseDate ?releaseDate .
  ?artist a dbpedia:MusicArtist;
    dbpedia:genre ""hip-hop"";
    dbpedia:recordLabel dbpedia:DreamvilleRecords .
  ?album dbpedia:producer ?producer .
  ?producer a dbpedia:Person;
    rdfs:label ""AK Abdul Momen""@en .
}
```",3,4,4,2,2,2,3,28,0,0,3,0,0.0,0
888,9,train,"Give me the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?militaryEntity
WHERE {
  ?conflict a dbpedia:Event;
    dbpedia:startDate ""2014-04-06"" ;
    dbpedia:endDate ""2022-03-31"" .
  ?conflict dbpedia:involvedMilitary ?militaryEntity .
  ?militaryEntity a dbpedia:MilitaryUnit .
  FILTER (lang(?militaryEntity) = ""ru"")  # Filter for Russian military units
}
```",2,4,3,2,1,3,2,20,0,0,24,0,0.0,0
273,6,train,Give me the parent of Gianni Agnelli and spouse of Edoardo Agnelli (industrialist).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Edoardo_Agnelli_(industrialist)> . <http://dbpedia.org/resource/Gianni_Agnelli> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father ?spouse
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:parent ?father .
  ?person2 a dbpedia:Person;
    dbpedia:sibling ?person1;
    dbpedia:spouse ?spouse .
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
839,39,train,"Give me the band of Peter Schorowsky and band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName ?artistCategory
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ?birthDate .
  ?person dbpedia:genre ""Rock music"";
    dbpedia:activeYears ""1980s"";
    dbpedia:band ?bandName .
  ?person a dbpedia:Artist ;
    rdfs:label ?artistCategory .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
417,25,train,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of Christian X of Denmark.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childName ?royaltyStatus
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Christian X of Denmark""@en .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent ;
    dbpedia:royaltyStatus ""Royal""@en .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
987,4,train,"Who is the band, that is an artist and a musical artist, of Šako Polumenta?",SELECT ?result WHERE { <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?artist a dbpedia:Artist ;
            dbpedia:musicalGenre [ property values ?genre ] .
  ?artist dbpedia:birthPlace ""Slovenia"" .
  ?artist rdfs:label ?name .
  ?bandMember a dbpedia:BandMember ;
             dbpedia:band ?band .
  ?bandMember a dbpedia:Person ;
             dbpedia:givenName ?first_name .
  ?bandMember a dbpedia:Artist ;
             dbpedia:musicalGenre [ property values ?genre ] .
  ?artist rdfs:seeAlso ?bandPage .
  FILTER (regex(str(?name), ""Šako"")) .
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
965,12,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and parent of Louise Mountbatten.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthParent ?deathParent
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:name ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  ?person1 dbpedia:parent ?birthParent .
  ?person2 a dbpedia:Person;
    dbpedia:name ""Louise Mountbatten""@en .
  ?person2 dbpedia:parent ?deathParent .
}",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
892,11,train,Give me the entity in the profession of Henri Crolla.,SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?profession
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Henri Crolla"" .
  ?person rdfs:label ?profession .
}",2,2,3,2,1,3,3,71,0,0,13092,0,0.0,0
976,6,train,"Who is the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?mayor
WHERE {
  ?person a dbpedia:OfficeHolder;
    dbpedia:politicalAffiliation dbpedia:NationAlliance ;
    dbpedia:nationality ""Turkish"" .
  ?person rdfs:label ?name .
  FILTER (lang(?name) = ""en"")  # Assuming we want the name in English
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
417,19,train,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of Christian X of Denmark.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:name ""Count Ingolf of Rosenborg"" .
  ?person1 dbpedia:parent ?parent1 .
  ?parent1 a dbpedia:Person;
    dbpedia:name ""Christian X of Denmark"" .
  ?person2 a dbpedia:Person;
    dbpedia:name ?spouse .
  ?person1 dbpedia:child ?person2 .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
353,0,train,Give me the alma mater of Daniil Yegorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniil_Yegorov> <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?almaMater
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Daniil Yegorov""@en .
  ?person rdf:type dbpedia:Graduate ;
    dbpedia:degreeAward ?almaMater .
}",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
456,13,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"Given that DBpedia contains structured data about various characters from literature and media, we can use SPARQL to query for this information. The reasoning here is that if a character has an entry in DBpedia, it is likely well-documented with their alter ego and other attributes.

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alterEgoName
WHERE {
  ?character a dbpedia:Character;
    dbpedia:alterEgo ?alterEgoName .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
554,4,train,"Who is the band, that is an artist, of Rita Redshoes?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?artist a dbpedia:Person; foaf:name ""Rita Redshoes"" .
  ?band a dbpedia:Band;
    dbpedia:hasMember ?artist .
}",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
865,21,train,"Give me the father of Shahla Khatun and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?fatherName ?countryResidence
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Shahla Khatun""@en .
  ?person dbpedia:father ?fatherName .
  ?person2 a dbpedia:Person;
    dbpedia:name ""Ram Jaipal Singh Yadav""@en .
  ?person2 dbpedia:residence ?countryResidence .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
281,15,train,"Give me the commander in the war, that is an event and a military conflict, of Roy Boehm and awardee of Volunteer Decoration.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"Given that we are querying a database like DBpedia which contains structured information about people, events, and awards, the SPARQL query would be constructed as follows:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war ?commander ?award
WHERE {
  ?person a dbpedia:Person;
    dbpedia:conflict ?war .
  ?person dbpedia:awardedWith ?award .
  ?award rdfs:label ""Volunteer Decoration"" . 
  ?commander a dbpedia:MilitaryPerson;
    dbpedia:commandedIn ?war .
}
```

This query looks for:
- `dbpedia:Person` individuals (`?person`) who were involved in a conflict (`?war`) and awarded with the ""Volunteer Decoration"" (`?award`).
- It then links these individuals to their commanders (`?commander`) through the `dbpedia:commandedIn` property.",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
47,15,train,"Give me the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v1 . },"To extract this information from DBpedia, we need to query for P. Chidambaram and then find the administration role he held during his tenure as Home Minister. 

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia-core: <http://dbpedia.org/ontology/>

SELECT ?role
WHERE {
  ?person a dbpedia-core:OfficeHolder ;
            dbpedia-core:office ?office .
  ?office rdfs:label ?role .
  ?person foaf:name ""P. Chidambaram"" .
}
```",2,3,3,2,1,3,3,71,0,0,189,0,0.0,0
170,3,train,Give me the work of International Energy Agency.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?work
WHERE {
  ?organization a dbpedia:Organization;
    dbpedia:name ""International Energy Agency""@en .
  ?organization rdfs:label ?work .
}",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
129,3,train,Give me the mayor of 1999 West Dunbartonshire Council election.,SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?mayor
WHERE {
  ?council dbpedia:hasMayor ?mayor .
  ?council rdfs:label ""West Dunbartonshire Council""@en .
  ?council dbpedia:yearOfElection 1999 .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
47,18,train,Give me the office of Suvendu Adhikari and office of Ajoy Mukherjee and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office1 ?office2 ?office3
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace1 .
  ?person1 dbpedia:heldOffice dbpedia:GovernorGeneralOfIndia .
  ?person2 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace2 .
  ?person2 dbpedia:heldOffice dbpedia:ViceroyOfIndia .
  ?person3 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace3 .
  ?person3 dbpedia:heldOffice dbpedia:ChiefMinisterOfBengal .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
917,16,train,"Who is the father of the spouse, that is a royalty, of Leleiohoku I?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?fatherOfSpouse
WHERE {
  ?king a dbpedia:Person;
    dbpedia:monarchOf dbpedia:Hawaii_Kingdom ;
    dbpedia:name ""Leleiohoku I"" .
  ?wife a dbpedia:Person;
    dbpedia:sibling ?husband .
  ?husband a dbpedia:Person;
    dbpedia:spouse ?wife .
  ?fatherOfSpouse a dbpedia:Person;
    dbpedia:parent ?wife .
}",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
715,18,train,Give me the commander in Rif War and commander in Spanish Civil War and leader of Ministry of the Air (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander1 ?commander2 ?ministry_leader
WHERE {
  ?commander1 a dbpedia:Person;
    dbpedia:roleInMilitaryConflict dbpedia:Rif_War .
  ?commander2 a dbpedia:Person;
    dbpedia:roleInMilitaryConflict dbpedia:Spanish_Civil_War .
  ?ministry_leader a dbpedia:Person;
    dbpedia:office dbpedia:Ministry_of_the_Air_España ;
    dbpedia:start_date ""1936-01-01""^^xsd:date;
    dbpedia:end_date ""1939-01-01""^^xsd:date.
}
```

This SPARQL query is designed to:
1. Identify individuals (`?commander1` and `?commander2`) who were involved in the Rif War and the Spanish Civil War respectively, using the `dbpedia:roleInMilitaryConflict` property.
2. Find the individual (`?ministry_leader`) who led the Ministry of the Air in Spain during a specific period (1936-1939), using the `dbpedia:office` property with appropriate date ranges.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
507,28,train,"Give me the spouse of the person born as Anne Voase Coates and professional in Film director, television director and director of Entertaining Mr Sloane (film).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthName ""Anne Voase Coates"" .
  ?person rdfs:label ""Anne Voase Coates""@en .
  ?person dbpedia:role ""Film director, television director and director of Entertaining Mr Sloane (film)"" .
  ?person foaf:spouse ?spouse .
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
965,2,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""George Mountbatten, 2nd Marquess of Milford Haven"" .
  ?person dbpedia:parent ?parent .
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
579,4,train,"Give me the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolderRole dbpedia:Office_Holder ;
    dbpedia:birthPlace ?birthPlace .
  FILTER (lang(?name) = ""en"" )  # Assuming we are looking for English names
}",1,2,2,1,1,3,2,20,0,0,88,0,0.0,0
715,12,train,Give me the commander in Spanish Civil War and leader of Ministry of the Air (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""Francisco Franco""@es.
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
445,2,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity
WHERE {
  ?entity a dbo:Entity ;
    dbo:locatedIn dbpedia:United_Kingdom .
}",1,1,2,1,1,3,3,71,0,0,42999,0,0.0,0
326,0,train,Give me the resident of Berkshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Berkshire> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?personName ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?birthPlace rdfs:label ""Berkshire""@en.
}",1,1,2,1,1,3,2,20,0,157,5,0.0,0.0,0
274,0,train,Give me the band member of Dizzy Gillespie.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandMember
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Chittagong, Bangladesh"";
    dbpedia:musicalGenre Jazz;
    dbpedia:role dbpedia:Band_member_of Dizzy_Gillespie .
}",1,1,2,1,1,2,3,28,0,0,67,0,0.0,0
36,9,train,Give me the person born as Ayo Makun and person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1971-04-01""^^xsd:date;  # Assuming Ayo Makun's birth date is April 1, 1971
    rdfs:label ?name .
  FILTER (lang(?name) = ""en"")  # Ensuring the name is in English
}",2,2,3,1,2,2,3,28,0,44,1,0.0,0.0,0
773,32,train,Give me the parent of the successor of Charles the Bald and spouse of the father of Charles the Fat.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parentOfLouis ?spouseOfCharlesTheFat
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:father ?child .
  ?child a dbpedia:Person; rdfs:label ""Louis the Stammerer""@fr.
  ?person2 a dbpedia:Person;
    dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person; rdfs:label ""Hemma of Venningen""@en.
  ?person1 ns:parentOf ?person2 .
  ?person2 ns:spouse ?spouse .
}",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
917,38,train,Give me the child of the father of Keʻelikōlani and child of the father of Kamehameha IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child1 ?child2
WHERE {
  ?father1 a dbpedia:Person; dbpedia:parent ?grandfather1 .
  ?father2 a dbpedia:Person; dbpedia:parent ?grandfather2 .
  ?child1 a dbpedia:Person; dbpedia:child ?father1 .
  ?child2 a dbpedia:Person; dbpedia:child ?father2 .
}
```",4,4,5,2,2,3,3,71,2,14239,1,0.00014043957587248087,0.6666666666666666,0.0002808199943836001
791,12,train,Give me the predecessor of Emperor Antoku and father of Emperor Go-Toba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?predecessor ?father
WHERE {
  ?emperor a dbpedia:Person;
    dbpedia:monarchName ""Antoku"" .
  ?emperor a dbpedia:Person;
    dbpedia:monarchName ""Go-Toba"" .
  ?emperor dbpedia:precededBy ?predecessor .
  ?emperor dbpedia:father ?father .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
456,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"Given that we are looking for information in DBpedia, the SPARQL query would be structured to find the character associated with ""The Shadow"" and then determine their alter ego. However, since DBpedia does not directly categorize characters by their alter egos, we need to infer this from known relationships.

A possible approach is to look for characters who are closely related to The Shadow in terms of narrative or shared universe. For instance, if The Shadow has a nemesis or a well-known character that is often associated with him, that could be considered an alter ego in the context of shared narratives.

Let's assume that Lamont Cranston, The Shadow's most famous alter ego, is the one we are looking for. We can construct a SPARQL query to find this relationship:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alterEgo WHERE {
  ?person a dbpedia:Character;
    dbpedia:alters ?alterEgo .
  ?person dbpedia:name ""The Shadow"" .
}
```

This query looks for any character named ""The Shadow"" and then finds their alter ego (if any) using the `dbpedia:alters` property.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
965,39,train,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v2 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""George Mountbatten, 2nd Marquess of Milford Haven"" .
  ?person dbpedia:hasParent ?parent .
}",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
122,1,train,Give me the band of Gift of Gab (rapper).,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band
WHERE {
  ?person a dbpedia:Musician;
    dbpedia:associatedBand ?band .
  ?person rdfs:label ""Gift of Gab""@en .
}",1,1,2,1,1,2,2,9,0,0,4,0,0.0,0
341,1,train,Give me the writer of In Love & War (Amerie album).,SELECT ?result WHERE { <http://dbpedia.org/resource/In_Love_&_War_(Amerie_album)> <http://dbpedia.org/property/writer> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?writer
WHERE {
  ?album a dbpedia:MusicAlbum;
    dbpedia:artist ?artist .
  ?song a dbpedia:Songsheet ;
    dbpedia:lyrics ?lyrics ;
    dbpedia:performer ?artist .
  ?artist rdfs:label ""Amerie"" .
  ?lyrics dc:author ?writer .
}
```",1,1,2,1,1,2,2,9,0,0,57,0,0.0,0
976,2,train,Give me the office of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office WHERE {
  ?person a dbpedia:OfficeHolder;
    dbpedia:officeName ?office .
  ?person rdfs:label ""Naci Bostancı""@en .
}",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
507,31,train,Give me the director of Entertaining Mr Sloane (film) and spouse of the person born as the birth name of Anne V. Coates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?director ?spouse
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:productionCompany ""Ealing Studios"";
    dbpedia:directedBy ?director .
  ?joannaFoaf:givenName ""Joanna David"" ;
    foaf:surname ""David"" ;
    foaf:spouse ?spouse .
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
715,9,train,Give me the commander in Rif War and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander
WHERE {
  ?commander a dbpedia:Person;
    dbpedia:conflict ""Rif War"" .
  ?commander a dbpedia:Person;
    dbpedia:conflict ""Spanish Civil War"" .
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
987,34,train,"Give me the entity in Montenegro and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?band dbpedia:hasName ""Dado Polumenta"";
  ?band dbpedia:associatedArtist ?artist .
  ?artist a dbpedia:Musician;
    dbpedia:birthPlace ?birthPlace .
  ?band dbpedia:birthPlace ?birthPlace .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
417,9,train,Give me the child of Christian X of Denmark and spouse of Princess Caroline-Mathilde of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father Christian_X_of_Denmark .
  ?person a dbpedia:Person;
    dbpedia:mother Princess_Caroline_Mathilde_of_Denmark .
  ?child rdfs:label ?child_name .
  ?spouse rdfs:label ?spouse_name .
  ?child ns:childOf ?person .
  ?spouse ns:sibling ?person .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
606,5,train,Who is the alumnus of University of Pennsylvania?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?name WHERE {
  ?person a dbpedia:Person;
    dbpedia:alumniOf dbpedia:University_of_Pennsylvania .
}
```",1,1,2,1,1,3,2,20,0,0,1114,0,0.0,0
606,14,train,"Give me the birthplace of the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. ?v0 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace
WHERE {
  ?quakers a dbpedia:Organization ;
    dbpedia:type [ rdf:value ""university"" ] ;
    dbpedia:type [ rdf:value ""sports league"" ] ;
    dbpedia:type [ rdf:value ""educational institution"" ] .
  ?quakers dbpedia:alumni AK Abdul Momen .
}",3,6,4,3,1,3,2,20,0,0,598,0,0.0,0
41,3,train,"Who is the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election?",SELECT ?result WHERE { <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?officeHolder
WHERE {
  ?officeHolder a dbpedia:OfficeHolder;
    dbpedia:officeMemberOf dbpedia:Castlereagh_Borough_Council ;
    dbpedia:termStarts ""2005-05-01"" .
}",1,3,2,1,1,2,3,28,0,0,4,0,0.0,0
917,32,train,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of the father of Keʻelikōlani.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royaltyParent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Honolulu, Hawaii"";
    dbpedia:father dbpedia:Kaʻeo;
    dbpedia:mother dbpedia:Kekauʻohomau .
  ?person rdfs:label ""Keʻelikōlani"" .
  ?royaltyParent a dbpedia:Royalty; 
    dbpedia:child ?person .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
507,19,train,Give me the spouse of the person born as Anne Voase Coates and director of Entertaining Mr Sloane (film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Anne Voase Coates"" .
  ?person dbpedia:spouse ?spouse .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
216,21,train,Give me the player in the coach of Croatia national under-21 football team and team of Ognjen Vukojević.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?coach ?playerTeam
WHERE {
  ?coach a dbpedia:Coach;
    dbpedia:sport ?sport .
  ?team a dbpedia:SportsTeam;
    dbpedia:name ""Croatia national under-21 football team"" .
  ?player a dbpedia:Person;
    dbpedia:name ""Ognjen Vukojević"" ;
    dbpedia:memberOf ?playerTeam .
  ?playerTeam a dbpedia:FootballTeam;
    dbpedia:homeGround ?homeGround .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
826,30,train,"Give me the spouse of Anna Magdalena Appel and predecessor of the parent of Prince Friedrich of Hesse and by Rhine and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for spouse of Anna Magdalena Appel
SELECT ?spouse
WHERE {
  ?person dbpedia:name ""Anna Magdalena Appel"" .
  ?person dbpedia:spouse ?spouse .
}

# Query for predecessor of the parent of Prince Friedrich of Hesse and by Rhine
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?predecessorParent
WHERE {
  ?prince rdf:type dbpedia:Person; dbpedia:name ""Prince Friedrich of Hesse and by Rhine"" .
  ?prince dbpedia:parent ?parent .
  ?parent dbpedia:precedesor ?predecessorParent .
}

# Query for successor of Louis II, Grand Duke of Hesse
SELECT ?successor
WHERE {
  ?grand_duke rdf:type dbpedia:Person; dbpedia:name ""Louis II, Grand Duke of Hesse"" .
  ?grand_duke dbpedia:succeededBy ?successor .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
93,13,train,"Give me the capital of the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?capital WHERE { dbpedia:Inyo County capital ?capital . },3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
83,4,train,"Who is the commander, that is a politician, in Central African Republic Civil War?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:conflict Central_African_Republic_Civil_War ;
    dbpedia:role dbpedia:Poli (politician) .
}",1,2,2,1,1,3,2,20,0,0,279,0,0.0,0
236,3,train,"Give me the administration, that is an organisation, of John Adams.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/John_Adams> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"To find the administration (organization) of John Adams using SPARQL, we would need to query for the organization associated with the person entity representing John Adams. However, since John Adams' presidency is a historical fact rather than a direct property in DBpedia's ontology, we'll have to infer this information.

Given that John Adams was the 2nd President of the United States, we can use the following SPARQL query to find the organization (the U.S. federal government) associated with him:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?organization
WHERE {
  ?person a dbpedia:Person;
    dbpedia:office dbpedia:POTUS; # President of the United States (Office code)
    dbpedia:birthDate ""1732-10-30""^^xsd:date.
  ?person rdfs:label ""John Adams""@en.
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
826,2,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    rdfs:label ""Louis IV, Grand Duke of Hesse""@en .
  ?person dbpedia:parent ?parent .
  ?parent a dbpedia:Person .
  FILTER (lang(?parent) = ""en"")  # Ensuring we're looking at the English label
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
955,2,train,"Give me the work, that is a work and an album and a musical work, of Matt Freeman.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?work
WHERE {
  ?person a dbpedia:Person;
    foaf:name ""Matt Freeman""@en .
  ?album a dbpedia:Album, dbpedia:musical_work .
  ?album rdfs:label ?work .
}",1,4,2,1,1,3,2,20,0,0,2,0,0.0,0
507,4,train,Who is the person born as Anne Voase Coates?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""AK Abdul Momen""@en .
  OPTIONAL { ?person dbpedia:birthDate ?birthDate }
  OPTIONAL { ?person dbpedia:deathDate ?deathDate }
  FILTER (lang(?person) = ""en"" )
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
976,22,train,Give me the office of Mustafa Şentop and office of the person born as Mehmet Naci Bostancı.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office1 ?office2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:office ?office1 .
  ?person2 a dbpedia:Person;
    dbpedia:office ?office2 .
  ?person1 ns:officeHolder ""Mustafa Şentop"" .
  ?person2 ns:officeHolder ""Mehmet Naci Bostancı"" .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
129,8,train,Give me the professional in the mayor of 1999 West Dunbartonshire Council election.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"To retrieve this information, we would need to:
1. Query for the mayor of West Dunbartonshire in 1999.
2. Extract their profession from the relevant database entries.

Assuming that such data is available and following the structure provided:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?mayorProfession
WHERE {
  ?election dbpedia:Election ;
    dbpedia:year 1999;
    dbpedia:areaServed dbpedia:West_Dunbartonshire_Council .
  ?candidate dbpedia:MayorOf ; 
    dbpedia:term ?mayorTitle ;
    dbpedia:birthPlace ?birthPlace ;
    dbpedia:deathPlace ?deathPlace .
  ?candidate a dbpedia:Person;
    dbpedia:profession ?mayorProfession .
}
```

This query attempts to find the mayor of West Dunbartonshire in 1999 and then extracts their profession. However, this query might need adjustments based on the actual data structure in DBpedia.",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
826,39,train,"Give me the successor of Louis II, Grand Duke of Hesse and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . }",{sparql_query: Cannot be determined due to the nature of the question and the direct lineage relationship without additional context or assumptions.},4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
465,23,train,"Give me the successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v2 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?successor WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Ercole II d'Este, Duke of Ferrara"" .
  ?child dbpedia:child ?grandchild .
  ?grandchild a dbpedia:Person;
    dbpedia:name ?successor
  }
}",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
926,32,train,Give me the father of the father of Abdulaziz and successor of the child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandfather
WHERE {
  ?sultan a dbpedia:Sultan_of_the_Ottoman_Empire;
    dbpedia:son ?child .
  ?child a dbpedia:Person;
    dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:name ""Sultan Abdulhamid I"" .
  ?grandfather a dbpedia:Person;
    dbpedia:parent ?father .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
573,37,train,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and parent of John Quincy Adams.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace dbpedia:Quincy (Massachusetts) .
  ?person ns:parentOf dbpedia:John_Quincy_Admits .
}",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
47,23,train,"Give me the office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:role dbpedia:CommanderInOperation ;
    dbpedia:participatedIn dbpedia:Operation_Green_Hunt .
  ?person foaf:name ?name .
  OPTIONAL { 
    ?person dbpedia:office ?office . 
  }
}
```

This query does the following:
- `PREFIX` declarations for the ontologies.
- Selects individuals (`?person`) who have the role of Commander in Operation Green Hunt and participated in it.
- Optionally selects their office (`?office`).",3,4,4,3,1,3,3,71,0,0,369,0,0.0,0
573,12,train,"Give me the person decedent at Quincy, Massachusetts and parent of John Quincy Adams.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Quincy, Massachusetts"" .
  ?person dbpedia:parentOfJohnQuincyAdams ?johnQuincyParent
}
AND ?johnQuincyParent a dbpedia:Person;
    dbpedia:birthPlace ""Quincy, Massachusetts""",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
987,15,train,"Who is the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Person;
    foaf:name ""Dado Polumenta"" .
  ?band a dbpedia:Band;
    dbpedia:artist ?person .
}",2,5,3,2,1,3,3,71,0,0,2,0,0.0,0
826,37,train,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v0 <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?grandParent .
  ?grandParent a dbpedia:Person;
    rdfs:label ""Louis I of France"" .
  ?person a dbpedia:Royalty;
    dbpedia:child ?child .
  ?child a dbpedia:Person;
    rdfs:label ""Philippe II, Duke of Orléans"" .
  ?child a dbpedia:Royalty;
    dbpedia:succeededBy ?successor .
  ?successor a dbpedia:Person;
    rdfs:label ""Louis Philippe I, Duke of Orléans"" .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
865,33,train,"Give me the native of British Raj and father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?person ?birthPlace
WHERE {
  ?spouse a dbpedia:Person; dbpedia:surname ""Banu"" .
  ?child a dbpedia:Person; dbpedia:parent ?couple .
  ?couple a dbpedia:Family;
    dbpedia:member ?spouse, ?child .
  ?child rdf:type dbpedia:Politician .
  ?person a dbpedia:Person;
    dbpedia:nationality ""British Raj""^^xsd:string;
    dbpedia:birthPlace ?birthPlace .
  ?couple dbpedia:marriedTo ?person .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
987,18,train,Give me the entity in Montenegro and birth place of Dado Polumenta and birth place of Moamer Kasumović.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""Dado Polumenta""@en .
  ?person rdfs:label ""Moamer Kasumović""@en .
  ?birthPlace rdf:type dbpedia:SpatialThing .
  ?deathPlace rdf:type dbpedia:SpatialThing .
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
130,7,train,"Give me the figure known as the film, that is a soccer club and an organisation, of Candice Storey Lee.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?entityLabel
WHERE {
  ?person dbpedia:hasFilmRepresentation ?film .
  ?film a dbpedia:Film ;
         dbpedia:isBasedOnOriginalWork ?work .
  ?person dbpedia:isEntityOf ?organization .
  ?organization a dbpedia:Organization ;
               dbpedia:type ""Sports club"" .
}
AND
{
  ?person rdfs:label ""Candice Storey Lee""@en .
}",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
715,8,train,"Give me the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office WHERE {
  ?person a dbpedia:Person;
    dbpedia:office ?office .
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@es.
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
465,25,train,"Give me the successor of the child, that is a royalty, of Anne of Brittany and spouse of Archduchess Barbara of Austria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childName ?royaltyTitle ?spouseName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Anne of Brittany""@en .
  ?person rdfs:label ""René, Duke of Anjou""@en .
  ?person a dbpedia:Royalty ;
    dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person;
    rdfs:label ""Joan of Naples and Sicily""@en .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
976,34,train,"Give me the office of Naci Bostancı and office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/leader> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office_bostanci ?office_kilicdaroglu
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Naci Bostancı""@en .
  ?party a dbpedia:PoliticalParty ;
            dbpedia:name ""Republican People's Party""@en ;
            dbpedia:leader ?leader .
  ?leader a dbpedia:Person;
    dbpedia:name ""Kemal Kılıçdaroğlu""@en .
  ?party dbpedia:office ?office_bostanci .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
166,10,train,"Give me the territory administered, that is a country, from the reference to Madrid.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?country WHERE {
  ?city dbpedia:locatedIn ?country .
  ?city rdf:first ?madrid .
}
```",2,3,3,2,1,3,2,20,0,0,15,0,0.0,0
865,2,train,Give me the father of Shahla Khatun.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father
WHERE {
  ?wife a dbpedia:Person;
    dbpedia:spouse ?husband .
  ?husband a dbpedia:Person;
    rdfs:label ?husband_label .
  FILTER (regex(str(?husband_label), ""Jahangir"")) .
  ?wife rdfs:label ?wife_label .
  FILTER (str(?wife_label) = ""Shahla Khatun"") .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
98,15,train,Give me the region of the time zone of Lopez Jaena and entity in Philippines.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?timeZoneRegion ?entityInPhilippines
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Negros Occidental, Philippines"" .
  ?person rdfs:label ""Lopez Jaena""@en .
  
  ?philippinesLocation a dbpedia:Location;
    dbpedia:country ""Philippines"" .
  
  ?entityInPhilippines a dbpedia:Thing;
    dbpedia:isPartOf ?philippinesLocation .
  
  ?philippinesLocation rdfs:label ?region .
}
```",3,3,4,2,2,2,3,28,0,0,1743,0,0.0,0
926,36,train,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and father of Mahmud II.",SELECT ?result WHERE { <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?parent a dbpedia:Monarch; dbpedia:name ""Mustafa III"".
  ?child a dbpedia:Person;
    dbpedia:father ?parent .
  ?child a dbpedia:Person;
    dbpedia:offspring ?child_of Mahmud_II .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
839,5,train,"Give me the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Peter Schock""@en .
  ?person rdfs:member ?band .
  ?band a dbpedia:Band .
}",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
417,17,train,"Who is the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin?",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent [ dbpedia:individual dbpedia:Alexandrine_of_Mecklenburg-Schwerin ] ;
    dbpedia:royalty true .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
874,9,train,"Give me the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?v0 <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?writer
WHERE {
  ?musician a dbpedia:Musician;
    dbpedia:name ""Horace Andy"" .
  ?musicAlbum a dbpedia:MusicAlbum;
    dbpedia:lyrics ?lyrics .
  ?lyrics foaf:author ?writer .
}
```",2,5,3,2,1,3,2,20,0,0,29,0,0.0,0
417,0,train,Give me the spouse of Princess Caroline-Mathilde of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?person rdfs:label ""Princess Caroline-Mathilde of Denmark""@en;
    dbpedia:birthPlace ""Denmark"";
    dbpedia:sibling ?sibling .
  ?sibling rdfs:label ?spouse .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
445,3,train,"Who is the resident, that is an athlete, of Great Britain?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbpedia:Athlete;
    dbpedia:birthPlace dbpedia:United_Kingdom .
  ?person rdfs:label ?name .
  FILTER (lang(?name) = ""en"")  # Ensuring the name is in English
}
```",1,2,2,1,1,3,3,71,0,0,6,0,0.0,0
527,9,train,"Give me the movie, that is a work and English and a television show, with the professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/starring> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }",PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?movieTitle WHERE { ?movie a dbpedia:Movie ; dbpedia:language dbpedia:English ; dbpedia:isBasedOnDbpediaResource dbpedia:TelevisionShow . ?movie dbpedia:actor ?actor },2,5,3,2,1,3,2,20,0,0,298,0,0.0,0
329,16,train,"Give me the birthplace of Eric Cross (writer) and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Find Eric Cross (writer)
SELECT ?person WHERE {
  ?person rdfs:label ""Eric Cross""@en .
  ?person a dbpedia:Person .
}

# Step 2: Get the birthplace of Eric Cross
SELECT ?birthPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  FILTER( ?person = ?person_in_step_1 ) .
}

# Step 3: Find Robert Bates (loyalist)
SELECT ?person WHERE {
  ?person rdfs:label ""Robert Bates""@en .
  ?person a dbpedia:Person .
}

# Step 4: Get the birthplace of Robert Bates
SELECT ?birthPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  FILTER( ?person = ?person_in_step_3 ) .
}

# Combine results to find the organization and country associated with Robert Bates' birthplace
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?organization ?country
WHERE {
  ?birthPlace a dbo:Location .
  ?birthPlace rdfs:label ?birthLabel .
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""Robert Bates""@en .
  ?birthPlace rdf:type dbo:Country .
  ?birthPlace dbo:hasOrganization ?organization .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
826,16,train,"Who is the child, that is a royalty, of the reference, that is a royalty, to Louis I?","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . }","Given the complexity of constructing a SPARQL query for such a specific historical relationship without a structured database that includes all European royal lineages, a direct query might not be feasible. However, assuming we have a DBpedia-like dataset with structured information about European royalty and their relationships, a simplified query could look like this:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?child a dbpedia:Person;
    dbpedia:isDescendantOf dbpedia:Louis_I_of_France .
  ?child a dbpedia:Royalty .
}
```

This query looks for a person (`?child`) who is both a descendant of Louis I (`dbpedia:isDescendantOf dbpedia:Louis_I_of_France`) and a royalty (`dbpedia:Royalty`). However, this query simplifies the complex genealogical relationships and assumes direct lineal descent, which may not fully capture the nuances of royal lineage marriages.",2,4,3,2,1,3,3,71,0,0,8,0,0.0,0
124,0,train,Give me the commander in Mahdist War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander
WHERE {
  ?war a dbpedia:Conflict;
    dbpedia:participatingSides [ owl:hasMember ?side1 ] .
  ?side1 a dbpedia:MahdistWar.
  ?war dbpedia:started ""1881"" .
  ?commander a dbpedia:Person;
    dbpedia:leadRole ?war .
}
```",1,1,2,1,1,3,3,71,0,0,15,0,0.0,0
554,5,train,Give me the birth place of The Legendary Tigerman.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Legendary_Tigerman> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person ns:name ""Arthur Ernest Percival"" .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
445,21,train,"Give me the entity in United Kingdom and entity in the residence, that is a country, of Anna Sharkey.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?birthPlace rdfs:label ""Location in the British Raj"" . 
  ?deathPlace rdfs:label ""Location in the British Raj"" .
}
```",3,4,4,2,2,3,3,71,0,0,102,0,0.0,0
507,16,train,"Give me the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?movieTitle
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1919-06-17"" .
  ?movie a dbo:Film; dbo:releaseDate ""1919"";
    dbpedia:mainActor ?person .
}
```",2,4,3,2,1,3,3,71,0,0,11,0,0.0,0
98,1,train,Give me the birth place of Paolo Ballesteros.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""Paolo Ballesteros""@en .
}",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
495,1,train,Give me the father of Princess Charlotte of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Charlotte_of_Württemberg> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?fatherName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Charlotte of Württemberg"" .
  ?person dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person; dbpedia:name ?fatherName .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
839,22,train,"Give me the band of Kevin Russell (musician) and band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName1 ?bandName2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace1 .
  ?person1 rdfs:label ""Kevin Russell""@en .
  ?person2 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace2 .
  ?person2 rdfs:label ""Charlie Huhn""@en .
  ?person1 dbpedia:band ?bandName1 .
  ?person2 dbpedia:band ?bandName2 .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
326,2,train,"Give me the region coded, that is a settlement, as 442/760.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/areaCode> ""442/760"" . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?regionName WHERE {
  ?regionCode dbpedia:hasCode ""442/760"" .
  ?regionCode a dbpedia:AdministrativeDivision .
}
```

This query searches for any entity with the code ""442/760"" that is classified as an `AdministrativeDivision`, which would likely represent the region coded area during the British Raj.",1,2,2,1,1,2,2,9,0,0,168,0,0.0,0
791,39,train,"Give me the father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku and predecessor of Emperor Antoku.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:isRoyalty true;
    dbpedia:officeHolder true .
  ?child dbpedia:hasFather ?father .
  ?parent rdf:type dbpedia:Monarch .
  ?parent dbpedia:name ""Emperor Go-Sanjō"" .
}",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
715,2,train,Give me the leader of Ministry of the Air (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?leader
WHERE {
  ?ministry a dbpedia:Organization;
    dbpedia:type ""Ministry of the Air (Spain)"" .
  ?leader a dbpedia:Person;
    dbpedia:name ""Francisco Franco"" ;
    dbpedia:role ""Leader of the Ministry of the Air"".
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
987,24,train,Give me the entity in Montenegro and birth place of the actor of All for Free.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actorName ?birthPlace ?deathPlace
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:mainActor ?actorName .
  ?actorName a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?actorName a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
965,13,train,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen"";
    dbpedia:birthPlace ""Dacca, Bangladesh"";
    dbpedia:deathPlace ""Dhaka, Bangladesh"";
    dbpedia:occupation ""Politician"";
    dbpedia:parents ?parents .
  ?parents a dbpedia:FamilyRelation;
    dbpedia:type dbpedia:Father .
}",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
507,21,train,"Give me the professional in Film director, television director and spouse of the person born as Anne Voase Coates.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v1 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?role1 ?role2 ?spouse
WHERE {
  ?person a dbpedia:Person;
    rdfs:label ""Anne Voase Coates""@en .
  ?person dbpedia:roleFilmDirector ?role1 .
  ?person dbpedia:roleTelevisionDirector ?role2 .
  ?person wdt:P31 wd:tvo:FamilyRelation wd:Q12298.
  FILTER (lang(?person) = ""en"")  # Ensure results are in English
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
955,14,train,"Give me the band of the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/bandMember> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandMember ?band
WHERE {
  ?bandMember a dbpedia:Musician;
    dbpedia:genre dbpedia:Rock music ;
    dbpedia:group dbpedia:Street Dogs .
  ?bandMember rdfs:label ?bandMemberLabel .
  ?band rdfs:label ?bandLabel .
  ?bandMember ns:memberOf ?band .
  ?band ns:hasMember ?bandMember .
}
```

This SPARQL query does the following:
- Selects musicians (`dbpedia:Musician`) who are members of `Street Dogs` (`dbpedia:Street Dogs`) and whose genre is Rock music.
- It also selects the labels (names) of these band members and the bands they belong to.
- It uses the `ns:memberOf` property to link band members to their respective bands.",3,8,4,3,1,3,2,20,0,0,3,0,0.0,0
892,15,train,Give me the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?v1 <http://dbpedia.org/property/occupation> ?result . }","To find information about Enrico Crolla's profession in the context of ""The Sweeney,"" we would need to query a database that contains information about characters from the series. However, since we are using DBpedia as our source and it primarily contains factual data, we might not find direct information about his fictional role within the show.

A more appropriate approach would be to search for related resources in a dataset that includes TV shows and character descriptions. Unfortunately, DBpedia does not have detailed character profiles from television series like ""The Sweeney."" Therefore, a direct SPARQL query to DBpedia for this specific fictional detail might not yield results.

However, if we were to construct a hypothetical SPARQL query to find more general information about Enrico Crolla in DBpedia, it might look something like this:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?personName ?profession
WHERE {
  ?person a dbpedia:Person;
    rdfs:label ?personName .
  OPTIONAL { ?person dbpedia:occupation ?profession }
}
```

This query would return the label (name) of any person in DBpedia and their occupation if available. However, it's important to note that this won't specifically answer the question about Enrico Crolla's true self as a criminal mastermind in ""The Sweeney"" because such detailed fictional character descriptions are not typically represented in structured databases like DBpedia.",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
826,31,train,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:title ""Louis II, Grand Duke of Hesse"";
    dbpedia:succeededBy ?successor .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
527,4,train,Give me the host of Hyperland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?result . },"Given that ""Hyperland"" is a film, we can use DBpedia to find associated people such as actors or hosts. Assuming the host might be an actor who voiced a character in the film, we can construct a SPARQL query to search for relevant individuals:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:productionCompany ?productionCompany .
  ?actor a dbpedia:Person;
    dbpedia:roleInFilm ?movie ;
    dbpedia:birthPlace ""United Kingdom"" . # Assuming the host is from the UK based on typical film industry
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
158,1,train,Give me the party of Théodore Steeg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Théodore_Steeg> <http://dbpedia.org/ontology/party> ?result . },"Given the reasoning above, the SPARQL query to find this information from DBpedia would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?party
WHERE {
  ?person a dbpedia:Person;
    dbpedia:office ""Prime Minister of Belgium"";
    dbpedia:term_start ""1932"" .
  ?person rdfs:label ?party.
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
47,30,train,Give me the office of Bidesh Ranjan Bose and office of the awardee of Padma Vibhushan and office of Suvendu Adhikari.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office_bidesh_ranjan_bose ?office_padma_vibhushan ?office_suvendu_adhikari
WHERE {
  ?person1 a dbpedia:Person; dbpedia:birthPlace ?birthPlace1 .
  ?person1 dbpedia:office ?office_bidesh_ranjan_bose .
  
  ?person2 a dbpedia:Person; dbpedia:awardee dbpedia:PadmaVibhushan ; dbpedia:office ?office_padma_vibhushan .
  
  ?person3 a dbpedia:Person; dbpedia:name ""Suvendu Adhikari""@en; dbpedia:office ?office_suvendu_adhikari .
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
791,26,train,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?grandchild WHERE {
  ?parent a dbpedia:Person;
    dbpedia:offices ?office .
  ?parent a dbpedia:Person;
    dbpedia:royalty true .
  ?grandchild a dbpedia:Person;
    dbpedia:child ?parent ;
    dbpedia:offices ?office2 .
  ?office rdfs:subPropertyOf dbpedia:offices .
  ?office2 rdfs:subPropertyOf ?office
}
```",3,5,4,3,1,3,3,71,0,0,3,0,0.0,0
5,12,train,Give me the birthplace of Gerald Regan and entity in the award of Coro de la Pontificia Universidad Católica de Puerto Rico.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Gerald_Regan> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX wikidata: <http://www.wikidata.org/ontology/>

SELECT ?birthPlace ?awardEntity
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""Gerald Regan""@en .
  ?award a dbpedia:Award ;
            dbpedia:awardee ?awardEntity .
  ?award rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
933,1,train,Give me the reference to Alan Warner.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person WHERE { 
  ?person rdfs:label ""Alan Warner""@en . 
}",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
917,14,train,Give me the child of the father of Kamehameha IV.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?father a dbpedia:Person;
    dbpedia:name ""Alexander Liholiho""@en;
    dbpedia:title ""Kamehameha IV""@en .
  ?child a dbpedia:Person;
    dbpedia:parent ?father;
    dbpedia:name ?childName .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
18,16,train,"Give me the alumnus of the figure known, that is an educational institution, as Saints and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alumnus ?field
WHERE {
  ?saint a dbpedia:Saint;
    dbpedia:alumniOf ?institution .
  ?institution a dbpedia:EducationalInstitution .
  ?saint dbpedia:hasFieldOfStudy ?field .
}",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
987,31,train,"Give me the birth place of Moamer Kasumović and birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace1 ?bandName
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:name ""Moamer Kasumović""@en .
  ?person1 dbpedia:birthPlace ?birthPlace1 .
  
  ?group a dbpedia:MusicGroup; 
    dbpedia:name ?bandName .
  
  ?artist a dbpedia:Artist;
    dbpedia:associatedBand ?group .
  
  ?group rdfs:label ?bandLabel .
  
  FILTER (lang(?bandLabel) = ""en"")
}
```",4,7,5,3,2,3,3,71,0,0,3,0,0.0,0
839,16,train,"Give me the member of the band, that is a band and a group, of Peter Schorowsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_Schorowsky> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?member
WHERE {
  ?band a dbpedia:Band ;
    dbpedia:hasMember ?member .
  ?person a dbpedia:Person;
    dbpedia:name ""Peter Schockey"" ;
    dbpedia:isMemberOf ?band .
}
```",2,4,3,2,1,3,3,71,0,0,4,0,0.0,0
933,32,train,Give me the reference to the birth name of Alan Warner (musician) and band of the band of Alan Warner (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthName ?band
WHERE {
  ?person a dbpedia:Person;
    rdfs:label ?name .
  ?person rdf:type dbpedia:Musician .
  ?person dbpedia:birthName ?birthName .
  ?band a dbpedia:Band;
    dbpedia:members ?person .
}",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
933,35,train,"Give me the band of the band of Alan Warner (musician) and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName ?organization
WHERE {
  ?person a dbpedia:Person;
    dbpedia:givenName ""Alan"";
    dbpedia:role dbpedia:Musician .
  ?person dbpedia:associatedBand ?bandName .
  ?bandName a dbpedia:MusicGroup .
  OPTIONAL { ?bandName rdfs:seeAlso ?organization . }
}
```",4,7,5,2,2,3,3,71,0,0,4,0,0.0,0
459,14,train,"Give me the governor of Oklahoma and governor of the administration, that is a politician, of Brad Henry.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor_name WHERE {
  ?governor a dbpedia:Politician;
    dbpedia:office ""Governor of Oklahoma"" ;
    dbpedia:term_start ""2003-01-10"" ;
    dbpedia:term_end ""2011-01-10"" .
  FILTER (lang(?governor_name) = ""en"")  # Ensure results are in English
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
281,3,train,"Give me the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?war
WHERE {
  ?person a dbpedia:Person;
    dbpedia:conflict ?war .
  ?person ns:serviceNumber ""03006151"" . 
  ?person rdfs:label ""Roy Bormann""@de .
}",1,3,2,1,1,2,3,28,0,0,20,0,0.0,0
274,10,train,Give me the professional in the designer of Tetris Classic.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?designer
WHERE {
  ?game a dbpedia:VideoGame;
    dbpedia:developer ?developer .
  ?developer rdfs:label ?name .
  ?name ns:prefLabel ""Tetris Classic"" .
  ?designer a dbpedia:Person;
    dbpedia:involvement ?game ;
    dbpedia:role ""Designer"" .
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
839,30,train,"Give me the band of Peter Schorowsky and band of Kevin Russell (musician) and band of the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },{sparql_query},4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
926,35,train,"Give me the father of the father of Abdulaziz and child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?grandfather ?uncle
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:son ?son .
  ?son a dbpedia:Person;
    dbpedia:child ?royaltyChild .
  ?royaltyChild a dbpedia:Royalty .
  ?person rdfs:label ""Mustafa III"" .
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
773,23,train,Give me the spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?fatherSpouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Person; 
    dbpedia:name ""Bernard (son of Charles the Fat)"" .
  ?parent a dbpedia:Person;
    dbpedia:child ?grandchild .
  ?grandchild a dbpedia:Person;
    dbpedia:name ""Charles the Fat"" .
  ?parent dbpedia:siblingOf ?sibling .
  ?sibling a dbpedia:Person; 
    dbpedia:name ?fatherName .
  ?father a dbpedia:Person;
    dbpedia:spouse ?fatherSpouse .
}",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
791,10,train,Give me the father of Emperor Go-Toba and spouse of Taira no Tokuko.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father ?spouse
WHERE {
  ?emperor a dbpedia:Person;
    dbpedia:birthFather ?father .
  ?emperor a dbpedia:Person;
    dbpedia:wife ?spouse .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
926,26,train,Give me the successor of the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v0 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?spouse a dbpedia:Person; dbpedia:name ""Sultan Abdul Hamid II"".
  ?child a dbpedia:Person; dbpedia:parent ?spouse.
  ?child a dbpedia:Person; dbpedia:birthDate ""1876-10-02""^^<http://www.w3.org/2001/XMLSchema#date>.
  ?successor a dbpedia:Person; dbpedia:name ""Yusuf Izzet Paşa"".
  ?successor a dbpedia:Person; dbpedia:parent ?child.
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
978,13,train,"Give me the band member of the professional, that is a musical artist and an artist, in the award of Michel Claparède.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/occupation> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandMember
WHERE {
  ?award dbpedia:hasWinner ?bandMember .
  ?bandMember a dbpedia:Musician; dbpedia:Artist .
}",3,5,4,3,1,3,2,20,0,0,9007,0,0.0,0
36,15,train,"Give me the person born as Ayo Makun and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?actorName ?filmTitle
WHERE {
  ?actor dbpedia:hasFilmRole dbpedia:ActorIn ?film .
  ?film dbpedia:star ?actorName .
  ?film rdfs:label ?filmTitle .
  FILTER (STRSTARTS(?filmTitle, ""Lepacious Bose"")) .
  ?actor a dbpedia:Person;
    dbpedia:name ""Ayo Makun"" .
}",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
917,18,train,Give me the child of Kekūanāoʻa and child of Kekūanāoʻa and parent of Albert Kamehameha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:parentOf ?child .
  ?parent dbpedia:birthParentOf dbpedia:Kekūanāoʻa .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
926,12,train,Give me the successor of Mustafa III and child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor ?child_of_ahmed
WHERE {
  ?person a dbpedia:Person;
    dbpedia:monarchOf dbpedia:Ottoman_Empire ;
    dbpedia:title ""Sultan"" ;
    dbpedia:firstName ""Ahmed III"" .
  ?child_of_ahmed a dbpedia:Person;
    dbpedia:parent ?father .
  ?successor a dbpedia:Person;
    dbpedia:monarchOf dbpedia:Ottoman_Empire ;
    dbpedia:title ""Sultan"" ;
    dbpedia:firstName ""Mustafa III"" .
  ?child_of_ahmed dbpedia:child ?successor .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
417,28,train,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent1 .
  ?parent1 a dbpedia:Person;
    dbpedia:name ""Christian X of Denmark"" .
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent2 .
  ?parent2 a dbpedia:Person;
    dbpedia:name ""Alexandrine of Mecklenburg-Schwerin"" .
  ?child a dbpedia:Person;
    dbpedia:hasSpouse ?spouse .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
978,12,train,Give me the band member of the person born as Nicholas Bracegirdle and band member of Enya.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Enya> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Nicholas Bracegirdle""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandMember WHERE {
  ?person dbpedia:name ""Nicholas Bracegirdle"" .
  ?person a dbpedia:Person;
    dbpedia:bandMember ?bandMember .
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
935,7,train,Give me the death place of the awardee of Sitara-i-Imtiaz.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awarded dbpedia:Sitara_i_Imtiaz ;
    dbpedia:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?name .
  FILTER (regex(str(?name), ""AK Abdul Momen"")) .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}
```",2,2,3,2,1,3,2,20,0,0,18,0,0.0,0
216,3,train,Give me the mayor of Ros Bates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?mayor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Ros Bates""@en;
    dbpedia:office ?office .
  ?office a dbpedia:Office; 
    rdfs:label ?office_label .
  FILTER (regex(str(?office_label), 'Mayor')) .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
83,4,train,Give me the player in Greg Boehme and player in Albert Edward (soccer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Greg_Boehme> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Albert_Edward_(soccer)> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?playerName ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  OPTIONAL { ?person dbpedia:playFor dbpedia:Club_A (timePeriod ""2000-2023"") }
  OPTIONAL { ?person dbpedia:playFor dbpedia:Club_B (timePeriod ""2000-2023"") }
  # Adjust Club_A and Club_B to actual clubs associated with Greg Boehme
  # Adjust timePeriod as needed for accurate results
}",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
987,11,train,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person rdf:type dbpedia:Person;
    dbpedia:name ""Šako Polumenta""@en .
  ?person a dbpedia:Artist .
  ?person a dbpedia:MusicalArtist .
  ?person dbpedia:birthPlace ?birthPlace .
}
```",2,4,3,2,1,3,3,71,0,0,6,0,0.0,0
158,3,train,"Give me the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"To retrieve this information from DBpedia, we can use the following SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?award WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedWith ?award .
  ?award rdfs:label ?awardLabel .
  FILTER (lang(?awardLabel) = ""en"")  # Filter results to English language
}
```

This query searches for awards given to Adelbert Cronkhite (`?person`) and selects the label of those awards in English.",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
274,4,train,Give me the designer of Tetris Classic.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tetris_Classic> <http://dbpedia.org/property/designer> ?result . },"The SPARQL query to retrieve this information from DBpedia would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?designer
WHERE {
  ?game a dbpedia:Game;
    dbpedia:developer ?designer .
  ?game label ""Tetris Classic"" .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
445,25,train,Give me the entity in the award of George H. Cameron and death place of Patrick Moore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardName ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedWith ?award .
  ?award rdfs:label ?awardName .
  
  ?person2 a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person2 foaf:name ""Patrick Moore"" .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
158,11,train,"Give me the entity in the award, that is a country, of Adelbert Cronkhite and party of Théodore Steeg.",SELECT ?result WHERE { <http://dbpedia.org/resource/Théodore_Steeg> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . },"SELECT ?party ?country
WHERE {
  ?person a dbpedia:Person;
    dbpedia:memberOf ?party .
  ?party rdfs:label ?partyLabel .
  ?party dbpedia:country ?country .
}",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
456,10,train,Give me the band of Alan Doyle and spouse of Danielle Spencer (Australian actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName ?spouseName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Alan Doyle""@en .
  ?person a dbpedia:Person;
    dbpedia:marriagePartner ?spouseName .
  OPTIONAL { ?spouseName a dbpedia:Person; dbpedia:name ""Hugh Jackman""@en }
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
124,13,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war ?militaryForce
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Frank Rhodes"" .
  ?person dbpedia:serveInMilitaryUnit ?militaryUnit .
  ?militaryUnit a dbpedia:MilitaryUnit ;
    dbpedia:conflict ?war .
}
```",2,5,3,2,1,3,3,71,0,0,1091,0,0.0,0
216,30,train,"Give me the player in Mario Ivanković and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in Igor Bišćan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Find players associated with Mario Ivanković
SELECT ?player WHERE {
  ?player a dbpedia:SportPerson;
    dbpedia:associatedAthlete Mario_Ivankovic .
}

# Find players born on 1983-12-20 who are also sports managers, soccer managers, and soccer players
SELECT ?birthDate ?player WHERE {
  ?player a dbpedia:SportPerson;
    dbpedia:birthDate ?birthDate .
  ?player dbpedia:pseudonym ?playerName .
  ?player rdfs:label ?playerLabel .
  FILTER (lang(?playerLabel) = ""en"")  # Assuming we are looking for English labels
  ?player a dbpedia:SoccerPlayer;
    dbpedia:sportManager ?sportManagerRole .
  ?player a dbpedia:SoccerManager .
}

# Find the team of Igor Bišćan
SELECT ?team WHERE {
  ?player a dbpedia:FootballPlayer;
    dbpedia:club ?team .
  ?player rdfs:label ""Igor Bišćan""@en .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
365,4,train,Give me the reference to Полтавская губерния.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Полтавская губерния""@en . }","The SPARQL query to retrieve information about Полтавская губерния from DBpedia would involve querying for entities that are classified as regions or similar types. Here's how the query could be structured:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?name ?description
WHERE {
  ?g governs ?region .
  ?region a dbpedia:Region ;
            rdfs:label ?name .
  ?g rdfs:label ?description .
  FILTER (lang(?name) = ""ru"" || lang(?name) = ""uk"")  # Search for Russian or Ukrainian language labels
}
```

This query looks for regions governed by a governor (`?g`) and retrieves their names (`?name`) and descriptions (`?description`), filtering for labels in Russian or Ukrainian to match the likely language of historical region names.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
987,19,train,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:artist ?artist .
  ?person a dbpedia:Person;
    dbpedia:musicalArtist ?musicalArtist .
  ?person rdf:type owl:Thing .
  ?artist rdf:type owl:Thing .
  ?musicalArtist rdf:type owl:Thing .
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
433,6,train,"Give me the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?musicalArtist WHERE {
  ?person a dbpedia:Person;
    dbpedia:givenName ""Scott"";
    dbpedia:role dbpedia:Musician .
  ?person a dbpedia:Artist .
  OPTIONAL { ?person rdfs:label ?label }
  FILTER (regex(str(?label), ""LaFaro""))
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
200,2,train,Give me the name of Angelcorpse.,SELECT ?result WHERE { <http://dbpedia.org/resource/Angelcorpse> <http://xmlns.com/foaf/0.1/name> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName ?birthPlace ?deathPlace
WHERE {
  ?band a dbpedia:MusicBand;
    rdfs:label ?bandName .
  ?band dbpedia:origin ?origin .
  ?origin a dbpedia:CityArea ;
             dbpedia:country ""United States"" ;
             dbpedia:adminDiv ""Florida"" ;
             dbpedia:isPartOf <http://dbpedia.org/ontology/State> .
}",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
926,6,train,Give me the child of Ahmed III.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?parent dbpedia:name ""Ahmed III"" .
}",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
987,0,train,Give me the birth place of Dado Polumenta.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""Dado Polumenta""@en .
}",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
442,3,train,Give me the actor of This Side of Heaven.,SELECT ?result WHERE { <http://dbpedia.org/resource/This_Side_of_Heaven> <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?actor
WHERE {
  ?film a dbpedia:Film;
    dbpedia:mainActor ?actor .
  FILTER (lang(?film) = ""en"")  # Ensure the language is English
}",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
236,1,train,Give me the party member of Democratic-Republican Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic-Republican_Party> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:politicalParty dbpedia:Democratic_Republican_Party .
}",1,1,2,1,1,3,2,20,0,0,590,0,0.0,0
978,11,train,"Give me the band member of the professional, that is a musical artist and an artist, in  and band member of Chicane (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chicane_(musician)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandMember
WHERE {
  ?band dbpedia:hasBandMember ?bandMember .
  ?bandMember a dbpedia:Artist ;
            dbpedia:isMusicalArtist true ;
            dbpedia:isMusician true .
  ?band rdfs:label ""Chicane""@en .
}",3,5,4,2,2,3,2,20,0,0,2,0,0.0,0
267,9,train,"Give me the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?managerName ?club
WHERE {
  ?season dbpedia:sportSeason ;
    dbpedia:seasonYear 2020;
    dbpedia:sport dbpedia:Soccer ;
    dbpedia:managedBy ?managerName .
  ?managerName a dbpedia:Person ;
    dbpedia:name ?managerName ;
    dbpedia:role ""Manager"" .
  ?club a dbpedia:SoccerClub ;
    dbpedia:hasManager ?managerName .
}
```",2,3,3,2,1,3,2,20,0,0,31,0,0.0,0
987,29,train,Give me the birth place of Dado Polumenta and entity in Montenegro and birth place of the actor of All for Free.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?actorName ?birthPlace
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:mainActor ?actorName .
  ?actorName a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  FILTER (lang(?birthPlace) = ""montenegro"" )  # Find birth place in Montenegro
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
417,23,train,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?royalParentSpouse
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Monarch; # Assuming Monarch is the class for royalty in DBpedia
    dbpedia:hasChild ?child .
  ?parent rdfs:label ""Queen Margrethe II"" . # Using label to identify the specific parent as Knud's mother
  ?royalParentSpouse a dbpedia:Person;
    dbpedia:spouse ?royalParent .
}",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
582,9,train,Give me the player in Kazuaki Nagasawa and reference to Japan.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?player ?country
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Kazuaki Nagasawa"" .
  ?person dbpedia:birthPlace ?country .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
826,32,train,"Give me the successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?grandParent .
  ?child a dbpedia:Royalty; 
    dbpedia:spouse ?spouse .
  ?grandParent a dbpedia:Person;
    dbpedia:title ""Louis I, Grand Duke of Hesse and by Rhine"" .
  ?child ns:childOf ?grandParent .
  ?successor a dbpedia:Person;
    dbpedia:parent ?child .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
606,10,train,"Who is the alumnus of the figure known, that is a university and a sports league and an educational institution, as Penn Quakers?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>. ?v0 <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Penn_Quakers> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?alumnus
WHERE {
  ?university a dbpedia:University ;
    dbpedia:name ""University of Pennsylvania""@en .
  ?person a dbpedia:AlumnusOf ;
    dbpedia:alumniOf ?university .
}",2,5,3,2,1,3,2,20,0,0,1114,0,0.0,0
978,14,train,Give me the band member of the person born as the name of Chicane (musician).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName ?bandMembers
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Chicane""@en .
  ?person dbpedia:birthName ?birthName .
  ?bandMember a dbpedia:MusicianBandMember ;
    dbpedia:band ?band .
  ?band a dbpedia:MusicBand .
  ?bandMember dbpedia:firstName ?birthName .
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
527,5,train,"Give me the work, that is a work and a book, of Tom Baker.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?workLabel ?workType
WHERE {
  ?work a dbpedia:Work;
    dbpedia:type ?workType .
  ?work dbpedia:author ""Tom Baker"" .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
987,9,train,Give me the birth place of Dado Polumenta and birth place of Moamer Kasumović.,SELECT ?result WHERE { <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    foaf:name ""Dado Polumenta""@en .
  ?person a dbpedia:Person;
    foaf:name ""Moamer Kasumović""@en .
}",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
341,6,train,"Give me the writer of the work, that is a work and an album, of Serrano.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> ""Serrano""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?writer
WHERE {
  ?work a dbpedia:Work;
    dbpedia:title ""Serrano"" .
  ?album a dbpedia:Album;
    dbpedia:title ""Serrano"" .
  ?work ns:creator ?writer .
  ?album ns:creator ?writer .
}
```",2,4,3,2,1,2,2,9,0,0,283,0,0.0,0
892,17,train,"Give me the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?partyName ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Andrea Cozzolino""@it;
    dbpedia:politicalParty ?party .
  ?party a dbpedia:PoliticalParty ;
    dbpedia:name ?partyName ;
    dbpedia:headquarter ?headquarterLocation .
  OPTIONAL { ?party rdfs:label ?birthPlace }
  OPTIONAL { ?party rdfs:label ?deathPlace }
}
```",2,8,3,2,1,3,3,71,0,0,14,0,0.0,0
41,14,train,Give me the party of the person born as David Declan Costello and party of Mark Durkan.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?personName ?party
WHERE {
  ?person dbpedia:name ""David Declan Costello"" .
  ?person dbpedia:politicalPartyMemberOf ?party .
  
  ?person dbpedia:name ""Mark Durkan"" .
  ?person dbpedia:politicalPartyMemberOf ?party .
}",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
715,3,train,Who is the native of Morocco?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  AND ?birthPlace ns:country ""Morocco"" .
  AND ?person rdfs:label ""AK Abdul Momen""@en .
}
```",1,1,2,1,1,3,3,71,0,0,868,0,0.0,0
18,9,train,"Give me the parent of Liza Huber and alumnus of Marymount College, Tarrytown.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parentName WHERE {
  ?alumnus a dbpedia:Person;
    dbpedia:graduateFrom dbpedia:Marymount_College_Tarrytown ;
    dbpedia:birthDate ?birthdate .
  ?alumnus rdfs:label ""Liza Huber""@en .
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?alumnus .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
554,9,train,Give me the administration of the party member of Independent politician.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?role WHERE {
  ?politician a dbpedia:Person;
    dbpedia:politicalParty ""independent"";
    dbpedia:officeHolder ?role .
}
```",2,2,3,2,1,3,2,20,0,0,905,0,0.0,0
507,35,train,Give me the professional in the profession of Guy Ferland and spouse of the person born as Anne Voase Coates.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?guyFerlandProfession ?anneVoaseCoatesSpouse
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:name ""Anne Voase Coates""@en .
  ?person2 a dbpedia:Person;
    rdfs:label ?guyFerlandProfession .
  ?person1 dbpedia:spouse ?anneVoaseCoatesSpouse .
  ?person2 foaf:isPrimaryTopicOf ?person1 .
}",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
606,13,train,"Give me the figure known as the nickname of the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ""Barb City""@en . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","The SPARQL query will involve looking up settlements with the name ""Barb City"" and then identifying their official names (nicknames are often colloquial or informal). Here's how we can structure the query:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?nickname ?officialName
WHERE {
  ?settlement dbo:name ""Barb City"" .
  ?settlement rdf:type dbo:Settlement .
  ?settlement dbo:nickname ?nickname .
  ?settlement dbo:officialName ?officialName .
}
```",3,4,4,3,1,3,2,20,0,0,1,0,0.0,0
192,14,train,Give me the child of the child of the parent of Anna of Hungary (Byzantine empress).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchild ?greatGrandParent
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:parent ?greatGrandParent .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?grandchild a dbpedia:Person;
    dbpedia:parent ?child .
}
```

This query starts from a `Person` node representing Anna of Hungary's great-grandparent (`?greatGrandParent`), finds her parent (`?parent`), then identifies her children (`?child`), and finally traces the grandchildren (`?grandchild`) of that child.",3,3,4,3,1,3,2,20,0,0,7,0,0.0,0
417,36,train,"Give me the spouse of Princess Caroline-Mathilde of Denmark and child of the child, that is a royalty, of the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouseName ?childName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent dbpedia:Alexandrine_of_Mecklenburg-Schwerin .
  ?person dbpedia:mother dbpedia:Alexandrine_of_Mecklenburg-Schwerin .
  ?person a dbpedia:Royalty ;
    dbpedia:sibling [ dbpedia:parent ?royaltyParent ] .
  ?royaltyParent a dbpedia:Person;
    dbpedia:title ""Royal title"" .
  ?person dbpedia:spouse ?spouseName .
  ?child a dbpedia:Person;
    dbpedia:parent ?person ;
    dbpedia:role dbpedia:Child_of
  .
  FILTER (xsd:string(?childName) > ""Alexandrine of Mecklenburg-Schwerin"")
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
93,2,train,Give me the headquarter of Clam Cove Pictograph Site.,SELECT ?result WHERE { <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?headquarter
WHERE {
  ?site a dbpedia:ArchaeologicalSite;
    dbpedia:location ?birthPlace .
  ?site dbpedia:hasHeadquarter ?headquarter .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
465,26,train,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?royalChildSpouse
WHERE {
  ?royalChild a dbpedia:Person;
    dbpedia:parent ?elizabeth .
  ?elizabeth a dbpedia:Person; # Assuming Elizabeth of Austria is represented in DBpedia with this identifier
    rdfs:label ""Elizabeth of Austria (1526–1545)"" .
  ?royalChild rdf:type dbpedia:Royalty . # Hypothetical type indicating royalty
  ?royalChild rdfs:child ?childOfRoyalty .
  ?childOfRoyalty a dbpedia:Person;
    dbpedia:parent ?royalChild .
  ?royalChildSpouse a dbpedia:Person; # The spouse of the royal child
    dbpedia:spouseOf ?royalChild .
}",3,4,4,3,1,3,3,71,0,0,7,0,0.0,0
456,20,train,Give me the spouse of Danielle Spencer (Australian actress) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Danielle Spencer""@en .
  ?person dbpedia:spouse ?spouse .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
274,15,train,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie and associated musical artist of Cecil Taylor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandMember1 ?bandMember2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:name ""John Birks Gillespie""@en;
    dbpedia:birthDate ""1917-10-21"" .
  ?person1 dbpedia:genre ""Jazz"" .

  ?person2 a dbpedia:Person;
    dbpedia:name ""Cecil Taylor""@en;
    dbpedia:birthDate ""1929-03-25"" .
  ?person2 dbpedia:genre ""Jazz"" .

  ?person1 dbpedia:bandMember ?bandMember1 .
  ?bandMember1 a dbpedia:Musician .

  ?person2 dbpedia:bandMember ?bandMember2 .
  ?bandMember2 a dbpedia:Musician .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
456,0,train,Give me the spouse of Danielle Spencer (Australian actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Danielle Spencer"";
    dbpedia:spouse ?spouse .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
933,2,train,Give me the band of The Ramong Sound.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName ?bandMembers ?bandDetails
WHERE {
  ?band dbpedia:hasBandMember ?bandMember .
  ?bandMember a dbpedia:Musician;
    dbpedia:name ""AK Abdul Momen"" .
  ?band rdfs:label ?bandName .
  OPTIONAL { ?band dbpedia:genre ""Rock music"" . }
  OPTIONAL { ?band dbpedia:activeYears ""1966"" . }
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
36,17,train,Give me the person born as Ayo Makun and person born in the birth year of Deanne Bray.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ?birthYear .
  FILTER (STR(?birthYear) = ""1990"")  # Assuming Deanne Bray was born in 1990
  ?person rdfs:label ""Ayo Makun"" .
}",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
417,37,train,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and child of Alexandrine of Mecklenburg-Schwerin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:father ?father .
  ?parent a dbpedia:Person;
    dbpedia:mother ?mother .
  ?father a dbpedia:Monarch;
    dbpedia:monarchy dbpedia:Denmark .
  ?mother a dbpedia:Person;
    dbpedia:birthPlace ""Greenland"" .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
}",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
976,18,train,Give me the office of Naci Bostancı and office of Meral Akşener and office of Mustafa Şentop.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?officeName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:office ?office .
  OPTIONAL { ?office rdfs:label ?officeName }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
216,33,train,"Give me the player in Igor Bišćan and player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?player ?coach
WHERE {
  ?player a dbpedia:SoccerPlayer;
    dbpedia:clubMemberOf ?soccerClub .
  ?soccerClub rdfs:label ""Džemal Berberović's soccer club"" . # Placeholder for actual club name
  ?coach a dbpedia:SportsManager;
    dbpedia:role ?coachRole .
  ?soccerClub dbpedia:hasCoach ?coach .
}",4,10,5,3,2,3,3,71,0,0,3,0,0.0,0
5,2,train,Give me the award of Renata Adler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?award
WHERE {
  ?person dbpedia:awardedWith ?award .
  ?person rdfs:label ""Renata Adler"" .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
443,13,train,Give me the birthplace of Ulf Lundell and landmark at elevation of the award of William Shepherd.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . },"Given that DBpedia provides structured data about people, awards, and landmarks, we can construct a SPARQL query to extract this information. However, since specific details about Ulf Lundell's birthplace and William Shepherd's award are not directly linked in DBpedia with explicit properties, we will make logical assumptions based on typical data structures:

1. For Ulf Lundell's birthplace, we assume there is a property linking people to their birthplaces.
2. For William Shepherd's award, we need to identify the award first and then find the associated landmark.

Here's a general approach for the SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for Ulf Lundell's birthplace
SELECT ?birthPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Ulf Lundell""@en;
    dbpedia:birthPlace ?birthPlace .
}

# Query for William Shepherd's award and associated landmark
PREFIX award: <http://dbpedia.org/ontology/Award>
PREFIX location: <http://dbpedia.org/ontology/Location>

SELECT ?awardName ?landmarkElevation WHERE {
  ?award a award:Award;
    award:name ?awardName .
  ?award recipient dbpedia:Person;
    dbpedia:name ""William S. Shepherd""@en .
  ?award location:hasElevation ?elevation .
  ?landmark a location:Landmark;
    location:height ?elevation .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
122,2,train,Who is the band of Gift of Gab (rapper)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Richmond, California"";
    dbpedia:genre ""Hip hop"";
    dbpedia:associatedBand ?band .
}",1,1,2,1,1,2,2,9,0,0,4,0,0.0,0
212,6,train,Give me the birthplace of the professional in .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",2,2,3,2,1,2,2,9,11148,89832,2198,0.11039809863339275,0.8353064588640792,0.19502125500760983
965,24,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent WHERE {
  ?child1 a dbpedia:Person; dbpedia:birthPlace ?birthPlace1 .
  ?child2 a dbpedia:Person; dbpedia:birthPlace ?birthPlace2 .
  ?parent dbpedia:parentOf ?child1 .
  ?parent dbpedia:parentOf ?child2 .
  ?parent rdfs:label ?parentLabel .
  FILTER (regex(?parentLabel, ""Mountbatten"")).
}",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
5,11,train,"Give me the birthplace of the person born, that is a politician, as  and entity in Canada.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> """"@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:P31 dbpedia:Politician .
  ?person dbpedia:birthPlace ?birthPlace .
}",3,4,4,2,2,3,2,20,0,0,2,0,0.0,0
459,8,train,"Give me the governor of the death place, that is a settlement, of Cliff Roquemore.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

# Assuming Cliff Roquemore lived during the British Raj period (1858-1947)
# We need to find his birth and death places first

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  
  # Narrow down the time frame to British Raj period
  ?person rdfs:label ""Cliff Roquemore""@en; 
    dbo:period_start ""1858-08-01""^^xsd:date; 
    dbo:period_end ""1947-08-15""^^xsd:date .
}

# Once we have the birth and death places, find the governor of the region during that period
PREFIX dbpov: <http://dbpedia.org/ontology/>

SELECT ?governor
WHERE {
  ?region a dbpedia:Region;
    dbpedia:hasCapital ?capital .
  ?capital a dbo:HistoricalCapital ;
    dbpov:hasGovernor ?governor .
  
  # Assuming Roquemore's death place is in a region with known governors during the British Raj
  ?deathPlace a dbo:Location;
    dbpedia:name ""Death Place of Cliff Roquemore""@en .
  
  ?region rdfs:label ""Region where Roquemore died""@en; 
    dbo:historicalPeriod ""British Raj""^^xsd:string .
}",2,3,3,2,1,2,3,28,0,0,2,0,0.0,0
232,0,train,Give me the artistic movement of Ella Cheever Thayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ella_Cheever_Thayer> <http://dbpedia.org/ontology/movement> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?artisticMovement
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate [ strdt:yearRange ""1854"" ""1901""] .
  ?person dbpedia:genre ""Literature"" .
  ?person rdfs:label ""Ella Cheever Thayer""@en .
  ?person dbo:nationality ""United States of America"" .
  ?artisticMovement a dbpedia:ArtisticMovement;
    dbpedia:startedInYear ?year .
  FILTER (?year >= 1837) .
}",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
98,14,train,Give me the region of Philippine Standard Time and birth place of the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Paolo Elito M. Ballesteros IV"" .
  ?person dbpedia:birthPlace ?birthPlace .
}",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
456,3,train,"Give me the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?title WHERE {
  ?role a rdf:Property;
    rdfs:label ""role"" .
  ?person rdf:type dbpedia:Person;
    dbpedia:birthPlace ""Ross Newton"";
    ?role ?title .
  OPTIONAL { 
    ?movie a dbpedia:Film; 
      dbpedia:actor ?person.
    ?tv_show a dbpedia:TelevisionSeries; 
      dbpedia:actor ?person.
  }
}",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
274,9,train,Give me the associated musical artist of Cecil Taylor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?musicalArtist ?professionalRole
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1929-03-25""^^xsd:date ;
    dbpedia:deathDate ""2018-07-13""^^xsd:date ;
    dbpedia:genre ""Jazz"" .
  ?person rdfs:label ""Cecil Taylor""@en .
  ?person a dbpedia:Artist .
  ?person rdfs:label ?musicalArtist .
  ?person a dbpedia:MusicianRole;
    rdfs:label ?professionalRole .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
645,32,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"Given the context and the need to extract information about the military force from DBpedia related to Francisco Largo Caballero and Carlos Asensio Cabanillas in the context of the Spanish Civil War, the SPARQL query would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?militaryForce
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:nationality ""Spanish"";
    dbpedia:conflict ""Spanish_Civil_War"" .
  ?person2 a dbpedia:Person;
    rdfs:label ""Carlos Asensio Cabanillas""@es;
    dbpedia:commander ?person1 .
  ?person3 a dbpedia:Person;
    rdfs:label ""Francisco Largo Caballero""@es;
    dbpedia:role ""Prime_Minister_of_Spain"" .
}
```

This query looks for individuals associated with the Spanish Civil War, specifically identifying those who were commanders and their respective leaders (in this case, Francisco Largo Caballero), to infer the military force involved.",4,7,5,2,2,3,3,71,0,0,23,0,0.0,0
18,13,train,Give me the professional in the award of Ana María Sánchez de Ríos and parent of Liza Huber.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?professional ?parent WHERE {
  ?person1 a dbpedia:Person; dbpedia:birthPlace ""Ana María Sánchez de Ríos"" .
  ?person2 a dbpedia:Person; dbpedia:child ""Liza Huber"" .
  ?person1 dbpedia:spouse ?person2 .
  FILTER (NOT EXISTS { ?child a dbpedia:Person; dbpedia:parent ?person2 })  # Ensure Liza Huber is not a child of the spouse
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
93,0,train,Give me the capital of Alaska.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alaska> <http://dbpedia.org/ontology/capital> ?result . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?capital
WHERE {
  ?state dbo:capital ?capital .
  ?state rdfs:label ""Alaska""@en .
}",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
442,2,train,"Give me the work of Roosevelt, Theodore.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Roosevelt, Theodore""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?work
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolder ""President of the United States"";
    dbpedia:term ?work .
  ?person rdf:type dbpedia:U.S._President .
  ?person rdfs:label ""Theodore Roosevelt"" .
}",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
579,3,train,"Give me the residence, that is English and a settlement, of Alan Clyne.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?residence
WHERE {
  ?player a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?player dbpedia:playFor dbpedia:East Bengal F.C. .
  ?birthPlace geo:spatialRelation [ dbpedia:locatedIn dbpedia:West_Bengal ] .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
839,35,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the band, that is a musical artist, of Charlie Huhn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?artist a dbpedia:Artist;
    dbpedia:memberOf ?band .
  ?band rdfs:label ?bandName .
}
```

This query will return the label (name) of the band for each artist.

To get both Kevin Richard Russell's band and Charlie Huhn's band, we need to run two separate queries:

For Kevin Richard Russell:
```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName WHERE {
  ?artist a dbpedia:Artist;
    dbpedia:memberOf ?band .
  ?band rdfs:label ?bandName .
  ?artist dbpedia:name ""Kevin Richard Russell"" .
}
```

For Charlie Huhn:
```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName WHERE {
  ?artist a dbpedia:Artist;
    dbpedia:memberOf ?band .
  ?band rdfs:label ?bandName .
  ?artist dbpedia:name ""Charlie Huhn"" .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
124,39,train,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24 and military force of Battle of Tamai.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?personName ?militaryForce
WHERE {
  ?person dbpedia:birthDate ""1850-06-24"" .
  ?person a dbpedia:Person; dbpedia:participatedInMilitaryConflict dbpedia:Battle_of_Tamai .
  ?person dbpedia:militaryForce ?militaryForce .
}
```

This SPARQL query will:
1. Filter for individuals born on June 24, 1850.
2. Check if they participated in the Battle of Tamai.
3. Retrieve the military force they were part of.",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
216,16,train,Give me the administration of the designer of Woolfe: The Red Hood Diaries and office of Tim Nicholls.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Woolfe:_The_Red_Hood_Diaries> <http://dbpedia.org/property/designer> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?administration ?office
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Tim Nicholls""@en .
  ?person dbpedia:role ""designer of Woolfe: The Red Hood Diaries"" .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
}",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
579,0,train,Give me the native of Edinburgh.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",1,1,2,1,1,3,2,20,0,100980,1711,0.0,0.0,0
465,28,train,Give me the successor of the child of Alfonso I d'Este and spouse of Archduchess Barbara of Austria and successor of Renée of France.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Alfonso I d'Este"" ;
    dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:name ""Archduchess Barbara of Austria"" .
  ?child dbpedia:hasChild ?grandchild .
  ?grandchild a dbpedia:Person;
    dbpedia:name ""Alfonso II d'Este"" .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
791,14,train,"Give me the father of the child, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://dbpedia.org/property/father> ?result . },"Given the constraints and the structure of DBpedia, we can construct a SPARQL query to find relevant information:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childFather WHERE {
  ?emperor a dbpedia:Person;
    dbpedia:birthDate ""1192"";
    dbpedia:deathDate ""1239"";
    dbpedia:title ""Emperor of Japan (Kamakura Shogunate)"";
    dbpedia:father ?father .
  ?childFather a dbpedia:Person;
    dbpedia:royalty true;
    dbpedia:child ?emperor .
}
```

This query looks for individuals (`?childFather`) who are marked as royalty (`dbpedia:royalty true`) and have Emperor Takakura (`?emperor`) as their child.",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
826,26,train,"Give me the successor of the child, that is a royalty, of the reference, that is a royalty, to Louis I.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Louis I""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?Louis_I .
  ?child a dbpedia:Monarch .
  FILTER (NOT EXISTS { ?grandchild a dbpedia:Person; dbpedia:parent ?child }) 
}
```",3,5,4,3,1,3,3,71,0,0,4,0,0.0,0
267,13,train,"Give me the coach of the player, that is a soccer club, in the manager of 2020–21 Tractor S.C. season.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://dbpedia.org/ontology/coach> ?result . ?v0 <http://dbpedia.org/ontology/team> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?coach
WHERE {
  ?team a dbpedia:SoccerTeam;
    dbpedia:season ""2020-21"" .
  ?player a dbpedia:FootballPlayer;
    dbpedia:club ?team .
  ?team rdf:type dbpedia:FootballClub ;
    dbpedia:manager ?coach .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
445,15,train,"Give me the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?result . ?v1 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?residencePlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:athlete ?isAnAthlete .
  ?person dbpedia:residencePlace ?residencePlace .
  FILTER (?residencePlace = 'gb')
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
865,17,train,Who is the child of the father of Abul Maal Abdul Muhith?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Abul Maal Abdul Muhith"" .
  ?person dbpedia:father ?father .
  ?father a dbpedia:Person; rdfs:label ?father_name .
  ?child a dbpedia:Person; dbpedia:parent ?father .
}",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
573,11,train,"Give me the person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?decedentName
WHERE {
  ?region a dbpedia:Region;
    dbpedia:name ""Bengal"" .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?region ;
    dbpedia:decidedBy dbpedia:British_Raj_Administration .
}",2,3,3,2,1,3,3,71,0,0,968,0,0.0,0
965,18,train,"Give me the parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","SELECT ?birthPlace1 ?deathPlace1 ?birthPlace2 ?deathPlace2
WHERE {
  ?louise a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace1 .
  ?george a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace2 .
  ?princeLouis a dbpedia:Person;
    dbpedia:parent ?parentOfPrinceLouis .
  ?parentOfPrinceLouis a dbpedia:Person;
    rdfs:label ""Prince Henry, Duke of Edinburgh""@en .
  ?louise ns:spouse ?marquess .
  ?marquess a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace3 .
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
773,22,train,"Give me the parent of the child, that is a royalty, of Louis the German and spouse of Louis the German.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?parent ;
    dbpedia:spouse [ dbpedia:hasChild ?child ] .
  ?parent rdfs:label ""Louis the German""@en .
  ?child rdfs:label ""royalty""@en .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
976,8,train,Who is the person born as Mehmet Naci Bostancı?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""Mehmet Naci Bostancı""@en .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
124,21,train,"Give me the commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery and military force of Battle of Atbara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander
WHERE {
  ?battle a dbpedia:Event;
    dbpedia:instanceOf dbpedia:MilitaryConflict ;
    dbpedia:participatedIn dbpedia:Anglo-Egyptian_War_1898 .

  ?battery a dbpedia:MilitaryUnit;
    dbpedia:unitType ""Field Battery"";
    dbpedia:belongsTo dbpedia:Royal_Australian_Army ;
    dbpedia:commander ?commander .

  ?battle dbpedia:hasParticipant ?battery .
}
```

This SPARQL query searches for the commander of a Field Battery belonging to the Royal Australian Artillery that participated in the Battle of Atbara during the Anglo-Egyptian War of 1898.",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
888,14,train,Give me the awardee of the award of the commander in 2022 Ukrainian eastern counteroffensive.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee
WHERE {
  ?conflict a dbpedia:Event;
    dbpedia:startDate ""2022-03-24""^^xsd:date; # Assuming the start date of the Ukrainian eastern counteroffensive
    dbpedia:endDate ""2022-11-24""^^xsd:date; # Assuming the end date, could be later based on actual events
  ?award dbpedia:Award;
    dbpedia:awardee ?awardee;
    dbpedia:for ""Ukrainian eastern counteroffensive"" .
}",3,3,4,3,1,3,2,20,0,0,44,0,0.0,0
47,5,train,"Give me the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?award
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Mantu Ghosh"" .
  ?person dbpedia:awardedWith ?award .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
917,6,train,Who is the father of Keʻelikōlani?,SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?fatherName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Keʻelikōlani"" .
  ?person dbpedia:hasFather ?fatherName .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
98,2,train,Who is the successor of Emperor Nijō?,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Nijō> <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?successor
WHERE {
  ?emperor a dbpedia:Emperor;
    dbpedia:reignStart ""Nijō"" .
  ?emperor a dbpedia:Emperor;
    dbpedia:succeededBy ?successor .
}",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
839,8,train,"Give me the band, that is a musical artist, of Charlie Huhn.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1967-03-29"";
    dbpedia:name ""Charlie Huhn"";
    dbpedia:associatedBand ?band .
}",1,2,2,1,1,3,3,71,0,0,4,0,0.0,0
365,2,train,"Give me the commander, that is an office holder, in Ukrainian–Soviet War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander
WHERE {
  ?commander a dbpedia:Person;
    dbpedia:officeHolder true;
    dbpedia:startYear 1917.
  FILTER (xsd:yearRange [ ?commander dbpedia:startYear ] ""1917"" ""1921"")
}",1,2,2,1,1,3,2,20,0,0,5,0,0.0,0
93,8,train,Give me the death place of the governor of Bob Bartlett.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Bob Bartlett""@en .
  ?governor a dbpedia:OfficeHolder;
    dbpedia:office dbpedia:Premier_of_Newfoundland ;
    dbpedia:officeStart ""1939""^^xsd:gYear ;
    dbpedia:end ""1949""^^xsd:gYear .
  ?person dbpedia:deathPlace ?deathPlace .
}",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
976,17,train,Who is the person born as the birth name of Naci Bostancı?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Naci Bostancı"" .
  ?person dbpedia:birthPlace ?birthPlace .
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
935,5,train,Give me the office of Sanaullah Khan Zehri.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?result . },"Given that Sanaullah Khan Zehri was a Pakistani politician, we can use the DBpedia ontology to query for his role or office. Assuming he held a significant office, we might look for terms like `officeHolder`, `position`, or `role`. Here's a structured SPARQL query to find such information:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolder ?office .
  ?person rdfs:label ""Sanaullah Khan Zehri""@en .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
445,7,train,Who is the commander in Battle of Saint-Mihiel?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander
WHERE {
  ?battle a dbpedia:Battle;
    dbpedia:partOfMilitaryConflict dbpedia:World_War_1 ;
    dbpedia:commander ?commander .
  ?battle rdf:type dbpedia:Event .
  ?battle rdfs:label ""Battle of Saint-Mihiel"" .
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
417,35,train,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg and child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","SELECT ?spouse
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:parentOfCount_Ingolf_of_Rosenborg .
  ?count_ingolf a dbpedia:Person;
    dbpedia:hasSpouse ?spouse .
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?child a dbpedia:Royalty .
  ?spouse a dbpedia:Person;
    dbpedia:isSpouseOf ?count_ingolf .
  ?child a dbpedia:Royalty .
}",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
892,9,train,Give me the entity in Italy and landmark at elevation of 58.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?landmark
WHERE {
  ?landmark a dbpedia:Landmark;
    dbpedia:heightInMetres 58 .
  ?landmark rdfs:label ?name .
}
```",2,2,3,1,2,3,3,71,0,0,11,0,0.0,0
865,10,train,Give me the native of British Raj and father of Shahla Khatun.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person ?birthPlace ?father
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""Shahla Khatun""@en .
  ?person dbpedia:father ?father .
  FILTER (lang(?person) = ""en"")  # Ensure we are looking for an English label
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
955,6,train,Give me the band of Nate Albert and band of Johnny Rioux.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Nate_Albert> . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Rioux> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""United States"";
    dbpedia:genre ""Punk rock"";
    dbpedia:role ""Musician"";
    dbpedia:bandMemberOf ?band .
  ?band rdfs:label ?bandName .
}

AND
{
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""United States"";
    dbpedia:role ""Musician"";
    dbpedia:bandMemberOf ?band2 .
  ?band2 rdfs:label ?bandName2 .
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
987,2,train,Give me the entity in Montenegro.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX ns: <http://www.wikidata.org/prop/direct/>

SELECT ?entity
WHERE {
  ?entity a dbo:Country ;
            dbo:name ""Montenegro"" .
  ?entity ns:P31 ?wikidayEntity .
}
```",1,1,2,1,1,3,3,71,0,0,909,0,0.0,0
465,38,train,"Give me the successor of the child, that is a royalty, of Anne of Brittany and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successorSpouse
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?mother .
  ?mother a dbpedia:Person;
    dbpedia:children [ ?child ] .
  ?child a dbpedia:Royalty ;
    dbpedia:spouse ?successorSpouse .
  ?mother rdfs:label ""Anne of Brittany""@en .
  ?father rdfs:label ""Ferdinand I, Holy Roman Emperor""@en .
  ?child rdfs:label ""Henry II""@en .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
715,10,train,Give me the leader of Ministry of the Air (Spain) and commander in Rif War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?leader
WHERE {
  ?war a dbpedia:Conflict;
    dbpedia:conflictStart ""1920-07-18"" ;
    dbpedia:end ""1926-04-03"" .
  ?leader a dbpedia:Person;
    dbpedia:role ""Minister of the Air (Spain)"" ;
    dbpedia:participatedIn ?war .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
987,6,train,Who is the actor of All for Free?,SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?result . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:mainActor ?actor .
  ?movie rdfs:label ""All for Free""@en .
}",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
645,28,train,Give me the military force of Spanish Civil War and leader of Ministry of the Army (Spain) and commander in the force of Carlos Asensio Cabanillas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"SELECT ?militaryForce ?leaderName ?commanderName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:role [""Minister of the Army (Spain)""] .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ""1939-04-30""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person rdfs:label ?name .
  ?militaryForce a dbpedia:MilitaryUnit ;
    dbpedia:partOf ?nationalistForces .
  ?commanderName a dbpedia:Person;
    dbpedia:birthPlace ""Spain""^^<http://www.w3.org/2001/XMLSchema#country> .
  ?militaryForce dbpedia:commandedBy ?commanderName .
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
917,24,train,Give me the child of Kekūanāoʻa and child of the father of Keʻelikōlani.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v2 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:offspring ?child .
  ?grandparent a dbpedia:Person;
    dbpedia:parent ?parent .
}",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
192,1,train,"Give me the child of Mary of Hungary, Queen of Naples.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_of_Hungary,_Queen_of_Naples> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?child rdfs:label ""AK Abdul Momen""@en .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
582,3,train,"Give me the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . }","The SPARQL query to find such a scientist would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?scientist
WHERE {
  ?scientist a dbpedia:Person;
    dbpedia:fieldOfScience dbpedia:Physics; # Assuming Sugawara's field is Physics
    dbpedia:birthPlace ?birthPlace .
  ?scientist dbpedia:relatedTo ?sugawara . # Connects the scientist to Hirotaka Sugawara
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
98,10,train,Give me the birth place of the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdf:type dbo:Person ;
    rdfs:label ""Paolo Elito M. Ballesteros IV""@en .
}",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
935,10,train,"Give me the office of the native of Balochistan, Pakistan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Balochistan,_Pakistan> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality dbpedia:Balochistan .
  ?person dbpedia:heldOffice ?office .
}",2,2,3,2,1,3,2,20,0,0,35,0,0.0,0
18,4,train,Who is the professional in Actress?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?profession
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Sulato Mehta""@en;
    dbpedia:birthDate ""1872""^^xsd:gYear;
    dbpedia:deathDate ""1947""^^xsd:gYear;
    dbpedia:occupation ?profession .
}",1,1,2,1,1,2,3,28,0,0,19241,0,0.0,0
236,9,train,"Give me the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify the person using their name or other known attributes
SELECT ?person WHERE {
  ?person a dbpedia:Person;
    rdfs:label ""AK Abdul Momen""@en .
}

# Step 2: Determine the office they held in Quincy, Massachusetts
# Since we don't have direct information about AK Abdul Momen's office in Quincy,
# we assume he was involved in the political administration of the region during his time.
SELECT ?office WHERE {
  ?person dbpedia:residenceQuincy ""Quincy, Massachusetts""@en;
    dbpedia:officeHolder ?office .
}

# Step 3: Extract the administration or governing body associated with that office
SELECT DISTINCT ?administration WHERE {
  ?office a dbpedia:Office; 
  # Assuming local government offices in Quincy would be under the state or federal level administration
  dbpedia:administers ?administration .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
433,31,train,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers and associated musical artist of Bill Evans.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?artistName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""UK"" .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ""UK"" .
  ?person foaf:musicArtist ?artist .
  ?artist a dbpedia:MusicArtist .
}
```

This query will return the names of individuals who are both `dbpedia:Person` instances (representing real people) with a birthplace in the UK and a deathplace in the UK, and who also have a `foaf:musicArtist` property pointing to a `dbpedia:MusicArtist`.",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
579,6,train,Give me the native of Edinburgh and person born as Isobel Jane Miller Richard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Isobel Jane Miller Richard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Isobel Jane Miller Richard"" .
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
865,29,train,"Give me the father of Shahla Khatun and native of British Raj and father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""British Raj"" .
  ?person dbpedia:parent ?father .
  ?child a dbpedia:Person; 
    dbpedia:name ""Abu Ahmad Abdul Hafiz"" ;
    dbpedia:parent ?father .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
645,24,train,"Give me the leader of Ministry of the Army (Spain) and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?ministryLeader ?militaryForce
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Francisco Largo Caballero""@es .
  ?person rdfs:label ?description .
  ?description ns:language ""es"" .
  ?ministry a dbpedia:Ministry ;
    dbpedia:leader ?ministryLeader ;
    dbpedia:established ""1936-1939""^^xsd:gYear .
  ?ministry a dbpedia:MilitaryMinistry .
  ?person dbpedia:memberOf ?militaryForce .
}
```

This query aims to:
1. Identify Francisco Largo Caballero.
2. Find the leader of the Ministry of the Army during the period 1936-1939.
3. Determine the military force he was associated with.",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
130,3,train,"Give me the film, that is a soccer club and an organisation, of Candice Storey Lee.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . },"{sparql_query: SELECT ?film WHERE { ?person a dbpedia:Film . ?person rdfs:label ""Candice Storey Lee"" }}",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
465,4,train,Give me the child of Alfonso I d'Este.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?parent dbpedia:name ""Alfonso I d'Este"" .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
715,24,train,Give me the leader of Ministry of the Air (Spain) and commander in the force of Francisco Largo Caballero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?leader ?commander
WHERE {
  ?ministry a dbpedia:Organization ;
    dbpedia:name ""Ministerio del Aire"" .
  ?person1 a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen"";
    dbpedia:memberOf ?ministry .
  ?person2 a dbpedia:Person;
    dbpedia:name ""Francisco Largo Caballero"";
    dbpedia:lead ?ministry .
  ?leader a dbpedia:Person;
    dbpedia:role ?position .
  ?commander a dbpedia:Person;
    dbpedia:commandedBy ?person2 .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
41,11,train,"Give me the party of the work, that is an office holder, of yes.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?party
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""India"";
    dbpedia:affiliation ?party .
  ?person rdfs:label ""AK Abdul Momen"" .
}",2,3,3,2,1,2,3,28,0,0,35,0,0.0,0
965,35,train,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandparent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace <http://dbpedia.org/property/birthPlace_of_Prince_Louis_of_Battenberg>;
    dbpedia:father <http://dbpedia.org/resource/Alexander_II_of_Russia> .
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
456,8,train,"Give me the band, that is a musical artist, of Dean Brody.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?artist dbpedia:genre ""Country music"";
  ?artist dbpedia:name ""Dean Brody"";
  ?artist dbpedia:associatedBand ?band .
}",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
917,9,train,Give me the parent of Albert Kamehameha and child of Kekūanāoʻa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent ?child
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:parentOf ?parent .
  ?person2 a dbpedia:Person;
    dbpedia:childOf ?child ;
    dbpedia:names ?name .
  ?person1 = ?person2
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
965,21,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and spouse of the spouse of Princess Victoria of Hesse and by Rhine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:name ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
  ?person1 dbpedia:father ?father .
  ?person1 dbpedia:mother ?mother .

  ?person2 a dbpedia:Person;
    dbpedia:name ""Julia Hilda Charlotte von Hohenzollern-Hechingen""@en .
  ?person2 dbpedia:parent ?mother .

  ?person3 a dbpedia:Person;
    dbpedia:name ""Princess Victoria of Hesse and by Rhine""@en .
  ?person3 dbpedia:sibling ?person2 .

  ?father a dbpedia:Person;
    dbpedia:name ""Prince Louis of Battenberg""@en .
  ?father dbpedia:parent ?grandParent .

  ?mother a dbpedia:Person;
    dbpedia:name ""Julia Hilda Charlotte von Hohenzollern-Hechingen""@en .
  ?mother dbpedia:parent ?grandMother .

  ?grandParent a dbpedia:Person;
    dbpedia:name ""Friedrich Karl, Prinz von Hohenzollern-Sigmaringen""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
507,22,train,Give me the spouse of Anne V. Coates and professional in the profession of Guy Ferland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse ?profession
WHERE {
  ?anne a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?anne foaf:spouse ?spouse .
  ?anne dbpedia:profession ?profession .
  ?guy a dbpedia:Person;
    dbpedia:birthPlace ?guyBirthPlace .
  ?anne foaf:spouse ?guy .
  ?guy a dbpedia:Person;
    dbpedia:profession ?guyProfession .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
274,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?role WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Chittagong District, Bangladesh"";
    dbpedia:deathPlace ""Dacca, Bangladesh"";
    dbpedia:occupation ?role .
}",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
329,0,train,Give me the birthplace of Eric Cross (writer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",1,1,2,1,1,2,3,28,2,100978,0,1.9805902158843335e-05,1.0,3.961101978570438e-05
47,38,train,Give me the office of the awardee of Banga Bhushan and office of the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office_banga_bhushan ?office_padma_vibhushan
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedWith dbpedia:Banga_Bhushan .
  ?person a dbpedia:Person;
    dbpedia:awardedWith dbpedia:Padma_Vibhushan .
  ?person dbpedia:office ?office .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
917,11,train,"Give me the parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent
WHERE {
  <http://dbpedia.org/resource/Kamehameha_IV> a dbpedia:Person;
    dbpedia:parent ?parent .
}",2,3,3,2,1,3,3,71,0,2,2,0.0,0.0,0
433,32,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musicalArtist1 ?artistRole1, ?musicalArtist2 ?artistRole2
WHERE {
  ?scott_lafaro a dbpedia:Person;
    dbpedia:associatedMusicalArtist ?musicalArtist1 .
  ?langston_hughes a dbpedia:Person;
    dbpedia:birthName ""Paul Laurence Dunbar Chambers Jr."" ;
    dbpedia:role ?artistRole1 .
  ?langston_hughes a dbpedia:Person;
    dbpedia:associatedMusicalArtist ?musicalArtist2 .
}
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
326,9,train,"Give me the birthplace, that is a state and British, of the professional in Writer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/occupation> ""Writer""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:occupation dbpedia:P31 ; # P31 is the property for Writer
    dbpedia:activeYearsRangeStart ""1858""^^<xs:year> ;
    dbpedia:activeYearsRangeEnd ""1947""^^<xs:year>
  }
  ?person dbpedia:birthPlace ?birthPlace .
}
```",2,4,3,2,1,3,2,20,0,0,38,0,0.0,0
917,34,train,"Give me the child of Kekūanāoʻa and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v3 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person;
    dbpedia:name ""Kekūanāoʻa"" .
  ?person dbpedia:child ?royaltyChild .
  ?royaltyChild a dbpedia:Person;
    dbpedia:rank dbpedia:Monarch
  FILTER (lang(?person) = ""en"")  # Assuming we are looking for information in English
}",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
47,6,train,Give me the awardee of Banga Bhushan.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee
WHERE {
  ?award dbpedia:awardedTo ?awardee .
  ?award rdfs:label ""Banga Bhushan""@en .
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
976,28,train,"Give me the office of Meral Akşener and office of the leader, that is a politician, of Grand National Assembly of Turkey and office of Naci Bostancı.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v1 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?office1 ?office2 ?speaker WHERE { ?person a dbpedia:Person; rdfs:label ?office1 . ?person a dbpedia:OfficeHolder; office dbpedia:Grand_National_Assembly_of_Turkey . ?person a dbpedia:Politician . ?person rdfs:label ?office2 . ?office1 ns:officeHolder ?speaker . },4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
433,5,train,"Give me the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf:<http://xmlns.com/foaf/0.1/>

SELECT ?musicalArtist
WHERE {
  ?person a dbpedia:Person;
    dbpedia:identifier ""Ornette Coleman""@en .
  ?person rdf:type foaf:Person .
  ?person foaf:musicalArtist ?musicalArtist .
  ?musicalArtist a foaf:Person;
    foaf:artist ?artist .
}",1,3,2,1,1,3,3,71,0,0,10,0,0.0,0
965,6,train,"Give me the child, that is a royalty, of Prince Louis of Battenberg.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen"";
    dbpedia:birthPlace ""Dhaka, Bangladesh"";
    dbpedia:deathPlace ""Kolkata, India"".
  ?child a dbpedia:Person;
    dbpedia:parent ?parent;
    dbpedia:birthPlace ?birthPlace;
    dbpedia:deathPlace ?deathPlace .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
130,5,train,"Give me the administration, that is American, of .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> """"@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?administration
WHERE {
  ?president a dbpedia:Person;
    dbpedia:termOffice dbpedia:United_States_President ;
    dbpedia:inOfficeString ""between 1858-1947"" .
  FILTER (STRSTARTS (?president, ""Rutherford B. Hayes"") OR STRSTARTS (?president, ""James A. Garfield"") OR STRSTARTS (?president, ""Chester A. Arthur"") OR STRSTARTS (?president, ""Grover Cleveland""))
}
```",1,2,2,1,1,3,2,20,0,0,43,0,0.0,0
773,15,train,Give me the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v1 <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?grandparentParent ?grandfather
WHERE {
  ?charles_the_fat a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?bernard .
  ?bernard a dbpedia:Person;
    dbpedia:hasParent ?grandparentParent .
  ?grandparentParent a dbpedia:Person;
    dbpedia:hasParent ?grandfather
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
456,33,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and spouse of Danielle Spencer (Australian actress).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alterEgoSpouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Australia"" .
  ?person rdfs:label ?name .
  ?person foaf:spouse ?alterEgoSpouse .
  FILTER (regex(str(?name), ""Lamont Cranston"")) .
  ?alterEgoSpouse a dbpedia:Person .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
892,31,train,Give me the entity in the profession of the true self of Enrico Crolla and landmark at elevation of 58.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v2 <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?profession ?landmark_elevation
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Enrico Crolla"" .
  ?person dbpedia:occupation ?profession .
  ?landmark a dbpedia:Landmark;
    dbpedia:heightInMetres ?landmark_elevation .
  FILTER (?landmark_elevation = 58)
}
```",4,4,5,3,2,3,3,71,0,0,11,0,0.0,0
573,27,train,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent
WHERE {
  ?author a dbpedia:Person;
    dbpedia:birthParent ?parent .
  ?author dbpedia:fullName ""John Quincy Adams"" .
  ?author a dbpedia:OfficeHolder ;
    dbpedia:office dbpedia:President_of_the_United_States .
  ?author a dbpedia:Politician .
}",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
715,30,train,"Give me the commander in Spanish Civil War and commander in Rif War and leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 
 SELECT ?commander WHERE { 
  ?person a dbpedia:Person; rdfs:label ?name . 
  ?person ns:fightIn ?war . 
  ?war a dbpedia:Conflict ; dbpedia:conflictLabel 'Spanish Civil War' . 
  ?person ns:fightIn ?anotherWar . 
  ?anotherWar a dbpedia:Conflict ; dbpedia:conflictLabel 'Rif War' . 
}",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
917,36,train,"Give me the parent of Albert Kamehameha and child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:father ?father .
  ?child a dbpedia:Person;
    dbpedia:childOf ?father .
  FILTER (xsd:boolean(?child = ?parent)) 
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
124,26,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?militaryForce WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedBritishSouthAfricaCompanyMedal true .
  ?person dbpedia:conflictSecondBoerWar true .
}
```",3,6,4,3,1,3,3,71,0,0,1434,0,0.0,0
5,4,train,"Give me the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ?birthDate .
  ?person rdfs:label ?name .
  ?person dbpedia:genre ""Music"" .
  ?person rdf:type dbpedia:Artist .
  ?person dbpedia:associatedBand ?bandName .
}",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
976,31,train,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu and office of Meral Akşener.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/leader> ?v0 . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}
```",4,6,5,3,2,3,3,71,0,100980,3,0.0,0.0,0
417,20,train,Give me the child of the father of Frederick IX of Denmark and spouse of Princess Caroline-Mathilde of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  ?father a dbpedia:Person; dbpedia:name ""Christian IX of Denmark"" .
  ?mother a dbpedia:Person; dbpedia:name ""Princess Louise of Sweden"" .
  ?child a dbpedia:Person;
    dbpedia:parent ?father;
    dbpedia:spouse ?mother .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
130,1,train,Give me the entity in Tennessee.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Tennessee> . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity
WHERE {
  ?entity a dbo:Entity ;
    dbo:locatedIn dbpedia:PlaceObject ;
    dbpedia:isPartOf dbpedia:Tennessee .
}",1,1,2,1,1,3,2,20,0,0,688,0,0.0,0
442,5,train,"Give me the resting place of the work of Roosevelt, Theodore.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/author> ""Roosevelt, Theodore""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?burialPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""United States"";
    dbpedia:deathDate ""1919-01-06"";
    foaf:name ""Theodore Roosevelt"";
    dbpedia:burialPlace ?burialPlace .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
236,14,train,"Give me the party member of the administration of the reference, that is an office holder and a politician, to James Madison.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?officeHolderName ?party
WHERE {
  ?officeHolder a dbpedia:OfficeHolder;
    dbpedia:politicalAffiliation dbpedia:DemocraticRepublicanParty .
  ?officeHolder a dbpedia:Person;
    dbpedia:officeHolderRole dbpedia:Politician .
  ?officeHolder foaf:name ?officeHolderName .
  ?officeHolder rdfs:member dbpedia:DemocraticRepublicanParty .
}
```",3,5,4,3,1,3,2,20,0,0,597,0,0.0,0
965,30,train,"Give me the parent of the person born, that is a noble, as Prince George of Battenberg and spouse of Prince Louis of Battenberg and parent of Louise Mountbatten.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commonParent
WHERE {
  ?princeGeorge a dbpedia:Person;
    dbpedia:birthPlace <http://dbpedia.org/property/birthPlace_of_Prince_Louis_of_Battenberg> .
  ?princeLouis a dbpedia:Person;
    dbpedia:birthPlace <http://dbpedia.org/property/birthPlace_of_Prince_George_of_Battenberg> .
  
  ?commonParent a dbpedia:Person;
    dbpedia:parent ?princeGeorge .
    dbpedia:parent ?princeLouis .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
508,0,train,Give me the birthplace of Ma Hongkui.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ma_Hongkui> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""Ma Hongkui""@en .
}",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
507,32,train,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and spouse of the person born as Anne Voase Coates.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/director> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/birthName> ""Anne Voase Coates""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?director
WHERE {
  ?spouse a dbpedia:Person;
    dbpedia:name ""Anne Voase Coates""@en .
  ?spouse dbpedia:sibling ?sibling .
  ?movie a dbpedia:Film; 
    dbpedia:actor ?sibling; 
    dbpedia:director ?director .
  FILTER (lang(?name) = ""en"")  # Ensure names are in English
}",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
124,10,train,Give me the military force of Battle of Atbara and commander in Mahdist War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?militaryForce ?commander
WHERE {
  ?battle a dbpedia:Event;
    dbpedia:instanceOf dbpedia:Conflict .
  ?battle dbpedia:hasCombatant ?militaryForce .
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen"" .
  ?battle dbpedia:participatedIn ?war.
  ?war a dbpedia:Event;
    dbpedia:instanceOf dbpedia:MilitaryConflict .
  ?war dbpedia:hasParticipant ?person .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
582,10,train,Give me the figure known as --10-19 and reference to Japan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person dbpedia:givenName ""Hideyoshi"" .
  ?person dbpedia:birthDate ""1537-09-02""^^xsd:date .
  ?person dbpedia:nationality ""Japanese"" .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
965,3,train,Give me the parent of Louise Mountbatten.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1920-04-22"";
    dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:name ""Louis Mountbatten, 1st Earl Mountbatten of Burma"" .
  ?person rdfs:father ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
445,28,train,"Give me the death place of Patrick Moore and entity in the residence, that is a country, of Anna Sharkey and entity in United Kingdom.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Anna_Sharkey> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Find death place of Patrick Moore
SELECT ?deathPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Patrick Moore"";
    dbpedia:deathPlace ?deathPlace .
}

# Find country of residence for Anna Sharkey
SELECT ?country WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Anna Sharkey"";
    dbpedia:residenceCountry ?country .
}

# Find entity in United Kingdom corresponding to Patrick Moore's death place
PREFIX uk: <http://dbpedia.org/ontology/#United_Kingdom>
SELECT ?deathPlaceEntity WHERE {
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?deathPlace uk:locatedIn dbpedia:United_Kingdom .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
554,10,train,"Give me the birth place of the band, that is an artist, of Rita Redshoes.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName ?birthPlace
WHERE {
  ?artist a dbpedia:Person;
    dbpedia:hasBand ?band .
  ?band rdfs:label ?bandName .
  ?band dbpedia:birthPlace ?birthPlace .
}",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
433,2,train,Give me the professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?musician
WHERE {
  ?musician a dbpedia:Musician;
    dbpedia:birthDate [ ps:inYearRange ""1905"" ""1915""] .
  ?musician dbpedia:deathPlace ""Kolkata, India"" .
  ?musician rdfs:label ""AK Abdul Momen""@en .
}",1,1,2,1,1,3,3,71,0,0,7563,0,0.0,0
365,12,train,"Give me the person born as Symon Vasylyovych Petliura and spouse of the native, that is a politician, of Poltava Governorate.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . ?result <http://dbpedia.org/property/birthName> ""Symon Vasylyovych Petliura""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?personName ?spouseName
WHERE {
  ?politician a dbpedia:Politician;
    dbpedia:birthPlace [ property::inRegion dbpedia:Poltava_Governorate ] .
  ?politician dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:name ?spouseName .
  ?politician rdfs:label ""Symon Vasylyovych Petliura""@en .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
433,29,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and professional in Musician and associated musical artist of Paul Chambers.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?musicalArtist
WHERE {
  ?scott_lafaro a dbpedia:Person;
    dbpedia:musicalArtist ?musicalArtist .
  ?paul_chambers a dbpedia:Person;
    dbpedia:musicalArtist ?musicalArtist .
  ?musicalArtist rdfs:label ?artistLabel .
  FILTER (lang(?artistLabel) = ""en"")  # Assuming we want the English label
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
273,0,train,Give me the spouse of Edoardo Agnelli (industrialist).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Edoardo_Agnelli_(industrialist)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Edoardo Agnelli""@en .
  ?person dbpedia:sibling ?sibling .
  OPTIONAL { ?sibling a dbpedia:Person; rdfs:label ?siblingLabel . }
  FILTER (lang(?siblingLabel) = ""en"" )
  ?person dbpedia:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
645,29,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero and leader of Ministry of the Army (Spain) and commander in Battle of Jarama.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?militaryForce
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1889-10-07"";
    dbpedia:deathDate ""1946-09-27"";
    dbpedia:role ""Minister of the Army (Spain)"";
    dbpedia:commanderIn ""Battle of Jarama"";
    dbpedia:conflict ""Spanish Civil War"".
  ?person dbpedia:militaryAllegiance ""Republican Spain"".
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
129,18,train,Give me the associated musical artist of the person born as Tahj Malik Chandler and associated musical artist of EarthGang.,"SELECT ?result WHERE { <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?associated_artist1 ?associated_artist2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:name ""Tahj Malik Chandler""@en .
  ?person1 dbpedia:associatedArtist ?associated_artist1 .

  ?person2 a dbpedia:Person;
    dbpedia:name ""EarthGang""@en .
  ?person2 dbpedia:associatedArtist ?associated_artist2 .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
773,38,train,"Give me the parent of the child, that is a royalty, of Louis the German and parent of the successor of Charles the Bald.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commonParent
WHERE {
  ?child1 a dbpedia:Person;
    dbpedia:parent ?parent1 .
  ?child2 a dbpedia:Person;
    dbpedia:parent ?parent2 .
  
  ?parent1 ns:father ?parentOfLouisTheYounger.
  ?parent2 ns:father ?parentOfLouisIII.
  
  ?commonParent ns:parent ?parent1.
  ?commonParent ns:parent ?parent2.
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
353,4,train,Give me the entity in Russia and alma mater of Daniil Yegorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniil_Yegorov> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?almaMater
WHERE {
  ?person a dbpedia:Person;
    rdfs:label ""Daniil Yegorov""@en .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:educationalInstitution ?almaMater .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
582,19,train,Give me the player in Kazuaki Nagasawa and reference to the residence of Hirotaka Sugawara.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?player1 ?birthPlace1 ?player2 ?residence2
WHERE {
  ?player1 a dbpedia:Person; dbpedia:name ""Kazuaki Nagasawa"" .
  ?player2 a dbpedia:Person; dbpedia:name ""Hirotaka Sugawara"" .
  ?player1 dbpedia:birthPlace ?birthPlace1 .
  ?player2 dbpedia:residence ?residence2 .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
122,4,train,Give me the band of Gift of Gab (rapper) and band member of Lyrics Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gift_of_Gab_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Lyrics_Born> . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName ?bandMember
WHERE {
  ?artist a dbpedia:Musician;
    dbpedia:genre ""Hip hop"";
    dbpedia:birthPlace ""Oakland, California"";
    dbpedia:activeYears ""1990s - present"" .
  ?band a dbpedia:Band;
    dbpedia:name ?bandName;
    dbpedia:members ?bandMember .
  ?artist rdfs:label ""Gift of Gab""@en .
  ?bandMember rdfs:label ?bandName@en .
}",2,2,3,1,2,2,2,9,0,0,2,0,0.0,0
326,1,train,Give me the professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?composer
WHERE {
  ?composer a dbpedia:Person;
    dbpedia:field ""Composer"";
    dbpedia:birthPlace ""India"";
    dbpedia:deathPlace ""India"";
    dbpedia:activeYears ""1858-1947"".
}
```",1,1,2,1,1,2,2,9,0,0,1916,0,0.0,0
892,25,train,"Give me the landmark at elevation of 58 and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for landmarks with elevation 58 meters
SELECT ?landmark ?elevation WHERE {
  ?landmark a dbpedia:Landmark;
    dbpedia:heightInMetres 58 .
}

# Query for the Democratic Party (Italy) and its administrative regions
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?party ?region WHERE {
  ?party a dbo:PoliticalParty ;
    rdfs:label ""Democratic Party (Italy)"" .
  ?party dbpprop:hasAdminRegion ?region .
}

# Combine results to find matching landmarks and their administrative regions
CONJOIN
{
  ?landmark dbpedia:locatedIn ?location .
  ?location a dbo:AdministrativeDivision .
} 
{
  ?party dbo:administers ?location .
}
```",3,7,4,2,2,3,3,71,0,0,2,0,0.0,0
645,35,train,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and commander in the force of Carlos Asensio Cabanillas.",SELECT ?result WHERE { <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Carlos_Asensio_Cabanillas> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?leader ?commander
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:role dbpedia:CommanderInForce .
  ?person2 a dbpedia:Person;
    dbpedia:role dbpedia:LeaderOfOffice .
  ?person1 ns:memberOf dbpedia:Republican_Army .
  ?person2 ns:memberOf dbpedia:Republican_Army .
  ?person1 rdfs:label ""Camilo Menéndez Tolosa"" .
  ?person2 rdfs:label ""Carlos Asensio Cabanillas"" .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
926,2,train,Give me the child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?parent dbpedia:name ""Ahmed III"" .
}",1,1,2,1,1,3,3,71,0,0,11,0,0.0,0
573,1,train,"Give me the person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:deathPlace dbpedia:Location ; # Assuming Quincy, Massachusetts is represented as a Location in DBpedia
    dbpedia:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ""Quincy, Massachusetts"" . # Direct match on the label to ensure accuracy
}",1,1,2,1,1,3,3,71,0,0,40,0,0.0,0
839,19,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of Peter Schorowsky.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?v0 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Person;
    foaf:name ""Kevin Richard Russell"" .
  ?person dbpedia:band ?band .
  
  ?person a dbpedia:Person;
    foaf:name ""Peter Schorowsky"" .
  ?person dbpedia:band ?band .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
573,15,train,"Give me the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    rdfs:label ""Charlie Baker""@en .
    OPTIONAL { ?person dbpedia:birthPlace ?birthPlace }
    OPTIONAL { ?person dbpedia:deathPlace ?deathPlace }
}",2,3,3,2,1,3,3,71,0,1,1,0.0,0.0,0
933,3,train,"Who is the band, that is an artist and a musical artist, of The Ramong Sound?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?band a dbpedia:MusicArtist; dbpedia:name ""The Ramong Sound"" .
  ?band a dbpedia:Artist .
  OPTIONAL { ?band dbpedia:birthPlace ?birthPlace }
  OPTIONAL { ?band dbpedia:deathPlace ?deathPlace }
}",1,3,2,1,1,3,3,71,0,0,3,0,0.0,0
527,1,train,Give me the author of The Boy Who Kicked Pigs.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Boy_Who_Kicked_Pigs> <http://dbpedia.org/property/author> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?author
WHERE {
  ?book dbpedia:isBasedOnWork ;
         dbpedia:title ""The Boy Who Kicked Pigs"" .
  ?book dbpedia:author ?author .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
166,4,train,Give me the reference to Madrid.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?reference
WHERE {
  ?city rdf:type dbpedia:City .
  ?city name ""Madrid"" .
  ?city rdfs:label ?reference .
}",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
465,20,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?successor ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Ferrara, Italy"";
    dbpedia:succeededBy ?successor .
  ?child a dbpedia:Person; 
    dbpedia:parent ?ferdinand .
  ?child rdf:type dbpedia:Child ;
    dbpedia:parent ?ferdinand .
  ?successor a dbpedia:Monarch;
    dbpedia:spouse ?spouse .
  ?child rdfs:father ?ferdinand .
}
```

This SPARQL query aims to find:
1. `?successor`: The successor of Ercole II d'Este.
2. `?spouse`: The spouse of the child of Ferdinand I, Holy Roman Emperor.

The query first identifies that Alfonso I d'Este succeeded Ercole II d'Este and then looks for a child of Ferdinand I who is related to Alfonso I d'Este through marriage.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
102,12,train,"Give me the manager of Sheffield United W.F.C. and native of the residence, that is English and a settlement, of Peter Finbow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Sheffield_United_W.F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?managerName ?birthPlace
WHERE {
  ?club dbpedia:homeGround ""Sheffield United F.C. ground"" .
  ?manager a dbpedia:Person;
    dbpedia:role dbpedia:footballManagerOf ?club .
  ?player a dbpedia:Person;
    dbpedia:name ""Peter Finbow"" ;
    dbpedia:birthPlace ?birthPlace .
  ?birthPlace a dbpedia:Settlement ;
    dbpedia:isNativeOf ?manager
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
326,5,train,"Give me the person decedent at the region coded, that is a settlement, as 442/760.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/areaCode> ""442/760"" . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace [ dbpedia:code ""442/760"" ] .
  SOME ?death WHERE {
    ?person a dbpedia:Person;
      dbpedia:deathPlace ?death .
    ?death a dbpedia:DeathEvent .
  }
}
```",2,3,3,2,1,2,2,9,0,0,699,0,0.0,0
456,31,train,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actorSpouse
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:hasFilmography ?filmography .
  ?filmography film:star ?actor .
  ?actor dbo:hasTelevisionRole ?role .
  ?role television:star ?actor .
  ?actor dbo:coStarWith ?rossNewton .
  ?rossNewton foaf:name ""Ross Newton"" .
  ?actor dbo:spouse ?actorSpouse .
}
```

This SPARQL query does the following:
- It selects the spouse (`?actorSpouse`) of a person (`?actor`) who:
    - Has a filmography (`?filmography`), indicating they have starred in films.
    - Stars in at least one film (`?actor . ?filmography film:star ?actor`).
    - Has a television role (`?role`), indicating they have starred in TV shows.
    - Stars in at least one TV show (`?actor . ?role television:star ?actor`).
    - Co-stars with Ross Newton (`?actor dbo:coStarWith ?rossNewton`), ensuring Ross Newton is one of their co-stars.
    - Is married (`?actor dbo:spouse ?actorSpouse`).",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
465,33,train,"Give me the spouse of the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545) and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Elizabeth of Austria"" .
  ?child a dbpedia:Person;
    dbpedia:marriageTo ?spouse .
  ?child a dbpedia:Royalty .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
93,3,train,"Give me the headquarter, that is a region and a settlement, of Lake Clark National Park and Preserve.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Lake_Clark_National_Park_and_Preserve> <http://dbpedia.org/ontology/location> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?headquarter
WHERE {
  ?park a dbpedia:NationalPark;
    dbpedia:location ?location .
  ?location a dbpedia:Place ;
    dbpedia:isPartOf dbpedia:Alaska, USA ;
    dbpedia:populationSize > 0.
  ?headquarter a dbpedia:Settlement ;
    dbpedia:locatedIn ?location .
}",1,3,2,1,1,3,2,20,0,0,5,0,0.0,0
102,5,train,"Give me the residence, that is English and a settlement, of Peter Finbow.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?residence WHERE {
  ?person dbpedia:hasOccupation ""British Indian administrator"" .
  ?person dbpedia:name ""Peter Finbow"" .
  ?residence a dbpedia:Settlement; dbpedia:isPartOf dbpedia:England .
  ?person dwc:birthPlace ?birthPlace .
  ?person dwc:deathPlace ?deathPlace .
}
LIMIT 1",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
527,8,train,"Give me the author of the work, that is a work and a book, of Tom Baker.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Tom_Baker> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?author
WHERE {
  ?work a dbpedia:Book;
    dbpedia:author ?author .
  ?work dbpedia:name ""The Arkham Detective Stories"" .
  ?author a dbpedia:Person .
}",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
433,10,train,Give me the associated musical artist of Paul Chambers and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?associatedArtist ?musicalRole
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1935-03-26""^^xsd:date; # Assuming Paul Chambers was born on March 26, 1935
    dbpedia:deathDate ""1987-03-30""^^xsd:date; # Assuming Paul Chambers died on March 30, 1987
    dbpedia:occupation ?musicalRole .
  ?person dbpedia:birthPlace ""Coventry, United Kingdom"" . # Paul Chambers' birthplace
  ?person rdfs:label ""Paul Chambers""@en . # Ensuring we get the correct person
}",2,2,3,1,2,3,3,71,0,0,15,0,0.0,0
273,12,train,Give me the parent of the alumnus of University of Turin and spouse of Edoardo Agnelli (industrialist).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Edoardo_Agnelli_(industrialist)> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:alumniOf dbpedia:University_of_Turin .
  ?person a dbpedia:Person;
    dbpedia:spouseOf dbpedia:Edoardo_Agnelli .
  ?person dbpedia:parent ?parent .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
715,6,train,Give me the force of Francisco Largo Caballero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?influence
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Francisco Largo Caballero""@es .
  ?person dbpedia:politicalInfluence ?influence .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
926,37,train,Give me the successor of the child of the spouse of Şermi Kadın and child of Ahmed III.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Ahmed III"" ;
    dbpedia:spouse [ a dbpedia:Person; dbpedia:name ""Şermi Kadın"" ] .
  ?child2 a dbpedia:Person;
    dbpedia:parent ?child1 .
  ?child1 a dbpedia:Person;
    dbpedia:hasChild ?child2 .
  ?successor a dbpedia:Person;
    dbpedia:parent ?child2 .
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
826,3,train,Give me the father of Anna Magdalena Appel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parentOf ?child .
  ?child a dbpedia:Person; 
    foaf:name ""Anna Magdalena Appel"" . 
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
606,3,train,"Give me the nickname of DeKalb, Illinois.","SELECT ?result WHERE { <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?nickname
WHERE {
  ?city dbpedia:isPartOf dbpedia:Illinois .
  ?city rdfs:label ?full_name .
  ?full_name ns:prefLabel ?nickname .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
47,4,train,Give me the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Bihar, India"";
    dbpedia:memberOfParliament dbo:MemberOfParliament_India ;
    dbpedia:termStarts ""2014-05-20""^^xsd:date .
  FILTER (lang(?name) = ""en"")  # Assuming the person's name is in English
}",1,1,2,1,1,3,3,71,0,0,49,0,0.0,0
791,6,train,Give me the child of Emperor Takakura.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?emperor a dbpedia:Person;
    dbpedia:name ""AK Takakura""@en .
  ?emperor dbpedia:hasChild ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
582,24,train,"Give me the figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:father [ a dbpedia:ParentRole; rdfs:label ""father"" ] ;
    dbpedia:role dbpedia:SoccerManager .
  ?person dbpedia:birthDate FILTER (datatype::date >= ""1900-01-01T00:00:00Z"" AND datatype::date < ""2001-01-01T00:00:00Z"") ; # Assuming the person is alive during this period
    dbpedia:deathDate [ a dbpedia:DeathEvent; rdfs:label ""death"" ] .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""10-19"" . # Assuming ""10-19"" is a label or identifier associated with the person
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
98,7,train,Give me the region of Philippine Standard Time and entity in Philippines.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?region WHERE {
  ?region a dbo:Region ;
            dbpprop:standardTime ""Philippine Standard Time"" .
}
```",2,2,3,1,2,2,3,28,0,0,1743,0,0.0,0
465,13,train,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?childName ?spouseName
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Ferdinand I, Holy Roman Emperor""@en .
  ?child rdfs:label ?childName .
  ?child dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person;
    rdfs:label ?spouseName .
  FILTER (regex(?parent|rdfs:label, ""Ferdinand I, Holy Roman Emperor"")) .
}",2,3,3,2,1,3,3,71,0,0,7,0,0.0,0
839,29,train,Give me the band of the member of Böhse Onkelz and band of Matthias Röhr and band of Kevin Russell (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Find Matthias Röhr's bands
SELECT ?band WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Matthias Röhr""@de ;
    dbpedia:birthPlace ?birthPlace .
  OPTIONAL { ?person dbpedia:band ?band . }
}

# Find Kevin Russell's bands
SELECT ?band WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Kevin Russell""@en ;
    dbpedia:birthPlace ?birthPlace .
  OPTIONAL { ?person dbpedia:band ?band . }
}

# Find AK Abdul Momen's birthplace and death place during British Raj
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbo:Person;
    dbo:birthPlace ?birthPlace ;
    dbo:deathPlace ?deathPlace .
  AND ?birthPlace rdfs:label ""British Raj""@en .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
987,39,train,"Give me the entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/timeZone> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?country ?event ?birthPlace
WHERE {
  ?municipality geo:locatedIn ?region .
  ?region a dbpedia:Region; rdfs:label ""Canicosa de la Sierra""@es.
  
  ?country a dbpedia:Country; rdfs:label ?countryLabel .
  ?event a dbpedia:Event; occursIn ?region; startDate ""1947-01-01""^^xsd:date; description ""A sports event during the British Raj period in Canicosa de la Sierra""@en.

  ?person a dbpedia:Person; birthPlace ?birthPlace .
  ?person rdfs:label ""Moamer Kasumović""@en .

  FILTER (lang(?person) = ""en"") .
  
  ?event dbpedia:hasParticipant ?person .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
102,2,train,"Give me the member, that is a soccer player, of England women's national football team.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/England_women's_national_football_team> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?player
WHERE {
  ?team dbpedia:hasMember ?player .
  ?player a dbpedia:SoccerPlayer .
  ?player dbpedia:isMemberOf dbpedia:England_women's_national_football_team .
}",1,2,2,1,1,3,2,20,0,0,147,0,0.0,0
865,26,train,"Give me the father of the child, that is a politician, of the spouse of Syeda Shahar Banu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?spouse a dbpedia:Person;
    dbpedia:wife [ dbpedia:hasSpouse ?husband ] .
  ?child a dbpedia:Person;
    dbpedia:parent ?husband ;
    dbpedia:role ""politician"" .
  ?child rdf:type dbpedia:Person.
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
41,18,train,"Give me the party of the work, that is an office holder, of yes and party of Declan Costello.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""yes""@en . <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?party
WHERE {
  ?person a dbpedia:Person;
    foaf:name ""Declan Costello"" .
  ?person dbpedia:polservice ?party .
}",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
978,7,train,"Give me the band member of the professional, that is a musical artist and an artist, in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?name ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Artist; 
    dbpedia:occupation dbpedia:Musician .
  ?person dbpedia:activePeriod dbpedia:BritishRaj.
}
```",2,4,3,2,1,3,2,20,0,0,9007,0,0.0,0
18,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","Given the reasoning above, the SPARQL query to find the professional background of AK Abdul Momen would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?professionalBackground
WHERE {
  ?person a dbpedia:Person;
    dbpedia:role ?professionalBackground .
  ?person rdfs:label ""AK Abdul Momen""@en .
}
```

This query looks for the `role` property of individuals labeled as ""AK Abdul Momen"" in English, which should provide us with his professional background.",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
453,5,train,"Give me the religion of the birth place, that is a country, of William Denning.",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Denning> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/religion> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?countryName ?religion
WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality dbo:United_Kingdom .
  ?person dbpedia:birthPlace ?countryName .
  OPTIONAL { ?countryName rdfs:label ?countryNameLabel }
  FILTER (lang(?countryNameLabel) = ""en"")  # Assuming English language for the country name
  ?religion a dbo:Religion;
    dbo:name ?religionName .
  ?countryName rdf:type dbo:Country .
  ?religion dbpedia:dominantDemography dbo:Christianity .
}
```",2,3,3,2,1,2,2,9,0,0,1,0,0.0,0
573,38,train,"Give me the parent of the author, that is a politician and an office holder, of Exchequer Standards and person decedent at the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Exchequer_Standards> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?parent WHERE {
  ?author a dbpedia:Person; dbpedia:officeHolder yes . 
  ?work dbpedia:author ?author . 
  ?work dbpedia:subject ?topic . 
  ?topic a dbpedia:OfficeHolder . 
  ?author father ?parent .
}",4,7,5,2,2,3,3,71,0,0,2,0,0.0,0
459,9,train,Give me the person born as John Kevin Stitt and governor of Dana Murphy.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?personName ?office
WHERE {
  ?person a dbpedia:Person;
    rdfs:label ?personName .
  ?person dbpedia:powers/dbpedia:officeHolder ?office .
  FILTER (regex(str(?office), ""Dana Murphy"")) 
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
93,5,train,Who is the governor of Bob Bartlett?,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?governor
WHERE {
  ?person dbpedia:name ""Bob Bartlett"";
    dbpedia:office ?office .
  ?office a dbpedia:Office;
    dbpedia:holder ?governor .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
329,4,train,"Give me the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?country
WHERE {
  ?timeZone dbo:hasTimeZones [
    a dbppro:TimeZone;
    dbppro:includesCountry ?country
  ];
  ?timeZone rdfs:label ""Western European Time (WET)"" .
}
```",1,2,2,1,1,2,3,28,0,0,6,0,0.0,0
216,15,train,Give me the office of the mayor of Ros Bates and administration of .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> """"@en . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?mayorOffice ?administration
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Ross-on-Wye""@en .
  ?person dbpedia:isPartOfAdminArea ?administration .
  ?administration rdfs:label ?administrationLabel .
  FILTER (lang(?administrationLabel) = ""en"") .
}",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
47,26,train,"Give me the office of the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office
WHERE {
  ?awardee a dbpedia:Person;
    dbpedia:awardReceived dbpedia:KalingaPravasiSamman .
  ?awardee dbpedia:office ?office .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
715,21,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and leader of Ministry of the Air (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1882-11-14""; # Assuming Abd el-Krim's birth date
    dbpedia:deathDate ""1963-03-06"";
    dbpedia:role dbpedia:MilitaryCommanderInRifWar; # Commander in the Rif War
    ?person rdfs:label ""Abd el-Krim""@en .
  }
  UNION
  {
    ?person a dbpedia:Person;
      dbpedia:birthDate ""1882-11-14""; # Assuming Abd el-Krim's birth date
      dbpedia:role dbpedia:MinistryOfTheAirInSpain; # Leader of the Ministry of the Air in Spain
      dbpedia:deathDate ""1963-03-06"" .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
715,20,train,Give me the commander in the force of Francisco Largo Caballero and commander in Rif War.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander1 ?birthPlace ?deathPlace
WHERE {
  ?commander1 a dbpedia:Person;
    dbpedia:role dbpedia:CommanderInRifWar .
  OPTIONAL { ?commander1 dbpedia:birthPlace ?birthPlace }
  OPTIONAL { ?commander1 dbpedia:deathPlace ?deathPlace }
}

SELECT ?commander2 ?birthPlace ?deathPlace
WHERE {
  ?commander2 a dbpedia:Person;
    dbpedia:role dbpedia:CommanderInForceOf FranciscoLargoCaballero .
  OPTIONAL { ?commander2 dbpedia:birthPlace ?birthPlace }
  OPTIONAL { ?commander2 dbpedia:deathPlace ?deathPlace }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
459,4,train,"Who is the administration, that is a politician, of Brad Henry?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?officeHolder ?politicalParty
WHERE {
  ?person a dbpedia:OfficeHolder;
    dbpedia:office ?office .
  ?office a dbpedia:PoliticalOffice ;
    dbpedia:officeType ""Governor of Oklahoma"" .
  ?officeHolder dbpedia:memberOf ?politicalParty .
}",1,2,2,1,1,2,3,28,0,0,30,0,0.0,0
582,17,train,"Give me the nickname of the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?result . ?v1 <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?teamNickname
WHERE {
  ?player dbpp:hasMember ?playerProfile.
  ?playerProfile a dbo:SportsPerson;
    dbo:nationality ""JP"" .
  ?player dbpp:playsFor ?team .
  ?team rdfs:label ?teamLabel .
  FILTER (lang(?teamLabel) = ""ja"")  # Assuming the team's label is in Japanese
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
456,25,train,"Give me the band of the band, that is a musical artist, of Dean Brody and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Person; dbpedia:name ""AK Abdul Momen"" .
  ?person dbpedia:affiliatedWith ?band .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
281,10,train,"Give me the awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?conflict
WHERE {
  ?person a dbpedia:Person;
    dbpedia:recipientOfAward dbpedia:VictoriaCross ;
    dbpedia:awardedFor dbpedia:Battle_of_Arras .
}
```",2,3,3,2,1,2,3,28,0,0,656,0,0.0,0
874,13,train,"Give me the band of the writer, that is an artist and a musical artist, of the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?band
WHERE {
  ?work a dbpedia:MusicAlbum;
    dbpedia:artist ?artist .
  ?artist a dbpedia:MusicArtist;
    rdfs:label ""Horace Andy""@en .
  ?work dbpedia:genre dbpedia:Reggae .
  ?band a dbpedia:Band;
    dbpedia:name ?bandName .
  ?artist dbpedia:band ?band .
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
41,16,train,"Give me the party of the work, that is an office holder, of yes and party of Mark Durkan.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ""yes""@en . ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Mark_Durkan> <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?party
WHERE {
  ?person a dbpedia:OfficeHolder;
    dbpedia:memberOfParty ?party .
  ?person rdfs:label ""Mark Durkan""@en .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
508,14,train,"Give me the birthplace of the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""Hu Yukun""@en .
  ?person dbpedia:conflict Second_Sino-Japanese_War .
}",3,6,4,3,1,3,2,20,0,0,3,0,0.0,0
47,10,train,Give me the office of Suvendu Adhikari and office of Ajoy Mukherjee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office1 ?office2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthPlace ""Kolkata"" .
  ?person1 dbpedia:office ?office1 .
  
  ?person2 a dbpedia:Person;
    dbpedia:birthPlace ""Kolkata"" .
  ?person2 dbpedia:office ?office2 .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
93,12,train,Give me the death place of the governor of Bob Bartlett and capital of Alaska.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Bob_Bartlett> <http://dbpedia.org/property/governor> ?v0 . <http://dbpedia.org/resource/Alaska> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?deathPlace ?capital
WHERE {
  ?governor a dbpedia:Person;
    dbpedia:officeHolderRole dbo:GovernorOf ; 
    dbpedia:officeHeld db:Alaska .
  ?governor dbpedia:birthPlace ?birthPlace .
  ?governor dbpedia:deathPlace ?deathPlace .
  ?capital a dbo:CapitalOf ;
    dbo:locatedIn db:Alaska .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
955,10,train,"Who is the band member, that is a musical artist and an artist, of the reference, that is a band and a group and an organisation, to Street Dogs?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Street Dogs""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?member
WHERE {
  ?band dbpedia:hasMember ?member .
  ?member a dbpedia:MusicalArtist .
  ?member a dbpedia:Artist .
  ?band rdfs:label ""Street Dogs"" . 
}",2,7,3,2,1,3,2,20,0,0,2,0,0.0,0
465,5,train,Give me the parent of Elizabeth of Austria (1526–1545).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1526""^^xsd:gYear;
    dbpedia:deathDate ""1545""^^xsd:gYear;
    dbpedia:father ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
329,2,train,Give me the entity in Northern Ireland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"The SPARQL query to find an entity in Northern Ireland would look like this:

```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity
WHERE {
  ?entity a dbo:Organization;
    dbo:headquarterLocation dbpedia:CountryRegion ;
    dbo:country dbpedia:Northern_Ireland .
}
```",1,1,2,1,1,2,3,28,0,0,846,0,0.0,0
933,9,train,Give me the band of Mike Elliott (saxophonist) and reference to Alan Warner.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName ?alanWarnerReference
WHERE {
  ?mikeElliott a dbpedia:Person;
    dbpedia:occupation rdf:type [ rdf:value ""Musician"" ] .
  ?mikeElliott dbpedia:bandMember ?band .
  ?band rdfs:label ?bandName .
  
  ?alanWarner dbpedia:reference ?alanWarnerReference .
  
  FILTER (STRSTARTS(?bandName, ""Radiohead"") OR STRSTARTS(?bandName, ""The Divine Comedy""))
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
917,4,train,"Who is the child, that is a royalty, of Kamehameha IV?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?parent a dbpedia:Monarch; dbpedia:name ""Kamehameha IV"" .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent;
    dbpedia:isRoyalty true .
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
933,36,train,"Give me the band of the band, that is a group and a band and an organisation, of the person born, that is a musical artist, on 1947-04-21 and band of Mike Elliott (saxophonist).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Mike Elliott""@en;
    dbpedia:role dbpedia:Musician ;
    dbpedia:band ?band .
}",4,8,5,3,2,3,3,71,0,0,3,0,0.0,0
715,36,train,"Give me the commander in Rif War and leader of the office, that is a government agency and an organisation, of the reference to Carlos Franco Iribarnegaray.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?roleInRifWar ?militaryPosition
WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasRoleInConflict dbpedia:Rif_War ;
    dbpedia:conflictParty dbpedia:Spanish_Military .
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@es.
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
865,20,train,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz and native of British Raj.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Abu Ahmad Abdul Hafiz"" .
  ?person dbpedia:birthPlace <http://dbpedia.org/property/birthPlace#British_Raj> .
  ?child a dbpedia:Person;
    dbpedia:parent ?father .
  ?child dbpedia:name ""Abu Ahmad Abdul Hafiz"" .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
459,7,train,Give me the person born as John Kevin Stitt and governor of Oklahoma.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?governorName ?office
WHERE {
  ?governor a dbpedia:Person;
    dbpedia:birthPlace ""Oklahoma, United States"";
    dbpedia:officeHolderRole dbpedia:GovernorOf ;
    dbpedia:office ?office .
  ?office rdfs:label ""Governor of Oklahoma"" .
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
281,18,train,Give me the awardee of the award of Alfred Warden and awardee of Medal bar.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedBy dbpedia:BritishArmedForces ;
    dbpedia:award dbpedia:AlfredWardenAward .
  ?person a dbpedia:Person;
    dbpedia:awardedBy dbpedia:BritishArmedForces ;
    dbpedia:award dbpedia:MedalBar .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
917,13,train,Give me the child of the father of Keʻelikōlani.,SELECT ?result WHERE { <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person a dbpedia:Person;
    dbpedia:father dbpedia:High_Chief_Kekūhaupiʻo .
  ?person dbpedia:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
579,9,train,"Give me the residence, that is English and a settlement, of the resident of Scotland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?residence
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace dbpedia:Scotland .
  ?person dwc:hasResidence dbo:located_in dbpedia:India .
  ?person a dbo:HistoricalPerson ;
    dbo:timePeriod ""1858-1947"" .
}
```",2,4,3,2,1,3,2,20,0,0,8,0,0.0,0
865,31,train,"Give me the native of the residence, that is a country, of the person decedent at Patna and father of AK Abdul Momen.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?father a dbpedia:Person;
    dbpedia:nationality dbpedia:India .
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?father ns:fatherOf ?person .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
456,12,train,Give me the band of Alan Doyle and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName ?profession
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Alan Doyle""@en .
  ?person rdfs:memberOf ?band .
  ?band a dbpedia:Band .
  ?person dbpedia:occupation ?profession .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
926,1,train,Give me the successor of Mustafa III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?successor
WHERE {
  ?sultan a dbpedia:Monarch;
    dbpedia:monarchyStart ""1757"";
    dbpedia:monarchyEnd ""1774"".
  ?sultan rdfs:label ""Mustafa III""@en.
  ?successor a dbpedia:Person;
    dbpedia:office ""Sultan of the Ottoman Empire"";
    dbpedia:successor ?this_sultan .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
124,27,train,"Give me the military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?militaryForce
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1850-06-24""^^xsd:date;
    dbpedia:role dbpedia:Patriot; # Considering AK Abdul Momen's role as a patriot in the Indian independence movement
    dbpedia:conflict dbpedia:Indian_R Rebellion_1857 . # Focusing on his involvement in the Indian Rebellion of 1857
  ?person dbpedia:deathDate ""1945-03-27""^^xsd:date; # Considering a reasonable death date for someone born in 1850 and involved in WWII era events
  ?person rdfs:label ""AK Abdul Momen""@en . # Ensuring we are referring to the correct person
}
```",3,5,4,3,1,3,3,71,0,0,1190,0,0.0,0
47,20,train,Give me the office of the awardee of Banga Bhushan and office of Suvendu Adhikari.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardeeOffice ?adhikariOffice
WHERE {
  ?person a dbpedia:Person;
    dbpedia:office ?awardeeOffice .
  ?person rdfs:label ""Suvendu Adhikari""@en .
  ?person a dbpedia:Person;
    dbpedia:office ?adhikariOffice .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
130,12,train,"Give me the entity in the administration, that is American, of  and figure known as Vanderbilt Commodores.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> """"@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/state> ?v0 . ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Vanderbilt_Commodores> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?americanAdmin
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""United States"";
    rdfs:label ""Cornelius Vanderbilt""@en .
  ?person dbpedia:associatedOrganization dbpedia:Vanderbilt_University .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
926,30,train,"Give me the child of the father, that is a royalty, of Mustafa III and successor of Mustafa III and father of Mahmud II.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person a dbpedia:Monarch;
    dbpedia:monarchyStartYear ""1774"";
    dbpedia:monarchyEndYear ""1798"";
    dbpedia:father ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Mustafa III"" .
  ?child a dbpedia:Person;
    dbpedia:birthDate ?birthDate .
    dbpedia:parent ?parent .
    dbpedia:monarchyStartYear ?startYear .
    dbpedia:monarchyEndYear ?endYear
  FILTER (?startYear = ?endYear)
}",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
124,25,train,"Give me the military force of Battle of Tamai and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?militaryForce1 ?militaryForce2
WHERE {
  ?battle a dbpedia:Event;
    dbpedia:type ""conflict""; # Battle of Tamai is a conflict
    dbpedia:participatingSides ?militaryForce1 .
  ?kitchener a dbpedia:Person;
    dbpedia:rank ""1st Earl Kitchener"";
    dbpedia:militaryBranch ?militaryForce2 .
}",3,5,4,2,2,3,3,71,0,0,4,0,0.0,0
326,3,train,"Give me the birthplace, that is a state and British, of David Jessel.",SELECT ?result WHERE { <http://dbpedia.org/resource/David_Jessel> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""David Jessel""@en .
  ?person dbpedia:office ""Governor of Madras"" .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
645,38,train,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?officeLeader ?militaryForce
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1882-10-28""^^xsd:date; 
    dbpedia:deathDate ""1943-07-18""^^xsd:date;
    dbpedia:role dbpedia:Polska_Porfiria_1935; 
    dbpedia:memberOf dbpedia:Spanish_Civil_War.

  ?militaryConflict a dbpedia:Event;
    dbpedia:type dbpedia:Military_conflict;
    dbpedia:name ""Spanish_Civil_War""@en.

  ?person2 a dbpedia:Person;
    dbpedia:role dbpedia:Prime_Minister_of_Spain; 
    dbpedia:memberOf ?militaryConflict.

  ?officeLeader rdfs:label ?officeLabel. 
  ?militaryForce rdfs:label ?militaryLabel.
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
47,14,train,Give me the office of the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardeeOffice
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedWith dbpedia:P padma_vibhushan ;
    dbpedia:office ?awardeeOffice .
}",2,2,3,2,1,3,3,71,0,0,77,0,0.0,0
445,26,train,Give me the death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen""@en .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
}",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
216,7,train,Give me the administration of  and office of Tim Nicholls.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> """"@en . <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office ?administration
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Tim Nicholls"" .
  ?person dbpedia:office ?office .
  ?office rdfs:label ?administration .
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
192,11,train,"Give me the child of Mary of Hungary, Queen of Naples and spouse of the spouse, that is a royalty, of Charles Martel of Anjou.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_of_Hungary,_Queen_of_Naples> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:sibling [ dbpedia:hasChild ?child ] .
  ?child a dbpedia:Person;
    dbpedia:birthDate ""before 1348""^^xsd:date; 
    dbpedia:deathDate ""after 1404""^^xsd:date; 
    dbpedia:parent ?parent.
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
874,2,train,"Give me the work, that is a work, of Horace Andy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Horace_Andy> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?work
WHERE {
  ?work a dbpedia:Work;
    dbpedia:creator [dbo:hasName ""Horace Andy""] .
}",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
773,36,train,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria and spouse of Louis the German.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandparent
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:isOfficeHolder true;
    dbpedia:isRoyalty true .
  ?child a dbpedia:Person;
    dbpedia:hasParent ?grandparent .
  ?child a dbpedia:Royalty .
}",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
433,23,train,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as the persona of Paul Chambers.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?associated_artist
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Paul Chambers"" .
  ?person dbpedia:musicalArtist ?associated_artist .
}",3,5,4,3,1,3,3,71,0,0,31,0,0.0,0
41,13,train,"Give me the party of Declan Costello and party of the leader, that is a politician and an office holder, of 2005 Castlereagh Borough Council election.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2005_Castlereagh_Borough_Council_election> <http://dbpedia.org/property/leader> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?personName ?party
WHERE {
  ?person a dbpedia:OfficeHolder;
    dbpedia:office ?office .
  ?office rdfs:label ""2005 Castlereagh Borough Council election"" .
  ?person dbpedia:memberOf ?party .
}",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
281,1,train,Give me the awardee of Medal bar.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedBy dbpedia:MedalBar .
  OPTIONAL { 
    ?person dbpedia:deathPlace ?deathPlace .
  }
  FILTER (lang(?name) = ""en"" )  # Assuming we are interested in English awardees
}
```",1,1,2,1,1,2,3,28,0,0,656,0,0.0,0
465,11,train,Give me the successor of the child of Alfonso I d'Este.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_I_d'Este> . ?v0 <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?father .
  ?father a dbpedia:Person;
    rdfs:label ""Alfonso I d'Este""@it;
    dbpedia:monarchTitle ""Duke of Ferrara"" .
  ?child dbpedia:hasSuccessor ?successor .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
124,29,train,"Give me the commander in Mahdist War and military force of Battle of Atbara and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander ?militaryForce ?societalEvent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Frank Rhodes""@en .
  ?person dbpedia:serveInMilitaryUnit ?militaryForce .
  ?militaryForce rdfs:label ?militaryLabel .
  ?event a dbpedia:Event;
    dbpedia:name ""Mahdist War""@en .
  ?battle a dbpedia:Battle;
    dbpedia:name ""Battle of Atbara""@en .
  ?person dbpedia:participatedIn ?battle .
  ?battle dbpedia:isPartOf ?event .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
130,10,train,"Give me the administration, that is American, of the award of Živko Ključe.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v0 . },"To extract this information from DBpedia using SPARQL, we would need to query for the Živko Ključe Award and its administering body. However, since DBpedia does not directly link awards to their administering bodies in a straightforward manner, we might need to infer this information through related properties.

Here's a simplified approach assuming there is a direct property linking awards to their administrators:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?administeringAdmin
WHERE {
  ?award dbpedia:hasAdministeringOrganization ?administeringAdmin .
  ?award rdfs:label ""Živko Ključe Award"" .
}
```

This query looks for the administering organization of an award labeled ""Živko Ključe Award"". However, if such a direct property does not exist, we might need to use more complex reasoning or inferencing based on other properties like location or country.",2,3,3,2,1,3,2,20,0,0,43,0,0.0,0
443,3,train,Give me the award of William Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?award
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""William Shepherd""@en .
  ?person rdfs:label ?award .
}",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
124,30,train,"Give me the military force of Battle of Tamai and commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?militaryForce ?commander 
WHERE { 
  ?battle a dbpedia:Event; dbpedia:type ""conflict"" ; dbpedia:name ""Battle of Tamai"" . 
  ?person a dbpedia:Person; dbpedia:name ""AK Abdul Momen"" . 
  ?battle dbpedia:partOf ?war . 
  ?war a dbpedia:MilitaryConflict; dbpedia:conflict ""Mahdist War"" . 
  ?person dbpedia:commandMilitaryIn ?militaryForce . 
}",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
216,0,train,Give me the office of Tim Nicholls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office
WHERE {
  ?person dbpedia:hasOffice ?office .
  ?person dbpedia:name ""Tim Nicholls"" .
}",1,1,2,1,1,2,3,28,0,0,15,0,0.0,0
892,12,train,Give me the entity in Province of Reggio Emilia and landmark at elevation of 58.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?landmark
WHERE {
  ?landmark a dbpedia-owl:Landmark ;
            dbpedia-owl:elevationInMeters 58 .
  ?landmark geonames:locatedIn dbpedia:Province_of_Reggio_Emilia .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
102,7,train,Give me the manager of the player in Ellie Roebuck.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?manager
WHERE {
  ?player a dbpedia:Athlete;
    dbpedia:team ?team .
  ?team dbpedia:manager ?manager .
  ?player rdfs:label ""Ellie Roebuck"" .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
582,12,train,Give me the player in Kazuaki Nagasawa and figure known as --10-19.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?player WHERE {
  ?player a dbo:Wrestler;
    rdfs:label ""Kazuaki Nagasawa""@ja;
    dbo:ringName ?ringName .
  ?ringName ns:hasValue ""--10-19"" .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
216,25,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in Mario Ivanković.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?managerName ?team
WHERE {
  ?manager a dbpedia:Person;
    dbpedia:sportManager yes;
    dbpedia:footballManager yes;
    dbpedia:role dbpedia:SoccerPlayer .
  ?manager dbpedia:birthDate ""1983-12-20"" .
  ?player a dbpedia:Person; 
    dbpedia:name ""Mario Ivanković"" .
  ?manager dbpedia:playedWith ?player .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
917,37,train,"Give me the child of the father of the spouse, that is a royalty, of Leleiohoku I and child of Kekūanāoʻa.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child
WHERE {
  ?spouse a dbpedia:Person;
    dbpedia:spouseOf dbpedia:Leleiohoku_I .
  ?father a dbpedia:Person;
    dbpedia:parentOf ?spouse .
  ?child a dbpedia:Person;
    dbpedia:childOfBoth ?father and dbpedia:Kekūanāoʻa .
}
```",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
459,0,train,Give me the governor of Oklahoma.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?governor
WHERE {
  ?governor a dbpedia:OfficeHolder;
    dbpedia:office dbpedia:Oklahoma_governor .
}",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
417,11,train,"Give me the spouse of the parent, that is a royalty, of Count Ingolf of Rosenborg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalParentSpouse
WHERE {
  ?count_ingolf a dbpedia:Person;
    dbpedia:birthDate ""1589"";
    dbpedia:deathDate ""1647"";
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ?parentLabel .
  FILTER (regex(?parentLabel, 'King') || regex(?parentLabel, 'Queen')) ; // Check for royal parent
  ?count_ingolf dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:spouse ?royalParentSpouse .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
236,13,train,"Give me the party member of the administration, that is an organisation, of the person decedent, that is a politician and an office holder, at Quincy, Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?party
WHERE {
  ?politician a dbpedia:Person;
    dbpedia:officeHolder ?office .
  ?office rdfs:label ""Quincy, Massachusetts"" .
  ?politician dbpedia:presidentOf ?office .
  ?politician dbpedia:politicalParty ?party .
}",3,6,4,3,1,3,2,20,0,0,269,0,0.0,0
573,6,train,"Give me the residence, that is a settlement, of William J. Phelan.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?residence WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality dbpedia:Canada ;
    dbpedia:birthPlace ?birthPlace .
  ?birthPlace a dbpedia:Settlement.
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
926,15,train,Give me the father of the spouse of Neşerek Kadın.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?fatherOfSpouse
WHERE {
  ?spouse a dbpedia:Person;
    dbpedia:sibling [ dbpedia:hasSibling ?neşerek_kadın ] .
  ?neşerek_kadın a dbpedia:Person;
    dbpedia:name ""Neşerek Kadın"" .
  ?spouse dbpedia:spouseOf ?neşerek_kadın .
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
606,8,train,Give me the birthplace of the alumnus of University of Pennsylvania.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:alumniOf dbpedia:University_of_Pennsylvania .
  ?person dbpedia:birthPlace ?birthPlace .
}",2,2,3,2,1,3,2,20,0,0,598,0,0.0,0
216,37,train,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović and team of Ognjen Vukojević.",SELECT ?result WHERE { <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player ?coachOrganization
WHERE {
  ?player a dbpedia:SoccerPlayer;
    dbpedia:hasClub ?soccerClub .
  ?soccerClub a dbpedia:FootballClub .
  
  ?player dbpedia:isCoachOf ?coachOrganization .
  ?coachOrganization a dbpedia:SportsClub ;
    dbpedia:hasTeamMember ?player .
  
  ?player rdfs:label ""Džemal Berberović"" .
  ?player dbpedia:birthPlace ""Sarajevo, Bosnia and Herzegovina"" .
  ?player dbpedia:deathPlace ""Zagreb, Croatia"" .
  
  ?teamMember a dbpedia:SoccerPlayer;
    dbpedia:hasClub ?soccerClub .
  ?teamMember rdfs:label ""Ognjen Vukojević"" .
  ?soccerClub a dbpedia:FootballClub .
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
443,8,train,Give me the landmark at elevation of the award of William Shepherd.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v1 . <http://dbpedia.org/resource/William_Shepherd> <http://dbpedia.org/property/awards> ?v1 . },PREFIX ns1: <http://dbpedia.org/ontology/>PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?elevation WHERE { ns1:NobelPrizeInPhysicsAward ns1:awardedAt ?location . ?location a ns1:Building ; rdfs:label ?name ; ns1:elevation ?elevation . },2,2,3,2,1,2,3,28,0,0,349,0,0.0,0
573,28,train,"Give me the parent of John Quincy Adams and person decedent at Quincy, Massachusetts and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parentName ?region
WHERE {
  ?john_quincy_adams a dbpedia:Person;
    dbpedia:birthPlace dbpedia:Townsville,_Massachusetts .
  ?john_quincy_adams dbpedia:father ?parentName .
  ?charlie_baker a dbpedia:Person;
    dbpedia:deathPlace dbpedia:Quincy,_Massachusetts .
  ?charlie_baker dbpedia:administrativeRegion ?region
}
```",4,5,5,2,3,3,3,71,0,0,2,0,0.0,0
465,8,train,"Give me the child, that is a royalty, of Anne of Brittany.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?child a dbpedia:Monarch .
  ?parent dbpedia:firstName ""Anne"" ;
           dbpedia:lastName ""of Brittany"" .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
456,36,train,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and spouse of Danielle Spencer (Australian actress).",SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Alan Doyle""@en .
  ?person a dbpedia:MusicalArtist .
  ?spouse a dbpedia:Person;
    dbpedia:name ""Danielle Spencer""@en .
  ?person dbpedia:isSpouseOf ?spouse .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
926,19,train,Give me the successor of Mustafa III and father of the father of Abdulaziz.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . },{sparql_query},3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
83,5,train,Who is the governor of Dilma Rousseff?,SELECT ?result WHERE { <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?result . },"Given that we are looking for the governor of Dilma Rousseff during her presidency and considering she served from 2011 to 2016, we need to find the governor of the Federal District during this period. The SPARQL query to retrieve this information would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor
WHERE {
  ?president a dbpedia:Person;
    dbpedia:officeHolder dbpedia:President_of_Brazil ;
    dbpedia:termStarts ""2011-01-01T00:00:00""^^xsd:date .
  ?governor a dbpedia:OfficeHolder;
    dbpedia:office dbpedia:Governor_of_Federal_District ;
    dbpedia:officeStarts ""2011-01-01T00:00:00""^^xsd:date .
  ?president dbpedia:birthPlace ?birthPlace .
  ?governor dbpedia:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
507,12,train,"Give me the director of Entertaining Mr Sloane (film) and professional in Film director, television director.","SELECT ?result WHERE { <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?director
WHERE {
  ?film a dbpedia:Film;
    dbpedia:productionCompany ?prodCo .
  ?actor dbpedia:roleInFilm ?role .
  ?actor rdfs:label ?actorLabel .
  ?prodCo rdfs:label ?prodCoLabel .
  FILTER (regex(str(?actorLabel), ""Mr Sloane"")) .
  ?film dbpedia:director ?director .
  ?director a dbpedia:Person;
    dbpedia:occupation ?occupation .
  ?occupation rdfs:label ?occupationLabel .
  FILTER (str(?occupationLabel) LIKE ""%Film director%"" OR str(?occupationLabel) LIKE ""%Television director%"")
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
892,38,train,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy) and landmark at elevation of the award of Anna Ishii.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?entity WHERE {
  ?entity a dbpedia:Region ; dbpedia:partOfCountry dbpedia:Italy .
  ?entity a dbpedia:Settlement ; dbpedia:administers dbpedia:DemocraticPartyItalia .
  ?entity dbpedia:hasLandmark ?landmark .
  ?landmark rdfs:label ?awardName .
  ?awardName owl:sameAs [ a dbpedia:NamedIndividual; dbpedia:awardedTo dbpedia:IsaacBashevisSinger ; dbpedia:year 1978 ] .
}",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
18,8,train,Give me the professional in the award of Ana María Sánchez de Ríos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ana_María_Sánchez_de_Ríos> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?professional
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Ana María Sánchez de Ríos"" .
  ?person dbpedia:awardedPrize dbpedia:PremioNacionalDeLaCultura .
  ?person dbpedia:awardDetails ?awardInfo .
  ?awardInfo rdfs:label ?professional .
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
47,39,train,"Give me the office of the awardee of the entity, that is an award, in India and office of Bidesh Ranjan Bose.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardeeOffice ?awardOffice
WHERE {
  ?award a dbpedia:Award ;
    dbpedia:awardedTo ?awardee .
  ?awardee a dbpedia:Person;
    dbpedia:name ""Bidesh Ranjan Bose"" .
  ?awardOffice a dbpedia:OfficeLocation .
  ?awardee dbpedia:residence ?awardeeOffice .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
267,10,train,Give me the birth date of the reference to Dan Cathy.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Dan Cathy""@en . ?v0 <http://dbpedia.org/ontology/birthDate> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthDate
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Dan Cathy"";
    dbpedia:birthDate ?birthDate .
}",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
874,1,train,Give me the band of Robert Hart (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Robert_Hart_(musician)> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Musician;
    dbpedia:band ?band .
  ?person rdfs:label ""Robert Hart""@en .
}",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
456,38,train,"Give me the band of the band, that is a musical artist, of Dean Brody and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Dean_Brody> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"Given that ""The Shadow"" is not a separate entity with its own band members listed in DBpedia, we cannot construct a SPARQL query to directly identify a band associated with ""The Shadow."" Instead, we can query for information about Dean Brody and his alter ego:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?name ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ?name .
  OPTIONAL { ?person dbpedia:birthPlace ?birthPlace }
  OPTIONAL { ?person dbpedia:deathPlace ?deathPlace }
  FILTER (?name = ""Dean Brody"" || ?name = ""The Shadow"")
}
```

This query will return information about individuals named Dean Brody and The Shadow, including their birthplaces and death places if available.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
281,2,train,Give me the awardee of Volunteer Decoration.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee
WHERE {
  ?award dbpedia:awardedTo ?awardee .
  ?award rdf:type dbpedia:Decoration .
  ?award label ""Volunteer Decoration"" .
}",1,1,2,1,1,2,3,28,0,0,12,0,0.0,0
976,0,train,Give me the office of Mustafa Şentop.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia-core: <http://dbpedia.org/ontology/>

SELECT ?office
WHERE {
  ?person a dbpedia-core:OfficeHolder ;
            dbpedia-core:officeName ?office .
  ?person rdf:type foaf:Person;
            dbpedia:birthPlace ""İzmir, Turkey"";
            dbpedia:deathPlace ""Ankara, Turkey"" .
  ?office rdfs:label ""Prime Minister of Turkey"" .
}",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
865,12,train,Give me the father of Shahla Khatun and father of AK Abdul Momen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shahla_Khatun> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?father WHERE { ?person a dbpedia:Person; dbpedia:parent ?person . [] rdf:type dbpedia:Person ; rdfs:label ?name . FILTER (lang(?name) = 'en') },2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
955,7,train,Give me the band of the writer of Don't Forget Your Roots (album).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?v1 . },"Given that the album ""Don't Forget Your Roots"" is likely related to Bob Dylan (a famous writer and musician), we can use the DBpedia ontology to query for bands associated with Bob Dylan. The SPARQL query would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band 
WHERE {
  ?artist a dbpedia:Artist;
    dbpedia:associatedBand ?band .
  ?artist rdfs:label ""Bob Dylan"" .
}
```",2,2,3,2,1,3,2,20,0,0,18,0,0.0,0
456,19,train,Give me the professional in  and spouse of the actor of Pacific Drive.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?actorName ?actorProfession ?spouse
WHERE {
  ?actor dbpedia:role [ dbpedia:hasActor ?actorName ] .
  ?actor a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?actor a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  OPTIONAL { ?actor dbpedia:spouse ?spouse }
}
LIMIT 1",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
926,0,train,Give me the father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father
WHERE {
  dbpedia:Sultan Mahmud II a dbpedia:Person;
    dbpedia:father ?father .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
456,37,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television) and band of Alan Doyle.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?alterEgo
WHERE {
  ?person a dbpedia:Person;
    dbpedia:alterEgo ""The Shadow"" .
  ?person dbpedia:bandMemberOfAlanDoyle .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
433,20,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro and associated musical artist of Paul Chambers.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?musicalArtist
WHERE {
  ?scott_lafaro a dbpedia:Person;
    dbpedia:musicalArtist ?musicalArtist .
  ?paul_chambers a dbpedia:Person;
    dbpedia:musicalArtist ?musicalArtist .
  ?musicalArtist rdfs:label ""Common Musical Artist""@en.
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
791,23,train,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","To extract this information from DBpedia, we can use the following SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?wifeSpouseName WHERE {
  ?emperor a dbpedia:Person;
    dbpedia:monarchTitle ""Emperor of Japan"";
    dbpedia:reignStart ""1168"";
    dbpedia:reignEnd ""1180"".
  
  ?emperor dbpedia:hasSpouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:monarchTitle ?royaltyTitle .
  
  ?royaltyTitle rdfs:label ""Queen"" # Assuming Empress Toba would be equivalent to a queen in this context.
}
```

This query searches for an emperor starting his reign in 1168 and ending in 1180, then finds the spouse of that emperor and checks if the spouse's title is labeled as ""Queen"".",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
933,7,train,"Who is the person born, that is a musical artist, on 1947-04-21?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1947-04-21""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?personName ?birthDate ?occupation
WHERE {
  ?person rdf:type dbo:Person ;
    dbpprop:birthDate ?birthDate .
  ?person dbo:musicGenre ""Music"" .
  ?person rdf:type dbo:Artist .
  FILTER (?birthDateSTR = ""1947-04-21"") .
}",1,2,2,1,1,3,3,71,0,0,4,0,0.0,0
433,11,train,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?associated_artist
WHERE {
  ?person a dbpedia:Person;
    dbpedia:musicalArtist ?musical_artist .
  ?person a dbpedia:Person;
    dbpedia:artist ?artist .
  FILTER (??musician AND ??artist)
}
```",2,4,3,2,1,3,3,71,0,0,31,0,0.0,0
216,34,train,"Give me the player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21 and team of Ognjen Vukojević.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/coach> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?coachClub WHERE {
  ?club a dbpedia:SportsOrganization;
    dbpedia:hasCoach ?coach .
  ?coach foaf:name ?coachName .
  ?coach rdfs:label ""Croatia U21 coach"" . # Placeholder for actual coach name
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
124,37,train,"Give me the military force of Battle of Atbara and military force of the war, that is an event and a military conflict and a societal event, of the awardee of British South Africa Company Medal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/British_South_Africa_Company_Medal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee ?battle ?militaryForce
WHERE {
  ?awardee a dbpedia:Person;
    dbpedia:awardedMedal dbpedia:BritishSouthAfricaCompanyMedal .
  ?awardee dbpedia:conflict dbpedia:FirstBoerWar .
  ?awardee dbpedia:conflict dbpedia:SecondBoerWar .
  ?battle a dbpedia:Event;
    dbpedia:militaryConflict ?militaryForce .
  ?awardee dbpedia:participatedIn ?battle .
}
```",4,7,5,3,2,3,3,71,0,0,7,0,0.0,0
573,34,train,"Give me the parent of John Quincy Adams and person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlaceOfCharlieParent ?regionOfBirthCharlie
WHERE {
  ?john_quincy_adamsParents [ a dbpedia:Family; dbpedia:member ?john_quincy_adams ] .
  ?john_quincy_adamsParents includes { ?john_quincy_adamsFather ?john_quincy_adamsMother } .
  ?john_quincy_adamsFather <http://dbpedia.org/property/name> ""John Adams"" .
  ?charlie_baker [ a dbpedia:Person; dbpedia:birthPlace ?birthPlaceOfCharlie ] .
  ?charlie_baker dbpedia:deathPlace <empty> . # death place is not needed
  ?birthPlaceOfCharlieParent [ a dbpedia:Region; dbpedia:name ""Melbourne"" ] .
  ?charlie_baker rdfs:seeAlso <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
433,9,train,Give me the associated musical artist of Paul Chambers and associated musical artist of Bill Evans.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?associatedArtist1 ?associatedArtist2
WHERE {
  ?paulChambers a dbpedia:Person;
    dbpedia:associatedBandMember ?associatedArtist1 .
  ?billEvans a dbpedia:Person;
    dbpedia:associatedBandMember ?associatedArtist2 .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
935,2,train,"Give me the award, that is an award, of Syed Sohail Hussain Naqvi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?award
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""India"";
    dbpedia:office dbpedia:National_Assembly_of_Pakistan ;
    dbpedia:awardReceived ?award .
}",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
888,10,train,Give me the award of the commander in 2022 Ukrainian eastern counteroffensive.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Ukrainian_eastern_counteroffensive> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?award WHERE {
  ?event dbpedia:Event;
    dbpedia:startDate ""2022-03-24""^^xsd:date; # Assuming the start date of the counteroffensive
    dbpedia:endDate ""2022-12-31""^^xsd:date; # Assuming the end date of the counteroffensive
  ?commander dbpedia:Person;
    dbpedia:role dbpedia:CommanderIn; # Role of commander in the event
    dbpedia:award ?award .
  ?event dbpedia:participatedBy ?commander .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
987,32,train,"Give me the birth place of the actor of All for Free and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actorBirthPlace ?bandBirthPlace
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:birthPlace ?actorBirthPlace .
  ?actor dbpedia:role dbpedia:Actor .
  ?band a dbpedia:Band;
    dbpedia:genre dbpedia:Rock music ;
    dbpedia:member ?actor .
  ?actor rdfs:label ""Šako Polumenta""@sv .
}
```",4,6,5,2,2,3,3,71,0,0,4,0,0.0,0
456,24,train,Give me the band of Alan Doyle and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName ?alterEgo
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Alan Doyle"" .
  ?person rdfs:label ?bandName .
  ?person foaf:alterEgo ?alterEgo .
  ?alterEgo a dbpedia:MusicCharacter .
  ?alterEgo rdfs:label ?alterEgoLabel
  FILTER (lang(?alterEgoLabel) = ""en"" )
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
965,33,train,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24 and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Prince Louis of Battenberg"";
    dbpedia:birthDate ""1854-05-24"" .
  ?person wdt:P31 wd:Q12297.
  ?person rdfs:spouse ?wife.
  ?wife a dbpedia:Person;
    dbpedia:name ""Princess Victoria of Hesse and by Rhine"" .
  ?child a dbpedia:Person;
    dbpedia:parent ?person;
    dbpedia:occupation dbpedia:Politician .
}
```

This query will help us identify the child who meets the criteria.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
987,28,train,"Give me the birth place of Moamer Kasumović and entity in Montenegro and birth place of the band, that is an artist and a musical artist, of Šako Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for Moamer Kasumović's birth place
SELECT ?birthPlace WHERE {
  ?person rdf:type dbpedia:Person;
    dbpedia:name ""Moamer Kasumović""@en .
  ?person dbpedia:birthPlace ?birthPlace .
}

# Query for an entity in Montenegro
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
SELECT ?entity WHERE {
  ?entity a dbpedia:Location;
    geo:isInCountry ""Montenegro""@en .
}

# Query for Šako Polumenta's band information and his birth place as a musical artist
SELECT ?birthPlace WHERE {
  ?person rdf:type dbpedia:Person;
    dbpedia:name ""Šako Polumenta""@en .
  ?person rdfs:label ?bandLabel . # Assuming there is a label property for bands
  ?band a dbpedia:MusicBand;
    dbpedia:artist ?artist .
  ?artist dbpedia:birthPlace ?birthPlace .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
18,7,train,"Give me the alumnus of Marymount College, Tarrytown and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?personName ?profession
WHERE {
  ?person a dbpedia:Person;
    dbpedia:alumniOf dbpedia:Marymount_College_Tarrytown .
  ?person a dbpedia:Person;
    dbpedia:occupation ?profession .
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
417,5,train,"Who is the leader, that is a royalty, of Colony of Greenland?",SELECT ?result WHERE { <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?monarch
WHERE {
  ?monarch a dbpedia:Monarch;
    dbpedia:reignStart [ strdt before ""1750-01-01"" ].
  OPTIONAL { 
    ?monarch dbpedia:deathPlace [ strdt ""Denmark"" ] .
  }
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
124,14,train,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?militaryForce
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1850-06-24"" .
  ?person rdfs:label ""Herbert Kitchener, 1st Earl Kitchener""@en .
  ?person dbpedia:role ""Secretary of State for War (United Kingdom)"" .
  ?person a dbpedia:MilitaryPerson;
    dbpedia:militaryForce ?militaryForce .
}
```",2,4,3,2,1,3,3,71,0,0,1190,0,0.0,0
465,7,train,"Give me the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthParent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthParent ?birthParent .
  ?person rdfs:label ""Charles Orlando, Dauphin of France"" .
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
892,36,train,"Give me the entity in Italy and entity in the administration, that is Italian and a region and a settlement and an administrative region, of the party, that is a political party and an organisation, of Andrea Cozzolino.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Andrea_Cozzolino> <http://dbpedia.org/ontology/party> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party ?region
WHERE {
  ?person a dbpedia:Person;
    foaf:name ""Andrea Cozzolino"" .
  ?person dbpedia:presentsFor dbpedia:PoliticalParty ;
    dbpedia:politicalParty ?party .
  ?party rdfs:label ?partyLabel .
  ?region a dbpedia:AdministrativeDivision, dbpedia:Settlement ;
    dbpedia:country ""Italy"" .
  ?party dbpedia:isBasedIn ?region .
}
```",4,10,5,3,2,3,3,71,0,0,587,0,0.0,0
773,0,train,Give me the spouse of Louis the German.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Louis the German""@en;
    dbpedia:birthPlace ""East Francia"";
    dbpedia:deathPlace ""Eichstätt, Bavaria"";
    dbpedia:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
839,25,train,"Give me the band of the band, that is a musical artist, of Charlie Huhn and band of Peter Schorowsky.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Charlie_Huhn> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?artist a dbpedia:Artist;
    dbpedia:musicalGroup ?bandName .
  ?artist rdfs:label ""Charlie Huhn""@en .
  ?artist rdfs:label ""Peter Schorowsky""@en .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
933,38,train,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and reference to the birth name of Alan Warner (musician).",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName ?birthName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ?birthName .
  ?person a dbpedia:Musician;
    dbpedia:bandMemberOf ?bandName .
}",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
507,20,train,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and spouse of Anne V. Coates.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . },"```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?director
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:actor dbpedia:Muriel_Beryl_Reid .
  ?director a foaf:Person;
    foaf:spouse ?wife .
  ?wife a foaf:Person;
    foaf:name ""Anne V. Coates"" .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
839,2,train,Give me the band of Matthias Röhr.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Person;
    dbpedia:role dbpedia:Musician ;
    dbpedia:associatedBand ?band .
  ?person rdfs:label ""Matthias Röhr""@de.
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
773,9,train,Give me the parent of Carloman of Bavaria and spouse of Louis the German.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace . # Not needed for this query
  ?person dbpedia:parent ?parent .
  ?person dbpedia:spouse ?spouse .
}",2,2,3,1,2,3,3,71,0,7942,1,0.0,0.0,0
47,32,train,Give me the office of the awardee of Banga Bhushan and office of the administration of Jagdeep Dhankhar.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v3 <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office_banga_bhushan ?office_administration
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedBangabhusan ?office_banga_bhushan .
  ?person a dbpedia:Person;
    dbpedia:administrationOffice ?office_administration .
}",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
373,4,train,"Give me the professional in Singer, songwriter and writer of 2300 Jackson Street (song).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer, songwriter""@en . <http://dbpedia.org/resource/2300_Jackson_Street_(song)> <http://dbpedia.org/property/writer> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?professional
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Freehold Borough, New Jersey, USA"";
    dbpedia:singer/songwriter ?professional .
  FILTER (lang(?name) = ""en"")  # Assuming the person's name is in English
}",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
839,7,train,Give me the professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?name WHERE {
  ?person a dbpedia:Person;
    dbpedia:occupation ?occupation .
  FILTER (lang(?occupation) = ""en"") .
  ?person rdfs:label ?name .
  SERVICE wikibase:label { 
    bd:serviceParam wikibase:language ""en"" .
  }
}
```",1,1,2,1,1,3,3,71,0,0,7563,0,0.0,0
773,26,train,"Give me the parent of the successor of the child, that is a royalty, of Louis the Pious.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Louis_the_Pious> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?child a dbpedia:ChildOf ?grandparent .
  ?child dbpedia:father Louis_the_Pious .
  ?child dbpedia:succeededBy ?successor .
  ?successor a dbpedia:Person;
    dbpedia:title ""Lothair I"" .
}
```",3,4,4,3,1,3,3,71,0,0,4,0,0.0,0
892,10,train,Give me the entity in Italy and entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?entity1 ?entity2
WHERE {
  ?entity1 a dbpedia:Country ;
            dbpedia:name ""Italy"" .
  ?entity2 a dbpedia:AdministrativeTerritory ;
            dbpedia:name ""Province of Reggio Emilia"" ;
            dbpedia:country ?entity1 .
}",2,2,3,1,2,3,3,71,0,0,40,0,0.0,0
216,1,train,Give me the player in Mario Ivanković.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?player
WHERE {
  ?person a dbpedia:Person;
    dbpedia:role dbpedia:SportEndeavor ;
    dbpedia:participantRole ?player .
  FILTER (lang(?description) = ""en"")  # Assuming we want results in English
}",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
47,12,train,Give me the office of Ajoy Mukherjee and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office1 ?office2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:role ?office1 .
  ?person2 a dbpedia:Person;
    dbpedia:role ?office2 .
  ?office1 rdfs:label ""Ajoy Mukherjee's Office""@en.
  ?office2 rdfs:label ""Bidesh Ranjan Bose's Office""@en.
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
645,5,train,"Who is the native, that is a president and a politician, of Restoration (Spain)?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace spain ;
    dbpedia:role dbpedia:President_of_Spain ;
    dbpedia:role dbpedia:Politician .
  ?person dbpedia:associatedEvent dbpedia:Spanish_Restoration
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
507,33,train,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17 and spouse of Anne V. Coates.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?v3 <http://dbpedia.org/property/starring> ?v0 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?director
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1919-06-17""^^xsd:date;
    dbpedia:s spouse [ dbpedia:givenName ""Anne"" ; dbpedia:familyName ""V. Coates"" ] .
  ?person dbpedia:moviesDirected ?movie .
  ?movie a dbpedia:Film; dbpedia:director ?director .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
433,33,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and associated musical artist of Paul Chambers.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?associated_artist_name
WHERE {
  ?artist a dbpedia:Artist ;
            dbpedia:musicalArtist ?associated_musician .
  ?associated_musician a dbpedia:MusicalArtist .
  
  OPTIONAL { 
    ?associated_musician a dbpedia:Artist . 
  }
}
```

This query will return the names of musical artists who are also artists (i.e., not just musicians).",4,8,5,3,2,3,3,71,0,0,10,0,0.0,0
98,5,train,Give me the parent of the successor of Emperor Nijō.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Emperor_Nijō> <http://dbpedia.org/ontology/successor> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successorParent
WHERE {
  ?emperor a dbpedia:Emperor;
    dbpedia:name ""AK Abdul Momen""@en .
  ?emperor dbpedia:successor ?successor .
  ?successor a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent rdfs:label ?parentLabel .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
507,26,train,"Give me the director of the movie, that is a movie and a work, with the person born on 1919-06-17.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1919-06-17""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/director> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?director
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:director ?director .
  ?movie dbpedia:mainActor [ dbpedia:birthDate ""1919-06-17"" ].
}
```

This SPARQL query selects the directors (`?director`) of films (`?movie`) where the main actor was born on June 17, 1919.",3,5,4,3,1,3,3,71,0,0,11,0,0.0,0
124,9,train,Give me the commander in Mahdist War and military force of Battle of Tamai.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander ?militaryForce
WHERE {
  ?battle a dbpedia:Battle;
    dbpedia:partOfConflict dbpedia:Mahdist_War .
  ?battle dbpedia:combatant ?commander .
  ?battle dbpedia:opponent ?militaryForce .
  ?commander rdfs:label ?commanderLabel .
  ?militaryForce rdfs:label ?militaryForceLabel .
  FILTER (lang(?commanderLabel) = ""en"" OR lang(?militaryForceLabel) = ""en"")
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
443,11,train,Give me the birthplace of the work of yes.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""yes""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","Given the reasoning steps, the corresponding SPARQL query would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace
WHERE {
  ?band a dbpedia:Band;
    dbpedia:name ""Yes""@en .
  ?band dbpedia:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,0,993,0,0.0,0
102,8,train,"Give me the native of the residence, that is English and a settlement, of Peter Finbow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Peter_Finbow> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality dbpedia:English .
  OPTIONAL { ?person dbpedia:birthPlace ?birthPlace }
  OPTIONAL { ?person dbpedia:deathPlace ?deathPlace }
}
```",2,4,3,2,1,3,2,20,0,0,100,0,0.0,0
917,33,train,"Give me the parent of Albert Kamehameha and child of the father of the spouse, that is a royalty, of Leleiohoku I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },{sparql_query},4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
216,14,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person ?team
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1983-12-20""^^xsd:date;
    dbpedia:role dbpedia:SportsManager .
  ?person a dbpedia:Person;
    dbpedia:role dbpedia:SoccerManager .
  ?person a dbpedia:Person;
    dbpedia:role dbpedia:SoccerPlayer .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
917,8,train,Give me the father of Kamehameha IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Kamehameha IV"" .
  ?person dbpedia:father ?father .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
773,30,train,"Give me the parent of Carloman of Bavaria and parent of the child, that is a royalty, of Louis the German and spouse of Louis the German.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?person a dbpedia:Person;
    dbpedia:father ?parent .
  OPTIONAL { ?person a dbpedia:Spouse ; dbpedia:spouseOf ?spouse }
  FILTER ( ?spouse = ?parent )
}
```",4,5,5,2,3,3,3,71,0,2296,1,0.0,0.0,0
130,6,train,Give me the entity in Tennessee and figure known as Vanderbilt Commodores.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Vanderbilt_Commodores> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Tennessee> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality dbpedia:Tennessee .
  ?person rdfs:label ?nickname .
  ?person dbo:athleticTeam dbpedia:Vanderbilt_University_Commodores .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
216,31,train,"Give me the player in Mario Ivanković and player in the coach of the reference, that is an organisation and a soccer club, to Croatia U21.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Croatia U21""@en . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/coach> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?player ?coach
WHERE {
  ?player a dbpedia:Person;
    dbpedia:role ""football player"" .
  ?coach a dbpedia:Person;
    dbpedia:role ""football coach"" .
  
  ?player dbpedia:memberOf dbpedia:SoccerClub ;
               dbpedia:clubName ""Croatia U21"" .
  
  ?coach dbpedia:managerOf dbpedia:SoccerClub ;
             dbpedia:clubName ""Croatia U21"" .
}",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
341,4,train,Give me the band member of Beyoncé and writer of In Love & War (Amerie album).,SELECT ?result WHERE { <http://dbpedia.org/resource/In_Love_&_War_(Amerie_album)> <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Beyoncé> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandMember
WHERE {
  ?person a dbpedia:Musician;
    dbpedia:genre ""Pop music"";
    dbpedia:role ""Band member of Beyoncé"";
    dbpedia:worksIncludes [ dbpedia:work ""In Love & War"" ] .
}",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
582,0,train,Give me the reference to Japan.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?entity WHERE { ?entity a dbpedia:Country ; dbpedia:name ""Japan"" }
```",1,1,2,1,1,3,3,71,0,0,15,0,0.0,0
965,8,train,"Give me the person born, that is a noble, as Prince George of Battenberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Prince George of Battenberg""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""George Mountbatten, 1st Marquess of Milford Haven""@en;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
433,30,train,Give me the associated musical artist of Bill Evans and professional in the profession of Bob Marley and associated musical artist of Paul Chambers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?associated_artist
WHERE {
  ?person a dbpedia:Person;
    dbpedia:musicalArtist ?associated_artist .
  FILTER (OPTIONAL (?person = ""<Bill Evans>"") || OPTIONAL (?person = ""<Bob Marley>"") || OPTIONAL (?person = ""<Paul Chambers"">))
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
826,18,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and spouse of Anna Magdalena Appel and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","Given the reasoning steps, we construct a SPARQL query to find the predecessor of Louis IV:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?predecessor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:title ""Louis IV, Grand Duke of Hesse"";
    dbpedia:successor ?successor .
  ?successor a dbpedia:MonarchyPosition;
    dbpedia:title ""Grand Duke of Hesse"".
  
  OPTIONAL { 
    ?person dbpedia:spouse ?spouse.
    ?spouse a dbpedia:Person;
      dbpedia:name ""Anna Magdalena Appel"" .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
865,11,train,"Give me the native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?country
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?name .
  ?name ns:prefLabel ""Uttar Pradesh, India"" .
}",2,3,3,2,1,3,3,71,0,0,1898,0,0.0,0
987,22,train,"Give me the entity in the region, that is a country, of Central European Time and birth place of Dado Polumenta.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ""Ljubljana""@sv.
  ?person geo:countryName ?country .
  ?country rdfs:label ""Slovenia""@en .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
773,19,train,Give me the parent of Carloman of Bavaria and spouse of the father of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent ?spouse
WHERE {
  ?charlemagne a dbpedia:Person;
    dbpedia:hasChild ?carloman .
  ?carloman a dbpedia:Person;
    dbpedia:father ?charlemagne .
  ?charlemagne a dbpedia:Person;
    dbpedia:wife ?hildegard .
  ?hildegard a dbpedia:Person;
    dbpedia:spouse ?spouse
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
267,11,train,"Give me the coach of the player, that is a soccer club, in Rasoul Khatibi and person born on 1953-03-01.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/coach> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1953-03-01""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Rasoul_Khatibi> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?coach
WHERE {
  ?player dbpedia:birthDate ""1953-03-01"" .
  ?player dbpedia:firstName ""Rasoul"" .
  ?player dbpedia:sport ""Soccer"" .
  ?player dbpedia:club ?soccerClub .
  ?soccerClub dbpedia:coach ?coach .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
136,5,train,Give me the region coded as the area code of Levenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/areaCode> ?v0 . <http://dbpedia.org/resource/Levenhagen> <http://dbpedia.org/ontology/areaCode> ?v0 . },"Given that DBpedia provides structured data about places and their associated area codes, we can construct a SPARQL query to retrieve this information. The query should look for a place named ""Levenhagen"" and then extract the corresponding area code (region).

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?areaCode
WHERE {
  ?place dbpedia:name ""Levenhagen"";
  ?place dbpedia:areaCode ?areaCode .
}
```",2,2,3,2,1,2,2,9,0,0,9,0,0.0,0
456,26,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","Given that we are looking for information within the DBpedia ontology, which covers many fictional characters and their associated roles, a SPARQL query to find this information would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alterEgo
WHERE {
  ?person a dbpedia:Character;
    dbpedia:alterEgo ?alterEgo .
  ?person dbpedia:mainRole ""The Shadow"" .
}
```

This query searches for a character (`?person`) who has an alter ego (`?alterEgo`) and whose main role is ""The Shadow."" This should return the fictional character associated with Lamont Cranston's alter ego in ""The Shadow"" series.",3,4,4,3,1,3,3,71,0,0,39640,0,0.0,0
582,38,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and figure known as the nickname of Japan national football team.",SELECT ?result WHERE { <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?Masami_Nagasawa a dbpedia:Person;
    dbpedia:hasParent ?father .
  ?father a dbpedia:Person;
    dbpedia:role dbpedia:SoccerManager ;
    dbpedia:role dbpedia:Athlete .
}",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
433,8,train,Give me the profession of Bob Marley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?result . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?profession
WHERE {
  ?person a rdf:Person;
    rdfs:label ?name .
  ?person ns:occupation ?profession .
}",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
216,12,train,Give me the player in Mario Ivanković and team of Ognjen Vukojević.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?playerName ?teamName
WHERE {
  ?player a dbpedia:Person;
    dbpedia:hasTeam ?team .
  ?team rdfs:label ?teamLabel .
  ?playerName ""Mario Ivanković"" .
  ?teamMember ""Ognjen Vukojević"" .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
933,29,train,Give me the reference to the birth name of Alan Warner (musician) and band of Mike Elliott (saxophonist) and band of The Ramong Sound.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthName ?bandAssociations
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Alan Warner""@en .
  ?person a dbpedia:Musician .
  ?bandMember a dbpedia:BandMember ;
    dbpedia:associatedBand ?band .
  ?band rdfs:label ""The Ramong Sound""@en .
  ?bandMember rdf:type dbpedia:Saxophonist .
  ?bandMember rdfs:label ""Mike Elliott""@en .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
170,4,train,Give me the awardee of People's Artist of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedWith dbpedia:People'sArtistOfRussia .
}
```",1,1,2,1,1,2,3,28,0,0,24,0,0.0,0
36,13,train,"Give me the person born in 1971 and actor of the claim to fame, that is a film, of Lepacious Bose.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?v0 . ?v0 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor WHERE {
  ?actor a dbpedia:Person;
    dbpedia:birthDate ""1971"";
    foaf:role [ rdf:type foaf:Role; rdfs:label ""Actor"" ] .
  INTERSECT {
    ?actor foaf:actedInSomeProduction dbpedia:Film ;
      dbpedia:filmTitle ""Lepacious Bose""
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
445,14,train,Give me the entity in the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?award
WHERE {
  ?person dbpedia:hasAward ?award .
  ?person dbpedia:name ""George H. Cameron"" .
}",2,2,3,2,1,3,3,71,0,0,87241,0,0.0,0
459,15,train,"Give me the person born as John Kevin Stitt and governor of the death place, that is a settlement, of Cliff Roquemore.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    rdfs:label ""John Kevin Stitt""@en .
  ?person dbpedia:office dbpedia:Governorship ;
    dbpedia:officeStart ""date""^^xsd:date ;
    dbpedia:end ""date""^^xsd:date .
  ?person dbpedia:deathPlace a dbpedia:SpatialThing;
    rdfs:label ""Cliff Roquemore""@en .
}",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
987,21,train,"Give me the birth place of the band, that is an artist and a musical artist, of Šako Polumenta and entity in Montenegro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Šako_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    foaf:name ""Šako Polumenta"" .
  ?person dbpedia:birthPlace ?birthPlace .
}
LIMIT 1",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
216,17,train,Give me the administration of  and party of the awardee of Australian Defence Medal.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> """"@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?administration ?party
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedByAward dbpedia:Australian_Defense_Medal .
  ?person dbpedia:conflict dbpedia:Vietnam_War .
  ?person a dbpedia:Person;
    dbpedia:adminstrativeUnit ?administration .
    rdfs:label ?party
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
935,3,train,Give me the awardee of Sitara-i-Imtiaz.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . },"Given that DBpedia is a reliable source for such structured data, the SPARQL query to retrieve the awardee of Sitara-i-Imtiaz would be:

```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee
WHERE {
  ?award a dbpedia:Award;
    dbpedia:awardedTo ?awardee .
  FILTER (xsd:string(?award) = ""Sitara-i-Imtiaz"")
}
```",1,1,2,1,1,3,2,20,0,0,52,0,0.0,0
715,35,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?leader
WHERE {
  ?person a dbpedia:OfficeHolder;
    dbpedia:office ?office .
  ?office a dbpedia:GovernmentAgency .
  
  ?person a dbpedia:Person;
    dbpedia:militaryRole ?role .
  ?role a dbpedia:MilitaryConflictRole;
    dbpedia:militaryConflict ?conflict .
}

AND
{
  ?person rdfs:label ""Carlos Franco Iribarnegaray""@es .
  ?office rdfs:label ""Falange Española""@es .
  
  ?person rdfs:label ""Abd el-Krim""@en .
  ?role rdfs:label ""Leader of Rifian guerrillas""@en .
  ?conflict rdfs:label ""Spanish Rif War""@en .
}",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
274,8,train,"Give me the band member of the person born, that is a musical artist, as John Birks Gillespie.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""John Birks Gillespie""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandMember
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""John Birks Gillespie""@en;
    dbpedia:role dbpedia:Musician ;
    dbpedia:musicalGenre dbpedia:Jazz .
  ?person dbpedia:birthDate [ bind( ?date ) ].
  OPTIONAL { 
    ?bandMember a dbpedia:BandMember; 
    dbpedia:memberOf ?person .
  }
}",2,3,3,2,1,2,3,28,0,0,67,0,0.0,0
98,8,train,Give me the region of the time zone of Lopez Jaena.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
SELECT ?region WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace [ geo:coordinates ?lat ?lon ] .
  ?person a dbpedia:Person;
    dbpedia:deathPlace [ geo:coordinates ?lat ?lon ] .
  ?person rdfs:label ""Lopez Jaena""@es.
}
```",2,2,3,2,1,2,3,28,0,0,1874,0,0.0,0
465,6,train,"Give me the child, that is a royalty, of Ferdinand I, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent dbpedia:Ferdinand_I, Holy_Roman_Emperor ;
    dbpedia:royaltyClass dbpedia:Royalty
}
```",1,2,2,1,1,3,3,71,0,0,11,0,0.0,0
232,6,train,Give me the claim to fame of the person born as Emily Katherine Jacques.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Emily Katherine Jacques""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?claimToFame
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1913-04-23"";
    dbpedia:gender Female;
    dbpedia:deathDate ""1998-08-30"";
    dbpedia:occupation Acting .
  ?person rdfs:label ?claimToFame .
}
```",2,2,3,2,1,2,2,9,0,0,2,0,0.0,0
839,21,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of Matthias Röhr.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""United States"";
    dbpedia:musicalArtist ?band .
  ?person rdfs:label ""Kevin Richard Russell"" .
  ?person rdfs:label ""Matthias Röhr"" .
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
417,13,train,Give me the child of the father of Frederick IX of Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father dbpedia:Christian_X_of_Denmark .
  ?person rdfs:label ?child.
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
645,27,train,"Give me the leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?leaderName WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality dbo:Spain ;
    dbpedia:birthPlace dbo:Restoration ;
    foaf:name ?leaderName .
}
```",3,5,4,3,1,3,3,71,0,0,15,0,0.0,0
47,9,train,Give me the office of Suvendu Adhikari and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Kolkata"" ; # Assuming both are from Kolkata, as it's a common birthplace for politicians from West Bengal
    dbpedia:office ?office .
  FILTER (lang(?office) = ""en"") # Ensuring the office is in English to match the context of political offices
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
200,4,train,Give me the reference to Angelcorpse and band member of Order from Chaos.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Angelcorpse""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Order_from_Chaos> . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?member
WHERE {
  ?member a dbpedia:Musician;
    dbpedia:bandMemberOf dbpedia:Angelcorpse .
  ?member a dbpedia:Musician;
    dbpedia:bandMemberOf dbpedia:Order_from_Chaos .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
443,1,train,Give me the birthplace of Ulf Lundell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Ulf Lundell"" .
  ?person dbpedia:birthPlace ?birthPlace .
}",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
507,25,train,Give me the director of Entertaining Mr Sloane (film) and professional in the profession of Guy Ferland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:film ""Entertaining Mr. Sloane"";
    dbpedia:director ?director .
  ?director a dbpedia:FilmDirector .
  ?person rdfs:label ?name .
  FILTER (regex(str(?name), 'Guy Ferland')) .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
326,8,train,"Give me the person decedent at the award, that is a country, of Adelbert Cronkhite.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardedPerson ?award ?country WHERE {
  ?awardedPerson a dbpedia:Person;
    dbpedia:recipientOfAward ?award .
  ?award a dbpedia:Award ;
    dbpedia:awardee ?awardedPerson ;
    dbpedia:inCountry ?country .
}
```",2,3,3,2,1,3,2,20,0,0,3795,0,0.0,0
216,32,train,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team and player in the coach of Croatia national under-21 football team.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?player WHERE {
  ?player a dbpedia:Person;
    dbpedia:sportsManager true;
    dbpedia:soccerPlayer true;
    dbpedia:country dbpedia:Bosnia and Herzegovina national under-18 football team .
  ?player also dbpedia:coaches dbpedia:Croatia national under-21 football team .
}
```",4,7,5,2,2,3,3,71,0,0,3,0,0.0,0
124,19,train,"Give me the military force of Battle of Tamai and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v0 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?militaryForce ?commander
WHERE {
  ?battle dbpedia:Event;
    dbpedia:name ""Battle of Tamai"" .
  ?battery a dbpedia:MilitaryUnit;
    dbpedia:unitName ""A Field Battery, Royal Australian Artillery"";
    dbpedia:partOfMilitaryConflict ?conflict .
  ?conflict a dbpedia:MilitaryConflict;
    dbpedia:commander ?commander .
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
606,9,train,"Give me the nickname of the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://dbpedia.org/property/nickname> ""Barb City""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?nickname
WHERE {
  ?place dbpedia:fullName ""Barbara City, Michigan"";
  ?place rdfs:label ?nickname .
}",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
606,2,train,"Give me the figure known, that is a settlement, as Barb City.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person WHERE {
  ?person rdfs:label ""Barbara"" .
  ?person a dbpedia:Person; dbpedia:birthPlace ?birthPlace .
  OPTIONAL { ?person dbpedia:deathPlace ?deathPlace }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
839,27,train,"Give me the band of the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?musician a dbpedia:Musician;
    dbpedia:musicalArtist ?musicalArtist .
  ?musicalArtist a dbpedia:MusicalArtist ;
    dbpedia:band ?band .
}",3,4,4,3,1,3,3,71,0,0,706,0,0.0,0
715,22,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in Rif War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?organization
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Carlos Franco Iribarnegaray"";
    dbpedia:role ""Commander in Rif War"" .
  ?person dbpedia:ledOrganization ?organization .
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
865,0,train,Give me the native of British Raj.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}
LIMIT 1",1,1,2,1,1,3,3,71,0,2,1898,0.0,0.0,0
382,1,train,Give me the landmark at elevation of 100.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""100""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?landmark
WHERE {
  ?landmark a dbpedia:Landmark;
    dbpedia:heightInMetres 100 .
}
```",1,1,2,1,1,3,2,20,0,0,727,0,0.0,0
573,31,train,"Give me the person decedent at the administration, that is a region, of the real name of Charlie Baker (Australian footballer) and person decedent at Quincy, Massachusetts.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Charlie_Baker_(Australian_footballer)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Charlie Baker""@en; # Assuming the real name is Charlie Baker
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?birthPlace rdfs:label ""Quincy, Massachusetts""@en. # Targeting Quincy, Massachusetts specifically
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
715,16,train,"Give me the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?party
WHERE {
  ?person a dbpedia:OfficeHolder;
    dbpedia:politicalAffiliation ?party .
  ?person dbpedia:name ""José Antonio Primo de Rivera"" .
  ?party rdfs:label ""CEDA"" .
}",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
645,36,train,"Give me the commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander ?officeLeader
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace <en:Spain> .
  ?person dbpedia:participatedInBattle <en:Battle of Jarama> .
  ?person a dbpedia:OfficeHolder ;
    dbpedia:office ?office .
  ?office a dbpedia:GovernmentAgency .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
935,11,train,Give me the headquarter of Provincial Assembly of Balochistan and death place of the awardee of Sitara-i-Imtiaz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Provincial_Assembly_of_Balochistan> <http://dbpedia.org/ontology/location> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sitara-i-Imtiaz> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?headquarter ?deathPlace
WHERE {
  ?assembly dbpedia:headquarter ?headquarter .
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",3,3,4,2,2,3,2,20,1,14239,0,7.02247191011236e-05,1.0,0.00014043957587248087
433,21,train,"Give me the professional in Musician and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?musicalArtist WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Paul Laurence Dunbar Chambers Jr."" .
  ?person rdfs:label ?musicalArtist .
}
```",3,5,4,2,2,3,3,71,0,0,15,0,0.0,0
508,12,train,"Give me the birthplace of the commander, that is Saudi, in Central Plains War and birthplace of Ma Hongkui.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ma_Hongkui> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdf:type dbpedia:Commander ;
    dbpedia:conflict dbpedia:Central_PlainsWithWar .
}
```",3,4,4,2,2,3,2,20,0,0,3,0,0.0,0
917,20,train,Give me the parent of Albert Kamehameha and child of the father of Keʻelikōlani.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Keʻelikōlani> <http://dbpedia.org/property/father> ?v1 . },"SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father ?father .
  ?father a dbpedia:Person; rdfs:label ""Kamehameha I""@en .
  ?child a dbpedia:Person; dbpedia:parent ?parent .
  ?parent a dbpedia:Person; rdfs:label ""Albert Kamehameha""@en .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
554,7,train,Give me the leader of the administration of Francisco da Costa Gomes.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Francisco_da_Costa_Gomes> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Francisco da Costa Gomes""@en;
    dbpedia:office dbpedia:Governor_of_Goa .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
715,5,train,"Who is the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?result . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?mayor
WHERE {
  ?election dbo:generalElection ""1933 Spanish general election"" .
  ?candidate a dbo:OfficeHolder ;
            rdf:type dbo:Politician ;
            dbo:office dbpedia:MayorOfCity ;
            dbo:termStartYear ?year .
  ?election rdf:type dbo:ElectoralEvent .
}",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
978,1,train,Give me the band member of Chicane (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chicane_(musician)> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandMember
WHERE {
  ?person a dbpedia:Musician;
    dbpedia:band ?band .
  ?band rdfs:label ""Chicane""@en .
}",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
124,28,train,"Give me the military force of Battle of Tamai and military force of Battle of Atbara and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Tamai> . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?battle1 ?militaryForce1 ?commander1,
       ?battle2 ?militaryForce2 ?commander2
WHERE {
  ?battle1 a dbpedia:Battle ;
            dbpedia:participatedInConflict dbpedia:British_Raj .
  ?battle2 a dbpedia:Battle ;
            dbpedia:participatedInConflict dbpedia:British_Raj .

  ?militaryForce1 a dbpedia:Military_Force ;
                 dbpedia:participatedInConflict ?battle1 .

  ?militaryForce2 a dbpedia:Military_Force ;
                 dbpedia:participatedInConflict ?battle2 .

  ?commander1 a dbpedia:Person;
               dbpedia:commanded ?militaryForce1 .

  ?commander2 a dbpedia:Person;
               dbpedia:commanded ?militaryForce2 .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
573,36,train,"Give me the parent of the author, that is a politician and an office holder, of the work of John Quincy Adams and person decedent at Massachusetts.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?author a dbpedia:Person;
    dbpedia:birthDate ?birthDate .
  ?author dbpedia:authorOf <http://dbpedia.org/page/John_Quincy_Adams_and_person_decedent_at_Massachusetts> .
  ?author foaf:parents ?parent .
  FILTER (xsd:date(?birthDate) <= ""1797-07-04""^^xsd:date AND xsd:date(?birthDate) >= ""1744-07-04""^^xsd:date)
}
```

This SPARQL query does the following:
- Selects the parent (`?parent`) of a person (`?author`) who was born between 1744 and 1797 (to cover John Adams' birth and death years).
- Ensures that the person is identified as the author of ""John Quincy Adams and person decedent at Massachusetts.""
- Filters for individuals who are parents of John Quincy Adams, given his birth date.",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
715,33,train,"Give me the commander in Rif War and commander in the force of the mayor, that is an office holder and a politician and a president, of 1933 Spanish general election.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>. <http://dbpedia.org/resource/1933_Spanish_general_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:roleInRifWar ?role_in_Rif_War .
  ?person a dbpedia:OfficeHolder;
    dbpedia:office ?office .
  ?person a dbpedia:Politician;
    dbpedia:office ?office .
  ?person rdfs:label ""President of Spain"" . # Assuming this is the office for the 1933 Spanish general election president
  FILTER ( ?role_in_Rif_War = ""Commander in Rif War"" AND ?office = ""Mayor's force commander"" )
}
```",4,7,5,3,2,3,3,71,0,0,4,0,0.0,0
212,3,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?role WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Chittagong District, Bangladesh"";
    dbpedia:deathPlace ""Dacca, Bangladesh"";
    dbpedia:occupation ?role .
}",1,1,2,1,1,2,2,9,0,0,39640,0,0.0,0
715,15,train,"Give me the force, that is a military conflict, of the native of Morocco.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"Given the constraints and the need to find a relevant individual from Moroccan history involved in conflict with British forces, a more generalized query might look like this:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person ?conflict
WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality ""Morocco"";
    dbpedia:participatedInConflict ?conflict .
  ?conflict a dbpedia:Conflict .
}
```

This query looks for individuals of Moroccan nationality who participated in conflicts, hoping to find someone relevant to the broader colonial period involving British forces.",2,3,3,2,1,3,3,71,0,0,15,0,0.0,0
129,15,train,Give me the associated musical artist of Saba (rapper) and professional in the mayor of 1999 West Dunbartonshire Council election.,SELECT ?result WHERE { <http://dbpedia.org/resource/Saba_(rapper)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?musicalArtist ?mayorElectionDetails 
WHERE { 
  ?person a dbpedia:Person; rdfs:label ?name . 
  ?person ns:artist ?musicalArtist . 
  ?person dbpprop:participatedInElectoralEvent ?election . 
  ?election dbpprop:startYear 1999 . 
  ?election dbpprop:office dbpedia:LocalElectionOffice; dbpedia:ElectedOfficeHolder ?mayor . 
  ?mayor rdfs:label ?mayorName . 
  FILTER (regex(?name, 'Saba')) . 
}",3,3,4,2,2,2,3,28,0,0,7,0,0.0,0
606,12,train,Give me the birthplace of the alumnus of University of Pennsylvania and figure known as Barb City.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Pennsylvania> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:alumniOf dbpedia:University_of_Pennsylvania .
  ?person rdfs:label ""Barb City"" .
  ?person dbpedia:birthPlace ?birthPlace .
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
267,2,train,Who is the manager of 2020–21 Tractor S.C. season?,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_Tractor_S.C._season> <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?manager
WHERE {
  ?team a dbpedia:SportsTeam;
    dbpedia:sport ""Football"";
    dbpedia:name ""Tractor S.C."" .
  ?team dbpedia:manager ?manager .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
933,23,train,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?artist WHERE {
  ?artist a dbpedia:Musician; 
  ?artist rdfs:label ""The Ramong Sound""@en .
  ?artist dbpedia:bandMemberOf ?band .
}
```",3,5,4,3,1,3,3,71,0,0,30,0,0.0,0
507,3,train,Give me the birth name of Anne V. Coates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anne_V._Coates> <http://dbpedia.org/property/birthName> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ?name .
  ?person rdfs:label ?label .
  FILTER (regex(str(?label), ""Anne V. Coates""))
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
976,25,train,Give me the office of Meral Akşener and office of the person born as Mehmet Naci Bostancı.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office WHERE {
  ?person a dbpedia:Person;
    dbpedia:office ?office .
  FILTER (lang(?office) = ""en"")  # Filter for English language offices
}

This SPARQL query will return the office (in English) of each person.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
791,3,train,Give me the reference to Emperor Takakura.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?emperor
WHERE {
  ?emperor a dbpedia:Person;
    dbpedia:isEmperorOf dbpedia:Japan .
  ?emperor rdfs:label ""Takakura""
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
579,11,train,"Give me the native of the residence, that is English and a settlement, of Alan Clyne and person born as Isobel Jane Miller Richard.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/property/birthName> ""Isobel Jane Miller Richard""@en . <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  FILTER (lang(?person) = ""en"")  # Ensure the person is English
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
373,1,train,"Give me the professional in Singer, songwriter.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer, songwriter""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:singer ?singerProperty .
  ?person a dbpedia:Person;
    dbpedia:songwriter ?songwriterProperty .
  AND ?singerProperty = ?songwriterProperty
}
```",1,1,2,1,1,2,2,9,0,0,1543,0,0.0,0
865,3,train,Who is the person decedent at Patna?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace <http://dbpedia.org/ontology/LocationEntity#Patna>;
    dbpedia:deathPlace <http://dbpedia.org/ontology/LocationEntity#Patna> .
}
```",1,1,2,1,1,3,3,71,0,0,66,0,0.0,0
273,10,train,Give me the alumnus of the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v0 . }","The SPARQL query to find the alumni of Università degli Studi di Torino would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?name WHERE {
  ?person a dbpedia:Person;
    dbpedia:alumniOf <http://dbpedia.org/resource/Universita_ degli_Studii_di_Torino> .
}
```",2,2,3,2,1,3,2,20,0,0,141,0,0.0,0
326,14,train,"Give me the person decedent at the award, that is a country, of the awardee of French Legion of Honor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?recipientCountry
WHERE {
  ?award dbpedia:awardedTo ?recipientCountry .
  ?award rdfs:label ""French Legion of Honor"" .
}",3,4,4,3,1,3,2,20,0,0,4699,0,0.0,0
892,1,train,Give me the landmark at elevation of 58.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","Given that DBpedia provides structured data about various landmarks, we can use SPARQL to query for a landmark with the elevation of 58 meters. However, since DBpedia's data might not explicitly state every single elevation detail, we will look for landmarks in regions known for such elevations.

A possible approach is to query for landmarks in mountainous areas or regions known for high-altitude landmarks. For simplicity and given the lack of specific elevation details in DBpedia, let's assume we are looking for a well-known landmark in the Himalayas, which is known for its high elevations.

Here's a general SPARQL query that could be used to find such information:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?landmark ?elevation
WHERE {
  ?landmark a dbpedia:Landmark ;
             dbpedia:heightInMetres ?elevation .
  FILTER (?elevation = 58)
}
```

This query looks for a `Landmark` with an exact height of 58 meters.",1,1,2,1,1,3,3,71,0,0,258,0,0.0,0
36,4,train,Give me the birth year of Deanne Bray.,SELECT ?result WHERE { <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?result . },"Given that we are using IMDb as our data source and assuming we have access to an API or a structured dataset from IMDb, the SPARQL query might look something like this:

```sparql
PREFIX imdb: <http://purl.org/imdb/>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthYear
WHERE {
  ?actor a imdb:Person ;
    imdb:birthDate ?birthYear .
  ?actor rdfs:label ""Deanne Bray""@en .
}
```

This query selects the birth year (`?birthYear`) of a person named ""Deanne Bray"" from the IMDb dataset, assuming that the `imdb:birthDate` property corresponds to the birth year.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
888,6,train,Give me the commander in Southern Ukraine campaign and awardee of Hero of Ukraine.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Hero of Ukraine""@en . <http://dbpedia.org/resource/Southern_Ukraine_campaign> <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commanderName ?award
WHERE {
  ?campaign a dbpedia:Event;
    dbpedia:startDate ""2022-04-01""^^xsd:date; # Assuming the Southern Ukraine campaign started on April 1, 2022
    dbpedia:endDate ""2023-04-01""^^xsd:date; # Assuming the end of the campaign is April 1, 2023
  ?commander a dbpedia:Person;
    dbpedia:role ?role .
  ?role rdfs:label ""Commander""@en .
  ?person a dbpedia:Person;
    dbpedia:awardedByCountry ukrainianNationalRepublic ; # Awarded by Ukraine
    dbpedia:award ?awardName .
  ?awardName rdfs:label ""Hero of Ukraine""@en . # Label for the Hero of Ukraine award
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
170,13,train,Give me the entity in the work of International Energy Agency and birth place of Era Ziganshina.,SELECT ?result WHERE { <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX iea: <http://dbpedia.org/ontology/IEA>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?birthPlace ?work
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""Era Ziganshina""@en .
  ?work a dbpedia:Work;
    dbpedia:isAbout ?subject .
  ?subject a dbpedia:Person;
    rdfs:label ""Era Ziganshina""@en .
  ?work rdfs:label ""International Energy Agency""@en .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
5,5,train,Give me the award of Coro de la Pontificia Universidad Católica de Puerto Rico.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?award
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedBy dbpedia:Pontificia_Universidad_Católica_de_Puerto_Rico ;
    dbpedia:awardedThing ?award .
}",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
200,5,train,Give me the reference to the name of Angelcorpse.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Angelcorpse> <http://xmlns.com/foaf/0.1/name> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?name
WHERE {
  ?band a dbpedia:MusicGroup;
    dbpedia:name ?name .
  ?band rdfs:label ""Angelcorpse""@en .
}",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
507,13,train,"Give me the director of the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/director> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?director
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:actor dbpedia:Surname ""Reid, Beryl"";
    dbpedia:director ?director .
}",2,4,3,2,1,3,3,71,0,0,9,0,0.0,0
955,11,train,Give me the band of the writer of Don't Forget Your Roots (album) and band of Johnny Rioux.,SELECT ?result WHERE { <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Rioux> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName1 ?bandName2
WHERE {
  ?artist1 a dbpedia:Artist;
    dbpedia:album ""Don't Forget Your Roots"" .
  ?artist1 dbpedia:band ?bandName1 .

  ?artist2 a dbpedia:Artist;
    rdfs:label ""Johnny Rioux""@en;
    dbpedia:band ?bandName2 .
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
465,27,train,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","{PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?successor
WHERE {
  ?charlesOrlando a dbpedia:Person;
    dbpedia:name ""Charles Orlando"";
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Louis XIII of France""@en .
  OPTIONAL { ?charlesOrlando dbpedia:child ?child }
  OPTIONAL { ?child a dbpedia:Person; dbpedia:royalty true }
  FILTER (NOT EXISTS { ?child rdf:type dbpedia:Person; rdfs:label ""Philippe, Dauphin of France""@en })
}
}",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
507,9,train,Give me the spouse of Anne V. Coates and director of Entertaining Mr Sloane (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse ?director
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Anne V. Coates"" .
  ?person dbpedia:spouseOf ?spouse .
  ?movie a dbpedia:Film;
    dbpedia:title ""Entertaining Mr Sloane"" .
  ?movie dbpedia:directorOf ?director .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
826,22,train,Give me the predecessor of the parent of Prince Friedrich of Hesse and by Rhine and spouse of Anna Magdalena Appel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Friedrich_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandparent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:spouse ?wife .
  ?wife a dbpedia:Person;
    dbpedia:name ""Anna Magdalena Appel"" .
  ?person a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Friedrich of Hesse and by Rhine"" .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
926,38,train,"Give me the child of the father, that is a royalty, of Mustafa III and successor of the child of Ahmed III.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?parent a dbpedia:Monarch;
    dbpedia:title ""Mustafa III"" .
  ?child a dbpedia:Person;
    dbpedia:father ?parent;
    dbpedia:monarchyStarts [ strdt:startDate ""1774-01-25"" ].
  ?child a dbpedia:Royalty .
  ?successor a dbpedia:Monarch;
    dbpedia:title ?child.
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
365,6,train,Give me the person born as Symon Vasylyovych Petliura and spouse of Olha Petliura.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Symon Vasylyovych Petliura""@en . <http://dbpedia.org/resource/Olha_Petliura> <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""AK Abdul Momen""@en .
  ?person dbo:period_start ""British Raj""^^xsd:string .
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
273,8,train,Give me the parent of the alumnus of University of Turin.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?alumnus a dbpedia:Person;
    dbpedia:alumniOf dbpedia:University_of_Turin .
  ?alumnus dbpedia:hasParent ?parent .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
281,6,train,Give me the commander in New Guinea campaign and awardee of Medal bar.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander ?awardee
WHERE {
  ?campaign dbpedia:operationalUnit ""New Guinea campaign"" .
  ?person a dbpedia:Person;
    dbpedia:participatedIn ?campaign .
  ?person a dbpedia:Person;
    dbpedia:awardedWith dbpedia:Medal bar .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
41,1,train,Give me the party of Declan Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Declan_Costello> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?party
WHERE {
  ?person a dbpedia:Person;
    dbpedia:political_ideology ""Irish Republican Brotherhood"" .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
554,2,train,Who is the party member of Independent politician?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Independent_politician> . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person
WHERE {
  ?person a dbo:Politician;
    dbo:politicalAffiliation ""Independent"".
}",1,1,2,1,1,3,2,20,0,0,2968,0,0.0,0
926,16,train,Give me the child of the spouse of Şermi Kadın.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?spouse a dbpedia:Person;
    dbpedia:sibling ?person .
  ?person a dbpedia:Person;
    dbpedia:parent ?child .
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
124,38,train,"Give me the military force of the force, that is a societal event and a military conflict, of Herbert Kitchener, 1st Earl Kitchener and military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Herbert_Kitchener,_1st_Earl_Kitchener> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?militaryForce ?war
WHERE {
  ?person a dbpedia:Person;
    dbpedia:militaryServiceMemberOf ?militaryForce .
  OPTIONAL { ?person dbpedia:conflict ?war }
}",4,9,5,2,2,3,3,71,0,0,1085,0,0.0,0
508,10,train,"Give me the commander, that is Saudi, in the war, that is a military conflict and a societal event, of Hu Yukun.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Hu_Yukun> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?commander WHERE { ?commander a dbpedia:Person; dbpedia:nationality dbpedia:Saudi_Arabia . ?commander dbpedia:participatedIn dbpedia:Battle_of_Sibuyan_Sea .,2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
573,18,train,"Give me the person decedent at Massachusetts and person decedent at Quincy, Massachusetts and parent of John Quincy Adams.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Quincy,_Massachusetts> . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?john_quincy_adams a dbpedia:Person;
    dbpedia:name ""John Quincy Adams"" .
  ?john_quincy_adams dbpedia:parentOf ?parent1 .
  ?parent1 a dbpedia:Person;
    dbpedia:name ?parentName1 .
  ?parent1 dbpedia:birthPlace ?birthPlace .
  ?parent1 dbpedia:deathPlace ?deathPlace .
}",3,3,4,1,3,3,3,71,0,0,2,0,0.0,0
18,6,train,Give me the parent of Liza Huber and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent ?profession
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Liza Huber"" .
  ?person foaf:parent ?parent .
  ?person foaf:occupation ?profession .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
465,39,train,"Give me the successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?successor
WHERE {
  ?charlesOrlando a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:spouse ?archduchessBarbaraOfAustria .
  ?archduchessBarbaraOfAustria a dbpedia:Person;
    dbpedia:sibling ?sibling .
  ?sibling a dbpedia:Person;
    dbpedia:title ""Duke of Orléans"" .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
839,11,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Kevin Richard Russell"" .
  ?person a dbpedia:Musician; 
    dbpedia:associatedBand ?band .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
129,4,train,"Give me the actor, that is an organisation, of Dreamville Presents: Revenge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Dreamville_Presents:_Revenge> <http://dbpedia.org/property/starring> ?result . },"Given that IMDb provides structured data about movies and their associated entities, including production companies, we can use a SPARQL query to extract this information from the DBpedia dataset, which is linked to IMDb. The SPARQL query would look for the production company (organization) associated with the movie ""Dreamville Presents: Revenge"".

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?productionCompany
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:mainProductionCompany ?productionCompany .
  ?movie rdfs:label ""Dreamville Presents: Revenge""@en .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
18,18,train,"Give me the alumnus of the figure known, that is an educational institution, as Saints and parent of Liza Huber.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/property/nickname> ""Saints""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . ?result <http://dbpedia.org/ontology/almaMater> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?alumnus
WHERE {
  ?alumnus a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?alumnus dbpedia:educatedAt dbpedia:Saints ;
    foaf:parentOf ?child .
  ?child a dbpedia:Person;
    dbpedia:name ""Liza Huber"" .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
124,32,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and commander in the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?warName ?militaryForce
WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality ""United Kingdom"";
    dbpedia:conflict ?war .
  ?war rdfs:label ?warName .
  ?war a dbpedia:Event;
    dbpedia:type dbpedia:MilitaryConflict .
  ?militaryUnit a dbpedia:MilitaryUnit;
    dbpedia:unitType ""Artillery"";
    dbpedia:name ""A Field Battery, Royal Australian Artillery"" .
}
```

This SPARQL query looks for:

- A person of nationality ""United Kingdom"" who was involved in a conflict.
- The label (name) of that conflict, which should be a MilitaryConflict.
- A MilitaryUnit named ""A Field Battery, Royal Australian Artillery"".",4,9,5,2,2,3,3,71,0,0,9,0,0.0,0
573,16,train,"Give me the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?result . ?v1 <http://dbpedia.org/property/occupation> ""Politician""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality dbpedia:United_States .
  ?person a dbpedia:Politician .
  ?person dbpedia:birthPlace ?birthPlace .
}
```",2,4,3,2,1,3,3,71,0,0,41,0,0.0,0
582,35,train,Give me the figure known as the nickname of Japan national football team and reference to the residence of Hirotaka Sugawara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Japan_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?nickname ?sugawara_residence
WHERE {
  ?team a dbpedia:FootballTeam ;
    dbpedia:nationalTeamOfCountry Japan;
    dbpedia:nickname ?nickname .
  ?person a dbpedia:Person;
    dbpedia:name ""Hirotaka Sugawara"";
    dbpedia:birthPlace ?sugawara_birthplace .
  OPTIONAL { ?person dbpedia:residence ?sugawara_residence }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
926,8,train,"Give me the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father
WHERE {
  ?person a dbpedia:Monarch;
    dbpedia:title ""Mustafa III"";
    dbpedia:father ?father .
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
965,16,train,"Give me the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?childName ?royaltyStatus
WHERE {
  ?politician a dbpedia:Person;
    dbpedia:birthDate ""1854-05-24""^^xsd:date;
    dbpedia:role dbpedia:Politician .
  ?politician dbpedia:hasChild ?child .
  ?child a dbpedia:Person;
    dbpedia:birthDate ?childBirthDate ;
    dbpedia:parent ?politician .
  OPTIONAL { ?child rdfs:label ?childName }
  OPTIONAL { ?child rdf:type <http://purl.org/dc/elements/1.1/#royalty> ?royaltyStatus }
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
129,1,train,Give me the associated musical artist of EarthGang.,SELECT ?result WHERE { <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?musicalArtist
WHERE {
  ?band dbpedia:genre ""Hip hop music"";
    dbpedia:members [ dbpedia:hasMember ?member ] .
  ?member a dbpedia:Person;
    dbpedia:name ""EarthGang"" .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
715,25,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in Spanish Civil War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"To extract this information from DBpedia using SPARQL, we need to query for individuals associated with the roles of being a commander in the Nationalist faction and then identify their leadership role. However, since we already know the answer from our reasoning, we can construct a simplified query that directly points to General Francisco Franco:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?leader
WHERE {
  ?person a dbpedia:Person;
    dbpedia:role dbpedia:Commander_in_Arms ;
    dbpedia:conflict dbpedia:Spanish_Civil_War .
  ?person rdfs:label ""Francisco Franco"" .
}
```

This query looks for individuals who were commanders in the Spanish Civil War and filters to find those labeled as ""Francisco Franco"".",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
465,36,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and successor of the child, that is a royalty, of the parent of Charles Orlando, Dauphin of France.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Charles_Orlando,_Dauphin_of_France> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?successor WHERE {
  ?charles_orlando a dbpedia:Person;
    dbpedia:birthDate ""1628-10-09"";
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Charles Orlando"";
    foaf:father ?charles_father .
  ?ercole_d_este a dbpedia:Person;
    dbpedia:title ""Duke of Ferrara"";
    dbpedia:succeededBy ?successor .
  ?successor a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
216,22,train,"Give me the player in Igor Bišćan and team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?playerName ?team
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1983-12-20""^^xsd:date;
    dbpedia:role dbpedia:SoccerManager ;
    dbpedia:role dbpedia:SportsManager .
  ?person dbpedia:playedWith ?playerInIgorBiscan .
  ?playerInIgorBiscan a dbpedia:Person;
    dbpedia:role dbpedia:SoccerPlayer .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
791,8,train,"Give me the child, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childName ?royaltyStatus
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father dbpedia:Emperor_Takakura .
  ?person dbpedia:hasChild ?child .
  ?child a dbpedia:Person; 
    dbpedia:isRoyal ?royaltyStatus .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
965,15,train,Give me the spouse of the parent of Louise Mountbatten.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parentSpouse
WHERE {
  ?louise dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Louise Mountbatten"" .
  ?parent dbpedia:spouse ?parentSpouse .
}",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
47,3,train,"Give me the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander
WHERE {
  ?person a dbpedia:Person;
    dbpedia:role dbpedia:Naxalite; 
    dbpedia:participatedInOperation dbpedia:Operation_Green_Hunt .
  ?person rdfs:label ?name .
  FILTER (lang(?name) = ""en"")  # Assuming English language for simplicity
  ?commander a dbpedia:Person;
    dbpedia:role dbpedia:Commander; 
    dbpedia:birthPlace ?birthPlace.
  ?person ns:namedBy ?name .
}
```",1,2,2,1,1,3,3,71,0,0,104,0,0.0,0
926,39,train,"Give me the child of the father, that is a royalty, of the parent, that is a royalty, of Beyhan Sultan (daughter of Mustafa III) and successor of Mustafa III.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Beyhan_Sultan_(daughter_of_Mustafa_III)> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?parent a dbpedia:Monarch;
    dbpedia:father ?father .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent;
    dbpedia:birthPlace [ dbpedia:isPartOf dbpedia:Ottoman_Sultanate ] .
  ?child dbpedia:succeeded ?parent .
  ?father a dbpedia:Monarch;
    dbpedia:name ""Mustafa III"" .
}
```

This SPARQL query looks for a child (`?child`) of a monarch (`?parent`) who is Mustafa III (`dbpedia:name ""Mustafa III""`), is born in the Ottoman Sultanate (`[ dbpedia:isPartOf dbpedia:Ottoman_Sultanate ]`), and succeeded that monarch.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
456,23,train,"Give me the spouse of the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:role dbpedia:movie_role ;
    dbpedia:birthDate ?birthdate .
  ?actor dbpedia:hasSpouse ?spouse .
  FILTER ( EXISTS { ?movie dbpedia:productionCompany ""Sundance Channel"" } )
  AND ( ?movie rdfs:label ""The Killing"" ) .
  FILTER ( EXISTS { ?movie2 dbpedia:productionCompany ""Rookery Entertainment"" } )
  AND ( ?movie2 rdfs:label ""Only God Forgives"" ) .
}
```",3,5,4,3,1,3,3,71,0,0,5,0,0.0,0
826,21,train,"Give me the spouse of the child of Johann Heinrich Appel and predecessor of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v1 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?spouse WHERE { dbpedia:Elisabeth_Marie_Appel ns:child ?child . dbpedia:Wilhelm_Ernst,_Duke_of_Saxe-Weimar ns:predecessor dbpedia:Louis_IV,_Grand_Duke_of_Hesse . ?child ns:sibling ?spouse }",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
329,17,train,"Give me the entity in Northern Ireland and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?northernIrelandEntity ?countryEntity
WHERE {
  ?northernIrelandEntity a dbo:Region;
    dbpedia:name ""Northern Ireland"" .
  ?countryEntity a dbo:Country;
    dbpedia:name ""United Kingdom"" .
  ?northernIrelandEntity geonames:timeZone ""WET"" .
  ?countryEntity geonames:timeZone ""WET"" .
}
```",3,4,4,2,2,2,3,28,0,0,531,0,0.0,0
170,0,train,Give me the entity in Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?entity WHERE { 
  ?entity a dbpedia:Entity; dbpedia:country dbpedia:Russia .
}
```",1,1,2,1,1,2,3,28,0,0,29927,0,0.0,0
773,28,train,Give me the spouse of the father of Charles the Fat and parent of Charles the Fat and parent of Carloman of Bavaria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse ?father
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father ?father .
  ?person dbpedia:spouse ?spouse .
  ?father rdfs:label ""Louis the Pious""@en.
  ?person rdfs:label ""Charles the Fat""@en.
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
433,3,train,Give me the persona of Paul Chambers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paul_Chambers> <http://xmlns.com/foaf/0.1/givenName> ?result . },"Given the reasoning above, the SPARQL query to find detailed information about Paul Chambers from DBpedia would involve searching for individuals associated with the British Raj and specifically those who were colonial administrators. Here is a structured SPARQL query that could be used:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?name ?birthPlace ?deathPlace ?occupation
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person dbpedia:occupation ?occupation .
  FILTER (lang(?name) = ""en"")  # Filter for English names
  OPTIONAL { ?person rdfs:label ?name }  # Optional to get the name if available
}
```

This query looks for individuals (`?person`) who are of type `Person`, have a birthplace (`?birthPlace`), death place (`?deathPlace`), and an occupation related to the British Raj. The filter `FILTER (lang(?name) = ""en"")` ensures we only get results for English names, which is likely given Paul Chambers' background.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
465,0,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?successor
WHERE {
  ?duke a dbpedia:Person;
    dbpedia:title ""Duke of Ferrara"";
    dbpedia:predecessor ?preceding_duke .
  ?preceding_duke rdfs:label ""Ercole II d'Este"" .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
582,7,train,"Give me the team, that is an organisation, of Hajime Moriyasu.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Hajime_Moriyasu> . },"Given the reasoning above, the SPARQL query would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?team
WHERE {
  ?person a dbpedia:Person;
    dbpedia:givenName ""Hajime"";
    dbpedia:sport ""Cricket"";
    dbpedia:memberOf ?team .
}
```

This query looks for a person named Hajime who plays cricket and is a member of some team.",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
926,10,train,Give me the child of Ahmed III and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childOfAhmedIII ?fatherOfMahmudII
WHERE {
  ?childOfAhmedIII a dbpedia:Person; dbpedia:parent ?parentOfChild .
  ?parentOfChild a dbpedia:Person; dbpedia:name ""Ahmed III"" .
  ?fatherOfMahmudII a dbpedia:Person; dbpedia:parent ?grandParentOfFather .
  ?grandParentOfFather a dbpedia:Person; dbpedia:name ""Ahmed III"" .
  ?fatherOfMahmudII dbpedia:child ?childOfAhmedIII .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
433,4,train,"Give me the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Paul Laurence Dunbar Chambers Jr."" .
  ?person a dbpedia:Artist .
}",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
582,2,train,Give me the figure known as --10-19.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person ?birthDate ?deathDate
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ?birthDate .
  ?person a dbpedia:Person;
    dbpedia:deathDate ?deathDate .
  FILTER (STRSTARTS(?birthDate, ""10-19"") AND STRSTARTS(?deathDate, ""19-10""))
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
645,12,train,Give me the military force of Spanish Civil War and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?militaryForce ?leaderOfArmy
WHERE {
  ?person a dbpedia:Person;
    dbpedia:role ""Military Leader of Nationalist Forces in Spanish Civil War"" ;
    dbpedia:birthDate ""1892-12-04""^^xsd:date .
  ?person rdfs:label ""Francisco Franco""@es.
  
  ?militaryGroup a dbpedia:MilitaryForce;
    dbpedia:participatedInEvent dbpedia:Spanish_Civil_War .
  
  ?militaryGroup dbpedia:ledBy ?leaderOfArmy .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
83,8,train,Give me the party of the governor of Dilma Rousseff.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX peo: <http://purl.org/ontologies/core#>

SELECT ?governorParty
WHERE {
  ?governor a dbo:OfficeHolder ;
            dbo:office dbo:GovernorOfMinasGerais ;
            peo:affiliatedWith ?governorParty .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
987,36,train,"Give me the birth place of Dado Polumenta and entity in the region, that is a country, of the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?event
WHERE {
  ?person dbpedia:hasBirthPlace ?birthPlace .
  ?event a dbpedia:Event; dbpedia:location ?location .
  ?location rdfs:label ""Canicosa de la Sierra""@es.
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
83,6,train,Give me the ruling party in Fortaleza and party of Alceu Collares.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alceu_Collares> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Fortaleza> <http://dbpedia.org/property/leaderParty> ?result . },"To retrieve this information from DBpedia, we can construct a SPARQL query that looks up the relevant properties for both entities. Here's how the SPARQL query would look:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?rulingParty ?partyOfAlceuCollares
WHERE {
  ?municipality dbpedia:hasRulingParty ?rulingParty .
  ?person dbpedia:isMemberOfParty ?partyOfAlceuCollares .
  ?person dbpedia:hasName ""Fortaleza"" .
  ?person rdfs:label ?nameLabel .
  FILTER (?nameLabel = ""Fortaleza"") .
}
```

This query does the following:
- It selects the `rulingParty` of Fortaleza and the `partyOfAlceuCollares`.
- It filters for the name ""Fortaleza"" to ensure we are looking at the correct municipality.
- It uses the `dbpedia:hasRulingParty` property to find the ruling party.
- It uses the `dbpedia:isMemberOfParty` property to find the political party of Alceu Collares.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
495,10,train,Give me the child of the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?parent dbpedia:name ""Pauline of Württemberg"" .
  ?parent dbpedia:birthDate ""1810-03-01""^^xsd:date .
}",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
976,4,train,"Who is the leader, that is a politician, of Grand National Assembly of Turkey?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?politician WHERE {
  ?assembly dbpedia:name ""Grand National Assembly of Turkey"" .
  ?politician a dbpedia:Person;
    dbpedia:memberOf ?assembly .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
826,10,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?predecessor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?predecessor .
  ?person dbpedia:name ""Louis IV, Grand Duke of Hesse and by Rhine"" .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
508,3,train,"Give me the commander, that is a politician, in 1939–1940 Winter Offensive.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander
WHERE {
  ?commander a dbpedia:Person;
    dbpedia:office ""Prime Minister of the United Kingdom"";
    dbpedia:term ""1939-1940 Winter Offensive"" .
}",1,2,2,1,1,3,2,20,0,0,6,0,0.0,0
791,30,train,"Give me the spouse of Taira no Tokuko and father of the child, that is a royalty, of Emperor Takakura and predecessor of Emperor Antoku.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse ?father
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:spouse ?spouse .
  ?person dbpedia:child ?child .
  ?child a dbpedia:Person; 
    dbpedia:parent ?father .
  FILTER (regex(str(?child), ""Prince Atsuhiko"")).
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
976,12,train,Give me the office of Meral Akşener and office of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meral_Akşener> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?officeName WHERE {
  ?person a dbpedia:OfficeHolder; dbpedia:office ?officeName .
  ?person rdfs:label ""Meral Akşener""@en .
  OR ?person rdfs:label ""Naci Bostancı""@en
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
83,12,train,Give me the party of the governor of Dilma Rousseff and ruling party in Fortaleza.,SELECT ?result WHERE { <http://dbpedia.org/resource/Fortaleza> <http://dbpedia.org/property/leaderParty> ?result . <http://dbpedia.org/resource/Dilma_Rousseff> <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?governingParty
WHERE {
  ?governor a dbpedia:OfficeHolder;
    dbpedia:office dbpedia:Governor_of_Fortaleza ;
    dbpedia:term_start ""2003-01-01""^^xsd:date .
  ?governor foaf:personNamed ""Dilma Rousseff"" .
  ?governingParty a dbpedia:PoliticalParty ;
    dbpedia:partyColor ?partyColor .
  OPTIONAL {
    ?governingParty dbpedia:ruledInRegion dbpedia:Fortaleza .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
976,26,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?mayorOffice
WHERE {
  ?party dbpedia:isPartOf dbpedia:PoliticalPartyInTurkey .
  ?person a dbpedia:Politician; dbpedia:officeHolder ?mayorOffice .
  ?person dbpedia:memberOf ?party .
  ?person rdfs:label ""AKP"" .  # Assuming the mayor is from AK Parti (Justice and Development Party), as it's the major Turkish party associated with Millet İttifakı
}",3,9,4,3,1,3,3,71,0,0,3,0,0.0,0
715,31,train,"Give me the commander in the force, that is a military conflict, of the native of Morocco and commander in Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Morocco> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander
WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality ""Morocco"" .
  ?person a dbpedia:EventParticipant ;
    dbpedia:event ""Spanish Civil War"" .
}",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
445,5,train,Give me the establishment of 1820-03-10.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?establishment WHERE {
  ?event dbpedia:Event;
    dbpedia:startDate ""1820-03-10"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
917,21,train,"Give me the child of Kekūanāoʻa and parent of the child, that is a royalty, of Kamehameha IV.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:children ?child .
  FILTER (xsd:anyURI(?parent) = ""http://dbpedia.org/ontology/Kamehameha_IV"" || 
          xsd:anyURI(?child) = ""http://dbpedia.org/ontology/Kamehameha_IV"")
}
```

This SPARQL query looks for a person (`?child`) who is the child of another person (`?parent`) and at the same time, either `?parent` or `?child` is Kamehameha IV. This ensures that we are looking for individuals directly linked to Kamehameha IV through parentage.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
507,0,train,Give me the spouse of Anne V. Coates.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . },"Given that we are looking for the spouse of Anne V. Coates, the SPARQL query would be:

```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?anneVCoates a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?anneVCoates foaf:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
987,23,train,"Give me the birth place of the band, that is an artist and a musical artist, of the band, that is an artist, of Dado Polumenta.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Dado Polumenta""@en;
    dbpedia:role dbpedia:MusicianRole ;
    dbpedia:band dbpedia:Band ;
    dbpedia:bandName ""The Erasers""@en .
}
```",3,6,4,3,1,3,3,71,0,0,6,0,0.0,0
382,10,train,"Give me the award of the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. }","Given that we are looking for an award associated with Harry Combes' roles as both a college coach and a professional football coach, we can construct a SPARQL query to find such an award. However, since DBpedia does not have specific awards linked directly to coaching roles, we will use a more general approach to find awards related to sports coaching:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?award
WHERE {
  ?person a dbpedia:Person;
    dbpedia:role dbpedia:Coach .
  ?person ns:hasAward ?award .
}
```

This query looks for individuals (`?person`) who have the role of `Coach` (as defined in DBpedia) and then finds the awards associated with those individuals (`?award`).",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
273,11,train,Give me the parent of Gianni Agnelli and spouse of the child of Giovanni Agnelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gianni_Agnelli> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Giovanni_Agnelli> <http://dbpedia.org/ontology/child> ?v2 . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?spouse WHERE { dbpedia:Gianni_Agnelli a dbpedia:Person; dbpedia:child ?child . ?child a dbpedia:Person; dbpedia:spouse ?spouse },3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
365,1,train,Give me the spouse of Olha Petliura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Olha_Petliura> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Olha Petliura"";
    dbpedia:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
926,33,train,Give me the successor of the child of the spouse of Şermi Kadın and father of Mahmud II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahmud_II> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Şermi_Kadın> . ?v2 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father dbpedia:Sultan Abdul Hamid I .
  ?person a dbpedia:Person;
    dbpedia:son dbpedia:Mahmud II .
  ?person dbpedia:successor ?successor .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
102,11,train,Give me the manager of the player in Ellie Roebuck and native of Dewsbury.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Dewsbury> . <http://dbpedia.org/resource/Ellie_Roebuck> <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX wos: <http://www.wosscorecard.com/ns/>

SELECT ?manager
WHERE {
  ?player a wos:Player;
    wos:representativeTeam wos:YorkshireWomen .
  ?player dbpedia:birthPlace <http://dbpedia.org/property/location> ""Dewsbury, West Riding of Yorkshire, England"" .
  ?player dbpedia:manager ?manager .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
987,25,train,"Give me the entity in the region, that is a country, of Central European Time and birth place of Moamer Kasumović.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?country WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Moamer Kasumović""@en .
  ?person dbpedia:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = ""en"" ) .
  ?country rdfs:label ""CET"" .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
170,5,train,Give me the profession of John Scholey.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?profession
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolderRole ?officeHolderRole .
  ?officeHolderRole rdfs:label ?profession .
  ?person rdfs:label ""John Scholey""@en .
}",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
216,6,train,Give me the party of Campbell Newman and office of Tim Nicholls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?officeName ?party
WHERE {
  ?politician a dbpedia:Person;
    dbpedia:office ?office .
  OPTIONAL { ?politician dbpedia:party ?party }
}",2,2,3,1,2,2,3,28,0,737,1,0.0,0.0,0
274,5,train,"Who is the actor, that is a musical artist, of Imagine the Sound?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?actorName WHERE {
  ?movie a dbpedia:Film;
    dbpedia:mainActor ?actorName .
  ?actorName a dbpedia:Person;
    dbpedia:occupation dbpedia:Musician .
}
```",1,2,2,1,1,2,3,28,0,0,4,0,0.0,0
495,12,train,Give me the father of the child of Princess Charlotte of Saxe-Hildburghausen and child of Frederick I of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_I_of_Württemberg> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Princess_Charlotte_of_Saxe-Hildburghausen> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Wilhelm Eberhard von Württemberg"";
    dbpedia:birthDate ""1797-08-22"";
    dbpedia:deathDate ""1868-07-18"" .
  ?child a dbpedia:Person;
    dbpedia:name ""Wilhelm Eberhard von Württemberg, Duke of Urach"";
    dbpedia:birthDate ""1819-02-25"";
    dbpedia:deathDate ""1888-08-23"" .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
433,35,train,"Give me the professional in the profession of Bob Marley and associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr..","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?artist WHERE {
  ?artist a dbpedia:Person;
    dbpedia:birthPlace ""Jamaica"";
    dbpedia:occupation dbpedia:Musician;
    dbpedia:genre ""Reggae"";
    dbpedia:associatedWith Bob_Marley .
  ?artist a dbpedia:Artist; # Assuming this implies visual artist
    rdfs:label ?artistLabel .
  FILTER (lang(?artistLabel) = ""en"") # Ensuring the label is in English for clarity
}
```",4,6,5,2,2,3,3,71,0,0,16,0,0.0,0
382,8,train,Give me the landmark at elevation of the award of Harry Combes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?landmark
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedWith dbpedia:IndianOrderOfMerit .
  ?person dbpedia:birthPlace ""New Delhi"" .
  ?landmark a dbpedia:Building;
    dbpedia:locatedIn ""New Delhi"" .
  ?person rdfs:seeAlso ?landmark .
}
```",2,2,3,2,1,3,2,20,0,0,727,0,0.0,0
507,24,train,"Give me the director of the movie, that is a movie and a work, with Beryl Reid and professional in Film director, television director.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/director> ?result . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?director
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:actor dbpedia:SandraVelez .
  ?movie dbpedia:director ?director .
  OPTIONAL { ?movie dbpedia:genre dbpedia:Film }
  OPTIONAL { ?movie dbpedia:genre dbpedia:TelevisionSeries }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
216,14,train,Give me the office of Tim Nicholls and party of the awardee of Australian Defence Medal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Nicholls> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Australian_Defence_Medal> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?personName ?party
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Tim Nicholls"" .
  ?person dbpedia:memberOf dbpedia:PoliticalParty ;
    dbpedia:politicalParty ?party .
  OPTIONAL { 
    ?awardee a dbpedia:Person; 
    dbpedia:award dbpedia:Australian_Defense_Medal ;
    dbpedia:awardedTo ?awardeeName .
    ?awardeeName dbpedia:memberOf ?party .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
892,16,train,Give me the award of the member of E-girls.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?result . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?memberName ?award
WHERE {
  ?member a dbpedia:Person;
    dbpedia:isMemberOf dbpedia:Egirls .
  OPTIONAL { ?member rdfs:label ?memberName }
  ?member dbpedia:hasAward ?award .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
917,27,train,"Give me the child of the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?grandchild WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Kamehameha III"" .
  ?child a dbpedia:Person;
    dbpedia:child ?grandchild .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
465,3,train,"Give me the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?result . }","To extract this information from DBpedia using SPARQL, we would construct a query to find the parents of individuals within the House of Este. However, since DBpedia's data might not be fully structured in a way that directly connects every individual to their parents through explicit triples, we'll make a reasonable assumption based on common knowledge and typical family relationships.

Here is a SPARQL query that attempts to retrieve this information:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person ?parent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ?birthdate .
  ?person dbpedia:father ?parent .
  FILTER (lang(?birthdate) = ""it"")  # Assuming birthdate is in Italian language
}
```

This query looks for individuals (`?person`) with a birth date (`?birthdate`) and then tries to link them to their fathers (`?parent`). The filter `lang(?birthdate) = ""it""` is used to narrow down the results to those likely pertaining to Ercole II d'Este, who was born in Ferrara, Italy.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
865,7,train,Who is the father of Abul Maal Abdul Muhith?,SELECT ?result WHERE { <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father
WHERE {
  ?person a dbpedia:Person;
    rdfs:label ""Abul Maal Abdul Muhith""@en;
    dbpedia:birthPlace [ geo:country ""British Raj"" ] .
  ?person dbpedia:father ?father .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
445,10,train,Give me the entity in United Kingdom and entity in England.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?birthPlace rdfs:label ""England"" .
  ?deathPlace rdfs:label ""England"" .
}
```",2,2,3,1,2,3,3,71,0,0,102,0,0.0,0
839,6,train,Give me the member of Böhse Onkelz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?member
WHERE {
  ?band dbpedia:hasBandMember ?member .
  ?band rdfs:label ""Böhse Onkelz"" .
}",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
978,10,train,Give me the person born as the name of Chicane (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen"" .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
}",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
329,7,train,Give me the birthplace of Eric Cross (writer) and entity in Northern Ireland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    rdfs:label ""Eric Cross""@en .
  OPTIONAL { ?person dbpedia:birthPlace ?birthPlace . }
  OPTIONAL { ?person dbpedia:deathPlace ?deathPlace . }
  FILTER (lang(?person) = ""en"" ) .
  FILTER (regex(str(?person), ""Eric Cross"")) .
  ?birthPlace geo:locatedIn <http://www.w3.org/2000/01/rdf-schema#type> ""Northern Ireland""@en .
  ?deathPlace geo:locatedIn <http://www.w3.org/2000/01/rdf-schema#type> ""Northern Ireland""@en .
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
445,24,train,Give me the death place of the awardee of Royal Astronomical Society and entity in United Kingdom.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",3,3,4,2,2,3,3,71,2,100978,0,1.9805902158843335e-05,1.0,3.961101978570438e-05
170,8,train,Give me the entity in the work of International Energy Agency.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/International_Energy_Agency> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?work
WHERE {
  ?work a dbpedia:Report;
    dbpedia:author ""International Energy Agency"" .
}",2,2,3,2,1,2,3,28,0,0,29927,0,0.0,0
36,14,train,Give me the person born in the birth year of Deanne Bray and actor of Being Mrs Elliot.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Being_Mrs_Elliot> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Deanne_Bray> <http://dbpedia.org/ontology/birthYear> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthYear 1965 .
  ?person rdfs:label ?actorName .
  ?actorName ns:role ""Mrs. Elliot"" .
  ?person ns:appearedIn ""Being Mrs. Elliot"" .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
212,0,train,Give me the birthplace of Corp Sayvee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Corp_Sayvee> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",1,1,2,1,1,2,2,9,1,100979,0,9.902951079421667e-06,1.0,1.9805706023905488e-05
892,20,train,Give me the landmark at elevation of the award of Anna Ishii and entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?awardName ?elevation ?landmarkLocation ?italyEntity
WHERE {
  ?award dbpedia:awardedTo ?person .
  ?award rdfs:label ?awardName .
  ?person rdfs:label ?personName .
  ?award dbpedia:hasElevation ?elevation .
  ?landmark dbpedia:locatedAt ?landmarkLocation .
  ?award dbpedia:isConnectedTo ?landmark .
  ?awardLocation rdfs:label ?locationName .
  FILTER (lang(?locationName) = ""it"")  # Search for entities in Italy
}
```",3,3,4,2,2,3,3,71,0,0,11,0,0.0,0
791,16,train,"Give me the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"To construct the SPARQL query, we need to:

1. Use the `dbpedia:Person` class to find individuals related to Emperor Go-Shirakawa.
2. Filter for children using the `dbpedia:child` relation.
3. Further filter these children to find those who are both office holders (using a suitable property indicating this) and royalty.

Assuming we use `dbpedia:officeHolder` as a proxy for an office holder and `dbpedia:royalty` for royalty, the SPARQL query would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child1 ?child2
WHERE {
  ?emperor a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:child ?child1 .
  ?child1 a dbpedia:Person;
    dbpedia:child ?child2 .
  ?child2 a dbpedia:Person;
    dbpedia:officeHolder ?officeHolder .
  ?child2 a dbpedia:Person;
    dbpedia:royalty ?royalty
}
```

This query will return the grandchildren of Emperor Go-Shirakawa who are both office holders and royalty.",2,4,3,2,1,3,3,71,0,0,4,0,0.0,0
465,22,train,"Give me the successor of the child, that is a royalty, of Anne of Brittany and successor of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . }","{sparql_query: SELECT ?successor WHERE { ?person a dbpedia:Person; dbpedia:hasSuccessor ?successor . ?person dbpedia:childOf <http://dbpedia.org/ontology/Child> [ dbpedia:parent dbpedia:Anne_of_Brittany ] ; dbpedia:childOf <http://dbpedia.org/ontology/Parent> [ dbpedia:subject <http://dbpedia.org/resource/Ercole_II_d%27Este,_Duke_of_Ferrara> ] } }",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
791,31,train,"Give me the spouse of the spouse, that is a royalty, of the reference to Emperor Takakura and predecessor of Emperor Antoku.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Emperor Takakura""@en . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?royalSpouseSpouse WHERE {
  ?emperor1 a dbpedia:Person;
    dbpedia:monarchName ""Takakura"".
  ?emperor2 a dbpedia:Person;
    dbpedia:monarchName ""Antoku"".
  ?emperor1 dbpedia:hasSpouse ?spouse1.
  ?spouse1 a dbpedia:Person;
    dbpedia:isRoyalty true.
  ?emperor2 dbpedia:hasSpouse ?spouse2.
  ?spouse2 a dbpedia:Person;
    dbpedia:isRoyalty true.
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
236,12,train,Give me the party member of Federalist Party and party member of the administration of James Madison.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Federalist_Party> . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/James_Madison> . ?result <http://dbpedia.org/ontology/party> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?name ?role
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate [isBefore 1809] .
  ?person a dbpedia:OfficeHolder ;
    dbpedia:office dbpedia:President_of_the_United_States ;
    dbpedia:term_start ""1809""^^xsd:gYear .
  ?person a dbpedia:PartyMember;
    dbpedia:party dbpedia:Federalist_Party .
}",3,3,4,2,2,3,2,20,0,0,19,0,0.0,0
839,17,train,"Give me the band, that is a musical artist, of the professional in Musician.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/occupation> ""Musician""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen"" .
  ?person a dbpedia:Musician; 
    dbpedia:associatedBand ?band .
}",2,3,3,2,1,3,3,71,0,0,3643,0,0.0,0
892,37,train,Give me the landmark at elevation of the award of the member of E-girls and entity in Province of Reggio Emilia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardName ?elevation ?landmark WHERE {
  ?awardee a dbpedia:Person; dbpedia:group dbpedia:Egirls .
  ?awardee dbpedia:winAward ?awardName .
  ?awardName rdfs:label ?awardLabel .
  ?awardLabel ns:hasValue ?elevation .
  ?awardName ns:locatedAt ?landmark .
  FILTER (lang(?awardLabel) = ""en"")  # Filter for English language
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
329,12,train,Give me the entity in United Kingdom and birthplace of Eric Cross (writer) and entity in Northern Ireland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Eric Cross""@en;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
170,7,train,Give me the entity in Russia and domain of Mayor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?capitalCity
WHERE {
  ?country CAPITAL ?capitalCity .
  ?capitalCity rdfs:label ""Moscow""@en .
}
```",2,2,3,1,2,2,3,28,0,0,99,0,0.0,0
826,19,train,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of the child of Johann Heinrich Appel.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successorSpouse
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Louis III, Grand Duke of Hesse"" .
  ?child a dbpedia:Person;
    dbpedia:spouse ?successorSpouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
826,36,train,"Give me the spouse of Anna Magdalena Appel and predecessor of the parent of the child of Louis IV, Grand Duke of Hesse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> 
SELECT ?spouseOfAnna ?parentPredecessor 
WHERE { 
  ?person1 a dbpedia:Person; dbpedia:name 'Anna Magdalena Appel' . 
  ?person2 a dbpedia:Person; dbpedia:sibling ?person1 . 
  ?person3 a dbpedia:Person; dbpedia:child ?childOfLouisIV . 
  ?childOfLouisIV a dbpedia:Person; dbpedia:parent ?parentOfChild . 
  ?parentOfChild a dbpedia:Person; dbpedia:name 'Louis IV, Grand Duke of Hesse' . 
  ?parentPredecessor a dbpedia:Person; dbpedia:name ?parentNameOfLouisIV . 
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
329,1,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?entity
WHERE {
  ?entity a dbo:Entity ;
    dbo:locatedIn dbpedia:United_Kingdom .
}",1,1,2,1,1,2,3,28,0,0,42999,0,0.0,0
917,35,train,"Give me the child of the father of Kamehameha IV and parent of the child, that is a royalty, of Kamehameha IV.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childName ?royaltyStatus WHERE {
  ?father a dbpedia:Person; dbpedia:name ""Kamehameha IV"" .
  ?father dbpedia:father ?grandfather .
  ?child a dbpedia:Person; dbpedia:parent ?childOfFather .
  ?child a dbpedia:Person; dbpedia:royaltyStatus ?royaltyStatus .
  ?childOfFather a dbpedia:Person; dbpedia:name ?childName .
  FILTER (?childOfFather = ?father) .
  BIND(?childName AS ?childName)
  BIND(str(?royaltyStatus) AS ?royaltyStatus)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
826,12,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Louis IV, Grand Duke of Hesse""@en .
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
715,13,train,Give me the commander in the force of Francisco Largo Caballero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?commander WHERE { dbpedia:Francisco_Largo_Caballero foaf:led ?commander . },2,2,3,2,1,3,3,71,0,0,28,0,0.0,0
382,14,train,"Give me the landmark at elevation of the award of the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardName ?location
WHERE {
  ?award dbpedia:awardedTo ?person .
  ?person a dbpedia:Person;
    dbpedia:name ""Harry Combes"" .
  ?award rdfs:label ?awardName .
  ?award dcterms:isPartOf ?event .
  ?event a dbpedia:Event;
    dbpedia:location ?location .
}
```",3,5,4,3,1,3,2,20,0,0,727,0,0.0,0
865,16,train,"Who is the child, that is a politician, of the spouse of Syeda Shahar Banu?",SELECT ?result WHERE { <http://dbpedia.org/resource/Syeda_Shahar_Banu> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?person a dbpedia:Person;
    dbpedia:spouse ?wife .
  ?wife a dbpedia:Person; 
    dbpedia:name ""Syeda Shahar Banu"" .
  ?person dbpedia:parent ?parent .
  ?parent a dbpedia:Person; 
    dbpedia:name ""Jahangir"" .
  ?person a dbpedia:Politician .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
170,9,train,Give me the domain of Mayor and birth place of Era Ziganshina.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  AND ?person dbpedia:period_start ""1885-03-03""^^xsd:date.
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
606,11,train,"Give me the birthplace of Charles I. Barber and figure known as the nickname of DeKalb, Illinois.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I._Barber> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/DeKalb,_Illinois> <http://dbpedia.org/property/nickname> ?v2 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?nickname
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Charles I. Barber"" .
  ?city a dbpedia:City; dbpedia:name ""DeKalb, Illinois"" .
  ?city dbpedia:nickname ?nickname .
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
715,19,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim and commander in Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander1 ?commander2
WHERE {
  ?commander1 a dbpedia:Person;
    dbpedia:role dbpedia:military_conflict_rif_war .
  ?commander2 a dbpedia:Person;
    dbpedia:role dbpedia:military_conflict_spanish_civil_war .
}",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
102,6,train,Give me the native of Dewsbury and manager of Sheffield United W.F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Sheffield_United_W.F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Dewsbury> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?manager
WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality ""British"";
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""Sheffield United W.F.C. manager""@en .
  ?manager a dbpedia:ClubManager ;
    dbpedia:managedTeam dbpedia:Sheffield_United_F.C..
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
935,8,train,Give me the headquarter of the office of Sanaullah Khan Zehri.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Sanaullah_Khan_Zehri> <http://dbpedia.org/property/office> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?headquarter
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Sanaullah Khan Zehri""@en .
  ?office a dbpedia:Office; 
    dbpedia:headquarter ?headquarter .
  ?person dbpedia:isPoliticianOf ?office .
}",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
281,13,train,"Give me the awardee of Medal bar and commander in the war, that is an event and a military conflict, of Roy Boehm.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Roy_Boehm> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee WHERE {
  ?person a dbpedia:Person;
    dbpedia:militaryBranch dbpedia:BritishArmy ;
    dbpedia:conflict dbpedia:World_War_I ;
    dbpedia:awardedWith dbpedia:Medal_Bar .
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
839,23,train,"Give me the band of the person born, that is a musical artist, as the persona of Kevin Russell (musician).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""United States"";
    dbpedia:occupation dbpedia:musician;
    dbpedia:associatedBand ?band .
  ?person rdfs:label ""Kevin Russell""@en .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
976,36,train,Give me the office of the person born as the birth name of Naci Bostancı and office of Mustafa Şentop.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Ahmet Necatürk"" .
  ?person a dbpedia:OfficeHolder;
    dbpedia:office ?office .
  
  ?person2 a dbpedia:Person;
    dbpedia:name ""Mustafa Şentop"" .
  ?person2 a dbpedia:OfficeHolder;
    dbpedia:office ?office .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
773,20,train,Give me the spouse of Louis the German and parent of the successor of Charles the Bald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouseOfLouis ?parentOfLouisIII
WHERE {
  ?person1 a dbpedia:Person; dbpedia:name ""Louis the German"" .
  ?person1 dbpedia:spouse ?spouseOfLouis .

  ?person2 a dbpedia:Person; dbpedia:name ""Charles the Bald"" .
  ?person2 dbpedia:successor ?successorOfCharles .

  ?successorOfCharles a dbpedia:Person; dbpedia:name ""Louis III"" .
  ?successorOfCharles dbpedia:parent ?parentOfLouisIII .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
874,14,train,"Give me the band of the band member of the band, that is an organisation, of Mark Read (singer).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?result <http://dbpedia.org/ontology/bandMember> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band
WHERE {
  ?person a dbpedia:Musician;
    dbpedia:associatedBand ?band .
  ?person rdfs:label ""Mark Read""@en .
  ?band rdfs:label ?bandLabel .
}",3,4,4,3,1,3,2,20,0,0,5,0,0.0,0
465,34,train,"Give me the successor of Renée of France and successor of the child of the parent of Ercole II d'Este, Duke of Ferrara.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# For Renée of France, we need to consider her role and influence rather than a direct successor as queen consort.
SELECT ?renée_influence WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Renée of France"" .
  OPTIONAL { ?person rdfs:seeAlso <http://www.history.com/topics/france/ren%C3%A9e-of-france> }
}

# For Ercole II d'Este, we need to find the successor based on historical records.
SELECT ?este_successor WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Ercole II d'Este, Duke of Ferrara"" .
  ?person dbpedia:parent ?parent .
  ?child a dbpedia:Person;
    dbpedia:name ?child_name ;
    dbpedia:parent ?parent .
  ?child rdfs:label ""Successor of Ercole II d'Este, Duke of Ferrara"" .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
917,31,train,"Give me the child of Kekūanāoʻa and parent of the child, that is a royalty, of the mayor of Hawaiian Kingdom.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v2 . },"{sparql_query: SELECT ?child WHERE {
  dbpedia:Kekūanāoʻa ns:child ?child .
  ?child a dbpedia:Person; dbpedia:offspring dbpedia:Royalty
}}}",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
978,4,train,Give me the name of Chicane (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Chicane_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?name
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""United Kingdom"";
    dbpedia:genre ""Electronic music"";
    dbpedia:activeYears ""1990s"";
    dbpedia:name ?name .
  FILTER (lang(?name) = ""en"")  # Ensure the name is in English
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
212,1,train,Give me the birthplace of KODA (singer).,SELECT ?result WHERE { <http://dbpedia.org/resource/KODA_(singer)> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""KODA""@en;
    dbpedia:birthPlace ?birthPlace .
}",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
791,36,train,"Give me the spouse of Taira no Tokuko and father of the child, that is a royalty, of the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father Taira no Kiyomori .
  ?person dbpedia:wife ?spouse .
}",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
579,10,train,"Give me the birth name of the native, that is an office holder, of Edinburgh.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?v0 <http://dbpedia.org/property/birthName> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace edinburgh ;
    dbpedia:officeHolderRole dbpedia:Office_Holder .
  ?person rdfs:label ?birthName .
}",2,3,3,2,1,3,2,20,0,0,18,0,0.0,0
933,30,train,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and band of Mike Elliott (saxophonist) and reference to Alan Warner.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName ?bandOrganization
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Alan Warner""@en .
  ?person a dbpedia:Musician .

  ?person2 a dbpedia:Person;
    dbpedia:name ""Mike Elliott""@en .
  ?person2 a dbpedia:Saxophonist .

  ?band a dbpedia:Band ;
    dbpedia:members ?person ;
    dbpedia:bandName ?bandName .
  
  ?band a dbpedia:Organization .
  
  ?person rdfs:seeAlso <http://www.alanwarnermusic.com/> .  # Assuming Alan Warner's official website as a reference
  ?person2 rdfs:seeAlso <http://www.mikeelevator.net/> .  # Assuming Mike Elliott's official website as a reference
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
826,4,train,Who is the child of Johann Heinrich Appel?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?parent dbpedia:name ""Johann Heinrich Appel"" .
  ?child dbpedia:name ""Carl Friedrich Appel"" .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
158,2,train,Who is the reference to Adelbert Cronkhite?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Adelbert Cronkhite""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  FILTER (lang(?name) = ""en"")  # Assuming the name is in English
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
93,1,train,Give me the death place of John Weir Troy.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Weir_Troy> <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""John Weir Troy"" .
  ?person dbpedia:deathPlace ?deathPlace .
}",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
216,18,train,Give me the player in Mario Ivanković and team of Ognjen Vukojević and player in Igor Bišćan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Ognjen_Vukojević> . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?playerName ?team
WHERE {
  ?player a dbpedia:Person;
    dbpedia:sport ?sport .
  ?player dbpedia:hasMemberRole [ dbpedia:role ?playerName ] .
  ?team a dbpedia:SportTeam ;
         dbpedia:name ?teamName .
  ?player dbpedia:playedFor ?team .
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
865,19,train,"Give me the father of AK Abdul Momen and native of the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?fatherName ?countryOfBirthOfYadav
WHERE {
  ?momen dbpedia:hasFather ?father .
  ?father rdfs:label ?fatherName . # Assuming the father's label includes his name

  ?yadav dbpedia:nativePlace ?countryOfBirthOfYadav .
  ?yadav rdfs:label ""Ram Jaipal Singh Yadav""@en . # Assuming Yadav's label includes his full name and language
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
933,28,train,Give me the band of the band of Alan Warner (musician) and band of The Ramong Sound and reference to Alan Warner.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1963"";
    dbpedia:name ""Alan Warner""@en;
    dbpedia:role dbpedia:Musician .
  ?person rdfs:member ?band .
  ?band a dbpedia:Band .
  FILTER (lang(?name) = ""en"")  # Only consider English names
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
166,12,train,"Give me the resting place of Gonzalo Queipo de Llano and entity in the territory administered, that is a country, from Madrid.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Madrid> . ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Gonzalo_Queipo_de_Llano> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?restingPlace ?country
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Gonzalo Queipo de Llano""@es .
  ?person dbpedia:deathPlace ?restingPlace .
  ?person dbpedia:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?countryLabel .
  ?countryLabel rdfs:subPropertyOf dbpedia:administeredBy .
  FILTER (lang(?countryLabel) = ""es"" ) .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
216,16,train,"Give me the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/coach> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?coach
WHERE {
  ?player dbpedia:birthPlace ""Sarajevo, Bosnia and Herzegovina"";
  ?player rdfs:label ""Džemal Berberović"";
  ?player dbpedia:sport ""Football"";
  ?player dbpedia:club [dbpedia:hasManager ?manager]
  DIFFERENCE (?manager) 
    { dbpedia:role ""Sports manager"" }
    { dbpedia:role ""Soccer manager"" }
  FILTER (lang(?manager) = ""en"")
}
```

This SPARQL query looks for a player named Džemal Berberović born in Sarajevo, Bosnia and Herzegovina, who played football and was associated with a club having a manager that also holds the roles of sports manager and soccer manager. The `DIFFERENCE` clause is used to filter managers who have both roles.",2,8,3,2,1,3,3,71,0,0,2,0,0.0,0
715,14,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?leader
WHERE {
  ?office a dbpedia:Office; dbpedia:headOf ?leader .
  ?office dbpedia:governmentOrganization yes .
  ?office dbpedia:organizationType ""Government Agency"" .
  ?person dbpedia:birthPlace ""El Pardo, Spain"" .
  ?person rdfs:label ""Carlos Franco Iribarnegaray"" .
  ?person dbpedia:role ""Military Chief of Staff"" .
  FILTER (lang(?person) = ""es"") .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
917,28,train,"Give me the parent of the child, that is a royalty, of Kamehameha IV and child of Kekūanāoʻa and child of Kekūanāoʻa.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kamehameha_IV> . ?result <http://dbpedia.org/property/father> ""Kekūanāoʻa""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent WHERE {
  ?child a dbpedia:Person;
    dbpedia:birthParent ?parent .
  ?child dbpedia:name ""Kekūāiwa""^^xsd:string;
    dbpedia:title ""Kamehameha V""^^xsd:string .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
274,6,train,Give me the band member of Dizzy Gillespie and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandMember ?role
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Chittagong, Bangladesh"";
    dbpedia:musicalGenre Jazz;
    dbpedia:bandMember ?bandMember .
  ?person a dbpedia:Person;
    dbpedia:role ?role .
}
```",2,2,3,1,2,2,3,28,0,0,8,0,0.0,0
41,5,train,"Who is the work, that is an office holder, of yes?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/author> ""yes""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?personName ?title
WHERE {
  ?person a dbpedia:Person;
    dbpedia:title ?title .
  FILTER (?title LIKE '%Yes%' OR ?title RDFS::label 'Yes')
}
```",1,2,2,1,1,2,3,28,0,0,59,0,0.0,0
773,8,train,"Give me the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?royaltyStatus
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father dbpedia:Louis_the_German .
  ?person dbpedia:hasRoyalTitle ?royaltyStatus .
  FILTER (?person != ?father)  # Ensure person is not the same as their father to avoid self-references
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
124,3,train,"Give me the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?result <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","Given the structured nature of DBpedia's data, we can construct a SPARQL query to retrieve the necessary information:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?organization ?militaryUnit
WHERE {
  ?battery a dbpedia:Battery;
    dbpedia:unitType dbpedia:MilitaryUnit ;
    dbpedia:country dbpedia:Australia .
  ?organization a dbpedia:Organization ;
    dbpedia:hasMilitaryUnit ?militaryUnit .
  ?militaryUnit rdfs:label ""A Battery, Royal Australian Artillery"" .
}
```

This query will look for entities classified as 'Battery' with the unit type 'MilitaryUnit', which are located in Australia. Additionally, it looks for organizations that have a military unit with the label ""A Battery, Royal Australian Artillery"".",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
791,18,train,Give me the spouse of Taira no Tokuko and father of Emperor Go-Toba and predecessor of Emperor Antoku.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Emperor_Antoku> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse ?father ?predecessor
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace1 .
  ?person1 dbpedia:wife ?spouse .
  ?person1 dbpedia:parent ?father .
  ?person1 dbpedia:child ?emperor .
  ?emperor a dbpedia:Person;
    dbpedia:title ""Emperor Go-Toba"" .
  ?emperor dbpedia:son ?predecessor .
  ?predecessor a dbpedia:Person;
    dbpedia:title ""Emperor Antoku"" .
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
892,14,train,"Give me the entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?region WHERE {
  ?party dbpedia:name ""Democratic Party (Italy)"" .
  ?party dbpedia:politicalIdeology ""Social democracy"" .
  ?region a dbpedia:Region, dbpedia:Settlement ;
         dbpedia:partOf ?party .
}
```",2,6,3,2,1,3,3,71,0,0,587,0,0.0,0
124,7,train,Who is the person born on 1850-06-24?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  AND ?person rdf:type dbpedia:Indian ;
    dbpedia:birthDate ""1850-06-24""^^xsd:date .
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
122,0,train,Give me the band member of Lyrics Born.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Lyrics_Born> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandMember
WHERE {
  ?artist dbpedia:hasBandMember ?bandMember .
  ?artist rdfs:label ""Lyrics Born""@en .
}",1,1,2,1,1,2,2,9,0,0,7,0,0.0,0
158,6,train,Give me the party of Théodore Steeg and entity in France.,SELECT ?result WHERE { <http://dbpedia.org/resource/Théodore_Steeg> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> . },"SELECT ?party ?entityInFrance
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Théodore Steeg""@fr .
  ?person a dbpedia:OfficeHolder ;
    dbpedia:office dbpedia:Prime_Minister_of_Belgium ;
    dbpedia:term_start ""1940""^^xsd:gYear .
  ?person dbpedia:nationality dbpedia:Belgium .
  ?person dbpedia:memberOf ?party .
  OPTIONAL { ?person rdfs:seeAlso ?link }
  FILTER (lang(?name) = ""fr"")
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
18,11,train,"Give me the alumnus of the figure known, that is an educational institution, as Saints.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ""Saints""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?alumnus
WHERE {
  ?institution a dbpedia:EducationalInstitution;
    dbpedia:name ""Saints""@en .
  ?person a dbpedia:Alumnus;
    dbpedia:alumniOf ?institution .
}",2,3,3,2,1,2,3,28,0,0,21,0,0.0,0
433,18,train,Give me the associated musical artist of Paul Chambers and associated musical artist of Bill Evans and professional in Musician.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Paul_Chambers> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?musicalArtist1 ?musicalArtist2
WHERE {
  ?paulChambers a dbpedia:Person;
    dbpedia:birthPlace ""Coventry, West Midlands, England"";
    dbpedia:occupation dbpedia:Musician ;
    foaf:associatedWith ?musicalArtist1 .
  ?billEvans a dbpedia:Person;
    dbpedia:birthPlace ""Stoke-on-Trent, Staffordshire, England"";
    dbpedia:occupation dbpedia:Musician ;
    foaf:associatedWith ?musicalArtist2 .
  ?musicalArtist1 rdfs:label ""Musical Artist of Paul Chambers"" .
  ?musicalArtist2 rdfs:label ""Musical Artist of Bill Evans"" .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
417,7,train,"Who is the parent, that is a royalty, of Alexandrine of Mecklenburg-Schwerin?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Royalty .
  ?person ns:name ""Alexandrine of Mecklenburg-Schwerin"" .
}",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
326,12,train,"Give me the person decedent at the award, that is a country, of Adelbert Cronkhite and resident of Berkshire.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Adelbert_Cronkhite> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Berkshire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person ?awardCountry
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Berkshire"" .
  ?award a dbpedia:Award ;
            dbpedia:awardedTo ?person .
  ?awardCountry a dbpedia:Location;
               dbpedia:name ""United Kingdom"" .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
445,1,train,Give me the death place of Patrick Moore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?deathPlace
WHERE {
  ?person rdf:type dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
  FILTER (?person = ""Patrick Moore"")  # Ensure we're querying about Patrick Moore
}",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
192,6,train,"Give me the child of Mary of Hungary, Queen of Naples and spouse of Clemence of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Clemence_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_of_Hungary,_Queen_of_Naples> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:name ""Mary of Hungary"" .
  ?parent a dbpedia:Person;
    dbpedia:spouse dbpedia:PersonID_of_Clemence_of_Austria .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent;
    dbpedia:birthDate > ""1394-04-01"" AND dbpedia:birthDate < ""1433-04-01"" .
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
273,4,train,Give me the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?name ?location
WHERE {
  ?university a dbpedia:University;
    dbpedia:name ?name .
  ?university foaf:locatedIn ?location .
  ?university rdfs:label ""Università degli Studi di Torino"" .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
773,24,train,Give me the parent of the successor of Charles the Bald and parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?charles_bald a dbpedia:Person;
    dbpedia:father ?father .
  ?charles_fat a dbpedia:Person;
    dbpedia:father ?father .
}",3,3,4,2,2,3,3,71,0,2296,2,0.0,0.0,0
527,0,train,Give me the actor of The Book Tower.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Book_Tower> <http://dbpedia.org/property/starring> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?actor
WHERE {
  ?film a dbpedia:Film;
    dbpedia:productionCompany ""Filmistan"";
    dbpedia:title ""The Book Tower"" .
  ?actor a dbpedia:Actor;
    dbpedia:actedIn ?film .
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
917,5,train,"Who is the spouse, that is a royalty, of Leleiohoku I?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Leleiohoku_I> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Leleiohoku I"" .
  ?person dbpedia:spouse ?spouse .
}",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
573,26,train,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?v2 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?politician
WHERE {
  ?american_professional a dbpedia:American;
    dbpedia:occupation dbpedia:Politician .
  ?american_professional dbpedia:residence ?settlement .
  ?politician a dbpedia:Person;
    dbpedia:birthPlace ?settlement .
}",3,5,4,3,1,3,3,71,0,0,6537,0,0.0,0
773,1,train,Give me the parent of Carloman of Bavaria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"Given the lack of direct SPARQL resources for such specific historical data, a precise query to DBpedia or similar databases might not directly yield the answer. However, if we assume that DBpedia contains structured data about historical figures and their families, a general approach would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Carloman of Bavaria"";
    dbpedia:parent ?parent .
}
```

This query looks for a person with the birthplace ""Carloman of Bavaria"" and retrieves their parent. However, this might not directly work due to the specific nature of the question and the potential lack of direct relationships in DBpedia.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
933,19,train,Give me the reference to Alan Warner and band of the band of Alan Warner (musician).,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?artist dbpedia:hasBand ?bandName .
  ?artist rdfs:label ""Alan Warner""@en .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
192,7,train,"Give me the spouse of the spouse, that is a royalty, of Charles Martel of Anjou.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Martel_of_Anjou> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?secondSpouse
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:name ""Charles Martel of Anjou""@en .
  ?person1 dbpedia:spouse ?firstSpouse .
  ?firstSpouse a dbpedia:Person;
    dbpedia:name ?firstName .
  ?secondSpouse a dbpedia:Person;
    dbpedia:name ?secondName .
  ?firstSpouse dbpedia:spouse ?secondSpouse .
}",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
933,20,train,Give me the reference to the birth name of Alan Warner (musician) and band of Mike Elliott (saxophonist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName ?band
WHERE {
  ?musician a dbpedia:Musician;
    dbpedia:name ?birthName .
  ?saxophonist a dbpedia:Saxophonist;
    dbpedia:name ?name .
  ?musician dbpedia:isMemberOf ?band .
  ?band a dbpedia:Band ;
    dbpedia:hasSaxophonist ?saxophonist .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
582,20,train,"Give me the reference to Japan and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v2 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father WHERE {
  ?masami_nagasawa a dbpedia:Person;
    dbpedia:hasParent ?father .
  ?father a dbpedia:Athlete ;
    dbpedia:isManagerOf dbpedia:SportTeam .
}",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
417,4,train,"Who is the parent, that is a royalty, of Count Ingolf of Rosenborg?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Count_Ingolf_of_Rosenborg> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?father .
  ?person dbpedia:name ""Ingevald Eilert Vilhelm Gyldenløve"" .
}",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
212,5,train,"Give me the birthplace of the professional, that is a musical artist and an artist, in Singer, rapper, CEO, Facilities and Project Manager.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Singer, rapper, CEO, Facilities and Project Manager""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace ;
    dbpedia:startDate ""1858-08-14""^^<date> ;
    dbpedia:endDate ""1947-08-15""^^<date>
  FILTER (lang(?person) = ""en"")  # Ensure the person is English-speaking
}",2,4,3,2,1,2,2,9,0,0,1,0,0.0,0
445,36,train,Give me the entity in the award of the commander in Battle of Saint-Mihiel and entity in England.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?commander ?englishEntity
WHERE {
  ?battle dbpedia:instanceOf dbpedia:Battle_of_St_Mihiel .
  ?commander a dbpedia:Person;
    dbpedia:recipientOf dbpedia:Croix_de_Guerre_with_Palm .
  ?commander foaf:name ?name .
  ?englishEntity a dbpedia:Country; rdfs:label ""England"" .
  ?commander dbpedia:birthPlace ?birthPlace .
  ?commander dbpedia:deathPlace ?deathPlace .
  ?commander rdfs:seeAlso ?info .
  ?info rdf:type dbpedia:PersonInfo .
}
```",4,4,5,3,2,3,3,71,0,0,102,0,0.0,0
645,2,train,Give me the leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?ministerName WHERE {
  ?minister a dbpedia:OfficeHolder;
    dbpedia:office dbpedia:Ministerio_de_Defensa .
  ?minister rdfs:label ?ministerName .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
83,3,train,"Who is the person born, that is an athlete, on 1991-11-19?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ""1991-11-19""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbpedia:Athlete;
    dbpedia:birthDate ""1991-11-19"" .
}",1,2,2,1,1,2,2,9,0,0,30,0,0.0,0
98,1,train,Give me the child of Emperor Go-Shirakawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?parent dbpedia:name ""AK Abdul Momen"" .
}",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
47,16,train,"Give me the awardee of the award, that is an award, of Mantu Ghosh.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Mantu_Ghosh> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee
WHERE {
  ?award a dbpedia:Award;
    dbpedia:recipient ?awardee .
  ?award rdfs:label ""Mantu Ghosh Award""@en .
}",2,3,3,2,1,3,3,71,0,0,11,0,0.0,0
5,0,train,Give me the birthplace of Gerald Regan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Regan> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""Gerald Regan""@en .
}",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
445,22,train,Give me the entity in the award of George H. Cameron and entity in England.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  FILTER (lang(?name) = ""en"" || lang(?name) = ""in"") -- Assuming English or Indian languages for names
  AND (?person rdfs:label ""AK Abdul Momen"")
}
```",3,3,4,2,2,3,3,71,0,0,102,0,0.0,0
445,37,train,Give me the entity in United Kingdom and death place of the awardee of the establishment of 1820-03-10.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  AND ?person dbpedia:awardedDate ""1820-03-10""^^xsd:date .
}",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
124,2,train,Give me the military force of Battle of Atbara.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?militaryForce1 ?militaryForce2
WHERE {
  ?battle rdf:type dbo:Battle ;
    dbpedia:name ""Battle of Atbara"" .
  ?britishForce a dbpedia:MilitaryUnit;
    dbpedia:participatedIn ?battle .
  ?egyptianForce a dbpedia:MilitaryUnit;
    dbpedia:participatedIn ?battle .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
978,2,train,Give me the award of Michel Claparède.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michel_Claparède> <http://dbpedia.org/property/awards> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?award
WHERE {
  ?person dbpedia:awardedBy ?award .
  ?person rdfs:label ""Michel Claparède""@fr .
}",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
102,4,train,"Give me the resident, that is an athlete, of Dewsbury.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Dewsbury"";
    rdfs:label ?sport_or_label .
  ?person rdfs:label text ""athlete"" .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
273,5,train,Give me the alumnus of University of Turin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Turin> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?name
WHERE {
  ?person a dbpedia:Person;
    dbpedia:alumniOf dbpedia:University_of_Turin .
}",1,1,2,1,1,3,2,20,0,0,141,0,0.0,0
445,39,train,Give me the death place of Patrick Moore and entity in the award of the commander in Battle of Saint-Mihiel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Saint-Mihiel> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?deathPlace ?award
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Patrick Moore""@en .
  ?person dbo:militaryAward ?award .
  ?award rdfs:label ?awardLabel .
  ?battle a dbo:Battle ;
            dbo:identifier ""Saint-Mihiel, France""^^xsd:string .
  ?person dbpedia:participatedIn ?battle .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
965,5,train,"Give me the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1854-05-24""^^xsd:date;
    dbpedia:politicalAffiliation dbpedia:P31 .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
715,7,train,Who is the reference to Carlos Franco Iribarnegaray?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Carlos Franco Iribarnegaray""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  FILTER (lang(?name) = ""es"")  # Assuming Carlos Franco Iribarnegaray was Spanish
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
582,28,train,Give me the player in Kazuaki Nagasawa and reference to the residence of Hirotaka Sugawara and figure known as --10-19.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Kazuaki_Nagasawa> <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?playerName ?sugawaraResidence ?figureDescription
WHERE {
  ?player a dbpedia:SportPerson;
    dbpedia:sport [ rdf:type skos:Concept ;
                  rdfs:label ""Baseball"" ] .
  ?player dbpedia:memberOf [ a foaf:Organization ;
                          rdfs:label ""Yokohama DeNA BayStars"" ] .

  ?sugawara a dbpedia:Person;
    dbpedia:residence ?sugawaraResidence .

  ?figure a dbpedia:Concept;
    dbpedia:description ""October 19"" .
}
```

This SPARQL query looks for:
- A baseball player (`?player`) who is a member of the Yokohama DeNA BayStars.
- The residence (`?sugawaraResidence`) of Hirotaka Sugawara.
- A concept (`?figure`) described as ""October 19"".",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
987,37,train,"Give me the entity in Montenegro and birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:film dbpedia:Sniper ;
    dbpedia:birthPlace ?birthPlace .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
47,36,train,"Give me the office of the awardee of the entity, that is an award, in India and office of Suvendu Adhikari.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Suvendu_Adhikari> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardOffice ?awardeeOffice
WHERE {
  ?award a dbpedia:Award ;
    dbpedia:awardedTo ?awardee .
  ?awardee a dbpedia:Person ;
    dbpedia:office ?awardeeOffice .
  FILTER (lang(?awardeeOffice) = ""en"")  # Only consider English offices
}",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
955,9,train,"Give me the writer of the work, that is a work and an album and a musical work, of Matt Freeman.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Matt_Freeman> . ?v0 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?writer
WHERE {
  ?album a dbpedia:Album;
    dbpedia:artist ?artist .
  ?artist rdfs:label ""Matt Freeman""@en .
  ?album dbpedia:producer ?producer .
  ?producer rdfs:label ?writer .
}
```",2,5,3,2,1,3,2,20,0,0,31,0,0.0,0
495,2,train,Give me the parent of Princess Catherine of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthParent ?parent .
  ?person dbpedia:name ""Catherine Wilhelmina of Württemberg"" .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
274,11,train,"Give me the associated musical artist of the actor, that is a musical artist, of Imagine the Sound.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v1 . },"To extract this information from DBpedia, we would use a SPARQL query that looks for the actor's name in ""Imagine the Sound,"" then checks if they have any musical artist associated with them. Here is the SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actorName ?musicalArtist
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:mainActor ?actorName .
  ?actorName rdfs:seeAlso ?actorInfo .
  ?actorInfo a dbpedia:Person;
    dbpedia:associatedBand ?musicalArtist .
}
```",2,3,3,2,1,2,3,28,0,0,36,0,0.0,0
839,24,train,Give me the band of Matthias Röhr and band of the member of Böhse Onkelz.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Musician;
    dbpedia:band ?band .
  ?person rdfs:label ""Matthias Röhr""@de .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
216,11,train,Give me the player in the coach of Croatia national under-21 football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v0 . ?v0 <http://dbpedia.org/ontology/team> ?result . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?coach
WHERE {
  ?coach a dbo:Coach;
    dba:coachesTeam dba:Croatia national under-21 football team .
  ?coach rdf:type dbo:Person .
}",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
892,23,train,Give me the entity in the profession of the true self of Enrico Crolla.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Enrico Crolla""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:occupation ""Football player"" .
}",3,3,4,3,1,3,3,71,0,0,13092,0,0.0,0
456,39,train,"Give me the band of the band, that is a musical artist, of the band of Alan Doyle and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Alan Doyle""@en .
  ?person rdfs:member ?band .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
865,4,train,"Give me the residence, that is a country, of Ram Jaipal Singh Yadav.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Jaipal_Singh_Yadav> <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?residence
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Ram Jaipal Singh Yadav""@en .
  ?person a dbpedia:OfficeHolder ;
    dbpedia:office dbpedia:Minister_of_State_India ;
    dbpedia:term_start ""1971""^^xsd:gYear .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:residence ?residence .
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
456,16,train,"Give me the alter ego of the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?alterEgo
WHERE {
  ?character a dbpedia:Character;
    dbpedia:alterEgo ?alterEgo .
  ?character rdfs:label ""The Shadow""@en .
}",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
645,17,train,"Give me the office, that is a government agency and an organisation, of the native of Restoration (Spain).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office WHERE {
  ?king a dbpedia:Person;
    dbpedia:birthPlace <http://dbpedia.org/property/locationidentifier>Madrid; # Assuming Madrid as the birthplace for Alfonso XII
    dbpedia:monarchyStartYear 1874; # Year of his reign start
    foaf:name ""Alfonso XII of Spain"" .
  ?office a dbpedia:Organization;
    dbpedia:headOffice <http://dbpedia.org/property/name> ?officeName . # We need to find the name of the office
}
```

This SPARQL query looks for a person matching Alfonso XII's details and then finds the organization (government agency) they headed, specifically focusing on the head office name.",2,4,3,2,1,3,3,71,0,0,15,0,0.0,0
129,5,train,Give me the person born as Tahj Malik Chandler.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",1,1,2,1,1,2,3,28,0,100980,1,0.0,0.0,0
274,16,train,"Give me the band member of Dizzy Gillespie and associated musical artist of the actor, that is a musical artist, of Imagine the Sound.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Imagine_the_Sound> <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandMember ?musicalArtist
WHERE {
  ?gillespie a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?gillespie dbpprop:isBandMemberOf ?bandMember .
  ?musicalArtist rdfs:label ""Imagine the Sound"" .
  ?gillespie dbpprop:performedWith ?musicalArtist .
  ?musicalArtist rdfs:subClassOf dbpedia:MusicArtist .
  SOME ?actor WHERE {
    ?actor a dbpedia:Person;
      dbpedia:role ?role .
    ?actor dbpprop:actedIn ?movie .
    ?movie dbpedia:mainActor ?actor .
    ?movie rdfs:label ""Imagine the Sound"" .
  }
}",3,4,4,2,2,2,3,28,0,0,4,0,0.0,0
791,37,train,"Give me the father of Emperor Go-Toba and predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father ?father .
  ?person dbpedia:name ""Emperor Go-Toba"" .
  ?person2 a dbpedia:Person;
    dbpedia:parent ?father ;
    dbpedia:name ""Taira no Kiyomori"" .
  ?person2 dbpedia:child ?person .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
47,25,train,Give me the office of the awardee of Padma Vibhushan and office of Bidesh Ranjan Bose.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bidesh_Ranjan_Bose> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office_of_awardee ?office_of_bose
WHERE {
  ?awardee a dbpedia:Person;
    dbpedia:awardRecipientOf dbpedia:PadmaVibhushan .
  ?awardee dbpedia:hasOccupation ?office_of_awardee .
  ?bose a dbpedia:Person;
    dbpedia:office ?office_of_bose .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
888,11,train,"Give me the commander in the force, that is a societal event and an event, of Serhiy Kotenko and awardee of Hero of Ukraine.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ""Hero of Ukraine""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Serhiy_Kotenko> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander ?societal_event ?military_event
WHERE {
  ?person a dbpedia:Person;
    foaf:name ""Serhiy Kotenko"" .
  ?event a dbpedia:Event;
    dbpedia:type ""societal event"" .
  ?military_event a dbpedia:MilitaryEvent;
    dbpedia:commander ?commander .
  ?person rdf:type dbpedia:Person;
    dbpedia:participatedIn ?military_event .
  ?event dbpedia:hasParticipant ?person .
}",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
573,32,train,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}
```",4,6,5,2,2,3,3,71,0,100980,4,0.0,0.0,0
645,20,train,"Give me the commander in Battle of Jarama and military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?battle ?commander ?militaryForce
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Francisco Largo Caballero""@es .
  ?person dbpedia:birthPlace ""Spain""^^xsd:string .
  ?battle a dbpedia:Event;
    dbpedia:instanceOf dbpedia:Battle ;
    dbpedia:participatedIn ?person .
  ?battle dbpedia:commander ?commander .
  ?militaryForce a dbpedia:MilitaryForce .
}
```",3,6,4,2,2,3,3,71,0,0,6,0,0.0,0
773,4,train,Give me the father of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?result . },"Given that DBpedia provides structured data about historical figures including their family relationships, we can construct a SPARQL query to extract this information. The query would look for a person associated with Charles the Fat and then retrieve the father of that person:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?charles_the_fat a dbpedia:Person;
    dbpedia:hasFather ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
98,0,train,Give me the region of Philippine Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?region
WHERE {
  ?location a dbo:Location;
    rdfs:label ?region .
  FILTER (lang(?region) = ""en"")  # Select English language labels
}",1,1,2,1,1,2,3,28,0,743997,1874,0.0,0.0,0
865,30,train,Give me the father of AK Abdul Momen and native of British Raj and father of the child of Abu Ahmad Abdul Hafiz.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/British_Raj> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?fatherName ?birthPlace ?deathPlace
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person1 dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:name ?fatherName ;
    dbpedia:birthPlace ?birthPlace .
  ?person2 a dbpedia:Person;
    dbpedia:birthPlace ""British Raj"" .
  ?person2 dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:father ?father .
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
102,1,train,Give me the native of Dewsbury.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Dewsbury> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",1,1,2,1,1,3,2,20,0,100980,100,0.0,0.0,0
874,4,train,"Give me the band, that is an organisation, of Mark Read (singer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Read_(singer)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Person;
    dbpedia:role dbpedia:LeadSinger ;
    dbpedia:band ?band .
  ?person rdfs:label ""Mark Read""@en .
}",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
445,23,train,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/location> ?v0 . ?v2 <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?residencePlace
WHERE {
  ?athlete a dbpedia:Athlete;
    dbpedia:nationality dbpedia:United_Kingdom .
  ?athlete dbpedia:residencePlace ?residencePlace .
}
```",3,5,4,3,1,3,3,71,0,0,3570,0,0.0,0
826,0,train,Give me the spouse of Anna Magdalena Appel.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Anna Magdalena Bach""@de;
    dbpedia:spouse ?spouse .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
382,6,train,Give me the landmark at elevation of 100 and birthplace of Björn Joppe.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Björn_Joppe> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""100""^^<http://www.w3.org/2001/XMLSchema#integer> . }",PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?elevation ?birthPlace WHERE { ?landmark dbpedia:hasElevation ?elevation . ?landmark rdfs:label ?name . FILTER (lang(?name) = 'sv') . ?person a dbpedia:Person; foaf:name ?name . ?person dbpedia:birthPlace ?birthPlace . },2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
507,27,train,Give me the professional in the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?personName ?profession
WHERE {
  ?person dbo:birthDate ""1966-02-18"" .
  ?person a dbpedia:Person;
    dbpedia:occupation ?profession .
}",3,3,4,3,1,3,3,71,0,0,35603,0,0.0,0
933,34,train,"Give me the band of the band of the band, that is an artist and a musical artist, of The Ramong Sound and band of The Ramong Sound.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName
WHERE {
  ?band a dbpedia:Band;
    dbpedia:hasArtist ?artist .
  ?artist a dbpedia:Musician .
  ?bandName = str(?band)
}",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
773,31,train,Give me the parent of Carloman of Bavaria and spouse of the father of the parent of Bernard (son of Charles the Fat).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parent_of_carloman_spouse_of_father
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:spouse ?spouse .
  ?spouse a dbpedia:Person;
    dbpedia:name ""Hemma"" .
  ?parent_of_carloman_spouse_of_father a dbpedia:Person;
    dbpedia:child ?person .
  ?person rdfs:label ""Carloman of Bavaria"" .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
216,27,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },{sparql_query},3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
888,13,train,"Give me the commander in the force, that is a societal event and an event, of the military force of War in Donbas (2014–2022).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/War_in_Donbas_(2014–2022)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:conflict dbpedia:War_in_Donbas .
  ?person rdfs:label ?name .
  ?person dbpedia:military_role ""Commander"" .
}
```",3,5,4,3,1,3,2,20,0,0,110,0,0.0,0
582,15,train,"Give me the residence of the reference, that is a scientist, to Hirotaka Sugawara.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Hirotaka Sugawara""@en . ?v1 <http://dbpedia.org/property/residence> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?residence
WHERE {
  ?person a dbpedia:Person;
    foaf:name ""Hirotaka Sugawara"" .
  ?person dbpedia:birthPlace Japan.
}",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
170,16,train,Give me the domain of the profession of John Scholey and entity in Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/leaderTitle> ?v2 . <http://dbpedia.org/resource/John_Scholey> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person ?profession
WHERE {
  ?person a dbpedia:Person;
    dbpedia:occupation ?profession .
  FILTER (lang(?person) = 'ru' )  # Find only persons in Russia
}
```",3,3,4,2,2,2,3,28,0,0,99,0,0.0,0
987,7,train,"Give me the time zone, that is a sports event, in Canicosa de la Sierra.",SELECT ?result WHERE { <http://dbpedia.org/resource/Canicosa_de_la_Sierra> <http://dbpedia.org/ontology/timeZone> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"To extract this information from DBpedia, we can use a SPARQL query that looks for sports events in Canicosa de la Sierra and then determines the time zone. However, since DBpedia does not directly provide time zones for specific events, we will infer the time zone based on the location's general time zone.

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?timeZone
WHERE {
  ?event a dbpedia:Event;
    dbpedia:location ?location .
  ?location rdfs:label ""Canicosa de la Sierra""@es.
  FILTER (lang(?location) = ""es"") .
  ?location geo:timezoneOffset ?offset .
  OPTIONAL { ?offset rdfs:label ?timeZone . }
}
```

This query looks for events in Canicosa de la Sierra and then tries to infer the time zone based on the `geo:timezoneOffset` property, which gives the offset from UTC. The optional part of the query attempts to find a label for this offset, which would correspond to the time zone.",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
507,38,train,"Give me the professional in the profession of Guy Ferland and director of the movie, that is a movie and a work, with Beryl Reid.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/director> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Beryl_Reid> . <http://dbpedia.org/resource/Guy_Ferland> <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?director
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:actor ?actor .
  ?actor foaf:name ""Beryl Reid"" .
  ?movie dbpedia:director ?director .
}",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
129,16,train,Give me the associated musical artist of the person born as Tahj Malik Chandler and professional in .,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tahj Malik Chandler""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?associated_artist
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Tahj Malik Chandler""@en .
  ?person dbpedia:profession ""music producer""@en .
  ?person dbpedia:associatedArtist ?associated_artist .
}
```",3,3,4,2,2,2,3,28,0,0,7,0,0.0,0
888,1,train,Give me the awardee of Hero of Ukraine.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Hero of Ukraine""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedWith dbpedia:HeroOfUkraine .
}",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
582,32,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa and reference to the residence of Hirotaka Sugawara.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Hirotaka_Sugawara> <http://dbpedia.org/property/residence> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father WHERE {
  ?nagasawa a dbpedia:Person;
    dbpedia:hasParent ?father .
  ?father a dbpedia:Person;
    dbpedia:role dbpedia:SoccerManager ;
    dbpedia:role dbpedia:SportsManager .
}

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?birthPlace WHERE {
  ?father rdf:type dbo:Athlete .
  ?father dbo:sportsManager dbpedia:SoccerManager .
  ?father dbo:residence ?birthPlace .
}",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
773,29,train,Give me the parent of the successor of Charles the Bald and parent of Charles the Fat and spouse of Louis the German.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parentOfCharlesTheFat ?spouseOfLouisTheGerman
WHERE {
  ?charlesTheBald a dbpedia:Monarch;
    dbpedia:successor ?louisTheStammerer .
  ?charlesTheFat a dbpedia:Person;
    dbpedia:father ?parentOfCharlesTheFat .
  ?louisTheGerman a dbpedia:Person;
    dbpedia:sibling ?charlesTheBald .
  ?louisTheGerman a dbpedia:Person;
    dbpedia:spouse ?spouseOfLouisTheGerman .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
826,23,train,Give me the spouse of the child of the father of Anna Magdalena Appel.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childSpouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Johann Sebastian Bach""@de;
    dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:name ""Johann Sebastian Bach""@de .
  ?father dbpedia:children ?childList .
  ?childList member [ ?child a dbpedia:Person; dbpedia:name ""Anna Magdalena Bach""@de ] .
  ?child a dbpedia:Person;
    dbpedia:spouse ?childSpouse .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
465,14,train,"Give me the successor of the child, that is a royalty, of Anne of Brittany.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Anne_of_Brittany> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successor
WHERE {
  ?royaltyPerson a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:monarchyRole dbpedia:Monarchy_Role_of_France ;
    dbpedia:deathDate ?deathDate .
  FILTER (STRFTER(?deathDate, ""1504-05-10"") || STRFTER(?deathDate, ""1547-09-10""))  # Ensuring the child lived before Henry IV's reign
  ?child dbpedia:hasSuccessor ?successor .
}
```

This SPARQL query looks for a person who is a child of Anne of Brittany's children and has a monarchy role related to the French monarchy, with a death date before Henry IV's reign (1504-05-10 for François II's death and 1547-09-10 for Clément VII's death). The `FILTER` clause ensures we only consider children who lived before Henry IV's reign, making him their logical successor.",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
573,24,train,"Give me the person decedent at the residence, that is a settlement, of William J. Phelan and parent of John Quincy Adams.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/William_J._Phelan> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parentName
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""John Quincy Adams"" .
  ?parent dbpedia:birthPlace <http://dbpedia.org/property/location> ?residence .
  ?residence a dbpedia:Settlement ;
               dbpedia:hasResident William J. Phelan .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
933,4,train,Who is the band of Alan Warner (musician)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Alan Warner""@en .
  ?person rdfs:member ?band .
}",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
826,1,train,"Give me the successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","{sparql_query: SELECT ?successor WHERE { dbpedia:Louis_II,_Grand_Duke_of_Hesse rdfs:successor ?successor } LIMIT 1}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
166,7,train,Give me the resting place of the military force of Spanish Civil War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?restingPlace
WHERE {
  ?force a dbpedia:MilitaryUnit;
    dbpedia:conflict dbpedia:Spanish_Civil_War .
  ?force dbpedia:restingPlace ?restingPlace .
}
```",2,2,3,2,1,3,2,20,0,0,36,0,0.0,0
874,7,train,"Give me the band of the writer, that is an artist and a musical artist, of Mezzanine (album).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band 
WHERE {
  ?album a dbpedia:Album;
    dbpedia:artist ?artist .
  ?artist a dbpedia:MusicArtist .
  ?album dbpedia:hasBand ?band .
}
```",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
83,3,train,"Give me the birthplace, that is a town and Brazilian and a soccer club, of Sandro (footballer, born October 1983).","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Sandro_(footballer,_born_October_1983)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?soccerClub
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:nationality dbpedia:Brazil .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  ?soccerClub a dbpedia:SoccerClub; dbpedia:hasPlayer ?person .
  FILTER (regex(str(?birthPlaceLabel), ""Sandro"")).
}",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
445,30,train,Give me the entity in England and death place of Patrick Moore and entity in the award of George H. Cameron.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/England> . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Patrick_Moore> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  
  ?nobelPrize a dbpedia:Nobel_Prize ;
    dbpedia:nobel_prize_category ""Chemistry"" ;
    dbpedia:awardedTo ?awardee .
  
  ?awardee a dbpedia:Person;
    rdfs:label ""George H. Cameron""@en .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
216,36,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on the death of Pavel Vezhinov and player in Igor Bišćan.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Pavel_Vezhinov> <http://dbpedia.org/ontology/deathDate> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?team
WHERE {
  ?player a dbpedia:SportPerson;
    dbpedia:role ""Soccer player"" .
  ?player dbpedia:deathDate ""2007-04-07""^^xsd:date .
  ?manager a dbpedia:Person;
    dbpedia:role ""Sports manager"" ;
    dbpedia:role ""Football manager"" .
  ?team dbpedia:hasMember ?player .
  ?team dbpedia:hasManager ?manager .
}
```

This SPARQL query looks for a team that has both a soccer player (with the role ""Soccer player"") and a sports manager who is also a soccer manager. It filters by the death date of Pavel Vezhinov (April 7, 2007) to ensure we are looking at his time period.",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
433,1,train,Give me the associated musical artist of Bill Evans.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?associatedArtist
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate [isBefore ""1938-08-16""].
  ?person rdfs:label ""Bill Evans""@en.
  ?person a dbpedia:Musician .
  ?person dbpedia:associatedWith ?associatedArtist .
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
433,27,train,Give me the professional in the profession of the writer of Slowhand at 70 – Live at the Royal Albert Hall.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Slowhand_at_70_–_Live_at_the_Royal_Albert_Hall> <http://dbpedia.org/property/writer> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?artistProfession
WHERE {
  ?artist dbpedia:hasMusicAlbum ""Slowhand at 70 – Live at the Royal Albert Hall"";
  ?artist a dbpedia:Artist;
    dbpedia:birthPlace ""Nigeria"";
    dbpedia:genre ""Blues Rock"";
    dbpedia:occupation ?artistProfession .
}",3,3,4,3,1,3,3,71,0,0,51837,0,0.0,0
976,5,train,"Give me the reference, that is an organisation and a political party and Turkish, to Millet İttifakı.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Millet İttifakı""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Turkey>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?organization ?party
WHERE {
  ?organization a dbpedia:Organization;
    dbpedia:name ""Millet İttifakı"" .
  ?organization dbpedia:politicalParty ?party .
}",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
507,2,train,"Give me the professional in Film director, television director.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?director
WHERE {
  ?director a dbpedia:Person;
    dbpedia:birthDate ?birthDate .
  FILTER (STRFTER(?birthDate, ""1947-"") = 0)
}
```",1,1,2,1,1,3,3,71,0,0,38,0,0.0,0
955,3,train,Give me the writer of Don't Forget Your Roots (album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Don't_Forget_Your_Roots_(album)> <http://dbpedia.org/property/writer> ?result . },"Given that the album is likely by a band formed after the British Raj period (as the British Raj ended in 1947), it's important to note that most bands formed after this time would not have had their activities during the Raj. Therefore, we need to consider the artist's birthplace and any known connections to the British Raj.

However, without specific information about the band or artist's ties to the British Raj, a direct query might not yield results. Instead, we can assume that the artist is from a region that was part of the British Raj at some point. For simplicity, let's consider a generic approach:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  OPTIONAL { ?person dbpedia:deathPlace ?deathPlace }
}
```

This query will return the birthplace of any person (in this case, likely the artist or band members) associated with ""Don't Forget Your Roots"" and optionally their death place if available.",1,1,2,1,1,3,2,20,0,0,19,0,0.0,0
329,5,train,"Give me the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  OPTIONAL { ?person rdfs:label ""Robert Bates""@en . }
}
```",1,3,2,1,1,2,3,28,1,109573,0,9.126252578166353e-06,1.0,1.8252338580880676e-05
417,33,train,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland and spouse of Princess Caroline-Mathilde of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  ?king a dbpedia:Person;
    dbpedia:father [ dbpedia:name ""Christian X of Denmark"" ].
  ?princess a dbpedia:Person;
    dbpedia:sibling ?child;
    dbpedia:spouse [ dbpedia:name ""Princess Caroline-Mathilde of Denmark"" ].
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
582,29,train,"Give me the reference to Japan and figure known as --10-19 and player in the father, that is an athlete and a soccer manager and a sports manager, of Masami Nagasawa.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""--10-19""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Masami_Nagasawa> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?player WHERE {
  ?player a dbpedia:Person;
    dbpedia:birthPlace japan .
  ?player dbpprop:role dbpedia:SoccerManager .
  ?player foaf:managerOf ?masamiNagasawa .
  ?masamiNagasawa a dbpedia:Person;
    dbpedia:name ""Masami Nagasawa"" .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
573,33,train,"Give me the person decedent at the residence, that is a settlement, of the professional, that is American, in Politician and person decedent at Massachusetts.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/occupation> ""Politician""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?personName ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Politician;
    dbpedia:birthPlace Massachusetts .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",4,6,5,3,2,3,3,71,0,0,400,0,0.0,0
888,5,train,Give me the award of Oleksandr Syrskyi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?award
WHERE {
  ?person a dbpedia:Person;
    dbpedia:office ?office .
  ?office rdfs:label ""Prime Minister of Ukraine"" .
  ?person rdfs:receivedAward ?award .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
773,17,train,"Give me the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:birthPlace ""Carloman_of_Bavaria"";
    dbpedia:officesheld [ dbpedia:office ""King_of_Bavaria"" ] .
  ?child a dbpedia:Person;
    dbpedia:father ?parent;
    dbpedia:royalty true .
}",2,5,3,2,1,3,3,71,0,0,3,0,0.0,0
47,8,train,Give me the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee
WHERE {
  ?awardee a dbpedia:Person;
    dbpedia:awardedWith dbpedia:PadaVibhushan .
}
```",1,1,2,1,1,3,3,71,0,0,86,0,0.0,0
527,14,train,"Give me the author of the work, that is a work and a book, of the host of Hyperland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Hyperland> <http://dbpedia.org/ontology/presenter> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"SELECT ?author
WHERE {
  ?work a dbpedia:Work;
    dbpedia:type [ rdf:value ""book"" ] .
  ?work a dbpedia:Work;
    dbpedia:type [ rdf:value ""documentary"" ] .
  ?work rdfs:label ""Hyperland"" .
  ?work dc:creator ?author .
}",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
527,3,train,"Give me the movie, that is a work and English and a television show, with Bernard Bresslaw.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Bernard_Bresslaw> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query for movies featuring Bernard Bresslaw
SELECT ?movieTitle WHERE {
  ?movie a dbpedia:Film;
    dbpedia:actor ?actor .
  ?actor rdfs:label ""Bernard Bresslaw""@en .
}

# Filter to only include films originally produced in English
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
SELECT ?movieTitle WHERE {
  ?movie a dbpedia:Film;
    dbpedia:originalLanguage ""en"" .
  ?movie dbpedia:actor ?actor .
  ?actor rdfs:label ""Bernard Bresslaw""@en .
}

# Query for television shows featuring Bernard Bresslaw
SELECT ?tvShowTitle WHERE {
  ?tvShow a dbpedia:TelevisionSeries;
    dbpedia:actor ?actor .
  ?actor rdfs:label ""Bernard Bresslaw""@en .
}

# Filter to only include shows originally produced in English
PREFIX rdf:
<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX skos:
<http://www.w3.org/2004/02/skos/core#>
SELECT ?tvShowTitle WHERE {
  ?tvShow a dbpedia:TelevisionSeries;
    dbpedia:originalLanguage ""en"" .
  ?tvShow dbpedia:actor ?actor .
  ?actor rdfs:label ""Bernard Bresslaw""@en .
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
917,30,train,Give me the child of the father of Kamehameha IV and parent of Albert Kamehameha and child of Kekūanāoʻa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Kekūanāoʻa> . <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commonChild
WHERE {
  ?father dbpedia:parentOf ?child1 .
  ?child1 dbpedia:childOf ?grandchild .
  ?grandchild dbpedia:parent ?kekuanaoa .
  ?other_child dbpedia:child ?kekuanaoa .
  ?commonChild a dbpedia:Person;
    dbpedia:child ?child1 .
    dbpedia:parent ?father .
    dbpedia:birthPlace ""Hawaii"" .
  FILTER (fn:exists((?child1 ns:childOf ?other_child)) )
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
443,2,train,Give me the birthplace of Carl Larsson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""Carl Larsson""@sv .
}",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
791,38,train,"Give me the father of the child, that is a royalty, of Emperor Takakura and predecessor of the child of Emperor Takakura.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?child .
  ?child a dbpedia:Person;
    dbpedia:title ""Emperor Takakura of Japan"";
    dbpedia:succeededBy ?successor .
  ?successor a dbpedia:Person;
    dbpedia:title ""Emperor Go-Daigo of Japan"" .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
47,34,train,"Give me the office of Ajoy Mukherjee and office of the administration of the commander, that is a politician, in Operation Green Hunt.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Ajoy_Mukherjee> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Operation_Green_Hunt> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?office1 ?office2
WHERE {
  ?politician a dbpedia:Person;
    dbpedia:office ?office1 .
  ?operation a dbo:Operation ;
               dbpedia:codeName ""Green Hunt"" .
  ?administration a dbpedia:Organization ;
                    dbpedia:role dbo:CommanderOf ?operation .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
130,9,train,"Give me the film, that is a soccer club and an organisation, of the native, that is a coach and a college coach, of Madison, Alabama.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Madison,_Alabama> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. ?result <http://dbpedia.org/ontology/director> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?filmTitle ?organizationType
WHERE {
  ?club a dbo:SoccerClub;
    dbpedia:location ""Madison, Alabama"";
    dbpedia:coach ?coach .
  ?coach a dbpedia:Person;
    dbpedia:birthPlace ""Madison, Alabama"";
    dbpedia:role dbpedia:CollegeCoach .
  ?film ?filmTitle ;
        dbpedia:subject ?coach .
}
```

This query looks for a soccer club in Madison, Alabama, with a coach who is both from Madison and also a college coach. It then finds any films associated with this coach.",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
839,10,train,Give me the band of Matthias Röhr and band of Kevin Russell (musician).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Matthias_Röhr> . <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Musician;
    dbpedia:associatedBand ?band .
  ?person ns:name ""Matthias Röhr"" .
  ?person a dbpedia:Musician;
    dbpedia:associatedBand ?band .
  ?person ns:name ""Kevin Russell"" .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
773,7,train,"Give me the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""742""^^<http://www.w3.org/2001/XMLSchema#date>;
    dbpedia:deathPlace ""814""^^<http://www.w3.org/2001/XMLSchema#date>;
    dbpedia:father ?father .
  ?person rdfs:label ""Carloman of Bavaria""@en .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
232,3,train,Give me the person born as Emily Katherine Jacques.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Emily Katherine Jacques""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",1,1,2,1,1,2,2,9,0,100980,1,0.0,0.0,0
267,8,train,Give me the person born on the birth date of Dan Cathy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Dan_Cathy> <http://dbpedia.org/ontology/birthDate> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthday ?date .
  ?date rdfs:label ""1953-03-29"" . # Assuming Dan Cathy's birth date is March 29, 1953
}",2,2,3,2,1,3,2,20,0,0,35,0,0.0,0
124,36,train,"Give me the commander in Mahdist War and military force of the force, that is a societal event and a military conflict, of the person born on 1850-06-24.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1850-06-24""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Mahdist_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?person ?role ?militaryForce
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1850-06-24""^^xsd:date;
    dcterms:partOfEvent dbpedia:Mahdist_War ;
    dbpedia:roleInConflict ?role .
  ?role a dbpedia:RoleInConflictType .
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
926,24,train,Give me the successor of the child of Ahmed III and child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ahmed_III> . ?v2 <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?successor
WHERE {
  ?sultan a dbpedia:SultanOfOttomanEmpire;
    dbpedia:son ?child .
  ?child a dbpedia:Person;
    dbpedia:name ""Mustafa II"" .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
933,18,train,Give me the reference to Alan Warner and band of The Ramong Sound and band of Mike Elliott (saxophonist).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person ?band
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Alan Warner"" .
  ?person dbpedia:bandMember [ a dbpedia:Band ;
                           rdfs:label ?bandLabel ] .
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
965,28,train,"Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine and parent of Louise Mountbatten and parent of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""Prince Louis of Battenberg""@en .
  ?person rdfs:label ""Julia Hilda Florence Maitland""@en .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
933,0,train,Give me the band of Mike Elliott (saxophonist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Musician;
    dbpedia:associatedBand ?band .
  ?person rdfs:label ""Mike Elliott""@en .
  ?band rdfs:label ""Radiohead""@en .
}",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
554,6,train,Give me the leader of Portuguese Mozambique and leader of Portuguese São Tomé and Príncipe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Portuguese_São_Tomé_and_Príncipe> <http://dbpedia.org/property/leader> ?result . <http://dbpedia.org/resource/Portuguese_Mozambique> <http://dbpedia.org/property/leader> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?leaderName WHERE {
  ?country a dbpedia:Country;
    dbpedia:capital ?capital .
  ?governor a dbpedia:OfficeHolder;
    dbpedia:office dbpedia:GovernorGeneral_of_Mozambique ;
    dbpedia:officeStart ""1935-06-08""^^xsd:date;
    dbpedia:officeEnd ""1975-06-25""^^xsd:date .
  ?country ns:name ""Mozambique""@en .
  ?governor ns:givenName ?leaderName .
}

AND
{
  ?country a dbpedia:Country;
    dbpedia:capital ?capital .
  ?governor a dbpedia:OfficeHolder;
    dbpedia:office dbpedia:GovernorGeneral_of_Sao_Tome_and_Principe ;
    dbpedia:officeStart ""1953-07-12""^^xsd:date;
    dbpedia:officeEnd ""1975-07-12""^^xsd:date .
  ?country ns:name ""São Tomé and Príncipe""@en .
  ?governor ns:givenName ?leaderName .
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
933,25,train,"Give me the band of the band, that is a group and a band and an organisation, of Alan Warner (musician) and reference to Alan Warner.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://xmlns.com/foaf/0.1/name> ""Alan Warner""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName ?alanWarnerReference
WHERE {
  ?alanWarner a dbpedia:Person;
    dbpedia:name ""Alan Warner""@en .
  ?band a dbpedia:Band; 
    dbpedia:members ?alanWarner .
  ?alanWarner rdfs:label ?alanWarnerReference .
}",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
865,14,train,Give me the father of the child of Abu Ahmad Abdul Hafiz.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Abu Ahmad Abdul Hafiz"";
    dbpedia:hasChild ?child .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
459,6,train,Give me the governor of Oklahoma and governor of Dana Murphy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?governor
WHERE {
  ?state a dbpedia:PoliticalSubdivision;
    dbpedia:name ""Oklahoma""@en .
  ?person a dbpedia:OfficeHolder;
    dbpedia:office dbpedia:GovernorOf; 
    dbpedia:officeLocation ?state .
  ?town a dbpedia:Town; 
    dbpedia:name ""Dana Murphy""@en .
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?town .
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
5,9,train,"Give me the person born, that is a politician, as the award of Renata Adler.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?politician WHERE {
  ?politician a dbpedia:Politician ;
    dbpedia:awardedWith dbpedia:RenataAdler .
}
```",2,3,3,2,1,3,2,20,0,0,169,0,0.0,0
965,31,train,Give me the parent of Louise Mountbatten and spouse of the spouse of the parent of Louise Mountbatten.,SELECT ?result WHERE { <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?v2 . },{sparql_query},4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
382,13,train,"Give me the birthplace of the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:role dbpedia:SoccerManager ;
    dbpedia:role dbpedia:Athlete .
  ?person dbpedia:managedPlayer Lukas Kübler.
}",3,6,4,3,1,3,2,20,0,0,5,0,0.0,0
5,8,train,Give me the entity in the award of Coro de la Pontificia Universidad Católica de Puerto Rico.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?recipient
WHERE {
  ?recipient a dbpedia:Person;
    dbpedia:awardedBy <http://dbpedia.org/property/awardedBy>;
    dbpedia:awardName ""Coro de la Pontificia Universidad Católica de Puerto Rico"".
}",2,2,3,2,1,3,2,20,0,0,20990,0,0.0,0
926,3,train,Give me the spouse of Neşerek Kadın.,SELECT ?result WHERE { <http://dbpedia.org/resource/Neşerek_Kadın> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf:<http://xmlns.com/foaf/0.1/>

SELECT ?spouse
WHERE {
  ?neşerek_kadın a dbpedia:Person;
    dbpedia:birthPlace ""Konya, Turkey"";
    foaf:spouseOf ?spouse .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
465,12,train,Give me the successor of Renée of France and spouse of Archduchess Barbara of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?successorSpouse ?wife
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthPlace ""France"" .
  ?person1 dbpedia:deathPlace ""France"" .
  ?person2 a dbpedia:Person;
    dbpedia:birthPlace ""Austria"" .
  ?person2 dbpedia:deathPlace ""Austria"" .
  ?person1 dbpedia:succeededBy ?successorSpouse .
  ?person2 dbpedia:spouse ?wife .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
933,11,train,Give me the band of the band of Alan Warner (musician).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Musician;
    dbpedia:band ?band .
  ?person rdfs:label ""Alan Warner""@en .
  ?band rdfs:label ?bandLabel .
}",2,2,3,2,1,3,3,71,0,0,26,0,0.0,0
965,20,train,"Give me the parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of Prince Louis of Battenberg.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Prince Louis of Battenberg"";
    dbpedia:spouse ?wife .
  ?wife a dbpedia:Person;
    dbpedia:name ""Princess Victoria of Hesse and by Rhine"" .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?child dbpedia:isDescendantOf ?person .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
773,27,train,"Give me the parent of the child, that is a royalty, of the father, that is an office holder and a royalty, of Carloman of Bavaria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Carloman_of_Bavaria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:officeHolder true;
    dbpedia:royalty true .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent;
    dbpedia:royalty true .
  FILTER (STRSTARTS (?parent, ""Carloman of Bavaria""))
}
```",3,6,4,3,1,3,3,71,0,0,2,0,0.0,0
917,7,train,"Who is the child, that is a royalty, of Kamehameha III?",SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?childName ?royaltyStatus
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father Kamehameha III .
  ?person a dbpedia:Person;
    dbpedia:birthPlace Hawaii .
  ?person rdfs:label ?childName .
  ?person dbpedia:royaltyStatus ?royaltyStatus .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
216,4,train,Give me the coach of Croatia national under-21 football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?coach
WHERE {
  ?team a dbpedia:SportsTeam;
    dbpedia:sport dbpedia:Soccer ;
    dbpedia:homeCountry dbpedia:Croatia ;
    dbpedia:currentCoach ?coach .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
341,3,train,"Give me the work, that is a work and an album, of Serrano.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/property/writer> ""Serrano""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?work WHERE { ?work a dbpedia:Artwork ; dbpedia:artist ?artist . ?artist rdfs:label ?name FILTER (regex(?name, 'Serrano')) }",1,3,2,1,1,2,2,9,0,0,7,0,0.0,0
507,17,train,Give me the profession of the person born on 1966-02-18.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?personProfession
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1966-02-18"" .
  ?person rdfs:label ?personProfession .
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
456,4,train,Give me the actor of Pacific Drive.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?result . },"Given that DBpedia provides structured data about various TV shows and their cast members, the SPARQL query to retrieve the actor(s) of ""Pacific Drive"" would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor
WHERE {
  ?series a dbpedia:TelevisionSeries;
    dbpedia:name ""Pacific Drive"".
  ?series dbpedia:hasMainCharacter ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
459,10,train,"Give me the governor of the administration, that is a politician, of Brad Henry.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?result . ?v0 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governor
WHERE {
  ?governor a dbpedia:OfficeHolder;
    dbpedia:office dbpedia:GovernorOfOklahoma .
  ?governor rdfs:label ?name .
  ?governor dbpedia:term dbpedia:Brad_Henry .
}",2,3,3,2,1,2,3,28,0,0,10,0,0.0,0
130,14,train,"Give me the entity in the administration, that is American, of the award of Živko Ključe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Živko_Ključe> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/governor> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardAdministration WHERE {
  ?award a dbpedia:Award ;
    dbpedia:administers ?awardAdministration .
  ?awardLabel rdfs:label ""Živko Ključe""@en .
}
```",3,4,4,3,1,3,2,20,0,0,26076,0,0.0,0
18,10,train,Give me the parent of the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parentProfession
WHERE {
  ?actress a dbpedia:Person;
    dbpedia:role dbpedia:Actress .
  ?actress a dbpedia:OccupationRole;
    dbpedia:role ?parentProfession .
}
```",2,2,3,2,1,2,3,28,0,0,1063,0,0.0,0
715,38,train,"Give me the leader of the office, that is a government agency and an organisation, of Carlos Franco Iribarnegaray and commander in the force of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . <http://dbpedia.org/resource/Carlos_Franco_Iribarnegaray> <http://dbpedia.org/property/office> ?v2 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?leader WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1897-04-30"";
    rdfs:label ""Carlos Franco Iribarnegaray""@es;
    foaf:member ?organization .
  ?organization a dbpedia:Organization;
    dbpedia:leader ?leader .
  ?person ns:inRole [ a ns:Role; rdfs:label ""commander"" ] ;
    dbpedia:underCommandOf ?organization .
}
```

This SPARQL query looks for Carlos Franco Iribarnegaray's membership in an organization and identifies the leader of that organization. It also checks if he was a commander within that organization, which would imply a leadership role under Francisco Largo Caballero.",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
935,9,train,"Give me the awardee of the award, that is an award, of Syed Sohail Hussain Naqvi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Syed_Sohail_Hussain_Naqvi> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?award
WHERE {
  ?person dbpedia:awardedWith ?award .
  ?person rdfs:label ""Syed Sohail Hussain Naqvi""@en .
  ?award a dbpedia:Award .
}",2,3,3,2,1,3,2,20,0,0,52,0,0.0,0
791,11,train,"Give me the spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royaltySpouse
WHERE {
  ?emperor spouse [ dbpedia:isPartOf dbpedia:Japanese_Empire ].
  ?empressConsort spouse ?royaltySpouse .
  ?royaltySpouse a dbpedia:Person; dbpedia:isRoyal true .
}",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
978,6,train,Give me the band member of Chicane (musician) and band member of Enya.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Enya> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chicane_(musician)> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandMember1 ?bandMember2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:role ""lead_singer"" ;
    dbpedia:band dbpedia:Chicane .
  ?person2 a dbpedia:Person;
    dbpedia:role ""lead_singer"" ;
    dbpedia:band dbpedia:Enya .
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
216,13,train,Give me the office of the mayor of Ros Bates and party of Campbell Newman.,SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office ?party
WHERE {
  ?mayor a dbpedia:OfficeHolder;
    dbpedia:office ?office .
  ?politician a dbpedia:Person;
    dbpedia:birthPlace ""Campbell Newman"";
    dbpedia:politicalParty ?party .
}",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
791,33,train,"Give me the predecessor of the child of the child, that is an office holder and a royalty, of Emperor Go-Shirakawa and spouse of Taira no Tokuko.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Emperor_Go-Shirakawa> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?predecessor
WHERE {
  ?child a dbpedia:Person;
    dbpedia:offices dbpedia:OfficeHolder .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:children ?grandchildren .
  ?grandchildren a dbpedia:Person;
    dbpedia:birthDate <2000-01-01> # Assuming Prince Takamatsu was born after 1900 for simplicity
  FILTER (str(?child.name) = ""Takamatsu"" && str(?parent.name) = ""Go-Shirakawa"")
}
```

This SPARQL query looks for a child of Go-Shirakawa named Takamatsu who held office and then finds their predecessor among Go-Shirakawa's children.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
433,26,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?associated_artist
WHERE {
  ?artist a dbpedia:Artist ;
            dbpedia:musicalArtist ?associated_artist .
  ?artist rdfs:label ""Ornette Coleman""@en .
}
```",3,7,4,3,1,3,3,71,0,0,117,0,0.0,0
606,1,train,Give me the birthplace of Charles I. Barber.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I._Barber> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",1,1,2,1,1,3,2,20,1,100979,0,9.902951079421667e-06,1.0,1.9805706023905488e-05
326,3,train,Give me the profession of Susanne Lewis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Susanne_Lewis> <http://dbpedia.org/property/occupation> ?result . },"Given the reasoning above, the SPARQL query to find Susanne Lewis's profession would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?profession
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Susanne Lewis"" .
  OPTIONAL { 
    ?person rdfs:label ?description . }
    FILTER (lang(?description) = ""en"")  # Assuming English language for the name and profession
  }
  ?person dbpedia:occupation ?profession .
}
```

This query first identifies individuals named Susanne Lewis, then looks for an associated occupation (`dbpedia:occupation`) to determine her profession.",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
329,10,train,"Give me the entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?country
WHERE {
  ?country a dbo:Country;
    dbpprop:timeZone ""Europe/Lisbon"" @en.
}",2,3,3,2,1,2,3,28,0,0,46363,0,0.0,0
645,18,train,Give me the commander in Battle of Jarama and military force of Spanish Civil War and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

-- Battle of Jarama Commander
SELECT ?commander
WHERE {
  dbpedia:Battle_of_Jarama a dbpedia:Event;
    dbpedia:participatingMilitaryUnit ?commander .
}

-- Spanish Civil War Military Forces
SELECT DISTINCT ?force
WHERE {
  ?event a dbpedia:Event;
    dbpedia:conflict ""Spanish Civil War"";
    dbpedia:participatingMilitaryUnit ?force .
  FILTER (lang(?event) = ""en"")
}

-- Leader of Ministry of the Army (Spain) during Spanish Civil War
SELECT ?leader
WHERE {
  dbpedia:Ministry_of_the_Army_(Spain) a dbpedia:Government_Agency;
    dbpedia:headOf ?leader .
  ?event a dbpedia:Event;
    dbpedia:startDate ""1936-01-01""^^xsd:date;
    dbpedia:endDate ""1939-12-31""^^xsd:date .
  FILTER (lang(?event) = ""en"")
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
382,4,train,"Give me the reference, that is a college coach and a coach, to Harry Combes.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Harry Combes""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Coach>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/CollegeCoach>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?coach WHERE {
  ?person a dbpedia:Person;
    dbpedia:studentOf Harry Combes ;
    dbpedia:coachingRole ?coach .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
47,13,train,Give me the office of the awardee of Banga Bhushan.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Banga_Bhushan> . },"SELECT ?office 
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedWith dbpedia:Banga_Bhusan ;
    dbpedia:role ?office .
  ?person rdfs:label ""AK Abdul Momen""@en.
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
955,5,train,"Who is the band member, that is a musical artist and an artist, of Street Dogs?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?member
WHERE {
  ?band dbpedia:hasMember ?member .
  ?member a dbpedia:MusicalArtist .
  ?member a dbpedia:Artist .
  ?band rdfs:label ""Street Dogs"" .
}",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
917,22,train,Give me the parent of Albert Kamehameha and child of the father of Kamehameha IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kamehameha_IV> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Albert_Kamehameha> . ?result <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child ?parent
WHERE {
  ?father a dbpedia:Person;
    dbpedia:childOf <http://dbpedia.org/resource/Kamehameha_IV> .
  ?mother a dbpedia:Person;
    dbpedia:parentOf ?child .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
917,17,train,"Give me the father of the child, that is a royalty, of Kamehameha III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Kamehameha_III> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?father .
  ?person dbpedia:name ""Kamehameha III""^^xsd:string;
    dbpedia:monarchOf dbpedia:Hawaii .
}",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
83,6,train,"Give me the player in the person born, that is an athlete, on 1991-11-19.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1991-11-19""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?athleteName ?birthDate ?deathDate
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ?birthDate .
  ?person a dbpedia:Athlete;
    dcterms:start_date ""before"" 1947.
  ?person dbpedia:birthdate ?birthDate.
  FILTER (?birthDate <= ""1991-11-19"")
}
```",2,3,3,2,1,2,2,9,0,0,91,0,0.0,0
933,21,train,Give me the band of The Ramong Sound and band of the band of Alan Warner (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?band1 ?band2
WHERE {
  ?ramongSound a dbpedia:MusicBand ; dbpedia:name ""The Ramong Sound"" .
  ?alanWarner a dbpedia:Musician ; dbpedia:associatedBand ?band1 .
  ?band1 a dbpedia:MusicBand ; dbpedia:name ?bandName1 .
  
  ?alanWarner2 a dbpedia:Musician ; dbpedia:associatedBand ?band2 .
  ?band2 a dbpedia:MusicBand ; dbpedia:name ?bandName2 .
}",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
47,35,train,Give me the office of the administration of Jagdeep Dhankhar and office of the awardee of Padma Vibhushan.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Jagdeep_Dhankhar> . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Padma_Vibhushan> . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office_of_jagdeep_dhankhar ?office_of_padma_awardee
WHERE {
  ?person a dbpedia:Person;
    dbpedia:office ?office .
  ?office rdfs:label ?office_label .
  FILTER (lang(?office_label) = ""en"")  # Assuming we want the English label
}
```

This query will return the office labels in English for both Jagdeep Dhankhar and the awardee of Padma Vibhushan.",4,4,5,2,2,3,3,71,0,0,6,0,0.0,0
417,15,train,"Who is the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?royalParent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Royalty .
  ?person dbpedia:name ""Christian Knudsen"" .
}",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
129,13,train,Give me the associated musical artist of EarthGang and professional in the mayor of 1999 West Dunbartonshire Council election.,SELECT ?result WHERE { <http://dbpedia.org/resource/1999_West_Dunbartonshire_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/EarthGang> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"SELECT ?musicalArtist ?mayor
WHERE {
  ?band a dbpedia:MusicGroup ;
    dbpedia:genre ""Hip hop"" .
  ?person a dbpedia:OfficeHolder ;
    dbpedia:office ""Mayor of West Dunbartonshire"" ;
    dbpedia:term_start ""1999-04-01"" .
}",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
36,2,train,Give me the person born as Ayo Makun.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ayo Makun""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,3,28,0,100980,1,0.0,0.0,0
773,13,train,Give me the parent of the successor of Charles the Bald.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Charles_the_Bald> <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?successorParent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father ?father .
  dbpedia:son ?person ?successor .
  ?successor a dbpedia:Person;
    rdfs:label ""Louis the Younger""@fr .
  ?father a dbpedia:Person;
    rdfs:label ""Charles the Bald""@en .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
445,38,train,Give me the entity in the award of George H. Cameron and death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?deathPlace WHERE { dbpedia:George_H_Cameron rdfs:label ?name . dbpedia:Royal_Astronomical_Society award ?person . ?person rdfs:label ?awardeeLabel . },4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
773,10,train,Give me the parent of Charles the Fat and spouse of Louis the German.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Louis_the_German> <http://dbpedia.org/ontology/spouse> ?result . },"{sparql_query: There is no direct parent-child relationship between Charles the Fat and Louis the German, so a SPARQL query to find this specific relationship does not apply.}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
715,29,train,Give me the commander in the force of Francisco Largo Caballero and leader of Ministry of the Air (Spain) and commander in Rif War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . <http://dbpedia.org/resource/Ministry_of_the_Air_(Spain)> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?personName ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:role [ rdf:type dbpedia:PoliticalRole ;
                 rdfs:label ""Prime Minister of Spain"" ] .
  ?person a dbpedia:Person;
    dbpedia:role [ rdf:type dbpedia:MilitaryRole ;
                 rdfs:label ""Commander in Rif War"" ] .
  ?person a dbpedia:Person;
    dbpedia:role [ rdf:type dbpedia:MilitaryRole ;
                 rdfs:label ""Commander in the force of Francisco Largo Caballero"" ] .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
976,23,train,"Give me the office of the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . ?v1 <http://dbpedia.org/ontology/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?office
WHERE {
  ?person a dbpedia:OfficeHolder;
    dbpedia:office ?office .
  ?office rdfs:label ?office_label .
  ?office_label ns:language ""turkish"" .
  ?person foaf:name ""Kemal Kılıçdaroğlu"" .
}
```",3,5,4,3,1,3,3,71,0,0,13,0,0.0,0
826,29,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?predecessor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:title ""Louis IV, Grand Duke of Hesse"";
    dbpedia:succeededBy ?succeededBy .
  ?succeededBy a dbpedia:MonarchyPosition; 
    dbpedia:monarch ?person ;
    dbpedia:position ""Grand Duke of Hesse"" .
  ?person a dbpedia:Person;
    dbpedia:spouse ?spouse ;
    dbpedia:birthDate ""1778-10-02""^^xsd:date .
  ?spouse a dbpedia:Person;
    dbpedia:name ""Anna Magdalena Appel"" .
}",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
865,39,train,Give me the father of the child of the father of Abul Maal Abdul Muhith and father of AK Abdul Momen.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Abul_Maal_Abdul_Muhith> <http://dbpedia.org/property/father> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandfather
WHERE {
  ?person a dbpedia:Person;
    dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen"" .
  ?grandfather a dbpedia:Person;
    dbpedia:child ?person .
  ?person a dbpedia:Person;
    dbpedia:name ""Abul Maal Abdul Muhith"" .
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
442,0,train,Give me the resting place of Allyn K. Capron.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allyn_K._Capron> <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?burialPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Allyn K. Capron""@en;
    dbpedia:deathDate ?deathDate .
  ?person dbpedia:causeOfDeath ""Natural causes"" .
  ?person dbpedia:birthPlace ""India"" .
  ?burialPlace a dbpedia:Cemetery; 
    dbpedia:location ?location .
  ?location rdfs:label ""Location of the cemetery""@en .
}",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
124,23,train,"Give me the commander in the war, that is a societal event and a military conflict, of the reference, that is Australian and an organisation and a military unit, to 'A' Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""'A' Battery, Royal Australian Artillery""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?commander ?warConflict
WHERE {
  ?battery a dbpedia:ArtilleryBattery;
    dbpedia:unitName ""A Battery, Royal Australian Artillery"";
    dbpedia:establishedDate FILTER (>= 1945) .
  ?conflict a dbo:MilitaryConflict;
    dbpedia:startYear ?startYear;
    dbpedia:endYear ?endYear .
  ?battery dbpedia:participatedIn ?conflict .
  ?commander a dbpedia:Person;
    dbpedia:rank ""Commander"";
    dbpedia:roleInMilitaryUnit ?battery .
}
```",3,8,4,3,1,3,3,71,0,0,109,0,0.0,0
236,0,train,Give me the party member of Federalist Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Federalist_Party> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?member
WHERE {
  ?member a dbpedia:Person;
    dbpedia:politicalPartyMemberOf dbpedia:Federalist_Party .
}
```",1,1,2,1,1,3,2,20,0,0,269,0,0.0,0
865,1,train,Give me the father of AK Abdul Momen.,SELECT ?result WHERE { <http://dbpedia.org/resource/AK_Abdul_Momen> <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ?birthdate .
  ?person dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ?fatherLabel .
}
LIMIT 1",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
83,2,train,Who is the person born on 1995-07-07?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1995-07-07""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?personName ?birthDate
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ?birthDate .
  ?person rdfs:label ?personName .
  FILTER (xsd:date ?birthDate = ""1995-07-07"")
}",1,1,2,1,1,2,2,9,0,0,34,0,0.0,0
579,13,train,"Give me the native of the residence, that is English and a settlement, of the resident of Scotland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:residence <P31>Scotland .
  ?person dbpedia:language ""en"" .
  ?person dbpedia:birthPlace ?birthPlace
}",3,5,4,3,1,3,2,20,0,0,5279,0,0.0,0
645,10,train,Give me the commander in Battle of Jarama and leader of Ministry of the Army (Spain).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_the_Army_(Spain)> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commander ?ministry_leader
WHERE {
  ?battle a dbpedia:Event; dbpedia:name ""Battle of Jarama"" .
  ?battle dbpedia:commander ?commander .
  ?ministry a dbpedia:Organization; dbpedia:name ""Ministry of the Army (Spain)"" .
  ?ministry dbpedia:leader ?ministry_leader .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
456,5,train,"Give me the reference, that is a fictional character, to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?actor ?role
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:roleInMedia ?role .
  ?role rdfs:label ""Lamont Cranston""@en .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
18,1,train,Give me the parent of Liza Huber.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . },"Given that we don't have direct access to DBpedia's endpoint here, I'll construct a hypothetical SPARQL query based on typical data structures:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parentName WHERE {
  ?character a dbpedia:Character;
    dbpedia:birthDate ?birthDate .
  ?character dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ?parentName .
}
```

This query assumes that there is a `dbpedia:Character` resource for Liza Huber with a `dbpedia:birthDate`, and a `dbpedia:Person` resource representing her parent(s) with an `rdfs:label` indicating their name.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
459,12,train,Give me the governor of Dana Murphy and governor of Oklahoma and person born as John Kevin Stitt.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Oklahoma> <http://dbpedia.org/property/governor> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governorName ?birthName
WHERE {
  ?person a dbpedia:OfficeHolder;
    dbpedia:office dbpedia:GovernorOf_Oklahoma .
  ?person rdfs:label ?governorName .
  ?person foaf:givenName ?birthName .
}",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
36,18,train,Give me the person born as the birth name of Ayo Makun and person born in 1971.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthYear> ""1971""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ?birthDate .
  FILTER (?birthDate >= ""1971-01-01""^^xsd:date) .
  ?person rdfs:label ?birthName .
}",3,3,4,2,2,2,3,28,1,744371,0,1.3434143143482023e-06,1.0,2.6868250191772133e-06
281,5,train,Give me the award of Alfred Warden.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alfred_Warden> <http://dbpedia.org/property/awards> ?result . },"To find the specific awards Alfred Warden received, we would need to query a database that contains detailed information about British officials during the Raj. However, since we are using DBpedia as our source, we should first ensure that Alfred Warden's data is available there and then construct a SPARQL query accordingly.

Given that Alfred Warden was a significant figure in the British administration of India, it's likely that his achievements and awards would be documented within the DBpedia ontology. We can start by looking for mentions of him in the context of awards:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?award
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Alipore, Calcutta"";
    dbpedia:deathPlace ""Kolkata"";
    dbpedia:office dbpedia:Governor_of_Assam ;
    dbpedia:term ""Alfred Warden"".
}
```

This query looks for a person born in Alipore, Calcutta (now Kolkata), who died in Kolkata and held the office of Governor of Assam, which should return Alfred Warden. Once we confirm his awards through this query, we can refine our search to specifically look for awards he received.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
365,7,train,Give me the person born as the birth name of Symon Petliura.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Symon Petliura"";
    dbpedia:birthPlace ?birthPlace .
}",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
715,11,train,"Give me the commander in the force, that is a military conflict, of Abd el-Krim.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Abd_el-Krim> . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander
WHERE {
  ?war a dbpedia:Conflict;
    dbpedia:combatant ?commander .
  ?commander rdfs:label ""Abd el-Krim""@en .
}
```",2,3,3,2,1,3,3,71,0,0,22,0,0.0,0
93,9,train,"Give me the headquarter, that is a region and a settlement, of the headquarter of Clam Cove Pictograph Site.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Clam_Cove_Pictograph_Site> <http://dbpedia.org/ontology/location> ?v0 . },"Given that we need to find the headquarter of Clam Cove Pictograph Site, which is both a region and a settlement, we can construct a SPARQL query to retrieve this information. Assuming that DBpedia has structured data about this site, the query might look like:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?headquarter
WHERE {
  ?site a dbpedia:Site;
    dbpedia:locatedIn ?region .
  ?region a dbpedia:Region;
    dbpedia:name ""Clam Cove Pictograph Site"" .
}
```

This query searches for a site named ""Clam Cove Pictograph Site"" that is located in a region with the same name.",2,4,3,2,1,3,2,20,0,0,5,0,0.0,0
826,17,train,"Who is the parent of the child of Louis IV, Grand Duke of Hesse?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?childParent WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Louis IV, Grand Duke of Hesse"" .
  ?child dbpedia:birthDate [is <2013-01-01>] . # Assuming Louis IV's children were born before 2013
}",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
212,4,train,Give me the birthplace of KODA (singer) and birthplace of Corp Sayvee.,SELECT ?result WHERE { <http://dbpedia.org/resource/KODA_(singer)> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Corp_Sayvee> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  FILTER (STRSTARTS(?person, 'KODA ') || STRSTARTS(?person, 'Corp Sayvee '))
}",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
582,5,train,Give me the child of Kazuaki Nagasawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?parent dbpedia:name ""Kazuaki Nagasawa"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
453,4,train,Give me the religion of Newfoundland Colony and religion of John Henry Newman.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Henry_Newman> <http://dbpedia.org/ontology/religion> ?result . <http://dbpedia.org/resource/Newfoundland_Colony> <http://dbpedia.org/ontology/religion> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?religion_colony ?newman_religion
WHERE {
  ?colony a dbpedia:GeographicalEntity;
    dbpedia:country Newfoundland Colony .
  ?colony dbpedia:religion ?religion_colony .

  ?newman a dbpedia:Person;
    dbpedia:birthDate ""1801-01-01""^^xsd:date;
    dbpedia:deathDate ""1890-10-09""^^xsd:date;
    dbpedia:religiousAffiliation ?newman_religion .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
892,19,train,Give me the landmark at elevation of 58 and entity in the profession of Henri Crolla.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?landmark ?profession
WHERE {
  ?landmark a dbpedia:Landmark;
    dbpedia:heightInMetres ""58"" .
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace.
  ?person rdfs:label ""Henri Crolla""@en; # Assuming Henri Crolla's name is labeled in English
    dbpedia:occupation ?profession .
  ?landmark dbpedia:locatedIn ?birthPlace.
}
```",3,3,4,2,2,3,3,71,0,0,11,0,0.0,0
443,7,train,Give me the landmark at elevation of 28 and birthplace of Carl Larsson.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . }","1. For landmarks with elevation 28:
   ```sparql
   PREFIX geo: <http://www.w3.org/2000/01/geo-syntax#>
   PREFIX dbpedia: <http://dbpedia.org/ontology/>

   SELECT ?landmark ?elevation
   WHERE {
     ?landmark a dbpedia:Landmark;
       geo:heightInMetres ?elevation .
     ?landmark geo:elevationMeters 28 .
   }
   ```

2. For Carl Larsson's birthplace:
   ```sparql
   PREFIX dbpedia: <http://dbpedia.org/ontology/>

   SELECT ?birthPlace
   WHERE {
     ?person a dbpedia:Person;
       foaf:name ""Carl Larsson"" ;
       dbpedia:birthPlace ?birthPlace .
   }
   ```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
443,12,train,Give me the landmark at elevation of 28 and birthplace of Carl Larsson and birthplace of Ulf Lundell.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ulf_Lundell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Carl_Larsson> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query to find landmarks with elevation 28 meters
SELECT ?landmark WHERE {
  ?landmark a dbpedia:Landmark;
    dbpedia:heightInMetres 28 .
}

# Query to find birthplace of Carl Larsson
PREFIX wp: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?birthPlace WHERE {
  ?carlLarsson a wp:Person;
    dbpedia:birthPlace ?birthPlace .
}

# Query to find birthplace of Ulf Lundell
PREFIX wp: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?birthPlace WHERE {
  ?ulfLundell a wp:Person;
    dbpedia:birthPlace ?birthPlace .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
865,6,train,"Who is the child, that is a politician, of Abu Ahmad Abdul Hafiz?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?childName ?role
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:name ""Abu Ahmad Abdul Hafiz"" .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent;
    dbpedia:role ?role .
  FILTER (?role = ""politician"") .
}",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
216,9,train,Give me the player in Mario Ivanković and player in Igor Bišćan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?player a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  OPTIONAL { ?player dbpedia:deathPlace ?deathPlace }
}
  
# Replace 'Mario Ivanković' with the actual DBpedia URI or name
# Replace 'Igor Bišćan' with the actual DBpedia URI or name",2,2,3,1,2,3,3,71,0,110628,3,0.0,0.0,0
645,3,train,Who is the commander in Siege of Madrid?,SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Madrid> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander
WHERE {
  ?siege a dbpedia:Siege;
    dbpedia:location ""Madrid"";
    dbpedia:startDate ""1808-03-19"".
  ?commander a dbpedia:Person;
    dbpedia:role ""Commander of British Forces in Siege of Madrid"".
}
```",1,1,2,1,1,3,3,71,0,0,27,0,0.0,0
507,10,train,"Give me the spouse of Anne V. Coates and professional in Film director, television director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Anne_V._Coates> . ?result <http://dbpedia.org/property/occupation> ""Film director, television director""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?spouse ?profession
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Anne V. Coates"" .
  ?person dbpedia:occupation dbpedia:Film_Director ;
    dbpedia:Film_Director_Television_Director .
  ?person rdfs:member ?spouse .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
715,1,train,Give me the commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?commander
WHERE {
  ?commander a dbpedia:Person;
    dbpedia:role dbpedia:PoliticalLeader ;
    dbpedia:conflict dbpedia:Spanish_Civil_War .
}
```",1,1,2,1,1,3,3,71,0,0,28,0,0.0,0
98,17,train,Give me the entity in Philippines and birth place of the person born as Paolo Elito M. Ballesteros IV.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Paolo Elito M. Ballesteros IV""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",3,3,4,2,2,2,3,28,2,100978,0,1.9805902158843335e-05,1.0,3.961101978570438e-05
329,14,train,"Give me the entity in the region, that is a country, of Western European Time and birthplace of Eric Cross (writer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ""Western European Time"" .
  ?person dbpedia:deathDate ?deathDate .
  ?deathDate rdfs:label ""No specific date"" . # Assuming no specific date is known
}",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
365,11,train,Give me the person born as the birth name of Symon Petliura and spouse of Olha Petliura.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Olha_Petliura> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Symon_Petliura> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName ?spouseName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ?birthName .
  OPTIONAL { ?person foaf:sameAs ?altPerson }
  ?altPerson a dbpedia:Person;
    dbpedia:spouse ?spouseName .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
41,4,train,Who is the person born as David Declan Costello?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""David Declan Costello""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""AK Abdul Momen""@en .
  OPTIONAL { ?person dbpedia:birthDate ?birthDate }
  OPTIONAL { ?person dbpedia:deathDate ?deathDate }
}
ORDER BY ?birthPlace",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
579,8,train,"Give me the person born as the birth name of Jane Percy, Duchess of Northumberland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?v0 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Jane Percy"" .
  ?person dbpedia:birthPlace ?birthPlace .
  ?birthPlace a dbpedia:Location .
}",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
508,5,train,"Give me the commander, that is Saudi, in Central Plains War.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?result . },"SELECT ?commanderName ?birthPlace ?deathPlace
WHERE {
  ?commander a dbpedia:Person;
    dbpedia:nationality [ dbpedia:country ""Saudi Arabia"" ] .
  OPTIONAL { 
    ?commander dbpedia:conflict [ a dbpedia:Conflict; dbpedia:name ""Central Plains War"" ] .
  }
  FILTER (lang(?commanderName) = ""ar"" )  
}",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
826,34,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and spouse of the child of the father of Anna Magdalena Appel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?predecessor ?spouse ?child_of_father
WHERE {
  ?person a dbpedia:Person;
    dbpedia:title ""Louis IV, Grand Duke of Hesse""@en;
    dbpedia:spouse ?spouse .
  ?person dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:name ""Ernst II, Grand Duke of Hesse""@en .
  ?child_of_father a dbpedia:Person;
    dbpedia:parent ?person ;
    dbpedia:father ?father .
  ?child_of_father dbpedia:name ""Louis IV""@en .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
443,10,train,"Give me the birthplace of the person born, that is a musical artist and an artist, on 1949-11-20.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace ;
    dbpedia:dateOfBirth ""1949-11-20"" .
  ?person rdfs:subClassOf [ owl:intersectionOf (dbpedia:Musician) dbpedia:Artist ) ] .
}",2,4,3,2,1,2,3,28,0,0,3,0,0.0,0
170,17,train,Give me the domain of Mayor and birth place of the awardee of People's Artist of Russia.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/People's_Artist_of_Russia> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?role
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ?role .
  FILTER (lang(?role) = ""en"")  # To ensure the role is in English
}",3,3,4,2,2,2,3,28,3,782046,0,3.836076767568272e-06,1.0,7.67212410427951e-06
865,23,train,"Give me the native of the residence, that is a country, of the person decedent at Patna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Patna> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?nativeCountry
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace <http://dbpedia.org/property/location#India> .
  ?person dbpedia:deathPlace <http://dbpedia.org/property/location#Patna> .
}
```",3,4,4,3,1,3,3,71,0,0,1898,0,0.0,0
382,12,train,Give me the landmark at elevation of the award of Harry Combes and birthplace of Björn Joppe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Björn_Joppe> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Harry_Combes> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Query to find Harry Combes' award details
SELECT ?awardName ?elevation WHERE {
  ?person dbpedia:hasAward ?award .
  ?award a dbpedia:Award ;
    dbpedia:awardee ?person ;
    dbpedia:bestowedElevation ?elevation .
  ?person rdfs:label ""Harry Combes"" .
}

# Query to find Björn Joppe's birthplace
SELECT ?birthPlace WHERE {
  ?person dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""Björn Joppe"" .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
773,34,train,Give me the spouse of the father of the parent of Bernard (son of Charles the Fat) and parent of Charles the Fat.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Bernard_(son_of_Charles_the_Fat)> . ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Louis the Pious""@en;
    dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:name ""Charles the Fat""@en .
  ?person a dbpedia:Person;
    dbpedia:spouse ?spouse .
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
326,6,train,Give me the professional in the profession of Susanne Lewis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Susanne_Lewis> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?profession
WHERE {
  ?person dbpedia:name ""Susanne Lewis"" .
  ?person a dbpedia:Person;
    dbpedia:occupation ?profession .
}",2,2,3,2,1,2,2,9,0,0,2223,0,0.0,0
216,38,train,"Give me the team of the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20 and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX ns: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person WHERE {
  ?person a dbo:Person;
    dba:birthDate ""1983-12-20""^^xsd:date;
    ns:role dbo:sportsManager ;
    ns:role dbo:soccerManager ;
    ns:role dbo:soccerPlayer .
  ?person ns:memberOf dbo:BosniaAndHerzegovinaU18FootballTeam .
}
```",4,10,5,2,2,3,3,71,0,0,1,0,0.0,0
192,9,train,"Give me the spouse, that is a royalty, of the child of Charles II of Naples.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_II_of_Naples> . ?result <http://dbpedia.org/ontology/spouse> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?royaltySpouse
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?charlesII .
  ?charlesII a dbpedia:Monarch;
    dbpedia:name ""Charles II of Naples"" .
  ?child dbpedia:spouse ?royaltySpouse .
}",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
456,21,train,Give me the spouse of the actor of Pacific Drive and band of Alan Doyle.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Alan Doyle""@en;
    dbpedia:birthDate ""1972-04-25""^^xsd:date;
    dbpedia:sibling [ dbpedia:name ""Fiona Doyle"" ] .
  ?person dbpedia:spouse ?spouse .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
456,28,train,Give me the band of Alan Doyle and professional in  and spouse of the actor of Pacific Drive.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Pacific_Drive> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandName ?actorSpouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""Alan Doyle""@en .
  ?musicGroup a dbpedia:MusicGroup;
    dbpedia:leader ?person ;
    dbpedia:name ?bandName .
  ?actor rdfs:label ""Trevor Ellis""@en .
  ?actor foaf:spouse ?actorSpouse .
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
933,10,train,Give me the band of The Ramong Sound and band of Mike Elliott (saxophonist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}
```",2,2,3,1,2,3,3,71,0,100980,3,0.0,0.0,0
192,10,train,Give me the child of the parent of Anna of Hungary (Byzantine empress).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Anna_of_Hungary_(Byzantine_empress)> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?childName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Anna of Hungary (Byzantine empress)"" .
  ?person dbpedia:child ?child .
  ?child a dbpedia:Person;
    rdfs:label ?childName .
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
98,3,train,Give me the time zone of Lopez Jaena.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?timeZone
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace dbpedia:Valencia_Carabobo .
  SERVICE wikibase:label { 
    bd:assert { ?person rdfs:label ?label . }
  }
}",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
508,2,train,"Give me the war, that is a military conflict and a societal event and an event, of Hayao Tada.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Hayao_Tada> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war
WHERE {
  ?person a dbpedia:Person;
    dbpedia:participatedInMilitaryConflict ?war .
  ?war rdfs:label ""Battle of Okinawa""@en .
}",1,4,2,1,1,3,2,20,0,0,5,0,0.0,0
645,7,train,Who is the native of Restoration (Spain)?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Restoration_(Spain)> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""Isabella II of Spain""@es.
}",1,1,2,1,1,3,3,71,0,0,217,0,0.0,0
93,14,train,"Give me the death place of the governor of the native, that is a politician, of Seattle.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Seattle> . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/property/governor> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolderRole dbpedia:GovernorOfSeattle .
  ?person dbpedia:deathPlace ?deathPlace .
}",3,4,4,3,1,3,2,20,0,0,9,0,0.0,0
987,33,train,"Give me the birth place of the actor of the show, that is a film, with Emir Hadžihafizbegović and birth place of Dado Polumenta.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace WHERE {
  ?film a dbpedia:Film;
    dbpedia:actor Emir Hadžihafizbegović .
  ?film a dbpedia:Film;
    dbpedia:actor Dado Polumenta .
  ?film dbpedia:productionCompany ?company .
  ?actor dbpedia:birthPlace ?birthPlace .
}",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
826,24,train,"Give me the predecessor of Louis IV, Grand Duke of Hesse and successor of the child, that is a royalty, of Louis I, Grand Duke of Hesse.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . ?v2 <http://dbpedia.org/ontology/successor> ?result . }","SELECT ?predecessor ?successorChild
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Louis IV, Grand Duke of Hesse""@en;
    dbpedia:birthDate ""1845-04-28""^^xsd:date;
    dbpedia:deathDate ""1929-03-09""^^xsd:date;
    dbpedia:father dbpedia:Louis I, Grand Duke of Hesse;
    dbpedia:succeededBy ?successorChild .
  ?person dbpedia:child ?successorChild .
  ?predecessor a dbpedia:Person;
    dbpedia:name ?predecessorName .
  ?predecessor rdfs:label ""Predecessor of"" . # Assuming we need a literal to connect the predecessor and successor
}",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
445,16,train,Who is the awardee of the establishment of 1820-03-10?,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/foundingDate> ""1820-03-10""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/awards> ?v1 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee
WHERE {
  ?event a dbpedia:Event;
    dbpedia:occurredOn ""1820-03-10"";
    dbpedia:involvesOrganization ?awardee .
}",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
417,26,train,"Give me the child of the father of the leader, that is a royalty, of Colony of Greenland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Colony_of_Greenland> <http://dbpedia.org/property/leader> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?king a dbpedia:Person;
    dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:title ""King of Greenland"" .
  ?king a dbpedia:Person;
    dbpedia:children ?child .
}
LIMIT 1",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
136,3,train,Give me the award of Bret Anthony Johnston.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bret_Anthony_Johnston> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?award
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""United States"";
    dbpedia: nationality ""American"";
    dbpedia:award ?award .
  ?person rdfs:label ""Bret Anthony Johnston"" .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
200,1,train,Give me the band member of Order from Chaos.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Order_from_Chaos> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandMember
WHERE {
  ?band dbpedia:hasBandMember ?bandMember .
  ?band rdfs:label ""Order from Chaos"" .
}",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
987,3,train,"Who is the band, that is an artist, of Dado Polumenta?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Dado_Polumenta> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Dado Polumenta"" .
  ?person rdfs:member ?band .
  ?band a dbpedia:Band .
}",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
36,5,train,Give me the birth name of Ayo Makun.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ayo_Makun> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName
WHERE {
  ?person a foaf:Person;
    dc:title ?birthName .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
976,21,train,"Give me the office of Naci Bostancı and office of the leader, that is a politician, of Grand National Assembly of Turkey.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Grand_National_Assembly_of_Turkey> <http://dbpedia.org/ontology/leader> ?v2 . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:office ?office .
  OPTIONAL { 
    ?office rdfs:label ?officeLabel .
    ?officeLabel a rdf:BNode .
  }
  
  ?person ns:memberOf dbpedia:Grand_National_Assembly ;
            dbpedia:role ?role .
  ?role a dbpedia:Political_Role;
            rdfs:label ?roleLabel .
  ?roleLabel a rdf:BNode .

  FILTER ( 
    ?person = ""Naci Bostancı"" 
  ) .

  ?speaker a dbpedia:Person;
    dbpedia:office ?speakerOffice .
  OPTIONAL { 
    ?speakerOffice rdfs:label ?speakerOfficeLabel .
    ?speakerOfficeLabel a rdf:BNode .
  }
  
  FILTER ( 
    ?speaker = ""Speaker of the Grand National Assembly of Turkey"" 
  ) .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
573,17,train,"Who is the author, that is a politician and an office holder, of the work of John Quincy Adams?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/John_Quincy_Adams> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolderRole dbpedia:PresidentOfUnitedStates .
  ?person rdfs:label ""John Quincy Adams""@en .
}",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
273,14,train,Give me the parent of the alumnus of the reference to Università degli Studi di Torino.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Università degli Studi di Torino""@en . ?v0 <http://dbpedia.org/ontology/almaMater> ?v2 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?university dbpedia:hasAlumni ?alumnus .
  ?alumnus dbpedia:attended ?university .
  ?university dbpedia:parent ?parent .
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
433,37,train,"Give me the associated musical artist of the associated musical artist, that is an artist and a musical artist, of the associated musical artist, that is a musical artist and an artist, of Ornette Coleman and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Ornette_Coleman> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?associated_artist
WHERE {
  ?artist a dbpedia:Artist;
    dbpedia:birthPlace ?birthPlace .
  ?artist a dbpedia:Musician;
    dbpedia:musicalGenre ?musicalGenre .
  ?associated_artist a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace ;
    dbpedia:deathPlace ?deathPlace .
  ?artist rdfs:label ""Ornette Coleman""@en .
  ?associated_artist rdfs:label ?associated_artist_label .
  FILTER (?associated_artist_label = ""Ornette Coleman"")
}
```",4,8,5,3,2,3,3,71,0,0,38,0,0.0,0
5,1,train,Give me the entity in Canada.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?entity
WHERE {
  ?entity a dbpedia:Location; dbpedia:country ""Canada"" .
}",1,1,2,1,1,3,2,20,0,0,18560,0,0.0,0
170,6,train,Give me the birth place of Era Ziganshina and entity in Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Era_Ziganshina> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Russia> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?relatedEntityInRussia
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Era Ziganshina""@en .
  ?person dbpedia:birthPlace ?birthPlace .
  OPTIONAL { 
    ?person rdfs:seeAlso ?link .
    ?link a dbpedia:Page .
    ?link dbpedia:isBasedInCountry ""Russia""^^xsd:string .
  }
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
892,18,train,Give me the entity in Province of Reggio Emilia and landmark at elevation of 58 and entity in Italy.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?entityName ?elevation
WHERE {
  ?landmark a dbpedia:Landmark;
    dbpedia:heightInMeters ?elevation .
  ?region a dbpedia:Region ;
    dbpedia:name ""Province of Reggio Emilia"" .
  ?entity a dbpedia:Entity ;
    dbpedia:locatedIn ?region .
}",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
579,12,train,"Give me the native of Edinburgh and person born as the birth name of Jane Percy, Duchess of Northumberland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Edinburgh> . ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jane_Percy,_Duchess_of_Northumberland> <http://dbpedia.org/property/birthName> ?v0 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName ?birthPlace
WHERE {
  ?person rdfs:label ""Jane Percy"" .
  ?person dbpedia:birthPlace ?birthPlace .
}",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
459,13,train,"Give me the governor of Dana Murphy and governor of the death place, that is a settlement, of Cliff Roquemore.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?governor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
  ?deathPlace a dbpedia:Settlement ;
    dbpedia:isGovernedBy ?governor .
  ?birthPlace rdf:type dbpedia:AdministrativeTerritory ;
    dbpedia:hasCapital ?capital .
  ?capital a dbpedia:City .
  ?person rdfs:label ""Dana Murphy"" .
  ?person rdfs:label ""Cliff Roquemore"" .
}",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
170,2,train,Give me the domain of Mayor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/leaderTitle> ""Mayor""@en . }","Given that mayors are part of the local government in many countries, including those under the British Raj (now India), we can use DBpedia's ontology to query for relevant information. The SPARQL query would be designed to find instances of people who have held the office of mayor in cities or towns during the period of the British Raj.

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?mayorName ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolder dbpedia:Mayor ;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ?mayorName . 
  FILTER (lang(?person) = ""en"")  # restrict to English language
}
```",1,1,2,1,1,2,3,28,0,0,39395,0,0.0,0
773,25,train,"Give me the parent of Carloman of Bavaria and parent of the child, that is a royalty, of Louis the German.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Louis_the_German> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Carloman_of_Bavaria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?commonParent
WHERE {
  ?child1 a dbpedia:Person; dbpedia:parent ?parent1 .
  ?child2 a dbpedia:Person; dbpedia:parent ?parent2 .
  ?parent1 ns:father ?commonParent .
  ?parent2 ns:father ?commonParent .
}",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
98,11,train,"Give me the entity in the region, that is a country, of Philippine Standard Time.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?country
WHERE {
  ?timeZone rdfs:label ""Philippine Standard Time"" .
  ?timeZone dbpedia:region ?region .
  ?region a dbpedia:Country
}",2,3,3,2,1,2,3,28,0,0,5332,0,0.0,0
892,22,train,"Give me the entity in Italy and entity in the administration, that is Italian and a region and a settlement and an administrative region, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?entity
WHERE {
  ?entity a dbpedia:PoliticalParty ;
            dbpedia:name ""Democratic Party (Italy)"" .
  ?entity dbpedia:hasMember ?member .
  ?member a dbpedia:Person ;
            dbpedia:birthPlace ?birthPlace ;
            dbpedia:deathPlace ?deathPlace .
  ?member a dbpedia:OfficeHolder ;
            dbpedia:office dbpedia:Region_of_Italy .
  ?member a dbpedia:Settlement ;
            dbpedia:populationCount ?populationCount .
}
```",3,7,4,2,2,3,3,71,0,0,587,0,0.0,0
987,12,train,Give me the birth place of Moamer Kasumović and entity in Montenegro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Moamer_Kasumović> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Montenegro> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person dbpedia:nationality dbpedia:Montenegro .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
216,19,train,Give me the player in the coach of Croatia national under-21 football team and player in Mario Ivanković.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mario_Ivanković> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Croatia_national_under-21_football_team> <http://dbpedia.org/ontology/coach> ?v0 . ?v0 <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?coachName ?playerName
WHERE {
  ?team a dbpedia:SportsTeam ;
    dbpedia:sport <http://dbpedia.org/ontology/Sport> ""Football (soccer)"" .
  ?team dbpedia:homeGround ?homeGround .
  ?coach a dbpedia:Person;
    dbpedia:role dbpedia:CoachOf ?team .
  ?player a dbpedia:Person;
    dbpedia:name ?playerName ;
    dbpedia:firstName ""Mario"" .
  ?player dbpedia:clubMemberOf ?team .
}",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
166,0,train,Give me the resting place of Gonzalo Queipo de Llano.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gonzalo_Queipo_de_Llano> <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?burialPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace Spain .
  ?person a dbpedia:Person;
    dbpedia:deathDate ""1516-06-29""^^xsd:date; # Assuming his death date is June 29, 1516
    dbpedia:causeOfDeath ""Battle of Muhlberg"" . # Battle of Mühlberg was a significant event in his life
  ?person dbpedia:burialPlace ?burialPlace .
}",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
573,10,train,Give me the person decedent at Massachusetts and parent of John Quincy Adams.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Massachusetts> . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?parentBirthPlace
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:birthPlace ?parentBirthPlace .
  ?child dbpedia:name ""John Quincy Adams"" .
}",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
453,1,train,Give me the religion of John Henry Newman.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Henry_Newman> <http://dbpedia.org/ontology/religion> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?religion
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1813-02-21"";
    dbpedia:deathDate ""1890-08-03"";
    dbpedia:religion ?religion .
  ?person rdf:type dbpedia:Cardinal .
  ?person rdfs:label ""John Henry Newman""@en .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
874,11,train,"Give me the band of Robert Hart (musician) and band of the writer, that is an artist and a musical artist, of Mezzanine (album).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Mezzanine_(album)> <http://dbpedia.org/property/writer> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Robert_Hart_(musician)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?bandName1 ?bandName2
WHERE {
  ?person1 a dbpedia:Musician; dbpedia:name ""Robert Hart"" .
  ?person1 rdf:type dbpedia:BandMember .
  ?person1 dbpedia:band ?bandName1 .

  ?person2 a dbpedia:Artist .
  ?person2 dbpedia:album ""Mezzanine"" .
  ?person2 dbpedia:writer ?writerPerson .
  ?writerPerson a dbpedia:Musician .
  ?writerPerson dbpedia:name ""3D"" .
  ?writerPerson rdf:type dbpedia:BandMember .
  ?writerPerson dbpedia:band ?bandName2 .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
791,35,train,"Give me the father of the child, that is a royalty, of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/> 

SELECT ?birthPlace ?deathPlace 
WHERE { 
  ?person a dbpedia:Person; 
    dbpedia:father dbpedia:Emperor_Takakura ; 
    dbpedia:spouse dbpedia:Empress_Komako . 
  ?person dbpedia:birthPlace ?birthPlace . 
  ?person dbpedia:deathPlace ?deathPlace . 
}",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
124,4,train,"Give me the war, that is a societal event and a military conflict, of A Field Battery, Royal Australian Artillery.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/A_Field_Battery,_Royal_Australian_Artillery> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?war
WHERE {
  ?unit a dbpedia:MilitaryUnit;
    dbpedia:hasConflict ?war .
  ?unit rdfs:label ""A Field Battery, Royal Australian Artillery"" .
}",1,3,2,1,1,3,3,71,0,0,6,0,0.0,0
443,4,train,"Who is the person born, that is a musical artist and an artist, on 1949-11-20?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1949-11-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1949-11-20""^^xsd:date;
    dbpedia:occupation dbpedia:Musician .
  ?person a dbpedia:Person;
    dbpedia:occupation dbpedia:Artist .
}",1,3,2,1,1,2,3,28,0,0,2,0,0.0,0
158,10,train,"Who is the successor, that is a prime minister and an office holder and a politician, of the person deceased, that is an office holder and a politician, on 1945-09-15?","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1945-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?successor WHERE {
  ?person a dbpedia:OfficeHolder;
    dbpedia:politicalAffiliation dbpedia:PoliticalParty ;
    dbpedia:officeStart ""1945-09-15"" .
  ?successor a dbpedia:PrimeMinisterOfCountry;
    dbpedia:officeHold ?person .
}
```",2,7,3,2,1,3,2,20,0,0,1,0,0.0,0
791,32,train,"Give me the predecessor of the child of Emperor Takakura and spouse of the spouse, that is a royalty, of Emperor Takakura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Emperor_Takakura> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child PREDECESSOR_OF ?child WHERE {
  ?emperor a dbpedia:Emperor_of_Japan;
    dbpedia:spouse [ a dbpedia:Person; rdfs:label ""Spouse's name"" ] .
  ?child a dbpedia:Person;
    dbpedia:parent ?emperor;
    dbpedia:birthDate ""before"" ""1900-01-01"";
    dbpedia:deathDate ""after"" ""1912-12-17"" .
  ?child a dbpedia:Royalty .
  ?child PREDECESSOR_OF ?predecessor .
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
933,15,train,"Who is the band of the band, that is an artist and a musical artist, of The Ramong Sound?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/The_Ramong_Sound> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName ?artist1 ?artist2
WHERE {
  ?band dbpedia:hasBandMember ?artist1 .
  ?band dbpedia:hasBandMember ?artist2 .
  ?artist1 a dbpedia:Artist .
  ?artist2 a dbpedia:MusicalArtist .
  ?band rdfs:label ""The Ramong Sound"" .
}
```",2,4,3,2,1,3,3,71,0,0,16,0,0.0,0
892,28,train,Give me the entity in the profession of Henri Crolla and landmark at elevation of 58 and entity in Province of Reggio Emilia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/elevation> ""58""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>

SELECT ?personProfession ?landmarkName ?elevation
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Province of Reggio Emilia"" .
  ?person dbpedia:profession ?personProfession .
  ?landmark a dbpedia:Landmark ;
    geo:heightInMetres 58 ;
    dbpedia:locatedIn ""Province of Reggio Emilia"" .
  ?person rdf:type <> .
  ?landmark rdf:type <> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
573,21,train,"Give me the parent of John Quincy Adams and person decedent at the administration, that is a region, of Charlie Baker.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/governor> ""Charlie Baker""@en . <http://dbpedia.org/resource/John_Quincy_Adams> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent ?region
WHERE {
  ?john_quincy_adams a dbpedia:Person;
    dbpedia:father ?parent .
  ?charlie_baker a dbpedia:OfficeHolder;
    dbpedia:office dbpedia:GovernorOfMassachusetts ;
    foaf:based_near ?region .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
124,6,train,"Give me the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?war WHERE {
  ?person a dbpedia:Person;
    dbpedia:rank ""Lieutenant General (United Kingdom)"";
    dbpedia:conflict ?war .
  ?war a dbpedia:Event; rdfs:label ""World War II""@en.
}
```",1,4,2,1,1,3,3,71,0,0,7,0,0.0,0
98,2,train,Give me the entity in Philippines.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?entity
WHERE {
  ?entity a dbpedia:Entity;
    dbpedia:isBasedInCountry dbpedia:Philippines .
}",1,1,2,1,1,2,3,28,0,0,5314,0,0.0,0
965,29,train,"Give me the parent of George Mountbatten, 2nd Marquess of Milford Haven and parent of the child, that is a royalty, of Prince Louis of Battenberg and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?grandparents
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:birthPlace <http://dbpedia.org/property/location_of_Victoria_of_Hesse_and_by_Rhine>;
    dbpedia:parent ?parent1 .
  ?person2 a dbpedia:Person;
    dbpedia:name ""Louis IV"";
    dbpedia:deathPlace <http://dbpedia.org/property/Location>;
    dbpedia:parent ?parent2 .
  ?parent1 dbpedia:familyRelation ""spouse of"" ?person2 .
  ?parent1 rdfs:label ?grandparents .
}",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
445,34,train,"Give me the entity in the residence, that is a country, of the resident, that is an athlete, of Great Britain and entity in United Kingdom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Great_Britain> . ?result <http://dbpedia.org/ontology/location> ?v1 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country
WHERE {
  ?athlete a dbpedia:Athlete;
    dbpedia:nationality dbpedia:United_Kingdom .
  ?athlete dbpedia:residence ?country .
}
```",4,6,5,3,2,3,3,71,0,0,102,0,0.0,0
274,12,train,Give me the professional in  and band member of Dizzy Gillespie and associated musical artist of Cecil Taylor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dizzy_Gillespie> . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?roleOfGillespie ?bandMemberOfGillespie ?associatedArtistOfTaylor
WHERE {
  ?gillespie a dbpedia:Person;
    dbpedia:birthDate ""1917-10-21"";
    dbpedia:deathDate ""1993-01-06"";
    dbpedia:role dbpedia:TrumpetPlayer ;
    dbpedia:bandMemberOf ?bandMemberOfGillespie .
  ?taylor a dbpedia:Person;
    dbpedia:birthDate ""1929-04-27"";
    dbpedia:genre dbpedia:FreeJazz ;
    dbpedia:associatedArtist ?associatedArtistOfTaylor .
  ?gillespie dbpedia:associatedWith ?taylor .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
124,24,train,"Give me the military force of the war, that is an event and a military conflict and a societal event, of Frank Rhodes (British Army officer) and military force of Battle of Atbara.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Atbara> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frank_Rhodes_(British_Army_officer)> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?war ?militaryForce
WHERE {
  ?battle a dbpedia:Battle;
    dbpedia:partOfConflict dbpedia:Event ;
    dbpedia:conflictDbpedia:""Anglo-Egyptian War 1898-1899"" .
  ?battle dbpedia:location ""Atbara River, Sudan"" .
  ?person a dbpedia:Person;
    dbpedia:rank ""Officer"";
    dbpedia:servicePeriod ""British Army"" .
  ?battle rdfs:label ?warLabel .
  ?militaryForce a dbpedia:MilitaryForce;
    dbpedia:partOfConflict ?battle .
}
```",3,6,4,2,2,3,3,71,0,0,7,0,0.0,0
508,11,train,"Give me the birthplace of the commander, that is a politician, in 1939–1940 Winter Offensive and birthplace of Ma Bufang.",SELECT ?result WHERE { <http://dbpedia.org/resource/1939–1940_Winter_Offensive> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ma_Bufang> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  OPTIONAL { 
    ?person dbpedia:predicate ""participatedIn"" ;
                 dbpedia:object <http://dbpedia.org/ontology/Conflict> . 
    ?person rdfs:label ""1939 Winter Offensive"" .
  }
}

AND
{
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  OPTIONAL { 
    ?person dbpedia:predicate ""officeHolder"" ;
                 dbpedia:office ""Qinghai Province, China"" . 
  }
}",3,4,4,2,2,3,2,20,0,0,3,0,0.0,0
965,9,train,Give me the parent of Louise Mountbatten and spouse of Prince Louis of Battenberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . <http://dbpedia.org/resource/Louise_Mountbatten> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?parentOfLouise ?spouseOfLouis
WHERE {
  ?louise a dbpedia:Person;
    dbpedia:birthDate ""1901-07-01"";
    dbpedia:parents [ dbpedia:hasMember ?parentOfLouise ] .
  ?princeLouis a dbpedia:Person;
    dbpedia:spouse ?spouseOfLouis .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
495,4,train,Give me the parent of Princess Pauline of Württemberg (1810–1856).,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Pauline_of_Württemberg_(1810–1856)> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?mother ?father
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1810-01-27"" .
  ?person dbpedia:parent ?mother .
  ?person dbpedia:parent ?father .
}",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
978,3,train,"Who is the professional, that is a musical artist and an artist, in ?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person
WHERE {
  ?person a dbpedia:Person;
    dbpedia:artist ?artist .
  ?person a dbpedia:Person;
    dbpedia:musician ?musician .
}
```",1,3,2,1,1,3,2,20,0,0,8677,0,0.0,0
365,9,train,"Give me the birth name of the commander, that is an office holder, in Ukrainian–Soviet War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ukrainian–Soviet_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/birthName> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolder ""Ukrainian People's Republic President"" ;
    dbpedia:conflict ""Ukrainian–Soviet War"" .
  ?person dbpedia:birthName ?birthName .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
892,32,train,Give me the entity in the profession of Henri Crolla and landmark at elevation of the award of Anna Ishii.,SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Ishii> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?profession_of_Henri_Crolla ?landmark_at_award_location
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Henri Crolla""@en .
  ?person rdfs:label ?profession .

  ?award a dbpedia:Award ;
    dbpedia:recipient Anna_Ishii ;
    dbpedia:location ?landmark_at_award_location .
}

```",4,4,5,2,2,3,3,71,0,0,11,0,0.0,0
456,17,train,"Give me the band, that is a musical artist, of the band of Alan Doyle.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?band
WHERE {
  ?person a dbpedia:Musician;
    dbpedia:associatedBand ?band .
  ?person dbpedia:name ""Alan Doyle"" .
}",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
216,26,train,"Give me the player in the coach, that is a soccer player and a sports manager and a soccer manager, of the player, that is an organisation and a sports club and a soccer club, in Džemal Berberović.",SELECT ?result WHERE { <http://dbpedia.org/resource/Džemal_Berberović> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/coach> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?coach
WHERE {
  ?player a dbpedia:SoccerPlayer .
  ?player a dbpedia:Organization ; dbpedia:sportsClub dbpedia:Sarajevo_FK .
  ?player dbpedia:memberOf [ dbpedia:Pepsi_Food_Company ] .
  ?coach a dbpedia:SportsManager, dbpedia:SoccerManager .
  ?player rdfs:label ""Džemal Berberović""@en .
  ?coach rdfs:label ?coachLabel .
  FILTER (lang(?coachLabel) = ""en"")
}",3,9,4,3,1,3,3,71,0,0,24,0,0.0,0
645,14,train,"Give me the leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1896-10-17"";
    dbpedia:name ""Camilo Menéndez Tolosa"";
    dbpedia:role ""Minister of Justice (1936)"" .
  ?office a dbpedia:Office; 
    dbpedia:headOf ""Camilo Menéndez Tolosa"" .
}",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
98,13,train,Give me the birth place of Paolo Ballesteros and region of the time zone of Lopez Jaena.,SELECT ?result WHERE { <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Lopez_Jaena> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Paolo Ballesteros
SELECT ?birthPlace WHERE {
  ?person rdf:type dbpedia:Person;
    dbpedia:name ""Paolo Ballesteros"" .
  ?person dbpedia:birthPlace ?birthPlace
}

# Lopez Jaena
SELECT ?birthPlace WHERE {
  ?person rdf:type dbpedia:Person;
    dbpedia:name ""Lopez Jaena"" .
  OPTIONAL { ?person rdfs:label ?label }
  FILTER (regex(str(?label), 'Time Zone:')) # Assuming a label with ""Time Zone:"" indicates the region
  ?person dbpedia:birthPlace ?birthPlace
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
216,8,train,Give me the office of the mayor of Ros Bates.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ros_Bates> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . },"To construct a SPARQL query to find the office of the mayor of Ros Bates, we need to:
1. Identify the relevant entity (e.g., the town or city) associated with Ros Bates.
2. Find the mayor of that identified entity.

Assuming ""Ros Bates"" is part of a larger locality, let's assume it's part of a county or district in the UK. We can use DBpedia's properties to link smaller localities to their parent entities.

Here's a hypothetical SPARQL query based on this assumption:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Assuming ""Ros Bates"" is part of a larger locality, let's search for the mayor of the relevant county or district.
SELECT ?mayorOffice
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolderRole dbpedia:MayorOf ; # This property links a person to their role as a mayor
    dbpedia:officeHoldingLocation dbpedia:UKCountyOrRegion ; # Assuming it's a county or region in the UK
    dbpedia:officeHoldingSublocation ?mayorOffice . # This property links the county/region to the specific locality (e.g., town)
}
```

This query searches for individuals who have the role of MayorOf some location in the UK and links them to a specific sublocation (which could be Ros Bates).",2,2,3,2,1,2,3,28,0,0,30,0,0.0,0
579,2,train,Give me the resident of Scotland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Scotland> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace <http://dbpedia.org/ontology/LocationIndicatorScotland> .
}
```",1,1,2,1,1,3,2,20,0,0,35,0,0.0,0
645,30,train,"Give me the military force of Spanish Civil War and commander in Battle of Jarama and leader of the office, that is a government agency and an organisation, of Camilo Menéndez Tolosa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Battle_of_Jarama> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Camilo_Menéndez_Tolosa> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"SELECT ?militaryForce ?commander ?organization
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Camilo Menéndez Tolosa""@es .
  ?person dbpedia:roleInMilitary ""[[Military role]]"" ;
    dbpedia:militaryForce ?militaryForce .
  ?militaryForce rdfs:label ?militaryLabel .
  ?commander a dbpedia:Person;
    dbpedia:name ?commanderName .
  ?battle a dbpedia:Event;
    dbpedia:name ""Battle of Jarama""@en ;
    dbpedia:startYear 1937 ;
    dbpedia:endYear 1937 .
  ?person dbpedia:participatedIn ?battle .
  ?organization a dbpedia:Organization;
    dbpedia:name ?organizationName .
}",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
554,14,train,"Give me the leader of the birth place of the band, that is an artist, of Rita Redshoes.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Rita_Redshoes> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlaceLabel ?leader
WHERE {
  ?band a dbpedia:MusicBand;
    dbpedia:hasMember [ dbpedia:hasName ""Rita Redshoes"" ] .
  ?birthPlace a dbpedia:Location;
    dbpedia:isPartOf ?band .
  ?leader a dbpedia:Person;
    dbpedia:firstName ?first_name;
    dbpedia:lastName ?last_name .
  ?leader dbpedia:residesIn ?birthPlace.
}",3,4,4,3,1,3,2,20,0,0,3,0,0.0,0
606,6,train,Give me the figure known as Barb City and birthplace of Charles I. Barber.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Barb City""@en . <http://dbpedia.org/resource/Charles_I._Barber> <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Charles I of England""@en;
    dbpedia:birthPlace ?birthPlace .
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
933,26,train,Give me the reference to the birth name of the professional in Musician.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Musician> . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  FILTER (lang(?name) = ""bn"" )  # Ensuring the language is Bangla (for AK Abdul Momen)
}",3,3,4,3,1,3,3,71,0,0,364,0,0.0,0
166,11,train,Give me the entity in Spain and resting place of the military force of Spanish Civil War.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?entity
WHERE {
  ?entity a dbpedia:Building;
    dbpedia:locatedInCountry spain;
    dbpedia:hasPurpose ""Commemorate Spanish Civil War military"";
    dbpedia:name ""Valle de los Caídos""
}",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
508,8,train,"Give me the birthplace of the commander, that is Saudi, in Central Plains War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Saudi_Arabia>. <http://dbpedia.org/resource/Central_Plains_War> <http://dbpedia.org/ontology/commander> ?v0 . },"Given the above reasoning, the appropriate SPARQL query would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ""AK Abdul Momen""@en .
  ?person dbpedia:deathDate ""1846-04-21""^^xsd:date .
  ?person dbpedia:conflict ""Anglo-Sikh Wars"" .
}
```

This query looks for a person labeled as ""AK Abdul Momen"" who was involved in the Anglo-Sikh Wars and has a birthplace. It assumes that his death date is April 21, 1846, which is a reasonable assumption given the timeframe of the Central Plains War.",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
267,1,train,Give me the person born on 1953-03-01.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1953-03-01""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthday ""1953-03-01"".
  OPTIONAL { 
    ?person dbpedia:deathDate ?deathDate .
    FILTER (xsd:date(?deathDate) > xsd:date(""1953-03-01""))
  }
  ?person dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:deathPlace ?deathPlace .
}",1,1,2,1,1,3,2,20,0,0,35,0,0.0,0
892,26,train,Give me the landmark at elevation of the award of the member of E-girls.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/E-girls> <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardName ?elevation WHERE {
  ?person a dbpedia:Person;
    dbpedia:groupMemberOf dbpedia:E_Girls; 
    dbpedia:winAward ?award .
  ?award rdfs:label ?awardName .
  OPTIONAL { ?award dbr:hasLocation ?location . }
  ?location rdfs:label ?locationName .
  FILTER (lang(?locationName) = ""en"") .
  ?location geo:elevationMeters ?elevation .
}
```

This query does the following:
- It finds a person who is a member of E-girls and has won an award.
- It retrieves the label of the award.
- It optionally looks for the location associated with the award (using `dbr:hasLocation`).
- It filters for English language labels to ensure we get the correct landmark name in English.",3,3,4,3,1,3,3,71,0,0,258,0,0.0,0
130,11,train,"Give me the entity in Tennessee and figure known as the film, that is a soccer club and an organisation, of Candice Storey Lee.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . ?v2 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Candice_Storey_Lee> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Tennessee> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?filmTitle ?soccerClubName
WHERE {
  ?person dbpedia:hasFilm ?filmTitle .
  ?person dbpedia:isConnectedTo dbpedia:SoccerTeam ?soccerClub .
  ?soccerClub rdfs:label ?soccerClubName .
  ?person rdfs:label ""Candice Storey Lee"" .
}
```

This query does the following:
- `?person dbpedia:hasFilm ?filmTitle`: Looks for films associated with the person.
- `?person dbpedia:isConnectedTo dbpedia:SoccerTeam ?soccerClub`: Looks for soccer clubs the person is connected to.
- `?soccerClub rdfs:label ?soccerClubName`: Extracts the label (name) of the soccer club.
- `?person rdfs:label ""Candice Storey Lee""`: Ensures we are looking for information about the specific person.",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
791,29,train,Give me the father of Emperor Go-Toba and predecessor of the child of Emperor Takakura and spouse of Taira no Tokuko.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Taira_no_Tokuko> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Emperor_Takakura> . ?result <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Emperor_Go-Toba> <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""Emperor Shirakawa""@en .
  FILTER (lang(?person) = ""en"")  # Ensure we're looking at the English label
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
976,7,train,Give me the birth name of Naci Bostancı.,SELECT ?result WHERE { <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?result . },"PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo:<http://dbpedia.org/ontology/>

SELECT ?birthName
WHERE {
  ?person a dbo:Person;
    rdfs:label ""Naci Bostancı""@en .
  ?person rdf:value ?birthName .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
976,38,train,"Give me the office of the person born as Mehmet Naci Bostancı and office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Mehmet Naci Bostancı""@en . }","SELECT ?office_bostanci ?office_mayor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Mehmet Naci Bostancı""@en .
  ?person dbpedia:office ?office_bostanci .

  ?mayor a dbpedia:OfficeHolder;
    dbpedia:office ?office_mayor .
  ?mayor a dbpedia:Politician;
    dbpedia:politicalParty ""Nation Alliance (Turkey)""@en .
  
  ?office_bostanci rdfs:label ?office_label .
  ?office_mayor rdfs:label ?office_label .
}",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
645,13,train,"Give me the military force of the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?militaryForce
WHERE {
  ?person a dbpedia:Person;
    dbpedia:givenName ""Francisco Largo Caballero"";
    dbpedia:deathDate [ strdt:day ""1937-03-10"" ] ; # Approximate date of death, assuming he died in the conflict period
    dbpedia:memberOf dbpedia:MilitaryUnit ;
    dbpedia:militaryConflict dbpedia:Spanish_Civil_War .
  ?militaryUnit a dbpedia:MilitaryUnit;
    dbpedia:affiliation dbpedia:Republican_Faction .
}
```",2,5,3,2,1,3,3,71,0,0,514,0,0.0,0
976,27,train,Give me the office of the person born as the birth name of Naci Bostancı.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Naci_Bostancı> <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?office
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Naci Bostancı""@en .
  ?person dbpedia:office ?office .
}",3,3,4,3,1,3,3,71,0,0,4,0,0.0,0
365,0,train,Give me the person born as Symon Vasylyovych Petliura.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Symon Vasylyovych Petliura""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}",1,1,2,1,1,3,2,20,0,100980,1,0.0,0.0,0
216,8,train,"Give me the person born, that is a sports manager and a soccer manager and a soccer player, on 1983-12-20.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1983-12-20""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }",PREFIX dbpedia: <http://dbpedia.org/ontology/> SELECT ?name ?birthDate WHERE { ?person a dbpedia:Person; dbpedia:name ?name . ?person dbpedia:pseudonym ?name . ?person a dbpedia:SportManager . ?person a dbpedia:SoccerManager . ?person a dbpedia:SoccerPlayer . ?person dbpedia:birthDate ?birthDate . FILTER (?birthDate = '1983-12-20') },1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
329,18,train,"Give me the entity in United Kingdom and entity in the birthplace, that is an organisation and a country, of Robert Bates (loyalist).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Robert_Bates_(loyalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Robert Bates"" .
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?birthPlace rdfs:label ""Location in the United Kingdom during British Raj"" .
  ?deathPlace rdfs:label ""Location in the United Kingdom during British Raj"" .
}",3,5,4,2,2,2,3,28,0,0,531,0,0.0,0
329,6,train,Give me the entity in United Kingdom and birthplace of Eric Cross (writer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eric_Cross_(writer)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""Eric Cross""@en.
}",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
826,6,train,"Who is the child, that is a royalty, of Louis I, Grand Duke of Hesse?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Louis_I,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?grandDuke .
  ?grandDuke a dbpedia:Person;
    rdfs:label ""Louis I, Grand Duke of Hesse""@en;
    dbpedia:monarchParent ?monarch
}
AND ?monarch rdfs:label ""Grand Duke"" .",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
459,17,train,"Give me the governor of the administration, that is a politician, of Brad Henry and person born as John Kevin Stitt.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brad_Henry> . ?result <http://dbpedia.org/property/birthName> ""John Kevin Stitt""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/governor> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?governorName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:officeHolderRole dbpedia:GovernorOfOffice ;
    dbpedia:office dbpedia:Oklahoma .
  ?person rdfs:label ?governorName .
}",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
417,3,train,"Who is the child of Knud, Hereditary Prince of Denmark?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  ?person a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Knud, Hereditary Prince of Denmark"";
    dbpedia:offspring ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
839,32,train,"Give me the band of the person born, that is a musical artist, as Kevin Richard Russell and band of the member of Böhse Onkelz.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Böhse_Onkelz> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Kevin Richard Russell""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?person a dbpedia:MusicalArtist; dbpedia:band ?bandName .
  ?bandName rdfs:label ?bandLabel .
  FILTER (lang(?bandLabel) = ""de"" )  # Assuming the band name is in German
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
36,3,train,"Give me the claim to fame, that is a film, of Lepacious Bose.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lepacious_Bose> <http://dbpedia.org/ontology/knownFor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?filmTitle
WHERE {
  ?person a dbpedia:Person;
    dbpedia:hasRole dbpedia:Actor ;
    dbpedia:inFilm ?film .
  ?film rdfs:label ?filmTitle .
  FILTER (lang(?filmTitle) = ""en"")  # Only consider English titles
}",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
965,26,train,"Give me the parent of the child, that is a royalty, of the person born, that is a politician, on 1854-05-24.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1854-05-24""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent ?royaltyStatus
WHERE {
  ?politician a dbpedia:Person;
    dbpedia:birthday ""1854-05-24"";
    dbpedia:role dbpedia:PoliRole; # Assuming 'PoliRole' is the class for politicians
    dbpedia:parent ?parent .
  
  ?parent a dbpedia:Person;
    dbpedia:role dbpedia:RoyaltyRole. # Assuming 'RoyaltyRole' is the class for royalty
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
955,8,train,"Give me the band of the band member, that is a musical artist and an artist, of Street Dogs.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Street_Dogs> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandMember WHERE {
  ?bandMember a dbpedia:BandMember;
    dbpedia:band dbpedia:Street_Dogs .
  ?bandMember a dbpedia:Musician .
  ?bandMember a dbpedia:Artist .
}",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
445,13,train,Give me the death place of the awardee of Royal Astronomical Society.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Astronomical_Society> . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen"" .
  ?person dbpedia:awardedBy dbpedia:Royal_Astronomical_Society .
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
    dbpedia:deathPlace ?deathPlace .
}",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
933,22,train,"Give me the band of Mike Elliott (saxophonist) and band of the band, that is a group and a band and an organisation, of Alan Warner (musician).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Alan_Warner_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Mike_Elliott_(saxophonist)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?birthPlace ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:isMemberOf dbpedia:Band ;
    dbpedia:name ?bandName .
  OPTIONAL { ?person dbpedia:hasRole dbpedia:Musician }
}",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
267,6,train,Give me the person born on 1953-03-01 and coach of Iran national football team.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1953-03-01""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Iran_national_football_team> <http://dbpedia.org/ontology/coach> ?result . }","PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person
WHERE {
  ?person a dbo:Person;
    dba:birthDate ""1953-03-01"";
    dbo:coachesTeam dbpedia:Iran_national_football_team .
}",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
582,33,train,"Give me the player in the father, that is an athlete and a soccer manager and a sports manager, of the child of Kazuaki Nagasawa and reference to Japan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Kazuaki_Nagasawa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Japan""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father WHERE {
  ?child a dbpedia:Person; dbpedia:name ""Kazuaki Nagasawa"" .
  ?child dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:role dbpedia:SoccerManager ;
    dbpedia:role dbpedia:Athlete .
}",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
273,1,train,Give me the parent of Gianni Agnelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gianni_Agnelli> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?gianni_agnelli a dbpedia:Person;
    dbpedia:birthDate ""1921-09-12"";
    dbpedia:father ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
976,20,train,"Give me the office of the mayor, that is a politician and an office holder and Turkish, of Nation Alliance (Turkey) and office of Mustafa Şentop.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Nation_Alliance_(Turkey)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Mustafa_Şentop> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Turkey>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?office WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Mustafa Şentop""@en .
  ?person dbpedia:officeHolderRole dbpedia:MayorOf .
  ?office a dbpedia:Office; 
    dbpedia:officeType dbpedia:Mayorship; 
    dbpedia:officeLocation dbpedia:Gaziantep .
  ?office rdfs:isDefinedBy dbpedia:OfficeSchema .
}",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
326,10,train,"Give me the award, that is a country, of the awardee of French Legion of Honor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""French Legion of Honor""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/awards> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?country
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedBy dbpedia:French_Legion_of_Honor .
  ?person dbpedia:nationality ?country
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
554,1,train,Give me the leader of Portuguese Mozambique.,SELECT ?result WHERE { <http://dbpedia.org/resource/Portuguese_Mozambique> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?leader
WHERE {
  ?person a dbpedia:Person;
    dbpedia:office ""Governor of Mozambique"" ;
    dbpedia:termStartYear 1969;
    dbpedia:termEndYear 1974 .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
715,0,train,Give me the commander in Rif War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/commander> ?result . },"Given that we are looking for information about General Francisco Franco, who was a key figure in the Rif War, we can construct a SPARQL query to retrieve this information from DBpedia:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?name ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Francisco Franco"";
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
382,9,train,"Give me the manager, that is a soccer manager and an athlete and a sports manager, of the player in Lukas Kübler.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/Lukas_Kübler> <http://dbpedia.org/ontology/team> ?v0 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?manager
WHERE {
  ?player dbpedia:hasTeam dbpedia:Schalke04 .
  ?manager a dbpedia:SoccerManager;
    dbpedia:isAthlete yes; 
    dbpedia:isSportsManager yes .
}",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
417,1,train,Give me the child of Christian X of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?person .
  ?person a dbpedia:Person;
    dbpedia:name ""Christian X of Denmark"" ;
    dbpedia:birthDate ""1889-04-21""^^xsd:date .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
456,15,train,"Give me the actor of the movie, that is a work and a television show, with Ross Newton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Ross_Newton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#

SELECT ?actor
WHERE {
  ?movie a dbpedia:Film;
    dbpedia:actor ?actor .
  ?tv_show a dbpedia:TelevisionSeries;
    dbpedia:actor ?actor .
  ?actor rdfs:label ""Ross Newton"" .
}
```",2,4,3,2,1,3,3,71,0,0,29,0,0.0,0
917,15,train,"Who is the child, that is a royalty, of the mayor of Hawaiian Kingdom?",SELECT ?result WHERE { <http://dbpedia.org/resource/Hawaiian_Kingdom> <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?childName ?royaltyStatus
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Hawaii"";
    dbpedia:parent ?mayor .
  ?person a dbpedia:Person;
    dbpedia:royaltyStatus ?royaltyStatus .
  FILTER (?mayor = <http://dbpedia.org/ontology/Mayor_of_Hawaii>)
}",2,3,3,2,1,3,3,71,0,0,8,0,0.0,0
579,7,train,"Give me the native of the residence, that is English and a settlement, of Alan Clyne.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Alan_Clyne> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:nationality dbpedia:United_Kingdom .
  OPTIONAL { ?person a dbpedia:Person; dbpedia:deathPlace ?deathPlace . }
  FILTER (lang(?birthPlace) = ""en"" )  # Ensures the birthplace is in English
}",2,4,3,2,1,3,2,20,0,0,1711,0,0.0,0
216,20,train,"Give me the player in Igor Bišćan and player in the coach, that is a soccer player and a sports manager and a soccer manager, of Bosnia and Herzegovina national under-18 football team.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Bosnia_and_Herzegovina_national_under-18_football_team> <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Igor_Bišćan> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?player ?coach
WHERE {
  ?player a dbpedia:Person;
    dbpedia:birthPlace <en>bn</en>;
    dbpedia:sport soccer .
  ?coach a dbpedia:Person;
    dbpedia:role [ daml:onProperty dbpedia:managerRole; daml:allValuesIncludesExactly coach, manager ] .
  ?player dbpedia:playedFor ?coach .
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
216,9,train,Give me the administration of  and party of Campbell Newman.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Campbell_Newman> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/property/leader> """"@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?administration ?party
WHERE {
  ?person rdf:type dbpedia:Person;
    dbpedia:name ""Campbell Newman""@en .
  ?person dbpedia:political_office ?administration .
  ?person dbpedia:political_party ?party .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
445,8,train,Give me the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?award
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""George H. Cameron""@en .
  ?person dbpedia:office dbpedia:Premier_of_Alberta .
  ?person dbpedia:party dbpedia:AlbertaSocialCreditParty .
  ?person dbpedia:term_start 1935.
  ?person dbpedia:term_end 1943.
  OPTIONAL {
    ?award rdfs:label ?award_label .
  }
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
892,21,train,Give me the entity in the profession of Henri Crolla and entity in Province of Reggio Emilia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Henri_Crolla> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Reggio_Emilia> . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Find Henri Crolla and his profession
SELECT ?person ?profession
WHERE {
  ?person a dbpedia:Person;
    rdfs:label ""Henri Crolla""@en .
  ?person foaf:profession ?profession .
}

# Find the Province of Reggio Emilia and its parent regions
SELECT ?province ?parentRegion
WHERE {
  ?province a dbpedia:Region;
    rdfs:label ""Reggio Emilia""@en .
  ?province dbpedia:isPartOf ?parentRegion .
}
```",3,3,4,2,2,3,3,71,0,0,40,0,0.0,0
236,10,train,"Give me the administration of the reference, that is an office holder and a politician, to James Madison.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""James Madison""@en . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?officeHolder ?administrationPeriod
WHERE {
  ?officeHolder a dbpedia:OfficeHolder;
    dbpedia:officeTitle ""President of the United States"" .
  ?officeHolder a dbpedia:OfficeHolder;
    dbpedia:officeTitle ""U.S. Representative"" .
  ?officeHolder foaf:name ""James Madison"" .
  ?officeHolder dbpedia:termStartYear ?startYear.
  ?officeHolder dbpedia:termEndYear ?endYear.
  FILTER (AND (?startYear <= 1809) (<?endYear > 1809) )
  UNION
  {
    ?officeHolder a dbpedia:OfficeHolder;
      dbpedia:officeTitle ""President of the United States"" .
    ?officeHolder foaf:name ""James Madison"" .
    ?officeHolder dbpedia:termStartYear ?startYear.
    ?officeHolder dbpedia:termEndYear ?endYear.
    FILTER (AND (?startYear <= 1817) (<?endYear > 1817) )
  }
}
```",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
465,24,train,"Give me the spouse of the child, that is a royalty, of Ferdinand I, Holy Roman Emperor and successor of Renée of France.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Renée_of_France> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Ferdinand_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?v2 . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Ferdinand I, Holy Roman Emperor"";
    dbpedia:children ?child .
  ?child a dbpedia:Person;
    dbpedia:name ""Archduke Charles"";
    dbpedia:spouse ?spouse .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
976,15,train,"Who is the leader, that is a politician, of the administration, that is an organisation, of Kemal Kılıçdaroğlu?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Kemal_Kılıçdaroğlu> . },"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?leader
WHERE {
  ?party a dbpedia:PoliticalParty ;
            dbpedia:leader ?leader .
  ?person dbpedia:isLeaderOfParty ?party .
  ?person rdfs:label ""Kemal Kılıçdaroğlu""@en .
}",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
417,38,train,"Give me the child of the child, that is a royalty, of Frederick Francis III, Grand Duke of Mecklenburg-Schwerin and child of the father of Frederick IX of Denmark.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Francis_III,_Grand_Duke_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v3 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child1 ?child2
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:father dbpedia:Fredrik_Francis_III_of_Mecklenburg-Schwerin .
  ?person1 dbpedia:children ?child1 .
  ?person2 a dbpedia:Person;
    dbpedia:father dbpedia:Christian_XI_of_Denmark .
  ?person2 dbpedia:children ?child2 .
  ?child1 dbpedia:is_a rdf:Resource .
  ?child2 dbpedia:is_a rdf:Resource .
  FILTER (NOT EXISTS { ?child3 a dbpedia:Person; dbpedia:parent ?person2 })  # Ensure child2 is not a grandchild
}
```

This SPARQL query will find individuals who are children of Frederick Francis III and also ensure that the other parent is Christian IX of Denmark, thereby ensuring they are relevant to the question.",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
456,18,train,Give me the spouse of Danielle Spencer (Australian actress) and professional in  and band of Alan Doyle.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Danielle_Spencer_(Australian_actress)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Alan_Doyle> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Danielle Spencer""@en .
  ?band a dbpedia:Band;
    dbpedia:name ""Great Big Sea""@en .
  ?person dbpedia:partner ?spouse .
  ?band dbpedia:members ?person .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
417,29,train,Give me the spouse of Princess Caroline-Mathilde of Denmark and child of the father of Frederick IX of Denmark and child of Alexandrine of Mecklenburg-Schwerin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . <http://dbpedia.org/resource/Frederick_IX_of_Denmark> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/property/father> ?v3 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse ?child
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Princess Caroline-Mathilde of Denmark"" .
  ?person dbpedia:wife ?spouse .
  ?person dbpedia:child ?child .
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
98,9,train,Give me the birth place of Paolo Ballesteros and entity in Philippines.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Philippines> . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?entityInPhilippines
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Paolo Ballesteros"" .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ?entityLabel .
  FILTER (lang(?entityLabel) = ""fil"")  # Filter for labels in Filipino language
}",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
465,9,train,"Give me the successor of Ercole II d'Este, Duke of Ferrara and spouse of Archduchess Barbara of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ercole_II_d'Este,_Duke_of_Ferrara> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Archduchess_Barbara_of_Austria> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?successor ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Ercole II d'Este, Duke of Ferrara"";
    dbpedia:spouse dbpedia:Archduchess Barbara of Austria .
  ?person successor ?successor .
  ?successor a dbpedia:OfficeHolder ;
    dbpedia:office dbpedia:Duke_of_Ferrara .
  OPTIONAL { ?successor dbpedia:birthPlace ?birthPlace }
  OPTIONAL { ?successor dbpedia:deathPlace ?deathPlace }
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
274,2,train,Give me the associated musical artist of Cecil Taylor.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cecil_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?associatedArtist WHERE {
  ?cecilTaylor a dbpedia:Person;
    dbpedia:genre [ owl:sameAs ""Jazz"" ] .
  ?associatedArtist a dbpedia:Person;
    dbpedia:genre [ owl:sameAs ""Jazz"" ];
    dbpedia:artistRole [ owl:sameAs ""Musician"" ] .
}
```",1,1,2,1,1,2,3,28,0,0,14,0,0.0,0
965,0,train,Give me the spouse of Prince Louis of Battenberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1854-06-01"";
    dbpedia:deathDate ""1921-11-13"";
    dbpedia:spouse ?spouse .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
987,38,train,"Give me the birth place of the actor of All for Free and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/All_for_Free> <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:role dbpedia:Mohammad_Ali_Khan_(actor) .
  ?actor a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  OPTIONAL { ?actor a dbpedia:Person; dbpedia:deathPlace ?deathPlace . }
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
459,3,train,"Give me the death place, that is a settlement, of Cliff Roquemore.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cliff_Roquemore> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person rdfs:label ""Cliff Roquemore"" .
}
```",1,2,2,1,1,2,3,28,0,0,2,0,0.0,0
465,16,train,"Give me the child, that is a royalty, of the parent of Elizabeth of Austria (1526–1545).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Elizabeth_of_Austria_(1526–1545)> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },,2,3,3,2,1,3,3,71,0,0,11,0,0.0,0
433,25,train,Give me the associated musical artist of Bill Evans and professional in the profession of Bob Marley.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Marley> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?associated_artist_with_bill_evans ?bob_marley_occupation
WHERE {
  ?bill_evans a dbpedia:MusicalArtist;
    dbpedia:genre ""Jazz"" .
  ?bob_marley a dbpedia:Person;
    dbpedia:birthDate ""1945-02-06"";
    dbpedia:deathDate ""1981-05-11"";
    dbpedia:occupation ""Musician"";
    dbpedia:musicGenre ""Reggae"" .
  ?bill_evans dbpedia:associatedWith ?associated_artist_with_bill_evans .
  ?bob_marley rdfs:label ""Bob Marley"" .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
888,8,train,Give me the awardee of the award of Oleksandr Syrskyi.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Oleksandr_Syrskyi> <http://dbpedia.org/property/awards> ?v0 . },"Given that we don't have the exact name of the award, let's assume it's a hypothetical award called ""X"". The SPARQL query would be structured to find the person who received this award:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee
WHERE {
  ?person a dbpedia:Person;
    dbpedia:recipientOfAward ?award .
  ?award a dbpedia:Award ;
            dbpedia:name ""X"" .
}
```

This query looks for a person (`?person`) who is the recipient of an award (`?award`) named ""X"".",2,2,3,2,1,3,2,20,0,0,14,0,0.0,0
645,6,train,"Give me the force, that is an event and a military conflict and a societal event, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?force
WHERE {
  ?event a dbpedia:Event;
    dbpedia:instanceOf dbpedia:Conflict .
  ?event dbpedia:hasCombatant ?force .
  ?event rdfs:label ""Spanish Civil War"" .
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
329,13,train,Give me the entity in United Kingdom and birthplace of the author of The Tailor and Ansty.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/The_Tailor_and_Ansty> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Arnold Bennet""@en .
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?birthPlace geo:locatedIn <http://dbpedia.org/ontology/UnitedKingdom> .
  ?deathPlace geo:locatedIn <http://dbpedia.org/ontology/UnitedKingdom>
}",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
18,12,train,"Give me the professional in  and alumnus of Marymount College, Tarrytown and parent of Liza Huber.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Liza_Huber> . ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Marymount_College,_Tarrytown> . ?result <http://dbpedia.org/property/occupation> """"@en . }","SELECT ?name ?birthPlace ?deathPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen""@en .
  ?person dbpedia:alumniOf dbpedia:Marymount_Tarrytown_School ; # Assuming Marymount College, Tarrytown is represented under this schema
    dbpedia:birthPlace ?birthPlace .
  ?person a dbpedia:Person;
    dbpedia:deathPlace ?deathPlace .
  ?person dbpedia:hasChild dbpedia:Liza_Huber . # Linking to his child Liza Huber
}",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
865,13,train,"Give me the father of the child, that is a politician, of Abu Ahmad Abdul Hafiz.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Abu_Ahmad_Abdul_Hafiz> . ?v1 <http://dbpedia.org/property/father> ?result . },"Given the reasoning above, the SPARQL query to find the father of Abu Ahmad Abdul Hafiz, assuming he is a person with a known birth and parentage in DBpedia's ontology, would be:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?father
WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasParent ?parent .
  ?parent a dbpedia:Person;
    dbpedia:name ""Abu Ahmad Abdul Hafiz"" .
  ?child dbpedia:birthDate [is <2019-01-01>]; # Placeholder for actual birth date
}
```

This query assumes that Abu Ahmad's child is also documented in DBpedia and that there is a direct link from the child to their parent (Abu Ahmad). The exact birth date of Abu Ahmad would need to be specified for a more precise query.",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
459,1,train,Give me the governor of Dana Murphy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dana_Murphy> <http://dbpedia.org/property/governor> ?result . },"Given that DBpedia organizes its data around ontologies, we can use the `dbpedia:Governor` property to find the governor of a specific location. Assuming ""Dana Murphy"" refers to a town or region in a specific state or country, we need to specify this in our SPARQL query.

However, without explicit information about the exact geographical scope of ""Dana Murphy,"" we'll assume it's a locality within the United States (given the context of the question). We can use the `dbpedia:UnitedStates` as a broader context and then narrow it down further if necessary.

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?governor
WHERE {
  ?person a dbpedia:Person;
    dbpedia:office dbpedia:Governor ;
    dbpedia:officeLocation dbpedia:UnitedStates .
  ?person dbpedia:name ""Dana Murphy"" .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
839,9,train,Give me the band of Peter Schorowsky and band of Kevin Russell (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Peter_Schorowsky> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?bandName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:givenName ""Peter"" .
  ?person rdfs:member ?band .
  FILTER (lang(?band) = ""en"")  # Assuming English language for band names
}
AND
{
  ?person a dbpedia:Person;
    dbpedia:givenName ""Kevin"" .
  ?person rdfs:member ?band .
  FILTER (lang(?band) = ""en"")
}
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
5,10,train,"Give me the award of the associated musical artist, that is a band, of Rubén Colón Tarrats.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Rubén_Colón_Tarrats> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?award
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Rubén Colón Tarrats""@en .
  ?band a dbo:Band ;
    dbpedia:members ?person ;
    dbpedia:awards ?award .
}
```",2,3,3,2,1,3,2,20,0,0,7,0,0.0,0
507,39,train,Give me the professional in the profession of the person born on 1966-02-18 and director of Entertaining Mr Sloane (film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1966-02-18""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Entertaining_Mr_Sloane_(film)> <http://dbpedia.org/ontology/director> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ""1966-02-18"" .
  ?person rdfs:label ?name .
  ?person dbpedia:filmDirected ""Entertaining Mr Sloane"" .
  FILTER (?name = ""Name of the director"")
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
965,11,train,Give me the spouse of the spouse of Princess Victoria of Hesse and by Rhine.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_of_Hesse_and_by_Rhine> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse_of_spouse
WHERE {
  ?person1 a dbpedia:Person;
    dbpedia:spouse ?person2 .
  ?person2 a dbpedia:Person;
    dbpedia:spouse ?spouse_of_person2 .
  ?spouse_of_person2 a dbpedia:Person .
}",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
433,19,train,"Give me the associated musical artist of the person born, that is a musical artist and an artist, as Paul Laurence Dunbar Chambers Jr. and associated musical artist of Bill Evans.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bill_Evans> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Paul Laurence Dunbar Chambers Jr.""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?associatedBand
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthDate ?birthDate .
  ?person rdfs:label ""Paul Laurence Dunbar Chambers Jr."" .
  OPTIONAL { 
    ?person dbpedia:associatedBand ?associatedBand .
  }
  
  ?anotherPerson a dbpedia:Person;
    dbpedia:birthDate ?birthDate .
  ?anotherPerson rdfs:label ""Bill Evans"" .
  OPTIONAL { 
    ?anotherPerson dbpedia:associatedBand ?associatedBand .
  }
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
98,6,train,Give me the birth place of Paolo Ballesteros and region of Philippine Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Philippine_Standard_Time> . <http://dbpedia.org/resource/Paolo_Ballesteros> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace ?timeZoneRegion
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Paolo Ballesteros""@en .
  ?person dbpedia:birthPlace ?birthPlace .
  ?person rdfs:label ?nameLabel .
  ?timeZoneRegion rdfs:label ""Philippine Standard Time""@en .
  ?person rdfs:label ?nameLabel .
  FILTER (lang(?nameLabel) = ""en"")
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
267,0,train,Give me the coach of Iran national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Iran_national_football_team> <http://dbpedia.org/ontology/coach> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?coach
WHERE {
  ?team dbpedia:homeGround ?ground .
  ?team rdfs:label ""Iran national football team""@en .
  ?coach a dbpedia:SportsPerson;
    dbpedia:sport ""Football (soccer)""@en;
    dbpedia:role ""Head coach""@en;
    dbpedia:club ?team .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
166,14,train,"Give me the entity in the territory administered, that is a country, from the reference to Madrid.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Madrid""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?country
WHERE {
  ?madrid dbpedia:capital ?capital .
  ?capital dbpedia:locatedIn ?country .
  ?country a dbpedia:Country
}",3,4,4,3,1,3,2,20,0,0,12023,0,0.0,0
443,0,train,Give me the landmark at elevation of 28.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""28""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?landmark
WHERE {
  ?landmark a dbo:Landmark;
    dbo:elevationInMetres 28 .
}
```",1,1,2,1,1,2,3,28,0,0,349,0,0.0,0
791,7,train,"Give me the father, that is a royalty and an office holder, of Emperor Antoku.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Emperor_Antoku> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?father
WHERE {
  ?emperor a dbpedia:Person;
    dbpedia:birthDate ""1775"";
    dbpedia:deathDate ""1862"";
    dbpedia:monarchyType ""Mughal Emperor"";
    dbpedia:reignStart ""1837"";
    dbpedia:reignEnd ""1857"".
  ?father a dbpedia:Person;
    dbpedia:name ""Muhammad Ali Shah"".
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
495,13,train,Give me the child of the father of the parent of Princess Catherine of Württemberg.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Catherine_of_Württemberg> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?grandparent a dbpedia:Person;
    dbpedia:father ?parent .
  ?parent a dbpedia:Person;
    dbpedia:child ?child .
}
```",3,3,4,3,1,3,2,20,0,1891,8,0.0,0.0,0
926,14,train,"Give me the child of the father, that is a royalty, of Mustafa III.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:monarchOf dbpedia:Ottoman_Empire ;
    dbpedia:name ""Mustafa III (Abdul Hamid I)"" .
  ?child a dbpedia:Person;
    dbpedia:parent ?parent;
    dbpedia:royalty true .
}
```",2,3,3,2,1,3,3,71,0,0,11,0,0.0,0
236,6,train,Give me the party member of Democratic-Republican Party and party member of Federalist Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Federalist_Party> . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic-Republican_Party> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?member
WHERE {
  ?member a dbpedia:Person;
    dbpedia:politicalAffiliation [ owl:propertyValue ""Democratic-Republican Party"" ] .
  ?member a dbpedia:Person;
    dbpedia:politicalAffiliation [ owl:propertyValue ""Federalist Party"" ] .
}",2,2,3,1,2,3,2,20,0,0,18,0,0.0,0
98,6,train,Give me the child of the child of Emperor Toba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Emperor_Toba> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandchild
WHERE {
  ?parent a dbpedia:Person;
    dbpedia:parent ?grandparent .
  ?grandparent a dbpedia:Person;
    dbpedia:title ""Emperor Toba"" .
  ?parent a dbpedia:Person;
    dbpedia:child ?child .
  ?child a dbpedia:Person;
    dbpedia:child ?grandchild .
}
```",2,2,3,2,1,2,2,9,0,0,3,0,0.0,0
965,36,train,"Give me the parent of the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven and spouse of Prince Louis of Battenberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_Louis_of_Battenberg> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?nobleParent
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthName ""George Mountbatten, 2nd Marquess of Milford Haven"";
    dbpedia:parent ?parent .
  ?parent a dbpedia:Noble ;
    rdfs:label ?nobleLabel .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
965,7,train,"Give me the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?result . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ?birthName .
  ?person rdfs:label ""George Mountbatten, 2nd Marquess of Milford Haven""@en .
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
417,31,train,"Give me the spouse of the parent, that is a royalty, of the child of Knud, Hereditary Prince of Denmark and child of Christian X of Denmark.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Knud,_Hereditary_Prince_of_Denmark> . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?royalSpouse
WHERE {
  ?child a dbpedia:Person;
    dbpedia:parent ?parent .
  ?parent a dbpedia:Person;
    rdfs:label ""Christian X of Denmark""@en ;
    dbpedia:children ?knud .
  ?knud a dbpedia:Person;
    rdfs:label ""Knud, Hereditary Prince of Denmark""@en .
  ?parent dbpedia:spouse ?royalSpouse .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
926,21,train,Give me the father of the father of Abdulaziz and child of Ahmed III.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ahmed_III> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandfatherFather ?childOfAhmedIII
WHERE {
  ?sultan a dbpedia:Sultan_of_the_Ottoman_Empire;
    dbpedia:name ""Ahmed III"".
  ?sultan dbpedia:father ?father .
  ?father a dbpedia:Person .
  
  ?grandfather a dbpedia:Person;
    dbpedia:name ""Father of Ahmed III"" @prefix : <#>.
    
  ?child a dbpedia:Person;
    dbpedia:name ""Child of Ahmed III"".
    dbpedia:parent ?sultan .
}",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
926,25,train,"Give me the child of the father, that is a royalty, of Mustafa III and successor of Mustafa III.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Mustafa_III> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:name ""Mustafa III"";
    dbpedia:successor ?child .
  ?child a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace;
    dbpedia:deathPlace ?deathPlace .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
433,24,train,"Give me the professional in Musician and associated musical artist of the associated musical artist, that is an artist and a musical artist, of Scott LaFaro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?artistName AS ?associated_artist
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""Scott LaFaro"" .
  ?person dbpedia:occupation dbpedia:Musician .
  ?artist a dbpedia:Artist ;
    dbpedia:associatedWith ?person .
  ?artist a dbpedia:MusicalArtist .
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
5,13,train,"Give me the birthplace of the person born, that is a politician, as the award of Renata Adler.",SELECT ?result WHERE { <http://dbpedia.org/resource/Renata_Adler> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ?birthPlace .
  ?person dbpedia:predicate dbpedia:P31 ; # P31 is the predicate for being a politician
    dbpedia:award dbpedia:Renata_Ader Award . # Renata Adler Award
}
```",3,4,4,3,1,3,2,20,0,0,222,0,0.0,0
417,18,train,Give me the spouse of Princess Caroline-Mathilde of Denmark and child of Alexandrine of Mecklenburg-Schwerin and child of Christian X of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Caroline-Mathilde_of_Denmark> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexandrine_of_Mecklenburg-Schwerin> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_X_of_Denmark> . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT ?spouse ?child WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Denmark"";
    dbpedia:mother dbpedia:Alexandrine_of_Mecklenburg-Schwerin ;
    dbpedia:father dbpedia:Christian_X_of_Denmark ;
    dbpedia:sibling ?sibling .
  ?child a dbpedia:Person;
    dbpedia:parent ?person .
  FILTER (DISTINCT ?child rdf:type <http://dbpedia.org/ontology/Child>) .
  ?sibling a dbpedia:Person;
    dbpedia:spouse ?spouse .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
102,10,train,"Give me the residence, that is English and a settlement, of the resident, that is an athlete, of Dewsbury.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Dewsbury> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace WHERE {
  ?athlete a dbpedia:Athlete;
    dbpedia:residence ?birthPlace .
  ?athlete dbpedia:nationality ""English"" .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
281,12,train,Give me the awardee of Volunteer Decoration and commander in New Guinea campaign and awardee of Medal bar.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_bar> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Volunteer_Decoration> . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?awardee
WHERE {
  ?person a dbpedia:Person;
    dbpedia:awardedDbpediaTerm ""Volunteer Decoration"";
    dbpedia:roleInMilitaryConflict ""New Guinea campaign"" .
  ?person a dbpedia:Person;
    dbpedia:awardedDbpediaTerm ""Medal bar"";
    dbpedia:roleInMilitaryConflict ""New Guinea campaign"" .
  ?person rdfs:seeAlso <http://dbpedia.org/page/%23New_Guinea_campaign> .
}",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
83,9,train,"Give me the birthplace, that is a town and Brazilian and a soccer club, of the member, that is a sports manager, of Kedah FA.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kedah_FA> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Brazil>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthPlace
WHERE {
  ?manager a dbpedia:Person;
    dbpedia:role dbpedia:SoccerManager ;
    dbpedia:clubMember dbpedia:Kedah_F.A. .
  ?manager dbpedia:birthPlace ?birthPlace .
}
LIMIT 1",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
826,9,train,"Give me the successor of Louis II, Grand Duke of Hesse and spouse of Anna Magdalena Appel.","SELECT ?result WHERE { <http://dbpedia.org/resource/Anna_Magdalena_Appel> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?successorSpouse
WHERE {
  ?person a dbpedia:Person;
    dbpedia:title ""Louis II, Grand Duke of Hesse"" .
  ?person dbpedia:spouse ?successorSpouse .
  ?successorSpouse a dbpedia:Person; rdfs:label ""Anna Magdalena Appel""@de.
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
281,4,train,"Give me the award, that is a military conflict, of Lawrence Moore Cosgrave.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?award
WHERE {
  ?person a dbpedia:Person;
    dbpedia:birthPlace ""Ireland"";
    dbpedia:deathPlace ""India"";
    dbpedia:recipientOfAward ?award .
  ?person rdf:type dbpedia:BritishSoldier ;
    dbpedia:participatedInConflict ""Indian Rebellion of 1857"" .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
987,5,train,"Give me the show, that is a film, with Emir Hadžihafizbegović.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emir_Hadžihafizbegović> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?show
WHERE {
  ?actor a dbpedia:Person;
    dbpedia:roleInFilm [ dbpedia:filmTitle ""The Lord of the Rings"" ] .
  ?actor dbpedia:fullName ""Emir Hadžihafizbegović"" .
  ?film a dbpedia:Film;
    dbpedia:director ""Peter Jackson"" .
  ?show a dbpedia:TelevisionSeries ;
    dbpedia:hasMainCharacter ?actor .
}
```",1,2,2,1,1,3,3,71,0,0,15,0,0.0,0
965,17,train,"Give me the person born, that is a noble, as the birth name of George Mountbatten, 2nd Marquess of Milford Haven.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Mountbatten,_2nd_Marquess_of_Milford_Haven> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?birthName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ?name .
  ?person dbpedia:birthName ?birthName .
  FILTER (?name = ""George Mountbatten, 2nd Marquess of Milford Haven"") .
}",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
773,21,train,Give me the spouse of the father of Charles the Fat and parent of Charles the Fat.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_the_Fat> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?wife_of_louis WHERE {
  ?father dbpedia:Louis_the_Pious ;
    dbpedia:parent ?child .
  ?child a dbpedia:Person;
    dbpedia:name ""Charles the Fat"" .
  ?father rdfs:father ?grandfather .
  ?grandfather dbpedia:Charlemagne ;
    dbpedia:spouse ?wife_of_louis .
}
```

This SPARQL query looks for the spouse of Louis the Pious (`?wife_of_louis`) by navigating through the parent-child relationships and then linking to spouses through the Charlemagne lineage.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
839,3,train,Give me the persona of Kevin Russell (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Kevin_Russell_(musician)> <http://xmlns.com/foaf/0.1/givenName> ?result . },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?persona
WHERE {
  ?person a dbpedia:Person;
    dbpedia:occupation ""Musician"";
    rdfs:label ?persona .
  FILTER (lang(?persona) = ""en"")  # To filter results in English
}",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
281,14,train,"Give me the awardee of the award, that is a military conflict, of Lawrence Moore Cosgrave and commander in New Guinea campaign.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Lawrence_Moore_Cosgrave> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/New_Guinea_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?awardee
WHERE {
  ?person a dbpedia:Person;
    dbpedia:recipientOfMilitaryHonour dbpedia:VictoriaCross ;
    dbpedia:participatedInMilitaryConflict dbpedia:New_Guinea_Campaign .
  ?person rdfs:label ""Lawrence Moore Cosgrave""@en .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
926,11,train,Give me the father of the father of Abdulaziz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Abdulaziz> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"To retrieve this information from DBpedia, we can construct a SPARQL query that follows these steps:

1. Identify the person AK Abdul Momen.
2. Retrieve his father's name (Muhammad Abdullah).
3. Retrieve the father's father's name (which would be Abdul Momen's grandfather).

Here is the corresponding SPARQL query:

```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

SELECT ?grandfatherName
WHERE {
  ?person a dbpedia:Person;
    dbpedia:name ""AK Abdul Momen"" .
  ?person dbpedia:father ?father .
  ?father a dbpedia:Person;
    dbpedia:name ""Muhammad Abdullah"" .
  ?father dbpedia:father ?grandfather .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
826,28,train,"Give me the spouse of the child of Johann Heinrich Appel and predecessor of Louis IV, Grand Duke of Hesse and successor of Louis II, Grand Duke of Hesse.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""Johann Heinrich Appel""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Louis_IV,_Grand_Duke_of_Hesse> . <http://dbpedia.org/resource/Louis_II,_Grand_Duke_of_Hesse> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbpedia: <http://dbpedia.org/ontology/>

# Step 1: Identify Johann Heinrich Appel's children
SELECT ?child WHERE {
  ?parent a dbpedia:Person;
    dbpedia:hasChild ?child .
  ?parent dbpedia:name ""Johann Heinrich Appel"" .
}

# Step 2: Determine the spouse(s) of those children
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?child ?spouse WHERE {
  ?child a dbpedia:Person;
    dbpedia:hasSpouse ?spouse .
  ?child foaf:name ?childName . 
  FILTER (regex(str(?childName), ""Johann"")) .
}

# Step 3: Find out who was the predecessor of Louis IV, Grand Duke of Hesse
SELECT ?predecessor WHERE {
  ?person a dbpedia:Person;
    dbpedia:precededBy ?predecessor .
  ?person dbpedia:name ""Louis IV, Grand Duke of Hesse"" .
}

# Step 4: Determine the successor of Louis IV, Grand Duke of Hesse
SELECT ?successor WHERE {
  ?person a dbpedia:Person;
    dbpedia:succeededBy ?successor .
  ?person dbpedia:name ""Louis IV, Grand Duke of Hesse"" .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
365,8,train,"Give me the spouse of the native, that is a politician, of Poltava Governorate.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Poltava_Governorate> . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbpedia: <http://dbpedia.org/ontology/>
SELECT ?spouse
WHERE {
  ?politician a dbpedia:Person;
    dbpedia:office ""Poltava Governorate"";
    dbpedia:role ""Politician"" .
  ?politician wdt:P31 ?politician ;
    dbpedia:spouse ?spouse .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
